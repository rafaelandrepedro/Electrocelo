

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jul 19 10:17:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text210,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   240                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   241  0000                     
   242                           ; Version 2.36
   243                           ; Generated 28/01/2022 GMT
   244                           ; 
   245                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution. Publication is not required when
   259                           ;        this file is used in an embedded application.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18F46K40 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataBANK0
   279  009EBA                     __pidataBANK0:
   280                           	callstack 0
   281                           
   282                           ;initializer for _auxCounter
   283  009EBA  03E8               	dw	1000
   284                           
   285                           	psect	idataBANK1
   286  009EC4                     __pidataBANK1:
   287                           	callstack 0
   288                           
   289                           ;initializer for _firstselectflag
   290  009EC4  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  009E58                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _tempCounter
   297  009E58  3DDD               	dw	15837
   298  009E5A  000F               	dw	15
   299                           
   300                           ;initializer for _zeroCrossingWaitTime
   301  009E5C  19                 	db	25
   302  009E5D  19                 	db	25
   303                           
   304                           	psect	idataBANK3
   305  009A62                     __pidataBANK3:
   306                           	callstack 0
   307                           
   308                           ;initializer for _DispTable
   309  009A62  6F                 	db	111
   310  009A63  21                 	db	33
   311  009A64  76                 	db	118
   312  009A65  73                 	db	115
   313  009A66  39                 	db	57
   314  009A67  5B                 	db	91
   315  009A68  5F                 	db	95
   316  009A69  61                 	db	97
   317  009A6A  7F                 	db	127
   318  009A6B  7B                 	db	123
   319  009A6C  7D                 	db	125
   320  009A6D  7F                 	db	127
   321  009A6E  4E                 	db	78
   322  009A6F  37                 	db	55
   323  009A70  5E                 	db	94
   324  009A71  5C                 	db	92
   325  009A72  7C                 	db	124
   326  009A73  3D                 	db	61
   327  009A74  0E                 	db	14
   328  009A75  2F                 	db	47
   329  009A76  14                 	db	20
   330  009A77  1E                 	db	30
   331  009A78  07                 	db	7
   332  009A79  45                 	db	69
   333  009A7A  10                 	db	16
   334  009A7B  0C                 	db	12
   335  009A7C  40                 	db	64
   336  009A7D  20                 	db	32
   337  009A7E  01                 	db	1
   338  009A7F  02                 	db	2
   339  009A80  04                 	db	4
   340  009A81  08                 	db	8
   341  009A82  00                 	db	0
   342  009A83  3B                 	db	59
   343  009A84  1F                 	db	31
   344  009A85  16                 	db	22
   345  009A86  17                 	db	23
   346                           
   347                           	psect	smallconst
   348  000F00                     __psmallconst:
   349                           	callstack 0
   350  000F00  00                 	db	0
   351  000F01                     _i2c1_fsmStateTable:
   352                           	callstack 0
   353  000F01  FE                 	db	low _I2C1_DO_IDLE
   354  000F02  9D                 	db	high _I2C1_DO_IDLE
   355  000F03  6A                 	db	low _I2C1_DO_SEND_ADR_READ
   356  000F04  9D                 	db	high _I2C1_DO_SEND_ADR_READ
   357  000F05  5C                 	db	low _I2C1_DO_SEND_ADR_WRITE
   358  000F06  9D                 	db	high _I2C1_DO_SEND_ADR_WRITE
   359  000F07  AA                 	db	low _I2C1_DO_TX
   360  000F08  82                 	db	high _I2C1_DO_TX
   361  000F09  48                 	db	low _I2C1_DO_RX
   362  000F0A  87                 	db	high _I2C1_DO_RX
   363  000F0B  F4                 	db	low _I2C1_DO_RCEN
   364  000F0C  9D                 	db	high _I2C1_DO_RCEN
   365  000F0D  64                 	db	low _I2C1_DO_TX_EMPTY
   366  000F0E  8D                 	db	high _I2C1_DO_TX_EMPTY
   367  000F0F  48                 	db	low _I2C1_DO_SEND_RESTART_READ
   368  000F10  9E                 	db	high _I2C1_DO_SEND_RESTART_READ
   369  000F11  40                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   370  000F12  9E                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   371  000F13  38                 	db	low _I2C1_DO_SEND_RESTART
   372  000F14  9E                 	db	high _I2C1_DO_SEND_RESTART
   373  000F15  30                 	db	low _I2C1_DO_SEND_STOP
   374  000F16  9E                 	db	high _I2C1_DO_SEND_STOP
   375  000F17  28                 	db	low _I2C1_DO_RX_ACK
   376  000F18  9E                 	db	high _I2C1_DO_RX_ACK
   377  000F19  20                 	db	low _I2C1_DO_RX_NACK_STOP
   378  000F1A  9E                 	db	high _I2C1_DO_RX_NACK_STOP
   379  000F1B  18                 	db	low _I2C1_DO_RX_NACK_RESTART
   380  000F1C  9E                 	db	high _I2C1_DO_RX_NACK_RESTART
   381  000F1D  EA                 	db	low _I2C1_DO_RESET
   382  000F1E  9D                 	db	high _I2C1_DO_RESET
   383  000F1F  78                 	db	low _I2C1_DO_ADDRESS_NACK
   384  000F20  92                 	db	high _I2C1_DO_ADDRESS_NACK
   385  000F21                     __end_of_i2c1_fsmStateTable:
   386                           	callstack 0
   387  0000                     _T2CON	set	4029
   388  0000                     _T1CON	set	4047
   389  0000                     _T1CLK	set	4050
   390  0000                     _T1GATE	set	4049
   391  0000                     _T0CON0	set	4053
   392  0000                     _INLVLD	set	3874
   393  0000                     _SLRCOND	set	3875
   394  0000                     _ODCOND	set	3876
   395  0000                     _WPUD	set	3877
   396  0000                     _TRISD	set	3979
   397  0000                     _TRISC	set	3978
   398  0000                     _TRISB	set	3977
   399  0000                     _TRISA	set	3976
   400  0000                     _TRISE	set	3980
   401  0000                     _LATC	set	3973
   402  0000                     _LATB	set	3972
   403  0000                     _OSCTUNE	set	3805
   404  0000                     _OSCFRQ	set	3806
   405  0000                     _ADERRL	set	3950
   406  0000                     _ADERRH	set	3951
   407  0000                     _ADPREVL	set	3937
   408  0000                     _ADPREVH	set	3938
   409  0000                     _ADFLTRL	set	3954
   410  0000                     _ADFLTRH	set	3955
   411  0000                     _ADACCL	set	3952
   412  0000                     _ADACCH	set	3953
   413  0000                     _ADCNT	set	3943
   414  0000                     _ADRESL	set	3939
   415  0000                     _ADRESH	set	3940
   416  0000                     _ADACQ	set	3932
   417  0000                     _ADCON0	set	3936
   418  0000                     _ADCLK	set	3927
   419  0000                     _ADSTAT	set	3941
   420  0000                     _ADCON3	set	3931
   421  0000                     _ADCON2	set	3930
   422  0000                     _ADPRE	set	3934
   423  0000                     _ADSTPTH	set	3945
   424  0000                     _ADUTHH	set	3949
   425  0000                     _ADUTHL	set	3948
   426  0000                     _ADLTHH	set	3947
   427  0000                     _SP1BRGH	set	3996
   428  0000                     _TX1STA	set	3998
   429  000F21  00                 	db	0	; dummy byte at the end
   430  0000                     
   431                           	psect	nvBANK1
   432  0001FE                     __pnvBANK1:
   433                           	callstack 0
   434  0001FE                     _eusart1TxBufferRemaining:
   435                           	callstack 0
   436  0001FE                     	ds	1
   437                           
   438                           	psect	nvBANK2
   439  0002DB                     __pnvBANK2:
   440                           	callstack 0
   441  0002DB                     _TMR2_InterruptHandler:
   442                           	callstack 0
   443  0002DB                     	ds	2
   444  0002DD                     _TMR1_InterruptHandler:
   445                           	callstack 0
   446  0002DD                     	ds	2
   447  0002DF                     _timer1ReloadVal:
   448                           	callstack 0
   449  0002DF                     	ds	2
   450  0002E1                     _TMR0_InterruptHandler:
   451                           	callstack 0
   452  0002E1                     	ds	2
   453  0002E3                     _EUSART1_ErrorHandler:
   454                           	callstack 0
   455  0002E3                     	ds	2
   456  0002E5                     _EUSART1_OverrunErrorHandler:
   457                           	callstack 0
   458  0002E5                     	ds	2
   459  0002E7                     _EUSART1_FramingErrorHandler:
   460                           	callstack 0
   461  0002E7                     	ds	2
   462  0002E9                     _EUSART1_RxDefaultInterruptHandler:
   463                           	callstack 0
   464  0002E9                     	ds	2
   465  0002EB                     _EUSART1_TxDefaultInterruptHandler:
   466                           	callstack 0
   467  0002EB                     	ds	2
   468  0000                     _WDTCON0bits	set	3794
   469  0000                     _TMR0IE	set	30229
   470  0000                     _TMR0IF	set	30293
   471  0000                     _LATEbits	set	3975
   472  0000                     _LATDbits	set	3974
   473  0000                     _LATAbits	set	3971
   474  0000                     _LATCbits	set	3973
   475  0000                     _PORTB	set	3982
   476  0000                     _T1CONbits	set	4047
   477  0000                     _SSP1CON2bits	set	3991
   478  0000                     _SSP1CON1bits	set	3990
   479  0000                     _ADCON0bits	set	3936
   480  0000                     _RC1STAbits	set	3997
   481  0000                     _GIE	set	32663
   482  0000                     _RX1PPS	set	3765
   483  0000                     _SSP1CLKPPS	set	3767
   484  0000                     _PIE0bits	set	3778
   485  0000                     _PIE3bits	set	3781
   486  0000                     _PIE4bits	set	3782
   487  0000                     _PIR0bits	set	3786
   488  0000                     _PIR3bits	set	3789
   489  0000                     _ADACT	set	3926
   490  0000                     _ADREF	set	3928
   491  0000                     _ADCON1	set	3929
   492  0000                     _ADCAP	set	3933
   493  0000                     _ADPCH	set	3935
   494  0000                     _ADRPT	set	3942
   495  0000                     _ADSTPTL	set	3944
   496  0000                     _ADLTHL	set	3946
   497  0000                     _RC1REG	set	3993
   498  0000                     _TX1REG	set	3994
   499  0000                     _SP1BRGL	set	3995
   500  0000                     _RC1STA	set	3997
   501  0000                     _BAUD1CON	set	3999
   502  0000                     _T2TMR	set	4027
   503  0000                     _T2PR	set	4028
   504  0000                     _T2HLT	set	4030
   505  0000                     _T2CLKCON	set	4031
   506  0000                     _TMR1L	set	4045
   507  0000                     _TMR1H	set	4046
   508  0000                     _T1GCON	set	4048
   509  0000                     _TMR0L	set	4051
   510  0000                     _TMR0H	set	4052
   511  0000                     _T0CON1	set	4054
   512  0000                     _PCON0bits	set	4055
   513  0000                     _INTCONbits	set	4082
   514  0000                     _LATA	set	3971
   515  0000                     _LATD	set	3974
   516  0000                     _LATE	set	3975
   517  0000                     _SSP1BUF	set	3986
   518  0000                     _SSP1ADD	set	3987
   519  0000                     _SSP1STAT	set	3989
   520  0000                     _SSP1CON2	set	3991
   521  0000                     _SSP1CON1	set	3990
   522  0000                     _WDTCON0	set	3794
   523  0000                     _OSCCON1	set	3800
   524  0000                     _PIR4bits	set	3790
   525  0000                     _OSCCON3	set	3802
   526  0000                     _OSCEN	set	3804
   527  0000                     _PMD0	set	3809
   528  0000                     _RC3PPS	set	3834
   529  0000                     _INLVLA	set	3853
   530  0000                     _SLRCONA	set	3854
   531  0000                     _ODCONA	set	3855
   532  0000                     _WPUA	set	3856
   533  0000                     _ANSELA	set	3857
   534  0000                     _ANSELB	set	3865
   535  0000                     _ANSELC	set	3873
   536  0000                     _ANSELD	set	3878
   537  0000                     _PMD5	set	3814
   538  0000                     _PMD4	set	3813
   539  0000                     _PMD3	set	3812
   540  0000                     _PMD2	set	3811
   541  0000                     _PMD1	set	3810
   542  0000                     _WDTCON1	set	3795
   543  0000                     _PORTEbits	set	3985
   544  0000                     _PORTBbits	set	3982
   545  0000                     _PORTAbits	set	3981
   546  0000                     _INLVLE	set	3882
   547  0000                     _SLRCONE	set	3883
   548  0000                     _ODCONE	set	3884
   549  0000                     _WPUE	set	3885
   550  0000                     _ANSELE	set	3886
   551  0000                     _INLVLC	set	3869
   552  0000                     _SLRCONC	set	3870
   553  0000                     _ODCONC	set	3871
   554  0000                     _WPUC	set	3872
   555  0000                     _INLVLB	set	3861
   556  0000                     _SLRCONB	set	3862
   557  0000                     _ODCONB	set	3863
   558  0000                     _WPUB	set	3864
   559  0000                     _IOCBN3	set	30875
   560  0000                     _IOCBP3	set	30883
   561  0000                     _SSP1DATPPS	set	3768
   562  0000                     _RC7PPS	set	3838
   563  0000                     _RC4PPS	set	3835
   564  0000                     _T2RST	set	4032
   565                           
   566                           ; #config settings
   567                           
   568                           	psect	cinit
   569  007C98                     __pcinit:
   570                           	callstack 0
   571  007C98                     start_initialization:
   572                           	callstack 0
   573  007C98                     __initialization:
   574                           	callstack 0
   575                           
   576                           ; Initialize objects allocated to BANK3 (37 bytes)
   577                           ; load TBLPTR registers with __pidataBANK3
   578  007C98  0E62               	movlw	low __pidataBANK3
   579  007C9A  6EF6               	movwf	tblptrl,c
   580  007C9C  0E9A               	movlw	high __pidataBANK3
   581  007C9E  6EF7               	movwf	tblptrh,c
   582  007CA0  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   583  007CA2  6EF8               	movwf	tblptru,c
   584  007CA4  EE03  F0D2         	lfsr	0,__pdataBANK3
   585  007CA8  EE10 F025          	lfsr	1,37
   586  007CAC                     copy_data0:
   587  007CAC  0009               	tblrd		*+
   588  007CAE  CFF5 FFEE          	movff	tablat,postinc0
   589  007CB2  50E5               	movf	postdec1,w,c
   590  007CB4  50E1               	movf	fsr1l,w,c
   591  007CB6  E1FA               	bnz	copy_data0
   592                           
   593                           ; Initialize objects allocated to BANK2 (6 bytes)
   594                           ; load TBLPTR registers with __pidataBANK2
   595  007CB8  0E58               	movlw	low __pidataBANK2
   596  007CBA  6EF6               	movwf	tblptrl,c
   597  007CBC  0E9E               	movlw	high __pidataBANK2
   598  007CBE  6EF7               	movwf	tblptrh,c
   599  007CC0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   600  007CC2  6EF8               	movwf	tblptru,c
   601  007CC4  EE02  F0F4         	lfsr	0,__pdataBANK2
   602  007CC8  EE10 F006          	lfsr	1,6
   603  007CCC                     copy_data1:
   604  007CCC  0009               	tblrd		*+
   605  007CCE  CFF5 FFEE          	movff	tablat,postinc0
   606  007CD2  50E5               	movf	postdec1,w,c
   607  007CD4  50E1               	movf	fsr1l,w,c
   608  007CD6  E1FA               	bnz	copy_data1
   609                           
   610                           ; Initialize objects allocated to BANK1 (1 bytes)
   611                           ; load TBLPTR registers with __pidataBANK1
   612  007CD8  0EC4               	movlw	low __pidataBANK1
   613  007CDA  6EF6               	movwf	tblptrl,c
   614  007CDC  0E9E               	movlw	high __pidataBANK1
   615  007CDE  6EF7               	movwf	tblptrh,c
   616  007CE0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   617  007CE2  6EF8               	movwf	tblptru,c
   618  007CE4  0009               	tblrd		*+	;fetch initializer
   619  007CE6  CFF5 F1FF          	movff	tablat,__pdataBANK1
   620                           
   621                           ; Initialize objects allocated to BANK0 (2 bytes)
   622                           ; load TBLPTR registers with __pidataBANK0
   623  007CEA  0EBA               	movlw	low __pidataBANK0
   624  007CEC  6EF6               	movwf	tblptrl,c
   625  007CEE  0E9E               	movlw	high __pidataBANK0
   626  007CF0  6EF7               	movwf	tblptrh,c
   627  007CF2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   628  007CF4  6EF8               	movwf	tblptru,c
   629  007CF6  0009               	tblrd		*+	;fetch initializer
   630  007CF8  CFF5 F0FC          	movff	tablat,__pdataBANK0
   631  007CFC  0009               	tblrd		*+	;fetch initializer
   632  007CFE  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   633                           
   634                           ; Clear objects allocated to BANK3 (210 bytes)
   635  007D02  EE03  F000         	lfsr	0,__pbssBANK3
   636  007D06  0ED2               	movlw	210
   637  007D08                     clear_0:
   638  007D08  6AEE               	clrf	postinc0,c
   639  007D0A  06E8               	decf	wreg,f,c
   640  007D0C  E1FD               	bnz	clear_0
   641                           
   642                           ; Clear objects allocated to BANK2 (219 bytes)
   643  007D0E  EE02  F000         	lfsr	0,__pbssBANK2
   644  007D12  0EDB               	movlw	219
   645  007D14                     clear_1:
   646  007D14  6AEE               	clrf	postinc0,c
   647  007D16  06E8               	decf	wreg,f,c
   648  007D18  E1FD               	bnz	clear_1
   649                           
   650                           ; Clear objects allocated to BANK1 (254 bytes)
   651  007D1A  EE01  F000         	lfsr	0,__pbssBANK1
   652  007D1E  0EFE               	movlw	254
   653  007D20                     clear_2:
   654  007D20  6AEE               	clrf	postinc0,c
   655  007D22  06E8               	decf	wreg,f,c
   656  007D24  E1FD               	bnz	clear_2
   657                           
   658                           ; Clear objects allocated to BANK0 (120 bytes)
   659  007D26  EE00  F060         	lfsr	0,__pbssBANK0
   660  007D2A  0E78               	movlw	120
   661  007D2C                     clear_3:
   662  007D2C  6AEE               	clrf	postinc0,c
   663  007D2E  06E8               	decf	wreg,f,c
   664  007D30  E1FD               	bnz	clear_3
   665                           
   666                           ; Clear objects allocated to COMRAM (21 bytes)
   667  007D32  EE00  F03B         	lfsr	0,__pbssCOMRAM
   668  007D36  0E15               	movlw	21
   669  007D38                     clear_4:
   670  007D38  6AEE               	clrf	postinc0,c
   671  007D3A  06E8               	decf	wreg,f,c
   672  007D3C  E1FD               	bnz	clear_4
   673  007D3E                     end_of_initialization:
   674                           	callstack 0
   675  007D3E                     __end_of__initialization:
   676                           	callstack 0
   677  007D3E  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   678  007D40  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   679  007D42  0100               	movlb	0
   680  007D44  EF5E  F034         	goto	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMRAM
   683  00003B                     __pbssCOMRAM:
   684                           	callstack 0
   685  00003B                     _rfCMD:
   686                           	callstack 0
   687  00003B                     	ds	11
   688  000046                     _edit_Param:
   689                           	callstack 0
   690  000046                     	ds	6
   691  00004C                     _button_struct:
   692                           	callstack 0
   693  00004C                     	ds	4
   694                           
   695                           	psect	bssBANK0
   696  000060                     __pbssBANK0:
   697                           	callstack 0
   698  000060                     _learn_st:
   699                           	callstack 0
   700  000060                     	ds	18
   701  000072                     _dispStruct:
   702                           	callstack 0
   703  000072                     	ds	6
   704  000078                     _brakeElectric_st:
   705                           	callstack 0
   706  000078                     	ds	2
   707  00007A                     _pointSync:
   708                           	callstack 0
   709  00007A                     	ds	2
   710  00007C                     _Hop:
   711                           	callstack 0
   712  00007C                     	ds	2
   713  00007E                     _RFcount:
   714                           	callstack 0
   715  00007E                     	ds	2
   716  000080                     _temp:
   717                           	callstack 0
   718  000080                     	ds	1
   719  000081                     _control_limit_switch:
   720                           	callstack 0
   721  000081                     	ds	1
   722  000082                     _fullmotorPower:
   723                           	callstack 0
   724  000082                     	ds	1
   725  000083                     _stateMotor:
   726                           	callstack 0
   727  000083                     	ds	1
   728  000084                     _zeroCrossingWaitTimeIdx:
   729                           	callstack 0
   730  000084                     	ds	1
   731  000085                     _programmer_enable:
   732                           	callstack 0
   733  000085                     	ds	1
   734  000086                     readbutton@key1:
   735                           	callstack 0
   736  000086                     	ds	1
   737  000087                     readRFButtons@keyType:
   738                           	callstack 0
   739  000087                     	ds	1
   740  000088                     readRFButtons@key1:
   741                           	callstack 0
   742  000088                     	ds	1
   743  000089                     _RFBit:
   744                           	callstack 0
   745  000089                     	ds	1
   746  00008A                     _RFFull_12BIT:
   747                           	callstack 0
   748  00008A                     	ds	1
   749  00008B                     _RFFull:
   750                           	callstack 0
   751  00008B                     	ds	1
   752  00008C                     _BitCount:
   753                           	callstack 0
   754  00008C                     	ds	1
   755  00008D                     _Bptr:
   756                           	callstack 0
   757  00008D                     	ds	1
   758  00008E                     _numberOfErrorCurrent:
   759                           	callstack 0
   760  00008E                     	ds	1
   761  00008F                     _idxAdcZeroAquisition:
   762                           	callstack 0
   763  00008F                     	ds	1
   764  000090                     _idxSaveEnergyADCHist:
   765                           	callstack 0
   766  000090                     	ds	1
   767  000091                     _idxAdcAquisition:
   768                           	callstack 0
   769  000091                     	ds	1
   770  000092                     _Counterchoose:
   771                           	callstack 0
   772  000092                     	ds	1
   773  000093                     _eusart1RxCount:
   774                           	callstack 0
   775  000093                     	ds	1
   776  000094                     _eusart1RxTail:
   777                           	callstack 0
   778  000094                     	ds	1
   779  000095                     _eusart1RxHead:
   780                           	callstack 0
   781  000095                     	ds	1
   782  000096                     _eusart1TxTail:
   783                           	callstack 0
   784  000096                     	ds	1
   785  000097                     _eusart1TxHead:
   786                           	callstack 0
   787  000097                     	ds	1
   788  000098                     _var_sys_NVM:
   789                           	callstack 0
   790  000098                     	ds	64
   791                           
   792                           	psect	dataBANK0
   793  0000FC                     __pdataBANK0:
   794                           	callstack 0
   795  0000FC                     _auxCounter:
   796                           	callstack 0
   797  0000FC                     	ds	2
   798                           
   799                           	psect	bssBANK1
   800  000100                     __pbssBANK1:
   801                           	callstack 0
   802  000100                     _var_sys:
   803                           	callstack 0
   804  000100                     	ds	81
   805  000151                     _menu_st:
   806                           	callstack 0
   807  000151                     	ds	25
   808  00016A                     _security:
   809                           	callstack 0
   810  00016A                     	ds	11
   811  000175                     _fimdecurso:
   812                           	callstack 0
   813  000175                     	ds	6
   814  00017B                     _powerControl_st:
   815                           	callstack 0
   816  00017B                     	ds	6
   817  000181                     readRFButtons@serial:
   818                           	callstack 0
   819  000181                     	ds	4
   820  000185                     eusartparser@buffer:
   821                           	callstack 0
   822  000185                     	ds	2
   823  000187                     _NextHop:
   824                           	callstack 0
   825  000187                     	ds	2
   826  000189                     readRFButtons@rollingCode:
   827                           	callstack 0
   828  000189                     	ds	2
   829  00018B                     _BufferRF_12BIT:
   830                           	callstack 0
   831  00018B                     	ds	2
   832  00018D                     _erroranterior:
   833                           	callstack 0
   834  00018D                     	ds	2
   835  00018F                     eusartparser@save_f:
   836                           	callstack 0
   837  00018F                     	ds	1
   838  000190                     _aux_in_auto_close:
   839                           	callstack 0
   840  000190                     	ds	1
   841  000191                     _aux_i:
   842                           	callstack 0
   843  000191                     	ds	1
   844  000192                     _Abertura_pedonal:
   845                           	callstack 0
   846  000192                     	ds	1
   847  000193                     _temppower:
   848                           	callstack 0
   849  000193                     	ds	1
   850  000194                     _difTime:
   851                           	callstack 0
   852  000194                     	ds	1
   853  000195                     _StateTRIAC:
   854                           	callstack 0
   855  000195                     	ds	1
   856  000196                     _waitZeroPeak:
   857                           	callstack 0
   858  000196                     	ds	1
   859  000197                     _zeroCrossing:
   860                           	callstack 0
   861  000197                     	ds	1
   862  000198                     _zeroCrossingLength:
   863                           	callstack 0
   864  000198                     	ds	1
   865  000199                     _lastKey:
   866                           	callstack 0
   867  000199                     	ds	1
   868  00019A                     _F2Chance:
   869                           	callstack 0
   870  00019A                     	ds	1
   871  00019B                     readbutton@key2:
   872                           	callstack 0
   873  00019B                     	ds	1
   874  00019C                     readRFButtons@typeRemote:
   875                           	callstack 0
   876  00019C                     	ds	1
   877  00019D                     _RFstate:
   878                           	callstack 0
   879  00019D                     	ds	1
   880  00019E                     _eusart1RxLastError:
   881                           	callstack 0
   882  00019E                     	ds	1
   883  00019F                     _ts_system:
   884                           	callstack 0
   885  00019F                     	ds	72
   886  0001E7                     _controlGate_stateMachine:
   887                           	callstack 0
   888  0001E7                     	ds	11
   889  0001F2                     _main_stateMachine:
   890                           	callstack 0
   891  0001F2                     	ds	11
   892  0001FD                     setValueToEdit@value:
   893                           	callstack 0
   894  0001FD                     	ds	1
   895                           
   896                           	psect	dataBANK1
   897  0001FF                     __pdataBANK1:
   898                           	callstack 0
   899  0001FF                     _firstselectflag:
   900                           	callstack 0
   901  0001FF                     	ds	1
   902                           
   903                           	psect	bssBANK2
   904  000200                     __pbssBANK2:
   905                           	callstack 0
   906  000200                     _ADC_array:
   907                           	callstack 0
   908  000200                     	ds	60
   909  00023C                     _I2C1_Status:
   910                           	callstack 0
   911  00023C                     	ds	36
   912  000260                     _SumEnergyADCHist_array:
   913                           	callstack 0
   914  000260                     	ds	20
   915  000274                     _eusart1RxStatusBuffer:
   916                           	callstack 0
   917  000274                     	ds	8
   918  00027C                     _eusart1RxBuffer:
   919                           	callstack 0
   920  00027C                     	ds	8
   921  000284                     _eusart1TxBuffer:
   922                           	callstack 0
   923  000284                     	ds	8
   924  00028C                     _EHop:
   925                           	callstack 0
   926  00028C                     	ds	2
   927  00028E                     _timer0ReloadVal16bit:
   928                           	callstack 0
   929  00028E                     	ds	2
   930  000290                     _classic_data:
   931                           	callstack 0
   932  000290                     	ds	16
   933  0002A0                     _memoryTEMP:
   934                           	callstack 0
   935  0002A0                     	ds	16
   936  0002B0                     _controlLearning_stateMachine:
   937                           	callstack 0
   938  0002B0                     	ds	11
   939  0002BB                     _menuConfiguration_stateMachine:
   940                           	callstack 0
   941  0002BB                     	ds	11
   942  0002C6                     _BufferRF:
   943                           	callstack 0
   944  0002C6                     	ds	9
   945  0002CF                     _DKEY:
   946                           	callstack 0
   947  0002CF                     	ds	8
   948  0002D7                     NormalKeyGen@SEED:
   949                           	callstack 0
   950  0002D7                     	ds	4
   951                           
   952                           	psect	dataBANK2
   953  0002F4                     __pdataBANK2:
   954                           	callstack 0
   955  0002F4                     _tempCounter:
   956                           	callstack 0
   957  0002F4                     	ds	4
   958  0002F8                     _zeroCrossingWaitTime:
   959                           	callstack 0
   960  0002F8                     	ds	2
   961                           
   962                           	psect	bssBANK3
   963  000300                     __pbssBANK3:
   964                           	callstack 0
   965  000300                     _listSyncValues:
   966                           	callstack 0
   967  000300                     	ds	150
   968  000396                     _ADC_zero_array:
   969                           	callstack 0
   970  000396                     	ds	60
   971                           
   972                           	psect	dataBANK3
   973  0003D2                     __pdataBANK3:
   974                           	callstack 0
   975  0003D2                     _DispTable:
   976                           	callstack 0
   977  0003D2                     	ds	37
   978                           
   979                           	psect	cstackBANK2
   980  0002ED                     __pcstackBANK2:
   981                           	callstack 0
   982  0002ED                     main@package:
   983                           	callstack 0
   984                           
   985                           ; 7 bytes @ 0x0
   986  0002ED                     	ds	7
   987                           
   988                           	psect	cstackBANK0
   989  0000D8                     __pcstackBANK0:
   990                           	callstack 0
   991  0000D8                     ??_keeloq_classic_decrypt_packet:
   992  0000D8                     ??_setPositionInvertionInClosing:
   993  0000D8                     ??_validateRemoteSerialNumber:
   994  0000D8                     ??_RemoveSerial:
   995  0000D8                     SaveNVM_VarSystem@page:
   996                           	callstack 0
   997  0000D8                     getStateOpenPosition@state:
   998                           	callstack 0
   999  0000D8                     saveNewSerial@tempSerial:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003  0000D8                     	ds	1
  1004  0000D9                     getStateOpenPosition@stateMotor:
  1005                           	callstack 0
  1006  0000D9                     SaveNVM_VarSystem@tempAdd:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1
  1010  0000D9                     	ds	1
  1011  0000DA                     ??_controlVelocity:
  1012  0000DA                     RemoveSerial@cmdType:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x2
  1016  0000DA                     	ds	1
  1017  0000DB                     SaveNVM_VarSystem@point:
  1018                           	callstack 0
  1019  0000DB                     RemoveSerial@tempSerial:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x3
  1023  0000DB                     	ds	1
  1024  0000DC                     ??_setValueToEdit:
  1025  0000DC                     saveNewSerial@position:
  1026                           	callstack 0
  1027  0000DC                     sm_execute_ControlLearning@psm:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x4
  1031  0000DC                     	ds	1
  1032  0000DD                     ??_saveNewSerial:
  1033                           
  1034                           ; 1 bytes @ 0x5
  1035  0000DD                     	ds	1
  1036  0000DE                     ??_sm_execute_ControlLearning:
  1037  0000DE                     setValueToEdit@menuType:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x6
  1041  0000DE                     	ds	1
  1042  0000DF                     setValueToEdit@posindex:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x7
  1046  0000DF                     	ds	1
  1047  0000E0                     ??_controlSelectRemote:
  1048  0000E0                     setValueToEdit@posindex_6979:
  1049                           	callstack 0
  1050  0000E0                     keeloqDecryptPacket@data:
  1051                           	callstack 0
  1052  0000E0                     DecryptPacket_12BIT@data:
  1053                           	callstack 0
  1054  0000E0                     eusartparser@package:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x8
  1058  0000E0                     	ds	1
  1059  0000E1                     setValueToEdit@haveValueToEdit:
  1060                           	callstack 0
  1061  0000E1                     controlSelectRemote@validSerial:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x9
  1065  0000E1                     	ds	1
  1066  0000E2                     ??_eusartparser:
  1067  0000E2                     controlSelectRemote@pos:
  1068                           	callstack 0
  1069  0000E2                     keeloqDecryptPacket@classic_data:
  1070                           	callstack 0
  1071  0000E2                     DecryptPacket_12BIT@classic_data:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xA
  1075  0000E2                     	ds	1
  1076  0000E3                     controlSelectRemote@typeRemote:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0xB
  1080  0000E3                     	ds	1
  1081  0000E4                     ??_keeloqDecryptPacket:
  1082  0000E4                     DecryptPacket_12BIT@commandType:
  1083                           	callstack 0
  1084  0000E4                     actionZone_Opening@securityClosing:
  1085                           	callstack 0
  1086  0000E4                     controlSelectRemote@tempSerial:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0xC
  1090  0000E4                     	ds	1
  1091  0000E5                     actionZone_Opening@securityOpening:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0xD
  1095  0000E5                     	ds	1
  1096  0000E6                     actionZone_Opening@typeOpenOrder:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0xE
  1100  0000E6                     	ds	1
  1101  0000E7                     sm_execute_ControlGate@psm:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0xF
  1105  0000E7                     	ds	1
  1106  0000E8                     keeloqDecryptPacket@hop_error:
  1107                           	callstack 0
  1108  0000E8                     controlSelectRemote@temp:
  1109                           	callstack 0
  1110  0000E8                     eusartparser@i:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x10
  1114  0000E8                     	ds	1
  1115  0000E9                     ??_sm_execute_ControlGate:
  1116  0000E9                     keeloqDecryptPacket@commandType:
  1117                           	callstack 0
  1118  0000E9                     eusartparser@i_7305:
  1119                           	callstack 0
  1120  0000E9                     sm_execute_menuConfiguration@psm:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x11
  1124  0000E9                     	ds	1
  1125  0000EA                     eusartparser@i_7312:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x12
  1129  0000EA                     	ds	1
  1130  0000EB                     ??_sm_execute_menuConfiguration:
  1131  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1132                           	callstack 0
  1133  0000EB                     eusartparser@i_7313:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x13
  1137  0000EB                     	ds	1
  1138  0000EC                     eusartparser@pos:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x14
  1142  0000EC                     	ds	1
  1143  0000ED                     eusartparser@i_7306:
  1144                           	callstack 0
  1145  0000ED                     sm_execute_main@psm:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x15
  1149  0000ED                     	ds	1
  1150  0000EE                     eusartparser@i_7307:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x16
  1154  0000EE                     	ds	1
  1155  0000EF                     ??_sm_execute_main:
  1156  0000EF                     eusartparser@i_7314:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x17
  1160  0000EF                     	ds	1
  1161  0000F0                     eusartparser@i_7315:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x18
  1165  0000F0                     	ds	1
  1166  0000F1                     eusartparser@i_7308:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x19
  1170  0000F1                     	ds	1
  1171  0000F2                     eusartparser@i_7309:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x1A
  1175  0000F2                     	ds	1
  1176  0000F3                     eusartparser@i_7310:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x1B
  1180  0000F3                     	ds	1
  1181  0000F4                     eusartparser@i_7316:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x1C
  1185  0000F4                     	ds	1
  1186  0000F5                     eusartparser@i_7317:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1D
  1190  0000F5                     	ds	1
  1191  0000F6                     eusartparser@i_7318:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x1E
  1195  0000F6                     	ds	1
  1196  0000F7                     eusartparser@relcounter:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x1F
  1200  0000F7                     	ds	1
  1201  0000F8                     eusartparser@serial:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x20
  1205  0000F8                     	ds	4
  1206                           
  1207                           	psect	cstackCOMRAM
  1208  000001                     __pcstackCOMRAM:
  1209                           	callstack 0
  1210  000001                     ??_rxi:
  1211  000001                     ??i2_GetMotorPower:
  1212  000001                     ADCC_GetSingleConversion@channel:
  1213                           	callstack 0
  1214  000001                     Segments_Set@value:
  1215                           	callstack 0
  1216  000001                     i2VerifyElectricalBrake@tempState:
  1217                           	callstack 0
  1218  000001                     TMR1_WriteTimer@timerVal:
  1219                           	callstack 0
  1220  000001                     decrementTimeslot@ts:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x0
  1224  000001                     	ds	1
  1225  000002                     ??_ReadADC:
  1226  000002                     i2VerifyElectricalBrake@actualState:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x1
  1230  000002                     	ds	1
  1231  000003                     
  1232                           ; 1 bytes @ 0x2
  1233  000003                     	ds	1
  1234  000004                     i2GetMotorPower@defineatraso:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x3
  1238  000004                     	ds	1
  1239  000005                     ??_controlMotorForce:
  1240  000005                     
  1241                           ; 1 bytes @ 0x4
  1242  000005                     	ds	5
  1243  00000A                     ??_INTERRUPT_InterruptManager:
  1244                           
  1245                           ; 1 bytes @ 0x9
  1246  00000A                     	ds	6
  1247  000010                     ??_GetMotorPower:
  1248  000010                     ??_SetSegmentValueLearn:
  1249  000010                     ?_sumEnergyADC:
  1250                           	callstack 0
  1251  000010                     ?_sm_get_current_state:
  1252                           	callstack 0
  1253  000010                     ?___wmul:
  1254                           	callstack 0
  1255  000010                     ?___lwdiv:
  1256                           	callstack 0
  1257  000010                     ?_calculateMean:
  1258                           	callstack 0
  1259  000010                     ?_sumHIST:
  1260                           	callstack 0
  1261  000010                     ?___lldiv:
  1262                           	callstack 0
  1263  000010                     EUSART1_Read@readValue:
  1264                           	callstack 0
  1265  000010                     EUSART1_Write@txData:
  1266                           	callstack 0
  1267  000010                     I2C1_Open@address:
  1268                           	callstack 0
  1269  000010                     I2C1_Close@returnValue:
  1270                           	callstack 0
  1271  000010                     I2C1_MasterSendTxData@data:
  1272                           	callstack 0
  1273  000010                     WWDT_TimerClear@state:
  1274                           	callstack 0
  1275  000010                     getKeyPressed@temp:
  1276                           	callstack 0
  1277  000010                     RGB_Set@value:
  1278                           	callstack 0
  1279  000010                     SetSegmentValueIntermitent@d2:
  1280                           	callstack 0
  1281  000010                     VerifyElectricalBrake@tempState:
  1282                           	callstack 0
  1283  000010                     VerifyFollowMe@securityClose:
  1284                           	callstack 0
  1285  000010                     ___lbdiv@divisor:
  1286                           	callstack 0
  1287  000010                     ___lbmod@divisor:
  1288                           	callstack 0
  1289  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1290                           	callstack 0
  1291  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1292                           	callstack 0
  1293  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1294                           	callstack 0
  1295  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1296                           	callstack 0
  1297  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1298                           	callstack 0
  1299  000010                     I2C1_SetBuffer@buffer:
  1300                           	callstack 0
  1301  000010                     I2C1_SetCallback@cb:
  1302                           	callstack 0
  1303  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1304                           	callstack 0
  1305  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1306                           	callstack 0
  1307  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1308                           	callstack 0
  1309  000010                     saveEnergyADCHist@valueToSave:
  1310                           	callstack 0
  1311  000010                     DecCHK@data:
  1312                           	callstack 0
  1313  000010                     ReqResync@CurrentHop:
  1314                           	callstack 0
  1315  000010                     verifyProgramingMode@classic_data:
  1316                           	callstack 0
  1317  000010                     setFlashLigth_ON@Freq:
  1318                           	callstack 0
  1319  000010                     sm_restart@psm:
  1320                           	callstack 0
  1321  000010                     sm_get_current_state@psm:
  1322                           	callstack 0
  1323  000010                     init_package@package:
  1324                           	callstack 0
  1325  000010                     ___wmul@multiplier:
  1326                           	callstack 0
  1327  000010                     ___lwdiv@dividend:
  1328                           	callstack 0
  1329  000010                     memcpy@d1:
  1330                           	callstack 0
  1331  000010                     calculateMean@meanValue:
  1332                           	callstack 0
  1333  000010                     ___lldiv@dividend:
  1334                           	callstack 0
  1335  000010                     write_eusartparser@package:
  1336                           	callstack 0
  1337                           
  1338                           ; 7 bytes @ 0xF
  1339  000010                     	ds	1
  1340  000011                     ?_read_package:
  1341                           	callstack 0
  1342  000011                     I2C1_Open@returnValue:
  1343                           	callstack 0
  1344  000011                     VerifyElectricalBrake@actualState:
  1345                           	callstack 0
  1346  000011                     ___lbdiv@dividend:
  1347                           	callstack 0
  1348  000011                     ___lbmod@dividend:
  1349                           	callstack 0
  1350  000011                     SetSegmentValueIntermitent@time:
  1351                           	callstack 0
  1352  000011                     setRGB_ON@Freq:
  1353                           	callstack 0
  1354  000011                     write_package@package:
  1355                           	callstack 0
  1356                           
  1357                           ; 7 bytes @ 0x10
  1358  000011                     	ds	1
  1359  000012                     ??_TMR1_Initialize:
  1360  000012                     ??_ControlMotor:
  1361  000012                     ??_sumEnergyADC:
  1362  000012                     ??_DecCHK:
  1363  000012                     SetSegmentValueLearn@direction:
  1364                           	callstack 0
  1365  000012                     ___lbdiv@counter:
  1366                           	callstack 0
  1367  000012                     ___lbmod@counter:
  1368                           	callstack 0
  1369  000012                     I2C1_SetBuffer@bufferSize:
  1370                           	callstack 0
  1371  000012                     I2C1_SetCallback@ptr:
  1372                           	callstack 0
  1373  000012                     sm_init@psm:
  1374                           	callstack 0
  1375  000012                     sm_send_event@psm:
  1376                           	callstack 0
  1377  000012                     confirmpackage@package:
  1378                           	callstack 0
  1379  000012                     ___wmul@multiplicand:
  1380                           	callstack 0
  1381  000012                     ___lwdiv@divisor:
  1382                           	callstack 0
  1383  000012                     memcpy@s1:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x11
  1387  000012                     	ds	1
  1388  000013                     ??_setRGB_ON:
  1389  000013                     SetSegmentValueIntermitent@d1:
  1390                           	callstack 0
  1391  000013                     GetMotorPower@defineatraso:
  1392                           	callstack 0
  1393  000013                     ___lbdiv@quotient:
  1394                           	callstack 0
  1395  000013                     ___lbmod@rem:
  1396                           	callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x12
  1399  000013                     	ds	1
  1400  000014                     ??_InitSoftStop:
  1401  000014                     ??_InitSoftStart:
  1402  000014                     ??_sumHIST:
  1403  000014                     ?___awdiv:
  1404                           	callstack 0
  1405  000014                     I2C1_SetCallback@idx:
  1406                           	callstack 0
  1407  000014                     confirmpackage@confirm:
  1408                           	callstack 0
  1409  000014                     ___lwdiv@counter:
  1410                           	callstack 0
  1411  000014                     sumEnergyADC@sumE:
  1412                           	callstack 0
  1413  000014                     sm_init@initial_state:
  1414                           	callstack 0
  1415  000014                     sm_send_event@event:
  1416                           	callstack 0
  1417  000014                     ___wmul@product:
  1418                           	callstack 0
  1419  000014                     ___awdiv@dividend:
  1420                           	callstack 0
  1421  000014                     memcpy@n:
  1422                           	callstack 0
  1423  000014                     calculateMean@newValue:
  1424                           	callstack 0
  1425  000014                     ___lldiv@divisor:
  1426                           	callstack 0
  1427                           
  1428                           ; 4 bytes @ 0x13
  1429  000014                     	ds	1
  1430  000015                     setRGB_ON@RGBLigth:
  1431                           	callstack 0
  1432  000015                     I2C1_SetDataCompleteCallback@cb:
  1433                           	callstack 0
  1434  000015                     I2C1_SetAddressNackCallback@cb:
  1435                           	callstack 0
  1436  000015                     ___lwdiv@quotient:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x14
  1440  000015                     	ds	1
  1441  000016                     ?_getHopCode:
  1442                           	callstack 0
  1443  000016                     ?_getCurrentComparator:
  1444                           	callstack 0
  1445  000016                     sm_init@hist_mode:
  1446                           	callstack 0
  1447  000016                     memcpy@tmp:
  1448                           	callstack 0
  1449  000016                     sumEnergyADC@auxValue:
  1450                           	callstack 0
  1451  000016                     getHopCode@data:
  1452                           	callstack 0
  1453  000016                     ___awdiv@divisor:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x15
  1457  000016                     	ds	1
  1458  000017                     ??_write_eusartparser:
  1459  000017                     refreshADCZeroOffset@i:
  1460                           	callstack 0
  1461  000017                     I2C1_SetDataCompleteCallback@ptr:
  1462                           	callstack 0
  1463  000017                     I2C1_SetAddressNackCallback@ptr:
  1464                           	callstack 0
  1465  000017                     memcpy@d:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x16
  1469  000017                     	ds	1
  1470  000018                     ??_getHopCode:
  1471  000018                     ??_calculateMean:
  1472  000018                     ??_OpenWalkOrder:
  1473  000018                     sumEnergyADC@i:
  1474                           	callstack 0
  1475  000018                     ControlMotor@stateMotor:
  1476                           	callstack 0
  1477  000018                     ___awdiv@counter:
  1478                           	callstack 0
  1479  000018                     refreshADCZeroOffset@media:
  1480                           	callstack 0
  1481  000018                     sumHIST@max:
  1482                           	callstack 0
  1483  000018                     read_eusartparser@package:
  1484                           	callstack 0
  1485  000018                     ___lldiv@quotient:
  1486                           	callstack 0
  1487  000018                     read_package@package:
  1488                           	callstack 0
  1489                           
  1490                           ; 7 bytes @ 0x17
  1491  000018                     	ds	1
  1492  000019                     ___awdiv@sign:
  1493                           	callstack 0
  1494  000019                     wr1RegCompleteHandler@p:
  1495                           	callstack 0
  1496  000019                     rd1RegCompleteHandler@p:
  1497                           	callstack 0
  1498  000019                     rd2RegCompleteHandler@p:
  1499                           	callstack 0
  1500  000019                     wr2RegCompleteHandler@p:
  1501                           	callstack 0
  1502  000019                     rdBlkRegCompleteHandler@p:
  1503                           	callstack 0
  1504  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1505                           	callstack 0
  1506  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1507                           	callstack 0
  1508  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1509                           	callstack 0
  1510  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1511                           	callstack 0
  1512  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1513                           	callstack 0
  1514  000019                     I2C1_CallbackReturnReset@funPtr:
  1515                           	callstack 0
  1516  000019                     memcpy@s:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x18
  1520  000019                     	ds	1
  1521  00001A                     ??_getCurrentComparator:
  1522  00001A                     ??_read_eusartparser:
  1523  00001A                     sumHIST@min:
  1524                           	callstack 0
  1525  00001A                     OpenWalkOrder@diffTime:
  1526                           	callstack 0
  1527  00001A                     ___awdiv@quotient:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x19
  1531  00001A                     	ds	1
  1532  00001B                     ??_I2C1_DO_TX:
  1533  00001B                     ??_I2C1_DO_RX:
  1534  00001B                     ??_I2C1_DO_TX_EMPTY:
  1535  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1536  00001B                     getSerialCmd@serial:
  1537                           	callstack 0
  1538  00001B                     Decrypt@packet:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x1A
  1542  00001B                     	ds	1
  1543  00001C                     getSerialCmd@temp:
  1544                           	callstack 0
  1545  00001C                     SetSegmentValueMain@d2:
  1546                           	callstack 0
  1547  00001C                     SetSegmentValue@d2:
  1548                           	callstack 0
  1549  00001C                     SetSegmentValueIntermitentMain@d2:
  1550                           	callstack 0
  1551  00001C                     ___lldiv@counter:
  1552                           	callstack 0
  1553  00001C                     sumHIST@sumH:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x1B
  1557  00001C                     	ds	1
  1558  00001D                     ??_I2C1_MasterFsm:
  1559  00001D                     ?___lmul:
  1560                           	callstack 0
  1561  00001D                     Decrypt@key:
  1562                           	callstack 0
  1563  00001D                     SetSegmentValueMain@d1:
  1564                           	callstack 0
  1565  00001D                     SetSegmentValue@d1:
  1566                           	callstack 0
  1567  00001D                     SetSegmentValueIntermitentMain@time:
  1568                           	callstack 0
  1569  00001D                     ___lmul@multiplier:
  1570                           	callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x1C
  1573  00001D                     	ds	1
  1574  00001E                     Decrypt@i:
  1575                           	callstack 0
  1576                           
  1577                           ; 1 bytes @ 0x1D
  1578  00001E                     	ds	1
  1579  00001F                     Decrypt@j:
  1580                           	callstack 0
  1581  00001F                     SetSegmentValueIntermitentMain@d1:
  1582                           	callstack 0
  1583  00001F                     write_eusartparser@debug:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x1E
  1587  00001F                     	ds	1
  1588  000020                     ??_load_New_Menu:
  1589  000020                     ??_controlSaveRemote:
  1590  000020                     I2C1_MasterOperation@read:
  1591                           	callstack 0
  1592  000020                     sumHIST@i:
  1593                           	callstack 0
  1594  000020                     Decrypt@p:
  1595                           	callstack 0
  1596  000020                     actionZone_Closed@securityOpening:
  1597                           	callstack 0
  1598  000020                     actionZone_Opened@securityClosing:
  1599                           	callstack 0
  1600  000020                     getCurrentComparator@tempOffset:
  1601                           	callstack 0
  1602  000020                     getHopCode@tempHop:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x1F
  1606  000020                     	ds	1
  1607  000021                     I2C1_MasterOperation@returnValue:
  1608                           	callstack 0
  1609  000021                     Decrypt@aux:
  1610                           	callstack 0
  1611  000021                     actionZone_Closed@typeOpenOrder:
  1612                           	callstack 0
  1613  000021                     actionZone_Opened@typeOpenOrder:
  1614                           	callstack 0
  1615  000021                     write_eusartparser@debug2:
  1616                           	callstack 0
  1617  000021                     ___lmul@multiplicand:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x20
  1621  000021                     	ds	1
  1622  000022                     I2C1_Read1ByteRegister@reg:
  1623                           	callstack 0
  1624  000022                     getCurrentComparator@x:
  1625                           	callstack 0
  1626  000022                     getHopCode@tempPos:
  1627                           	callstack 0
  1628  000022                     load_New_Menu@Menu:
  1629                           	callstack 0
  1630  000022                     i2c_writeNBytes@reg:
  1631                           	callstack 0
  1632  000022                     i2c_readDataBlock@reg:
  1633                           	callstack 0
  1634  000022                     Decrypt@Buffer:
  1635                           	callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x21
  1638  000022                     	ds	1
  1639  000023                     ??_ControlCurrent:
  1640  000023                     I2C1_Read1ByteRegister@address:
  1641                           	callstack 0
  1642  000023                     getHopCode@i:
  1643                           	callstack 0
  1644  000023                     load_New_Menu@i:
  1645                           	callstack 0
  1646                           
  1647                           ; 1 bytes @ 0x22
  1648  000023                     	ds	1
  1649  000024                     i2c_writeNBytes@data:
  1650                           	callstack 0
  1651  000024                     I2C1_Read1ByteRegister@returnValue:
  1652                           	callstack 0
  1653  000024                     i2c_readDataBlock@data:
  1654                           	callstack 0
  1655  000024                     HopCHK@data:
  1656                           	callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x23
  1659  000024                     	ds	1
  1660  000025                     i2c_writeNBytes@len:
  1661                           	callstack 0
  1662  000025                     ___lmul@product:
  1663                           	callstack 0
  1664                           
  1665                           ; 4 bytes @ 0x24
  1666  000025                     	ds	1
  1667  000026                     i2c_readDataBlock@len:
  1668                           	callstack 0
  1669  000026                     NormalKeyGen@serial:
  1670                           	callstack 0
  1671  000026                     HopCHK@hopDiff:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x25
  1675  000026                     	ds	1
  1676  000027                     ??_i2c_writeNBytes:
  1677                           
  1678                           ; 1 bytes @ 0x26
  1679  000027                     	ds	1
  1680  000028                     ??_i2c_readDataBlock:
  1681  000028                     NormalKeyGen@HOPtemp:
  1682                           	callstack 0
  1683  000028                     i2c_writeNBytes@dat:
  1684                           	callstack 0
  1685                           
  1686                           ; 17 bytes @ 0x27
  1687  000028                     	ds	1
  1688  000029                     ?_getTimeDecelaration:
  1689                           	callstack 0
  1690  000029                     i2c_readDataBlock@address:
  1691                           	callstack 0
  1692                           
  1693                           ; 1 bytes @ 0x28
  1694  000029                     	ds	1
  1695  00002A                     i2c_readDataBlock@d:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x29
  1699  00002A                     	ds	2
  1700  00002C                     NormalKeyGen@SKEYtemp:
  1701                           	callstack 0
  1702                           
  1703                           ; 4 bytes @ 0x2B
  1704  00002C                     	ds	1
  1705  00002D                     ??_getTimeDecelaration:
  1706                           
  1707                           ; 1 bytes @ 0x2C
  1708  00002D                     	ds	1
  1709  00002E                     ReadSerial@tempSerial:
  1710                           	callstack 0
  1711  00002E                     cmdMemoryIsEmpty@position:
  1712                           	callstack 0
  1713  00002E                     validateRemoteSerialNumber@serial:
  1714                           	callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x2D
  1717  00002E                     	ds	1
  1718  00002F                     ??_cmdMemoryIsEmpty:
  1719  00002F                     ReadSerial@position:
  1720                           	callstack 0
  1721                           
  1722                           ; 1 bytes @ 0x2E
  1723  00002F                     	ds	1
  1724  000030                     ??_ReadSerial:
  1725  000030                     NormalKeyGen@Buffer:
  1726                           	callstack 0
  1727                           
  1728                           ; 8 bytes @ 0x2F
  1729  000030                     	ds	1
  1730  000031                     cmdMemoryIsEmpty@cmdType:
  1731                           	callstack 0
  1732  000031                     getTimeDecelaration@state:
  1733                           	callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x30
  1736  000031                     	ds	1
  1737  000032                     ??_setPositionInvertionInOpening:
  1738  000032                     ??_getStateOpenPosition:
  1739  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1740                           	callstack 0
  1741  000032                     ReadSerial@cmdType:
  1742                           	callstack 0
  1743  000032                     actionZone_Closing@securityClosing:
  1744                           	callstack 0
  1745  000032                     cmdMemoryIsEmpty@tempSerial:
  1746                           	callstack 0
  1747                           
  1748                           ; 4 bytes @ 0x31
  1749  000032                     	ds	1
  1750  000033                     actionZone_Closing@typeOpenOrder:
  1751                           	callstack 0
  1752  000033                     validateRemoteSerialNumber@position:
  1753                           	callstack 0
  1754                           
  1755                           ; 2 bytes @ 0x32
  1756  000033                     	ds	2
  1757  000035                     validateRemoteSerialNumber@mask:
  1758                           	callstack 0
  1759                           
  1760                           ; 4 bytes @ 0x34
  1761  000035                     	ds	3
  1762  000038                     keeloq_classic_decrypt_packet@data:
  1763                           	callstack 0
  1764                           
  1765                           ; 2 bytes @ 0x37
  1766  000038                     	ds	1
  1767  000039                     i2c_writeNBytes@address:
  1768                           	callstack 0
  1769  000039                     validateRemoteSerialNumber@j:
  1770                           	callstack 0
  1771                           
  1772                           ; 1 bytes @ 0x38
  1773  000039                     	ds	1
  1774  00003A                     validateRemoteSerialNumber@i:
  1775                           	callstack 0
  1776  00003A                     saveNewSerial@cmdType:
  1777                           	callstack 0
  1778  00003A                     RemoveSerial@position:
  1779                           	callstack 0
  1780  00003A                     ResetDefaultMemory@type:
  1781                           	callstack 0
  1782  00003A                     checkNVM_VarSystem@saveParam:
  1783                           	callstack 0
  1784  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1785                           	callstack 0
  1786  00003A                     setValueToEdit@ParameterSelected:
  1787                           	callstack 0
  1788                           
  1789                           ; 1 bytes @ 0x39
  1790  00003A                     	ds	1
  1791  00003B                     
  1792                           ; 1 bytes @ 0x3A
  1793 ;;
  1794 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1795 ;;
  1796 ;; *************** function _main *****************
  1797 ;; Defined at:
  1798 ;;		line 63 in file "main_MC50.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  package         7    0[BANK2 ] struct package_t
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 3F/1
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;Total ram usage:        7 bytes
  1817 ;; Hardware stack levels required when called: 17
  1818 ;; This function calls:
  1819 ;;		_ControlCounterMoves
  1820 ;;		_ControlCurrent
  1821 ;;		_ControlInputs
  1822 ;;		_ControlLights
  1823 ;;		_ControlMotor
  1824 ;;		_EUSART1_is_rx_ready
  1825 ;;		_InitReceiver
  1826 ;;		_SYSTEM_Initialize
  1827 ;;		_SetSegmentValue
  1828 ;;		_ShowVersion
  1829 ;;		_WWDT_SoftEnable
  1830 ;;		_WWDT_TimerClear
  1831 ;;		_controlVelocity
  1832 ;;		_eusartparser
  1833 ;;		_getKeyPressed
  1834 ;;		_loadNVM_VarSystem
  1835 ;;		_readInputs
  1836 ;;		_readRFButtons
  1837 ;;		_read_package
  1838 ;;		_readbutton
  1839 ;;		_sm_execute_ControlGate
  1840 ;;		_sm_execute_main
  1841 ;;		_sm_init
  1842 ;; This function is called by:
  1843 ;;		Startup code after reset
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text0
  1848  0068BC                     __ptext0:
  1849                           	callstack 0
  1850  0068BC                     _main:
  1851                           	callstack 14
  1852                           
  1853                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1854                           
  1855                           ;incstack = 0
  1856  0068BC  0E18               	movlw	24
  1857  0068BE  0100               	movlb	0	; () banked
  1858  0068C0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1859                           
  1860                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1861  0068C2  0E18               	movlw	24
  1862  0068C4  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1863                           
  1864                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1865  0068C6  0E00               	movlw	0
  1866  0068C8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1867  0068CA  0E00               	movlw	0
  1868  0068CC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1869                           
  1870                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1871  0068CE  0E01               	movlw	1
  1872  0068D0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1876  0068D2  EC88  F04B         	call	_SYSTEM_Initialize	;wreg free
  1877                           
  1878                           ; BSR set to: 14
  1879                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1880  0068D6  EC47  F04F         	call	_WWDT_SoftEnable	;wreg free
  1881                           
  1882                           ; BSR set to: 14
  1883                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1884  0068DA  8EF2               	bsf	242,7,c	;volatile
  1885                           
  1886                           ; BSR set to: 14
  1887                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1888  0068DC  8CF2               	bsf	242,6,c	;volatile
  1889                           
  1890                           ; BSR set to: 14
  1891                           ;main_MC50.c: 86:     IOCBP3=1;
  1892  0068DE  010F               	movlb	15	; () banked
  1893  0068E0  8714               	bsf	20,3,b	;volatile
  1894                           
  1895                           ; BSR set to: 15
  1896                           ;main_MC50.c: 87:     IOCBN3=1;
  1897  0068E2  8713               	bsf	19,3,b	;volatile
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;main_MC50.c: 94:     InitReceiver();
  1901  0068E4  ECD2  F04D         	call	_InitReceiver	;wreg free
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1905  0068E8  EC1A  F037         	call	_loadNVM_VarSystem	;wreg free
  1906                           
  1907                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1908  0068EC  ECA8  F04D         	call	_WWDT_TimerClear	;wreg free
  1909                           
  1910                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1911  0068F0  0E18               	movlw	24
  1912  0068F2  6E1C               	movwf	SetSegmentValue@d2^0,c
  1913  0068F4  0E18               	movlw	24
  1914  0068F6  ECF9  F04D         	call	_SetSegmentValue
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1918  0068FA  0E02               	movlw	2
  1919  0068FC  0101               	movlb	1	; () banked
  1920  0068FE  6FA1               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1921                           
  1922                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1923  006900  D00B               	goto	l27888
  1924  006902                     l27878:
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1928  006902  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1929  006904  A4D8               	btfss	status,2,c
  1930  006906  D008               	goto	l27888
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1934  006908  ECA8  F04D         	call	_WWDT_TimerClear	;wreg free
  1935                           
  1936                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1937  00690C  0E32               	movlw	50
  1938  00690E  0101               	movlb	1	; () banked
  1939  006910  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1943  006912  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;main_MC50.c: 109:             readInputs();
  1947  006914  ECE6  F039         	call	_readInputs	;wreg free
  1948  006918                     l27888:
  1949                           
  1950                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1951  006918  0101               	movlb	1	; () banked
  1952  00691A  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1953  00691C  A4D8               	btfss	status,2,c
  1954  00691E  D7F1               	goto	l27878
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1958  006920  0EBB               	movlw	low _menuConfiguration_stateMachine
  1959  006922  6E12               	movwf	sm_init@psm^0,c
  1960  006924  0E02               	movlw	high _menuConfiguration_stateMachine
  1961  006926  6E13               	movwf	(sm_init@psm+1)^0,c
  1962  006928  0E00               	movlw	0
  1963  00692A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1964  00692C  0E00               	movlw	0
  1965  00692E  6E14               	movwf	sm_init@initial_state^0,c
  1966  006930  0E00               	movlw	0
  1967  006932  6E16               	movwf	sm_init@hist_mode^0,c
  1968  006934  ECF1  F047         	call	_sm_init	;wreg free
  1969                           
  1970                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1971  006938  0EF2               	movlw	low _main_stateMachine
  1972  00693A  6E12               	movwf	sm_init@psm^0,c
  1973  00693C  0E01               	movlw	high _main_stateMachine
  1974  00693E  6E13               	movwf	(sm_init@psm+1)^0,c
  1975  006940  0E00               	movlw	0
  1976  006942  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1977  006944  0E00               	movlw	0
  1978  006946  6E14               	movwf	sm_init@initial_state^0,c
  1979  006948  0E00               	movlw	0
  1980  00694A  6E16               	movwf	sm_init@hist_mode^0,c
  1981  00694C  ECF1  F047         	call	_sm_init	;wreg free
  1982                           
  1983                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1984  006950  0EE7               	movlw	low _controlGate_stateMachine
  1985  006952  6E12               	movwf	sm_init@psm^0,c
  1986  006954  0E01               	movlw	high _controlGate_stateMachine
  1987  006956  6E13               	movwf	(sm_init@psm+1)^0,c
  1988  006958  0E00               	movlw	0
  1989  00695A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1990  00695C  0E00               	movlw	0
  1991  00695E  6E14               	movwf	sm_init@initial_state^0,c
  1992  006960  0E00               	movlw	0
  1993  006962  6E16               	movwf	sm_init@hist_mode^0,c
  1994  006964  ECF1  F047         	call	_sm_init	;wreg free
  1995                           
  1996                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1997  006968  0EB0               	movlw	low _controlLearning_stateMachine
  1998  00696A  6E12               	movwf	sm_init@psm^0,c
  1999  00696C  0E02               	movlw	high _controlLearning_stateMachine
  2000  00696E  6E13               	movwf	(sm_init@psm+1)^0,c
  2001  006970  0E00               	movlw	0
  2002  006972  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2003  006974  0E00               	movlw	0
  2004  006976  6E14               	movwf	sm_init@initial_state^0,c
  2005  006978  0E00               	movlw	0
  2006  00697A  6E16               	movwf	sm_init@hist_mode^0,c
  2007  00697C  ECF1  F047         	call	_sm_init	;wreg free
  2008                           
  2009                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2010  006980  0E00               	movlw	0
  2011  006982  0101               	movlb	1	; () banked
  2012  006984  6FA8               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2013  006986  0E14               	movlw	20
  2014  006988  6FA7               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2018  00698A  0E01               	movlw	1
  2019  00698C  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2020  00698E  0EFE               	movlw	254
  2021  006990  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2025  006992  0E00               	movlw	0
  2026  006994  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2027  006996  0E64               	movlw	100
  2028  006998  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2032  00699A  0E00               	movlw	0
  2033  00699C  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2034  00699E  0E00               	movlw	0
  2035  0069A0  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2036                           
  2037                           ; BSR set to: 1
  2038                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2039  0069A2  0E00               	movlw	0
  2040  0069A4  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2041  0069A6                     l27902:
  2042                           
  2043                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2044  0069A6  EC97  F04E         	call	_EUSART1_is_rx_ready	;wreg free
  2045  0069AA  0900               	iorlw	0
  2046  0069AC  B4D8               	btfsc	status,2,c
  2047  0069AE  D010               	goto	l27908
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main_MC50.c: 142:             package=read_package();
  2051  0069B0  ECC5  F048         	call	_read_package	;wreg free
  2052  0069B4  EE22  F0ED         	lfsr	2,main@package
  2053  0069B8  0E06               	movlw	6
  2054  0069BA                     u34051:
  2055  0069BA  CFEB FFDB          	movff	plusw0,plusw2
  2056  0069BE  06E8               	decf	wreg,f,c
  2057  0069C0  E2FC               	bc	u34051
  2058                           
  2059                           ; BSR set to: 14
  2060                           ;main_MC50.c: 143:             eusartparser(&package);
  2061  0069C2  0EED               	movlw	low main@package
  2062  0069C4  0100               	movlb	0	; () banked
  2063  0069C6  6FE0               	movwf	eusartparser@package& (0+255),b
  2064  0069C8  0E02               	movlw	high main@package
  2065  0069CA  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2066  0069CC  EC43  F00C         	call	_eusartparser	;wreg free
  2067  0069D0                     l27908:
  2068                           
  2069                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2070  0069D0  0101               	movlb	1	; () banked
  2071  0069D2  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2072  0069D4  A4D8               	btfss	status,2,c
  2073  0069D6  D7E7               	goto	l27902
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2077  0069D8  0E32               	movlw	50
  2078  0069DA  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2082  0069DC  ECA8  F04D         	call	_WWDT_TimerClear	;wreg free
  2083                           
  2084                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2085  0069E0  0E04               	movlw	4
  2086  0069E2  0101               	movlb	1	; () banked
  2087  0069E4  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2088  0069E6  D003               	goto	l27918
  2089                           
  2090                           ; BSR set to: 1
  2091                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2092  0069E8  EC4E  F046         	call	_ShowVersion	;wreg free
  2093                           
  2094                           ;main_MC50.c: 156:             }
  2095  0069EC  D7DC               	goto	l27902
  2096  0069EE                     l27918:
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2100  0069EE  ECE4  F045         	call	_readbutton	;wreg free
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;main_MC50.c: 162:                 readRFButtons();
  2104  0069F2  ECCE  F032         	call	_readRFButtons	;wreg free
  2105                           
  2106                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2107  0069F6  EC1F  F04E         	call	_getKeyPressed	;wreg free
  2108  0069FA  0101               	movlb	1	; () banked
  2109  0069FC  6F99               	movwf	_lastKey& (0+255),b
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;main_MC50.c: 165:                 readInputs();
  2113  0069FE  ECE6  F039         	call	_readInputs	;wreg free
  2114                           
  2115                           ;main_MC50.c: 166:                 ControlInputs();
  2116  006A02  EC45  F038         	call	_ControlInputs	;wreg free
  2117                           
  2118                           ;main_MC50.c: 167:                 ControlCurrent();
  2119  006A06  EC22  F035         	call	_ControlCurrent	;wreg free
  2120                           
  2121                           ;main_MC50.c: 168:                 controlVelocity();
  2122  006A0A  ECC3  F02B         	call	_controlVelocity	;wreg free
  2123                           
  2124                           ;main_MC50.c: 169:                 ControlMotor();
  2125  006A0E  EC8D  F029         	call	_ControlMotor	;wreg free
  2126                           
  2127                           ;main_MC50.c: 170:                 ControlLights();
  2128  006A12  ECD5  F022         	call	_ControlLights	;wreg free
  2129                           
  2130                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2131  006A16  EC98  F047         	call	_ControlCounterMoves	;wreg free
  2132                           
  2133                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2134  006A1A  0EF2               	movlw	low _main_stateMachine
  2135  006A1C  0100               	movlb	0	; () banked
  2136  006A1E  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2137  006A20  0E01               	movlw	high _main_stateMachine
  2138  006A22  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2139  006A24  ECBB  F01C         	call	_sm_execute_main	;wreg free
  2140                           
  2141                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2142  006A28  0EE7               	movlw	low _controlGate_stateMachine
  2143  006A2A  0100               	movlb	0	; () banked
  2144  006A2C  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2145  006A2E  0E01               	movlw	high _controlGate_stateMachine
  2146  006A30  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2147  006A32  EC30  F021         	call	_sm_execute_ControlGate	;wreg free
  2148                           
  2149                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2150  006A36  0101               	movlb	1	; () banked
  2151  006A38  2999               	incf	_lastKey& (0+255),w,b
  2152  006A3A  B4D8               	btfsc	status,2,c
  2153  006A3C  D7B4               	goto	l27902
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2157  006A3E  ECD2  F04D         	call	_InitReceiver	;wreg free
  2158                           
  2159                           ; BSR set to: 1
  2160                           
  2161                           ;main_MC50.c: 185:         }
  2162  006A42  D7B1               	goto	l27902
  2163  006A44                     __end_of_main:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _sm_execute_main *****************
  2167 ;; Defined at:
  2168 ;;		line 26 in file "sm_Main_MC50.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  psm             2   21[BANK0 ] PTR struct .
  2171 ;;		 -> main_stateMachine(11), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 3F/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 16
  2190 ;; This function calls:
  2191 ;;		_SetSegmentValueIntermitentMain
  2192 ;;		_SetSegmentValueMain
  2193 ;;		_load_New_Menu
  2194 ;;		_sm_execute_menuConfiguration
  2195 ;;		_sm_send_event
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text1
  2202  003976                     __ptext1:
  2203                           	callstack 0
  2204  003976                     _sm_execute_main:
  2205                           	callstack 14
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;incstack = 0
  2212  003976  D053               	goto	l25668
  2213  003978                     l25644:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2217  003978  5185               	movf	_programmer_enable& (0+255),w,b
  2218  00397A  A4D8               	btfss	status,2,c
  2219  00397C  D066               	goto	l25670
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2223  00397E  EE20 F004          	lfsr	2,4
  2224  003982  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2225  003984  26D9               	addwf	fsr2l,f,c
  2226  003986  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2227  003988  22DA               	addwfc	fsr2h,f,c
  2228  00398A  0E06               	movlw	6
  2229  00398C  18DE               	xorwf	postinc2,w,c
  2230  00398E  10DE               	iorwf	postinc2,w,c
  2231  003990  A4D8               	btfss	status,2,c
  2232  003992  D006               	goto	l25650
  2233  003994                     u32240:
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2237  003994  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2238  003998  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2239  00399C  0E01               	movlw	1
  2240  00399E  D01D               	goto	L2
  2241  0039A0                     l25650:
  2242                           
  2243                           ; BSR set to: 0
  2244  0039A0  EE20 F004          	lfsr	2,4
  2245  0039A4  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2246  0039A6  26D9               	addwf	fsr2l,f,c
  2247  0039A8  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2248  0039AA  22DA               	addwfc	fsr2h,f,c
  2249  0039AC  0E11               	movlw	17
  2250  0039AE  18DE               	xorwf	postinc2,w,c
  2251  0039B0  10DE               	iorwf	postinc2,w,c
  2252  0039B2  A4D8               	btfss	status,2,c
  2253  0039B4  D04A               	goto	l25670
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2257  0039B6  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2258  0039BA  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2259  0039BE  0E02               	movlw	2
  2260  0039C0  D00C               	goto	L2
  2261  0039C2                     l25654:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2265  0039C2  EE20 F004          	lfsr	2,4
  2266  0039C6  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2267  0039C8  26D9               	addwf	fsr2l,f,c
  2268  0039CA  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2269  0039CC  22DA               	addwfc	fsr2h,f,c
  2270  0039CE  0E07               	movlw	7
  2271  0039D0  18DE               	xorwf	postinc2,w,c
  2272  0039D2  10DE               	iorwf	postinc2,w,c
  2273  0039D4  A4D8               	btfss	status,2,c
  2274  0039D6  D039               	goto	l25670
  2275  0039D8  D00F               	goto	u32270
  2276  0039DA                     L2:
  2277  0039DA  6EDE               	movwf	postinc2,c
  2278  0039DC  0E00               	movlw	0
  2279  0039DE  6EDD               	movwf	postdec2,c
  2280  0039E0  D034               	goto	l25670
  2281  0039E2                     l25658:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2285  0039E2  EE20 F004          	lfsr	2,4
  2286  0039E6  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2287  0039E8  26D9               	addwf	fsr2l,f,c
  2288  0039EA  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2289  0039EC  22DA               	addwfc	fsr2h,f,c
  2290  0039EE  0E07               	movlw	7
  2291  0039F0  18DE               	xorwf	postinc2,w,c
  2292  0039F2  10DE               	iorwf	postinc2,w,c
  2293  0039F4  A4D8               	btfss	status,2,c
  2294  0039F6  D006               	goto	l25662
  2295  0039F8                     u32270:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2299  0039F8  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2300  0039FC  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2301  003A00  0E00               	movlw	0
  2302  003A02  D7EB               	goto	L2
  2303  003A04                     l25662:
  2304                           
  2305                           ; BSR set to: 0
  2306  003A04  EE20 F004          	lfsr	2,4
  2307  003A08  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2308  003A0A  26D9               	addwf	fsr2l,f,c
  2309  003A0C  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2310  003A0E  22DA               	addwfc	fsr2h,f,c
  2311  003A10  0E06               	movlw	6
  2312  003A12  18DE               	xorwf	postinc2,w,c
  2313  003A14  10DE               	iorwf	postinc2,w,c
  2314  003A16  A4D8               	btfss	status,2,c
  2315  003A18  D018               	goto	l25670
  2316  003A1A  D7BC               	goto	u32240
  2317  003A1C                     l3053:
  2318                           
  2319                           ; BSR set to: 0
  2320  003A1C  D7FF               	goto	l3053
  2321  003A1E                     l25668:
  2322                           
  2323                           ; BSR set to: 0
  2324  003A1E  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2325  003A22  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2326  003A26  50DF               	movf	indf2,w,c
  2327  003A28  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2328  003A2A  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2329                           
  2330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2331                           ; Switch size 1, requested type "simple"
  2332                           ; Number of cases is 1, Range of values is 0 to 0
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte            4     3 (average)
  2336                           ;	Chosen strategy is simple_byte
  2337  003A2C  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2338  003A2E  0A00               	xorlw	0	; case 0
  2339  003A30  A4D8               	btfss	status,2,c
  2340  003A32  D7F4               	goto	l3053
  2341                           
  2342                           ; BSR set to: 0
  2343                           ; Switch size 1, requested type "simple"
  2344                           ; Number of cases is 3, Range of values is 0 to 2
  2345                           ; switch strategies available:
  2346                           ; Name         Instructions Cycles
  2347                           ; simple_byte           10     6 (average)
  2348                           ;	Chosen strategy is simple_byte
  2349  003A34  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2350  003A36  0A00               	xorlw	0	; case 0
  2351  003A38  B4D8               	btfsc	status,2,c
  2352  003A3A  D79E               	goto	l25644
  2353  003A3C  0A01               	xorlw	1	; case 1
  2354  003A3E  B4D8               	btfsc	status,2,c
  2355  003A40  D7C0               	goto	l25654
  2356  003A42  0A03               	xorlw	3	; case 2
  2357  003A44  B4D8               	btfsc	status,2,c
  2358  003A46  D7CD               	goto	l25658
  2359  003A48  D7E9               	goto	l3053
  2360  003A4A                     l25670:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2364  003A4A  0EF2               	movlw	low _main_stateMachine
  2365  003A4C  6E12               	movwf	sm_send_event@psm^0,c
  2366  003A4E  0E01               	movlw	high _main_stateMachine
  2367  003A50  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2368  003A52  0E00               	movlw	0
  2369  003A54  6E15               	movwf	(sm_send_event@event+1)^0,c
  2370  003A56  0E00               	movlw	0
  2371  003A58  6E14               	movwf	sm_send_event@event^0,c
  2372  003A5A  ECE1  F046         	call	_sm_send_event	;wreg free
  2373                           
  2374                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2375  003A5E  D1F8               	goto	l25948
  2376  003A60                     l25672:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2380  003A60  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2381  003A62  A4D8               	btfss	status,2,c
  2382  003A64  D016               	goto	l25684
  2383                           
  2384                           ; BSR set to: 0
  2385  003A66  0E64               	movlw	100
  2386  003A68  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2387  003A6A  D013               	goto	l25684
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2391  003A6C  0E01               	movlw	1
  2392  003A6E  EC67  F024         	call	_load_New_Menu
  2393  003A72                     l25678:
  2394                           
  2395                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2396  003A72  0EF2               	movlw	low _main_stateMachine
  2397  003A74  6E12               	movwf	sm_send_event@psm^0,c
  2398  003A76  0E01               	movlw	high _main_stateMachine
  2399  003A78  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2400  003A7A  0E00               	movlw	0
  2401  003A7C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2402  003A7E  0E06               	movlw	6
  2403  003A80  6E14               	movwf	sm_send_event@event^0,c
  2404  003A82  ECE1  F046         	call	_sm_send_event	;wreg free
  2405                           
  2406                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2407  003A86  0E01               	movlw	1
  2408  003A88  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2409                           
  2410                           ;sm_Main_MC50.c: 91:                 temp=0;
  2411  003A8A  0E00               	movlw	0
  2412  003A8C  0100               	movlb	0	; () banked
  2413  003A8E  6F80               	movwf	_temp& (0+255),b
  2414                           
  2415                           ;sm_Main_MC50.c: 92:             }
  2416  003A90  0012               	return	
  2417  003A92                     l25684:
  2418                           
  2419                           ; BSR set to: 0
  2420  003A92  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2421  003A94  A4D8               	btfss	status,2,c
  2422  003A96  D00B               	goto	l25692
  2423                           
  2424                           ; BSR set to: 0
  2425  003A98  0E14               	movlw	20
  2426  003A9A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2427  003A9C  D008               	goto	l25692
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2431  003A9E  0E00               	movlw	0
  2432  003AA0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2433  003AA2  0E10               	movlw	16
  2434  003AA4  ECDF  F04D         	call	_SetSegmentValueMain
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;sm_Main_MC50.c: 98:                 temp=1;
  2438  003AA8  0E01               	movlw	1
  2439  003AAA  6F80               	movwf	_temp& (0+255),b
  2440                           
  2441                           ;sm_Main_MC50.c: 99:             }
  2442  003AAC  0012               	return	
  2443  003AAE                     l25692:
  2444                           
  2445                           ; BSR set to: 0
  2446  003AAE  0580               	decf	_temp& (0+255),w,b
  2447  003AB0  A4D8               	btfss	status,2,c
  2448  003AB2  D004               	goto	l25702
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2452  003AB4  0E00               	movlw	0
  2453  003AB6  EC67  F024         	call	_load_New_Menu
  2454  003ABA  D7DB               	goto	l25678
  2455  003ABC                     l25702:
  2456                           
  2457                           ; BSR set to: 0
  2458  003ABC  0E27               	movlw	39
  2459  003ABE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2460  003AC0  A4D8               	btfss	status,2,c
  2461  003AC2  D007               	goto	l25714
  2462                           
  2463                           ; BSR set to: 0
  2464  003AC4  0E78               	movlw	120
  2465  003AC6  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2466  003AC8  D004               	goto	l25714
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2470  003ACA  0E0D               	movlw	13
  2471  003ACC  EC67  F024         	call	_load_New_Menu
  2472  003AD0  D7D0               	goto	l25678
  2473  003AD2                     l25714:
  2474                           
  2475                           ; BSR set to: 0
  2476  003AD2  0E27               	movlw	39
  2477  003AD4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2478  003AD6  A4D8               	btfss	status,2,c
  2479  003AD8  D00B               	goto	l25722
  2480                           
  2481                           ; BSR set to: 0
  2482  003ADA  0E14               	movlw	20
  2483  003ADC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2484  003ADE  D008               	goto	l25722
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2488  003AE0  0E13               	movlw	19
  2489  003AE2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2490  003AE4  0E05               	movlw	5
  2491  003AE6  ECDF  F04D         	call	_SetSegmentValueMain
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;sm_Main_MC50.c: 119:                 temp=2;
  2495  003AEA  0E02               	movlw	2
  2496  003AEC  6F80               	movwf	_temp& (0+255),b
  2497                           
  2498                           ;sm_Main_MC50.c: 120:             }
  2499  003AEE  0012               	return	
  2500  003AF0                     l25722:
  2501                           
  2502                           ; BSR set to: 0
  2503  003AF0  0E02               	movlw	2
  2504  003AF2  1980               	xorwf	_temp& (0+255),w,b
  2505  003AF4  A4D8               	btfss	status,2,c
  2506  003AF6  D004               	goto	l25732
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2510  003AF8  0E0C               	movlw	12
  2511  003AFA  EC67  F024         	call	_load_New_Menu
  2512  003AFE  D7B9               	goto	l25678
  2513  003B00                     l25732:
  2514                           
  2515                           ; BSR set to: 0
  2516  003B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2517  003B02  A4D8               	btfss	status,2,c
  2518  003B04  D009               	goto	l25738
  2519                           
  2520                           ; BSR set to: 0
  2521  003B06  0101               	movlb	1	; () banked
  2522  003B08  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2523  003B0A  A4D8               	btfss	status,2,c
  2524  003B0C  D005               	goto	l25738
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2528  003B0E  0E01               	movlw	1
  2529  003B10  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2530                           
  2531                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2532  003B12  0E03               	movlw	3
  2533  003B14  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2534                           
  2535                           ;sm_Main_MC50.c: 132:             }
  2536  003B16  0012               	return	
  2537  003B18                     l25738:
  2538  003B18  0E17               	movlw	23
  2539  003B1A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2540  003B1C  A4D8               	btfss	status,2,c
  2541  003B1E  D009               	goto	l25744
  2542  003B20  0101               	movlb	1	; () banked
  2543  003B22  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2544  003B24  A4D8               	btfss	status,2,c
  2545  003B26  D005               	goto	l25744
  2546                           
  2547                           ; BSR set to: 1
  2548                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2549  003B28  0E01               	movlw	1
  2550  003B2A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2551                           
  2552                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2553  003B2C  0E01               	movlw	1
  2554  003B2E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2555                           
  2556                           ;sm_Main_MC50.c: 137:             }
  2557  003B30  0012               	return	
  2558  003B32                     l25744:
  2559  003B32  0101               	movlb	1	; () banked
  2560  003B34  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2561  003B36  A4D8               	btfss	status,2,c
  2562  003B38  D005               	goto	l25748
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2566  003B3A  0E00               	movlw	0
  2567  003B3C  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2568                           
  2569                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2570  003B3E  0E00               	movlw	0
  2571  003B40  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2572                           
  2573                           ;sm_Main_MC50.c: 142:             }
  2574  003B42  0012               	return	
  2575  003B44                     l25748:
  2576                           
  2577                           ; BSR set to: 1
  2578  003B44  0E06               	movlw	6
  2579  003B46  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2580  003B48  B4D8               	btfsc	status,2,c
  2581  003B4A  D004               	goto	u32450
  2582                           
  2583                           ; BSR set to: 1
  2584  003B4C  0E05               	movlw	5
  2585  003B4E  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2586  003B50  A4D8               	btfss	status,2,c
  2587  003B52  D015               	goto	l25762
  2588  003B54                     u32450:
  2589                           
  2590                           ; BSR set to: 1
  2591  003B54  0E63               	movlw	99
  2592  003B56  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2593  003B58  D012               	goto	l25762
  2594                           
  2595                           ; BSR set to: 1
  2596                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2597  003B5A  0E0C               	movlw	12
  2598  003B5C  EC67  F024         	call	_load_New_Menu
  2599                           
  2600                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2601  003B60  0EF2               	movlw	low _main_stateMachine
  2602  003B62  6E12               	movwf	sm_send_event@psm^0,c
  2603  003B64  0E01               	movlw	high _main_stateMachine
  2604  003B66  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2605  003B68  0E00               	movlw	0
  2606  003B6A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2607  003B6C  0E06               	movlw	6
  2608  003B6E  6E14               	movwf	sm_send_event@event^0,c
  2609  003B70  ECE1  F046         	call	_sm_send_event	;wreg free
  2610                           
  2611                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2612  003B74  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2613                           
  2614                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2615  003B78  0E01               	movlw	1
  2616  003B7A  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2617                           
  2618                           ;sm_Main_MC50.c: 149:             }
  2619  003B7C  0012               	return	
  2620  003B7E                     l25762:
  2621                           
  2622                           ; BSR set to: 1
  2623  003B7E  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2624  003B80  D005               	goto	u32470
  2625  003B82  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2626  003B84  E111               	bnz	l3065
  2627  003B86  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2628  003B88  B0D8               	btfsc	status,0,c
  2629  003B8A  0012               	return	
  2630  003B8C                     u32470:
  2631                           
  2632                           ; BSR set to: 1
  2633                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2634  003B8C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2635  003B8E  A4D8               	btfss	status,2,c
  2636  003B90  D006               	goto	l25768
  2637                           
  2638                           ; BSR set to: 1
  2639                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2640  003B92  0E0C               	movlw	12
  2641  003B94  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2642  003B96  0E0F               	movlw	15
  2643  003B98  ECDF  F04D         	call	_SetSegmentValueMain
  2644                           
  2645                           ;sm_Main_MC50.c: 157:                     }
  2646  003B9C  0012               	return	
  2647  003B9E                     l25768:
  2648                           
  2649                           ; BSR set to: 1
  2650                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2651  003B9E  0E18               	movlw	24
  2652  003BA0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2653  003BA2  0E18               	movlw	24
  2654  003BA4  ECDF  F04D         	call	_SetSegmentValueMain
  2655  003BA8                     l3065:
  2656                           
  2657                           ; BSR set to: 1
  2658  003BA8  0012               	return	
  2659  003BAA                     l25770:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2663  003BAA  0EBB               	movlw	low _menuConfiguration_stateMachine
  2664  003BAC  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2665  003BAE  0E02               	movlw	high _menuConfiguration_stateMachine
  2666  003BB0  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2667  003BB2  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2668                           
  2669                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2670  003BB6  0012               	return	
  2671  003BB8                     l25772:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2675  003BB8  0E00               	movlw	0
  2676  003BBA  0101               	movlb	1	; () banked
  2677  003BBC  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2681  003BBE  0E04               	movlw	4
  2682  003BC0  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2683  003BC2  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2684  003BC4  A4D8               	btfss	status,2,c
  2685  003BC6  D013               	goto	l3088
  2686                           
  2687                           ; BSR set to: 1
  2688                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2689  003BC8  0100               	movlb	0	; () banked
  2690  003BCA  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2691  003BCC  A4D8               	btfss	status,2,c
  2692  003BCE  D007               	goto	l25782
  2693                           
  2694                           ; BSR set to: 0
  2695  003BD0  0101               	movlb	1	; () banked
  2696  003BD2  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2697  003BD4  A4D8               	btfss	status,2,c
  2698  003BD6  D003               	goto	l25782
  2699  003BD8                     u32510:
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2703  003BD8  0E01               	movlw	1
  2704  003BDA  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2705                           
  2706                           ;sm_Main_MC50.c: 182:                 }
  2707  003BDC  D008               	goto	l3088
  2708  003BDE                     l25782:
  2709  003BDE  0100               	movlb	0	; () banked
  2710  003BE0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2711  003BE2  B4D8               	btfsc	status,2,c
  2712  003BE4  D004               	goto	l3088
  2713                           
  2714                           ; BSR set to: 0
  2715  003BE6  0101               	movlb	1	; () banked
  2716  003BE8  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2717  003BEA  A4D8               	btfss	status,2,c
  2718  003BEC  D7F5               	goto	u32510
  2719  003BEE                     l3088:
  2720                           
  2721                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2722  003BEE  0101               	movlb	1	; () banked
  2723  003BF0  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2724  003BF2  A4D8               	btfss	status,2,c
  2725  003BF4  D069               	goto	l3102
  2726                           
  2727                           ; BSR set to: 1
  2728  003BF6  0E04               	movlw	4
  2729  003BF8  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2730  003BFA  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2731  003BFC  A4D8               	btfss	status,2,c
  2732  003BFE  D003               	goto	u32560
  2733                           
  2734                           ; BSR set to: 1
  2735  003C00  5190               	movf	_aux_in_auto_close& (0+255),w,b
  2736  003C02  B4D8               	btfsc	status,2,c
  2737  003C04  D008               	goto	u32580
  2738  003C06                     u32560:
  2739                           
  2740                           ; BSR set to: 1
  2741  003C06  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  2742  003C08  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2743  003C0A  B4D8               	btfsc	status,2,c
  2744  003C0C  D004               	goto	u32580
  2745                           
  2746                           ; BSR set to: 1
  2747  003C0E  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
  2748  003C10  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2749  003C12  A4D8               	btfss	status,2,c
  2750  003C14  D059               	goto	l3102
  2751  003C16                     u32580:
  2752                           
  2753                           ; BSR set to: 1
  2754                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2755  003C16  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2756  003C18  A4D8               	btfss	status,2,c
  2757  003C1A  D015               	goto	l25810
  2758                           
  2759                           ; BSR set to: 1
  2760  003C1C  0E64               	movlw	100
  2761  003C1E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2762  003C20  D012               	goto	l25810
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2766  003C22  0E01               	movlw	1
  2767  003C24  EC67  F024         	call	_load_New_Menu
  2768  003C28                     l25804:
  2769                           
  2770                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2771  003C28  0EF2               	movlw	low _main_stateMachine
  2772  003C2A  6E12               	movwf	sm_send_event@psm^0,c
  2773  003C2C  0E01               	movlw	high _main_stateMachine
  2774  003C2E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2775  003C30  0E00               	movlw	0
  2776  003C32  6E15               	movwf	(sm_send_event@event+1)^0,c
  2777  003C34  0E06               	movlw	6
  2778  003C36  6E14               	movwf	sm_send_event@event^0,c
  2779  003C38  ECE1  F046         	call	_sm_send_event	;wreg free
  2780                           
  2781                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2782  003C3C  0E01               	movlw	1
  2783  003C3E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2784                           
  2785                           ;sm_Main_MC50.c: 200:                     temp=0;
  2786  003C40  0E00               	movlw	0
  2787  003C42  0100               	movlb	0	; () banked
  2788  003C44  D037               	goto	L4
  2789  003C46                     l25810:
  2790                           
  2791                           ; BSR set to: 1
  2792  003C46  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2793  003C48  A4D8               	btfss	status,2,c
  2794  003C4A  D00A               	goto	l25818
  2795                           
  2796                           ; BSR set to: 1
  2797  003C4C  0E14               	movlw	20
  2798  003C4E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2799  003C50  D007               	goto	l25818
  2800                           
  2801                           ; BSR set to: 1
  2802                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2803  003C52  0E00               	movlw	0
  2804  003C54  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2805  003C56  0E10               	movlw	16
  2806  003C58  ECDF  F04D         	call	_SetSegmentValueMain
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;sm_Main_MC50.c: 206:                     temp=1;
  2810  003C5C  0E01               	movlw	1
  2811  003C5E  D02A               	goto	L4
  2812  003C60                     l25818:
  2813                           
  2814                           ; BSR set to: 1
  2815  003C60  0100               	movlb	0	; () banked
  2816  003C62  0580               	decf	_temp& (0+255),w,b
  2817  003C64  A4D8               	btfss	status,2,c
  2818  003C66  D00E               	goto	l25832
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2822  003C68  0E00               	movlw	0
  2823  003C6A  EC67  F024         	call	_load_New_Menu
  2824                           
  2825                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2826  003C6E  0E01               	movlw	1
  2827  003C70  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2828                           
  2829                           ;sm_Main_MC50.c: 213:                     temp=0;
  2830  003C72  0E00               	movlw	0
  2831  003C74  0100               	movlb	0	; () banked
  2832  003C76  6F80               	movwf	_temp& (0+255),b
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2836  003C78  0E00               	movlw	0
  2837  003C7A  0101               	movlb	1	; () banked
  2838  003C7C  6FF3               	movwf	(_main_stateMachine+1)& (0+255),b
  2839  003C7E  0E01               	movlw	1
  2840  003C80  6FF2               	movwf	_main_stateMachine& (0+255),b
  2841  003C82  0012               	return	
  2842  003C84                     l25832:
  2843                           
  2844                           ; BSR set to: 0
  2845  003C84  0E27               	movlw	39
  2846  003C86  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2847  003C88  A4D8               	btfss	status,2,c
  2848  003C8A  D007               	goto	l25844
  2849                           
  2850                           ; BSR set to: 0
  2851  003C8C  0E78               	movlw	120
  2852  003C8E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2853  003C90  D004               	goto	l25844
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2857  003C92  0E0D               	movlw	13
  2858  003C94  EC67  F024         	call	_load_New_Menu
  2859  003C98  D7C7               	goto	l25804
  2860  003C9A                     l25844:
  2861                           
  2862                           ; BSR set to: 0
  2863  003C9A  0E27               	movlw	39
  2864  003C9C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2865  003C9E  A4D8               	btfss	status,2,c
  2866  003CA0  D00B               	goto	l25852
  2867                           
  2868                           ; BSR set to: 0
  2869  003CA2  0E14               	movlw	20
  2870  003CA4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2871  003CA6  D008               	goto	l25852
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2875  003CA8  0E13               	movlw	19
  2876  003CAA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2877  003CAC  0E05               	movlw	5
  2878  003CAE  ECDF  F04D         	call	_SetSegmentValueMain
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;sm_Main_MC50.c: 229:                 temp=2;
  2882  003CB2  0E02               	movlw	2
  2883  003CB4                     L4:
  2884  003CB4  6F80               	movwf	_temp& (0+255),b
  2885                           
  2886                           ;sm_Main_MC50.c: 230:             }
  2887  003CB6  D008               	goto	l3102
  2888  003CB8                     l25852:
  2889                           
  2890                           ; BSR set to: 0
  2891  003CB8  0E02               	movlw	2
  2892  003CBA  1980               	xorwf	_temp& (0+255),w,b
  2893  003CBC  A4D8               	btfss	status,2,c
  2894  003CBE  D004               	goto	l3102
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2898  003CC0  0E0C               	movlw	12
  2899  003CC2  EC67  F024         	call	_load_New_Menu
  2900  003CC6  D6D5               	goto	l25678
  2901  003CC8                     l3102:
  2902                           
  2903                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2904                           
  2905                           ; BSR set to: 0
  2906  003CC8  0101               	movlb	1	; () banked
  2907  003CCA  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2908  003CCC  D005               	goto	u32690
  2909  003CCE  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2910  003CD0  E102               	bnz	u32691
  2911  003CD2  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2912  003CD4  B0D8               	btfsc	status,0,c
  2913  003CD6                     u32691:
  2914  003CD6  0012               	return	
  2915  003CD8                     u32690:
  2916                           
  2917                           ; BSR set to: 1
  2918  003CD8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2919  003CDA  B4D8               	btfsc	status,2,c
  2920  003CDC  0012               	return	
  2921                           
  2922                           ; BSR set to: 1
  2923  003CDE  0E27               	movlw	39
  2924  003CE0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2925  003CE2  B4D8               	btfsc	status,2,c
  2926  003CE4  0012               	return	
  2927                           
  2928                           ; BSR set to: 1
  2929                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2930  003CE6  0E03               	movlw	3
  2931  003CE8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2932  003CEA  A4D8               	btfss	status,2,c
  2933  003CEC  D011               	goto	l25878
  2934                           
  2935                           ; BSR set to: 1
  2936                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2937  003CEE  0E12               	movlw	18
  2938  003CF0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2939  003CF2  0E00               	movlw	0
  2940  003CF4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2941  003CF6  0E0A               	movlw	10
  2942  003CF8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2943  003CFA  0E0C               	movlw	12
  2944  003CFC  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  2945  003D00                     l25874:
  2946                           
  2947                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2948  003D00  0E00               	movlw	0
  2949  003D02  0101               	movlb	1	; () banked
  2950  003D04  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2951  003D06  0E04               	movlw	4
  2952  003D08  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2956  003D0A  0E00               	movlw	0
  2957  003D0C  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2958                           
  2959                           ;sm_Main_MC50.c: 252:                 }
  2960  003D0E  0012               	return	
  2961  003D10                     l25878:
  2962                           
  2963                           ; BSR set to: 1
  2964  003D10  0E02               	movlw	2
  2965  003D12  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2966  003D14  B4D8               	btfsc	status,2,c
  2967  003D16  D003               	goto	u32740
  2968                           
  2969                           ; BSR set to: 1
  2970  003D18  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2971  003D1A  A4D8               	btfss	status,2,c
  2972  003D1C  D00A               	goto	l25888
  2973  003D1E                     u32740:
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2977  003D1E  0E10               	movlw	16
  2978  003D20  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2979  003D22  0E00               	movlw	0
  2980  003D24  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2981  003D26  0E0A               	movlw	10
  2982  003D28  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2983  003D2A  0E00               	movlw	0
  2984  003D2C  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  2985  003D30  D7E7               	goto	l25874
  2986  003D32                     l25888:
  2987                           
  2988                           ; BSR set to: 1
  2989  003D32  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2990  003D34  A4D8               	btfss	status,2,c
  2991  003D36  D00F               	goto	l25894
  2992                           
  2993                           ; BSR set to: 1
  2994  003D38  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  2995  003D3A  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2996  003D3C  A4D8               	btfss	status,2,c
  2997  003D3E  D00B               	goto	l25894
  2998                           
  2999                           ; BSR set to: 1
  3000                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  3001  003D40  0EF2               	movlw	low _main_stateMachine
  3002  003D42  6E12               	movwf	sm_send_event@psm^0,c
  3003  003D44  0E01               	movlw	high _main_stateMachine
  3004  003D46  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3005  003D48  0E00               	movlw	0
  3006  003D4A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3007  003D4C  0E07               	movlw	7
  3008  003D4E  6E14               	movwf	sm_send_event@event^0,c
  3009  003D50  ECE1  F046         	call	_sm_send_event	;wreg free
  3010                           
  3011                           ;sm_Main_MC50.c: 264:                 }
  3012  003D54  0012               	return	
  3013  003D56                     l25894:
  3014                           
  3015                           ; BSR set to: 1
  3016  003D56  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3017  003D58  A4D8               	btfss	status,2,c
  3018  003D5A  D074               	goto	l25944
  3019                           
  3020                           ; BSR set to: 1
  3021  003D5C  0E04               	movlw	4
  3022  003D5E  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3023  003D60  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3024  003D62  A4D8               	btfss	status,2,c
  3025  003D64  D06F               	goto	l25944
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3029  003D66  0100               	movlb	0	; () banked
  3030  003D68  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3031  003D6A  B4D8               	btfsc	status,2,c
  3032  003D6C  D00B               	goto	u32820
  3033                           
  3034                           ; BSR set to: 0
  3035  003D6E  0101               	movlb	1	; () banked
  3036  003D70  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3037  003D72  B4D8               	btfsc	status,2,c
  3038  003D74  D007               	goto	u32820
  3039                           
  3040                           ; BSR set to: 1
  3041  003D76  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3042  003D78  B4D8               	btfsc	status,2,c
  3043  003D7A  D013               	goto	u32860
  3044                           
  3045                           ; BSR set to: 1
  3046  003D7C  0E03               	movlw	3
  3047  003D7E  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3048  003D80  B4D8               	btfsc	status,2,c
  3049  003D82  D00F               	goto	u32860
  3050  003D84                     u32820:
  3051  003D84  0100               	movlb	0	; () banked
  3052  003D86  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3053  003D88  A4D8               	btfss	status,2,c
  3054  003D8A  D026               	goto	l25922
  3055                           
  3056                           ; BSR set to: 0
  3057  003D8C  0101               	movlb	1	; () banked
  3058  003D8E  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3059  003D90  A4D8               	btfss	status,2,c
  3060  003D92  D022               	goto	l25922
  3061                           
  3062                           ; BSR set to: 1
  3063  003D94  0E02               	movlw	2
  3064  003D96  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3065  003D98  B4D8               	btfsc	status,2,c
  3066  003D9A  D01E               	goto	l25922
  3067                           
  3068                           ; BSR set to: 1
  3069  003D9C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3070  003D9E  B4D8               	btfsc	status,2,c
  3071  003DA0  D01B               	goto	l25922
  3072  003DA2                     u32860:
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3076  003DA2  0E00               	movlw	0
  3077  003DA4  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3078  003DA6  0E0A               	movlw	10
  3079  003DA8  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3080                           
  3081                           ; BSR set to: 1
  3082                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3083  003DAA  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3084  003DAC  A4D8               	btfss	status,2,c
  3085  003DAE  D00A               	goto	l25920
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3089  003DB0  0E10               	movlw	16
  3090  003DB2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3091  003DB4  0E00               	movlw	0
  3092  003DB6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3093  003DB8  0E0A               	movlw	10
  3094  003DBA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3095  003DBC  0E0A               	movlw	10
  3096  003DBE  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  3097                           
  3098                           ;sm_Main_MC50.c: 282:                         }
  3099  003DC2  0012               	return	
  3100  003DC4                     l25920:
  3101                           
  3102                           ; BSR set to: 1
  3103                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3104  003DC4  0E0F               	movlw	15
  3105  003DC6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3106  003DC8  0E00               	movlw	0
  3107  003DCA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3108  003DCC  0E0A               	movlw	10
  3109  003DCE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3110  003DD0  0E0A               	movlw	10
  3111  003DD2  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  3112  003DD6  0012               	return	
  3113  003DD8                     l25922:
  3114  003DD8  0100               	movlb	0	; () banked
  3115  003DDA  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3116  003DDC  B4D8               	btfsc	status,2,c
  3117  003DDE  D008               	goto	u32900
  3118                           
  3119                           ; BSR set to: 0
  3120  003DE0  0101               	movlb	1	; () banked
  3121  003DE2  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3122  003DE4  B4D8               	btfsc	status,2,c
  3123  003DE6  D004               	goto	u32900
  3124                           
  3125                           ; BSR set to: 1
  3126  003DE8  0E02               	movlw	2
  3127  003DEA  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3128  003DEC  B4D8               	btfsc	status,2,c
  3129  003DEE  D00C               	goto	u32930
  3130  003DF0                     u32900:
  3131  003DF0  0100               	movlb	0	; () banked
  3132  003DF2  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3133  003DF4  A4D8               	btfss	status,2,c
  3134  003DF6  D016               	goto	l25938
  3135                           
  3136                           ; BSR set to: 0
  3137  003DF8  0101               	movlb	1	; () banked
  3138  003DFA  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3139  003DFC  A4D8               	btfss	status,2,c
  3140  003DFE  D012               	goto	l25938
  3141                           
  3142                           ; BSR set to: 1
  3143  003E00  0E02               	movlw	2
  3144  003E02  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3145  003E04  A4D8               	btfss	status,2,c
  3146  003E06  D00E               	goto	l25938
  3147  003E08                     u32930:
  3148                           
  3149                           ; BSR set to: 1
  3150                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3151  003E08  0E00               	movlw	0
  3152  003E0A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3153  003E0C  0E0A               	movlw	10
  3154  003E0E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3155                           
  3156                           ; BSR set to: 1
  3157                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3158  003E10  0E10               	movlw	16
  3159  003E12  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3160  003E14  0E00               	movlw	0
  3161  003E16  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3162  003E18  0E0A               	movlw	10
  3163  003E1A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3164  003E1C  0E0A               	movlw	10
  3165  003E1E  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  3166                           
  3167                           ;sm_Main_MC50.c: 298:                     }
  3168  003E22  0012               	return	
  3169  003E24                     l25938:
  3170  003E24  0101               	movlb	1	; () banked
  3171  003E26  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3172  003E28  A4D8               	btfss	status,2,c
  3173  003E2A  D006               	goto	l25942
  3174                           
  3175                           ; BSR set to: 1
  3176                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3177  003E2C  0E00               	movlw	0
  3178  003E2E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3179  003E30  0E0F               	movlw	15
  3180  003E32  ECDF  F04D         	call	_SetSegmentValueMain
  3181                           
  3182                           ;sm_Main_MC50.c: 304:                     }
  3183  003E36  0012               	return	
  3184  003E38                     l25942:
  3185                           
  3186                           ; BSR set to: 1
  3187                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3188  003E38  0E18               	movlw	24
  3189  003E3A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3190  003E3C  0E18               	movlw	24
  3191  003E3E  ECDF  F04D         	call	_SetSegmentValueMain
  3192  003E42  0012               	return	
  3193  003E44                     l25944:
  3194                           
  3195                           ; BSR set to: 1
  3196                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3197  003E44  0E18               	movlw	24
  3198  003E46  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3199  003E48  0E18               	movlw	24
  3200  003E4A  ECDF  F04D         	call	_SetSegmentValueMain
  3201  003E4E  0012               	return	
  3202  003E50                     l25948:
  3203  003E50  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3204  003E54  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3205  003E58  50DF               	movf	indf2,w,c
  3206  003E5A  0100               	movlb	0	; () banked
  3207  003E5C  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3208  003E5E  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3209                           
  3210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3211                           ; Switch size 1, requested type "simple"
  3212                           ; Number of cases is 1, Range of values is 0 to 0
  3213                           ; switch strategies available:
  3214                           ; Name         Instructions Cycles
  3215                           ; simple_byte            4     3 (average)
  3216                           ;	Chosen strategy is simple_byte
  3217  003E60  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3218  003E62  0A00               	xorlw	0	; case 0
  3219  003E64  A4D8               	btfss	status,2,c
  3220  003E66  0012               	return	
  3221                           
  3222                           ; BSR set to: 0
  3223                           ; Switch size 1, requested type "simple"
  3224                           ; Number of cases is 3, Range of values is 0 to 2
  3225                           ; switch strategies available:
  3226                           ; Name         Instructions Cycles
  3227                           ; simple_byte           10     6 (average)
  3228                           ;	Chosen strategy is simple_byte
  3229  003E68  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3230  003E6A  0A00               	xorlw	0	; case 0
  3231  003E6C  B4D8               	btfsc	status,2,c
  3232  003E6E  D5F8               	goto	l25672
  3233  003E70  0A01               	xorlw	1	; case 1
  3234  003E72  B4D8               	btfsc	status,2,c
  3235  003E74  D69A               	goto	l25770
  3236  003E76  0A03               	xorlw	3	; case 2
  3237  003E78  A4D8               	btfss	status,2,c
  3238  003E7A  0012               	return	
  3239  003E7C  D69D               	goto	l25772
  3240  003E7E                     __end_of_sm_execute_main:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _sm_execute_menuConfiguration *****************
  3244 ;; Defined at:
  3245 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  psm             2   17[BANK0 ] PTR struct .
  3248 ;;		 -> menuConfiguration_stateMachine(11), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 3F/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3264 ;;Total ram usage:        4 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 15
  3267 ;; This function calls:
  3268 ;;		_ClearFlag_rfCMD
  3269 ;;		_ResetDefaultMemory
  3270 ;;		_SaveNVM_VarSystem
  3271 ;;		_SetSegmentValueIntermitentMain
  3272 ;;		_SetSegmentValueMain
  3273 ;;		___lbdiv
  3274 ;;		___lldiv
  3275 ;;		___lmul
  3276 ;;		___lwdiv
  3277 ;;		_controlLearnDigit
  3278 ;;		_controlSaveRemote
  3279 ;;		_controlSelectRemote
  3280 ;;		_load_New_Menu
  3281 ;;		_setValueToEdit
  3282 ;;		_sm_send_event
  3283 ;; This function is called by:
  3284 ;;		_sm_execute_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text2
  3289  000F22                     __ptext2:
  3290                           	callstack 0
  3291  000F22                     _sm_execute_menuConfiguration:
  3292                           	callstack 14
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3296                           
  3297                           ;incstack = 0
  3298  000F22  D0A2               	goto	l23956
  3299  000F24                     l23898:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3303  000F24  EE20 F004          	lfsr	2,4
  3304  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3305  000F2A  26D9               	addwf	fsr2l,f,c
  3306  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3307  000F2E  22DA               	addwfc	fsr2h,f,c
  3308  000F30  04DE               	decf	postinc2,w,c
  3309  000F32  10DE               	iorwf	postinc2,w,c
  3310  000F34  A4D8               	btfss	status,2,c
  3311  000F36  D006               	goto	l23902
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3315  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3316  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3317  000F40  0E01               	movlw	1
  3318  000F42  D04C               	goto	L9
  3319  000F44                     l23902:
  3320                           
  3321                           ; BSR set to: 0
  3322  000F44  EE20 F004          	lfsr	2,4
  3323  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3324  000F4A  26D9               	addwf	fsr2l,f,c
  3325  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3326  000F4E  22DA               	addwfc	fsr2h,f,c
  3327  000F50  0E05               	movlw	5
  3328  000F52  18DE               	xorwf	postinc2,w,c
  3329  000F54  10DE               	iorwf	postinc2,w,c
  3330  000F56  A4D8               	btfss	status,2,c
  3331  000F58  D006               	goto	l23906
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3335  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3336  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3337  000F62  0E03               	movlw	3
  3338  000F64  D03B               	goto	L9
  3339  000F66                     l23906:
  3340                           
  3341                           ; BSR set to: 0
  3342  000F66  EE20 F004          	lfsr	2,4
  3343  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3344  000F6C  26D9               	addwf	fsr2l,f,c
  3345  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3346  000F70  22DA               	addwfc	fsr2h,f,c
  3347  000F72  0E08               	movlw	8
  3348  000F74  18DE               	xorwf	postinc2,w,c
  3349  000F76  10DE               	iorwf	postinc2,w,c
  3350  000F78  A4D8               	btfss	status,2,c
  3351  000F7A  D006               	goto	l23910
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3355  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3356  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3357  000F84  0E04               	movlw	4
  3358  000F86  D02A               	goto	L9
  3359  000F88                     l23910:
  3360                           
  3361                           ; BSR set to: 0
  3362  000F88  EE20 F004          	lfsr	2,4
  3363  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3364  000F8E  26D9               	addwf	fsr2l,f,c
  3365  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3366  000F92  22DA               	addwfc	fsr2h,f,c
  3367  000F94  0E14               	movlw	20
  3368  000F96  18DE               	xorwf	postinc2,w,c
  3369  000F98  10DE               	iorwf	postinc2,w,c
  3370  000F9A  A4D8               	btfss	status,2,c
  3371  000F9C  D087               	goto	l23958
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3375  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3376  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3377  000FA6  0E06               	movlw	6
  3378  000FA8  D019               	goto	L9
  3379  000FAA                     l23914:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3383  000FAA  EE20 F004          	lfsr	2,4
  3384  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3385  000FB0  26D9               	addwf	fsr2l,f,c
  3386  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3387  000FB4  22DA               	addwfc	fsr2h,f,c
  3388  000FB6  0E02               	movlw	2
  3389  000FB8  18DE               	xorwf	postinc2,w,c
  3390  000FBA  10DE               	iorwf	postinc2,w,c
  3391  000FBC  A4D8               	btfss	status,2,c
  3392  000FBE  D006               	goto	l23918
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3396  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3397  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3398  000FC8  0E02               	movlw	2
  3399  000FCA  D008               	goto	L9
  3400  000FCC                     l23918:
  3401                           
  3402                           ; BSR set to: 0
  3403  000FCC  EE20 F004          	lfsr	2,4
  3404  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3405  000FD2  26D9               	addwf	fsr2l,f,c
  3406  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3407  000FD6  22DA               	addwfc	fsr2h,f,c
  3408  000FD8  0E03               	movlw	3
  3409  000FDA  D03B               	goto	L123
  3410  000FDC                     L9:
  3411  000FDC  6EDE               	movwf	postinc2,c
  3412  000FDE  0E00               	movlw	0
  3413  000FE0  6EDD               	movwf	postdec2,c
  3414  000FE2  D064               	goto	l23958
  3415  000FE4                     l23926:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3419  000FE4  EE20 F004          	lfsr	2,4
  3420  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3421  000FEA  26D9               	addwf	fsr2l,f,c
  3422  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3423  000FEE  22DA               	addwfc	fsr2h,f,c
  3424  000FF0  0E04               	movlw	4
  3425  000FF2  18DE               	xorwf	postinc2,w,c
  3426  000FF4  10DE               	iorwf	postinc2,w,c
  3427  000FF6  A4D8               	btfss	status,2,c
  3428  000FF8  D7E9               	goto	l23918
  3429  000FFA  D02F               	goto	u28880
  3430  000FFC                     l23934:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3434  000FFC  EE20 F004          	lfsr	2,4
  3435  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3436  001002  26D9               	addwf	fsr2l,f,c
  3437  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3438  001006  22DA               	addwfc	fsr2h,f,c
  3439  001008  0E08               	movlw	8
  3440  00100A  18DE               	xorwf	postinc2,w,c
  3441  00100C  10DE               	iorwf	postinc2,w,c
  3442  00100E  A4D8               	btfss	status,2,c
  3443  001010  D7DD               	goto	l23918
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3447  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3448  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3449  00101A  0E05               	movlw	5
  3450  00101C  D7DF               	goto	L9
  3451  00101E                     l23942:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3455  00101E  EE20 F004          	lfsr	2,4
  3456  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3457  001024  26D9               	addwf	fsr2l,f,c
  3458  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3459  001028  22DA               	addwfc	fsr2h,f,c
  3460  00102A  0E09               	movlw	9
  3461  00102C  18DE               	xorwf	postinc2,w,c
  3462  00102E  10DE               	iorwf	postinc2,w,c
  3463  001030  A4D8               	btfss	status,2,c
  3464  001032  D008               	goto	l23950
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3468  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3469  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3470  00103C  0E04               	movlw	4
  3471  00103E  6EDE               	movwf	postinc2,c
  3472  001040  0E00               	movlw	0
  3473  001042  6EDD               	movwf	postdec2,c
  3474  001044                     l23950:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3478  001044  EE20 F004          	lfsr	2,4
  3479  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3480  00104A  26D9               	addwf	fsr2l,f,c
  3481  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3482  00104E  22DA               	addwfc	fsr2h,f,c
  3483  001050  0E04               	movlw	4
  3484  001052                     L123:
  3485  001052  18DE               	xorwf	postinc2,w,c
  3486  001054  10DE               	iorwf	postinc2,w,c
  3487  001056  A4D8               	btfss	status,2,c
  3488  001058  D029               	goto	l23958
  3489  00105A                     u28880:
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3493  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3494  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3495  001062  0E00               	movlw	0
  3496  001064  D7BB               	goto	L9
  3497  001066                     l3233:
  3498                           
  3499                           ; BSR set to: 0
  3500  001066  D7FF               	goto	l3233
  3501  001068                     l23956:
  3502                           
  3503                           ; BSR set to: 0
  3504  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3505  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3506  001070  50DF               	movf	indf2,w,c
  3507  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3508  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3509                           
  3510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3511                           ; Switch size 1, requested type "simple"
  3512                           ; Number of cases is 1, Range of values is 0 to 0
  3513                           ; switch strategies available:
  3514                           ; Name         Instructions Cycles
  3515                           ; simple_byte            4     3 (average)
  3516                           ;	Chosen strategy is simple_byte
  3517  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3518  001078  0A00               	xorlw	0	; case 0
  3519  00107A  A4D8               	btfss	status,2,c
  3520  00107C  D7F4               	goto	l3233
  3521                           
  3522                           ; BSR set to: 0
  3523                           ; Switch size 1, requested type "simple"
  3524                           ; Number of cases is 7, Range of values is 0 to 6
  3525                           ; switch strategies available:
  3526                           ; Name         Instructions Cycles
  3527                           ; simple_byte           22    12 (average)
  3528                           ;	Chosen strategy is simple_byte
  3529  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3530  001080  0A00               	xorlw	0	; case 0
  3531  001082  B4D8               	btfsc	status,2,c
  3532  001084  D74F               	goto	l23898
  3533  001086  0A01               	xorlw	1	; case 1
  3534  001088  B4D8               	btfsc	status,2,c
  3535  00108A  D78F               	goto	l23914
  3536  00108C  0A03               	xorlw	3	; case 2
  3537  00108E  B4D8               	btfsc	status,2,c
  3538  001090  D7D9               	goto	l23950
  3539  001092  0A01               	xorlw	1	; case 3
  3540  001094  B4D8               	btfsc	status,2,c
  3541  001096  D7A6               	goto	l23926
  3542  001098  0A07               	xorlw	7	; case 4
  3543  00109A  B4D8               	btfsc	status,2,c
  3544  00109C  D7AF               	goto	l23934
  3545  00109E  0A01               	xorlw	1	; case 5
  3546  0010A0  B4D8               	btfsc	status,2,c
  3547  0010A2  D7BD               	goto	l23942
  3548  0010A4  0A03               	xorlw	3	; case 6
  3549  0010A6  B4D8               	btfsc	status,2,c
  3550  0010A8  D7CD               	goto	l23950
  3551  0010AA  D7DD               	goto	l3233
  3552  0010AC                     l23958:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3556  0010AC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3557  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3558  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3559  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3560  0010B4  0E00               	movlw	0
  3561  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3562  0010B8  0E00               	movlw	0
  3563  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3564  0010BC  ECE1  F046         	call	_sm_send_event	;wreg free
  3565                           
  3566                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3567  0010C0  D3BF               	goto	l24270
  3568  0010C2                     l23960:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3572  0010C2  0E06               	movlw	6
  3573  0010C4  0101               	movlb	1	; () banked
  3574  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3575  0010C8  A4D8               	btfss	status,2,c
  3576  0010CA  D02F               	goto	l23970
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3580  0010CC  0E00               	movlw	0
  3581  0010CE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3582  0010D0  0EC8               	movlw	200
  3583  0010D2  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3584                           
  3585                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3586  0010D4  0E01               	movlw	1
  3587  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3588                           
  3589                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3590  0010D8  0E00               	movlw	0
  3591  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3592                           
  3593                           ; BSR set to: 1
  3594                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3595  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3596  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3597  0010E2  EC22  F01A         	call	_setValueToEdit
  3598  0010E6  0900               	iorlw	0
  3599  0010E8  B4D8               	btfsc	status,2,c
  3600  0010EA  0012               	return	
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3604  0010EC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3605  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3606  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3607  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3608  0010F4  0E00               	movlw	0
  3609  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3610  0010F8  0E08               	movlw	8
  3611  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3612  0010FC  ECE1  F046         	call	_sm_send_event	;wreg free
  3613                           
  3614                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3615  001100  0E0A               	movlw	10
  3616  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3617  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3618  001106  ECD2  F04A         	call	___lbdiv
  3619  00110A  0DF6               	mullw	246
  3620  00110C  50F3               	movf	243,w,c
  3621  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3622  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3623  001112  0E00               	movlw	0
  3624  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3625  001116  0E14               	movlw	20
  3626  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3627  00111A  0E0A               	movlw	10
  3628  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3629  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3630  001120  ECD2  F04A         	call	___lbdiv
  3631  001124  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  3632  001128  0012               	return	
  3633  00112A                     l23970:
  3634                           
  3635                           ; BSR set to: 1
  3636  00112A  0E05               	movlw	5
  3637  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3638  00112E  A4D8               	btfss	status,2,c
  3639  001130  D02F               	goto	l23980
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3643  001132  0E00               	movlw	0
  3644  001134  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3645  001136  0EC8               	movlw	200
  3646  001138  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3647                           
  3648                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3649  00113A  0E01               	movlw	1
  3650  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3651                           
  3652                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3653  00113E  0E01               	movlw	1
  3654  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3658  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3659  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3660  001148  EC22  F01A         	call	_setValueToEdit
  3661  00114C  0900               	iorlw	0
  3662  00114E  B4D8               	btfsc	status,2,c
  3663  001150  0012               	return	
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3667  001152  0EBB               	movlw	low _menuConfiguration_stateMachine
  3668  001154  6E12               	movwf	sm_send_event@psm^0,c
  3669  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3670  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3671  00115A  0E00               	movlw	0
  3672  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3673  00115E  0E08               	movlw	8
  3674  001160  6E14               	movwf	sm_send_event@event^0,c
  3675  001162  ECE1  F046         	call	_sm_send_event	;wreg free
  3676                           
  3677                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3678  001166  0E0A               	movlw	10
  3679  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3680  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3681  00116C  ECD2  F04A         	call	___lbdiv
  3682  001170  0DF6               	mullw	246
  3683  001172  50F3               	movf	243,w,c
  3684  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3685  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3686  001178  0E00               	movlw	0
  3687  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3688  00117C  0E14               	movlw	20
  3689  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3690  001180  0E0A               	movlw	10
  3691  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3692  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3693  001186  ECD2  F04A         	call	___lbdiv
  3694  00118A  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3698                           
  3699                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3700  00118E  0012               	return	
  3701  001190                     l23980:
  3702                           
  3703                           ; BSR set to: 1
  3704  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3705  001192  A4D8               	btfss	status,2,c
  3706  001194  D023               	goto	l23992
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3710  001196  0E00               	movlw	0
  3711  001198  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3712  00119A  0E64               	movlw	100
  3713  00119C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3714                           
  3715                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3716  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3717  0011A0  A4D8               	btfss	status,2,c
  3718  0011A2  D003               	goto	l23986
  3719                           
  3720                           ; BSR set to: 1
  3721                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3722  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3723  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3724                           
  3725                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3726  0011A8  D001               	goto	l23988
  3727  0011AA                     l23986:
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3731  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3732  0011AC                     l23988:
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3736  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3737  0011AE  0D02               	mullw	2
  3738  0011B0  0E52               	movlw	low (_menu_st+1)
  3739  0011B2  24F3               	addwf	243,w,c
  3740  0011B4  6ED9               	movwf	fsr2l,c
  3741  0011B6  0E01               	movlw	high (_menu_st+1)
  3742  0011B8  20F4               	addwfc	prodh,w,c
  3743  0011BA  6EDA               	movwf	fsr2h,c
  3744  0011BC  50DF               	movf	indf2,w,c
  3745  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3746  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3747  0011C2  0D02               	mullw	2
  3748  0011C4  0E51               	movlw	low _menu_st
  3749  0011C6  24F3               	addwf	243,w,c
  3750  0011C8  6ED9               	movwf	fsr2l,c
  3751  0011CA  0E01               	movlw	high _menu_st
  3752  0011CC  20F4               	addwfc	prodh,w,c
  3753  0011CE  6EDA               	movwf	fsr2h,c
  3754  0011D0  50DF               	movf	indf2,w,c
  3755  0011D2  ECDF  F04D         	call	_SetSegmentValueMain
  3756  0011D6                     l23990:
  3757                           
  3758                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3759  0011D6  0E01               	movlw	1
  3760  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3761                           
  3762                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3763  0011DA  0012               	return	
  3764  0011DC                     l23992:
  3765                           
  3766                           ; BSR set to: 1
  3767  0011DC  0E17               	movlw	23
  3768  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3769  0011E0  A4D8               	btfss	status,2,c
  3770  0011E2  D021               	goto	l24006
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3774  0011E4  0E00               	movlw	0
  3775  0011E6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3776  0011E8  0E64               	movlw	100
  3777  0011EA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3778                           
  3779                           ; BSR set to: 1
  3780                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3781  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3782                           
  3783                           ; BSR set to: 1
  3784                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3785  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3786  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3787  0011F2  A0D8               	btfss	status,0,c
  3788  0011F4  D002               	goto	l24002
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3792  0011F6  0E00               	movlw	0
  3793  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3794  0011FA                     l24002:
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3798  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3799  0011FC  0D02               	mullw	2
  3800  0011FE  0E52               	movlw	low (_menu_st+1)
  3801  001200  24F3               	addwf	243,w,c
  3802  001202  6ED9               	movwf	fsr2l,c
  3803  001204  0E01               	movlw	high (_menu_st+1)
  3804  001206  20F4               	addwfc	prodh,w,c
  3805  001208  6EDA               	movwf	fsr2h,c
  3806  00120A  50DF               	movf	indf2,w,c
  3807  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3808  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3809  001210  0D02               	mullw	2
  3810  001212  0E51               	movlw	low _menu_st
  3811  001214  24F3               	addwf	243,w,c
  3812  001216  6ED9               	movwf	fsr2l,c
  3813  001218  0E01               	movlw	high _menu_st
  3814  00121A  20F4               	addwfc	prodh,w,c
  3815  00121C  6EDA               	movwf	fsr2h,c
  3816  00121E  50DF               	movf	indf2,w,c
  3817  001220  ECDF  F04D         	call	_SetSegmentValueMain
  3818  001224  D7D8               	goto	l23990
  3819  001226                     l24006:
  3820                           
  3821                           ; BSR set to: 1
  3822  001226  0E0C               	movlw	12
  3823  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3824  00122A  D09A               	goto	l24062
  3825                           
  3826                           ; BSR set to: 1
  3827                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3828  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3829  00122E  A4D8               	btfss	status,2,c
  3830  001230  D053               	goto	l24028
  3831                           
  3832                           ; BSR set to: 1
  3833  001232  0E0A               	movlw	10
  3834  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3835  001236  D050               	goto	l24028
  3836                           
  3837                           ; BSR set to: 1
  3838                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3839  001238  0E00               	movlw	0
  3840  00123A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3841  00123C  0E64               	movlw	100
  3842  00123E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3846  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3847  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3848  001246  EC22  F01A         	call	_setValueToEdit
  3849  00124A  0900               	iorlw	0
  3850  00124C  B4D8               	btfsc	status,2,c
  3851  00124E  D7C3               	goto	l23990
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3855  001250  0EBB               	movlw	low _menuConfiguration_stateMachine
  3856  001252  6E12               	movwf	sm_send_event@psm^0,c
  3857  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3858  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3859  001258  0E00               	movlw	0
  3860  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3861  00125C  0E01               	movlw	1
  3862  00125E  6E14               	movwf	sm_send_event@event^0,c
  3863  001260  ECE1  F046         	call	_sm_send_event	;wreg free
  3864                           
  3865                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3866  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3867  001266  0F1C               	addlw	28
  3868  001268  0100               	movlb	0	; () banked
  3869  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3870  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3871  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3872  001270  E101               	bnz	u29015
  3873  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3874  001274                     u29015:
  3875  001274  B4D8               	btfsc	status,2,c
  3876  001276  D009               	goto	u29020
  3877                           
  3878                           ; BSR set to: 0
  3879  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3880  00127A  0F1B               	addlw	27
  3881  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3882  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3883  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3884  001282  E101               	bnz	u29025
  3885  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3886  001286                     u29025:
  3887  001286  A4D8               	btfss	status,2,c
  3888  001288  D016               	goto	l24024
  3889  00128A                     u29020:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3893  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3894  00128C  0D02               	mullw	2
  3895  00128E  0E52               	movlw	low (_menu_st+1)
  3896  001290  24F3               	addwf	243,w,c
  3897  001292  6ED9               	movwf	fsr2l,c
  3898  001294  0E01               	movlw	high (_menu_st+1)
  3899  001296  20F4               	addwfc	prodh,w,c
  3900  001298  6EDA               	movwf	fsr2h,c
  3901  00129A  50DF               	movf	indf2,w,c
  3902  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3903  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3904  0012A0  0D02               	mullw	2
  3905  0012A2  0E51               	movlw	low _menu_st
  3906  0012A4  24F3               	addwf	243,w,c
  3907  0012A6  6ED9               	movwf	fsr2l,c
  3908  0012A8  0E01               	movlw	high _menu_st
  3909  0012AA  20F4               	addwfc	prodh,w,c
  3910  0012AC  6EDA               	movwf	fsr2h,c
  3911  0012AE  50DF               	movf	indf2,w,c
  3912  0012B0  ECDF  F04D         	call	_SetSegmentValueMain
  3913                           
  3914                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3915  0012B4  D790               	goto	l23990
  3916  0012B6                     l24024:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3920  0012B6  0E0A               	movlw	10
  3921  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3922  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3923  0012BC  ECD2  F04A         	call	___lbdiv
  3924  0012C0  0DF6               	mullw	246
  3925  0012C2  50F3               	movf	243,w,c
  3926  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3927  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3928  0012C8  0E0A               	movlw	10
  3929  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3930  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3931  0012CE  ECD2  F04A         	call	___lbdiv
  3932  0012D2  ECDF  F04D         	call	_SetSegmentValueMain
  3933  0012D6  D77F               	goto	l23990
  3934  0012D8                     l24028:
  3935                           
  3936                           ; BSR set to: 1
  3937  0012D8  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3938  0012DA  D008               	goto	u29040
  3939  0012DC  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3940  0012DE  E103               	bnz	u29030
  3941  0012E0  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3942  0012E2  A0D8               	btfss	status,0,c
  3943  0012E4  D003               	goto	u29040
  3944  0012E6                     u29030:
  3945                           
  3946                           ; BSR set to: 1
  3947  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3948  0012E8  A4D8               	btfss	status,2,c
  3949  0012EA  D01E               	goto	l24046
  3950  0012EC                     u29040:
  3951                           
  3952                           ; BSR set to: 1
  3953  0012EC  0E02               	movlw	2
  3954  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3955  0012F0  D01B               	goto	l24046
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3959  0012F2  0E00               	movlw	0
  3960  0012F4  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3961  0012F6  0E00               	movlw	0
  3962  0012F8  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3966  0012FA  0EF2               	movlw	low _main_stateMachine
  3967  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3968  0012FE  0E01               	movlw	high _main_stateMachine
  3969  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3970  001302  0E00               	movlw	0
  3971  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3972  001306  0E07               	movlw	7
  3973  001308  6E14               	movwf	sm_send_event@event^0,c
  3974  00130A  ECE1  F046         	call	_sm_send_event	;wreg free
  3975                           
  3976                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3977  00130E  0E18               	movlw	24
  3978  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3979  001312  0E18               	movlw	24
  3980  001314  ECDF  F04D         	call	_SetSegmentValueMain
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3984  001318  0E00               	movlw	0
  3985  00131A  0101               	movlb	1	; () banked
  3986  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3990  00131E  0E01               	movlw	1
  3991  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3995  001322  EC32  F04F         	call	_ClearFlag_rfCMD	;wreg free
  3996                           
  3997                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3998  001326  0012               	return	
  3999  001328                     l24046:
  4000                           
  4001                           ; BSR set to: 1
  4002  001328  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4003  00132A  D008               	goto	u29070
  4004  00132C  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4005  00132E  E103               	bnz	u29060
  4006  001330  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4007  001332  A0D8               	btfss	status,0,c
  4008  001334  D003               	goto	u29070
  4009  001336                     u29060:
  4010                           
  4011                           ; BSR set to: 1
  4012  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4013  001338  A4D8               	btfss	status,2,c
  4014  00133A  D004               	goto	l24054
  4015  00133C                     u29070:
  4016                           
  4017                           ; BSR set to: 1
  4018                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4019  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  4020  00133E  EC67  F024         	call	_load_New_Menu
  4021  001342  D749               	goto	l23990
  4022  001344                     l24054:
  4023                           
  4024                           ; BSR set to: 1
  4025  001344  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4026  001346  D005               	goto	u29080
  4027  001348  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4028  00134A  E102               	bnz	u29081
  4029  00134C  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4030  00134E  B0D8               	btfsc	status,0,c
  4031  001350                     u29081:
  4032  001350  0012               	return	
  4033  001352                     u29080:
  4034                           
  4035                           ; BSR set to: 1
  4036  001352  0E01               	movlw	1
  4037  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  4038  001356  0012               	return	
  4039                           
  4040                           ; BSR set to: 1
  4041                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4042  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  4043  00135A  EC67  F024         	call	_load_New_Menu
  4044  00135E  D73B               	goto	l23990
  4045  001360                     l24062:
  4046                           
  4047                           ; BSR set to: 1
  4048  001360  0E27               	movlw	39
  4049  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4050  001364  A4D8               	btfss	status,2,c
  4051  001366  D032               	goto	l24078
  4052                           
  4053                           ; BSR set to: 1
  4054  001368  0E0A               	movlw	10
  4055  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4056  00136C  D02F               	goto	l24078
  4057                           
  4058                           ; BSR set to: 1
  4059  00136E  0E0D               	movlw	13
  4060  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4061  001372  B4D8               	btfsc	status,2,c
  4062  001374  D02B               	goto	l24078
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4066  001376  0E00               	movlw	0
  4067  001378  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4068  00137A  0E64               	movlw	100
  4069  00137C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4070                           
  4071                           ; BSR set to: 1
  4072                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4073  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4074  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  4075  001384  EC22  F01A         	call	_setValueToEdit
  4076  001388  0900               	iorlw	0
  4077  00138A  B4D8               	btfsc	status,2,c
  4078  00138C  D724               	goto	l23990
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4082  00138E  0EBB               	movlw	low _menuConfiguration_stateMachine
  4083  001390  6E12               	movwf	sm_send_event@psm^0,c
  4084  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  4085  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4086  001396  0E00               	movlw	0
  4087  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  4088  00139A  0E08               	movlw	8
  4089  00139C  6E14               	movwf	sm_send_event@event^0,c
  4090  00139E  ECE1  F046         	call	_sm_send_event	;wreg free
  4091                           
  4092                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4093  0013A2  0E0A               	movlw	10
  4094  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  4095  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4096  0013A8  ECD2  F04A         	call	___lbdiv
  4097  0013AC  0DF6               	mullw	246
  4098  0013AE  50F3               	movf	243,w,c
  4099  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4100  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4101  0013B4  0E00               	movlw	0
  4102  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4103  0013B8  0E14               	movlw	20
  4104  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4105  0013BC  0E0A               	movlw	10
  4106  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4107  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4108  0013C2  ECD2  F04A         	call	___lbdiv
  4109  0013C6  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  4110  0013CA  D705               	goto	l23990
  4111  0013CC                     l24078:
  4112                           
  4113                           ; BSR set to: 1
  4114  0013CC  0E0D               	movlw	13
  4115  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4116  0013D0  A4D8               	btfss	status,2,c
  4117  0013D2  D027               	goto	l24096
  4118                           
  4119                           ; BSR set to: 1
  4120  0013D4  51AB               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4121  0013D6  11AC               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4122  0013D8  A4D8               	btfss	status,2,c
  4123  0013DA  D023               	goto	l24096
  4124                           
  4125                           ; BSR set to: 1
  4126                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4127  0013DC  0E00               	movlw	0
  4128  0013DE  0100               	movlb	0	; () banked
  4129  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4130                           
  4131                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4132  0013E2  0E00               	movlw	0
  4133  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4134                           
  4135                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4136  0013E6  0E00               	movlw	0
  4137  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4141  0013EA  0E02               	movlw	2
  4142  0013EC  ECEF  F04A         	call	_SaveNVM_VarSystem
  4143                           
  4144                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4145  0013F0  0EF2               	movlw	low _main_stateMachine
  4146  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4147  0013F4  0E01               	movlw	high _main_stateMachine
  4148  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4149  0013F8  0E00               	movlw	0
  4150  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4151  0013FC  0E07               	movlw	7
  4152  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4153  001400  ECE1  F046         	call	_sm_send_event	;wreg free
  4154                           
  4155                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4156  001404  0E18               	movlw	24
  4157  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4158  001408  0E18               	movlw	24
  4159  00140A  ECDF  F04D         	call	_SetSegmentValueMain
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4163  00140E  0E01               	movlw	1
  4164  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4165  001412                     l24092:
  4166                           
  4167                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4168  001412  EC32  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4169  001416                     l24094:
  4170                           
  4171                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4172  001416  0E00               	movlw	0
  4173  001418  0101               	movlb	1	; () banked
  4174  00141A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4175  00141C  0E00               	movlw	0
  4176  00141E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4177                           
  4178                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4179  001420  0012               	return	
  4180  001422                     l24096:
  4181                           
  4182                           ; BSR set to: 1
  4183  001422  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4184  001424  D008               	goto	u29170
  4185  001426  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4186  001428  E103               	bnz	u29160
  4187  00142A  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4188  00142C  A0D8               	btfss	status,0,c
  4189  00142E  D003               	goto	u29170
  4190  001430                     u29160:
  4191                           
  4192                           ; BSR set to: 1
  4193  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4194  001432  A4D8               	btfss	status,2,c
  4195  001434  0012               	return	
  4196  001436                     u29170:
  4197                           
  4198                           ; BSR set to: 1
  4199                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4200  001436  0EF2               	movlw	low _main_stateMachine
  4201  001438  6E12               	movwf	sm_send_event@psm^0,c
  4202  00143A  0E01               	movlw	high _main_stateMachine
  4203  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4204  00143E  0E00               	movlw	0
  4205  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4206  001442  0E07               	movlw	7
  4207  001444  6E14               	movwf	sm_send_event@event^0,c
  4208  001446  ECE1  F046         	call	_sm_send_event	;wreg free
  4209                           
  4210                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4211  00144A  0E18               	movlw	24
  4212  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4213  00144E  0E18               	movlw	24
  4214  001450  ECDF  F04D         	call	_SetSegmentValueMain
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4218  001454  EC32  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4219                           
  4220                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4221  001458  0E01               	movlw	1
  4222  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4223  00145C  D7DC               	goto	l24094
  4224  00145E                     l24110:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4228  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4229  001460  A4D8               	btfss	status,2,c
  4230  001462  D047               	goto	l24130
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4234  001464  0E00               	movlw	0
  4235  001466  0101               	movlb	1	; () banked
  4236  001468  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4237  00146A  0E64               	movlw	100
  4238  00146C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4239                           
  4240                           ; BSR set to: 1
  4241                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4242  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4243  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4244  001472  A0D8               	btfss	status,0,c
  4245  001474  D003               	goto	l24118
  4246                           
  4247                           ; BSR set to: 1
  4248                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4249  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4250                           
  4251                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4252  00147A  D001               	goto	l24120
  4253  00147C                     l24118:
  4254                           
  4255                           ; BSR set to: 1
  4256                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4257  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4258  00147E                     l24120:
  4259                           
  4260                           ; BSR set to: 1
  4261                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4262  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4263  001480  0F1C               	addlw	28
  4264  001482  0100               	movlb	0	; () banked
  4265  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4266  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4267  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4268  00148A  E101               	bnz	u29205
  4269  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4270  00148E                     u29205:
  4271  00148E  B4D8               	btfsc	status,2,c
  4272  001490  D009               	goto	u29210
  4273                           
  4274                           ; BSR set to: 0
  4275  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4276  001494  0F1B               	addlw	27
  4277  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4278  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4279  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4280  00149C  E101               	bnz	u29215
  4281  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4282  0014A0                     u29215:
  4283  0014A0  A4D8               	btfss	status,2,c
  4284  0014A2  D016               	goto	l24126
  4285  0014A4                     u29210:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4289  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4290  0014A6  0D02               	mullw	2
  4291  0014A8  0E52               	movlw	low (_menu_st+1)
  4292  0014AA  24F3               	addwf	243,w,c
  4293  0014AC  6ED9               	movwf	fsr2l,c
  4294  0014AE  0E01               	movlw	high (_menu_st+1)
  4295  0014B0  20F4               	addwfc	prodh,w,c
  4296  0014B2  6EDA               	movwf	fsr2h,c
  4297  0014B4  50DF               	movf	indf2,w,c
  4298  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4299  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4300  0014BA  0D02               	mullw	2
  4301  0014BC  0E51               	movlw	low _menu_st
  4302  0014BE  24F3               	addwf	243,w,c
  4303  0014C0  6ED9               	movwf	fsr2l,c
  4304  0014C2  0E01               	movlw	high _menu_st
  4305  0014C4  20F4               	addwfc	prodh,w,c
  4306  0014C6  6EDA               	movwf	fsr2h,c
  4307  0014C8  50DF               	movf	indf2,w,c
  4308  0014CA  ECDF  F04D         	call	_SetSegmentValueMain
  4309                           
  4310                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4311  0014CE  D683               	goto	l23990
  4312  0014D0                     l24126:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4316  0014D0  0E0A               	movlw	10
  4317  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4318  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4319  0014D6  ECD2  F04A         	call	___lbdiv
  4320  0014DA  0DF6               	mullw	246
  4321  0014DC  50F3               	movf	243,w,c
  4322  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4323  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4324  0014E2  0E0A               	movlw	10
  4325  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4326  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4327  0014E8  ECD2  F04A         	call	___lbdiv
  4328  0014EC  ECDF  F04D         	call	_SetSegmentValueMain
  4329  0014F0  D672               	goto	l23990
  4330  0014F2                     l24130:
  4331                           
  4332                           ; BSR set to: 0
  4333  0014F2  0E17               	movlw	23
  4334  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4335  0014F6  A4D8               	btfss	status,2,c
  4336  0014F8  D045               	goto	l24150
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4340  0014FA  0E00               	movlw	0
  4341  0014FC  0101               	movlb	1	; () banked
  4342  0014FE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4343  001500  0E64               	movlw	100
  4344  001502  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4348  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4352  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4353  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4354  00150A  A0D8               	btfss	status,0,c
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4358  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4362  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4363  001512  0F1C               	addlw	28
  4364  001514  0100               	movlb	0	; () banked
  4365  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4366  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4367  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4368  00151C  E101               	bnz	u29245
  4369  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4370  001520                     u29245:
  4371  001520  B4D8               	btfsc	status,2,c
  4372  001522  D009               	goto	u29250
  4373                           
  4374                           ; BSR set to: 0
  4375  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4376  001526  0F1B               	addlw	27
  4377  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4378  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4379  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4380  00152E  E101               	bnz	u29255
  4381  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4382  001532                     u29255:
  4383  001532  A4D8               	btfss	status,2,c
  4384  001534  D016               	goto	l24146
  4385  001536                     u29250:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4389  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4390  001538  0D02               	mullw	2
  4391  00153A  0E52               	movlw	low (_menu_st+1)
  4392  00153C  24F3               	addwf	243,w,c
  4393  00153E  6ED9               	movwf	fsr2l,c
  4394  001540  0E01               	movlw	high (_menu_st+1)
  4395  001542  20F4               	addwfc	prodh,w,c
  4396  001544  6EDA               	movwf	fsr2h,c
  4397  001546  50DF               	movf	indf2,w,c
  4398  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4399  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4400  00154C  0D02               	mullw	2
  4401  00154E  0E51               	movlw	low _menu_st
  4402  001550  24F3               	addwf	243,w,c
  4403  001552  6ED9               	movwf	fsr2l,c
  4404  001554  0E01               	movlw	high _menu_st
  4405  001556  20F4               	addwfc	prodh,w,c
  4406  001558  6EDA               	movwf	fsr2h,c
  4407  00155A  50DF               	movf	indf2,w,c
  4408  00155C  ECDF  F04D         	call	_SetSegmentValueMain
  4409                           
  4410                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4411  001560  D63A               	goto	l23990
  4412  001562                     l24146:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4416  001562  0E0A               	movlw	10
  4417  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4418  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4419  001568  ECD2  F04A         	call	___lbdiv
  4420  00156C  0DF6               	mullw	246
  4421  00156E  50F3               	movf	243,w,c
  4422  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4423  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4424  001574  0E0A               	movlw	10
  4425  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4426  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4427  00157A  ECD2  F04A         	call	___lbdiv
  4428  00157E  ECDF  F04D         	call	_SetSegmentValueMain
  4429  001582  D629               	goto	l23990
  4430  001584                     l24150:
  4431                           
  4432                           ; BSR set to: 0
  4433  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4434  001586  A4D8               	btfss	status,2,c
  4435  001588  D023               	goto	l24166
  4436                           
  4437                           ; BSR set to: 0
  4438  00158A  0E09               	movlw	9
  4439  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4440  00158E  D020               	goto	l24166
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4444  001590  0E00               	movlw	0
  4445  001592  0101               	movlb	1	; () banked
  4446  001594  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4447  001596  0E64               	movlw	100
  4448  001598  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4449                           
  4450                           ; BSR set to: 1
  4451                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4452  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4453  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4454  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4458  0015A6  0EBB               	movlw	low _menuConfiguration_stateMachine
  4459  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4460  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4461  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4462  0015AE  0E00               	movlw	0
  4463  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4464  0015B2  0E02               	movlw	2
  4465  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4466  0015B6  ECE1  F046         	call	_sm_send_event	;wreg free
  4467                           
  4468                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4469  0015BA  0E01               	movlw	1
  4470  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4471  0015BE  0E19               	movlw	25
  4472  0015C0  ECDF  F04D         	call	_SetSegmentValueMain
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4476  0015C4  0E00               	movlw	0
  4477  0015C6  0101               	movlb	1	; () banked
  4478  0015C8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4479  0015CA  0E28               	movlw	40
  4480  0015CC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4481  0015CE  D603               	goto	l23990
  4482  0015D0                     l24166:
  4483                           
  4484                           ; BSR set to: 0
  4485  0015D0  0101               	movlb	1	; () banked
  4486  0015D2  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4487  0015D4  D008               	goto	u29290
  4488  0015D6  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4489  0015D8  E103               	bnz	u29280
  4490  0015DA  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4491  0015DC  A0D8               	btfss	status,0,c
  4492  0015DE  D003               	goto	u29290
  4493  0015E0                     u29280:
  4494                           
  4495                           ; BSR set to: 1
  4496  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4497  0015E2  A4D8               	btfss	status,2,c
  4498  0015E4  0012               	return	
  4499  0015E6                     u29290:
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4503  0015E6  0E00               	movlw	0
  4504  0015E8  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4505  0015EA  0E64               	movlw	100
  4506  0015EC  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4510  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4511  0015F0  EC67  F024         	call	_load_New_Menu
  4512                           
  4513                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4514  0015F4  0EBB               	movlw	low _menuConfiguration_stateMachine
  4515  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4516  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4517  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4518  0015FC  0E00               	movlw	0
  4519  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4520  001600  0E03               	movlw	3
  4521  001602  6E14               	movwf	sm_send_event@event^0,c
  4522  001604  ECE1  F046         	call	_sm_send_event	;wreg free
  4523  001608  D5E6               	goto	l23990
  4524  00160A                     l24178:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4528  00160A  0101               	movlb	1	; () banked
  4529  00160C  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4530  00160E  D005               	goto	u29300
  4531  001610  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4532  001612  E102               	bnz	u29301
  4533  001614  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4534  001616  B0D8               	btfsc	status,0,c
  4535  001618                     u29301:
  4536  001618  0012               	return	
  4537  00161A                     u29300:
  4538                           
  4539                           ; BSR set to: 1
  4540                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4541  00161A  0E00               	movlw	0
  4542  00161C  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4543  00161E  0E64               	movlw	100
  4544  001620  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4545                           
  4546                           ; BSR set to: 1
  4547                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4548  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4549  001624  A4D8               	btfss	status,2,c
  4550  001626  D004               	goto	u29320
  4551                           
  4552                           ; BSR set to: 1
  4553  001628  0E08               	movlw	8
  4554  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4555  00162C  B4D8               	btfsc	status,2,c
  4556  00162E  D00A               	goto	u29330
  4557  001630                     u29320:
  4558                           
  4559                           ; BSR set to: 1
  4560  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4561  001632  0F1C               	addlw	28
  4562  001634  0100               	movlb	0	; () banked
  4563  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4564  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4565  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4566  00163C  E101               	bnz	u29335
  4567  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4568  001640                     u29335:
  4569  001640  A4D8               	btfss	status,2,c
  4570  001642  D005               	goto	l24190
  4571  001644                     u29330:
  4572                           
  4573                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4574  001644  0100               	movlb	0	; () banked
  4575  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4576  001648  EC99  F033         	call	_ResetDefaultMemory
  4577                           
  4578                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4579  00164C  D023               	goto	l24208
  4580  00164E                     l24190:
  4581                           
  4582                           ; BSR set to: 0
  4583  00164E  0101               	movlb	1	; () banked
  4584  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4585  001652  B4D8               	btfsc	status,2,c
  4586  001654  D004               	goto	u29350
  4587                           
  4588                           ; BSR set to: 1
  4589  001656  0E0A               	movlw	10
  4590  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4591  00165A  A4D8               	btfss	status,2,c
  4592  00165C  D004               	goto	l24196
  4593  00165E                     u29350:
  4594                           
  4595                           ; BSR set to: 1
  4596                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4597  00165E  0E01               	movlw	1
  4598  001660  ECEF  F04A         	call	_SaveNVM_VarSystem
  4599                           
  4600                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4601  001664  D017               	goto	l24208
  4602  001666                     l24196:
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4606  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4607  001668  A4D8               	btfss	status,2,c
  4608  00166A  D00E               	goto	l24204
  4609                           
  4610                           ; BSR set to: 1
  4611  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4612  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4613  001674  50DF               	movf	indf2,w,c
  4614  001676  B4D8               	btfsc	status,2,c
  4615  001678  D007               	goto	l24204
  4616                           
  4617                           ; BSR set to: 1
  4618  00167A  0E06               	movlw	6
  4619  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4620  00167E  A4D8               	btfss	status,2,c
  4621  001680  D003               	goto	l24204
  4622                           
  4623                           ; BSR set to: 1
  4624                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4625  001682  0E09               	movlw	9
  4626  001684  0100               	movlb	0	; () banked
  4627  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4628  001688                     l24204:
  4629                           
  4630                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4631  001688  0E01               	movlw	1
  4632  00168A  ECEF  F04A         	call	_SaveNVM_VarSystem
  4633                           
  4634                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4635  00168E  0E00               	movlw	0
  4636  001690  ECEF  F04A         	call	_SaveNVM_VarSystem
  4637  001694                     l24208:
  4638                           
  4639                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4640  001694  0EBB               	movlw	low _menuConfiguration_stateMachine
  4641  001696  6E12               	movwf	sm_send_event@psm^0,c
  4642  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4643  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4644  00169C  0E00               	movlw	0
  4645  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4646  0016A0  0E04               	movlw	4
  4647  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4648  0016A4  ECE1  F046         	call	_sm_send_event	;wreg free
  4649                           
  4650                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4651  0016A8  0101               	movlb	1	; () banked
  4652  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4653                           
  4654                           ; BSR set to: 1
  4655                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4656  0016AC  0E02               	movlw	2
  4657  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4658  0016B0  D005               	goto	l24218
  4659                           
  4660                           ; BSR set to: 1
  4661                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4662  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4663                           
  4664                           ; BSR set to: 1
  4665                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4666  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4667  0016B6  EC67  F024         	call	_load_New_Menu
  4668                           
  4669                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4670  0016BA  0012               	return	
  4671  0016BC                     l24218:
  4672                           
  4673                           ; BSR set to: 1
  4674  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4675  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4676  0016C0  A0D8               	btfss	status,0,c
  4677  0016C2  D005               	goto	l24224
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4681  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4682                           
  4683                           ; BSR set to: 1
  4684                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4685  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4686  0016C8  EC67  F024         	call	_load_New_Menu
  4687                           
  4688                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4689  0016CC  0012               	return	
  4690  0016CE                     l24224:
  4691                           
  4692                           ; BSR set to: 1
  4693                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4694  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4695  0016D0  EC67  F024         	call	_load_New_Menu
  4696  0016D4  0012               	return	
  4697  0016D6                     l24226:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4701  0016D6  0101               	movlb	1	; () banked
  4702  0016D8  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4703  0016DA  D005               	goto	u29410
  4704  0016DC  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4705  0016DE  E102               	bnz	u29411
  4706  0016E0  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4707  0016E2  B0D8               	btfsc	status,0,c
  4708  0016E4                     u29411:
  4709  0016E4  0012               	return	
  4710  0016E6                     u29410:
  4711                           
  4712                           ; BSR set to: 1
  4713                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4714  0016E6  0100               	movlb	0	; () banked
  4715  0016E8  51FC               	movf	_auxCounter& (0+255),w,b
  4716  0016EA  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4717  0016EC  A4D8               	btfss	status,2,c
  4718  0016EE  D010               	goto	l24236
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4722  0016F0  0101               	movlb	1	; () banked
  4723  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4724                           
  4725                           ; BSR set to: 1
  4726                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4727  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4728  0016F6  EC67  F024         	call	_load_New_Menu
  4729                           
  4730                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4731  0016FA  0EBB               	movlw	low _menuConfiguration_stateMachine
  4732  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4733  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4734  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4735  001702  0E00               	movlw	0
  4736  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4737  001706  0E04               	movlw	4
  4738  001708  6E14               	movwf	sm_send_event@event^0,c
  4739  00170A  ECE1  F046         	call	_sm_send_event	;wreg free
  4740                           
  4741                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4742  00170E  0012               	return	
  4743  001710                     l24236:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4747  001710  0E00               	movlw	0
  4748  001712  0101               	movlb	1	; () banked
  4749  001714  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4750  001716  0E3C               	movlw	60
  4751  001718  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4752                           
  4753                           ; BSR set to: 1
  4754                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4755  00171A  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4756  00171E  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4757  001722  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4758  001726  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4759  00172A  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4760  00172E  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4761  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4762  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4763  001736  ECA6  F042         	call	___lldiv	;wreg free
  4764  00173A  5010               	movf	?___lldiv^0,w,c
  4765  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4766                           
  4767                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4768  00173E  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4769  001742  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4770  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4771  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4772  00174A  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4773  00174E  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4774  001752  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4775  001756  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4776  00175A  ECA6  F042         	call	___lldiv	;wreg free
  4777  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4778  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4779  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4780  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4781  00176E  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  4782  001772  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4783  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4784  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4785  00177A  EC1C  F048         	call	___lmul	;wreg free
  4786  00177E  501D               	movf	?___lmul^0,w,c
  4787  001780  0102               	movlb	2	; () banked
  4788  001782  5DF4               	subwf	_tempCounter& (0+255),w,b
  4789  001784  6FF4               	movwf	_tempCounter& (0+255),b
  4790  001786  501E               	movf	(?___lmul+1)^0,w,c
  4791  001788  59F5               	subwfb	(_tempCounter+1)& (0+255),w,b
  4792  00178A  6FF5               	movwf	(_tempCounter+1)& (0+255),b
  4793  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4794  00178E  59F6               	subwfb	(_tempCounter+2)& (0+255),w,b
  4795  001790  6FF6               	movwf	(_tempCounter+2)& (0+255),b
  4796  001792  5020               	movf	(?___lmul+3)^0,w,c
  4797  001794  59F7               	subwfb	(_tempCounter+3)& (0+255),w,b
  4798  001796  6FF7               	movwf	(_tempCounter+3)& (0+255),b
  4799                           
  4800                           ; BSR set to: 2
  4801                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4802  001798  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  4803  00179C  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4804  0017A0  0E00               	movlw	0
  4805  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4806  0017A4  0E64               	movlw	100
  4807  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4808  0017A8  EC9C  F048         	call	___lwdiv	;wreg free
  4809  0017AC  C010  F0FC         	movff	?___lwdiv,_auxCounter
  4810  0017B0  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  4811                           
  4812                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4813  0017B4  0E0A               	movlw	10
  4814  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4815  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4816  0017BA  ECD2  F04A         	call	___lbdiv
  4817  0017BE  0DF6               	mullw	246
  4818  0017C0  50F3               	movf	243,w,c
  4819  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4820  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4821  0017C6  0E00               	movlw	0
  4822  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4823  0017CA  0E0A               	movlw	10
  4824  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4825  0017CE  0E0A               	movlw	10
  4826  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4827  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4828  0017D4  ECD2  F04A         	call	___lbdiv
  4829  0017D8  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  4830  0017DC  0012               	return	
  4831  0017DE                     l24246:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4835  0017DE  0101               	movlb	1	; () banked
  4836  0017E0  05FF               	decf	_firstselectflag& (0+255),w,b
  4837  0017E2  A4D8               	btfss	status,2,c
  4838  0017E4  D004               	goto	l24250
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4842  0017E6  0E00               	movlw	0
  4843  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4844                           
  4845                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4846  0017EA  0E00               	movlw	0
  4847  0017EC  6FFF               	movwf	_firstselectflag& (0+255),b
  4848  0017EE                     l24250:
  4849                           
  4850                           ; BSR set to: 1
  4851                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4852  0017EE  EC3F  F01F         	call	_controlSelectRemote	;wreg free
  4853                           
  4854                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4855  0017F2  0012               	return	
  4856  0017F4                     l24252:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4860  0017F4  ECF2  F03D         	call	_controlSaveRemote	;wreg free
  4861                           
  4862                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4863  0017F8  0012               	return	
  4864  0017FA                     l24254:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4868  0017FA  EC70  F04B         	call	_controlLearnDigit	;wreg free
  4869                           
  4870                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4871  0017FE  0101               	movlb	1	; () banked
  4872  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4873  001802  A4D8               	btfss	status,2,c
  4874  001804  0012               	return	
  4875                           
  4876                           ; BSR set to: 1
  4877                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4878  001806  0EF2               	movlw	low _main_stateMachine
  4879  001808  6E12               	movwf	sm_send_event@psm^0,c
  4880  00180A  0E01               	movlw	high _main_stateMachine
  4881  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4882  00180E  0E00               	movlw	0
  4883  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4884  001812  0E07               	movlw	7
  4885  001814  6E14               	movwf	sm_send_event@event^0,c
  4886  001816  ECE1  F046         	call	_sm_send_event	;wreg free
  4887                           
  4888                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4889  00181A  0EBB               	movlw	low _menuConfiguration_stateMachine
  4890  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4891  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4892  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4893  001822  0E00               	movlw	0
  4894  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4895  001826  0E04               	movlw	4
  4896  001828  6E14               	movwf	sm_send_event@event^0,c
  4897  00182A  ECE1  F046         	call	_sm_send_event	;wreg free
  4898                           
  4899                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4900  00182E  0E18               	movlw	24
  4901  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4902  001832  0E18               	movlw	24
  4903  001834  ECDF  F04D         	call	_SetSegmentValueMain
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4907  001838  0E02               	movlw	2
  4908  00183A  ECEF  F04A         	call	_SaveNVM_VarSystem
  4909  00183E  D5E9               	goto	l24092
  4910  001840                     l24270:
  4911  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4912  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4913  001848  50DF               	movf	indf2,w,c
  4914  00184A  0100               	movlb	0	; () banked
  4915  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4916  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4917                           
  4918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4919                           ; Switch size 1, requested type "simple"
  4920                           ; Number of cases is 1, Range of values is 0 to 0
  4921                           ; switch strategies available:
  4922                           ; Name         Instructions Cycles
  4923                           ; simple_byte            4     3 (average)
  4924                           ;	Chosen strategy is simple_byte
  4925  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4926  001852  0A00               	xorlw	0	; case 0
  4927  001854  A4D8               	btfss	status,2,c
  4928  001856  0012               	return	
  4929                           
  4930                           ; BSR set to: 0
  4931                           ; Switch size 1, requested type "simple"
  4932                           ; Number of cases is 7, Range of values is 0 to 6
  4933                           ; switch strategies available:
  4934                           ; Name         Instructions Cycles
  4935                           ; simple_byte           22    12 (average)
  4936                           ;	Chosen strategy is simple_byte
  4937  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4938  00185A  0A00               	xorlw	0	; case 0
  4939  00185C  B4D8               	btfsc	status,2,c
  4940  00185E  D431               	goto	l23960
  4941  001860  0A01               	xorlw	1	; case 1
  4942  001862  B4D8               	btfsc	status,2,c
  4943  001864  D5FC               	goto	l24110
  4944  001866  0A03               	xorlw	3	; case 2
  4945  001868  B4D8               	btfsc	status,2,c
  4946  00186A  D6CF               	goto	l24178
  4947  00186C  0A01               	xorlw	1	; case 3
  4948  00186E  B4D8               	btfsc	status,2,c
  4949  001870  D732               	goto	l24226
  4950  001872  0A07               	xorlw	7	; case 4
  4951  001874  B4D8               	btfsc	status,2,c
  4952  001876  D7B3               	goto	l24246
  4953  001878  0A01               	xorlw	1	; case 5
  4954  00187A  B4D8               	btfsc	status,2,c
  4955  00187C  D7BB               	goto	l24252
  4956  00187E  0A03               	xorlw	3	; case 6
  4957  001880  A4D8               	btfss	status,2,c
  4958  001882  0012               	return	
  4959  001884  D7BA               	goto	l24254
  4960  001886                     __end_of_sm_execute_menuConfiguration:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _setValueToEdit *****************
  4964 ;; Defined at:
  4965 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  menuType        1    wreg     enum E10813
  4968 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  menuType        1    6[BANK0 ] enum E10813
  4971 ;;  posindex        1    8[BANK0 ] unsigned char 
  4972 ;;  posindex        1    7[BANK0 ] unsigned char 
  4973 ;;  haveValueToE    1    9[BANK0 ] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      unsigned char 
  4976 ;; Registers used:
  4977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 3F/1
  4980 ;;		On exit  : 3F/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4983 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;Total ram usage:        7 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; Hardware stack levels required when called: 14
  4990 ;; This function calls:
  4991 ;;		_InitReceiver
  4992 ;;		_SaveNVM_VarSystem
  4993 ;;		_cmdMemoryIsEmpty
  4994 ;;		_load_New_Menu
  4995 ;;		_sm_send_event
  4996 ;; This function is called by:
  4997 ;;		_sm_execute_menuConfiguration
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text3
  5002  003444                     __ptext3:
  5003                           	callstack 0
  5004  003444                     _setValueToEdit:
  5005                           	callstack 14
  5006                           
  5007                           ;incstack = 0
  5008                           ;setValueToEdit@menuType stored from wreg
  5009  003444  0100               	movlb	0	; () banked
  5010  003446  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  5011                           
  5012                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5013  003448  0E00               	movlw	0
  5014  00344A  0100               	movlb	0	; () banked
  5015  00344C  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5016                           
  5017                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5018  00344E  D267               	goto	l22146
  5019  003450                     l3358:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5023  003450  C168  F169         	movff	_menu_st+23,_menu_st+24
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5027  003454  0E00               	movlw	0
  5028  003456  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5029                           
  5030                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5031  003458  D034               	goto	l21894
  5032  00345A                     l21848:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5036  00345A  0E04               	movlw	4
  5037  00345C  EC67  F024         	call	_load_New_Menu
  5038                           
  5039                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5040  003460  D287               	goto	l22148
  5041  003462                     l21850:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5045  003462  0E05               	movlw	5
  5046  003464  EC67  F024         	call	_load_New_Menu
  5047                           
  5048                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5049  003468  D283               	goto	l22148
  5050  00346A                     l21852:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5054  00346A  0E06               	movlw	6
  5055  00346C  EC67  F024         	call	_load_New_Menu
  5056                           
  5057                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5058  003470  D27F               	goto	l22148
  5059  003472                     l21854:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5063  003472  0E63               	movlw	99
  5064  003474  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5068  003476  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5072  00347A  0E9C               	movlw	low (_var_sys_NVM+4)
  5073  00347C                     L13:
  5074  00347C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5075  00347E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5079  003480  0E01               	movlw	1
  5080  003482  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5081                           
  5082                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5083  003484  D275               	goto	l22148
  5084  003486                     l21862:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5088  003486  0E07               	movlw	7
  5089  003488  EC67  F024         	call	_load_New_Menu
  5090                           
  5091                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5092  00348C  D271               	goto	l22148
  5093  00348E                     l21864:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5097  00348E  0E08               	movlw	8
  5098  003490  EC67  F024         	call	_load_New_Menu
  5099                           
  5100                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5101  003494  D26D               	goto	l22148
  5102  003496                     l21866:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5106  003496  0E09               	movlw	9
  5107  003498  EC67  F024         	call	_load_New_Menu
  5108                           
  5109                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5110  00349C  D269               	goto	l22148
  5111  00349E                     l21868:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5115  00349E  0E02               	movlw	2
  5116  0034A0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5120  0034A2  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5124  0034A6  0EA4               	movlw	low (_var_sys_NVM+12)
  5125  0034A8  D7E9               	goto	L13
  5126  0034AA                     l21876:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5130  0034AA  0E03               	movlw	3
  5131  0034AC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5135  0034AE  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5139  0034B2  0EA5               	movlw	low (_var_sys_NVM+13)
  5140  0034B4  D7E3               	goto	L13
  5141  0034B6                     l21884:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5145  0034B6  0E01               	movlw	1
  5146  0034B8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5150  0034BA  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5154  0034BE  0EA6               	movlw	low (_var_sys_NVM+14)
  5155  0034C0  D7DD               	goto	L13
  5156  0034C2                     l21894:
  5157                           
  5158                           ; BSR set to: 0
  5159  0034C2  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5160  0034C4  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5161  0034C6  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5162                           
  5163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5164                           ; Switch size 1, requested type "simple"
  5165                           ; Number of cases is 1, Range of values is 0 to 0
  5166                           ; switch strategies available:
  5167                           ; Name         Instructions Cycles
  5168                           ; simple_byte            4     3 (average)
  5169                           ;	Chosen strategy is simple_byte
  5170  0034C8  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5171  0034CA  0A00               	xorlw	0	; case 0
  5172  0034CC  A4D8               	btfss	status,2,c
  5173  0034CE  D250               	goto	l22148
  5174                           
  5175                           ; BSR set to: 0
  5176                           ; Switch size 1, requested type "simple"
  5177                           ; Number of cases is 10, Range of values is 0 to 9
  5178                           ; switch strategies available:
  5179                           ; Name         Instructions Cycles
  5180                           ; simple_byte           31    16 (average)
  5181                           ;	Chosen strategy is simple_byte
  5182  0034D0  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5183  0034D2  0A00               	xorlw	0	; case 0
  5184  0034D4  B4D8               	btfsc	status,2,c
  5185  0034D6  D7C1               	goto	l21848
  5186  0034D8  0A01               	xorlw	1	; case 1
  5187  0034DA  B4D8               	btfsc	status,2,c
  5188  0034DC  D7C2               	goto	l21850
  5189  0034DE  0A03               	xorlw	3	; case 2
  5190  0034E0  B4D8               	btfsc	status,2,c
  5191  0034E2  D7C3               	goto	l21852
  5192  0034E4  0A01               	xorlw	1	; case 3
  5193  0034E6  B4D8               	btfsc	status,2,c
  5194  0034E8  D7C4               	goto	l21854
  5195  0034EA  0A07               	xorlw	7	; case 4
  5196  0034EC  B4D8               	btfsc	status,2,c
  5197  0034EE  D7CB               	goto	l21862
  5198  0034F0  0A01               	xorlw	1	; case 5
  5199  0034F2  B4D8               	btfsc	status,2,c
  5200  0034F4  D7CC               	goto	l21864
  5201  0034F6  0A03               	xorlw	3	; case 6
  5202  0034F8  B4D8               	btfsc	status,2,c
  5203  0034FA  D7CD               	goto	l21866
  5204  0034FC  0A01               	xorlw	1	; case 7
  5205  0034FE  B4D8               	btfsc	status,2,c
  5206  003500  D7CE               	goto	l21868
  5207  003502  0A0F               	xorlw	15	; case 8
  5208  003504  B4D8               	btfsc	status,2,c
  5209  003506  D7D1               	goto	l21876
  5210  003508  0A01               	xorlw	1	; case 9
  5211  00350A  B4D8               	btfsc	status,2,c
  5212  00350C  D7D4               	goto	l21884
  5213  00350E  D230               	goto	l22148
  5214  003510                     l3372:
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5218  003510  C168  F169         	movff	_menu_st+23,_menu_st+24
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5222  003514  0E01               	movlw	1
  5223  003516  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5226  003518  0E00               	movlw	0
  5227  00351A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5228                           
  5229                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5230  00351C  D057               	goto	l21950
  5231  00351E                     l21898:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5235  00351E  0E0A               	movlw	10
  5236  003520  EC67  F024         	call	_load_New_Menu
  5237                           
  5238                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5239  003524  D225               	goto	l22148
  5240  003526                     l21900:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5244  003526  0E0B               	movlw	11
  5245  003528  EC67  F024         	call	_load_New_Menu
  5246                           
  5247                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5248  00352C  D221               	goto	l22148
  5249  00352E                     l21902:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5253  00352E  0E63               	movlw	99
  5254  003530  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5258  003532  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5262  003536  0EAC               	movlw	low (_var_sys_NVM+20)
  5263  003538  D7A1               	goto	L13
  5264  00353A                     l21910:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5268  00353A  0E09               	movlw	9
  5269  00353C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5270                           
  5271                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5272  00353E  0E01               	movlw	1
  5273  003540  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5277  003542  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5281  003546  0EAD               	movlw	low (_var_sys_NVM+21)
  5282  003548  D799               	goto	L13
  5283  00354A                     l3380:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5287  00354A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5291  00354E  0EAF               	movlw	low (_var_sys_NVM+23)
  5292  003550  D795               	goto	L13
  5293  003552                     l21922:
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5297  003552  0E09               	movlw	9
  5298  003554  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5299                           
  5300                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5301  003556  0E01               	movlw	1
  5302  003558  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5306  00355A  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5310  00355E  0EB0               	movlw	low (_var_sys_NVM+24)
  5311  003560  D78D               	goto	L13
  5312  003562                     l21930:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5316  003562  0E00               	movlw	0
  5317  003564  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5318                           
  5319                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5320  003566  0E00               	movlw	0
  5321  003568  0101               	movlb	1	; () banked
  5322  00356A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5323  00356C  0E00               	movlw	0
  5324  00356E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5325                           
  5326                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5327  003570  0E27               	movlw	39
  5328  003572  0100               	movlb	0	; () banked
  5329  003574  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5330  003576  0E10               	movlw	16
  5331  003578  6FFC               	movwf	_auxCounter& (0+255),b
  5332                           
  5333                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5334  00357A  0E00               	movlw	0
  5335  00357C  0101               	movlb	1	; () banked
  5336  00357E  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5337  003580  0E00               	movlw	0
  5338  003582  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5339                           
  5340                           ; BSR set to: 1
  5341                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5342  003584  C13C  F2F4         	movff	_var_sys+60,_tempCounter	;volatile
  5343  003588  C13D  F2F5         	movff	_var_sys+61,_tempCounter+1	;volatile
  5344  00358C  C13E  F2F6         	movff	_var_sys+62,_tempCounter+2	;volatile
  5345  003590  C13F  F2F7         	movff	_var_sys+63,_tempCounter+3	;volatile
  5346                           
  5347                           ; BSR set to: 1
  5348                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5349  003594  0EBB               	movlw	low _menuConfiguration_stateMachine
  5350  003596  6E12               	movwf	sm_send_event@psm^0,c
  5351  003598  0E02               	movlw	high _menuConfiguration_stateMachine
  5352  00359A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5353  00359C  0E00               	movlw	0
  5354  00359E  6E15               	movwf	(sm_send_event@event+1)^0,c
  5355  0035A0  0E05               	movlw	5
  5356  0035A2  6E14               	movwf	sm_send_event@event^0,c
  5357  0035A4  ECE1  F046         	call	_sm_send_event	;wreg free
  5358                           
  5359                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5360  0035A8  D1E3               	goto	l22148
  5361  0035AA                     l21936:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5365  0035AA  0E00               	movlw	0
  5366  0035AC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5367                           
  5368                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5369  0035AE  0E01               	movlw	1
  5370  0035B0  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5374  0035B2  0E00               	movlw	0
  5375  0035B4  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5376  0035B6  0E00               	movlw	0
  5377  0035B8  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5378                           
  5379                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5380  0035BA  D1DA               	goto	l22148
  5381  0035BC                     l21940:
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5385  0035BC  0E03               	movlw	3
  5386  0035BE  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5387                           
  5388                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5389  0035C0  0E00               	movlw	0
  5390  0035C2  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5394  0035C4  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5398  0035C8  0EB1               	movlw	low (_var_sys_NVM+25)
  5399  0035CA  D758               	goto	L13
  5400  0035CC                     l21950:
  5401                           
  5402                           ; BSR set to: 0
  5403  0035CC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5404  0035CE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5405  0035D0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5406                           
  5407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5408                           ; Switch size 1, requested type "simple"
  5409                           ; Number of cases is 1, Range of values is 0 to 0
  5410                           ; switch strategies available:
  5411                           ; Name         Instructions Cycles
  5412                           ; simple_byte            4     3 (average)
  5413                           ;	Chosen strategy is simple_byte
  5414  0035D2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5415  0035D4  0A00               	xorlw	0	; case 0
  5416  0035D6  A4D8               	btfss	status,2,c
  5417  0035D8  D1CB               	goto	l22148
  5418                           
  5419                           ; BSR set to: 0
  5420                           ; Switch size 1, requested type "simple"
  5421                           ; Number of cases is 10, Range of values is 0 to 9
  5422                           ; switch strategies available:
  5423                           ; Name         Instructions Cycles
  5424                           ; simple_byte           31    16 (average)
  5425                           ;	Chosen strategy is simple_byte
  5426  0035DA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5427  0035DC  0A00               	xorlw	0	; case 0
  5428  0035DE  B4D8               	btfsc	status,2,c
  5429  0035E0  D79E               	goto	l21898
  5430  0035E2  0A01               	xorlw	1	; case 1
  5431  0035E4  B4D8               	btfsc	status,2,c
  5432  0035E6  D79F               	goto	l21900
  5433  0035E8  0A03               	xorlw	3	; case 2
  5434  0035EA  B4D8               	btfsc	status,2,c
  5435  0035EC  D7A0               	goto	l21902
  5436  0035EE  0A01               	xorlw	1	; case 3
  5437  0035F0  B4D8               	btfsc	status,2,c
  5438  0035F2  D7A3               	goto	l21910
  5439  0035F4  0A07               	xorlw	7	; case 4
  5440  0035F6  B4D8               	btfsc	status,2,c
  5441  0035F8  D1BB               	goto	l22148
  5442  0035FA  0A01               	xorlw	1	; case 5
  5443  0035FC  B4D8               	btfsc	status,2,c
  5444  0035FE  D7A5               	goto	l3380
  5445  003600  0A03               	xorlw	3	; case 6
  5446  003602  B4D8               	btfsc	status,2,c
  5447  003604  D7A6               	goto	l21922
  5448  003606  0A01               	xorlw	1	; case 7
  5449  003608  B4D8               	btfsc	status,2,c
  5450  00360A  D7AB               	goto	l21930
  5451  00360C  0A0F               	xorlw	15	; case 8
  5452  00360E  B4D8               	btfsc	status,2,c
  5453  003610  D7CC               	goto	l21936
  5454  003612  0A01               	xorlw	1	; case 9
  5455  003614  B4D8               	btfsc	status,2,c
  5456  003616  D7D2               	goto	l21940
  5457  003618  D1AB               	goto	l22148
  5458  00361A                     l21952:
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5462  00361A  0EBB               	movlw	low _menuConfiguration_stateMachine
  5463  00361C  6E12               	movwf	sm_send_event@psm^0,c
  5464  00361E  0E02               	movlw	high _menuConfiguration_stateMachine
  5465  003620  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5466  003622  0E00               	movlw	0
  5467  003624  6E15               	movwf	(sm_send_event@event+1)^0,c
  5468  003626  0E14               	movlw	20
  5469  003628  6E14               	movwf	sm_send_event@event^0,c
  5470  00362A  ECE1  F046         	call	_sm_send_event	;wreg free
  5471                           
  5472                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5473  00362E  0EE7               	movlw	low _controlGate_stateMachine
  5474  003630  6E12               	movwf	sm_send_event@psm^0,c
  5475  003632  0E01               	movlw	high _controlGate_stateMachine
  5476  003634  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5477  003636  0E00               	movlw	0
  5478  003638  6E15               	movwf	(sm_send_event@event+1)^0,c
  5479  00363A  0E14               	movlw	20
  5480  00363C  6E14               	movwf	sm_send_event@event^0,c
  5481  00363E  ECE1  F046         	call	_sm_send_event	;wreg free
  5482                           
  5483                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5484  003642  0E01               	movlw	1
  5485  003644  0101               	movlb	1	; () banked
  5486  003646  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5487                           
  5488                           ; BSR set to: 1
  5489                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5490  003648  0E00               	movlw	0
  5491  00364A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5492                           
  5493                           ; BSR set to: 1
  5494                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5495  00364C  0E01               	movlw	1
  5496  00364E  ECEF  F04A         	call	_SaveNVM_VarSystem
  5497                           
  5498                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5499  003652  D18E               	goto	l22148
  5500  003654                     l21960:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5504  003654  0EBB               	movlw	low _menuConfiguration_stateMachine
  5505  003656  6E12               	movwf	sm_send_event@psm^0,c
  5506  003658  0E02               	movlw	high _menuConfiguration_stateMachine
  5507  00365A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5508  00365C  0E00               	movlw	0
  5509  00365E  6E15               	movwf	(sm_send_event@event+1)^0,c
  5510  003660  0E14               	movlw	20
  5511  003662  6E14               	movwf	sm_send_event@event^0,c
  5512  003664  ECE1  F046         	call	_sm_send_event	;wreg free
  5513                           
  5514                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5515  003668  0EE7               	movlw	low _controlGate_stateMachine
  5516  00366A  6E12               	movwf	sm_send_event@psm^0,c
  5517  00366C  0E01               	movlw	high _controlGate_stateMachine
  5518  00366E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5519  003670  0E00               	movlw	0
  5520  003672  6E15               	movwf	(sm_send_event@event+1)^0,c
  5521  003674  0E14               	movlw	20
  5522  003676  6E14               	movwf	sm_send_event@event^0,c
  5523  003678  ECE1  F046         	call	_sm_send_event	;wreg free
  5524                           
  5525                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5526  00367C  0E01               	movlw	1
  5527  00367E  0101               	movlb	1	; () banked
  5528  003680  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5529                           
  5530                           ; BSR set to: 1
  5531                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5532  003682  0E01               	movlw	1
  5533  003684  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5534                           
  5535                           ; BSR set to: 1
  5536                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5537  003686  0E01               	movlw	1
  5538  003688  ECEF  F04A         	call	_SaveNVM_VarSystem
  5539                           
  5540                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5541  00368C  D171               	goto	l22148
  5542  00368E                     l3390:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5546  00368E  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5550  003692  0E03               	movlw	3
  5551  003694  EC67  F024         	call	_load_New_Menu
  5552                           
  5553                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5554  003698  0EB4               	movlw	low (_var_sys_NVM+28)
  5555  00369A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5556  00369C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5557                           
  5558                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5559  00369E  0E01               	movlw	1
  5560  0036A0  0100               	movlb	0	; () banked
  5561  0036A2  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5565  0036A4  0E02               	movlw	2
  5566  0036A6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5570  0036A8  0E00               	movlw	0
  5571  0036AA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5572                           
  5573                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5574  0036AC  D161               	goto	l22148
  5575  0036AE                     l3391:
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5579  0036AE  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5583  0036B2  0E02               	movlw	2
  5584  0036B4  EC67  F024         	call	_load_New_Menu
  5585                           
  5586                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5587  0036B8  0EB3               	movlw	low (_var_sys_NVM+27)
  5588  0036BA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5589  0036BC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5590                           
  5591                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5592  0036BE  0E01               	movlw	1
  5593  0036C0  0100               	movlb	0	; () banked
  5594  0036C2  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5598  0036C4  0E01               	movlw	1
  5599  0036C6  D7EF               	goto	L14
  5600  0036C8                     l21990:
  5601                           
  5602                           ; BSR set to: 0
  5603  0036C8  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5604  0036CA  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5605  0036CC  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5606                           
  5607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5608                           ; Switch size 1, requested type "simple"
  5609                           ; Number of cases is 1, Range of values is 0 to 0
  5610                           ; switch strategies available:
  5611                           ; Name         Instructions Cycles
  5612                           ; simple_byte            4     3 (average)
  5613                           ;	Chosen strategy is simple_byte
  5614  0036CE  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5615  0036D0  0A00               	xorlw	0	; case 0
  5616  0036D2  A4D8               	btfss	status,2,c
  5617  0036D4  D14D               	goto	l22148
  5618                           
  5619                           ; BSR set to: 0
  5620                           ; Switch size 1, requested type "simple"
  5621                           ; Number of cases is 4, Range of values is 0 to 3
  5622                           ; switch strategies available:
  5623                           ; Name         Instructions Cycles
  5624                           ; simple_byte           13     7 (average)
  5625                           ;	Chosen strategy is simple_byte
  5626  0036D6  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5627  0036D8  0A00               	xorlw	0	; case 0
  5628  0036DA  B4D8               	btfsc	status,2,c
  5629  0036DC  D79E               	goto	l21952
  5630  0036DE  0A01               	xorlw	1	; case 1
  5631  0036E0  B4D8               	btfsc	status,2,c
  5632  0036E2  D7B8               	goto	l21960
  5633  0036E4  0A03               	xorlw	3	; case 2
  5634  0036E6  B4D8               	btfsc	status,2,c
  5635  0036E8  D7D2               	goto	l3390
  5636  0036EA  0A01               	xorlw	1	; case 3
  5637  0036EC  B4D8               	btfsc	status,2,c
  5638  0036EE  D7DF               	goto	l3391
  5639  0036F0  D13F               	goto	l22148
  5640  0036F2                     l21992:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5644  0036F2  0E98               	movlw	low _var_sys_NVM
  5645  0036F4  D001               	goto	L15
  5646  0036F6                     l21994:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5650  0036F6  0E99               	movlw	low (_var_sys_NVM+1)
  5651  0036F8                     L15:
  5652  0036F8  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5653  0036FA  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5654                           
  5655                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5656  0036FC  D00E               	goto	l22000
  5657  0036FE                     l21998:
  5658                           
  5659                           ; BSR set to: 0
  5660  0036FE  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5661  003700  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5662  003702  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5663                           
  5664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5665                           ; Switch size 1, requested type "simple"
  5666                           ; Number of cases is 1, Range of values is 0 to 0
  5667                           ; switch strategies available:
  5668                           ; Name         Instructions Cycles
  5669                           ; simple_byte            4     3 (average)
  5670                           ;	Chosen strategy is simple_byte
  5671  003704  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5672  003706  0A00               	xorlw	0	; case 0
  5673  003708  A4D8               	btfss	status,2,c
  5674  00370A  D007               	goto	l22000
  5675                           
  5676                           ; BSR set to: 0
  5677                           ; Switch size 1, requested type "simple"
  5678                           ; Number of cases is 2, Range of values is 0 to 1
  5679                           ; switch strategies available:
  5680                           ; Name         Instructions Cycles
  5681                           ; simple_byte            7     4 (average)
  5682                           ;	Chosen strategy is simple_byte
  5683  00370C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5684  00370E  0A00               	xorlw	0	; case 0
  5685  003710  B4D8               	btfsc	status,2,c
  5686  003712  D7EF               	goto	l21992
  5687  003714  0A01               	xorlw	1	; case 1
  5688  003716  B4D8               	btfsc	status,2,c
  5689  003718  D7EE               	goto	l21994
  5690  00371A                     l22000:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5694  00371A  0E2D               	movlw	45
  5695  00371C                     L29:
  5696  00371C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5697                           
  5698                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5699  00371E  0E00               	movlw	0
  5700  003720  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5701  003722                     L19:
  5702                           
  5703                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5704  003722  0E01               	movlw	1
  5705  003724  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5709  003726  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5710  00372A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5711  00372E  50DF               	movf	indf2,w,c
  5712  003730  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5713                           
  5714                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5715  003732  D11E               	goto	l22148
  5716  003734                     l22004:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5720  003734  0E09               	movlw	9
  5721  003736  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5722                           
  5723                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5724  003738  0E00               	movlw	0
  5725  00373A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5726                           
  5727                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5728  00373C  D00F               	goto	l22020
  5729  00373E                     l22006:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5733  00373E  0E02               	movlw	2
  5734  003740  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5735  003742  D002               	goto	l22010
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5739  003744  0E00               	movlw	0
  5740  003746  D001               	goto	L16
  5741  003748                     l22010:
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5745  003748  0E09               	movlw	9
  5746  00374A                     L16:
  5747  00374A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5751  00374C  0E9A               	movlw	low (_var_sys_NVM+2)
  5752  00374E  D003               	goto	L18
  5753  003750                     l22014:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5757  003750  0E9B               	movlw	low (_var_sys_NVM+3)
  5758  003752  D001               	goto	L18
  5759  003754                     l22016:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5763  003754  0EA7               	movlw	low (_var_sys_NVM+15)
  5764  003756                     L18:
  5765  003756  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5766  003758  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5767                           
  5768                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5769  00375A  D7E3               	goto	L19
  5770  00375C                     l22020:
  5771                           
  5772                           ; BSR set to: 0
  5773  00375C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5774  00375E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5775  003760  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5776                           
  5777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5778                           ; Switch size 1, requested type "simple"
  5779                           ; Number of cases is 1, Range of values is 0 to 0
  5780                           ; switch strategies available:
  5781                           ; Name         Instructions Cycles
  5782                           ; simple_byte            4     3 (average)
  5783                           ;	Chosen strategy is simple_byte
  5784  003762  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5785  003764  0A00               	xorlw	0	; case 0
  5786  003766  A4D8               	btfss	status,2,c
  5787  003768  D7DC               	goto	L19
  5788                           
  5789                           ; BSR set to: 0
  5790                           ; Switch size 1, requested type "simple"
  5791                           ; Number of cases is 3, Range of values is 0 to 2
  5792                           ; switch strategies available:
  5793                           ; Name         Instructions Cycles
  5794                           ; simple_byte           10     6 (average)
  5795                           ;	Chosen strategy is simple_byte
  5796  00376A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5797  00376C  0A00               	xorlw	0	; case 0
  5798  00376E  B4D8               	btfsc	status,2,c
  5799  003770  D7E6               	goto	l22006
  5800  003772  0A01               	xorlw	1	; case 1
  5801  003774  B4D8               	btfsc	status,2,c
  5802  003776  D7EC               	goto	l22014
  5803  003778  0A03               	xorlw	3	; case 2
  5804  00377A  B4D8               	btfsc	status,2,c
  5805  00377C  D7EB               	goto	l22016
  5806  00377E  D7D1               	goto	L19
  5807  003780                     l22026:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5811  003780  0E9D               	movlw	low (_var_sys_NVM+5)
  5812  003782  D001               	goto	L20
  5813  003784                     l22028:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5817  003784  0E9E               	movlw	low (_var_sys_NVM+6)
  5818  003786                     L20:
  5819  003786  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5820  003788  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5821                           
  5822                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5823  00378A  D00E               	goto	l22034
  5824  00378C                     l22032:
  5825                           
  5826                           ; BSR set to: 0
  5827  00378C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5828  00378E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5829  003790  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5830                           
  5831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5832                           ; Switch size 1, requested type "simple"
  5833                           ; Number of cases is 1, Range of values is 0 to 0
  5834                           ; switch strategies available:
  5835                           ; Name         Instructions Cycles
  5836                           ; simple_byte            4     3 (average)
  5837                           ;	Chosen strategy is simple_byte
  5838  003792  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5839  003794  0A00               	xorlw	0	; case 0
  5840  003796  A4D8               	btfss	status,2,c
  5841  003798  D007               	goto	l22034
  5842                           
  5843                           ; BSR set to: 0
  5844                           ; Switch size 1, requested type "simple"
  5845                           ; Number of cases is 2, Range of values is 0 to 1
  5846                           ; switch strategies available:
  5847                           ; Name         Instructions Cycles
  5848                           ; simple_byte            7     4 (average)
  5849                           ;	Chosen strategy is simple_byte
  5850  00379A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5851  00379C  0A00               	xorlw	0	; case 0
  5852  00379E  B4D8               	btfsc	status,2,c
  5853  0037A0  D7EF               	goto	l22026
  5854  0037A2  0A01               	xorlw	1	; case 1
  5855  0037A4  B4D8               	btfsc	status,2,c
  5856  0037A6  D7EE               	goto	l22028
  5857  0037A8                     l22034:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5861  0037A8  0E63               	movlw	99
  5862  0037AA  D7B8               	goto	L29
  5863  0037AC                     l22038:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5867  0037AC  0E9F               	movlw	low (_var_sys_NVM+7)
  5868  0037AE  D034               	goto	L125
  5869  0037B0                     l22040:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5873  0037B0  0EA0               	movlw	low (_var_sys_NVM+8)
  5874  0037B2  D032               	goto	L125
  5875  0037B4                     l22044:
  5876                           
  5877                           ; BSR set to: 0
  5878  0037B4  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5879  0037B6  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5880  0037B8  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5881                           
  5882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 1, Range of values is 0 to 0
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            4     3 (average)
  5888                           ;	Chosen strategy is simple_byte
  5889  0037BA  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5890  0037BC  0A00               	xorlw	0	; case 0
  5891  0037BE  A4D8               	btfss	status,2,c
  5892  0037C0  D02D               	goto	L124
  5893                           
  5894                           ; BSR set to: 0
  5895                           ; Switch size 1, requested type "simple"
  5896                           ; Number of cases is 2, Range of values is 0 to 1
  5897                           ; switch strategies available:
  5898                           ; Name         Instructions Cycles
  5899                           ; simple_byte            7     4 (average)
  5900                           ;	Chosen strategy is simple_byte
  5901  0037C2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5902  0037C4  0A00               	xorlw	0	; case 0
  5903  0037C6  B4D8               	btfsc	status,2,c
  5904  0037C8  D7F1               	goto	l22038
  5905  0037CA  0A01               	xorlw	1	; case 1
  5906  0037CC  B4D8               	btfsc	status,2,c
  5907  0037CE  D7F0               	goto	l22040
  5908  0037D0  D025               	goto	L124
  5909  0037D2                     l22050:
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5913  0037D2  0EA1               	movlw	low (_var_sys_NVM+9)
  5914  0037D4  D021               	goto	L125
  5915  0037D6                     l22052:
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5919  0037D6  0EA2               	movlw	low (_var_sys_NVM+10)
  5920  0037D8  D01F               	goto	L125
  5921  0037DA                     l22054:
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5925  0037DA  0EA3               	movlw	low (_var_sys_NVM+11)
  5926  0037DC  D01D               	goto	L125
  5927  0037DE                     l22056:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5931  0037DE  0EAE               	movlw	low (_var_sys_NVM+22)
  5932  0037E0  D01B               	goto	L125
  5933  0037E2                     l22060:
  5934                           
  5935                           ; BSR set to: 0
  5936  0037E2  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5937  0037E4  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5938  0037E6  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5939                           
  5940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5941                           ; Switch size 1, requested type "simple"
  5942                           ; Number of cases is 1, Range of values is 0 to 0
  5943                           ; switch strategies available:
  5944                           ; Name         Instructions Cycles
  5945                           ; simple_byte            4     3 (average)
  5946                           ;	Chosen strategy is simple_byte
  5947  0037E8  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5948  0037EA  0A00               	xorlw	0	; case 0
  5949  0037EC  A4D8               	btfss	status,2,c
  5950  0037EE  D016               	goto	L124
  5951                           
  5952                           ; BSR set to: 0
  5953                           ; Switch size 1, requested type "simple"
  5954                           ; Number of cases is 4, Range of values is 0 to 3
  5955                           ; switch strategies available:
  5956                           ; Name         Instructions Cycles
  5957                           ; simple_byte           13     7 (average)
  5958                           ;	Chosen strategy is simple_byte
  5959  0037F0  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5960  0037F2  0A00               	xorlw	0	; case 0
  5961  0037F4  B4D8               	btfsc	status,2,c
  5962  0037F6  D7ED               	goto	l22050
  5963  0037F8  0A01               	xorlw	1	; case 1
  5964  0037FA  B4D8               	btfsc	status,2,c
  5965  0037FC  D7EC               	goto	l22052
  5966  0037FE  0A03               	xorlw	3	; case 2
  5967  003800  B4D8               	btfsc	status,2,c
  5968  003802  D7EB               	goto	l22054
  5969  003804  0A01               	xorlw	1	; case 3
  5970  003806  B4D8               	btfsc	status,2,c
  5971  003808  D7EA               	goto	l22056
  5972  00380A  D008               	goto	L124
  5973  00380C                     l22066:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5977  00380C  0EA8               	movlw	low (_var_sys_NVM+16)
  5978  00380E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5979  003810  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5983  003812  0E02               	movlw	2
  5984  003814  D783               	goto	L29
  5985  003816                     l22072:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5989  003816  0EA9               	movlw	low (_var_sys_NVM+17)
  5990  003818                     L125:
  5991  003818  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5992  00381A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5993  00381C                     L124:
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5997  00381C  0E01               	movlw	1
  5998  00381E  D77E               	goto	L29
  5999  003820                     l22080:
  6000                           
  6001                           ; BSR set to: 0
  6002  003820  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6003  003822  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6004  003824  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6005                           
  6006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6007                           ; Switch size 1, requested type "simple"
  6008                           ; Number of cases is 1, Range of values is 0 to 0
  6009                           ; switch strategies available:
  6010                           ; Name         Instructions Cycles
  6011                           ; simple_byte            4     3 (average)
  6012                           ;	Chosen strategy is simple_byte
  6013  003826  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6014  003828  0A00               	xorlw	0	; case 0
  6015  00382A  A4D8               	btfss	status,2,c
  6016  00382C  D77A               	goto	L19
  6017                           
  6018                           ; BSR set to: 0
  6019                           ; Switch size 1, requested type "simple"
  6020                           ; Number of cases is 2, Range of values is 0 to 1
  6021                           ; switch strategies available:
  6022                           ; Name         Instructions Cycles
  6023                           ; simple_byte            7     4 (average)
  6024                           ;	Chosen strategy is simple_byte
  6025  00382E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6026  003830  0A00               	xorlw	0	; case 0
  6027  003832  B4D8               	btfsc	status,2,c
  6028  003834  D7EB               	goto	l22066
  6029  003836  0A01               	xorlw	1	; case 1
  6030  003838  B4D8               	btfsc	status,2,c
  6031  00383A  D7ED               	goto	l22072
  6032  00383C  D772               	goto	L19
  6033  00383E                     l22086:
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6037  00383E  0EAA               	movlw	low (_var_sys_NVM+18)
  6038  003840  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6039  003842  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6043  003844  0E09               	movlw	9
  6044  003846  D76A               	goto	L29
  6045  003848                     l22092:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6049  003848  0EAB               	movlw	low (_var_sys_NVM+19)
  6050  00384A  D7FA               	goto	L27
  6051  00384C                     l22100:
  6052                           
  6053                           ; BSR set to: 0
  6054  00384C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6055  00384E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6056  003850  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6057                           
  6058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6059                           ; Switch size 1, requested type "simple"
  6060                           ; Number of cases is 1, Range of values is 0 to 0
  6061                           ; switch strategies available:
  6062                           ; Name         Instructions Cycles
  6063                           ; simple_byte            4     3 (average)
  6064                           ;	Chosen strategy is simple_byte
  6065  003852  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6066  003854  0A00               	xorlw	0	; case 0
  6067  003856  A4D8               	btfss	status,2,c
  6068  003858  D764               	goto	L19
  6069                           
  6070                           ; BSR set to: 0
  6071                           ; Switch size 1, requested type "simple"
  6072                           ; Number of cases is 2, Range of values is 0 to 1
  6073                           ; switch strategies available:
  6074                           ; Name         Instructions Cycles
  6075                           ; simple_byte            7     4 (average)
  6076                           ;	Chosen strategy is simple_byte
  6077  00385A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6078  00385C  0A00               	xorlw	0	; case 0
  6079  00385E  B4D8               	btfsc	status,2,c
  6080  003860  D7EE               	goto	l22086
  6081  003862  0A01               	xorlw	1	; case 1
  6082  003864  B4D8               	btfsc	status,2,c
  6083  003866  D7F0               	goto	l22092
  6084  003868  D75C               	goto	L19
  6085  00386A                     l22106:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6089  00386A  0EFD               	movlw	low setValueToEdit@value
  6090  00386C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6091  00386E  0E01               	movlw	high setValueToEdit@value
  6092  003870  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6096  003872  0E00               	movlw	0
  6097  003874  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6098  003876  D00D               	goto	l22116
  6099  003878                     l3438:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6103  003878  C0DF  F1FD         	movff	setValueToEdit@posindex,setValueToEdit@value
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6107  00387C  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6108  003880  0101               	movlb	1	; () banked
  6109  003882  5168               	movf	(_menu_st+23)& (0+255),w,b
  6110  003884  EC38  F040         	call	_cmdMemoryIsEmpty
  6111  003888  0900               	iorlw	0
  6112  00388A  A4D8               	btfss	status,2,c
  6113  00388C  D008               	goto	u25480
  6114                           
  6115                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6116  00388E  0100               	movlb	0	; () banked
  6117  003890  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6118  003892                     l22116:
  6119                           
  6120                           ; BSR set to: 0
  6121  003892  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6122  003896  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6123  003898  5CDE               	subwf	postinc2,w,c
  6124  00389A  B0D8               	btfsc	status,0,c
  6125  00389C  D7ED               	goto	l3438
  6126  00389E                     u25480:
  6127                           
  6128                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6129  00389E  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6130  0038A2  D018               	goto	L28
  6131  0038A4                     l22120:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               for(unsigned char posindex=0; posindex <= *(unsigned char*)&var_sys
      +                          _NVM.positionRemotesWalk; posindex++)
  6135  0038A4  0E00               	movlw	0
  6136  0038A6  6FE0               	movwf	setValueToEdit@posindex_6979& (0+255),b
  6137  0038A8  D00D               	goto	l22128
  6138  0038AA                     l3444:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;sm_MenuConfiguration_MC50.c: 1082:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          083:                         value=posindex;
  6142  0038AA  C0E0  F1FD         	movff	setValueToEdit@posindex_6979,setValueToEdit@value
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;sm_MenuConfiguration_MC50.c: 1084:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6146  0038AE  C0E0  F02E         	movff	setValueToEdit@posindex_6979,cmdMemoryIsEmpty@position
  6147  0038B2  0101               	movlb	1	; () banked
  6148  0038B4  5168               	movf	(_menu_st+23)& (0+255),w,b
  6149  0038B6  EC38  F040         	call	_cmdMemoryIsEmpty
  6150  0038BA  0900               	iorlw	0
  6151  0038BC  A4D8               	btfss	status,2,c
  6152  0038BE  D008               	goto	u25500
  6153                           
  6154                           ;sm_MenuConfiguration_MC50.c: 1086:                     }
  6155  0038C0  0100               	movlb	0	; () banked
  6156  0038C2  2BE0               	incf	setValueToEdit@posindex_6979& (0+255),f,b
  6157  0038C4                     l22128:
  6158                           
  6159                           ; BSR set to: 0
  6160  0038C4  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6161  0038C8  51E0               	movf	setValueToEdit@posindex_6979& (0+255),w,b
  6162  0038CA  5CDE               	subwf	postinc2,w,c
  6163  0038CC  B0D8               	btfsc	status,0,c
  6164  0038CE  D7ED               	goto	l3444
  6165  0038D0                     u25500:
  6166                           
  6167                           ;sm_MenuConfiguration_MC50.c: 1087:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6168  0038D0  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6169  0038D4                     L28:
  6170  0038D4  50DF               	movf	indf2,w,c
  6171  0038D6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6172                           
  6173                           ;sm_MenuConfiguration_MC50.c: 1088:                 };sm_MenuConfiguration_MC50.c: 1089:
      +                                           break;
  6174  0038D8  D00E               	goto	l22136
  6175  0038DA                     l22134:
  6176                           
  6177                           ; BSR set to: 0
  6178  0038DA  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6179  0038DC  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6180  0038DE  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6181                           
  6182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6183                           ; Switch size 1, requested type "simple"
  6184                           ; Number of cases is 1, Range of values is 0 to 0
  6185                           ; switch strategies available:
  6186                           ; Name         Instructions Cycles
  6187                           ; simple_byte            4     3 (average)
  6188                           ;	Chosen strategy is simple_byte
  6189  0038E0  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6190  0038E2  0A00               	xorlw	0	; case 0
  6191  0038E4  A4D8               	btfss	status,2,c
  6192  0038E6  D007               	goto	l22136
  6193                           
  6194                           ; BSR set to: 0
  6195                           ; Switch size 1, requested type "simple"
  6196                           ; Number of cases is 2, Range of values is 0 to 1
  6197                           ; switch strategies available:
  6198                           ; Name         Instructions Cycles
  6199                           ; simple_byte            7     4 (average)
  6200                           ;	Chosen strategy is simple_byte
  6201  0038E8  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6202  0038EA  0A00               	xorlw	0	; case 0
  6203  0038EC  B4D8               	btfsc	status,2,c
  6204  0038EE  D7BD               	goto	l22106
  6205  0038F0  0A01               	xorlw	1	; case 1
  6206  0038F2  B4D8               	btfsc	status,2,c
  6207  0038F4  D7D7               	goto	l22120
  6208  0038F6                     l22136:
  6209                           
  6210                           ;sm_MenuConfiguration_MC50.c: 1091:             edit_Param.position=*edit_Param.Value;
  6211  0038F6  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6212  0038FA  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6213  0038FE  50DF               	movf	indf2,w,c
  6214  003900  6E46               	movwf	_edit_Param^0,c	;volatile
  6215                           
  6216                           ;sm_MenuConfiguration_MC50.c: 1092:             edit_Param.Min=0;
  6217  003902  0E00               	movlw	0
  6218  003904  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6219                           
  6220                           ;sm_MenuConfiguration_MC50.c: 1093:             haveValueToEdit=1;
  6221  003906  0E01               	movlw	1
  6222  003908  0100               	movlb	0	; () banked
  6223  00390A  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 1094:             edit_Param.tempValue=*edit_Param.Value;
  6226  00390C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6227  003910  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6228  003914  50DF               	movf	indf2,w,c
  6229  003916  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;sm_MenuConfiguration_MC50.c: 1095:             InitReceiver();
  6233  003918  ECD2  F04D         	call	_InitReceiver	;wreg free
  6234                           
  6235                           ;sm_MenuConfiguration_MC50.c: 1096:         };sm_MenuConfiguration_MC50.c: 1097:        
      +                           break;
  6236  00391C  D029               	goto	l22148
  6237  00391E                     l22146:
  6238                           
  6239                           ; BSR set to: 0
  6240  00391E  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6241  003920  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6242  003922  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6243                           
  6244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6245                           ; Switch size 1, requested type "simple"
  6246                           ; Number of cases is 1, Range of values is 0 to 0
  6247                           ; switch strategies available:
  6248                           ; Name         Instructions Cycles
  6249                           ; simple_byte            4     3 (average)
  6250                           ;	Chosen strategy is simple_byte
  6251  003924  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6252  003926  0A00               	xorlw	0	; case 0
  6253  003928  A4D8               	btfss	status,2,c
  6254  00392A  D022               	goto	l22148
  6255                           
  6256                           ; BSR set to: 0
  6257                           ; Switch size 1, requested type "simple"
  6258                           ; Number of cases is 11, Range of values is 0 to 12
  6259                           ; switch strategies available:
  6260                           ; Name         Instructions Cycles
  6261                           ; simple_byte           34    18 (average)
  6262                           ;	Chosen strategy is simple_byte
  6263  00392C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6264  00392E  0A00               	xorlw	0	; case 0
  6265  003930  B4D8               	btfsc	status,2,c
  6266  003932  D58E               	goto	l3358
  6267  003934  0A01               	xorlw	1	; case 1
  6268  003936  B4D8               	btfsc	status,2,c
  6269  003938  D5EB               	goto	l3372
  6270  00393A  0A05               	xorlw	5	; case 4
  6271  00393C  B4D8               	btfsc	status,2,c
  6272  00393E  D6C4               	goto	l21990
  6273  003940  0A01               	xorlw	1	; case 5
  6274  003942  B4D8               	btfsc	status,2,c
  6275  003944  D6DC               	goto	l21998
  6276  003946  0A03               	xorlw	3	; case 6
  6277  003948  B4D8               	btfsc	status,2,c
  6278  00394A  D6F4               	goto	l22004
  6279  00394C  0A01               	xorlw	1	; case 7
  6280  00394E  B4D8               	btfsc	status,2,c
  6281  003950  D71D               	goto	l22032
  6282  003952  0A0F               	xorlw	15	; case 8
  6283  003954  B4D8               	btfsc	status,2,c
  6284  003956  D72E               	goto	l22044
  6285  003958  0A01               	xorlw	1	; case 9
  6286  00395A  B4D8               	btfsc	status,2,c
  6287  00395C  D742               	goto	l22060
  6288  00395E  0A03               	xorlw	3	; case 10
  6289  003960  B4D8               	btfsc	status,2,c
  6290  003962  D75E               	goto	l22080
  6291  003964  0A01               	xorlw	1	; case 11
  6292  003966  B4D8               	btfsc	status,2,c
  6293  003968  D771               	goto	l22100
  6294  00396A  0A07               	xorlw	7	; case 12
  6295  00396C  B4D8               	btfsc	status,2,c
  6296  00396E  D7B5               	goto	l22134
  6297  003970                     l22148:
  6298                           
  6299                           ;sm_MenuConfiguration_MC50.c: 1100:     return haveValueToEdit;
  6300  003970  0100               	movlb	0	; () banked
  6301  003972  51E1               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6302                           
  6303                           ; BSR set to: 0
  6304  003974  0012               	return		;funcret
  6305  003976                     __end_of_setValueToEdit:
  6306                           	callstack 0
  6307                           
  6308 ;; *************** function _load_New_Menu *****************
  6309 ;; Defined at:
  6310 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  Menu            1    wreg     enum E10813
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  Menu            1   33[COMRAM] enum E10813
  6315 ;;  i               1   34[COMRAM] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6329 ;;Total ram usage:        4 bytes
  6330 ;; Hardware stack levels used: 1
  6331 ;; Hardware stack levels required when called: 5
  6332 ;; This function calls:
  6333 ;;		_SetSegmentValueIntermitentMain
  6334 ;;		_SetSegmentValueMain
  6335 ;; This function is called by:
  6336 ;;		_sm_execute_main
  6337 ;;		_sm_execute_menuConfiguration
  6338 ;;		_setValueToEdit
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text4
  6343  0048CE                     __ptext4:
  6344                           	callstack 0
  6345  0048CE                     _load_New_Menu:
  6346                           	callstack 22
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;incstack = 0
  6350                           ;load_New_Menu@Menu stored from wreg
  6351  0048CE  6E22               	movwf	load_New_Menu@Menu^0,c
  6352                           
  6353                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6354  0048D0  0E00               	movlw	0
  6355  0048D2  0101               	movlb	1	; () banked
  6356  0048D4  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6357  0048D6  0E64               	movlw	100
  6358  0048D8  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6359                           
  6360                           ; BSR set to: 1
  6361                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6362  0048DA  5022               	movf	load_New_Menu@Menu^0,w,c
  6363  0048DC  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6364  0048DE  B4D8               	btfsc	status,2,c
  6365  0048E0  D006               	goto	l21018
  6366                           
  6367                           ; BSR set to: 1
  6368  0048E2  0E01               	movlw	1
  6369  0048E4  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6370  0048E6  D003               	goto	l21018
  6371                           
  6372                           ; BSR set to: 1
  6373                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6374  0048E8  0E00               	movlw	0
  6375  0048EA  6F68               	movwf	(_menu_st+23)& (0+255),b
  6376                           
  6377                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6378  0048EC  D005               	goto	l21022
  6379  0048EE                     l21018:
  6380                           
  6381                           ; BSR set to: 1
  6382  0048EE  0E02               	movlw	2
  6383  0048F0  6022               	cpfslt	load_New_Menu@Menu^0,c
  6384  0048F2  D002               	goto	l21022
  6385                           
  6386                           ; BSR set to: 1
  6387                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6388  0048F4  C169  F168         	movff	_menu_st+24,_menu_st+23
  6389  0048F8                     l21022:
  6390                           
  6391                           ; BSR set to: 1
  6392                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6393  0048F8  0E00               	movlw	0
  6394  0048FA  6F65               	movwf	(_menu_st+20)& (0+255),b
  6395                           
  6396                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6397  0048FC  D0F6               	goto	l21074
  6398  0048FE                     l21024:
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6402  0048FE  0E00               	movlw	0
  6403  004900  6F66               	movwf	(_menu_st+21)& (0+255),b
  6404                           
  6405                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6406  004902  0E0A               	movlw	10
  6407  004904  6F67               	movwf	(_menu_st+22)& (0+255),b
  6408                           
  6409                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6410  004906  0E00               	movlw	0
  6411  004908  6F69               	movwf	(_menu_st+24)& (0+255),b
  6412                           
  6413                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6414  00490A  0E00               	movlw	0
  6415  00490C  6E23               	movwf	load_New_Menu@i^0,c
  6416  00490E                     l21030:
  6417                           
  6418                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6419  00490E  5023               	movf	load_New_Menu@i^0,w,c
  6420  004910  0D02               	mullw	2
  6421  004912  0E51               	movlw	low _menu_st
  6422  004914  24F3               	addwf	243,w,c
  6423  004916  6ED9               	movwf	fsr2l,c
  6424  004918  0E01               	movlw	high _menu_st
  6425  00491A  20F4               	addwfc	prodh,w,c
  6426  00491C  6EDA               	movwf	fsr2h,c
  6427  00491E  0E10               	movlw	16
  6428  004920  6EDF               	movwf	indf2,c
  6429                           
  6430                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6431  004922  5023               	movf	load_New_Menu@i^0,w,c
  6432  004924  0D02               	mullw	2
  6433  004926  0E52               	movlw	low (_menu_st+1)
  6434  004928  24F3               	addwf	243,w,c
  6435  00492A  6ED9               	movwf	fsr2l,c
  6436  00492C  0E01               	movlw	high (_menu_st+1)
  6437  00492E  20F4               	addwfc	prodh,w,c
  6438  004930  6EDA               	movwf	fsr2h,c
  6439  004932  C023  FFDF         	movff	load_New_Menu@i,indf2
  6440                           
  6441                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6442  004936  2A23               	incf	load_New_Menu@i^0,f,c
  6443  004938  0E09               	movlw	9
  6444  00493A  6423               	cpfsgt	load_New_Menu@i^0,c
  6445  00493C  D7E8               	goto	l21030
  6446  00493E  D107               	goto	l21076
  6447  004940                     l21036:
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6451  004940  0E01               	movlw	1
  6452  004942  6F66               	movwf	(_menu_st+21)& (0+255),b
  6453                           
  6454                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6455  004944  0E0A               	movlw	10
  6456  004946  6F67               	movwf	(_menu_st+22)& (0+255),b
  6457                           
  6458                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6459  004948  0E00               	movlw	0
  6460  00494A  6F69               	movwf	(_menu_st+24)& (0+255),b
  6461                           
  6462                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6463  00494C  0E00               	movlw	0
  6464  00494E  6E23               	movwf	load_New_Menu@i^0,c
  6465  004950                     l21042:
  6466                           
  6467                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6468  004950  5023               	movf	load_New_Menu@i^0,w,c
  6469  004952  0D02               	mullw	2
  6470  004954  0E51               	movlw	low _menu_st
  6471  004956  24F3               	addwf	243,w,c
  6472  004958  6ED9               	movwf	fsr2l,c
  6473  00495A  0E01               	movlw	high _menu_st
  6474  00495C  20F4               	addwfc	prodh,w,c
  6475  00495E  6EDA               	movwf	fsr2h,c
  6476  004960  0E0E               	movlw	14
  6477  004962  6EDF               	movwf	indf2,c
  6478                           
  6479                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6480  004964  5023               	movf	load_New_Menu@i^0,w,c
  6481  004966  0D02               	mullw	2
  6482  004968  0E52               	movlw	low (_menu_st+1)
  6483  00496A  24F3               	addwf	243,w,c
  6484  00496C  6ED9               	movwf	fsr2l,c
  6485  00496E  0E01               	movlw	high (_menu_st+1)
  6486  004970  20F4               	addwfc	prodh,w,c
  6487  004972  6EDA               	movwf	fsr2h,c
  6488  004974  C023  FFDF         	movff	load_New_Menu@i,indf2
  6489                           
  6490                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6491  004978  2A23               	incf	load_New_Menu@i^0,f,c
  6492  00497A  0E09               	movlw	9
  6493  00497C  6423               	cpfsgt	load_New_Menu@i^0,c
  6494  00497E  D7E8               	goto	l21042
  6495  004980  D0E6               	goto	l21076
  6496  004982                     l21048:
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6500  004982  0E00               	movlw	0
  6501  004984  6F65               	movwf	(_menu_st+20)& (0+255),b
  6502                           
  6503                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6504  004986  0E04               	movlw	4
  6505  004988  6F66               	movwf	(_menu_st+21)& (0+255),b
  6506                           
  6507                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6508  00498A  0E04               	movlw	4
  6509  00498C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6510                           
  6511                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6512  00498E  0E0A               	movlw	10
  6513  004990  6F51               	movwf	_menu_st& (0+255),b
  6514                           
  6515                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6516  004992  0E13               	movlw	19
  6517  004994  6F52               	movwf	(_menu_st+1)& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6520  004996  0E17               	movlw	23
  6521  004998  6F53               	movwf	(_menu_st+2)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6524  00499A  0E0A               	movlw	10
  6525  00499C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6528  00499E  0E05               	movlw	5
  6529  0049A0  6F55               	movwf	(_menu_st+4)& (0+255),b
  6530                           
  6531                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6532  0049A2  0E21               	movlw	33
  6533  0049A4  6F56               	movwf	(_menu_st+5)& (0+255),b
  6534                           
  6535                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6536  0049A6  0E0D               	movlw	13
  6537  0049A8  6F57               	movwf	(_menu_st+6)& (0+255),b
  6538                           
  6539                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6540  0049AA  0E01               	movlw	1
  6541  0049AC  D051               	goto	L31
  6542  0049AE                     l21050:
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6546  0049AE  0E00               	movlw	0
  6547  0049B0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6550  0049B2  0E05               	movlw	5
  6551  0049B4  6F66               	movwf	(_menu_st+21)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6554  0049B6  0E02               	movlw	2
  6555  0049B8  6F67               	movwf	(_menu_st+22)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6558  0049BA  0E0D               	movlw	13
  6559  0049BC  6F51               	movwf	_menu_st& (0+255),b
  6560                           
  6561                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6562  0049BE  0E0A               	movlw	10
  6563  0049C0  6F52               	movwf	(_menu_st+1)& (0+255),b
  6564                           
  6565                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6566  0049C2  0E0D               	movlw	13
  6567  0049C4  6F53               	movwf	(_menu_st+2)& (0+255),b
  6568                           
  6569                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6570  0049C6  0E0F               	movlw	15
  6571  0049C8  D08E               	goto	L38
  6572  0049CA                     l21052:
  6573                           
  6574                           ; BSR set to: 1
  6575                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6576  0049CA  0E00               	movlw	0
  6577  0049CC  6F65               	movwf	(_menu_st+20)& (0+255),b
  6578                           
  6579                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6580  0049CE  0E06               	movlw	6
  6581  0049D0  6F66               	movwf	(_menu_st+21)& (0+255),b
  6582                           
  6583                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6584  0049D2  0E03               	movlw	3
  6585  0049D4  6F67               	movwf	(_menu_st+22)& (0+255),b
  6586                           
  6587                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6588  0049D6  0E0F               	movlw	15
  6589  0049D8  6F51               	movwf	_menu_st& (0+255),b
  6590                           
  6591                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6592  0049DA  0E00               	movlw	0
  6593  0049DC  6F52               	movwf	(_menu_st+1)& (0+255),b
  6594                           
  6595                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6596  0049DE  0E0F               	movlw	15
  6597  0049E0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6598                           
  6599                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6600  0049E2  0E05               	movlw	5
  6601  0049E4  6F54               	movwf	(_menu_st+3)& (0+255),b
  6602                           
  6603                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6604  0049E6  0E0F               	movlw	15
  6605  0049E8  6F55               	movwf	(_menu_st+4)& (0+255),b
  6606                           
  6607                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6608  0049EA  0E0D               	movlw	13
  6609  0049EC  D073               	goto	L33
  6610  0049EE                     l21054:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6614  0049EE  0E00               	movlw	0
  6615  0049F0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6616                           
  6617                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6618  0049F2  0E07               	movlw	7
  6619  0049F4  6F66               	movwf	(_menu_st+21)& (0+255),b
  6620                           
  6621                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6622  0049F6  0E02               	movlw	2
  6623  0049F8  6F67               	movwf	(_menu_st+22)& (0+255),b
  6624                           
  6625                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6626  0049FA  0E0A               	movlw	10
  6627  0049FC  6F51               	movwf	_menu_st& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6630  0049FE  0E0F               	movlw	15
  6631  004A00  6F52               	movwf	(_menu_st+1)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6634  004A02  0E0A               	movlw	10
  6635  004A04  6F53               	movwf	(_menu_st+2)& (0+255),b
  6636                           
  6637                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6638  004A06  0E10               	movlw	16
  6639  004A08  D06E               	goto	L38
  6640  004A0A                     l21056:
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6644  004A0A  0E00               	movlw	0
  6645  004A0C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6646                           
  6647                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6648  004A0E  0E08               	movlw	8
  6649  004A10  6F66               	movwf	(_menu_st+21)& (0+255),b
  6650                           
  6651                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6652  004A12  0E02               	movlw	2
  6653  004A14  6F67               	movwf	(_menu_st+22)& (0+255),b
  6654                           
  6655                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6656  004A16  0E12               	movlw	18
  6657  004A18  6F51               	movwf	_menu_st& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6660  004A1A  0E0E               	movlw	14
  6661  004A1C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6664  004A1E  0E11               	movlw	17
  6665  004A20  6F53               	movwf	(_menu_st+2)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6668  004A22  0E0C               	movlw	12
  6669  004A24  D060               	goto	L38
  6670  004A26                     l21058:
  6671                           
  6672                           ; BSR set to: 1
  6673                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6674  004A26  0E00               	movlw	0
  6675  004A28  6F65               	movwf	(_menu_st+20)& (0+255),b
  6676                           
  6677                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6678  004A2A  0E09               	movlw	9
  6679  004A2C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6680                           
  6681                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6682  004A2E  0E04               	movlw	4
  6683  004A30  6F67               	movwf	(_menu_st+22)& (0+255),b
  6684                           
  6685                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6686  004A32  0E12               	movlw	18
  6687  004A34  6F51               	movwf	_menu_st& (0+255),b
  6688                           
  6689                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6690  004A36  0E0A               	movlw	10
  6691  004A38  6F52               	movwf	(_menu_st+1)& (0+255),b
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6694  004A3A  0E11               	movlw	17
  6695  004A3C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6698  004A3E  0E0A               	movlw	10
  6699  004A40  6F54               	movwf	(_menu_st+3)& (0+255),b
  6700                           
  6701                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6702  004A42  0E11               	movlw	17
  6703  004A44  6F55               	movwf	(_menu_st+4)& (0+255),b
  6704                           
  6705                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6706  004A46  0E12               	movlw	18
  6707  004A48  6F56               	movwf	(_menu_st+5)& (0+255),b
  6708                           
  6709                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6710  004A4A  0E05               	movlw	5
  6711  004A4C  6F57               	movwf	(_menu_st+6)& (0+255),b
  6712                           
  6713                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6714  004A4E  0E15               	movlw	21
  6715  004A50                     L31:
  6716  004A50  6F58               	movwf	(_menu_st+7)& (0+255),b
  6717                           
  6718                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6719  004A52  D07D               	goto	l21076
  6720  004A54                     l21060:
  6721                           
  6722                           ; BSR set to: 1
  6723                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6724  004A54  0E01               	movlw	1
  6725  004A56  6F65               	movwf	(_menu_st+20)& (0+255),b
  6726                           
  6727                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6728  004A58  0E0A               	movlw	10
  6729  004A5A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6730                           
  6731                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6732  004A5C  0E02               	movlw	2
  6733  004A5E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6734                           
  6735                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6736  004A60  0E11               	movlw	17
  6737  004A62  6F51               	movwf	_menu_st& (0+255),b
  6738                           
  6739                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6740  004A64  0E10               	movlw	16
  6741  004A66  6F52               	movwf	(_menu_st+1)& (0+255),b
  6742                           
  6743                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6744  004A68  0E10               	movlw	16
  6745  004A6A  6F53               	movwf	(_menu_st+2)& (0+255),b
  6746                           
  6747                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6748  004A6C  0E12               	movlw	18
  6749  004A6E  D03B               	goto	L38
  6750  004A70                     l21062:
  6751                           
  6752                           ; BSR set to: 1
  6753                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6754  004A70  0E01               	movlw	1
  6755  004A72  6F65               	movwf	(_menu_st+20)& (0+255),b
  6756                           
  6757                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6758  004A74  0E0B               	movlw	11
  6759  004A76  6F66               	movwf	(_menu_st+21)& (0+255),b
  6760                           
  6761                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6762  004A78  0E02               	movlw	2
  6763  004A7A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6764                           
  6765                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6766  004A7C  0E14               	movlw	20
  6767  004A7E  6F51               	movwf	_menu_st& (0+255),b
  6768                           
  6769                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6770  004A80  0E24               	movlw	36
  6771  004A82  6F52               	movwf	(_menu_st+1)& (0+255),b
  6772                           
  6773                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6774  004A84  0E14               	movlw	20
  6775  004A86  6F53               	movwf	(_menu_st+2)& (0+255),b
  6776                           
  6777                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6778  004A88  0E23               	movlw	35
  6779  004A8A  D02D               	goto	L38
  6780  004A8C                     l21064:
  6781                           
  6782                           ; BSR set to: 1
  6783                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6784  004A8C  0E0C               	movlw	12
  6785  004A8E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6786                           
  6787                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6788  004A90  0E00               	movlw	0
  6789  004A92  6F68               	movwf	(_menu_st+23)& (0+255),b
  6790                           
  6791                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6792  004A94  0E02               	movlw	2
  6793  004A96  6F67               	movwf	(_menu_st+22)& (0+255),b
  6794                           
  6795                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6796  004A98  0E05               	movlw	5
  6797  004A9A  6F51               	movwf	_menu_st& (0+255),b
  6798                           
  6799                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6800  004A9C  0E13               	movlw	19
  6801  004A9E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6802                           
  6803                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6804  004AA0  0E05               	movlw	5
  6805  004AA2  D7B0               	goto	L39
  6806  004AA4                     l21066:
  6807                           
  6808                           ; BSR set to: 1
  6809                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6810  004AA4  0E0D               	movlw	13
  6811  004AA6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6812                           
  6813                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6814  004AA8  0E01               	movlw	1
  6815  004AAA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6816                           
  6817                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6818  004AAC  0E0D               	movlw	13
  6819  004AAE  6F51               	movwf	_menu_st& (0+255),b
  6820                           
  6821                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6822  004AB0  0E12               	movlw	18
  6823  004AB2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6824                           
  6825                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6826  004AB4  0E00               	movlw	0
  6827  004AB6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6828  004AB8  0E3C               	movlw	60
  6829  004ABA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6830                           
  6831                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6832  004ABC  D048               	goto	l21076
  6833  004ABE                     l21068:
  6834                           
  6835                           ; BSR set to: 1
  6836                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6837  004ABE  0E05               	movlw	5
  6838  004AC0  6F51               	movwf	_menu_st& (0+255),b
  6839                           
  6840                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6841  004AC2  0E0C               	movlw	12
  6842  004AC4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6843                           
  6844                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6845  004AC6  0E05               	movlw	5
  6846  004AC8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6847                           
  6848                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6849  004ACA  0E0E               	movlw	14
  6850  004ACC  6F54               	movwf	(_menu_st+3)& (0+255),b
  6851                           
  6852                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6853  004ACE  0E22               	movlw	34
  6854  004AD0  6F55               	movwf	(_menu_st+4)& (0+255),b
  6855                           
  6856                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6857  004AD2  0E14               	movlw	20
  6858  004AD4                     L33:
  6859  004AD4  6F56               	movwf	(_menu_st+5)& (0+255),b
  6860                           
  6861                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6862  004AD6  D03B               	goto	l21076
  6863  004AD8                     l21070:
  6864                           
  6865                           ; BSR set to: 1
  6866                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6867  004AD8  0E12               	movlw	18
  6868  004ADA  6F51               	movwf	_menu_st& (0+255),b
  6869                           
  6870                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6871  004ADC  0E0E               	movlw	14
  6872  004ADE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6873                           
  6874                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6875  004AE0  0E14               	movlw	20
  6876  004AE2  6F53               	movwf	(_menu_st+2)& (0+255),b
  6877                           
  6878                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6879  004AE4  0E15               	movlw	21
  6880  004AE6                     L38:
  6881  004AE6  6F54               	movwf	(_menu_st+3)& (0+255),b
  6882                           
  6883                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6884  004AE8  D032               	goto	l21076
  6885  004AEA                     l21074:
  6886                           
  6887                           ; BSR set to: 1
  6888  004AEA  5022               	movf	load_New_Menu@Menu^0,w,c
  6889  004AEC  6E20               	movwf	??_load_New_Menu^0,c
  6890  004AEE  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6891                           
  6892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6893                           ; Switch size 1, requested type "simple"
  6894                           ; Number of cases is 1, Range of values is 0 to 0
  6895                           ; switch strategies available:
  6896                           ; Name         Instructions Cycles
  6897                           ; simple_byte            4     3 (average)
  6898                           ;	Chosen strategy is simple_byte
  6899  004AF0  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6900  004AF2  0A00               	xorlw	0	; case 0
  6901  004AF4  A4D8               	btfss	status,2,c
  6902  004AF6  D02B               	goto	l21076
  6903                           
  6904                           ; BSR set to: 1
  6905                           ; Switch size 1, requested type "simple"
  6906                           ; Number of cases is 14, Range of values is 0 to 13
  6907                           ; switch strategies available:
  6908                           ; Name         Instructions Cycles
  6909                           ; simple_byte           43    22 (average)
  6910                           ;	Chosen strategy is simple_byte
  6911  004AF8  5020               	movf	??_load_New_Menu^0,w,c
  6912  004AFA  0A00               	xorlw	0	; case 0
  6913  004AFC  B4D8               	btfsc	status,2,c
  6914  004AFE  D6FF               	goto	l21024
  6915  004B00  0A01               	xorlw	1	; case 1
  6916  004B02  B4D8               	btfsc	status,2,c
  6917  004B04  D71D               	goto	l21036
  6918  004B06  0A03               	xorlw	3	; case 2
  6919  004B08  B4D8               	btfsc	status,2,c
  6920  004B0A  D7E6               	goto	l21070
  6921  004B0C  0A01               	xorlw	1	; case 3
  6922  004B0E  B4D8               	btfsc	status,2,c
  6923  004B10  D7D6               	goto	l21068
  6924  004B12  0A07               	xorlw	7	; case 4
  6925  004B14  B4D8               	btfsc	status,2,c
  6926  004B16  D735               	goto	l21048
  6927  004B18  0A01               	xorlw	1	; case 5
  6928  004B1A  B4D8               	btfsc	status,2,c
  6929  004B1C  D748               	goto	l21050
  6930  004B1E  0A03               	xorlw	3	; case 6
  6931  004B20  B4D8               	btfsc	status,2,c
  6932  004B22  D753               	goto	l21052
  6933  004B24  0A01               	xorlw	1	; case 7
  6934  004B26  B4D8               	btfsc	status,2,c
  6935  004B28  D762               	goto	l21054
  6936  004B2A  0A0F               	xorlw	15	; case 8
  6937  004B2C  B4D8               	btfsc	status,2,c
  6938  004B2E  D76D               	goto	l21056
  6939  004B30  0A01               	xorlw	1	; case 9
  6940  004B32  B4D8               	btfsc	status,2,c
  6941  004B34  D778               	goto	l21058
  6942  004B36  0A03               	xorlw	3	; case 10
  6943  004B38  B4D8               	btfsc	status,2,c
  6944  004B3A  D78C               	goto	l21060
  6945  004B3C  0A01               	xorlw	1	; case 11
  6946  004B3E  B4D8               	btfsc	status,2,c
  6947  004B40  D797               	goto	l21062
  6948  004B42  0A07               	xorlw	7	; case 12
  6949  004B44  B4D8               	btfsc	status,2,c
  6950  004B46  D7A2               	goto	l21064
  6951  004B48  0A01               	xorlw	1	; case 13
  6952  004B4A  B4D8               	btfsc	status,2,c
  6953  004B4C  D7AB               	goto	l21066
  6954  004B4E                     l21076:
  6955                           
  6956                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6957  004B4E  0101               	movlb	1	; () banked
  6958  004B50  5167               	movf	(_menu_st+22)& (0+255),w,b
  6959  004B52  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6960  004B54  A0D8               	btfss	status,0,c
  6961  004B56  D002               	goto	l21080
  6962                           
  6963                           ; BSR set to: 1
  6964                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6965  004B58  0E00               	movlw	0
  6966  004B5A  6F68               	movwf	(_menu_st+23)& (0+255),b
  6967  004B5C                     l21080:
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6971  004B5C  0E0D               	movlw	13
  6972  004B5E  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6973  004B60  A4D8               	btfss	status,2,c
  6974  004B62  D01A               	goto	l21084
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6978  004B64  5168               	movf	(_menu_st+23)& (0+255),w,b
  6979  004B66  0D02               	mullw	2
  6980  004B68  0E52               	movlw	low (_menu_st+1)
  6981  004B6A  24F3               	addwf	243,w,c
  6982  004B6C  6ED9               	movwf	fsr2l,c
  6983  004B6E  0E01               	movlw	high (_menu_st+1)
  6984  004B70  20F4               	addwfc	prodh,w,c
  6985  004B72  6EDA               	movwf	fsr2h,c
  6986  004B74  50DF               	movf	indf2,w,c
  6987  004B76  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6988  004B78  0E00               	movlw	0
  6989  004B7A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6990  004B7C  0E0A               	movlw	10
  6991  004B7E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6992  004B80  5168               	movf	(_menu_st+23)& (0+255),w,b
  6993  004B82  0D02               	mullw	2
  6994  004B84  0E51               	movlw	low _menu_st
  6995  004B86  24F3               	addwf	243,w,c
  6996  004B88  6ED9               	movwf	fsr2l,c
  6997  004B8A  0E01               	movlw	high _menu_st
  6998  004B8C  20F4               	addwfc	prodh,w,c
  6999  004B8E  6EDA               	movwf	fsr2h,c
  7000  004B90  50DF               	movf	indf2,w,c
  7001  004B92  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  7002                           
  7003                           ;sm_MenuConfiguration_MC50.c: 640:     }
  7004  004B96  0012               	return	
  7005  004B98                     l21084:
  7006                           
  7007                           ; BSR set to: 1
  7008                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  7009  004B98  5168               	movf	(_menu_st+23)& (0+255),w,b
  7010  004B9A  0D02               	mullw	2
  7011  004B9C  0E52               	movlw	low (_menu_st+1)
  7012  004B9E  24F3               	addwf	243,w,c
  7013  004BA0  6ED9               	movwf	fsr2l,c
  7014  004BA2  0E01               	movlw	high (_menu_st+1)
  7015  004BA4  20F4               	addwfc	prodh,w,c
  7016  004BA6  6EDA               	movwf	fsr2h,c
  7017  004BA8  50DF               	movf	indf2,w,c
  7018  004BAA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7019  004BAC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7020  004BAE  0D02               	mullw	2
  7021  004BB0  0E51               	movlw	low _menu_st
  7022  004BB2  24F3               	addwf	243,w,c
  7023  004BB4  6ED9               	movwf	fsr2l,c
  7024  004BB6  0E01               	movlw	high _menu_st
  7025  004BB8  20F4               	addwfc	prodh,w,c
  7026  004BBA  6EDA               	movwf	fsr2h,c
  7027  004BBC  50DF               	movf	indf2,w,c
  7028  004BBE  ECDF  F04D         	call	_SetSegmentValueMain
  7029  004BC2  0012               	return		;funcret
  7030  004BC4                     __end_of_load_New_Menu:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _InitReceiver *****************
  7034 ;; Defined at:
  7035 ;;		line 207 in file "inputs_MC50.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2
  7044 ;; Tracked objects:
  7045 ;;		On entry : 30/F
  7046 ;;		On exit  : 3F/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:        0 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 4
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;;		_setValueToEdit
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text5
  7065  009BA4                     __ptext5:
  7066                           	callstack 0
  7067  009BA4                     _InitReceiver:
  7068                           	callstack 23
  7069                           
  7070                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7071                           
  7072                           ;incstack = 0
  7073  009BA4  010E               	movlb	14	; () banked
  7074  009BA6  9BCA               	bcf	202,5,b	;volatile
  7075                           
  7076                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7077  009BA8  8BC2               	bsf	194,5,b	;volatile
  7078                           
  7079                           ;inputs_MC50.c: 210:     GIE = 1;
  7080  009BAA  8EF2               	bsf	4082,7,c	;volatile
  7081                           
  7082                           ; BSR set to: 14
  7083                           ;inputs_MC50.c: 211:     RFstate = 0;
  7084  009BAC  0E00               	movlw	0
  7085  009BAE  0101               	movlb	1	; () banked
  7086  009BB0  6F9D               	movwf	_RFstate& (0+255),b
  7087                           
  7088                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7089  009BB2  0E00               	movlw	0
  7090  009BB4  0100               	movlb	0	; () banked
  7091  009BB6  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7092                           
  7093                           ;inputs_MC50.c: 213:     RFFull = 0;
  7094  009BB8  0E00               	movlw	0
  7095  009BBA  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7096                           
  7097                           ; BSR set to: 0
  7098  009BBC  0012               	return		;funcret
  7099  009BBE                     __end_of_InitReceiver:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function _controlSelectRemote *****************
  7103 ;; Defined at:
  7104 ;;		line 1103 in file "sm_MenuConfiguration_MC50.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;		None
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7109 ;;  pos             1   10[BANK0 ] unsigned char 
  7110 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7111 ;;  temp            1   16[BANK0 ] unsigned char 
  7112 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      void 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 3F/1
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7126 ;;Total ram usage:        9 bytes
  7127 ;; Hardware stack levels used: 1
  7128 ;; Hardware stack levels required when called: 14
  7129 ;; This function calls:
  7130 ;;		_ClearFlag_rfCMD
  7131 ;;		_RemoveSerial
  7132 ;;		_SaveNVM_VarSystem
  7133 ;;		_SetSegmentValue
  7134 ;;		_SetSegmentValueIntermitentMain
  7135 ;;		_SetSegmentValueMain
  7136 ;;		___awdiv
  7137 ;;		___lbmod
  7138 ;;		_cmdMemoryIsEmpty
  7139 ;;		_getSerialCmd
  7140 ;;		_getTypeRemote
  7141 ;;		_saveNewSerial
  7142 ;;		_sm_send_event
  7143 ;;		_validateRemoteSerialNumber
  7144 ;; This function is called by:
  7145 ;;		_sm_execute_menuConfiguration
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text6
  7150  003E7E                     __ptext6:
  7151                           	callstack 0
  7152  003E7E                     _controlSelectRemote:
  7153                           	callstack 14
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;sm_MenuConfiguration_MC50.c: 1104:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1105:     char temp=getSerialCmd(&tempSerial);
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;incstack = 0
  7160  003E7E  0EE4               	movlw	low controlSelectRemote@tempSerial
  7161  003E80  6E1B               	movwf	getSerialCmd@serial^0,c
  7162  003E82  EC15  F049         	call	_getSerialCmd	;wreg free
  7163  003E86  0100               	movlb	0	; () banked
  7164  003E88  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;sm_MenuConfiguration_MC50.c: 1106:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          107:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7168  003E8A  0101               	movlb	1	; () banked
  7169  003E8C  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7170  003E8E  D008               	goto	u25520
  7171  003E90  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7172  003E92  E103               	bnz	u25510
  7173  003E94  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7174  003E96  A0D8               	btfss	status,0,c
  7175  003E98  D003               	goto	u25520
  7176  003E9A                     u25510:
  7177                           
  7178                           ; BSR set to: 1
  7179  003E9A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7180  003E9C  A4D8               	btfss	status,2,c
  7181  003E9E  D028               	goto	l22292
  7182  003EA0                     u25520:
  7183                           
  7184                           ; BSR set to: 1
  7185                           ;sm_MenuConfiguration_MC50.c: 1108:     {;sm_MenuConfiguration_MC50.c: 1109:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7186  003EA0  0EF2               	movlw	low _main_stateMachine
  7187  003EA2  6E12               	movwf	sm_send_event@psm^0,c
  7188  003EA4  0E01               	movlw	high _main_stateMachine
  7189  003EA6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7190  003EA8  0E00               	movlw	0
  7191  003EAA  6E15               	movwf	(sm_send_event@event+1)^0,c
  7192  003EAC  0E07               	movlw	7
  7193  003EAE  6E14               	movwf	sm_send_event@event^0,c
  7194  003EB0  ECE1  F046         	call	_sm_send_event	;wreg free
  7195                           
  7196                           ;sm_MenuConfiguration_MC50.c: 1110:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7197  003EB4  0EBB               	movlw	low _menuConfiguration_stateMachine
  7198  003EB6  6E12               	movwf	sm_send_event@psm^0,c
  7199  003EB8  0E02               	movlw	high _menuConfiguration_stateMachine
  7200  003EBA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7201  003EBC  0E00               	movlw	0
  7202  003EBE  6E15               	movwf	(sm_send_event@event+1)^0,c
  7203  003EC0  0E03               	movlw	3
  7204  003EC2  6E14               	movwf	sm_send_event@event^0,c
  7205  003EC4  ECE1  F046         	call	_sm_send_event	;wreg free
  7206                           
  7207                           ;sm_MenuConfiguration_MC50.c: 1111:         var_sys.DistanceProgrammingActive=NO;
  7208  003EC8  0E00               	movlw	0
  7209  003ECA  0101               	movlb	1	; () banked
  7210  003ECC  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;sm_MenuConfiguration_MC50.c: 1112:         var_sys.ProgrammingDistanceIs=NoCMD;
  7214  003ECE  0E00               	movlw	0
  7215  003ED0  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7216                           
  7217                           ; BSR set to: 1
  7218                           ;sm_MenuConfiguration_MC50.c: 1113:         SetSegmentValueMain(dMinus,dMinus);
  7219  003ED2  0E18               	movlw	24
  7220  003ED4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7221  003ED6  0E18               	movlw	24
  7222  003ED8  ECDF  F04D         	call	_SetSegmentValueMain
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;sm_MenuConfiguration_MC50.c: 1114:         ClearFlag_rfCMD();
  7226  003EDC  EC32  F04F         	call	_ClearFlag_rfCMD	;wreg free
  7227                           
  7228                           ;sm_MenuConfiguration_MC50.c: 1115:         button_struct.processed=1;
  7229  003EE0  0E01               	movlw	1
  7230  003EE2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7231                           
  7232                           ;sm_MenuConfiguration_MC50.c: 1116:         ts_system.timeoutMenu = 0;
  7233  003EE4  0E00               	movlw	0
  7234  003EE6  0101               	movlb	1	; () banked
  7235  003EE8  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7236  003EEA  0E00               	movlw	0
  7237  003EEC  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7238                           
  7239                           ;sm_MenuConfiguration_MC50.c: 1118:     }
  7240  003EEE  0012               	return	
  7241  003EF0                     l22292:
  7242                           
  7243                           ; BSR set to: 1
  7244  003EF0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7245  003EF2  A4D8               	btfss	status,2,c
  7246  003EF4  D05B               	goto	l22314
  7247                           
  7248                           ; BSR set to: 1
  7249  003EF6  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7250  003EF8  B4D8               	btfsc	status,2,c
  7251  003EFA  D058               	goto	l22314
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;sm_MenuConfiguration_MC50.c: 1120:     {;sm_MenuConfiguration_MC50.c: 1121:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7255  003EFC  0E00               	movlw	0
  7256  003EFE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7257  003F00  0E64               	movlw	100
  7258  003F02  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;sm_MenuConfiguration_MC50.c: 1122:         if(edit_Param.tempValue<=edit_Param.Min)
  7262  003F04  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7263  003F06  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7264  003F08  A0D8               	btfss	status,0,c
  7265  003F0A  D003               	goto	l22302
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;sm_MenuConfiguration_MC50.c: 1123:         {;sm_MenuConfiguration_MC50.c: 1124:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7269  003F0C  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7270                           
  7271                           ;sm_MenuConfiguration_MC50.c: 1125:         }
  7272  003F10  D001               	goto	l22304
  7273  003F12                     l22302:
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;sm_MenuConfiguration_MC50.c: 1127:         {;sm_MenuConfiguration_MC50.c: 1128:        
      +                               edit_Param.tempValue--;
  7277  003F12  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7278  003F14                     l22304:
  7279                           
  7280                           ; BSR set to: 1
  7281                           ;sm_MenuConfiguration_MC50.c: 1130:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7282  003F14  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7283  003F18  5168               	movf	(_menu_st+23)& (0+255),w,b
  7284  003F1A  EC38  F040         	call	_cmdMemoryIsEmpty
  7285  003F1E  06E8               	decf	wreg,f,c
  7286  003F20  B4D8               	btfsc	status,2,c
  7287  003F22  D004               	goto	u25570
  7288  003F24  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7289  003F26  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7290  003F28  A4D8               	btfss	status,2,c
  7291  003F2A  D021               	goto	l22310
  7292  003F2C                     u25570:
  7293                           
  7294                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7295  003F2C  0E0A               	movlw	10
  7296  003F2E  6E10               	movwf	___lbmod@divisor^0,c
  7297  003F30  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7298  003F32  ECA7  F04C         	call	___lbmod
  7299  003F36  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7300  003F38  0E00               	movlw	0
  7301  003F3A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7302  003F3C  0E14               	movlw	20
  7303  003F3E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7304  003F40  0E0A               	movlw	10
  7305  003F42  6E10               	movwf	___lbmod@divisor^0,c
  7306  003F44  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7307  003F46  ECA7  F04C         	call	___lbmod
  7308  003F4A  0100               	movlb	0	; () banked
  7309  003F4C  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7310  003F4E  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7311  003F50  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7312  003F52  6E14               	movwf	___awdiv@dividend^0,c
  7313  003F54  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7314  003F56  A0D8               	btfss	status,0,c
  7315  003F58  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7316  003F5A  0E00               	movlw	0
  7317  003F5C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7318  003F5E  0E0A               	movlw	10
  7319  003F60  6E16               	movwf	___awdiv@divisor^0,c
  7320  003F62  EC22  F042         	call	___awdiv	;wreg free
  7321  003F66  5014               	movf	?___awdiv^0,w,c
  7322  003F68  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  7323                           
  7324                           ;sm_MenuConfiguration_MC50.c: 1133:         }
  7325  003F6C  D01C               	goto	l22312
  7326  003F6E                     l22310:
  7327                           
  7328                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7329  003F6E  0E0A               	movlw	10
  7330  003F70  6E10               	movwf	___lbmod@divisor^0,c
  7331  003F72  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7332  003F74  ECA7  F04C         	call	___lbmod
  7333  003F78  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7334  003F7A  0E0A               	movlw	10
  7335  003F7C  6E10               	movwf	___lbmod@divisor^0,c
  7336  003F7E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7337  003F80  ECA7  F04C         	call	___lbmod
  7338  003F84  0100               	movlb	0	; () banked
  7339  003F86  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7340  003F88  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7341  003F8A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7342  003F8C  6E14               	movwf	___awdiv@dividend^0,c
  7343  003F8E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7344  003F90  A0D8               	btfss	status,0,c
  7345  003F92  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7346  003F94  0E00               	movlw	0
  7347  003F96  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7348  003F98  0E0A               	movlw	10
  7349  003F9A  6E16               	movwf	___awdiv@divisor^0,c
  7350  003F9C  EC22  F042         	call	___awdiv	;wreg free
  7351  003FA0  5014               	movf	?___awdiv^0,w,c
  7352  003FA2  ECDF  F04D         	call	_SetSegmentValueMain
  7353  003FA6                     l22312:
  7354                           
  7355                           ;sm_MenuConfiguration_MC50.c: 1138:         button_struct.processed=1;
  7356  003FA6  0E01               	movlw	1
  7357  003FA8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7358                           
  7359                           ;sm_MenuConfiguration_MC50.c: 1139:     }
  7360  003FAA  0012               	return	
  7361  003FAC                     l22314:
  7362                           
  7363                           ; BSR set to: 1
  7364  003FAC  0E17               	movlw	23
  7365  003FAE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7366  003FB0  A4D8               	btfss	status,2,c
  7367  003FB2  D057               	goto	l22336
  7368                           
  7369                           ; BSR set to: 1
  7370  003FB4  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7371  003FB6  B4D8               	btfsc	status,2,c
  7372  003FB8  D054               	goto	l22336
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;sm_MenuConfiguration_MC50.c: 1141:     {;sm_MenuConfiguration_MC50.c: 1142:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7376  003FBA  0E00               	movlw	0
  7377  003FBC  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7378  003FBE  0E64               	movlw	100
  7379  003FC0  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;sm_MenuConfiguration_MC50.c: 1143:         edit_Param.tempValue++;
  7383  003FC2  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7384                           
  7385                           ; BSR set to: 1
  7386                           ;sm_MenuConfiguration_MC50.c: 1144:         if(edit_Param.tempValue>edit_Param.Max)
  7387  003FC4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7388  003FC6  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7389  003FC8  A0D8               	btfss	status,0,c
  7390                           
  7391                           ; BSR set to: 1
  7392                           ;sm_MenuConfiguration_MC50.c: 1145:         {;sm_MenuConfiguration_MC50.c: 1146:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7393  003FCA  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7394                           
  7395                           ; BSR set to: 1
  7396                           ;sm_MenuConfiguration_MC50.c: 1148:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7397  003FCE  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7398  003FD2  5168               	movf	(_menu_st+23)& (0+255),w,b
  7399  003FD4  EC38  F040         	call	_cmdMemoryIsEmpty
  7400  003FD8  06E8               	decf	wreg,f,c
  7401  003FDA  B4D8               	btfsc	status,2,c
  7402  003FDC  D004               	goto	u25620
  7403  003FDE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7404  003FE0  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7405  003FE2  A4D8               	btfss	status,2,c
  7406  003FE4  D021               	goto	l22332
  7407  003FE6                     u25620:
  7408                           
  7409                           ;sm_MenuConfiguration_MC50.c: 1149:         {;sm_MenuConfiguration_MC50.c: 1150:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7410  003FE6  0E0A               	movlw	10
  7411  003FE8  6E10               	movwf	___lbmod@divisor^0,c
  7412  003FEA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7413  003FEC  ECA7  F04C         	call	___lbmod
  7414  003FF0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7415  003FF2  0E00               	movlw	0
  7416  003FF4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7417  003FF6  0E14               	movlw	20
  7418  003FF8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7419  003FFA  0E0A               	movlw	10
  7420  003FFC  6E10               	movwf	___lbmod@divisor^0,c
  7421  003FFE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7422  004000  ECA7  F04C         	call	___lbmod
  7423  004004  0100               	movlb	0	; () banked
  7424  004006  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7425  004008  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7426  00400A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7427  00400C  6E14               	movwf	___awdiv@dividend^0,c
  7428  00400E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7429  004010  A0D8               	btfss	status,0,c
  7430  004012  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7431  004014  0E00               	movlw	0
  7432  004016  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7433  004018  0E0A               	movlw	10
  7434  00401A  6E16               	movwf	___awdiv@divisor^0,c
  7435  00401C  EC22  F042         	call	___awdiv	;wreg free
  7436  004020  5014               	movf	?___awdiv^0,w,c
  7437  004022  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  7438                           
  7439                           ;sm_MenuConfiguration_MC50.c: 1151:         }
  7440  004026  D7BF               	goto	l22312
  7441  004028                     l22332:
  7442                           
  7443                           ;sm_MenuConfiguration_MC50.c: 1153:         {;sm_MenuConfiguration_MC50.c: 1154:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7444  004028  0E0A               	movlw	10
  7445  00402A  6E10               	movwf	___lbmod@divisor^0,c
  7446  00402C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7447  00402E  ECA7  F04C         	call	___lbmod
  7448  004032  6E1C               	movwf	SetSegmentValue@d2^0,c
  7449  004034  0E0A               	movlw	10
  7450  004036  6E10               	movwf	___lbmod@divisor^0,c
  7451  004038  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7452  00403A  ECA7  F04C         	call	___lbmod
  7453  00403E  0100               	movlb	0	; () banked
  7454  004040  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7455  004042  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7456  004044  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7457  004046  6E14               	movwf	___awdiv@dividend^0,c
  7458  004048  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7459  00404A  A0D8               	btfss	status,0,c
  7460  00404C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7461  00404E  0E00               	movlw	0
  7462  004050  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7463  004052  0E0A               	movlw	10
  7464  004054  6E16               	movwf	___awdiv@divisor^0,c
  7465  004056  EC22  F042         	call	___awdiv	;wreg free
  7466  00405A  5014               	movf	?___awdiv^0,w,c
  7467  00405C  ECF9  F04D         	call	_SetSegmentValue
  7468  004060  D7A2               	goto	l22312
  7469  004062                     l22336:
  7470                           
  7471                           ; BSR set to: 1
  7472  004062  0E63               	movlw	99
  7473  004064  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7474  004066  D01A               	goto	l22346
  7475                           
  7476                           ; BSR set to: 1
  7477  004068  0E63               	movlw	99
  7478  00406A  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7479  00406C  D017               	goto	l22346
  7480                           
  7481                           ; BSR set to: 1
  7482                           ;sm_MenuConfiguration_MC50.c: 1159:     {;sm_MenuConfiguration_MC50.c: 1160:         if(
      +                          menu_st.parameterSelected==0)
  7483  00406E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7484  004070  A4D8               	btfss	status,2,c
  7485  004072  D00A               	goto	l22344
  7486                           
  7487                           ; BSR set to: 1
  7488                           ;sm_MenuConfiguration_MC50.c: 1161:         {;sm_MenuConfiguration_MC50.c: 1162:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7489  004074  0E13               	movlw	19
  7490  004076  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7491  004078  0E00               	movlw	0
  7492  00407A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7493  00407C  0E0A               	movlw	10
  7494  00407E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7495  004080  0E12               	movlw	18
  7496  004082  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  7497                           
  7498                           ;sm_MenuConfiguration_MC50.c: 1163:         }
  7499  004086  0012               	return	
  7500  004088                     l22344:
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;sm_MenuConfiguration_MC50.c: 1165:         {;sm_MenuConfiguration_MC50.c: 1166:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7504  004088  0E10               	movlw	16
  7505  00408A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7506  00408C  0E00               	movlw	0
  7507  00408E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7508  004090  0E0A               	movlw	10
  7509  004092  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7510  004094  0E12               	movlw	18
  7511  004096  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  7512  00409A  0012               	return	
  7513  00409C                     l22346:
  7514                           
  7515                           ; BSR set to: 1
  7516  00409C  0100               	movlb	0	; () banked
  7517  00409E  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7518  0040A0  B4D8               	btfsc	status,2,c
  7519  0040A2  D0A8               	goto	l22414
  7520                           
  7521                           ; BSR set to: 0
  7522  0040A4  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7523  0040A6  B4D8               	btfsc	status,2,c
  7524  0040A8  D00F               	goto	u25710
  7525                           
  7526                           ; BSR set to: 0
  7527  0040AA  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7528  0040AC  B4D8               	btfsc	status,2,c
  7529  0040AE  D00C               	goto	u25710
  7530                           
  7531                           ; BSR set to: 0
  7532  0040B0  0E02               	movlw	2
  7533  0040B2  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7534  0040B4  B4D8               	btfsc	status,2,c
  7535  0040B6  D008               	goto	u25710
  7536                           
  7537                           ; BSR set to: 0
  7538  0040B8  0E04               	movlw	4
  7539  0040BA  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7540  0040BC  B4D8               	btfsc	status,2,c
  7541  0040BE  D004               	goto	u25710
  7542                           
  7543                           ; BSR set to: 0
  7544  0040C0  0E08               	movlw	8
  7545  0040C2  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7546  0040C4  A4D8               	btfss	status,2,c
  7547  0040C6  D096               	goto	l22414
  7548  0040C8                     u25710:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;sm_MenuConfiguration_MC50.c: 1170:     {;sm_MenuConfiguration_MC50.c: 1171:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1172:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7552  0040C8  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7553  0040CC  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7554  0040D0  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7555  0040D4  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7556  0040D8  0E00               	movlw	0
  7557  0040DA  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7558  0040DC  0EE2               	movlw	low controlSelectRemote@pos
  7559  0040DE  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7560  0040E0  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7561  0040E2  EC66  F030         	call	_validateRemoteSerialNumber	;wreg free
  7562  0040E6  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;sm_MenuConfiguration_MC50.c: 1174:         TypeRemote_st typeRemote = getTypeRemote();
  7566  0040E8  EC2F  F04F         	call	_getTypeRemote	;wreg free
  7567  0040EC  0100               	movlb	0	; () banked
  7568  0040EE  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;sm_MenuConfiguration_MC50.c: 1175:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7572  0040F0  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7573  0040F2  A4D8               	btfss	status,2,c
  7574  0040F4  0012               	return	
  7575                           
  7576                           ; BSR set to: 0
  7577  0040F6  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7578  0040F8  B4D8               	btfsc	status,2,c
  7579  0040FA  D003               	goto	u25740
  7580                           
  7581                           ; BSR set to: 0
  7582  0040FC  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7583  0040FE  A4D8               	btfss	status,2,c
  7584  004100  0012               	return	
  7585  004102                     u25740:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;sm_MenuConfiguration_MC50.c: 1176:         {;sm_MenuConfiguration_MC50.c: 1177:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7589  004102  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7590  004106  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7591  00410A  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7592  00410E  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7593  004112  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7594  004116  0101               	movlb	1	; () banked
  7595  004118  5168               	movf	(_menu_st+23)& (0+255),w,b
  7596  00411A  EC06  F045         	call	_saveNewSerial
  7597                           
  7598                           ;sm_MenuConfiguration_MC50.c: 1178:             if(menu_st.parameterSelected==0&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7599  00411E  0101               	movlb	1	; () banked
  7600  004120  5168               	movf	(_menu_st+23)& (0+255),w,b
  7601  004122  A4D8               	btfss	status,2,c
  7602  004124  D009               	goto	l22378
  7603                           
  7604                           ; BSR set to: 1
  7605  004126  0100               	movlb	0	; () banked
  7606  004128  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7607  00412A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7608  00412C  A4D8               	btfss	status,2,c
  7609  00412E  D004               	goto	l22378
  7610                           
  7611                           ; BSR set to: 0
  7612  004130  0E63               	movlw	99
  7613  004132  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7614  004134  D001               	goto	l22378
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;sm_MenuConfiguration_MC50.c: 1179:                 var_sys_NVM.positionRemotesFull++;
  7618  004136  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7619  004138                     l22378:
  7620                           
  7621                           ;sm_MenuConfiguration_MC50.c: 1180:             if(menu_st.parameterSelected==1&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesWalk&&var_sys_NVM.positionRemotesWalk<99)
  7622  004138  0101               	movlb	1	; () banked
  7623  00413A  0568               	decf	(_menu_st+23)& (0+255),w,b
  7624  00413C  A4D8               	btfss	status,2,c
  7625  00413E  D009               	goto	l22386
  7626                           
  7627                           ; BSR set to: 1
  7628  004140  0100               	movlb	0	; () banked
  7629  004142  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7630  004144  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7631  004146  A4D8               	btfss	status,2,c
  7632  004148  D004               	goto	l22386
  7633                           
  7634                           ; BSR set to: 0
  7635  00414A  0E63               	movlw	99
  7636  00414C  61B9               	cpfslt	(_var_sys_NVM+33)& (0+255),b	;volatile
  7637  00414E  D001               	goto	l22386
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;sm_MenuConfiguration_MC50.c: 1181:                 var_sys_NVM.positionRemotesWalk++;
  7641  004150  2BB9               	incf	(_var_sys_NVM+33)& (0+255),f,b	;volatile
  7642  004152                     l22386:
  7643                           
  7644                           ;sm_MenuConfiguration_MC50.c: 1182:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7645  004152  0EBB               	movlw	low _menuConfiguration_stateMachine
  7646  004154  6E12               	movwf	sm_send_event@psm^0,c
  7647  004156  0E02               	movlw	high _menuConfiguration_stateMachine
  7648  004158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7649  00415A  0E00               	movlw	0
  7650  00415C  6E15               	movwf	(sm_send_event@event+1)^0,c
  7651  00415E  0E08               	movlw	8
  7652  004160  6E14               	movwf	sm_send_event@event^0,c
  7653  004162  ECE1  F046         	call	_sm_send_event	;wreg free
  7654                           
  7655                           ;sm_MenuConfiguration_MC50.c: 1183:             var_sys.DistanceProgrammingActive=NO;
  7656  004166  0E00               	movlw	0
  7657  004168  0101               	movlb	1	; () banked
  7658  00416A  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7659                           
  7660                           ; BSR set to: 1
  7661                           ;sm_MenuConfiguration_MC50.c: 1184:             var_sys.ProgrammingDistanceIs=NoCMD;
  7662  00416C  0E00               	movlw	0
  7663  00416E  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7664                           
  7665                           ; BSR set to: 1
  7666                           ;sm_MenuConfiguration_MC50.c: 1185:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7667  004170  0E00               	movlw	0
  7668  004172  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7669  004174  0E28               	movlw	40
  7670  004176  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7671                           
  7672                           ; BSR set to: 1
  7673                           ;sm_MenuConfiguration_MC50.c: 1186:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7674  004178  0E0A               	movlw	10
  7675  00417A  6E10               	movwf	___lbmod@divisor^0,c
  7676  00417C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7677  00417E  ECA7  F04C         	call	___lbmod
  7678  004182  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7679  004184  0E00               	movlw	0
  7680  004186  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7681  004188  0E04               	movlw	4
  7682  00418A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7683  00418C  0E0A               	movlw	10
  7684  00418E  6E10               	movwf	___lbmod@divisor^0,c
  7685  004190  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7686  004192  ECA7  F04C         	call	___lbmod
  7687  004196  0100               	movlb	0	; () banked
  7688  004198  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7689  00419A  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7690  00419C  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7691  00419E  6E14               	movwf	___awdiv@dividend^0,c
  7692  0041A0  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7693  0041A2  A0D8               	btfss	status,0,c
  7694  0041A4  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7695  0041A6  0E00               	movlw	0
  7696  0041A8  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7697  0041AA  0E0A               	movlw	10
  7698  0041AC  6E16               	movwf	___awdiv@divisor^0,c
  7699  0041AE  EC22  F042         	call	___awdiv	;wreg free
  7700  0041B2  5014               	movf	?___awdiv^0,w,c
  7701  0041B4  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  7702                           
  7703                           ;sm_MenuConfiguration_MC50.c: 1187:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7704  0041B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7705  0041BA  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7706  0041BC  B4D8               	btfsc	status,2,c
  7707  0041BE  D003               	goto	u25820
  7708  0041C0  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7709  0041C2  A4D8               	btfss	status,2,c
  7710  0041C4  0012               	return	
  7711  0041C6                     u25820:
  7712                           
  7713                           ;sm_MenuConfiguration_MC50.c: 1188:             {;sm_MenuConfiguration_MC50.c: 1192:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesWalk==0
      +                           && typeRemote==Keeloq_RollingCode)
  7714  0041C6  0100               	movlb	0	; () banked
  7715  0041C8  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7716  0041CA  A4D8               	btfss	status,2,c
  7717  0041CC  D008               	goto	l22408
  7718                           
  7719                           ; BSR set to: 0
  7720  0041CE  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7721  0041D0  A4D8               	btfss	status,2,c
  7722  0041D2  D005               	goto	l22408
  7723                           
  7724                           ; BSR set to: 0
  7725  0041D4  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7726  0041D6  A4D8               	btfss	status,2,c
  7727  0041D8  D002               	goto	l22408
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;sm_MenuConfiguration_MC50.c: 1193:                 {;sm_MenuConfiguration_MC50.c: 1195:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7731  0041DA  0E01               	movlw	1
  7732  0041DC  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7733  0041DE                     l22408:
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;sm_MenuConfiguration_MC50.c: 1199:                 edit_Param.tempValue++;
  7737  0041DE  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;sm_MenuConfiguration_MC50.c: 1200:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7741  0041E0  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7742  0041E4  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7743  0041E8  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;sm_MenuConfiguration_MC50.c: 1201:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7747  0041EC  0E02               	movlw	2
  7748  0041EE  ECEF  F04A         	call	_SaveNVM_VarSystem
  7749  0041F2  0012               	return	
  7750  0041F4                     l22414:
  7751                           
  7752                           ; BSR set to: 0
  7753  0041F4  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7754  0041F6  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7755  0041F8  B4D8               	btfsc	status,2,c
  7756  0041FA  0012               	return	
  7757                           
  7758                           ; BSR set to: 0
  7759  0041FC  0E27               	movlw	39
  7760  0041FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7761  004200  A4D8               	btfss	status,2,c
  7762  004202  0012               	return	
  7763                           
  7764                           ; BSR set to: 0
  7765  004204  0E27               	movlw	39
  7766  004206  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7767  004208  0012               	return	
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;sm_MenuConfiguration_MC50.c: 1208:     {;sm_MenuConfiguration_MC50.c: 1209:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7771  00420A  0E00               	movlw	0
  7772  00420C  0101               	movlb	1	; () banked
  7773  00420E  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7774  004210  0E64               	movlw	100
  7775  004212  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7776                           
  7777                           ; BSR set to: 1
  7778                           ;sm_MenuConfiguration_MC50.c: 1210:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7779  004214  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7780  004218  5168               	movf	(_menu_st+23)& (0+255),w,b
  7781  00421A  ECE7  F042         	call	_RemoveSerial
  7782                           
  7783                           ;sm_MenuConfiguration_MC50.c: 1211:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7784  00421E  0E0A               	movlw	10
  7785  004220  6E10               	movwf	___lbmod@divisor^0,c
  7786  004222  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7787  004224  ECA7  F04C         	call	___lbmod
  7788  004228  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7789  00422A  0E00               	movlw	0
  7790  00422C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7791  00422E  0E14               	movlw	20
  7792  004230  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7793  004232  0E0A               	movlw	10
  7794  004234  6E10               	movwf	___lbmod@divisor^0,c
  7795  004236  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7796  004238  ECA7  F04C         	call	___lbmod
  7797  00423C  0100               	movlb	0	; () banked
  7798  00423E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7799  004240  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7800  004242  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7801  004244  6E14               	movwf	___awdiv@dividend^0,c
  7802  004246  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7803  004248  A0D8               	btfss	status,0,c
  7804  00424A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7805  00424C  0E00               	movlw	0
  7806  00424E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7807  004250  0E0A               	movlw	10
  7808  004252  6E16               	movwf	___awdiv@divisor^0,c
  7809  004254  EC22  F042         	call	___awdiv	;wreg free
  7810  004258  5014               	movf	?___awdiv^0,w,c
  7811  00425A  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  7812  00425E  0012               	return	
  7813  004260                     __end_of_controlSelectRemote:
  7814                           	callstack 0
  7815                           
  7816 ;; *************** function _getTypeRemote *****************
  7817 ;; Defined at:
  7818 ;;		line 459 in file "inputs_MC50.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;		None
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  1    wreg      enum E10559
  7825 ;; Registers used:
  7826 ;;		wreg, status,2
  7827 ;; Tracked objects:
  7828 ;;		On entry : 3F/0
  7829 ;;		On exit  : 3F/2
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;Total ram usage:        0 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; Hardware stack levels required when called: 4
  7839 ;; This function calls:
  7840 ;;		Nothing
  7841 ;; This function is called by:
  7842 ;;		_controlSelectRemote
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text7
  7847  009E5E                     __ptext7:
  7848                           	callstack 0
  7849  009E5E                     _getTypeRemote:
  7850                           	callstack 23
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;inputs_MC50.c: 460:     return classic_data.type;
  7854                           
  7855                           ;incstack = 0
  7856  009E5E  0102               	movlb	2	; () banked
  7857  009E60  519E               	movf	(_classic_data+14)& (0+255),w,b
  7858                           
  7859                           ; BSR set to: 2
  7860  009E62  0012               	return		;funcret
  7861  009E64                     __end_of_getTypeRemote:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function _getSerialCmd *****************
  7865 ;; Defined at:
  7866 ;;		line 442 in file "inputs_MC50.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7869 ;;		 -> controlSelectRemote@tempSerial(4), 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;  temp            1   27[COMRAM] char 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1    wreg      char 
  7874 ;; Registers used:
  7875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7876 ;; Tracked objects:
  7877 ;;		On entry : 3F/1
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7885 ;;Total ram usage:        2 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; Hardware stack levels required when called: 5
  7888 ;; This function calls:
  7889 ;;		_memcpy
  7890 ;; This function is called by:
  7891 ;;		_controlSelectRemote
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text8
  7896  00922A                     __ptext8:
  7897                           	callstack 0
  7898  00922A                     _getSerialCmd:
  7899                           	callstack 22
  7900                           
  7901                           ; BSR set to: 1
  7902                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7903                           
  7904                           ; BSR set to: 2
  7905                           ;incstack = 0
  7906  00922A  681C               	setf	getSerialCmd@temp^0,c
  7907                           
  7908                           ; BSR set to: 1
  7909                           ;inputs_MC50.c: 444:     if(RFFull)
  7910  00922C  0100               	movlb	0	; () banked
  7911  00922E  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7912  009230  B4D8               	btfsc	status,2,c
  7913  009232  D020               	goto	l20778
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7917  009234  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7918  009236  B4D8               	btfsc	status,2,c
  7919  009238  D00E               	goto	l20774
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7923  00923A  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7924  00923E  6A11               	clrf	(memcpy@d1+1)^0,c
  7925  009240  0E94               	movlw	low (_classic_data+4)
  7926  009242  6E12               	movwf	memcpy@s1^0,c
  7927  009244  0E02               	movlw	high (_classic_data+4)
  7928  009246  6E13               	movwf	(memcpy@s1+1)^0,c
  7929  009248  0E00               	movlw	0
  7930  00924A  6E15               	movwf	(memcpy@n+1)^0,c
  7931  00924C  0E04               	movlw	4
  7932  00924E  6E14               	movwf	memcpy@n^0,c
  7933  009250  ECF1  F049         	call	_memcpy	;wreg free
  7934                           
  7935                           ;inputs_MC50.c: 449:         }
  7936  009254  D00D               	goto	l20776
  7937  009256                     l20774:
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7941  009256  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7942  00925A  6A11               	clrf	(memcpy@d1+1)^0,c
  7943  00925C  0ECA               	movlw	low (_BufferRF+4)
  7944  00925E  6E12               	movwf	memcpy@s1^0,c
  7945  009260  0E02               	movlw	high (_BufferRF+4)
  7946  009262  6E13               	movwf	(memcpy@s1+1)^0,c
  7947  009264  0E00               	movlw	0
  7948  009266  6E15               	movwf	(memcpy@n+1)^0,c
  7949  009268  0E04               	movlw	4
  7950  00926A  6E14               	movwf	memcpy@n^0,c
  7951  00926C  ECF1  F049         	call	_memcpy	;wreg free
  7952  009270                     l20776:
  7953                           
  7954                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7955  009270  C29C  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7956  009274                     l20778:
  7957                           
  7958                           ;inputs_MC50.c: 456:     return temp;
  7959  009274  501C               	movf	getSerialCmd@temp^0,w,c
  7960  009276  0012               	return		;funcret
  7961  009278                     __end_of_getSerialCmd:
  7962                           	callstack 0
  7963                           
  7964 ;; *************** function _controlSaveRemote *****************
  7965 ;; Defined at:
  7966 ;;		line 1216 in file "sm_MenuConfiguration_MC50.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      void 
  7973 ;; Registers used:
  7974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7975 ;; Tracked objects:
  7976 ;;		On entry : 3F/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;Total ram usage:        1 bytes
  7985 ;; Hardware stack levels used: 1
  7986 ;; Hardware stack levels required when called: 6
  7987 ;; This function calls:
  7988 ;;		_ClearFlag_rfCMD
  7989 ;;		_SetSegmentValueIntermitentMain
  7990 ;;		_SetSegmentValueMain
  7991 ;;		___awdiv
  7992 ;;		___lbmod
  7993 ;;		_sm_send_event
  7994 ;; This function is called by:
  7995 ;;		_sm_execute_menuConfiguration
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text9
  8000  007BE4                     __ptext9:
  8001                           	callstack 0
  8002  007BE4                     _controlSaveRemote:
  8003                           	callstack 22
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;sm_MenuConfiguration_MC50.c: 1217:      if (ts_system.timeSinalizationDigit<=0)
  8007                           
  8008                           ;incstack = 0
  8009  007BE4  0101               	movlb	1	; () banked
  8010  007BE6  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8011  007BE8  D005               	goto	u25890
  8012  007BEA  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8013  007BEC  E154               	bnz	l3493
  8014  007BEE  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8015  007BF0  B0D8               	btfsc	status,0,c
  8016  007BF2  0012               	return	
  8017  007BF4                     u25890:
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;sm_MenuConfiguration_MC50.c: 1218:      {;sm_MenuConfiguration_MC50.c: 1219:          i
      +                          f(edit_Param.Max==0)
  8021  007BF4  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8022  007BF6  A4D8               	btfss	status,2,c
  8023  007BF8  D02E               	goto	l22436
  8024                           
  8025                           ; BSR set to: 1
  8026                           ;sm_MenuConfiguration_MC50.c: 1220:          {;sm_MenuConfiguration_MC50.c: 1221:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8027  007BFA  0E00               	movlw	0
  8028  007BFC  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8029  007BFE  0EC8               	movlw	200
  8030  007C00  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8031                           
  8032                           ; BSR set to: 1
  8033                           ;sm_MenuConfiguration_MC50.c: 1222:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8034  007C02  0EBB               	movlw	low _menuConfiguration_stateMachine
  8035  007C04  6E12               	movwf	sm_send_event@psm^0,c
  8036  007C06  0E02               	movlw	high _menuConfiguration_stateMachine
  8037  007C08  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8038  007C0A  0E00               	movlw	0
  8039  007C0C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8040  007C0E  0E09               	movlw	9
  8041  007C10  6E14               	movwf	sm_send_event@event^0,c
  8042  007C12  ECE1  F046         	call	_sm_send_event	;wreg free
  8043                           
  8044                           ;sm_MenuConfiguration_MC50.c: 1223:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8045  007C16  0E0A               	movlw	10
  8046  007C18  6E10               	movwf	___lbmod@divisor^0,c
  8047  007C1A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8048  007C1C  ECA7  F04C         	call	___lbmod
  8049  007C20  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8050  007C22  0E00               	movlw	0
  8051  007C24  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8052  007C26  0E14               	movlw	20
  8053  007C28  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8054  007C2A  0E0A               	movlw	10
  8055  007C2C  6E10               	movwf	___lbmod@divisor^0,c
  8056  007C2E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8057  007C30  ECA7  F04C         	call	___lbmod
  8058  007C34  6E20               	movwf	??_controlSaveRemote^0,c
  8059  007C36  5020               	movf	??_controlSaveRemote^0,w,c
  8060  007C38  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8061  007C3A  6E14               	movwf	___awdiv@dividend^0,c
  8062  007C3C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8063  007C3E  A0D8               	btfss	status,0,c
  8064  007C40  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8065  007C42  0E00               	movlw	0
  8066  007C44  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8067  007C46  0E0A               	movlw	10
  8068  007C48  6E16               	movwf	___awdiv@divisor^0,c
  8069  007C4A  EC22  F042         	call	___awdiv	;wreg free
  8070  007C4E  5014               	movf	?___awdiv^0,w,c
  8071  007C50  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
  8072                           
  8073                           ;sm_MenuConfiguration_MC50.c: 1224:          }
  8074  007C54  0012               	return	
  8075  007C56                     l22436:
  8076                           
  8077                           ; BSR set to: 1
  8078                           ;sm_MenuConfiguration_MC50.c: 1226:          {;sm_MenuConfiguration_MC50.c: 1227:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8079  007C56  0EF2               	movlw	low _main_stateMachine
  8080  007C58  6E12               	movwf	sm_send_event@psm^0,c
  8081  007C5A  0E01               	movlw	high _main_stateMachine
  8082  007C5C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8083  007C5E  0E00               	movlw	0
  8084  007C60  6E15               	movwf	(sm_send_event@event+1)^0,c
  8085  007C62  0E07               	movlw	7
  8086  007C64  6E14               	movwf	sm_send_event@event^0,c
  8087  007C66  ECE1  F046         	call	_sm_send_event	;wreg free
  8088                           
  8089                           ;sm_MenuConfiguration_MC50.c: 1228:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8090  007C6A  0EBB               	movlw	low _menuConfiguration_stateMachine
  8091  007C6C  6E12               	movwf	sm_send_event@psm^0,c
  8092  007C6E  0E02               	movlw	high _menuConfiguration_stateMachine
  8093  007C70  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8094  007C72  0E00               	movlw	0
  8095  007C74  6E15               	movwf	(sm_send_event@event+1)^0,c
  8096  007C76  0E04               	movlw	4
  8097  007C78  6E14               	movwf	sm_send_event@event^0,c
  8098  007C7A  ECE1  F046         	call	_sm_send_event	;wreg free
  8099                           
  8100                           ;sm_MenuConfiguration_MC50.c: 1229:             SetSegmentValueMain(dMinus,dMinus);
  8101  007C7E  0E18               	movlw	24
  8102  007C80  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8103  007C82  0E18               	movlw	24
  8104  007C84  ECDF  F04D         	call	_SetSegmentValueMain
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;sm_MenuConfiguration_MC50.c: 1230:             ClearFlag_rfCMD();
  8108  007C88  EC32  F04F         	call	_ClearFlag_rfCMD	;wreg free
  8109                           
  8110                           ;sm_MenuConfiguration_MC50.c: 1231:             ts_system.timeoutMenu = 0;
  8111  007C8C  0E00               	movlw	0
  8112  007C8E  0101               	movlb	1	; () banked
  8113  007C90  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8114  007C92  0E00               	movlw	0
  8115  007C94  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8116  007C96                     l3493:
  8117  007C96  0012               	return		;funcret
  8118  007C98                     __end_of_controlSaveRemote:
  8119                           	callstack 0
  8120                           
  8121 ;; *************** function ___lbmod *****************
  8122 ;; Defined at:
  8123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  dividend        1    wreg     unsigned char 
  8126 ;;  divisor         1   15[COMRAM] unsigned char 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  dividend        1   16[COMRAM] unsigned char 
  8129 ;;  rem             1   18[COMRAM] unsigned char 
  8130 ;;  counter         1   17[COMRAM] unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1    wreg      unsigned char 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2, status,0
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/1
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8140 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8141 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;Total ram usage:        4 bytes
  8145 ;; Hardware stack levels used: 1
  8146 ;; Hardware stack levels required when called: 4
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_controlSelectRemote
  8151 ;;		_controlSaveRemote
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text10
  8156  00994E                     __ptext10:
  8157                           	callstack 0
  8158  00994E                     ___lbmod:
  8159                           	callstack 23
  8160                           
  8161                           ;incstack = 0
  8162                           ;___lbmod@dividend stored from wreg
  8163  00994E  6E11               	movwf	___lbmod@dividend^0,c
  8164  009950  0E08               	movlw	8
  8165  009952  6E12               	movwf	___lbmod@counter^0,c
  8166  009954  0E00               	movlw	0
  8167  009956  6E13               	movwf	___lbmod@rem^0,c
  8168  009958                     l21162:
  8169  009958  90D8               	bcf	status,0,c
  8170  00995A  3411               	rlcf	___lbmod@dividend^0,w,c
  8171  00995C  3413               	rlcf	___lbmod@rem^0,w,c
  8172  00995E  6E13               	movwf	___lbmod@rem^0,c
  8173  009960  90D8               	bcf	status,0,c
  8174  009962  3611               	rlcf	___lbmod@dividend^0,f,c
  8175  009964  5010               	movf	___lbmod@divisor^0,w,c
  8176  009966  5C13               	subwf	___lbmod@rem^0,w,c
  8177  009968  A0D8               	btfss	status,0,c
  8178  00996A  D002               	goto	l21170
  8179  00996C  5010               	movf	___lbmod@divisor^0,w,c
  8180  00996E  5E13               	subwf	___lbmod@rem^0,f,c
  8181  009970                     l21170:
  8182  009970  2E12               	decfsz	___lbmod@counter^0,f,c
  8183  009972  D7F2               	goto	l21162
  8184  009974  5013               	movf	___lbmod@rem^0,w,c
  8185  009976  0012               	return		;funcret
  8186  009978                     __end_of___lbmod:
  8187                           	callstack 0
  8188                           
  8189 ;; *************** function ___awdiv *****************
  8190 ;; Defined at:
  8191 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  dividend        2   19[COMRAM] int 
  8194 ;;  divisor         2   21[COMRAM] int 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  quotient        2   25[COMRAM] int 
  8197 ;;  sign            1   24[COMRAM] unsigned char 
  8198 ;;  counter         1   23[COMRAM] unsigned char 
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  2   19[COMRAM] int 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8212 ;;Total ram usage:        8 bytes
  8213 ;; Hardware stack levels used: 1
  8214 ;; Hardware stack levels required when called: 4
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_controlSelectRemote
  8219 ;;		_controlSaveRemote
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text11
  8224  008444                     __ptext11:
  8225                           	callstack 0
  8226  008444                     ___awdiv:
  8227                           	callstack 23
  8228                           
  8229                           ;incstack = 0
  8230  008444  0E00               	movlw	0
  8231  008446  6E19               	movwf	___awdiv@sign^0,c
  8232  008448  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8233  00844A  D006               	goto	l21098
  8234  00844C  6C16               	negf	___awdiv@divisor^0,c
  8235  00844E  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8236  008450  B0D8               	btfsc	status,0,c
  8237  008452  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8238  008454  0E01               	movlw	1
  8239  008456  6E19               	movwf	___awdiv@sign^0,c
  8240  008458                     l21098:
  8241  008458  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8242  00845A  D006               	goto	l21104
  8243  00845C  6C14               	negf	___awdiv@dividend^0,c
  8244  00845E  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8245  008460  B0D8               	btfsc	status,0,c
  8246  008462  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8247  008464  0E01               	movlw	1
  8248  008466  1A19               	xorwf	___awdiv@sign^0,f,c
  8249  008468                     l21104:
  8250  008468  0E00               	movlw	0
  8251  00846A  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8252  00846C  0E00               	movlw	0
  8253  00846E  6E1A               	movwf	___awdiv@quotient^0,c
  8254  008470  5016               	movf	___awdiv@divisor^0,w,c
  8255  008472  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8256  008474  B4D8               	btfsc	status,2,c
  8257  008476  D01C               	goto	l21126
  8258  008478  0E01               	movlw	1
  8259  00847A  6E18               	movwf	___awdiv@counter^0,c
  8260  00847C  D004               	goto	l21112
  8261  00847E                     l21110:
  8262  00847E  90D8               	bcf	status,0,c
  8263  008480  3616               	rlcf	___awdiv@divisor^0,f,c
  8264  008482  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8265  008484  2A18               	incf	___awdiv@counter^0,f,c
  8266  008486                     l21112:
  8267  008486  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8268  008488  D7FA               	goto	l21110
  8269  00848A                     u24310:
  8270  00848A  90D8               	bcf	status,0,c
  8271  00848C  361A               	rlcf	___awdiv@quotient^0,f,c
  8272  00848E  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8273  008490  5016               	movf	___awdiv@divisor^0,w,c
  8274  008492  5C14               	subwf	___awdiv@dividend^0,w,c
  8275  008494  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8276  008496  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8277  008498  A0D8               	btfss	status,0,c
  8278  00849A  D005               	goto	l21122
  8279  00849C  5016               	movf	___awdiv@divisor^0,w,c
  8280  00849E  5E14               	subwf	___awdiv@dividend^0,f,c
  8281  0084A0  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8282  0084A2  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8283  0084A4  801A               	bsf	___awdiv@quotient^0,0,c
  8284  0084A6                     l21122:
  8285  0084A6  90D8               	bcf	status,0,c
  8286  0084A8  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8287  0084AA  3216               	rrcf	___awdiv@divisor^0,f,c
  8288  0084AC  2E18               	decfsz	___awdiv@counter^0,f,c
  8289  0084AE  D7ED               	goto	u24310
  8290  0084B0                     l21126:
  8291  0084B0  5019               	movf	___awdiv@sign^0,w,c
  8292  0084B2  B4D8               	btfsc	status,2,c
  8293  0084B4  D004               	goto	l21130
  8294  0084B6  6C1A               	negf	___awdiv@quotient^0,c
  8295  0084B8  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8296  0084BA  B0D8               	btfsc	status,0,c
  8297  0084BC  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8298  0084BE                     l21130:
  8299  0084BE  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8300  0084C2  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8301  0084C6  0012               	return		;funcret
  8302  0084C8                     __end_of___awdiv:
  8303                           	callstack 0
  8304                           
  8305 ;; *************** function _SetSegmentValueMain *****************
  8306 ;; Defined at:
  8307 ;;		line 104 in file "outputs_MC50.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  d1              1    wreg     unsigned char 
  8310 ;;  d2              1   27[COMRAM] unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  d1              1   28[COMRAM] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 3F/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8322 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8326 ;;Total ram usage:        2 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 4
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_sm_execute_main
  8333 ;;		_sm_execute_menuConfiguration
  8334 ;;		_load_New_Menu
  8335 ;;		_controlSelectRemote
  8336 ;;		_controlSaveRemote
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text12
  8341  009BBE                     __ptext12:
  8342                           	callstack 0
  8343  009BBE                     _SetSegmentValueMain:
  8344                           	callstack 22
  8345                           
  8346                           ;incstack = 0
  8347                           ;SetSegmentValueMain@d1 stored from wreg
  8348  009BBE  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8349                           
  8350                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8351  009BC0  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8352                           
  8353                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8354  009BC4  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8355                           
  8356                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8357  009BC8  0E00               	movlw	0
  8358  009BCA  0100               	movlb	0	; () banked
  8359  009BCC  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8360  009BCE  0E00               	movlw	0
  8361  009BD0  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8365  009BD2  0E00               	movlw	0
  8366  009BD4  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8367                           
  8368                           ; BSR set to: 0
  8369  009BD6  0012               	return		;funcret
  8370  009BD8                     __end_of_SetSegmentValueMain:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function _ClearFlag_rfCMD *****************
  8374 ;; Defined at:
  8375 ;;		line 463 in file "inputs_MC50.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;		None
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      void 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/1
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;Total ram usage:        0 bytes
  8394 ;; Hardware stack levels used: 1
  8395 ;; Hardware stack levels required when called: 4
  8396 ;; This function calls:
  8397 ;;		Nothing
  8398 ;; This function is called by:
  8399 ;;		_sm_execute_menuConfiguration
  8400 ;;		_controlSelectRemote
  8401 ;;		_controlSaveRemote
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text13
  8406  009E64                     __ptext13:
  8407                           	callstack 0
  8408  009E64                     _ClearFlag_rfCMD:
  8409                           	callstack 23
  8410                           
  8411                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;incstack = 0
  8415  009E64  0E01               	movlw	1
  8416  009E66  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8417  009E68  0012               	return		;funcret
  8418  009E6A                     __end_of_ClearFlag_rfCMD:
  8419                           	callstack 0
  8420                           
  8421 ;; *************** function _controlLearnDigit *****************
  8422 ;; Defined at:
  8423 ;;		line 1237 in file "sm_MenuConfiguration_MC50.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2, status,0, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 3F/0
  8434 ;;		On exit  : 3E/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used: 1
  8443 ;; Hardware stack levels required when called: 5
  8444 ;; This function calls:
  8445 ;;		_SetSegmentValueLearn
  8446 ;; This function is called by:
  8447 ;;		_sm_execute_menuConfiguration
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text14
  8452  0096E0                     __ptext14:
  8453                           	callstack 0
  8454  0096E0                     _controlLearnDigit:
  8455                           	callstack 23
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;sm_MenuConfiguration_MC50.c: 1239:     if(ts_system.timeSinalizationDigit<=0 )
  8459                           
  8460                           ;incstack = 0
  8461  0096E0  0101               	movlb	1	; () banked
  8462  0096E2  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8463  0096E4  D005               	goto	u25910
  8464  0096E6  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8465  0096E8  E112               	bnz	l3499
  8466  0096EA  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8467  0096EC  B0D8               	btfsc	status,0,c
  8468  0096EE  0012               	return	
  8469  0096F0                     u25910:
  8470                           
  8471                           ; BSR set to: 1
  8472                           ;sm_MenuConfiguration_MC50.c: 1240:     {;sm_MenuConfiguration_MC50.c: 1241:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8473  0096F0  0E00               	movlw	0
  8474  0096F2  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8475  0096F4  0E02               	movlw	2
  8476  0096F6  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8477                           
  8478                           ; BSR set to: 1
  8479                           ;sm_MenuConfiguration_MC50.c: 1242:         if(var_sys.StateMotor==InClose)
  8480  0096F8  0E03               	movlw	3
  8481  0096FA  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8482  0096FC  A4D8               	btfss	status,2,c
  8483  0096FE  D004               	goto	l22452
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;sm_MenuConfiguration_MC50.c: 1243:         {;sm_MenuConfiguration_MC50.c: 1244:        
      +                               SetSegmentValueLearn(Left);
  8487  009700  0E00               	movlw	0
  8488  009702  ECE9  F03A         	call	_SetSegmentValueLearn
  8489                           
  8490                           ;sm_MenuConfiguration_MC50.c: 1245:         }
  8491  009706  0012               	return	
  8492  009708                     l22452:
  8493                           
  8494                           ; BSR set to: 1
  8495                           ;sm_MenuConfiguration_MC50.c: 1247:         {;sm_MenuConfiguration_MC50.c: 1248:        
      +                               SetSegmentValueLearn(Rigth);
  8496  009708  0E01               	movlw	1
  8497  00970A  ECE9  F03A         	call	_SetSegmentValueLearn
  8498  00970E                     l3499:
  8499  00970E  0012               	return		;funcret
  8500  009710                     __end_of_controlLearnDigit:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _SetSegmentValueLearn *****************
  8504 ;; Defined at:
  8505 ;;		line 124 in file "outputs_MC50.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  direction       1    wreg     enum E10602
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  direction       1   17[COMRAM] enum E10602
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0
  8514 ;; Tracked objects:
  8515 ;;		On entry : 3F/1
  8516 ;;		On exit  : 3F/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8523 ;;Total ram usage:        3 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 4
  8526 ;; This function calls:
  8527 ;;		Nothing
  8528 ;; This function is called by:
  8529 ;;		_controlLearnDigit
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text15
  8534  0075D2                     __ptext15:
  8535                           	callstack 0
  8536  0075D2                     _SetSegmentValueLearn:
  8537                           	callstack 23
  8538                           
  8539                           ;incstack = 0
  8540                           ;SetSegmentValueLearn@direction stored from wreg
  8541  0075D2  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8542                           
  8543                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8544  0075D4  0E00               	movlw	0
  8545  0075D6  0100               	movlb	0	; () banked
  8546  0075D8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8547  0075DA  0E00               	movlw	0
  8548  0075DC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8549                           
  8550                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8551  0075DE  0E00               	movlw	0
  8552  0075E0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8553                           
  8554                           ;outputs_MC50.c: 128:     switch (direction)
  8555  0075E2  D066               	goto	l20936
  8556  0075E4                     l20882:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8560  0075E4  0E1A               	movlw	26
  8561  0075E6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8562  0075E8  A4D8               	btfss	status,2,c
  8563  0075EA  D009               	goto	l20888
  8564                           
  8565                           ; BSR set to: 0
  8566  0075EC  0E20               	movlw	32
  8567  0075EE  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8568  0075F0  A4D8               	btfss	status,2,c
  8569  0075F2  D005               	goto	l20888
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8573  0075F4  0E20               	movlw	32
  8574  0075F6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8575                           
  8576                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8577  0075F8  0E1A               	movlw	26
  8578  0075FA  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8579                           
  8580                           ;outputs_MC50.c: 135:             }
  8581  0075FC  0012               	return	
  8582  0075FE                     l20888:
  8583                           
  8584                           ; BSR set to: 0
  8585  0075FE  0E20               	movlw	32
  8586  007600  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8587  007602  A4D8               	btfss	status,2,c
  8588  007604  D009               	goto	l20894
  8589                           
  8590                           ; BSR set to: 0
  8591  007606  0E1D               	movlw	29
  8592  007608  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8593  00760A  A4D8               	btfss	status,2,c
  8594  00760C  D005               	goto	l20894
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8598  00760E  0E1D               	movlw	29
  8599  007610  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8600                           
  8601                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8602  007612  0E20               	movlw	32
  8603  007614  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8604                           
  8605                           ;outputs_MC50.c: 140:             }
  8606  007616  0012               	return	
  8607  007618                     l20894:
  8608                           
  8609                           ; BSR set to: 0
  8610  007618  0E1F               	movlw	31
  8611  00761A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8612  00761C  A4D8               	btfss	status,2,c
  8613  00761E  D005               	goto	l20898
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8617  007620  0E1A               	movlw	26
  8618  007622  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8619                           
  8620                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8621  007624  0E20               	movlw	32
  8622  007626  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8623                           
  8624                           ;outputs_MC50.c: 145:             }
  8625  007628  0012               	return	
  8626  00762A                     l20898:
  8627                           
  8628                           ; BSR set to: 0
  8629  00762A  0E20               	movlw	32
  8630  00762C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8631  00762E  A4D8               	btfss	status,2,c
  8632  007630  D002               	goto	l20902
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8636  007632  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8637                           
  8638                           ;outputs_MC50.c: 149:             }
  8639  007634  0012               	return	
  8640  007636                     l20902:
  8641                           
  8642                           ; BSR set to: 0
  8643  007636  0E20               	movlw	32
  8644  007638  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8645  00763A  A4D8               	btfss	status,2,c
  8646  00763C  D002               	goto	l20906
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8650  00763E  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8651                           
  8652                           ;outputs_MC50.c: 153:             }
  8653  007640  0012               	return	
  8654  007642                     l20906:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8658  007642  0E1A               	movlw	26
  8659  007644  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8660                           
  8661                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8662  007646  0E20               	movlw	32
  8663  007648  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8664  00764A  0012               	return	
  8665  00764C                     l20908:
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8669  00764C  0E1A               	movlw	26
  8670  00764E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8671  007650  A4D8               	btfss	status,2,c
  8672  007652  D009               	goto	l20914
  8673                           
  8674                           ; BSR set to: 0
  8675  007654  0E20               	movlw	32
  8676  007656  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8677  007658  A4D8               	btfss	status,2,c
  8678  00765A  D005               	goto	l20914
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8682  00765C  0E1A               	movlw	26
  8683  00765E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8684                           
  8685                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8686  007660  0E20               	movlw	32
  8687  007662  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8688                           
  8689                           ;outputs_MC50.c: 165:             }
  8690  007664  0012               	return	
  8691  007666                     l20914:
  8692                           
  8693                           ; BSR set to: 0
  8694  007666  0E20               	movlw	32
  8695  007668  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8696  00766A  A4D8               	btfss	status,2,c
  8697  00766C  D009               	goto	l20920
  8698                           
  8699                           ; BSR set to: 0
  8700  00766E  0E1D               	movlw	29
  8701  007670  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8702  007672  A4D8               	btfss	status,2,c
  8703  007674  D005               	goto	l20920
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8707  007676  0E20               	movlw	32
  8708  007678  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8709                           
  8710                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8711  00767A  0E1D               	movlw	29
  8712  00767C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8713                           
  8714                           ;outputs_MC50.c: 170:             }
  8715  00767E  0012               	return	
  8716  007680                     l20920:
  8717                           
  8718                           ; BSR set to: 0
  8719  007680  0E1A               	movlw	26
  8720  007682  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8721  007684  A4D8               	btfss	status,2,c
  8722  007686  D003               	goto	l20924
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8726  007688  0E1F               	movlw	31
  8727  00768A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8728                           
  8729                           ;outputs_MC50.c: 174:             }
  8730  00768C  0012               	return	
  8731  00768E                     l20924:
  8732                           
  8733                           ; BSR set to: 0
  8734  00768E  0E20               	movlw	32
  8735  007690  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8736  007692  A4D8               	btfss	status,2,c
  8737  007694  D002               	goto	l20928
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8741  007696  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8742                           
  8743                           ;outputs_MC50.c: 178:             }
  8744  007698  0012               	return	
  8745  00769A                     l20928:
  8746                           
  8747                           ; BSR set to: 0
  8748  00769A  0E20               	movlw	32
  8749  00769C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8750  00769E  A4D8               	btfss	status,2,c
  8751  0076A0  D002               	goto	l20932
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8755  0076A2  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8756                           
  8757                           ;outputs_MC50.c: 182:             }
  8758  0076A4  0012               	return	
  8759  0076A6                     l20932:
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8763  0076A6  0E1A               	movlw	26
  8764  0076A8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8765                           
  8766                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8767  0076AA  0E20               	movlw	32
  8768  0076AC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8769  0076AE  0012               	return	
  8770  0076B0                     l20936:
  8771                           
  8772                           ; BSR set to: 0
  8773  0076B0  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8774  0076B2  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8775  0076B4  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8776                           
  8777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8778                           ; Switch size 1, requested type "simple"
  8779                           ; Number of cases is 1, Range of values is 0 to 0
  8780                           ; switch strategies available:
  8781                           ; Name         Instructions Cycles
  8782                           ; simple_byte            4     3 (average)
  8783                           ;	Chosen strategy is simple_byte
  8784  0076B6  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8785  0076B8  0A00               	xorlw	0	; case 0
  8786  0076BA  A4D8               	btfss	status,2,c
  8787  0076BC  0012               	return	
  8788                           
  8789                           ; BSR set to: 0
  8790                           ; Switch size 1, requested type "simple"
  8791                           ; Number of cases is 2, Range of values is 0 to 1
  8792                           ; switch strategies available:
  8793                           ; Name         Instructions Cycles
  8794                           ; simple_byte            7     4 (average)
  8795                           ;	Chosen strategy is simple_byte
  8796  0076BE  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8797  0076C0  0A00               	xorlw	0	; case 0
  8798  0076C2  B4D8               	btfsc	status,2,c
  8799  0076C4  D7C3               	goto	l20908
  8800  0076C6  0A01               	xorlw	1	; case 1
  8801  0076C8  A4D8               	btfss	status,2,c
  8802  0076CA  0012               	return	
  8803  0076CC  D78B               	goto	l20882
  8804  0076CE                     __end_of_SetSegmentValueLearn:
  8805                           	callstack 0
  8806                           
  8807 ;; *************** function ___lldiv *****************
  8808 ;; Defined at:
  8809 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  dividend        4   15[COMRAM] unsigned long 
  8812 ;;  divisor         4   19[COMRAM] unsigned long 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  quotient        4   23[COMRAM] unsigned long 
  8815 ;;  counter         1   27[COMRAM] unsigned char 
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  4   15[COMRAM] unsigned long 
  8818 ;; Registers used:
  8819 ;;		wreg, status,2, status,0
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/1
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8826 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8828 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8829 ;;Total ram usage:       13 bytes
  8830 ;; Hardware stack levels used: 1
  8831 ;; Hardware stack levels required when called: 4
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_sm_execute_menuConfiguration
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839                           	psect	text16
  8840  00854C                     __ptext16:
  8841                           	callstack 0
  8842  00854C                     ___lldiv:
  8843                           	callstack 24
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;incstack = 0
  8847  00854C  0E00               	movlw	0
  8848  00854E  6E18               	movwf	___lldiv@quotient^0,c
  8849  008550  0E00               	movlw	0
  8850  008552  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8851  008554  0E00               	movlw	0
  8852  008556  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8853  008558  0E00               	movlw	0
  8854  00855A  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8855  00855C  5014               	movf	___lldiv@divisor^0,w,c
  8856  00855E  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8857  008560  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8858  008562  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8859  008564  B4D8               	btfsc	status,2,c
  8860  008566  D02A               	goto	l3820
  8861  008568  0E01               	movlw	1
  8862  00856A  6E1C               	movwf	___lldiv@counter^0,c
  8863  00856C  D006               	goto	l22472
  8864  00856E                     l22470:
  8865  00856E  90D8               	bcf	status,0,c
  8866  008570  3614               	rlcf	___lldiv@divisor^0,f,c
  8867  008572  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8868  008574  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8869  008576  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8870  008578  2A1C               	incf	___lldiv@counter^0,f,c
  8871  00857A                     l22472:
  8872  00857A  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8873  00857C  D7F8               	goto	l22470
  8874  00857E                     u25950:
  8875  00857E  90D8               	bcf	status,0,c
  8876  008580  3618               	rlcf	___lldiv@quotient^0,f,c
  8877  008582  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8878  008584  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8879  008586  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8880  008588  5014               	movf	___lldiv@divisor^0,w,c
  8881  00858A  5C10               	subwf	___lldiv@dividend^0,w,c
  8882  00858C  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8883  00858E  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8884  008590  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8885  008592  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8886  008594  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8887  008596  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8888  008598  A0D8               	btfss	status,0,c
  8889  00859A  D009               	goto	l22482
  8890  00859C  5014               	movf	___lldiv@divisor^0,w,c
  8891  00859E  5E10               	subwf	___lldiv@dividend^0,f,c
  8892  0085A0  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8893  0085A2  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8894  0085A4  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8895  0085A6  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8896  0085A8  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8897  0085AA  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8898  0085AC  8018               	bsf	___lldiv@quotient^0,0,c
  8899  0085AE                     l22482:
  8900  0085AE  90D8               	bcf	status,0,c
  8901  0085B0  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8902  0085B2  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8903  0085B4  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8904  0085B6  3214               	rrcf	___lldiv@divisor^0,f,c
  8905  0085B8  2E1C               	decfsz	___lldiv@counter^0,f,c
  8906  0085BA  D7E1               	goto	u25950
  8907  0085BC                     l3820:
  8908  0085BC  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8909  0085C0  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8910  0085C4  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8911  0085C8  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8912  0085CC  0012               	return		;funcret
  8913  0085CE                     __end_of___lldiv:
  8914                           	callstack 0
  8915                           
  8916 ;; *************** function _sm_execute_ControlGate *****************
  8917 ;; Defined at:
  8918 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  psm             2   15[BANK0 ] PTR struct .
  8921 ;;		 -> controlGate_stateMachine(11), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 3F/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8935 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8936 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;Total ram usage:        5 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; Hardware stack levels required when called: 15
  8940 ;; This function calls:
  8941 ;;		_GetOpenOrder
  8942 ;;		_SetSegmentValueIntermitent
  8943 ;;		_WaitPreFlash
  8944 ;;		_actionZone_Closed
  8945 ;;		_actionZone_Closing
  8946 ;;		_actionZone_Opened
  8947 ;;		_actionZone_Opening
  8948 ;;		_sm_execute_ControlLearning
  8949 ;;		_sm_send_event
  8950 ;; This function is called by:
  8951 ;;		_main
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text17
  8956  004260                     __ptext17:
  8957                           	callstack 0
  8958  004260                     _sm_execute_ControlGate:
  8959                           	callstack 15
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8963                           
  8964                           ;incstack = 0
  8965  004260  0101               	movlb	1	; () banked
  8966  004262  05F2               	decf	_main_stateMachine& (0+255),w,b
  8967  004264  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8968  004266  A4D8               	btfss	status,2,c
  8969  004268  D006               	goto	l25964
  8970                           
  8971                           ; BSR set to: 1
  8972  00426A  0E06               	movlw	6
  8973  00426C  0102               	movlb	2	; () banked
  8974  00426E  19BB               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8975  004270  11BC               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8976  004272  A4D8               	btfss	status,2,c
  8977  004274  0012               	return	
  8978  004276                     l25964:
  8979                           
  8980                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8981  004276  0101               	movlb	1	; () banked
  8982  004278  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8983  00427A  A4D8               	btfss	status,2,c
  8984  00427C  D0CE               	goto	l26038
  8985                           
  8986                           ; BSR set to: 1
  8987                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  8988  00427E  ECCE  F044         	call	_WaitPreFlash	;wreg free
  8989  004282  D0CB               	goto	l26038
  8990  004284                     l25968:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  8994  004284  EE20 F004          	lfsr	2,4
  8995  004288  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8996  00428A  26D9               	addwf	fsr2l,f,c
  8997  00428C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8998  00428E  22DA               	addwfc	fsr2h,f,c
  8999  004290  0E0A               	movlw	10
  9000  004292  18DE               	xorwf	postinc2,w,c
  9001  004294  10DE               	iorwf	postinc2,w,c
  9002  004296  A4D8               	btfss	status,2,c
  9003  004298  D006               	goto	l25972
  9004  00429A                     u32980:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9008  00429A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9009  00429E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9010  0042A2  0E01               	movlw	1
  9011  0042A4  D0B5               	goto	L55
  9012  0042A6                     l25972:
  9013                           
  9014                           ; BSR set to: 0
  9015  0042A6  EE20 F004          	lfsr	2,4
  9016  0042AA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9017  0042AC  26D9               	addwf	fsr2l,f,c
  9018  0042AE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9019  0042B0  22DA               	addwfc	fsr2h,f,c
  9020  0042B2  0E0B               	movlw	11
  9021  0042B4  18DE               	xorwf	postinc2,w,c
  9022  0042B6  10DE               	iorwf	postinc2,w,c
  9023  0042B8  A4D8               	btfss	status,2,c
  9024  0042BA  D0CF               	goto	l26040
  9025  0042BC  D038               	goto	u33050
  9026  0042BE                     l25976:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9030  0042BE  EE20 F004          	lfsr	2,4
  9031  0042C2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9032  0042C4  26D9               	addwf	fsr2l,f,c
  9033  0042C6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9034  0042C8  22DA               	addwfc	fsr2h,f,c
  9035  0042CA  0E0C               	movlw	12
  9036  0042CC  18DE               	xorwf	postinc2,w,c
  9037  0042CE  10DE               	iorwf	postinc2,w,c
  9038  0042D0  A4D8               	btfss	status,2,c
  9039  0042D2  D072               	goto	l26024
  9040  0042D4                     u33000:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9044  0042D4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9045  0042D8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9046  0042DC  0E02               	movlw	2
  9047  0042DE  D098               	goto	L55
  9048  0042E0                     l25984:
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9052  0042E0  EE20 F004          	lfsr	2,4
  9053  0042E4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9054  0042E6  26D9               	addwf	fsr2l,f,c
  9055  0042E8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9056  0042EA  22DA               	addwfc	fsr2h,f,c
  9057  0042EC  0E0D               	movlw	13
  9058  0042EE  18DE               	xorwf	postinc2,w,c
  9059  0042F0  10DE               	iorwf	postinc2,w,c
  9060  0042F2  B4D8               	btfsc	status,2,c
  9061  0042F4  D01C               	goto	u33050
  9062                           
  9063                           ; BSR set to: 0
  9064                           
  9065                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9069  0042F6  EE20 F004          	lfsr	2,4
  9070  0042FA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9071  0042FC  26D9               	addwf	fsr2l,f,c
  9072  0042FE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9073  004300  22DA               	addwfc	fsr2h,f,c
  9074  004302  0E0E               	movlw	14
  9075  004304  18DE               	xorwf	postinc2,w,c
  9076  004306  10DE               	iorwf	postinc2,w,c
  9077  004308  A4D8               	btfss	status,2,c
  9078  00430A  D02D               	goto	L129
  9079  00430C                     u33030:
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9083  00430C  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9084  004310  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9085  004314  0E03               	movlw	3
  9086  004316  D07C               	goto	L55
  9087  004318                     l25996:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9091  004318  EE20 F004          	lfsr	2,4
  9092  00431C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9093  00431E  26D9               	addwf	fsr2l,f,c
  9094  004320  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9095  004322  22DA               	addwfc	fsr2h,f,c
  9096  004324  0E0D               	movlw	13
  9097  004326  18DE               	xorwf	postinc2,w,c
  9098  004328  10DE               	iorwf	postinc2,w,c
  9099  00432A  A4D8               	btfss	status,2,c
  9100  00432C  D006               	goto	l26000
  9101  00432E                     u33050:
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9105  00432E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9106  004332  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9107  004336  0E04               	movlw	4
  9108  004338  D06B               	goto	L55
  9109  00433A                     l26000:
  9110                           
  9111                           ; BSR set to: 0
  9112  00433A  EE20 F004          	lfsr	2,4
  9113  00433E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9114  004340  26D9               	addwf	fsr2l,f,c
  9115  004342  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9116  004344  22DA               	addwfc	fsr2h,f,c
  9117  004346  0E0F               	movlw	15
  9118  004348  18DE               	xorwf	postinc2,w,c
  9119  00434A  10DE               	iorwf	postinc2,w,c
  9120  00434C  B4D8               	btfsc	status,2,c
  9121  00434E  D7A5               	goto	u32980
  9122                           
  9123                           ; BSR set to: 0
  9124                           
  9125                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9129  004350  EE20 F004          	lfsr	2,4
  9130  004354  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9131  004356  26D9               	addwf	fsr2l,f,c
  9132  004358  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9133  00435A  22DA               	addwfc	fsr2h,f,c
  9134  00435C  0E0C               	movlw	12
  9135  00435E  18DE               	xorwf	postinc2,w,c
  9136  004360  10DE               	iorwf	postinc2,w,c
  9137  004362  B4D8               	btfsc	status,2,c
  9138  004364  D7B7               	goto	u33000
  9139  004366                     L129:
  9140                           
  9141                           ; BSR set to: 0
  9142                           
  9143                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9147  004366  EE20 F004          	lfsr	2,4
  9148  00436A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9149  00436C  26D9               	addwf	fsr2l,f,c
  9150  00436E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9151  004370  22DA               	addwfc	fsr2h,f,c
  9152  004372  0E10               	movlw	16
  9153  004374  D044               	goto	L126
  9154  004376                     l26012:
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9158  004376  EE20 F004          	lfsr	2,4
  9159  00437A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9160  00437C  26D9               	addwf	fsr2l,f,c
  9161  00437E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9162  004380  22DA               	addwfc	fsr2h,f,c
  9163  004382  0E0E               	movlw	14
  9164  004384  18DE               	xorwf	postinc2,w,c
  9165  004386  10DE               	iorwf	postinc2,w,c
  9166  004388  B4D8               	btfsc	status,2,c
  9167  00438A  D7C0               	goto	u33030
  9168                           
  9169                           ; BSR set to: 0
  9170                           
  9171                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9175  00438C  EE20 F004          	lfsr	2,4
  9176  004390  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9177  004392  26D9               	addwf	fsr2l,f,c
  9178  004394  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9179  004396  22DA               	addwfc	fsr2h,f,c
  9180  004398  0E0C               	movlw	12
  9181  00439A  18DE               	xorwf	postinc2,w,c
  9182  00439C  10DE               	iorwf	postinc2,w,c
  9183  00439E  B4D8               	btfsc	status,2,c
  9184  0043A0  D799               	goto	u33000
  9185                           
  9186                           ; BSR set to: 0
  9187                           
  9188                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9192  0043A2  EE20 F004          	lfsr	2,4
  9193  0043A6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9194  0043A8  26D9               	addwf	fsr2l,f,c
  9195  0043AA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9196  0043AC  22DA               	addwfc	fsr2h,f,c
  9197  0043AE  0E10               	movlw	16
  9198  0043B0  18DE               	xorwf	postinc2,w,c
  9199  0043B2  10DE               	iorwf	postinc2,w,c
  9200  0043B4  B4D8               	btfsc	status,2,c
  9201  0043B6  D027               	goto	L127
  9202  0043B8                     l26024:
  9203                           
  9204                           ; BSR set to: 0
  9205  0043B8  EE20 F004          	lfsr	2,4
  9206  0043BC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9207  0043BE  26D9               	addwf	fsr2l,f,c
  9208  0043C0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9209  0043C2  22DA               	addwfc	fsr2h,f,c
  9210  0043C4  0E14               	movlw	20
  9211  0043C6  18DE               	xorwf	postinc2,w,c
  9212  0043C8  10DE               	iorwf	postinc2,w,c
  9213  0043CA  A4D8               	btfss	status,2,c
  9214  0043CC  D046               	goto	l26040
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9218  0043CE  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9219  0043D2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9220  0043D6  0E05               	movlw	5
  9221  0043D8  D01B               	goto	L55
  9222  0043DA                     l26028:
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9226  0043DA  EE20 F004          	lfsr	2,4
  9227  0043DE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9228  0043E0  26D9               	addwf	fsr2l,f,c
  9229  0043E2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9230  0043E4  22DA               	addwfc	fsr2h,f,c
  9231  0043E6  0E13               	movlw	19
  9232  0043E8  18DE               	xorwf	postinc2,w,c
  9233  0043EA  10DE               	iorwf	postinc2,w,c
  9234  0043EC  B4D8               	btfsc	status,2,c
  9235  0043EE  D755               	goto	u32980
  9236                           
  9237                           ; BSR set to: 0
  9238                           
  9239                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9243  0043F0  EE20 F004          	lfsr	2,4
  9244  0043F4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9245  0043F6  26D9               	addwf	fsr2l,f,c
  9246  0043F8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9247  0043FA  22DA               	addwfc	fsr2h,f,c
  9248  0043FC  0E12               	movlw	18
  9249  0043FE                     L126:
  9250  0043FE  18DE               	xorwf	postinc2,w,c
  9251  004400  10DE               	iorwf	postinc2,w,c
  9252  004402  A4D8               	btfss	status,2,c
  9253  004404  D02A               	goto	l26040
  9254  004406                     L127:
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9258  004406  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9259  00440A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9260  00440E  0E00               	movlw	0
  9261  004410                     L55:
  9262  004410  6EDE               	movwf	postinc2,c
  9263  004412  0E00               	movlw	0
  9264  004414  6EDD               	movwf	postdec2,c
  9265  004416  D021               	goto	l26040
  9266  004418                     l2653:
  9267                           
  9268                           ; BSR set to: 0
  9269  004418  D7FF               	goto	l2653
  9270  00441A                     l26038:
  9271                           
  9272                           ; BSR set to: 1
  9273  00441A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9274  00441E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9275  004422  50DF               	movf	indf2,w,c
  9276  004424  0100               	movlb	0	; () banked
  9277  004426  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9278  004428  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9279                           
  9280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9281                           ; Switch size 1, requested type "simple"
  9282                           ; Number of cases is 1, Range of values is 0 to 0
  9283                           ; switch strategies available:
  9284                           ; Name         Instructions Cycles
  9285                           ; simple_byte            4     3 (average)
  9286                           ;	Chosen strategy is simple_byte
  9287  00442A  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9288  00442C  0A00               	xorlw	0	; case 0
  9289  00442E  A4D8               	btfss	status,2,c
  9290  004430  D7F3               	goto	l2653
  9291                           
  9292                           ; BSR set to: 0
  9293                           ; Switch size 1, requested type "simple"
  9294                           ; Number of cases is 6, Range of values is 0 to 5
  9295                           ; switch strategies available:
  9296                           ; Name         Instructions Cycles
  9297                           ; simple_byte           19    10 (average)
  9298                           ;	Chosen strategy is simple_byte
  9299  004432  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9300  004434  0A00               	xorlw	0	; case 0
  9301  004436  B4D8               	btfsc	status,2,c
  9302  004438  D725               	goto	l25968
  9303  00443A  0A01               	xorlw	1	; case 1
  9304  00443C  B4D8               	btfsc	status,2,c
  9305  00443E  D73F               	goto	l25976
  9306  004440  0A03               	xorlw	3	; case 2
  9307  004442  B4D8               	btfsc	status,2,c
  9308  004444  D74D               	goto	l25984
  9309  004446  0A01               	xorlw	1	; case 3
  9310  004448  B4D8               	btfsc	status,2,c
  9311  00444A  D766               	goto	l25996
  9312  00444C  0A07               	xorlw	7	; case 4
  9313  00444E  B4D8               	btfsc	status,2,c
  9314  004450  D792               	goto	l26012
  9315  004452  0A01               	xorlw	1	; case 5
  9316  004454  B4D8               	btfsc	status,2,c
  9317  004456  D7C1               	goto	l26028
  9318  004458  D7DF               	goto	l2653
  9319  00445A                     l26040:
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9323  00445A  0EE7               	movlw	low _controlGate_stateMachine
  9324  00445C  6E12               	movwf	sm_send_event@psm^0,c
  9325  00445E  0E01               	movlw	high _controlGate_stateMachine
  9326  004460  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9327  004462  0E00               	movlw	0
  9328  004464  6E15               	movwf	(sm_send_event@event+1)^0,c
  9329  004466  0E00               	movlw	0
  9330  004468  6E14               	movwf	sm_send_event@event^0,c
  9331  00446A  ECE1  F046         	call	_sm_send_event	;wreg free
  9332                           
  9333                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9334  00446E  D07D               	goto	l26104
  9335  004470                     l26042:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9339  004470  0E00               	movlw	0
  9340  004472  0101               	movlb	1	; () banked
  9341  004474  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9342  004476  0E64               	movlw	100
  9343  004478  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9344                           
  9345                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9346  00447A  0E01               	movlw	1
  9347  00447C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9348                           
  9349                           ; BSR set to: 1
  9350                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9351  00447E  0E02               	movlw	2
  9352  004480  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9353  004482  B4D8               	btfsc	status,2,c
  9354  004484  D003               	goto	u33160
  9355                           
  9356                           ; BSR set to: 1
  9357  004486  0E03               	movlw	3
  9358  004488  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9359  00448A  D027               	goto	l26064
  9360  00448C                     u33160:
  9361                           
  9362                           ; BSR set to: 1
  9363                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9364  00448C  ECB2  F02E         	call	_GetOpenOrder	;wreg free
  9365  004490  0100               	movlb	0	; () banked
  9366  004492  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9370  004494  0E14               	movlw	20
  9371  004496  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9372  004498  0E00               	movlw	0
  9373  00449A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9374  00449C  0E14               	movlw	20
  9375  00449E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9376  0044A0  0E0E               	movlw	14
  9377  0044A2  EC9F  F04B         	call	_SetSegmentValueIntermitent
  9378                           
  9379                           ; BSR set to: 1
  9380                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9381  0044A6  0E00               	movlw	0
  9382  0044A8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9383  0044AA  0E0A               	movlw	10
  9384  0044AC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9385                           
  9386                           ; BSR set to: 1
  9387                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9388  0044AE  0100               	movlb	0	; () banked
  9389  0044B0  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9390  0044B2  A4D8               	btfss	status,2,c
  9391  0044B4  D00A               	goto	u33200
  9392                           
  9393                           ; BSR set to: 0
  9394  0044B6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9395  0044B8  B4D8               	btfsc	status,2,c
  9396  0044BA  D007               	goto	u33200
  9397                           
  9398                           ; BSR set to: 0
  9399  0044BC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9400  0044BE  B4D8               	btfsc	status,2,c
  9401  0044C0  D004               	goto	u33200
  9402                           
  9403                           ; BSR set to: 0
  9404  0044C2  0E17               	movlw	23
  9405  0044C4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9406  0044C6  A4D8               	btfss	status,2,c
  9407  0044C8  0012               	return	
  9408  0044CA                     u33200:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9412  0044CA  0E00               	movlw	0
  9413  0044CC  0101               	movlb	1	; () banked
  9414  0044CE  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9415                           
  9416                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9417  0044D0  0E00               	movlw	0
  9418  0044D2  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9419                           
  9420                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9421  0044D4  0E01               	movlw	1
  9422  0044D6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9423  0044D8  0012               	return	
  9424  0044DA                     l26064:
  9425                           
  9426                           ; BSR set to: 1
  9427                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9428  0044DA  0E01               	movlw	1
  9429  0044DC  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9430                           
  9431                           ; BSR set to: 1
  9432                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9433  0044DE  0E01               	movlw	1
  9434  0044E0  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9435  0044E2  0E00               	movlw	0
  9436  0044E4  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9437  0044E6  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9438  0044E8  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9439                           
  9440                           ; BSR set to: 1
  9441                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9442  0044EA  0E00               	movlw	0
  9443  0044EC  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9444                           
  9445                           ; BSR set to: 1
  9446                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9447  0044EE  0E00               	movlw	0
  9448  0044F0  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9449  0044F2  0E00               	movlw	0
  9450  0044F4  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9451  0044F6  0E00               	movlw	0
  9452  0044F8  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9453  0044FA  0E00               	movlw	0
  9454  0044FC  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9458  0044FE  0E00               	movlw	0
  9459  004500  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9460                           
  9461                           ; BSR set to: 1
  9462                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9463  004502  0E00               	movlw	0
  9464  004504  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9465                           
  9466                           ; BSR set to: 1
  9467                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9468  004506  0E00               	movlw	0
  9469  004508  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9470                           
  9471                           ; BSR set to: 1
  9472                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9473  00450A  0E00               	movlw	0
  9474  00450C  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9475  00450E  0E28               	movlw	40
  9476  004510  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9477                           
  9478                           ; BSR set to: 1
  9479                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9480  004512  0E0C               	movlw	12
  9481  004514  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9482  004516  0E00               	movlw	0
  9483  004518  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9484  00451A  0E04               	movlw	4
  9485  00451C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9486  00451E  0E0F               	movlw	15
  9487  004520  EC9F  F04B         	call	_SetSegmentValueIntermitent
  9488                           
  9489                           ; BSR set to: 1
  9490                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9491  004524  0EE7               	movlw	low _controlGate_stateMachine
  9492  004526  6E12               	movwf	sm_send_event@psm^0,c
  9493  004528  0E01               	movlw	high _controlGate_stateMachine
  9494  00452A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9495  00452C  0E00               	movlw	0
  9496  00452E  6E15               	movwf	(sm_send_event@event+1)^0,c
  9497  004530  0E0A               	movlw	10
  9498  004532  6E14               	movwf	sm_send_event@event^0,c
  9499  004534  ECE1  F046         	call	_sm_send_event	;wreg free
  9500  004538  0012               	return	
  9501  00453A                     l26084:
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9505  00453A  ECA4  F03E         	call	_actionZone_Closed	;wreg free
  9506                           
  9507                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9508  00453E  0012               	return	
  9509  004540                     l26086:
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9513  004540  EC63  F028         	call	_actionZone_Opening	;wreg free
  9514  004544                     l26088:
  9515                           
  9516                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9517  004544  0E00               	movlw	0
  9518  004546  0101               	movlb	1	; () banked
  9519  004548  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9520  00454A  0E64               	movlw	100
  9521  00454C  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9522                           
  9523                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9524  00454E  0012               	return	
  9525  004550                     l26090:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9529  004550  ECD2  F02C         	call	_actionZone_Opened	;wreg free
  9530  004554  D7F7               	goto	l26088
  9531  004556                     l26094:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9535  004556  ECE2  F025         	call	_actionZone_Closing	;wreg free
  9536  00455A  D7F4               	goto	l26088
  9537  00455C                     l26098:
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9541  00455C  0EB0               	movlw	low _controlLearning_stateMachine
  9542  00455E  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9543  004560  0E02               	movlw	high _controlLearning_stateMachine
  9544  004562  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9545  004564  ECE5  F010         	call	_sm_execute_ControlLearning	;wreg free
  9546  004568  D7ED               	goto	l26088
  9547  00456A                     l26104:
  9548  00456A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9549  00456E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9550  004572  50DF               	movf	indf2,w,c
  9551  004574  0100               	movlb	0	; () banked
  9552  004576  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9553  004578  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9554                           
  9555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9556                           ; Switch size 1, requested type "simple"
  9557                           ; Number of cases is 1, Range of values is 0 to 0
  9558                           ; switch strategies available:
  9559                           ; Name         Instructions Cycles
  9560                           ; simple_byte            4     3 (average)
  9561                           ;	Chosen strategy is simple_byte
  9562  00457A  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9563  00457C  0A00               	xorlw	0	; case 0
  9564  00457E  A4D8               	btfss	status,2,c
  9565  004580  0012               	return	
  9566                           
  9567                           ; BSR set to: 0
  9568                           ; Switch size 1, requested type "simple"
  9569                           ; Number of cases is 6, Range of values is 0 to 5
  9570                           ; switch strategies available:
  9571                           ; Name         Instructions Cycles
  9572                           ; simple_byte           19    10 (average)
  9573                           ;	Chosen strategy is simple_byte
  9574  004582  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9575  004584  0A00               	xorlw	0	; case 0
  9576  004586  B4D8               	btfsc	status,2,c
  9577  004588  D773               	goto	l26042
  9578  00458A  0A01               	xorlw	1	; case 1
  9579  00458C  B4D8               	btfsc	status,2,c
  9580  00458E  D7D5               	goto	l26084
  9581  004590  0A03               	xorlw	3	; case 2
  9582  004592  B4D8               	btfsc	status,2,c
  9583  004594  D7D5               	goto	l26086
  9584  004596  0A01               	xorlw	1	; case 3
  9585  004598  B4D8               	btfsc	status,2,c
  9586  00459A  D7DD               	goto	l26094
  9587  00459C  0A07               	xorlw	7	; case 4
  9588  00459E  B4D8               	btfsc	status,2,c
  9589  0045A0  D7D7               	goto	l26090
  9590  0045A2  0A01               	xorlw	1	; case 5
  9591  0045A4  A4D8               	btfss	status,2,c
  9592  0045A6  0012               	return	
  9593  0045A8  D7D9               	goto	l26098
  9594  0045AA                     __end_of_sm_execute_ControlGate:
  9595                           	callstack 0
  9596                           
  9597 ;; *************** function _sm_execute_ControlLearning *****************
  9598 ;; Defined at:
  9599 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  psm             2    4[BANK0 ] PTR struct .
  9602 ;;		 -> controlLearning_stateMachine(11), 
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 3F/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9616 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9617 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9618 ;;Total ram usage:        5 bytes
  9619 ;; Hardware stack levels used: 1
  9620 ;; Hardware stack levels required when called: 14
  9621 ;; This function calls:
  9622 ;;		_GetOpenOrder
  9623 ;;		_SaveNVM_VarSystem
  9624 ;;		_calculateMean
  9625 ;;		_clearLearningValue
  9626 ;;		_generateErrorLearnig
  9627 ;;		_sm_send_event
  9628 ;; This function is called by:
  9629 ;;		_sm_execute_ControlGate
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text18
  9634  0021CA                     __ptext18:
  9635                           	callstack 0
  9636  0021CA                     _sm_execute_ControlLearning:
  9637                           	callstack 15
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9641                           
  9642                           ;incstack = 0
  9643  0021CA  ECB2  F02E         	call	_GetOpenOrder	;wreg free
  9644  0021CE  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9645                           
  9646                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9647  0021D0  D0B8               	goto	l23624
  9648  0021D2                     l23550:
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9652  0021D2  EE20 F004          	lfsr	2,4
  9653  0021D6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9654  0021D8  26D9               	addwf	fsr2l,f,c
  9655  0021DA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9656  0021DC  22DA               	addwfc	fsr2h,f,c
  9657  0021DE  0E0A               	movlw	10
  9658  0021E0  18DE               	xorwf	postinc2,w,c
  9659  0021E2  10DE               	iorwf	postinc2,w,c
  9660  0021E4  A4D8               	btfss	status,2,c
  9661  0021E6  D00D               	goto	l23558
  9662                           
  9663                           ; BSR set to: 0
  9664  0021E8  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9665  0021EA  B4D8               	btfsc	status,2,c
  9666  0021EC  D00A               	goto	l23558
  9667                           
  9668                           ; BSR set to: 0
  9669  0021EE  0101               	movlb	1	; () banked
  9670  0021F0  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9671  0021F2  A4D8               	btfss	status,2,c
  9672  0021F4  D006               	goto	l23558
  9673  0021F6                     u28000:
  9674                           
  9675                           ; BSR set to: 1
  9676                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9677  0021F6  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9678  0021FA  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9679  0021FE  0E02               	movlw	2
  9680  002200  D08A               	goto	L66
  9681  002202                     l23558:
  9682  002202  0100               	movlb	0	; () banked
  9683  002204  EE20 F004          	lfsr	2,4
  9684  002208  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9685  00220A  26D9               	addwf	fsr2l,f,c
  9686  00220C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9687  00220E  22DA               	addwfc	fsr2h,f,c
  9688  002210  0E0A               	movlw	10
  9689  002212  18DE               	xorwf	postinc2,w,c
  9690  002214  10DE               	iorwf	postinc2,w,c
  9691  002216  A4D8               	btfss	status,2,c
  9692  002218  D00D               	goto	l23566
  9693                           
  9694                           ; BSR set to: 0
  9695  00221A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9696  00221C  B4D8               	btfsc	status,2,c
  9697  00221E  D004               	goto	u28030
  9698                           
  9699                           ; BSR set to: 0
  9700  002220  0101               	movlb	1	; () banked
  9701  002222  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9702  002224  A4D8               	btfss	status,2,c
  9703  002226  D006               	goto	l23566
  9704  002228                     u28030:
  9705                           
  9706                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9707  002228  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9708  00222C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9709  002230  0E04               	movlw	4
  9710  002232  D071               	goto	L66
  9711  002234                     l23566:
  9712  002234  0100               	movlb	0	; () banked
  9713  002236  EE20 F004          	lfsr	2,4
  9714  00223A  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9715  00223C  26D9               	addwf	fsr2l,f,c
  9716  00223E  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9717  002240  22DA               	addwfc	fsr2h,f,c
  9718  002242  0E0B               	movlw	11
  9719  002244  18DE               	xorwf	postinc2,w,c
  9720  002246  10DE               	iorwf	postinc2,w,c
  9721  002248  A4D8               	btfss	status,2,c
  9722  00224A  D09B               	goto	l23626
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9726  00224C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9727  002250  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9728  002254  0E01               	movlw	1
  9729  002256  D05F               	goto	L66
  9730  002258                     l23570:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9734  002258  EE20 F004          	lfsr	2,4
  9735  00225C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9736  00225E  26D9               	addwf	fsr2l,f,c
  9737  002260  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9738  002262  22DA               	addwfc	fsr2h,f,c
  9739  002264  0E0A               	movlw	10
  9740  002266  18DE               	xorwf	postinc2,w,c
  9741  002268  10DE               	iorwf	postinc2,w,c
  9742  00226A  A4D8               	btfss	status,2,c
  9743  00226C  D007               	goto	l23578
  9744                           
  9745                           ; BSR set to: 0
  9746  00226E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9747  002270  B4D8               	btfsc	status,2,c
  9748  002272  D004               	goto	l23578
  9749                           
  9750                           ; BSR set to: 0
  9751  002274  0101               	movlb	1	; () banked
  9752  002276  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9753  002278  B4D8               	btfsc	status,2,c
  9754  00227A  D7BD               	goto	u28000
  9755  00227C                     l23578:
  9756  00227C  0100               	movlb	0	; () banked
  9757  00227E  EE20 F004          	lfsr	2,4
  9758  002282  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9759  002284  26D9               	addwf	fsr2l,f,c
  9760  002286  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9761  002288  22DA               	addwfc	fsr2h,f,c
  9762  00228A  0E0A               	movlw	10
  9763  00228C  18DE               	xorwf	postinc2,w,c
  9764  00228E  10DE               	iorwf	postinc2,w,c
  9765  002290  A4D8               	btfss	status,2,c
  9766  002292  D007               	goto	l23586
  9767                           
  9768                           ; BSR set to: 0
  9769  002294  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9770  002296  B4D8               	btfsc	status,2,c
  9771  002298  D7C7               	goto	u28030
  9772                           
  9773                           ; BSR set to: 0
  9774  00229A  0101               	movlb	1	; () banked
  9775  00229C  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9776  00229E  B4D8               	btfsc	status,2,c
  9777  0022A0  D7C3               	goto	u28030
  9778  0022A2                     l23586:
  9779  0022A2  0100               	movlb	0	; () banked
  9780  0022A4                     L68:
  9781  0022A4  EE20 F004          	lfsr	2,4
  9782  0022A8  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9783  0022AA  26D9               	addwf	fsr2l,f,c
  9784  0022AC  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9785  0022AE  22DA               	addwfc	fsr2h,f,c
  9786  0022B0  0E10               	movlw	16
  9787  0022B2  18DE               	xorwf	postinc2,w,c
  9788  0022B4  10DE               	iorwf	postinc2,w,c
  9789  0022B6  A4D8               	btfss	status,2,c
  9790  0022B8  D064               	goto	l23626
  9791  0022BA  D03C               	goto	L128
  9792  0022BC                     l23590:
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9796  0022BC  EE20 F004          	lfsr	2,4
  9797  0022C0  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9798  0022C2  26D9               	addwf	fsr2l,f,c
  9799  0022C4  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9800  0022C6  22DA               	addwfc	fsr2h,f,c
  9801  0022C8  0E0B               	movlw	11
  9802  0022CA  18DE               	xorwf	postinc2,w,c
  9803  0022CC  10DE               	iorwf	postinc2,w,c
  9804  0022CE  A4D8               	btfss	status,2,c
  9805  0022D0  D7E9               	goto	L68
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9809  0022D2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9810  0022D6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9811  0022DA  0E03               	movlw	3
  9812  0022DC  D01C               	goto	L66
  9813  0022DE                     l23598:
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9817  0022DE  EE20 F004          	lfsr	2,4
  9818  0022E2  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9819  0022E4  26D9               	addwf	fsr2l,f,c
  9820  0022E6  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9821  0022E8  22DA               	addwfc	fsr2h,f,c
  9822  0022EA  0E0A               	movlw	10
  9823  0022EC  18DE               	xorwf	postinc2,w,c
  9824  0022EE  10DE               	iorwf	postinc2,w,c
  9825  0022F0  A4D8               	btfss	status,2,c
  9826  0022F2  D7D8               	goto	L68
  9827  0022F4  D799               	goto	u28030
  9828  0022F6                     l23606:
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9832  0022F6  EE20 F004          	lfsr	2,4
  9833  0022FA  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9834  0022FC  26D9               	addwf	fsr2l,f,c
  9835  0022FE  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9836  002300  22DA               	addwfc	fsr2h,f,c
  9837  002302  0E0B               	movlw	11
  9838  002304  18DE               	xorwf	postinc2,w,c
  9839  002306  10DE               	iorwf	postinc2,w,c
  9840  002308  A4D8               	btfss	status,2,c
  9841  00230A  D7CC               	goto	L68
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9845  00230C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9846  002310  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9847  002314  0E05               	movlw	5
  9848  002316                     L66:
  9849  002316  6EDE               	movwf	postinc2,c
  9850  002318  0E00               	movlw	0
  9851  00231A  6EDD               	movwf	postdec2,c
  9852  00231C  D032               	goto	l23626
  9853  00231E                     l23614:
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9857  00231E  EE20 F004          	lfsr	2,4
  9858  002322  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9859  002324  26D9               	addwf	fsr2l,f,c
  9860  002326  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9861  002328  22DA               	addwfc	fsr2h,f,c
  9862  00232A  0E0A               	movlw	10
  9863  00232C  18DE               	xorwf	postinc2,w,c
  9864  00232E  10DE               	iorwf	postinc2,w,c
  9865  002330  A4D8               	btfss	status,2,c
  9866  002332  D7B8               	goto	L68
  9867  002334                     L128:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9871  002334  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9872  002338  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9873  00233C  0E00               	movlw	0
  9874  00233E  D7EB               	goto	L66
  9875  002340                     l2912:
  9876                           
  9877                           ; BSR set to: 0
  9878  002340  D7FF               	goto	l2912
  9879  002342                     l23624:
  9880  002342  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9881  002346  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9882  00234A  50DF               	movf	indf2,w,c
  9883  00234C  0100               	movlb	0	; () banked
  9884  00234E  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9885  002350  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9886                           
  9887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9888                           ; Switch size 1, requested type "simple"
  9889                           ; Number of cases is 1, Range of values is 0 to 0
  9890                           ; switch strategies available:
  9891                           ; Name         Instructions Cycles
  9892                           ; simple_byte            4     3 (average)
  9893                           ;	Chosen strategy is simple_byte
  9894  002352  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9895  002354  0A00               	xorlw	0	; case 0
  9896  002356  A4D8               	btfss	status,2,c
  9897  002358  D7F3               	goto	l2912
  9898                           
  9899                           ; BSR set to: 0
  9900                           ; Switch size 1, requested type "simple"
  9901                           ; Number of cases is 6, Range of values is 0 to 5
  9902                           ; switch strategies available:
  9903                           ; Name         Instructions Cycles
  9904                           ; simple_byte           19    10 (average)
  9905                           ;	Chosen strategy is simple_byte
  9906  00235A  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9907  00235C  0A00               	xorlw	0	; case 0
  9908  00235E  B4D8               	btfsc	status,2,c
  9909  002360  D738               	goto	l23550
  9910  002362  0A01               	xorlw	1	; case 1
  9911  002364  B4D8               	btfsc	status,2,c
  9912  002366  D778               	goto	l23570
  9913  002368  0A03               	xorlw	3	; case 2
  9914  00236A  B4D8               	btfsc	status,2,c
  9915  00236C  D7A7               	goto	l23590
  9916  00236E  0A01               	xorlw	1	; case 3
  9917  002370  B4D8               	btfsc	status,2,c
  9918  002372  D7B5               	goto	l23598
  9919  002374  0A07               	xorlw	7	; case 4
  9920  002376  B4D8               	btfsc	status,2,c
  9921  002378  D7BE               	goto	l23606
  9922  00237A  0A01               	xorlw	1	; case 5
  9923  00237C  B4D8               	btfsc	status,2,c
  9924  00237E  D7CF               	goto	l23614
  9925  002380  D7DF               	goto	l2912
  9926  002382                     l23626:
  9927                           
  9928                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9929  002382  0EB0               	movlw	low _controlLearning_stateMachine
  9930  002384  6E12               	movwf	sm_send_event@psm^0,c
  9931  002386  0E02               	movlw	high _controlLearning_stateMachine
  9932  002388  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9933  00238A  0E00               	movlw	0
  9934  00238C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9935  00238E  0E00               	movlw	0
  9936  002390  6E14               	movwf	sm_send_event@event^0,c
  9937  002392  ECE1  F046         	call	_sm_send_event	;wreg free
  9938                           
  9939                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9940  002396  D280               	goto	l23882
  9941  002398                     l23628:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9945  002398  0101               	movlb	1	; () banked
  9946  00239A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9947  00239C  A4D8               	btfss	status,2,c
  9948  00239E  D03A               	goto	l23646
  9949                           
  9950                           ; BSR set to: 1
  9951                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9952  0023A0  0E01               	movlw	1
  9953  0023A2  0100               	movlb	0	; () banked
  9954  0023A4  6F81               	movwf	_control_limit_switch& (0+255),b
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9958  0023A6  0EB0               	movlw	low _controlLearning_stateMachine
  9959  0023A8  6E12               	movwf	sm_send_event@psm^0,c
  9960  0023AA  0E02               	movlw	high _controlLearning_stateMachine
  9961  0023AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9962  0023AE  0E00               	movlw	0
  9963  0023B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  9964  0023B2  0E0A               	movlw	10
  9965  0023B4  6E14               	movwf	sm_send_event@event^0,c
  9966  0023B6  ECE1  F046         	call	_sm_send_event	;wreg free
  9967                           
  9968                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9969  0023BA  0E01               	movlw	1
  9970  0023BC  0101               	movlb	1	; () banked
  9971  0023BE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9972                           
  9973                           ; BSR set to: 1
  9974                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9975  0023C0  EC66  F043         	call	_clearLearningValue	;wreg free
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9979  0023C4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9980  0023C6  B4D8               	btfsc	status,2,c
  9981  0023C8  D016               	goto	l23644
  9982                           
  9983                           ; BSR set to: 0
  9984  0023CA  0101               	movlb	1	; () banked
  9985  0023CC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9986  0023CE  A4D8               	btfss	status,2,c
  9987  0023D0  D012               	goto	l23644
  9988  0023D2                     u28220:
  9989                           
  9990                           ; BSR set to: 1
  9991                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
  9992  0023D2  0E01               	movlw	1
  9993  0023D4  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
  9994  0023D6  0E2C               	movlw	44
  9995  0023D8  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
  9996                           
  9997                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
  9998  0023DA  0E00               	movlw	0
  9999  0023DC  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10000  0023DE  0E78               	movlw	120
 10001  0023E0  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10002                           
 10003                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10004  0023E2  0E00               	movlw	0
 10005  0023E4  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10006  0023E6  0E14               	movlw	20
 10007  0023E8  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10008                           
 10009                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10010  0023EA  0E01               	movlw	1
 10011  0023EC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10012                           
 10013                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10014  0023EE  0E00               	movlw	0
 10015  0023F0  0100               	movlb	0	; () banked
 10016  0023F2  6F81               	movwf	_control_limit_switch& (0+255),b
 10017                           
 10018                           ;sm_ControlLearning_MC50.c: 148:                  }
 10019  0023F4  0012               	return	
 10020  0023F6                     l23644:
 10021                           
 10022                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10023  0023F6  0E00               	movlw	0
 10024  0023F8  0101               	movlb	1	; () banked
 10025  0023FA  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10026                           
 10027                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10028  0023FC  0E00               	movlw	0
 10029  0023FE  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10030  002400  0E50               	movlw	80
 10031  002402  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10032                           
 10033                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10034  002404  0E00               	movlw	0
 10035  002406  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10036  002408  0E14               	movlw	20
 10037  00240A  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10038                           
 10039                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10040  00240C  0E00               	movlw	0
 10041  00240E  0100               	movlb	0	; () banked
 10042  002410  6F81               	movwf	_control_limit_switch& (0+255),b
 10043  002412  0012               	return	
 10044  002414                     l23646:
 10045                           
 10046                           ; BSR set to: 1
 10047                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10048  002414  0EB0               	movlw	low _controlLearning_stateMachine
 10049  002416  6E12               	movwf	sm_send_event@psm^0,c
 10050  002418  0E02               	movlw	high _controlLearning_stateMachine
 10051  00241A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10052  00241C  0E00               	movlw	0
 10053  00241E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10054  002420  0E0B               	movlw	11
 10055  002422  6E14               	movwf	sm_send_event@event^0,c
 10056  002424  ECE1  F046         	call	_sm_send_event	;wreg free
 10057                           
 10058                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10059  002428  0E03               	movlw	3
 10060  00242A  0101               	movlb	1	; () banked
 10061  00242C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10065  00242E  0E01               	movlw	1
 10066  002430  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10070                           
 10071                           ;sm_ControlLearning_MC50.c: 163:             }
 10072  002432  0012               	return	
 10073  002434                     l23652:
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10077  002434  0101               	movlb	1	; () banked
 10078  002436  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10079  002438  B4D8               	btfsc	status,2,c
 10080  00243A  D00E               	goto	u28270
 10081                           
 10082                           ; BSR set to: 1
 10083  00243C  0100               	movlb	0	; () banked
 10084  00243E  0581               	decf	_control_limit_switch& (0+255),w,b
 10085  002440  B4D8               	btfsc	status,2,c
 10086  002442  D00A               	goto	u28270
 10087                           
 10088                           ; BSR set to: 0
 10089  002444  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10090  002446  B4D8               	btfsc	status,2,c
 10091  002448  D003               	goto	u28260
 10092                           
 10093                           ; BSR set to: 0
 10094  00244A  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10095  00244C  A4D8               	btfss	status,2,c
 10096  00244E  D028               	goto	l23680
 10097  002450                     u28260:
 10098                           
 10099                           ; BSR set to: 0
 10100  002450  0101               	movlb	1	; () banked
 10101  002452  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10102  002454  A4D8               	btfss	status,2,c
 10103  002456  D024               	goto	l23680
 10104  002458                     u28270:
 10105                           
 10106                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10107  002458  0E01               	movlw	1
 10108  00245A  0100               	movlb	0	; () banked
 10109  00245C  6F81               	movwf	_control_limit_switch& (0+255),b
 10110                           
 10111                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10112  00245E  0E00               	movlw	0
 10113  002460  0101               	movlb	1	; () banked
 10114  002462  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10115                           
 10116                           ; BSR set to: 1
 10117                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10118  002464  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10119  002466  D005               	goto	u28280
 10120  002468  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10121  00246A  E102               	bnz	u28281
 10122  00246C  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10123  00246E  B0D8               	btfsc	status,0,c
 10124  002470                     u28281:
 10125  002470  0012               	return	
 10126  002472                     u28280:
 10127                           
 10128                           ; BSR set to: 1
 10129                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10130  002472  0EB0               	movlw	low _controlLearning_stateMachine
 10131  002474  6E12               	movwf	sm_send_event@psm^0,c
 10132  002476  0E02               	movlw	high _controlLearning_stateMachine
 10133  002478  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10134  00247A  0E00               	movlw	0
 10135  00247C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10136  00247E  0E0A               	movlw	10
 10137  002480  6E14               	movwf	sm_send_event@event^0,c
 10138  002482  ECE1  F046         	call	_sm_send_event	;wreg free
 10139                           
 10140                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10141  002486  0E01               	movlw	1
 10142  002488  0101               	movlb	1	; () banked
 10143  00248A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10144                           
 10145                           ; BSR set to: 1
 10146                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10147  00248C  EC66  F043         	call	_clearLearningValue	;wreg free
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10151  002490  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10152  002492  B4D8               	btfsc	status,2,c
 10153  002494  D7B0               	goto	l23644
 10154                           
 10155                           ; BSR set to: 0
 10156  002496  0101               	movlb	1	; () banked
 10157  002498  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10158  00249A  B4D8               	btfsc	status,2,c
 10159  00249C  D79A               	goto	u28220
 10160  00249E  D7AB               	goto	l23644
 10161  0024A0                     l23680:
 10162  0024A0  0101               	movlb	1	; () banked
 10163  0024A2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10164  0024A4  A4D8               	btfss	status,2,c
 10165  0024A6  D003               	goto	l23684
 10166  0024A8                     u28310:
 10167                           
 10168                           ; BSR set to: 1
 10169                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10170  0024A8  EC1A  F046         	call	_generateErrorLearnig	;wreg free
 10171                           
 10172                           ;sm_ControlLearning_MC50.c: 198:             }
 10173  0024AC  0012               	return	
 10174  0024AE                     l23684:
 10175                           
 10176                           ; BSR set to: 1
 10177                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10178  0024AE  0E00               	movlw	0
 10179  0024B0  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10180  0024B2  0E28               	movlw	40
 10181  0024B4  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10182  0024B6  0012               	return	
 10183  0024B8                     l23686:
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10187  0024B8  0101               	movlb	1	; () banked
 10188  0024BA  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10189  0024BC  A4D8               	btfss	status,2,c
 10190                           
 10191                           ; BSR set to: 1
 10192  0024BE  BFD6               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10193  0024C0  D009               	goto	u28340
 10194  0024C2  51D6               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10195  0024C4  E103               	bnz	u28330
 10196  0024C6  05D5               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10197  0024C8  A0D8               	btfss	status,0,c
 10198  0024CA  D004               	goto	u28340
 10199  0024CC                     u28330:
 10200                           
 10201                           ; BSR set to: 1
 10202  0024CC  0100               	movlb	0	; () banked
 10203  0024CE  0581               	decf	_control_limit_switch& (0+255),w,b
 10204  0024D0  A4D8               	btfss	status,2,c
 10205  0024D2  D02A               	goto	l23708
 10206  0024D4                     u28340:
 10207                           
 10208                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10209  0024D4  0E01               	movlw	1
 10210  0024D6  0100               	movlb	0	; () banked
 10211  0024D8  6F81               	movwf	_control_limit_switch& (0+255),b
 10212                           
 10213                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10214  0024DA  0E00               	movlw	0
 10215  0024DC  0101               	movlb	1	; () banked
 10216  0024DE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10217                           
 10218                           ; BSR set to: 1
 10219                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10220  0024E0  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10221  0024E2  D005               	goto	u28350
 10222  0024E4  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10223  0024E6  E102               	bnz	u28351
 10224  0024E8  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10225  0024EA  B0D8               	btfsc	status,0,c
 10226  0024EC                     u28351:
 10227  0024EC  0012               	return	
 10228  0024EE                     u28350:
 10229                           
 10230                           ; BSR set to: 1
 10231                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10232  0024EE  0EB0               	movlw	low _controlLearning_stateMachine
 10233  0024F0  6E12               	movwf	sm_send_event@psm^0,c
 10234  0024F2  0E02               	movlw	high _controlLearning_stateMachine
 10235  0024F4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10236  0024F6  0E00               	movlw	0
 10237  0024F8  6E15               	movwf	(sm_send_event@event+1)^0,c
 10238  0024FA  0E0B               	movlw	11
 10239  0024FC  6E14               	movwf	sm_send_event@event^0,c
 10240  0024FE  ECE1  F046         	call	_sm_send_event	;wreg free
 10241                           
 10242                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10243  002502  0E03               	movlw	3
 10244  002504  0101               	movlb	1	; () banked
 10245  002506  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10249  002508  0E00               	movlw	0
 10250  00250A  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10251  00250C  0E64               	movlw	100
 10252  00250E  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10256  002510  0E00               	movlw	0
 10257  002512  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10258  002514  0E64               	movlw	100
 10259  002516                     L67:
 10260  002516  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10264  002518  0E00               	movlw	0
 10265  00251A  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10266  00251C  0E14               	movlw	20
 10267  00251E  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10268                           
 10269                           ; BSR set to: 1
 10270                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10271  002520  0E00               	movlw	0
 10272  002522  0100               	movlb	0	; () banked
 10273  002524  6F81               	movwf	_control_limit_switch& (0+255),b
 10274  002526  0012               	return	
 10275  002528                     l23708:
 10276                           
 10277                           ; BSR set to: 0
 10278  002528  0101               	movlb	1	; () banked
 10279  00252A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10280  00252C  B4D8               	btfsc	status,2,c
 10281  00252E  D7BC               	goto	u28310
 10282                           
 10283                           ; BSR set to: 1
 10284                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10285  002530  0E00               	movlw	0
 10286  002532  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10287  002534  0E28               	movlw	40
 10288  002536  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10289                           
 10290                           ; BSR set to: 1
 10291                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10292  002538  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10293  00253A  D005               	goto	u28370
 10294  00253C  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10295  00253E  E102               	bnz	u28371
 10296  002540  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10297  002542  B0D8               	btfsc	status,0,c
 10298  002544                     u28371:
 10299  002544  0012               	return	
 10300  002546                     u28370:
 10301                           
 10302                           ; BSR set to: 1
 10303                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10304  002546  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10305  002548  0012               	return	
 10306  00254A  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10307  00254C  E103               	bnz	u28380
 10308  00254E  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10309  002550  A0D8               	btfss	status,0,c
 10310  002552  0012               	return	
 10311  002554                     u28380:
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10315  002554  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10316  002558  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10317  00255C  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10318  00255E  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10319  002560  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10320  002564  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10321  002568  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10322  00256C  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10323  002570  EC81  F046         	call	_calculateMean	;wreg free
 10324  002574  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10325  002578  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10326  00257C  0012               	return	
 10327  00257E                     l23720:
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10331  00257E  0101               	movlb	1	; () banked
 10332  002580  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10333  002582  B4D8               	btfsc	status,2,c
 10334  002584  D004               	goto	u28400
 10335                           
 10336                           ; BSR set to: 1
 10337  002586  0100               	movlb	0	; () banked
 10338  002588  0581               	decf	_control_limit_switch& (0+255),w,b
 10339  00258A  A4D8               	btfss	status,2,c
 10340  00258C  D020               	goto	l23740
 10341  00258E                     u28400:
 10342                           
 10343                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10344  00258E  0E01               	movlw	1
 10345  002590  0100               	movlb	0	; () banked
 10346  002592  6F81               	movwf	_control_limit_switch& (0+255),b
 10347                           
 10348                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10349  002594  0E00               	movlw	0
 10350  002596  0101               	movlb	1	; () banked
 10351  002598  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10352                           
 10353                           ; BSR set to: 1
 10354                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10355  00259A  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10356  00259C  D005               	goto	u28410
 10357  00259E  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10358  0025A0  E102               	bnz	u28411
 10359  0025A2  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10360  0025A4  B0D8               	btfsc	status,0,c
 10361  0025A6                     u28411:
 10362  0025A6  0012               	return	
 10363  0025A8                     u28410:
 10364                           
 10365                           ; BSR set to: 1
 10366                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10367  0025A8  0EB0               	movlw	low _controlLearning_stateMachine
 10368  0025AA  6E12               	movwf	sm_send_event@psm^0,c
 10369  0025AC  0E02               	movlw	high _controlLearning_stateMachine
 10370  0025AE  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10371  0025B0  0E00               	movlw	0
 10372  0025B2  6E15               	movwf	(sm_send_event@event+1)^0,c
 10373  0025B4  0E0A               	movlw	10
 10374  0025B6  6E14               	movwf	sm_send_event@event^0,c
 10375  0025B8  ECE1  F046         	call	_sm_send_event	;wreg free
 10376                           
 10377                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10378  0025BC  0E01               	movlw	1
 10379  0025BE  0101               	movlb	1	; () banked
 10380  0025C0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10384  0025C2  0E00               	movlw	0
 10385  0025C4  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10386                           
 10387                           ; BSR set to: 1
 10388                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10389  0025C6  0E00               	movlw	0
 10390  0025C8  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10391  0025CA  0E3C               	movlw	60
 10392  0025CC  D7A4               	goto	L67
 10393  0025CE                     l23740:
 10394                           
 10395                           ; BSR set to: 0
 10396  0025CE  0101               	movlb	1	; () banked
 10397  0025D0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10398  0025D2  B4D8               	btfsc	status,2,c
 10399  0025D4  D769               	goto	u28310
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10403  0025D6  0E00               	movlw	0
 10404  0025D8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10405  0025DA  0E28               	movlw	40
 10406  0025DC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10407                           
 10408                           ; BSR set to: 1
 10409                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10410  0025DE  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10411  0025E0  D005               	goto	u28430
 10412  0025E2  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10413  0025E4  E102               	bnz	u28431
 10414  0025E6  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10415  0025E8  B0D8               	btfsc	status,0,c
 10416  0025EA                     u28431:
 10417  0025EA  0012               	return	
 10418  0025EC                     u28430:
 10419                           
 10420                           ; BSR set to: 1
 10421                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10422  0025EC  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10423  0025EE  0012               	return	
 10424  0025F0  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10425  0025F2  E103               	bnz	u28440
 10426  0025F4  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10427  0025F6  A0D8               	btfss	status,0,c
 10428  0025F8  0012               	return	
 10429  0025FA                     u28440:
 10430                           
 10431                           ; BSR set to: 1
 10432                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10433  0025FA  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10434  0025FE  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10435  002602  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10436  002604  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10437  002606  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10438  00260A  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10439  00260E  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10440  002612  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10441  002616  EC81  F046         	call	_calculateMean	;wreg free
 10442  00261A  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10443  00261E  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10444  002622  0012               	return	
 10445  002624                     l23752:
 10446                           
 10447                           ; BSR set to: 0
 10448                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10449  002624  0101               	movlb	1	; () banked
 10450  002626  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10451  002628  B4D8               	btfsc	status,2,c
 10452  00262A  D011               	goto	u28500
 10453                           
 10454                           ; BSR set to: 1
 10455  00262C  0100               	movlb	0	; () banked
 10456  00262E  0581               	decf	_control_limit_switch& (0+255),w,b
 10457  002630  B4D8               	btfsc	status,2,c
 10458  002632  D00D               	goto	u28500
 10459                           
 10460                           ; BSR set to: 0
 10461  002634  0101               	movlb	1	; () banked
 10462  002636  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10463  002638  A4D8               	btfss	status,2,c
 10464  00263A  D02C               	goto	l23778
 10465                           
 10466                           ; BSR set to: 1
 10467  00263C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10468  00263E  B4D8               	btfsc	status,2,c
 10469  002640  D003               	goto	u28490
 10470                           
 10471                           ; BSR set to: 1
 10472  002642  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10473  002644  A4D8               	btfss	status,2,c
 10474  002646  D026               	goto	l23778
 10475  002648                     u28490:
 10476                           
 10477                           ; BSR set to: 1
 10478  002648  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10479  00264A  A4D8               	btfss	status,2,c
 10480  00264C  D023               	goto	l23778
 10481  00264E                     u28500:
 10482                           
 10483                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10484  00264E  0E00               	movlw	0
 10485  002650  0101               	movlb	1	; () banked
 10486  002652  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10487                           
 10488                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10489  002654  0E00               	movlw	0
 10490  002656  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10491                           
 10492                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10493  002658  0E01               	movlw	1
 10494  00265A  0100               	movlb	0	; () banked
 10495  00265C  6F81               	movwf	_control_limit_switch& (0+255),b
 10496                           
 10497                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10498  00265E  0E00               	movlw	0
 10499  002660  0101               	movlb	1	; () banked
 10500  002662  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10501                           
 10502                           ; BSR set to: 1
 10503                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10504  002664  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10505  002666  D005               	goto	u28510
 10506  002668  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10507  00266A  E102               	bnz	u28511
 10508  00266C  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10509  00266E  B0D8               	btfsc	status,0,c
 10510  002670                     u28511:
 10511  002670  0012               	return	
 10512  002672                     u28510:
 10513                           
 10514                           ; BSR set to: 1
 10515                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10516  002672  0EB0               	movlw	low _controlLearning_stateMachine
 10517  002674  6E12               	movwf	sm_send_event@psm^0,c
 10518  002676  0E02               	movlw	high _controlLearning_stateMachine
 10519  002678  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10520  00267A  0E00               	movlw	0
 10521  00267C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10522  00267E  0E0B               	movlw	11
 10523  002680  6E14               	movwf	sm_send_event@event^0,c
 10524  002682  ECE1  F046         	call	_sm_send_event	;wreg free
 10525                           
 10526                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10527  002686  0E03               	movlw	3
 10528  002688  0101               	movlb	1	; () banked
 10529  00268A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10530                           
 10531                           ; BSR set to: 1
 10532                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10533  00268C  0E00               	movlw	0
 10534  00268E  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10535  002690  0E50               	movlw	80
 10536  002692  D741               	goto	L67
 10537  002694                     l23778:
 10538                           
 10539                           ; BSR set to: 1
 10540  002694  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10541  002696  B4D8               	btfsc	status,2,c
 10542  002698  D707               	goto	u28310
 10543                           
 10544                           ; BSR set to: 1
 10545  00269A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10546  00269C  B4D8               	btfsc	status,2,c
 10547  00269E  D003               	goto	u28540
 10548                           
 10549                           ; BSR set to: 1
 10550  0026A0  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10551  0026A2  A4D8               	btfss	status,2,c
 10552  0026A4  D00F               	goto	l23792
 10553  0026A6                     u28540:
 10554                           
 10555                           ; BSR set to: 1
 10556  0026A6  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10557  0026A8  A4D8               	btfss	status,2,c
 10558  0026AA  D00C               	goto	l23792
 10559                           
 10560                           ; BSR set to: 1
 10561  0026AC  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10562  0026AE  A4D8               	btfss	status,2,c
 10563  0026B0  D009               	goto	l23792
 10564  0026B2                     u28560:
 10565                           
 10566                           ; BSR set to: 1
 10567                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10568  0026B2  0E01               	movlw	1
 10569  0026B4  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10570                           
 10571                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10572  0026B6  0E01               	movlw	1
 10573  0026B8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10574                           
 10575                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10576  0026BA  0E00               	movlw	0
 10577  0026BC  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10578  0026BE  0E50               	movlw	80
 10579  0026C0  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10580                           
 10581                           ;sm_ControlLearning_MC50.c: 309:             }
 10582  0026C2  0012               	return	
 10583  0026C4                     l23792:
 10584                           
 10585                           ; BSR set to: 1
 10586  0026C4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10587  0026C6  A4D8               	btfss	status,2,c
 10588  0026C8  D00C               	goto	l23800
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10592  0026CA  0E00               	movlw	0
 10593  0026CC  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10594  0026CE  0E28               	movlw	40
 10595  0026D0  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10596                           
 10597                           ; BSR set to: 1
 10598                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10599  0026D2  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10600  0026D4  0012               	return	
 10601  0026D6  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10602  0026D8  E103               	bnz	u28580
 10603  0026DA  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10604  0026DC  A0D8               	btfss	status,0,c
 10605  0026DE  0012               	return	
 10606  0026E0                     u28580:
 10607  0026E0  D739               	goto	u28380
 10608  0026E2                     l23800:
 10609                           
 10610                           ; BSR set to: 1
 10611                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10612  0026E2  0E01               	movlw	1
 10613  0026E4  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10614                           
 10615                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10616  0026E6  0E00               	movlw	0
 10617  0026E8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10618  0026EA  0E28               	movlw	40
 10619  0026EC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10620                           
 10621                           ; BSR set to: 1
 10622                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10623  0026EE  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10624  0026F0  D005               	goto	u28590
 10625  0026F2  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10626  0026F4  E102               	bnz	u28591
 10627  0026F6  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10628  0026F8  B0D8               	btfsc	status,0,c
 10629  0026FA                     u28591:
 10630  0026FA  0012               	return	
 10631  0026FC                     u28590:
 10632                           
 10633                           ; BSR set to: 1
 10634                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10635  0026FC  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10636  0026FE  0012               	return	
 10637  002700  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10638  002702  E103               	bnz	u28600
 10639  002704  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10640  002706  A0D8               	btfss	status,0,c
 10641  002708  0012               	return	
 10642  00270A                     u28600:
 10643                           
 10644                           ; BSR set to: 1
 10645                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10646  00270A  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10647  00270E  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10648  002712  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10649  002714  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10650  002716  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10651  00271A  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10652  00271E  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10653  002720  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10654  002722  EC81  F046         	call	_calculateMean	;wreg free
 10655  002726  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10656  00272A  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10657  00272E  0012               	return	
 10658  002730                     l23808:
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10662  002730  0101               	movlb	1	; () banked
 10663  002732  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10664  002734  B4D8               	btfsc	status,2,c
 10665  002736  D00C               	goto	u28650
 10666                           
 10667                           ; BSR set to: 1
 10668  002738  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10669  00273A  A4D8               	btfss	status,2,c
 10670  00273C  D06F               	goto	l23854
 10671                           
 10672                           ; BSR set to: 1
 10673  00273E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10674  002740  B4D8               	btfsc	status,2,c
 10675  002742  D003               	goto	u28640
 10676                           
 10677                           ; BSR set to: 1
 10678  002744  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10679  002746  A4D8               	btfss	status,2,c
 10680  002748  D069               	goto	l23854
 10681  00274A                     u28640:
 10682                           
 10683                           ; BSR set to: 1
 10684  00274A  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10685  00274C  A4D8               	btfss	status,2,c
 10686  00274E  D066               	goto	l23854
 10687  002750                     u28650:
 10688                           
 10689                           ; BSR set to: 1
 10690                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10691  002750  0E01               	movlw	1
 10692  002752  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10693                           
 10694                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10695  002754  0E00               	movlw	0
 10696  002756  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10697                           
 10698                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10699  002758  0E00               	movlw	0
 10700  00275A  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10701                           
 10702                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10703  00275C  0E00               	movlw	0
 10704  00275E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10705                           
 10706                           ; BSR set to: 1
 10707                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10708  002760  0EB0               	movlw	low _controlLearning_stateMachine
 10709  002762  6E12               	movwf	sm_send_event@psm^0,c
 10710  002764  0E02               	movlw	high _controlLearning_stateMachine
 10711  002766  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10712  002768  0E00               	movlw	0
 10713  00276A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10714  00276C  0E0A               	movlw	10
 10715  00276E  6E14               	movwf	sm_send_event@event^0,c
 10716  002770  ECE1  F046         	call	_sm_send_event	;wreg free
 10717                           
 10718                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10719  002774  0EE7               	movlw	low _controlGate_stateMachine
 10720  002776  6E12               	movwf	sm_send_event@psm^0,c
 10721  002778  0E01               	movlw	high _controlGate_stateMachine
 10722  00277A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10723  00277C  0E00               	movlw	0
 10724  00277E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10725  002780  0E13               	movlw	19
 10726  002782  6E14               	movwf	sm_send_event@event^0,c
 10727  002784  ECE1  F046         	call	_sm_send_event	;wreg free
 10728                           
 10729                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10730  002788  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10731  00278C  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10732  002790  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10733  002794  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10734                           
 10735                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10736  002798  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10737  00279C  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10738  0027A0  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10739  0027A4  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10740                           
 10741                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10742  0027A8  0101               	movlb	1	; () banked
 10743  0027AA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10744  0027AC  A4D8               	btfss	status,2,c
 10745  0027AE  D005               	goto	l23832
 10746                           
 10747                           ; BSR set to: 1
 10748                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10749  0027B0  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10750                           
 10751                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10752  0027B4  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10753                           
 10754                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10755  0027B8  D005               	goto	l23834
 10756  0027BA                     l23832:
 10757                           
 10758                           ; BSR set to: 1
 10759                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10760  0027BA  0E04               	movlw	4
 10761  0027BC  0100               	movlb	0	; () banked
 10762  0027BE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10763                           
 10764                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10765  0027C0  0E04               	movlw	4
 10766  0027C2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10767  0027C4                     l23834:
 10768                           
 10769                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10770  0027C4  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10771  0027C8  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10772                           
 10773                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10774  0027CC  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10775  0027D0  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10776                           
 10777                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10778  0027D4  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10779  0027D8  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10780  0027DC  0100               	movlb	0	; () banked
 10781  0027DE  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10782  0027E0  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10786  0027E2  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10787  0027E6  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10788  0027EA  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10789  0027EC  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10793  0027EE  0E00               	movlw	0
 10794  0027F0  ECEF  F04A         	call	_SaveNVM_VarSystem
 10795                           
 10796                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10797  0027F4  0E03               	movlw	3
 10798  0027F6  ECEF  F04A         	call	_SaveNVM_VarSystem
 10799                           
 10800                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10801  0027FA  0E02               	movlw	2
 10802  0027FC  ECEF  F04A         	call	_SaveNVM_VarSystem
 10803                           
 10804                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10805  002800  0E00               	movlw	0
 10806  002802  0101               	movlb	1	; () banked
 10807  002804  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10808                           
 10809                           ; BSR set to: 1
 10810                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10811  002806  0E00               	movlw	0
 10812  002808  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10813  00280A  0E00               	movlw	0
 10814  00280C  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10815  00280E  0E00               	movlw	0
 10816  002810  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10817  002812  0E00               	movlw	0
 10818  002814  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10819                           
 10820                           ; BSR set to: 1
 10821                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10822  002816  0E00               	movlw	0
 10823  002818  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10824                           
 10825                           ;sm_ControlLearning_MC50.c: 369:             }
 10826  00281A  0012               	return	
 10827  00281C                     l23854:
 10828                           
 10829                           ; BSR set to: 1
 10830  00281C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10831  00281E  B4D8               	btfsc	status,2,c
 10832  002820  D643               	goto	u28310
 10833                           
 10834                           ; BSR set to: 1
 10835  002822  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10836  002824  B4D8               	btfsc	status,2,c
 10837  002826  D003               	goto	u28690
 10838                           
 10839                           ; BSR set to: 1
 10840  002828  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10841  00282A  A4D8               	btfss	status,2,c
 10842  00282C  D003               	goto	l23866
 10843  00282E                     u28690:
 10844                           
 10845                           ; BSR set to: 1
 10846  00282E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10847  002830  B4D8               	btfsc	status,2,c
 10848  002832  D73F               	goto	u28560
 10849  002834                     l23866:
 10850                           
 10851                           ; BSR set to: 1
 10852  002834  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10853  002836  A4D8               	btfss	status,2,c
 10854  002838  D008               	goto	l23872
 10855                           
 10856                           ; BSR set to: 1
 10857                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10858  00283A  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10859  00283C  0012               	return	
 10860  00283E  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10861  002840  E103               	bnz	u28720
 10862  002842  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10863  002844  A0D8               	btfss	status,0,c
 10864  002846  0012               	return	
 10865  002848                     u28720:
 10866  002848  D6D8               	goto	u28440
 10867  00284A                     l23872:
 10868                           
 10869                           ; BSR set to: 1
 10870                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10871  00284A  0E01               	movlw	1
 10872  00284C  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10873                           
 10874                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10875  00284E  0E00               	movlw	0
 10876  002850  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10877  002852  0E28               	movlw	40
 10878  002854  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10879                           
 10880                           ; BSR set to: 1
 10881                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10882  002856  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10883  002858  D005               	goto	u28730
 10884  00285A  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10885  00285C  E102               	bnz	u28731
 10886  00285E  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10887  002860  B0D8               	btfsc	status,0,c
 10888  002862                     u28731:
 10889  002862  0012               	return	
 10890  002864                     u28730:
 10891                           
 10892                           ; BSR set to: 1
 10893                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10894  002864  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10895  002866  0012               	return	
 10896  002868  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10897  00286A  E103               	bnz	u28740
 10898  00286C  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10899  00286E  A0D8               	btfss	status,0,c
 10900  002870  0012               	return	
 10901  002872                     u28740:
 10902                           
 10903                           ; BSR set to: 1
 10904                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10905  002872  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10906  002876  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10907  00287A  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10908  00287C  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10909  00287E  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10910  002882  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10911  002886  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10912  002888  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10913  00288A  EC81  F046         	call	_calculateMean	;wreg free
 10914  00288E  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10915  002892  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10916  002896  0012               	return	
 10917  002898                     l23882:
 10918  002898  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10919  00289C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10920  0028A0  50DF               	movf	indf2,w,c
 10921  0028A2  0100               	movlb	0	; () banked
 10922  0028A4  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10923  0028A6  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10924                           
 10925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10926                           ; Switch size 1, requested type "simple"
 10927                           ; Number of cases is 1, Range of values is 0 to 0
 10928                           ; switch strategies available:
 10929                           ; Name         Instructions Cycles
 10930                           ; simple_byte            4     3 (average)
 10931                           ;	Chosen strategy is simple_byte
 10932  0028A8  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10933  0028AA  0A00               	xorlw	0	; case 0
 10934  0028AC  A4D8               	btfss	status,2,c
 10935  0028AE  0012               	return	
 10936                           
 10937                           ; BSR set to: 0
 10938                           ; Switch size 1, requested type "simple"
 10939                           ; Number of cases is 6, Range of values is 0 to 5
 10940                           ; switch strategies available:
 10941                           ; Name         Instructions Cycles
 10942                           ; simple_byte           19    10 (average)
 10943                           ;	Chosen strategy is simple_byte
 10944  0028B0  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10945  0028B2  0A00               	xorlw	0	; case 0
 10946  0028B4  B4D8               	btfsc	status,2,c
 10947  0028B6  D570               	goto	l23628
 10948  0028B8  0A01               	xorlw	1	; case 1
 10949  0028BA  B4D8               	btfsc	status,2,c
 10950  0028BC  D5BB               	goto	l23652
 10951  0028BE  0A03               	xorlw	3	; case 2
 10952  0028C0  B4D8               	btfsc	status,2,c
 10953  0028C2  D5FA               	goto	l23686
 10954  0028C4  0A01               	xorlw	1	; case 3
 10955  0028C6  B4D8               	btfsc	status,2,c
 10956  0028C8  D65A               	goto	l23720
 10957  0028CA  0A07               	xorlw	7	; case 4
 10958  0028CC  B4D8               	btfsc	status,2,c
 10959  0028CE  D6AA               	goto	l23752
 10960  0028D0  0A01               	xorlw	1	; case 5
 10961  0028D2  A4D8               	btfss	status,2,c
 10962  0028D4  0012               	return	
 10963  0028D6  D72C               	goto	l23808
 10964  0028D8                     __end_of_sm_execute_ControlLearning:
 10965                           	callstack 0
 10966                           
 10967 ;; *************** function _generateErrorLearnig *****************
 10968 ;; Defined at:
 10969 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      void 
 10976 ;; Registers used:
 10977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10978 ;; Tracked objects:
 10979 ;;		On entry : 3E/1
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;Total ram usage:        0 bytes
 10988 ;; Hardware stack levels used: 1
 10989 ;; Hardware stack levels required when called: 6
 10990 ;; This function calls:
 10991 ;;		_sm_init
 10992 ;; This function is called by:
 10993 ;;		_sm_execute_ControlLearning
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text19
 10998  008C34                     __ptext19:
 10999                           	callstack 0
 11000  008C34                     _generateErrorLearnig:
 11001                           	callstack 22
 11002                           
 11003                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11004                           
 11005                           ;incstack = 0
 11006  008C34  0E00               	movlw	0
 11007  008C36  0101               	movlb	1	; () banked
 11008  008C38  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11009                           
 11010                           ; BSR set to: 1
 11011                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11012  008C3A  0EBB               	movlw	low _menuConfiguration_stateMachine
 11013  008C3C  6E12               	movwf	sm_init@psm^0,c
 11014  008C3E  0E02               	movlw	high _menuConfiguration_stateMachine
 11015  008C40  6E13               	movwf	(sm_init@psm+1)^0,c
 11016  008C42  0E00               	movlw	0
 11017  008C44  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11018  008C46  0E00               	movlw	0
 11019  008C48  6E14               	movwf	sm_init@initial_state^0,c
 11020  008C4A  0E00               	movlw	0
 11021  008C4C  6E16               	movwf	sm_init@hist_mode^0,c
 11022  008C4E  ECF1  F047         	call	_sm_init	;wreg free
 11023                           
 11024                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11025  008C52  0EF2               	movlw	low _main_stateMachine
 11026  008C54  6E12               	movwf	sm_init@psm^0,c
 11027  008C56  0E01               	movlw	high _main_stateMachine
 11028  008C58  6E13               	movwf	(sm_init@psm+1)^0,c
 11029  008C5A  0E00               	movlw	0
 11030  008C5C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11031  008C5E  0E00               	movlw	0
 11032  008C60  6E14               	movwf	sm_init@initial_state^0,c
 11033  008C62  0E00               	movlw	0
 11034  008C64  6E16               	movwf	sm_init@hist_mode^0,c
 11035  008C66  ECF1  F047         	call	_sm_init	;wreg free
 11036                           
 11037                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11038  008C6A  0EE7               	movlw	low _controlGate_stateMachine
 11039  008C6C  6E12               	movwf	sm_init@psm^0,c
 11040  008C6E  0E01               	movlw	high _controlGate_stateMachine
 11041  008C70  6E13               	movwf	(sm_init@psm+1)^0,c
 11042  008C72  0E00               	movlw	0
 11043  008C74  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11044  008C76  0E00               	movlw	0
 11045  008C78  6E14               	movwf	sm_init@initial_state^0,c
 11046  008C7A  0E00               	movlw	0
 11047  008C7C  6E16               	movwf	sm_init@hist_mode^0,c
 11048  008C7E  ECF1  F047         	call	_sm_init	;wreg free
 11049                           
 11050                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11051  008C82  0EB0               	movlw	low _controlLearning_stateMachine
 11052  008C84  6E12               	movwf	sm_init@psm^0,c
 11053  008C86  0E02               	movlw	high _controlLearning_stateMachine
 11054  008C88  6E13               	movwf	(sm_init@psm+1)^0,c
 11055  008C8A  0E00               	movlw	0
 11056  008C8C  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11057  008C8E  0E00               	movlw	0
 11058  008C90  6E14               	movwf	sm_init@initial_state^0,c
 11059  008C92  0E00               	movlw	0
 11060  008C94  6E16               	movwf	sm_init@hist_mode^0,c
 11061  008C96  ECF1  F047         	call	_sm_init	;wreg free
 11062  008C9A  0012               	return		;funcret
 11063  008C9C                     __end_of_generateErrorLearnig:
 11064                           	callstack 0
 11065                           
 11066 ;; *************** function _sm_init *****************
 11067 ;; Defined at:
 11068 ;;		line 12 in file "sm_common_MC50.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  psm             2   17[COMRAM] PTR struct .
 11071 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11072 ;;  initial_stat    2   19[COMRAM] int 
 11073 ;;  hist_mode       1   21[COMRAM] enum E348
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;		None
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  1    wreg      void 
 11078 ;; Registers used:
 11079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/1
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11085 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11088 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11089 ;;Total ram usage:        5 bytes
 11090 ;; Hardware stack levels used: 1
 11091 ;; Hardware stack levels required when called: 5
 11092 ;; This function calls:
 11093 ;;		_sm_restart
 11094 ;; This function is called by:
 11095 ;;		_main
 11096 ;;		_generateErrorLearnig
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text20
 11101  008FE2                     __ptext20:
 11102                           	callstack 0
 11103  008FE2                     _sm_init:
 11104                           	callstack 25
 11105                           
 11106                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11107                           
 11108                           ;incstack = 0
 11109  008FE2  EE20 F002          	lfsr	2,2
 11110  008FE6  5012               	movf	sm_init@psm^0,w,c
 11111  008FE8  26D9               	addwf	fsr2l,f,c
 11112  008FEA  5013               	movf	(sm_init@psm+1)^0,w,c
 11113  008FEC  22DA               	addwfc	fsr2h,f,c
 11114  008FEE  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11115  008FF2  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11116                           
 11117                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11118  008FF6  EE20 F006          	lfsr	2,6
 11119  008FFA  5012               	movf	sm_init@psm^0,w,c
 11120  008FFC  26D9               	addwf	fsr2l,f,c
 11121  008FFE  5013               	movf	(sm_init@psm+1)^0,w,c
 11122  009000  22DA               	addwfc	fsr2h,f,c
 11123  009002  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11124                           
 11125                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11126  009006  C012  FFD9         	movff	sm_init@psm,fsr2l
 11127  00900A  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11128  00900E  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11129  009012  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11130                           
 11131                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11132  009016  EE20 F007          	lfsr	2,7
 11133  00901A  5012               	movf	sm_init@psm^0,w,c
 11134  00901C  26D9               	addwf	fsr2l,f,c
 11135  00901E  5013               	movf	(sm_init@psm+1)^0,w,c
 11136  009020  22DA               	addwfc	fsr2h,f,c
 11137  009022  0E00               	movlw	0
 11138  009024  6EDE               	movwf	postinc2,c
 11139  009026  0E00               	movlw	0
 11140  009028  6EDD               	movwf	postdec2,c
 11141                           
 11142                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11143  00902A  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11144  00902E  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11145  009032  ECCF  F049         	call	_sm_restart	;wreg free
 11146  009036  0012               	return		;funcret
 11147  009038                     __end_of_sm_init:
 11148                           	callstack 0
 11149                           
 11150 ;; *************** function _sm_restart *****************
 11151 ;; Defined at:
 11152 ;;		line 23 in file "sm_common_MC50.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  psm             2   15[COMRAM] PTR struct .
 11155 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/1
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11171 ;;Total ram usage:        2 bytes
 11172 ;; Hardware stack levels used: 1
 11173 ;; Hardware stack levels required when called: 4
 11174 ;; This function calls:
 11175 ;;		Nothing
 11176 ;; This function is called by:
 11177 ;;		_sm_init
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text21
 11182  00939E                     __ptext21:
 11183                           	callstack 0
 11184  00939E                     _sm_restart:
 11185                           	callstack 25
 11186                           
 11187                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11188                           
 11189                           ;incstack = 0
 11190  00939E  EE20 F006          	lfsr	2,6
 11191  0093A2  5010               	movf	sm_restart@psm^0,w,c
 11192  0093A4  26D9               	addwf	fsr2l,f,c
 11193  0093A6  5011               	movf	(sm_restart@psm+1)^0,w,c
 11194  0093A8  22DA               	addwfc	fsr2h,f,c
 11195  0093AA  50DF               	movf	indf2,w,c
 11196  0093AC  A4D8               	btfss	status,2,c
 11197  0093AE  D00E               	goto	l20644
 11198                           
 11199                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11200  0093B0  EE20 F002          	lfsr	2,2
 11201  0093B4  5010               	movf	sm_restart@psm^0,w,c
 11202  0093B6  26D9               	addwf	fsr2l,f,c
 11203  0093B8  5011               	movf	(sm_restart@psm+1)^0,w,c
 11204  0093BA  22DA               	addwfc	fsr2h,f,c
 11205  0093BC  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11206  0093C0  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11207  0093C4  CFDE FFE6          	movff	postinc2,postinc1
 11208  0093C8  CFDD FFE5          	movff	postdec2,postdec1
 11209  0093CC                     l20644:
 11210                           
 11211                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11212  0093CC  EE20 F004          	lfsr	2,4
 11213  0093D0  5010               	movf	sm_restart@psm^0,w,c
 11214  0093D2  26D9               	addwf	fsr2l,f,c
 11215  0093D4  5011               	movf	(sm_restart@psm+1)^0,w,c
 11216  0093D6  22DA               	addwfc	fsr2h,f,c
 11217  0093D8  0E00               	movlw	0
 11218  0093DA  6EDE               	movwf	postinc2,c
 11219  0093DC  0E00               	movlw	0
 11220  0093DE  6EDD               	movwf	postdec2,c
 11221  0093E0  0012               	return		;funcret
 11222  0093E2                     __end_of_sm_restart:
 11223                           	callstack 0
 11224                           
 11225 ;; *************** function _clearLearningValue *****************
 11226 ;; Defined at:
 11227 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;		None
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;		None
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  1    wreg      void 
 11234 ;; Registers used:
 11235 ;;		wreg, status,2
 11236 ;; Tracked objects:
 11237 ;;		On entry : 3F/1
 11238 ;;		On exit  : 3F/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;Total ram usage:        0 bytes
 11246 ;; Hardware stack levels used: 1
 11247 ;; Hardware stack levels required when called: 4
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_sm_execute_ControlLearning
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text22
 11256  0086CC                     __ptext22:
 11257                           	callstack 0
 11258  0086CC                     _clearLearningValue:
 11259                           	callstack 24
 11260                           
 11261                           ; BSR set to: 1
 11262                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11263                           
 11264                           ;incstack = 0
 11265  0086CC  0E00               	movlw	0
 11266  0086CE  0100               	movlb	0	; () banked
 11267  0086D0  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11268  0086D2  0E00               	movlw	0
 11269  0086D4  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11270  0086D6  0E00               	movlw	0
 11271  0086D8  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11272  0086DA  0E00               	movlw	0
 11273  0086DC  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11274                           
 11275                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11276  0086DE  0E00               	movlw	0
 11277  0086E0  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11278  0086E2  0E00               	movlw	0
 11279  0086E4  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11280  0086E6  0E00               	movlw	0
 11281  0086E8  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11282  0086EA  0E00               	movlw	0
 11283  0086EC  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11284                           
 11285                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11286  0086EE  0E00               	movlw	0
 11287  0086F0  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11288                           
 11289                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11290  0086F2  0E00               	movlw	0
 11291  0086F4  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11292                           
 11293                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11294  0086F6  0E00               	movlw	0
 11295  0086F8  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11296  0086FA  0E00               	movlw	0
 11297  0086FC  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11298                           
 11299                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11300  0086FE  0E00               	movlw	0
 11301  008700  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11302  008702  0E00               	movlw	0
 11303  008704  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11304                           
 11305                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11306  008706  0E00               	movlw	0
 11307  008708  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11308  00870A  0E00               	movlw	0
 11309  00870C  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11310                           
 11311                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11312  00870E  0E00               	movlw	0
 11313  008710  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11314  008712  0E00               	movlw	0
 11315  008714  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11316                           
 11317                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11318  008716  0E00               	movlw	0
 11319  008718  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11320  00871A  0E00               	movlw	0
 11321  00871C  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11322                           
 11323                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11324  00871E  0E00               	movlw	0
 11325  008720  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11326  008722  0E00               	movlw	0
 11327  008724  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11328                           
 11329                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11330  008726  0E00               	movlw	0
 11331  008728  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11332  00872A  0E00               	movlw	0
 11333  00872C  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11334  00872E  0E00               	movlw	0
 11335  008730  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11336  008732  0E00               	movlw	0
 11337  008734  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11338                           
 11339                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11340  008736  0E00               	movlw	0
 11341  008738  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11342  00873A  0E00               	movlw	0
 11343  00873C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11344  00873E  0E00               	movlw	0
 11345  008740  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11346  008742  0E00               	movlw	0
 11347  008744  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11348                           
 11349                           ; BSR set to: 0
 11350  008746  0012               	return		;funcret
 11351  008748                     __end_of_clearLearningValue:
 11352                           	callstack 0
 11353                           
 11354 ;; *************** function _calculateMean *****************
 11355 ;; Defined at:
 11356 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;  meanValue       4   15[COMRAM] unsigned long 
 11359 ;;  newValue        4   19[COMRAM] unsigned long 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  4   15[COMRAM] unsigned long 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2, status,0
 11366 ;; Tracked objects:
 11367 ;;		On entry : 3E/1
 11368 ;;		On exit  : 3E/0
 11369 ;;		Unchanged: 3E/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11371 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11373 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11374 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11375 ;;Total ram usage:       12 bytes
 11376 ;; Hardware stack levels used: 1
 11377 ;; Hardware stack levels required when called: 4
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_sm_execute_ControlLearning
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text23
 11386  008D02                     __ptext23:
 11387                           	callstack 0
 11388  008D02                     _calculateMean:
 11389                           	callstack 24
 11390                           
 11391                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;incstack = 0
 11395  008D02  5010               	movf	calculateMean@meanValue^0,w,c
 11396  008D04  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11397  008D06  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11398  008D08  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11399  008D0A  A4D8               	btfss	status,2,c
 11400  008D0C  D009               	goto	l21838
 11401                           
 11402                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11403  008D0E  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11404  008D12  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11405  008D16  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11406  008D1A  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11407                           
 11408                           ;sm_ControlLearning_MC50.c: 416:     }
 11409  008D1E  D019               	goto	l21840
 11410  008D20                     l21838:
 11411                           
 11412                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11413  008D20  5014               	movf	calculateMean@newValue^0,w,c
 11414  008D22  2410               	addwf	calculateMean@meanValue^0,w,c
 11415  008D24  6E18               	movwf	??_calculateMean^0,c
 11416  008D26  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11417  008D28  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11418  008D2A  6E19               	movwf	(??_calculateMean+1)^0,c
 11419  008D2C  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11420  008D2E  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11421  008D30  6E1A               	movwf	(??_calculateMean+2)^0,c
 11422  008D32  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11423  008D34  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11424  008D36  6E1B               	movwf	(??_calculateMean+3)^0,c
 11425  008D38  90D8               	bcf	status,0,c
 11426  008D3A  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11427  008D3C  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11428  008D3E  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11429  008D40  3218               	rrcf	??_calculateMean^0,f,c
 11430  008D42  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11431  008D46  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11432  008D4A  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11433  008D4E  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11434  008D52                     l21840:
 11435                           
 11436                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11437  008D52  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11438  008D56  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11439  008D5A  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11440  008D5E  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11441  008D62  0012               	return		;funcret
 11442  008D64                     __end_of_calculateMean:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function _actionZone_Opening *****************
 11446 ;; Defined at:
 11447 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;		None
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11452 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11453 ;;  securityClos    1   12[BANK0 ] enum E10397
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  1    wreg      void 
 11456 ;; Registers used:
 11457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 3F/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11464 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11467 ;;Total ram usage:        3 bytes
 11468 ;; Hardware stack levels used: 1
 11469 ;; Hardware stack levels required when called: 8
 11470 ;; This function calls:
 11471 ;;		_CloseOrder
 11472 ;;		_GetOpenOrder
 11473 ;;		_GetSecurityStateInClosing
 11474 ;;		_GetSecurityStateInOpening
 11475 ;;		_InitFullAutoTime
 11476 ;;		_InitWalkAutoTime
 11477 ;;		_SetSegmentValueIntermitent
 11478 ;;		_StopOrder
 11479 ;;		_VerifyFollowMe
 11480 ;;		_controlVelocity
 11481 ;;		_setPositionInvertionInClosing
 11482 ;;		_setPositionInvertionInOpening
 11483 ;;		_sm_send_event
 11484 ;; This function is called by:
 11485 ;;		_sm_execute_ControlGate
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text24
 11490  0050C6                     __ptext24:
 11491                           	callstack 0
 11492  0050C6                     _actionZone_Opening:
 11493                           	callstack 21
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11497                           
 11498                           ;incstack = 0
 11499  0050C6  ECF9  F03E         	call	_GetSecurityStateInClosing	;wreg free
 11500  0050CA  0100               	movlb	0	; () banked
 11501  0050CC  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11502                           
 11503                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11504  0050CE  EC4C  F03F         	call	_GetSecurityStateInOpening	;wreg free
 11505  0050D2  0100               	movlb	0	; () banked
 11506  0050D4  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11510  0050D6  ECB2  F02E         	call	_GetOpenOrder	;wreg free
 11511  0050DA  0100               	movlb	0	; () banked
 11512  0050DC  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11516  0050DE  ECC3  F02B         	call	_controlVelocity	;wreg free
 11517                           
 11518                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11519  0050E2  ECEC  F04D         	call	_InitFullAutoTime	;wreg free
 11520                           
 11521                           ; BSR set to: 0
 11522                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11523  0050E6  0E00               	movlw	0
 11524  0050E8  0101               	movlb	1	; () banked
 11525  0050EA  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11529  0050EC  0100               	movlb	0	; () banked
 11530  0050EE  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11531  0050F0  EC44  F04D         	call	_VerifyFollowMe
 11532                           
 11533                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11534  0050F4  0E03               	movlw	3
 11535  0050F6  0101               	movlb	1	; () banked
 11536  0050F8  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11537  0050FA  D00D               	goto	l23084
 11538                           
 11539                           ; BSR set to: 1
 11540                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11541  0050FC  0E00               	movlw	0
 11542  0050FE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11543  005100                     l23082:
 11544                           
 11545                           ; BSR set to: 1
 11546                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11547  005100  0EE7               	movlw	low _controlGate_stateMachine
 11548  005102  6E12               	movwf	sm_send_event@psm^0,c
 11549  005104  0E01               	movlw	high _controlGate_stateMachine
 11550  005106  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11551  005108  0E00               	movlw	0
 11552  00510A  6E15               	movwf	(sm_send_event@event+1)^0,c
 11553  00510C  0E10               	movlw	16
 11554  00510E  6E14               	movwf	sm_send_event@event^0,c
 11555  005110  ECE1  F046         	call	_sm_send_event	;wreg free
 11556                           
 11557                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11558  005114  0012               	return	
 11559  005116                     l23084:
 11560                           
 11561                           ; BSR set to: 1
 11562  005116  0E02               	movlw	2
 11563  005118  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11564  00511A  A4D8               	btfss	status,2,c
 11565  00511C  D013               	goto	l23098
 11566                           
 11567                           ; BSR set to: 1
 11568  00511E  BFB0               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11569  005120  D005               	goto	u26930
 11570  005122  51B0               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11571  005124  E10F               	bnz	l23098
 11572  005126  05AF               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11573  005128  B0D8               	btfsc	status,0,c
 11574  00512A  D00C               	goto	l23098
 11575  00512C                     u26930:
 11576                           
 11577                           ; BSR set to: 1
 11578                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11579  00512C  EC58  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11580                           
 11581                           ; BSR set to: 1
 11582                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11583  005130  EC9A  F04D         	call	_StopOrder	;wreg free
 11584                           
 11585                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11586  005134  EC70  F04E         	call	_InitWalkAutoTime	;wreg free
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11590  005138  0E01               	movlw	1
 11591  00513A  0101               	movlb	1	; () banked
 11592  00513C  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11593                           
 11594                           ; BSR set to: 1
 11595                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11596  00513E  0E01               	movlw	1
 11597  005140  6F92               	movwf	_Abertura_pedonal& (0+255),b
 11598                           
 11599                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11600  005142  0012               	return	
 11601  005144                     l23098:
 11602                           
 11603                           ; BSR set to: 1
 11604  005144  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11605  005146  B4D8               	btfsc	status,2,c
 11606  005148  D010               	goto	u26980
 11607                           
 11608                           ; BSR set to: 1
 11609  00514A  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11610  00514C  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11611  00514E  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11612  005150  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11613  005152  A4D8               	btfss	status,2,c
 11614  005154  D02F               	goto	l23118
 11615                           
 11616                           ; BSR set to: 1
 11617  005156  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11618  005158  A4D8               	btfss	status,2,c
 11619  00515A  D02C               	goto	l23118
 11620                           
 11621                           ; BSR set to: 1
 11622  00515C  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11623  00515E  A4D8               	btfss	status,2,c
 11624  005160  D029               	goto	l23118
 11625                           
 11626                           ; BSR set to: 1
 11627  005162  0E02               	movlw	2
 11628  005164  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11629  005166  A4D8               	btfss	status,2,c
 11630  005168  D025               	goto	l23118
 11631  00516A                     u26980:
 11632                           
 11633                           ; BSR set to: 1
 11634                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11635  00516A  0E04               	movlw	4
 11636  00516C  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11637                           
 11638                           ; BSR set to: 1
 11639                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11640  00516E  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11641  005172  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11642  005176  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11643  00517A  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11644                           
 11645                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11646  00517E  0E00               	movlw	0
 11647  005180  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11648                           
 11649                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11650  005182  0E00               	movlw	0
 11651  005184  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11652                           
 11653                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11654  005186  0E01               	movlw	1
 11655  005188  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11656                           
 11657                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11658  00518A  0E00               	movlw	0
 11659  00518C  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11660                           
 11661                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11662  00518E  0E00               	movlw	0
 11663  005190  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11664  005192  0E28               	movlw	40
 11665  005194  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11666                           
 11667                           ; BSR set to: 1
 11668                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11669  005196  0E00               	movlw	0
 11670  005198  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11671  00519A  0E00               	movlw	0
 11672  00519C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11673  00519E  0E04               	movlw	4
 11674  0051A0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11675  0051A2  0E0F               	movlw	15
 11676  0051A4  EC9F  F04B         	call	_SetSegmentValueIntermitent
 11677                           
 11678                           ; BSR set to: 1
 11679                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11680  0051A8  EC9A  F04D         	call	_StopOrder	;wreg free
 11681                           
 11682                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11683  0051AC  0E01               	movlw	1
 11684  0051AE  0101               	movlb	1	; () banked
 11685  0051B0  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11686                           
 11687                           ;sm_ControlGate_MC50.c: 419:     }
 11688  0051B2  0012               	return	
 11689  0051B4                     l23118:
 11690                           
 11691                           ; BSR set to: 1
 11692  0051B4  0100               	movlb	0	; () banked
 11693  0051B6  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11694  0051B8  B4D8               	btfsc	status,2,c
 11695  0051BA  D012               	goto	u27020
 11696                           
 11697                           ; BSR set to: 0
 11698  0051BC  0101               	movlb	1	; () banked
 11699  0051BE  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11700  0051C0  D025               	goto	l23138
 11701  0051C2  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11702  0051C4  E103               	bnz	u27000
 11703  0051C6  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11704  0051C8  A0D8               	btfss	status,0,c
 11705  0051CA  D020               	goto	l23138
 11706  0051CC                     u27000:
 11707                           
 11708                           ; BSR set to: 1
 11709  0051CC  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11710  0051CE  A4D8               	btfss	status,2,c
 11711  0051D0  D01D               	goto	l23138
 11712                           
 11713                           ; BSR set to: 1
 11714  0051D2  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11715  0051D4  D005               	goto	u27020
 11716  0051D6  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11717  0051D8  E119               	bnz	l23138
 11718  0051DA  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11719  0051DC  B0D8               	btfsc	status,0,c
 11720  0051DE  D016               	goto	l23138
 11721  0051E0                     u27020:
 11722  0051E0  0101               	movlb	1	; () banked
 11723  0051E2  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11724  0051E4  A4D8               	btfss	status,2,c
 11725  0051E6  D012               	goto	l23138
 11726                           
 11727                           ; BSR set to: 1
 11728                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11729  0051E8  0100               	movlb	0	; () banked
 11730  0051EA  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11731  0051EC  B4D8               	btfsc	status,2,c
 11732  0051EE  D002               	goto	l23132
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11736  0051F0  0101               	movlb	1	; () banked
 11737  0051F2  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11738  0051F4                     l23132:
 11739                           
 11740                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11741  0051F4  0E01               	movlw	1
 11742  0051F6  0101               	movlb	1	; () banked
 11743  0051F8  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11744                           
 11745                           ; BSR set to: 1
 11746                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11747  0051FA  0E00               	movlw	0
 11748  0051FC  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11749  0051FE  0E0A               	movlw	10
 11750  005200  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11751                           
 11752                           ; BSR set to: 1
 11753                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11754  005202  0E00               	movlw	0
 11755  005204  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11756  005206  0E1E               	movlw	30
 11757  005208  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11758                           
 11759                           ;sm_ControlGate_MC50.c: 430:     }
 11760  00520A  0012               	return	
 11761  00520C                     l23138:
 11762                           
 11763                           ; BSR set to: 1
 11764  00520C  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11765  00520E  D02D               	goto	l23168
 11766  005210  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11767  005212  E103               	bnz	u27050
 11768  005214  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11769  005216  A0D8               	btfss	status,0,c
 11770  005218  D028               	goto	l23168
 11771  00521A                     u27050:
 11772                           
 11773                           ; BSR set to: 1
 11774  00521A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11775  00521C  A4D8               	btfss	status,2,c
 11776  00521E  D025               	goto	l23168
 11777                           
 11778                           ; BSR set to: 1
 11779                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11780  005220  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11781  005222  A4D8               	btfss	status,2,c
 11782  005224  D005               	goto	l23150
 11783                           
 11784                           ; BSR set to: 1
 11785                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11786  005226  0E00               	movlw	0
 11787  005228  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11788                           
 11789                           ; BSR set to: 1
 11790                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11791  00522A  ECB1  F037         	call	_setPositionInvertionInClosing	;wreg free
 11792  00522E  D768               	goto	l23082
 11793  005230                     l23150:
 11794                           
 11795                           ; BSR set to: 1
 11796  005230  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11797  005232  D005               	goto	u27080
 11798  005234  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11799  005236  E116               	bnz	l23166
 11800  005238  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11801  00523A  B0D8               	btfsc	status,0,c
 11802  00523C  D013               	goto	l23166
 11803  00523E                     u27080:
 11804                           
 11805                           ; BSR set to: 1
 11806                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11807  00523E  ECE5  F04C         	call	_CloseOrder	;wreg free
 11808                           
 11809                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11810  005242  EC58  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11811                           
 11812                           ; BSR set to: 1
 11813                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11814  005246  0E00               	movlw	0
 11815  005248  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11816                           
 11817                           ; BSR set to: 1
 11818                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11819  00524A  0E01               	movlw	1
 11820  00524C  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11821                           
 11822                           ; BSR set to: 1
 11823                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11824  00524E  0E00               	movlw	0
 11825  005250  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11826  005252  0E14               	movlw	20
 11827  005254  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11828                           
 11829                           ; BSR set to: 1
 11830                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11831  005256  0E00               	movlw	0
 11832  005258  6FD2               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11833  00525A  0E28               	movlw	40
 11834  00525C  6FD1               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11835                           
 11836                           ; BSR set to: 1
 11837                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11838  00525E  0E01               	movlw	1
 11839  005260  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11840                           
 11841                           ;sm_ControlGate_MC50.c: 449:         } else
 11842  005262  0012               	return	
 11843  005264                     l23166:
 11844                           
 11845                           ; BSR set to: 1
 11846                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11847  005264  0E00               	movlw	0
 11848  005266  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11849  005268  0012               	return	
 11850  00526A                     l23168:
 11851                           
 11852                           ; BSR set to: 1
 11853  00526A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11854  00526C  A4D8               	btfss	status,2,c
 11855  00526E  D00A               	goto	l23188
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11859  005270  0E00               	movlw	0
 11860  005272  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11861                           
 11862                           ; BSR set to: 1
 11863                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11864  005274  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11865  005276  D7E3               	goto	u27080
 11866  005278  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11867  00527A  E14E               	bnz	l2723
 11868  00527C  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11869  00527E  B0D8               	btfsc	status,0,c
 11870  005280  0012               	return	
 11871  005282  D7DD               	goto	u27080
 11872  005284                     l23188:
 11873                           
 11874                           ; BSR set to: 1
 11875  005284  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11876  005286  A4D8               	btfss	status,2,c
 11877  005288  D018               	goto	l23206
 11878                           
 11879                           ; BSR set to: 1
 11880  00528A  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11881  00528C  D005               	goto	u27120
 11882  00528E  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11883  005290  E114               	bnz	l23206
 11884  005292  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11885  005294  B0D8               	btfsc	status,0,c
 11886  005296  D011               	goto	l23206
 11887  005298                     u27120:
 11888                           
 11889                           ; BSR set to: 1
 11890                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11891  005298  0E02               	movlw	2
 11892  00529A  0100               	movlb	0	; () banked
 11893  00529C  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11894  00529E  B4D8               	btfsc	status,2,c
 11895  0052A0  D007               	goto	l23202
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11899  0052A2  0101               	movlb	1	; () banked
 11900  0052A4  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11901                           
 11902                           ; BSR set to: 1
 11903                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11904  0052A6  0E00               	movlw	0
 11905  0052A8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11906                           
 11907                           ; BSR set to: 1
 11908                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11909  0052AA  EC58  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11910  0052AE  D728               	goto	l23082
 11911  0052B0                     l23202:
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11915  0052B0  EC58  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11916  0052B4                     l23204:
 11917                           
 11918                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11919  0052B4  EC9A  F04D         	call	_StopOrder	;wreg free
 11920  0052B8  0012               	return	
 11921  0052BA                     l23206:
 11922                           
 11923                           ; BSR set to: 1
 11924  0052BA  0100               	movlb	0	; () banked
 11925  0052BC  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11926  0052BE  A4D8               	btfss	status,2,c
 11927  0052C0  D005               	goto	l23212
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11931  0052C2  0E03               	movlw	3
 11932  0052C4  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11933  0052C6  B4D8               	btfsc	status,2,c
 11934  0052C8  0012               	return	
 11935  0052CA  D7F4               	goto	l23204
 11936  0052CC                     l23212:
 11937                           
 11938                           ; BSR set to: 0
 11939  0052CC  0E02               	movlw	2
 11940  0052CE  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11941  0052D0  A4D8               	btfss	status,2,c
 11942  0052D2  D011               	goto	l23224
 11943                           
 11944                           ; BSR set to: 0
 11945  0052D4  0E02               	movlw	2
 11946  0052D6  0101               	movlb	1	; () banked
 11947  0052D8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11948  0052DA  A4D8               	btfss	status,2,c
 11949  0052DC  D00C               	goto	l23224
 11950                           
 11951                           ; BSR set to: 1
 11952  0052DE  0E02               	movlw	2
 11953  0052E0  0100               	movlb	0	; () banked
 11954  0052E2  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11955  0052E4  B4D8               	btfsc	status,2,c
 11956  0052E6  D007               	goto	l23224
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11960  0052E8  EC58  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11964  0052EC  EC9A  F04D         	call	_StopOrder	;wreg free
 11965                           
 11966                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11967  0052F0  EC70  F04E         	call	_InitWalkAutoTime	;wreg free
 11968                           
 11969                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11970  0052F4  0012               	return	
 11971  0052F6                     l23224:
 11972  0052F6  0100               	movlb	0	; () banked
 11973  0052F8  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11974  0052FA  B4D8               	btfsc	status,2,c
 11975  0052FC  D008               	goto	u27210
 11976                           
 11977                           ; BSR set to: 0
 11978  0052FE  0E03               	movlw	3
 11979  005300  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11980  005302  B4D8               	btfsc	status,2,c
 11981  005304  D004               	goto	u27210
 11982                           
 11983                           ; BSR set to: 0
 11984  005306  0E04               	movlw	4
 11985  005308  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11986  00530A  A4D8               	btfss	status,2,c
 11987  00530C  0012               	return	
 11988  00530E                     u27210:
 11989                           
 11990                           ; BSR set to: 0
 11991  00530E  0E02               	movlw	2
 11992  005310  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11993  005312  B4D8               	btfsc	status,2,c
 11994  005314  0012               	return	
 11995  005316  D7CC               	goto	l23202
 11996  005318                     l2723:
 11997  005318  0012               	return		;funcret
 11998  00531A                     __end_of_actionZone_Opening:
 11999                           	callstack 0
 12000                           
 12001 ;; *************** function _setPositionInvertionInOpening *****************
 12002 ;; Defined at:
 12003 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;		None
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;		None
 12008 ;; Return value:  Size  Location     Type
 12009 ;;                  1    wreg      void 
 12010 ;; Registers used:
 12011 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12012 ;; Tracked objects:
 12013 ;;		On entry : 3E/1
 12014 ;;		On exit  : 3F/1
 12015 ;;		Unchanged: 0/0
 12016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12019 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12020 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12021 ;;Total ram usage:        8 bytes
 12022 ;; Hardware stack levels used: 1
 12023 ;; Hardware stack levels required when called: 6
 12024 ;; This function calls:
 12025 ;;		_getTimeDecelaration
 12026 ;; This function is called by:
 12027 ;;		_actionZone_Opening
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text25
 12032  0078B0                     __ptext25:
 12033                           	callstack 0
 12034  0078B0                     _setPositionInvertionInOpening:
 12035                           	callstack 22
 12036                           
 12037                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12038                           
 12039                           ;incstack = 0
 12040  0078B0  0E02               	movlw	2
 12041  0078B2  0100               	movlb	0	; () banked
 12042  0078B4  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12043  0078B6  B4D8               	btfsc	status,2,c
 12044  0078B8  D009               	goto	l21790
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12048  0078BA  0EFE               	movlw	254
 12049  0078BC  0101               	movlb	1	; () banked
 12050  0078BE  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12051  0078C0  0EFF               	movlw	255
 12052  0078C2  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12053  0078C4  0EFF               	movlw	255
 12054  0078C6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12055  0078C8  0EFF               	movlw	255
 12056  0078CA  D006               	goto	L69
 12057  0078CC                     l21790:
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12061  0078CC  0E01               	movlw	1
 12062  0078CE  0101               	movlb	1	; () banked
 12063  0078D0  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12064  0078D2  0E00               	movlw	0
 12065  0078D4  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12066  0078D6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12067  0078D8                     L69:
 12068  0078D8  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12069                           
 12070                           ; BSR set to: 1
 12071                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12072  0078DA  0E03               	movlw	3
 12073  0078DC  ECE4  F03B         	call	_getTimeDecelaration
 12074  0078E0  5029               	movf	?_getTimeDecelaration^0,w,c
 12075  0078E2  0101               	movlb	1	; () banked
 12076  0078E4  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12077  0078E6  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12078  0078E8  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12079  0078EA  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12080  0078EC  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12081  0078EE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12082  0078F0  0A80               	xorlw	128
 12083  0078F2  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12084  0078F4  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12085  0078F6  0A80               	xorlw	128
 12086  0078F8  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12087  0078FA  B0D8               	btfsc	status,0,c
 12088  0078FC  D004               	goto	l21796
 12089                           
 12090                           ; BSR set to: 1
 12091                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12092  0078FE  0E03               	movlw	3
 12093  007900  ECE4  F03B         	call	_getTimeDecelaration
 12094  007904  D015               	goto	L70
 12095  007906                     l21796:
 12096                           
 12097                           ; BSR set to: 1
 12098  007906  0E01               	movlw	1
 12099  007908  ECE4  F03B         	call	_getTimeDecelaration
 12100  00790C  0101               	movlb	1	; () banked
 12101  00790E  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12102  007910  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12103  007912  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12104  007914  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12105  007916  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12106  007918  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12107  00791A  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12108  00791C  0A80               	xorlw	128
 12109  00791E  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12110  007920  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12111  007922  0A80               	xorlw	128
 12112  007924  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12113  007926  B0D8               	btfsc	status,0,c
 12114  007928  D00B               	goto	l21800
 12115                           
 12116                           ; BSR set to: 1
 12117                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12118  00792A  0E01               	movlw	1
 12119  00792C  ECE4  F03B         	call	_getTimeDecelaration
 12120  007930                     L70:
 12121  007930  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12122  007934  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12123  007938  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12124  00793C  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12125  007940                     l21800:
 12126                           
 12127                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12128  007940  0100               	movlb	0	; () banked
 12129  007942  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12130  007944  0D0A               	mullw	10
 12131  007946  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12132  00794A  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12133  00794E  0E00               	movlw	0
 12134  007950  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12135  007952  0EFF               	movlw	255
 12136  007954  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12137  007956  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12138  007958  0101               	movlb	1	; () banked
 12139  00795A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12140  00795C  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12141  00795E  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12142  007960  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12143  007962  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12144  007964  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12145  007966  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12146  007968  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12147  00796A  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12148  00796C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12149  00796E  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12150  007970  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12151  007972  0EC8               	movlw	200
 12152  007974  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12153  007976  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12154  007978  0E00               	movlw	0
 12155  00797A  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12156  00797C  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12157  00797E  0E00               	movlw	0
 12158  007980  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12159  007982  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12160  007984  0E00               	movlw	0
 12161  007986  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12162  007988  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12163                           
 12164                           ; BSR set to: 1
 12165  00798A  0012               	return		;funcret
 12166  00798C                     __end_of_setPositionInvertionInOpening:
 12167                           	callstack 0
 12168                           
 12169 ;; *************** function _controlVelocity *****************
 12170 ;; Defined at:
 12171 ;;		line 527 in file "outputs_MC50.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;		None
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;		None
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  1    wreg      void 
 12178 ;; Registers used:
 12179 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12180 ;; Tracked objects:
 12181 ;;		On entry : 3E/1
 12182 ;;		On exit  : 3E/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12187 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12189 ;;Total ram usage:        1 bytes
 12190 ;; Hardware stack levels used: 1
 12191 ;; Hardware stack levels required when called: 7
 12192 ;; This function calls:
 12193 ;;		_ControlDecelarationFactor
 12194 ;;		_InitSoftStop
 12195 ;;		_getStateOpenPosition
 12196 ;;		_getTimeDecelaration
 12197 ;; This function is called by:
 12198 ;;		_main
 12199 ;;		_actionZone_Opening
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203                           	psect	text26
 12204  005786                     __ptext26:
 12205                           	callstack 0
 12206  005786                     _controlVelocity:
 12207                           	callstack 21
 12208                           
 12209                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12210                           
 12211                           ; BSR set to: 1
 12212                           ;incstack = 0
 12213  005786  0101               	movlb	1	; () banked
 12214  005788  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12215  00578A  A4D8               	btfss	status,2,c
 12216  00578C  D017               	goto	l21598
 12217                           
 12218                           ; BSR set to: 1
 12219  00578E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12220  005790  A4D8               	btfss	status,2,c
 12221  005792  D014               	goto	l21598
 12222                           
 12223                           ; BSR set to: 1
 12224                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12225  005794  517B               	movf	_powerControl_st& (0+255),w,b
 12226  005796  A4D8               	btfss	status,2,c
 12227  005798  D008               	goto	l21592
 12228                           
 12229                           ; BSR set to: 1
 12230                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12231  00579A  0E00               	movlw	0
 12232  00579C  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12233  00579E  0E0A               	movlw	10
 12234  0057A0  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12235                           
 12236                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12237  0057A2  0E00               	movlw	0
 12238  0057A4  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12239  0057A6  0E14               	movlw	20
 12240  0057A8  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12241  0057AA                     l21592:
 12242                           
 12243                           ; BSR set to: 1
 12244                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12245  0057AA  EC13  F04E         	call	_ControlDecelarationFactor	;wreg free
 12246                           
 12247                           ; BSR set to: 1
 12248                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12249  0057AE  0E01               	movlw	1
 12250  0057B0  6F7B               	movwf	_powerControl_st& (0+255),b
 12251                           
 12252                           ; BSR set to: 1
 12253                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12254  0057B2  0E00               	movlw	0
 12255  0057B4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12256  0057B6  0E00               	movlw	0
 12257  0057B8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12258                           
 12259                           ;outputs_MC50.c: 541:     }
 12260  0057BA  0012               	return	
 12261  0057BC                     l21598:
 12262                           
 12263                           ; BSR set to: 1
 12264  0057BC  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12265  0057BE  B4D8               	btfsc	status,2,c
 12266  0057C0  D003               	goto	u24960
 12267                           
 12268                           ; BSR set to: 1
 12269  0057C2  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12270  0057C4  A4D8               	btfss	status,2,c
 12271  0057C6  D007               	goto	l21604
 12272  0057C8                     u24960:
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12276  0057C8  0E00               	movlw	0
 12277  0057CA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12278  0057CC  0E00               	movlw	0
 12279  0057CE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12280                           
 12281                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12282  0057D0  0E00               	movlw	0
 12283  0057D2  6F7B               	movwf	_powerControl_st& (0+255),b
 12284                           
 12285                           ;outputs_MC50.c: 547:     }
 12286  0057D4  0012               	return	
 12287  0057D6                     l21604:
 12288                           
 12289                           ; BSR set to: 1
 12290  0057D6  0E03               	movlw	3
 12291  0057D8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12292  0057DA  A4D8               	btfss	status,2,c
 12293  0057DC  D068               	goto	l21652
 12294                           
 12295                           ; BSR set to: 1
 12296  0057DE  0E03               	movlw	3
 12297  0057E0  ECE4  F03B         	call	_getTimeDecelaration
 12298  0057E4  5029               	movf	?_getTimeDecelaration^0,w,c
 12299  0057E6  0101               	movlb	1	; () banked
 12300  0057E8  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12301  0057EA  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12302  0057EC  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12303  0057EE  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12304  0057F0  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12305  0057F2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12306  0057F4  0A80               	xorlw	128
 12307  0057F6  0100               	movlb	0	; () banked
 12308  0057F8  6FDA               	movwf	??_controlVelocity& (0+255),b
 12309  0057FA  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12310  0057FC  0A80               	xorlw	128
 12311  0057FE  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12312  005800  A0D8               	btfss	status,0,c
 12313  005802  D004               	goto	u24990
 12314                           
 12315                           ; BSR set to: 0
 12316  005804  0101               	movlb	1	; () banked
 12317  005806  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12318  005808  A4D8               	btfss	status,2,c
 12319  00580A  D051               	goto	l21652
 12320  00580C                     u24990:
 12321  00580C  0100               	movlb	0	; () banked
 12322  00580E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12323  005810  B4D8               	btfsc	status,2,c
 12324  005812  D004               	goto	u25010
 12325                           
 12326                           ; BSR set to: 0
 12327  005814  0101               	movlb	1	; () banked
 12328  005816  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12329  005818  B4D8               	btfsc	status,2,c
 12330  00581A  D00C               	goto	u25030
 12331  00581C                     u25010:
 12332  00581C  0101               	movlb	1	; () banked
 12333  00581E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12334  005820  D005               	goto	u25020
 12335  005822  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12336  005824  E144               	bnz	l21652
 12337  005826  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12338  005828  B0D8               	btfsc	status,0,c
 12339  00582A  D041               	goto	l21652
 12340  00582C                     u25020:
 12341                           
 12342                           ; BSR set to: 1
 12343  00582C  0100               	movlb	0	; () banked
 12344  00582E  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12345  005830  B4D8               	btfsc	status,2,c
 12346  005832  D03D               	goto	l21652
 12347  005834                     u25030:
 12348                           
 12349                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12350  005834  0101               	movlb	1	; () banked
 12351  005836  517B               	movf	_powerControl_st& (0+255),w,b
 12352  005838  A4D8               	btfss	status,2,c
 12353  00583A  D022               	goto	l21638
 12354                           
 12355                           ; BSR set to: 1
 12356  00583C  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12357  00583E  A4D8               	btfss	status,2,c
 12358  005840  D01F               	goto	l21638
 12359                           
 12360                           ; BSR set to: 1
 12361                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12362  005842  0E00               	movlw	0
 12363  005844  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12364  005846  0E14               	movlw	20
 12365  005848  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12366                           
 12367                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12368  00584A  0100               	movlb	0	; () banked
 12369  00584C  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12370  00584E  B4D8               	btfsc	status,2,c
 12371  005850  D008               	goto	l21628
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12375  005852  0E00               	movlw	0
 12376  005854  0101               	movlb	1	; () banked
 12377  005856  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12378                           
 12379                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12380  005858  0E01               	movlw	1
 12381  00585A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12382                           
 12383                           ; BSR set to: 1
 12384                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12385  00585C  EC63  F049         	call	_InitSoftStop	;wreg free
 12386                           
 12387                           ;outputs_MC50.c: 563:                     }
 12388  005860  D00F               	goto	l21638
 12389  005862                     l21628:
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12393  005862  0E00               	movlw	0
 12394  005864  0101               	movlb	1	; () banked
 12395  005866  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12396  005868  0E0A               	movlw	10
 12397  00586A  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12398                           
 12399                           ; BSR set to: 1
 12400                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12401  00586C  EC13  F04E         	call	_ControlDecelarationFactor	;wreg free
 12402                           
 12403                           ; BSR set to: 1
 12404                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12405  005870  0E01               	movlw	1
 12406  005872  6F7B               	movwf	_powerControl_st& (0+255),b
 12407                           
 12408                           ; BSR set to: 1
 12409                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12410  005874  0E00               	movlw	0
 12411  005876  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12412  005878  0E00               	movlw	0
 12413  00587A  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12417  00587C  0E00               	movlw	0
 12418  00587E  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12419  005880                     l21638:
 12420                           
 12421                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12422  005880  0101               	movlb	1	; () banked
 12423  005882  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12424  005884  D005               	goto	u25070
 12425  005886  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12426  005888  E102               	bnz	u25071
 12427  00588A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12428  00588C  B0D8               	btfsc	status,0,c
 12429  00588E                     u25071:
 12430  00588E  0012               	return	
 12431  005890                     u25070:
 12432                           
 12433                           ; BSR set to: 1
 12434  005890  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12435  005892  A4D8               	btfss	status,2,c
 12436  005894  0012               	return	
 12437                           
 12438                           ; BSR set to: 1
 12439  005896  0100               	movlb	0	; () banked
 12440  005898  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12441  00589A  B4D8               	btfsc	status,2,c
 12442  00589C  0012               	return	
 12443                           
 12444                           ; BSR set to: 0
 12445                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12446  00589E  0E00               	movlw	0
 12447  0058A0  0101               	movlb	1	; () banked
 12448  0058A2  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12449  0058A4  0E02               	movlw	2
 12450  0058A6  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12451                           
 12452                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12453  0058A8  0E00               	movlw	0
 12454  0058AA  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12455  0058AC  D77E               	goto	l21592
 12456  0058AE                     l21652:
 12457  0058AE  0101               	movlb	1	; () banked
 12458  0058B0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12459  0058B2  ECD7  F038         	call	_getStateOpenPosition
 12460  0058B6  06E8               	decf	wreg,f,c
 12461  0058B8  A4D8               	btfss	status,2,c
 12462  0058BA  D042               	goto	l21694
 12463                           
 12464                           ; BSR set to: 0
 12465  0058BC  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12466  0058BE  B4D8               	btfsc	status,2,c
 12467  0058C0  D004               	goto	u25120
 12468                           
 12469                           ; BSR set to: 0
 12470  0058C2  0101               	movlb	1	; () banked
 12471  0058C4  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12472  0058C6  B4D8               	btfsc	status,2,c
 12473  0058C8  D00C               	goto	u25140
 12474  0058CA                     u25120:
 12475  0058CA  0101               	movlb	1	; () banked
 12476  0058CC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12477  0058CE  D005               	goto	u25130
 12478  0058D0  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12479  0058D2  E136               	bnz	l21694
 12480  0058D4  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12481  0058D6  B0D8               	btfsc	status,0,c
 12482  0058D8  D033               	goto	l21694
 12483  0058DA                     u25130:
 12484                           
 12485                           ; BSR set to: 1
 12486  0058DA  0100               	movlb	0	; () banked
 12487  0058DC  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12488  0058DE  B4D8               	btfsc	status,2,c
 12489  0058E0  D02F               	goto	l21694
 12490  0058E2                     u25140:
 12491                           
 12492                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12493  0058E2  0101               	movlb	1	; () banked
 12494  0058E4  517B               	movf	_powerControl_st& (0+255),w,b
 12495  0058E6  A4D8               	btfss	status,2,c
 12496  0058E8  D022               	goto	l21680
 12497                           
 12498                           ; BSR set to: 1
 12499  0058EA  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12500  0058EC  A4D8               	btfss	status,2,c
 12501  0058EE  D01F               	goto	l21680
 12502                           
 12503                           ; BSR set to: 1
 12504                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12505  0058F0  0E00               	movlw	0
 12506  0058F2  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12507  0058F4  0E14               	movlw	20
 12508  0058F6  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12509                           
 12510                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12511  0058F8  0100               	movlb	0	; () banked
 12512  0058FA  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12513  0058FC  B4D8               	btfsc	status,2,c
 12514  0058FE  D008               	goto	l21672
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12518  005900  0E00               	movlw	0
 12519  005902  0101               	movlb	1	; () banked
 12520  005904  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12521                           
 12522                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12523  005906  0E01               	movlw	1
 12524  005908  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12525                           
 12526                           ; BSR set to: 1
 12527                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12528  00590A  EC63  F049         	call	_InitSoftStop	;wreg free
 12529                           
 12530                           ;outputs_MC50.c: 598:             }else{
 12531  00590E  D00F               	goto	l21680
 12532  005910                     l21672:
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12536  005910  0E00               	movlw	0
 12537  005912  0101               	movlb	1	; () banked
 12538  005914  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12539  005916  0E0A               	movlw	10
 12540  005918  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12541                           
 12542                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12543  00591A  0E00               	movlw	0
 12544  00591C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12545                           
 12546                           ; BSR set to: 1
 12547                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12548  00591E  EC13  F04E         	call	_ControlDecelarationFactor	;wreg free
 12549                           
 12550                           ; BSR set to: 1
 12551                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12552  005922  0E01               	movlw	1
 12553  005924  6F7B               	movwf	_powerControl_st& (0+255),b
 12554                           
 12555                           ; BSR set to: 1
 12556                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12557  005926  0E00               	movlw	0
 12558  005928  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12559  00592A  0E00               	movlw	0
 12560  00592C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12561  00592E                     l21680:
 12562                           
 12563                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12564  00592E  0101               	movlb	1	; () banked
 12565  005930  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12566  005932  D7AE               	goto	u25070
 12567  005934  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12568  005936  E135               	bnz	l2311
 12569  005938  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12570  00593A  B0D8               	btfsc	status,0,c
 12571  00593C  0012               	return	
 12572  00593E  D7A8               	goto	u25070
 12573  005940                     l21694:
 12574  005940  0101               	movlb	1	; () banked
 12575  005942  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12576  005944  D012               	goto	l21702
 12577  005946  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12578  005948  E103               	bnz	u25210
 12579  00594A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12580  00594C  A0D8               	btfss	status,0,c
 12581  00594E  D00D               	goto	l21702
 12582  005950                     u25210:
 12583                           
 12584                           ; BSR set to: 1
 12585  005950  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12586  005952  B4D8               	btfsc	status,2,c
 12587  005954  D00A               	goto	l21702
 12588                           
 12589                           ; BSR set to: 1
 12590                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12591  005956  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12592  005958  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12593  00595A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12594  00595C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12595  00595E  A0D8               	btfss	status,0,c
 12596  005960  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12597  005962  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12598  005964                     l21700:
 12599                           
 12600                           ; BSR set to: 1
 12601                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12602  005964  0E00               	movlw	0
 12603  005966  6F7B               	movwf	_powerControl_st& (0+255),b
 12604                           
 12605                           ;outputs_MC50.c: 623:     }
 12606  005968  0012               	return	
 12607  00596A                     l21702:
 12608                           
 12609                           ; BSR set to: 1
 12610  00596A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12611  00596C  D010               	goto	l21710
 12612  00596E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12613  005970  E103               	bnz	u25230
 12614  005972  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12615  005974  A0D8               	btfss	status,0,c
 12616  005976  D00B               	goto	l21710
 12617  005978                     u25230:
 12618                           
 12619                           ; BSR set to: 1
 12620  005978  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12621  00597A  B4D8               	btfsc	status,2,c
 12622  00597C  D008               	goto	l21710
 12623                           
 12624                           ; BSR set to: 1
 12625                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12626  00597E  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12627  005980  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12628  005982  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12629  005984  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12630  005986  A0D8               	btfss	status,0,c
 12631  005988  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12632  00598A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12633  00598C  D7EB               	goto	l21700
 12634  00598E                     l21710:
 12635                           
 12636                           ; BSR set to: 1
 12637                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12638  00598E  0E00               	movlw	0
 12639  005990  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12640  005992  0E00               	movlw	0
 12641  005994  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12642                           
 12643                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12644  005996  0E00               	movlw	0
 12645  005998  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12646  00599A  0E00               	movlw	0
 12647  00599C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12648                           
 12649                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12650  00599E  0E00               	movlw	0
 12651  0059A0  6F7B               	movwf	_powerControl_st& (0+255),b
 12652  0059A2                     l2311:
 12653  0059A2  0012               	return		;funcret
 12654  0059A4                     __end_of_controlVelocity:
 12655                           	callstack 0
 12656                           
 12657 ;; *************** function _getStateOpenPosition *****************
 12658 ;; Defined at:
 12659 ;;		line 470 in file "outputs_MC50.c"
 12660 ;; Parameters:    Size  Location     Type
 12661 ;;  stateMotor      1    wreg     enum E10381
 12662 ;; Auto vars:     Size  Location     Type
 12663 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12664 ;;  state           1    0[BANK0 ] _Bool 
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      _Bool 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12669 ;; Tracked objects:
 12670 ;;		On entry : 3F/1
 12671 ;;		On exit  : 3F/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12676 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12677 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12678 ;;Total ram usage:       11 bytes
 12679 ;; Hardware stack levels used: 1
 12680 ;; Hardware stack levels required when called: 6
 12681 ;; This function calls:
 12682 ;;		___lmul
 12683 ;;		_getTimeDecelaration
 12684 ;; This function is called by:
 12685 ;;		_controlVelocity
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text27
 12690  0071AE                     __ptext27:
 12691                           	callstack 0
 12692  0071AE                     _getStateOpenPosition:
 12693                           	callstack 21
 12694                           
 12695                           ;incstack = 0
 12696                           ;getStateOpenPosition@stateMotor stored from wreg
 12697  0071AE  0100               	movlb	0	; () banked
 12698  0071B0  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12699                           
 12700                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12701  0071B2  0E00               	movlw	0
 12702  0071B4  0100               	movlb	0	; () banked
 12703  0071B6  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12707  0071B8  0101               	movlb	1	; () banked
 12708  0071BA  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12709  0071BC  A4D8               	btfss	status,2,c
 12710  0071BE  D002               	goto	l20952
 12711  0071C0                     u24080:
 12712                           
 12713                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12714  0071C0  0E01               	movlw	1
 12715  0071C2  D046               	goto	L71
 12716  0071C4                     l20952:
 12717                           
 12718                           ; BSR set to: 1
 12719  0071C4  0100               	movlb	0	; () banked
 12720  0071C6  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12721  0071C8  0D14               	mullw	20
 12722  0071CA  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12723  0071CE  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12724  0071D2  0E00               	movlw	0
 12725  0071D4  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12726  0071D6  0EFF               	movlw	255
 12727  0071D8  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12728  0071DA  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12729  0071DC  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12730  0071DE  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12731  0071E0  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12732  0071E2  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12733  0071E4  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12734  0071E6  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12735  0071E8  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12736  0071EA  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12737  0071EC  B0D8               	btfsc	status,0,c
 12738  0071EE  D033               	goto	l20966
 12739                           
 12740                           ; BSR set to: 0
 12741  0071F0  0E02               	movlw	2
 12742  0071F2  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12743  0071F4  A4D8               	btfss	status,2,c
 12744  0071F6  D02F               	goto	l20966
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12748  0071F8  90D8               	bcf	status,0,c
 12749  0071FA  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12750  0071FC  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12751  0071FE  D001               	goto	l20960
 12752  007200  D7DF               	goto	u24080
 12753  007202                     l20960:
 12754                           
 12755                           ; BSR set to: 0
 12756  007202  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12757  007204  0D14               	mullw	20
 12758  007206  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12759  00720A  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12760  00720E  0E00               	movlw	0
 12761  007210  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12762  007212  0EFF               	movlw	255
 12763  007214  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12764  007216  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12765  007218  0ED8               	movlw	216
 12766  00721A  2432               	addwf	??_getStateOpenPosition^0,w,c
 12767  00721C  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12768  00721E  0EFF               	movlw	255
 12769  007220  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12770  007222  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12771  007224  0EFF               	movlw	255
 12772  007226  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12773  007228  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12774  00722A  0EFF               	movlw	255
 12775  00722C  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12776  00722E  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12777  007230  0101               	movlb	1	; () banked
 12778  007232  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12779  007234  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12780  007236  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12781  007238  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12782  00723A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12783  00723C  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12784  00723E  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12785  007240  0A80               	xorlw	128
 12786  007242  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12787  007244  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12788  007246  0A80               	xorlw	128
 12789  007248  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12790  00724A  A0D8               	btfss	status,0,c
 12791  00724C  D7B9               	goto	u24080
 12792                           
 12793                           ; BSR set to: 1
 12794                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12795  00724E  0E00               	movlw	0
 12796  007250                     L71:
 12797  007250  0100               	movlb	0	; () banked
 12798  007252  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12799  007254  D032               	goto	l2254
 12800  007256                     l20966:
 12801                           
 12802                           ; BSR set to: 0
 12803  007256  0E02               	movlw	2
 12804  007258  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12805  00725A  B4D8               	btfsc	status,2,c
 12806  00725C  D003               	goto	u24140
 12807                           
 12808                           ; BSR set to: 0
 12809  00725E  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12810  007260  A4D8               	btfss	status,2,c
 12811  007262  D02B               	goto	l2254
 12812  007264                     u24140:
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12816  007264  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12817  007266  6E1D               	movwf	___lmul@multiplier^0,c
 12818  007268  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12819  00726A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12820  00726C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12821  00726E  0E0A               	movlw	10
 12822  007270  6E21               	movwf	___lmul@multiplicand^0,c
 12823  007272  0E00               	movlw	0
 12824  007274  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12825  007276  0E00               	movlw	0
 12826  007278  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12827  00727A  0E00               	movlw	0
 12828  00727C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12829  00727E  EC1C  F048         	call	___lmul	;wreg free
 12830  007282  501D               	movf	?___lmul^0,w,c
 12831  007284  0100               	movlb	0	; () banked
 12832  007286  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12833  007288  501E               	movf	(?___lmul+1)^0,w,c
 12834  00728A  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12835  00728C  501F               	movf	(?___lmul+2)^0,w,c
 12836  00728E  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12837  007290  5020               	movf	(?___lmul+3)^0,w,c
 12838  007292  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12839  007294  A0D8               	btfss	status,0,c
 12840  007296  D794               	goto	u24080
 12841                           
 12842                           ; BSR set to: 0
 12843  007298  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12844  00729A  ECE4  F03B         	call	_getTimeDecelaration
 12845  00729E  0101               	movlb	1	; () banked
 12846  0072A0  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12847  0072A2  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12848  0072A4  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12849  0072A6  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12850  0072A8  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12851  0072AA  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12852  0072AC  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12853  0072AE  0A80               	xorlw	128
 12854  0072B0  6E32               	movwf	??_getStateOpenPosition^0,c
 12855  0072B2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12856  0072B4  0A80               	xorlw	128
 12857  0072B6  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12858  0072B8  D7C8               	goto	L72
 12859  0072BA                     l2254:
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;outputs_MC50.c: 507:     return state;
 12863  0072BA  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12864                           
 12865                           ; BSR set to: 0
 12866  0072BC  0012               	return		;funcret
 12867  0072BE                     __end_of_getStateOpenPosition:
 12868                           	callstack 0
 12869                           
 12870 ;; *************** function _InitSoftStop *****************
 12871 ;; Defined at:
 12872 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;		None
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;		None
 12877 ;; Return value:  Size  Location     Type
 12878 ;;                  1    wreg      void 
 12879 ;; Registers used:
 12880 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12881 ;; Tracked objects:
 12882 ;;		On entry : 3F/1
 12883 ;;		On exit  : 3E/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12890 ;;Total ram usage:        1 bytes
 12891 ;; Hardware stack levels used: 1
 12892 ;; Hardware stack levels required when called: 5
 12893 ;; This function calls:
 12894 ;;		_GetMotorPower
 12895 ;; This function is called by:
 12896 ;;		_controlVelocity
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text28
 12901  0092C6                     __ptext28:
 12902                           	callstack 0
 12903  0092C6                     _InitSoftStop:
 12904                           	callstack 22
 12905                           
 12906                           ; BSR set to: 1
 12907                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;incstack = 0
 12911  0092C6  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12912  0092C8  B4D8               	btfsc	status,2,c
 12913  0092CA  D003               	goto	u24180
 12914                           
 12915                           ; BSR set to: 1
 12916  0092CC  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12917  0092CE  A4D8               	btfss	status,2,c
 12918  0092D0  0012               	return	
 12919  0092D2                     u24180:
 12920                           
 12921                           ; BSR set to: 1
 12922  0092D2  0100               	movlb	0	; () banked
 12923  0092D4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12924  0092D6  B4D8               	btfsc	status,2,c
 12925  0092D8  0012               	return	
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12929  0092DA  0E00               	movlw	0
 12930  0092DC  0101               	movlb	1	; () banked
 12931  0092DE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12932  0092E0  0E00               	movlw	0
 12933  0092E2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12934                           
 12935                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12936  0092E4  0E00               	movlw	0
 12937  0092E6  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12938  0092E8  0E00               	movlw	0
 12939  0092EA  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12940                           
 12941                           ; BSR set to: 1
 12942                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12943  0092EC  EC2C  F03D         	call	_GetMotorPower	;wreg free
 12944  0092F0  6E14               	movwf	??_InitSoftStop^0,c
 12945  0092F2  5014               	movf	??_InitSoftStop^0,w,c
 12946  0092F4  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12947  0092F6  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12948                           
 12949                           ; BSR set to: 1
 12950                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12951  0092F8  0E01               	movlw	1
 12952  0092FA  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12953  0092FC  6FB7               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12954  0092FE  0E00               	movlw	0
 12955  009300  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12956  009302  6FB8               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12957                           
 12958                           ; BSR set to: 1
 12959                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12960  009304  0100               	movlb	0	; () banked
 12961  009306  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12962  009308  080A               	sublw	10
 12963  00930A  0101               	movlb	1	; () banked
 12964  00930C  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12965  00930E  0012               	return		;funcret
 12966  009310                     __end_of_InitSoftStop:
 12967                           	callstack 0
 12968                           
 12969 ;; *************** function _ControlDecelarationFactor *****************
 12970 ;; Defined at:
 12971 ;;		line 463 in file "outputs_MC50.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, status,2, status,0, prodl, prodh
 12980 ;; Tracked objects:
 12981 ;;		On entry : 3E/1
 12982 ;;		On exit  : 3F/1
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12989 ;;Total ram usage:        0 bytes
 12990 ;; Hardware stack levels used: 1
 12991 ;; Hardware stack levels required when called: 4
 12992 ;; This function calls:
 12993 ;;		Nothing
 12994 ;; This function is called by:
 12995 ;;		_controlVelocity
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text29
 13000  009C26                     __ptext29:
 13001                           	callstack 0
 13002  009C26                     _ControlDecelarationFactor:
 13003                           	callstack 23
 13004                           
 13005                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13006                           
 13007                           ;incstack = 0
 13008  009C26  0E01               	movlw	1
 13009  009C28  0101               	movlb	1	; () banked
 13010  009C2A  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13011                           
 13012                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13013  009C2C  0E02               	movlw	2
 13014  009C2E  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13015                           
 13016                           ; BSR set to: 1
 13017                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13018  009C30  0100               	movlb	0	; () banked
 13019  009C32  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13020  009C34  0101               	movlb	1	; () banked
 13021  009C36  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13022  009C38  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13023                           
 13024                           ; BSR set to: 1
 13025  009C3C  0012               	return		;funcret
 13026  009C3E                     __end_of_ControlDecelarationFactor:
 13027                           	callstack 0
 13028                           
 13029 ;; *************** function _actionZone_Opened *****************
 13030 ;; Defined at:
 13031 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;		None
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13036 ;;  securityClos    1   31[COMRAM] enum E10397
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  1    wreg      void 
 13039 ;; Registers used:
 13040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13041 ;; Tracked objects:
 13042 ;;		On entry : 3F/0
 13043 ;;		On exit  : 3E/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13050 ;;Total ram usage:        2 bytes
 13051 ;; Hardware stack levels used: 1
 13052 ;; Hardware stack levels required when called: 7
 13053 ;; This function calls:
 13054 ;;		_CloseOrder
 13055 ;;		_GetOpenOrder
 13056 ;;		_GetSecurityStateInClosing
 13057 ;;		_InitFullAutoTime
 13058 ;;		_InitWalkAutoTime
 13059 ;;		_OpenFullOrder
 13060 ;;		_OpenWalkOrder
 13061 ;;		_VerifyFollowMe
 13062 ;; This function is called by:
 13063 ;;		_sm_execute_ControlGate
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text30
 13068  0059A4                     __ptext30:
 13069                           	callstack 0
 13070  0059A4                     _actionZone_Opened:
 13071                           	callstack 22
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13075                           
 13076                           ; BSR set to: 1
 13077                           ;incstack = 0
 13078  0059A4  ECF9  F03E         	call	_GetSecurityStateInClosing	;wreg free
 13079  0059A8  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13080                           
 13081                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13082  0059AA  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13083  0059AC  B4D8               	btfsc	status,2,c
 13084  0059AE  D007               	goto	l23244
 13085  0059B0  0101               	movlb	1	; () banked
 13086  0059B2  5192               	movf	_Abertura_pedonal& (0+255),w,b
 13087  0059B4  A4D8               	btfss	status,2,c
 13088  0059B6  D003               	goto	l23244
 13089                           
 13090                           ; BSR set to: 1
 13091                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13092  0059B8  ECEC  F04D         	call	_InitFullAutoTime	;wreg free
 13093                           
 13094                           ;sm_ControlGate_MC50.c: 519:     }
 13095  0059BC  D008               	goto	l2727
 13096  0059BE                     l23244:
 13097  0059BE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13098  0059C0  B4D8               	btfsc	status,2,c
 13099  0059C2  D005               	goto	l2727
 13100  0059C4  0101               	movlb	1	; () banked
 13101  0059C6  0592               	decf	_Abertura_pedonal& (0+255),w,b
 13102  0059C8  B4D8               	btfsc	status,2,c
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13106  0059CA  EC70  F04E         	call	_InitWalkAutoTime	;wreg free
 13107  0059CE                     l2727:
 13108                           
 13109                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13110  0059CE  ECB2  F02E         	call	_GetOpenOrder	;wreg free
 13111  0059D2  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13112                           
 13113                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13114  0059D4  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13115  0059D6  EC44  F04D         	call	_VerifyFollowMe
 13116                           
 13117                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13118  0059DA  B28E               	btfsc	142,1,c	;volatile
 13119  0059DC  D013               	goto	l2729
 13120  0059DE  0100               	movlb	0	; () banked
 13121  0059E0  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13122  0059E2  B4D8               	btfsc	status,2,c
 13123  0059E4  D00F               	goto	l2729
 13124                           
 13125                           ; BSR set to: 0
 13126  0059E6  0101               	movlb	1	; () banked
 13127  0059E8  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13128  0059EA  B4D8               	btfsc	status,2,c
 13129  0059EC  D00B               	goto	l2729
 13130                           
 13131                           ; BSR set to: 1
 13132  0059EE  0E35               	movlw	53
 13133  0059F0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13134  0059F2  B4D8               	btfsc	status,2,c
 13135  0059F4  D007               	goto	l2729
 13136                           
 13137                           ; BSR set to: 1
 13138  0059F6  0E02               	movlw	2
 13139  0059F8  0100               	movlb	0	; () banked
 13140  0059FA  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13141  0059FC  A4D8               	btfss	status,2,c
 13142  0059FE  D002               	goto	l2729
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13146  005A00  0E00               	movlw	0
 13147  005A02  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13148  005A04                     l2729:
 13149                           
 13150                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13151  005A04  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13152  005A06  B4D8               	btfsc	status,2,c
 13153  005A08  D05D               	goto	l2730
 13154                           
 13155                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13156  005A0A  0E00               	movlw	0
 13157  005A0C  0101               	movlb	1	; () banked
 13158  005A0E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13159  005A10  0E3C               	movlw	60
 13160  005A12  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13161                           
 13162                           ; BSR set to: 1
 13163                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13164  005A14  0E02               	movlw	2
 13165  005A16  0100               	movlb	0	; () banked
 13166  005A18  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13167  005A1A  A4D8               	btfss	status,2,c
 13168  005A1C  D00D               	goto	l23276
 13169                           
 13170                           ; BSR set to: 0
 13171  005A1E  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13172  005A20  A4D8               	btfss	status,2,c
 13173  005A22  D00A               	goto	l23276
 13174                           
 13175                           ; BSR set to: 0
 13176  005A24  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13177  005A26  B4D8               	btfsc	status,2,c
 13178  005A28  D004               	goto	u27360
 13179                           
 13180                           ; BSR set to: 0
 13181  005A2A  0E04               	movlw	4
 13182  005A2C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13183  005A2E  A4D8               	btfss	status,2,c
 13184  005A30  D003               	goto	l23276
 13185  005A32                     u27360:
 13186                           
 13187                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13188  005A32  ECE5  F04C         	call	_CloseOrder	;wreg free
 13189                           
 13190                           ;sm_ControlGate_MC50.c: 546:         }
 13191  005A36  0012               	return	
 13192  005A38                     l23276:
 13193                           
 13194                           ; BSR set to: 0
 13195  005A38  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13196  005A3A  B4D8               	btfsc	status,2,c
 13197  005A3C  D014               	goto	l23290
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13201  005A3E  0E03               	movlw	3
 13202  005A40  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13203  005A42  A4D8               	btfss	status,2,c
 13204  005A44  D00B               	goto	l23286
 13205                           
 13206                           ; BSR set to: 0
 13207  005A46  0101               	movlb	1	; () banked
 13208  005A48  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13209  005A4A  A4D8               	btfss	status,2,c
 13210  005A4C  D007               	goto	l23286
 13211                           
 13212                           ; BSR set to: 1
 13213  005A4E  0E04               	movlw	4
 13214  005A50  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13215  005A52  B4D8               	btfsc	status,2,c
 13216  005A54  D003               	goto	l23286
 13217  005A56                     u27400:
 13218                           
 13219                           ; BSR set to: 1
 13220                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13221  005A56  ECF8  F04C         	call	_OpenFullOrder	;wreg free
 13222                           
 13223                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13224  005A5A  0012               	return	
 13225  005A5C                     l23286:
 13226  005A5C  0E04               	movlw	4
 13227  005A5E  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13228  005A60  A4D8               	btfss	status,2,c
 13229  005A62  0012               	return	
 13230  005A64  D7E6               	goto	u27360
 13231  005A66                     l23290:
 13232                           
 13233                           ; BSR set to: 0
 13234  005A66  0E03               	movlw	3
 13235  005A68  0101               	movlb	1	; () banked
 13236  005A6A  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13237  005A6C  A4D8               	btfss	status,2,c
 13238  005A6E  D009               	goto	l23298
 13239                           
 13240                           ; BSR set to: 1
 13241  005A70  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13242  005A72  A4D8               	btfss	status,2,c
 13243  005A74  D006               	goto	l23298
 13244  005A76                     u27430:
 13245                           
 13246                           ; BSR set to: 1
 13247                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13248  005A76  ECF8  F04C         	call	_OpenFullOrder	;wreg free
 13249  005A7A                     l23296:
 13250                           
 13251                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13252  005A7A  0E00               	movlw	0
 13253  005A7C  0101               	movlb	1	; () banked
 13254  005A7E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13255                           
 13256                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13257  005A80  0012               	return	
 13258  005A82                     l23298:
 13259                           
 13260                           ; BSR set to: 1
 13261  005A82  0E03               	movlw	3
 13262  005A84  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13263  005A86  A4D8               	btfss	status,2,c
 13264  005A88  D007               	goto	l23306
 13265                           
 13266                           ; BSR set to: 1
 13267  005A8A  0E02               	movlw	2
 13268  005A8C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13269  005A8E  A4D8               	btfss	status,2,c
 13270  005A90  D003               	goto	l23306
 13271                           
 13272                           ; BSR set to: 1
 13273                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13274  005A92  EC76  F045         	call	_OpenWalkOrder	;wreg free
 13275  005A96  D7F1               	goto	l23296
 13276  005A98                     l23306:
 13277                           
 13278                           ; BSR set to: 1
 13279  005A98  0E03               	movlw	3
 13280  005A9A  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13281  005A9C  A4D8               	btfss	status,2,c
 13282  005A9E  D005               	goto	l23316
 13283                           
 13284                           ; BSR set to: 1
 13285                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13286  005AA0  0E04               	movlw	4
 13287  005AA2  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13288  005AA4  B4D8               	btfsc	status,2,c
 13289  005AA6  0012               	return	
 13290  005AA8  D7E6               	goto	u27430
 13291  005AAA                     l23316:
 13292                           
 13293                           ; BSR set to: 1
 13294  005AAA  0100               	movlb	0	; () banked
 13295  005AAC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13296  005AAE  B4D8               	btfsc	status,2,c
 13297  005AB0  D007               	goto	l23322
 13298                           
 13299                           ; BSR set to: 0
 13300  005AB2  0E02               	movlw	2
 13301  005AB4  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13302  005AB6  A4D8               	btfss	status,2,c
 13303  005AB8  D003               	goto	l23322
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13307  005ABA  ECEC  F04D         	call	_InitFullAutoTime	;wreg free
 13308                           
 13309                           ;sm_ControlGate_MC50.c: 586:         }
 13310  005ABE  0012               	return	
 13311  005AC0                     l23322:
 13312                           
 13313                           ; BSR set to: 0
 13314  005AC0  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13315  005AC2  D7CE               	goto	L73
 13316  005AC4                     l2730:
 13317  005AC4  B28E               	btfsc	142,1,c	;volatile
 13318  005AC6  D00B               	goto	l23330
 13319  005AC8  0100               	movlb	0	; () banked
 13320  005ACA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13321  005ACC  B4D8               	btfsc	status,2,c
 13322  005ACE  D007               	goto	l23330
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13326  005AD0  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13327  005AD2  0D14               	mullw	20
 13328  005AD4  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13329  005AD8  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13330                           
 13331                           ;sm_ControlGate_MC50.c: 599:     }
 13332  005ADC  0012               	return	
 13333  005ADE                     l23330:
 13334  005ADE  0101               	movlb	1	; () banked
 13335  005AE0  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13336  005AE2  A4D8               	btfss	status,2,c
 13337  005AE4  D00F               	goto	l23340
 13338                           
 13339                           ; BSR set to: 1
 13340  005AE6  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13341  005AE8  A4D8               	btfss	status,2,c
 13342  005AEA  D00C               	goto	l23340
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13346  005AEC  0E00               	movlw	0
 13347  005AEE  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13348                           
 13349                           ; BSR set to: 1
 13350                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13351  005AF0  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13352                           
 13353                           ; BSR set to: 1
 13354                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13355  005AF4  0100               	movlb	0	; () banked
 13356  005AF6  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13357  005AF8  0D14               	mullw	20
 13358  005AFA  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13359  005AFE  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13360                           
 13361                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13362  005B02  0012               	return	
 13363  005B04                     l23340:
 13364                           
 13365                           ; BSR set to: 1
 13366  005B04  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13367  005B06  D005               	goto	u27550
 13368  005B08  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13369  005B0A  E113               	bnz	l23352
 13370  005B0C  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13371  005B0E  B0D8               	btfsc	status,0,c
 13372  005B10  D010               	goto	l23352
 13373  005B12                     u27550:
 13374                           
 13375                           ; BSR set to: 1
 13376  005B12  0100               	movlb	0	; () banked
 13377  005B14  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13378  005B16  A4D8               	btfss	status,2,c
 13379  005B18  D00C               	goto	l23352
 13380                           
 13381                           ; BSR set to: 0
 13382  005B1A  0101               	movlb	1	; () banked
 13383  005B1C  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13384  005B1E  A4D8               	btfss	status,2,c
 13385  005B20  D008               	goto	l23352
 13386                           
 13387                           ; BSR set to: 1
 13388  005B22  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13389  005B24  B4D8               	btfsc	status,2,c
 13390  005B26  D005               	goto	l23352
 13391                           
 13392                           ; BSR set to: 1
 13393                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13394  005B28  0E00               	movlw	0
 13395  005B2A  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13396                           
 13397                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13398  005B2C  0E00               	movlw	0
 13399  005B2E  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13400  005B30  D780               	goto	u27360
 13401  005B32                     l23352:
 13402  005B32  0101               	movlb	1	; () banked
 13403  005B34  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13404  005B36  D005               	goto	u27590
 13405  005B38  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13406  005B3A  E119               	bnz	l23370
 13407  005B3C  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13408  005B3E  B0D8               	btfsc	status,0,c
 13409  005B40  D016               	goto	l23370
 13410  005B42                     u27590:
 13411                           
 13412                           ; BSR set to: 1
 13413  005B42  0100               	movlb	0	; () banked
 13414  005B44  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13415  005B46  B4D8               	btfsc	status,2,c
 13416  005B48  D012               	goto	l23370
 13417                           
 13418                           ; BSR set to: 0
 13419  005B4A  0101               	movlb	1	; () banked
 13420  005B4C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13421  005B4E  B4D8               	btfsc	status,2,c
 13422  005B50  D00E               	goto	l23370
 13423                           
 13424                           ; BSR set to: 1
 13425                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13426  005B52  0E00               	movlw	0
 13427  005B54  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13428                           
 13429                           ; BSR set to: 1
 13430                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13431  005B56  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13432  005B58  A4D8               	btfss	status,2,c
 13433  005B5A  D003               	goto	l23366
 13434                           
 13435                           ; BSR set to: 1
 13436                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13437  005B5C  0E00               	movlw	0
 13438  005B5E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13439  005B60  D77A               	goto	u27400
 13440  005B62                     l23366:
 13441                           
 13442                           ; BSR set to: 1
 13443                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13444  005B62  ECE5  F04C         	call	_CloseOrder	;wreg free
 13445                           
 13446                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13447  005B66  0E00               	movlw	0
 13448  005B68  0101               	movlb	1	; () banked
 13449  005B6A  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13450  005B6C  0012               	return	
 13451  005B6E                     l23370:
 13452  005B6E  0101               	movlb	1	; () banked
 13453  005B70  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13454  005B72  A4D8               	btfss	status,2,c
 13455  005B74  0012               	return	
 13456                           
 13457                           ; BSR set to: 1
 13458  005B76  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13459  005B78  A4D8               	btfss	status,2,c
 13460  005B7A  0012               	return	
 13461                           
 13462                           ; BSR set to: 1
 13463                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13464  005B7C  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13465  005B7E  D006               	goto	u27650
 13466  005B80  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13467  005B82  E103               	bnz	u27651
 13468  005B84  0E02               	movlw	2
 13469  005B86  5DAB               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13470  005B88  B0D8               	btfsc	status,0,c
 13471  005B8A                     u27651:
 13472  005B8A  0012               	return	
 13473  005B8C                     u27650:
 13474                           
 13475                           ; BSR set to: 1
 13476                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13477  005B8C  0E00               	movlw	0
 13478  005B8E  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13479  005B90  0012               	return		;funcret
 13480  005B92                     __end_of_actionZone_Opened:
 13481                           	callstack 0
 13482                           
 13483 ;; *************** function _VerifyFollowMe *****************
 13484 ;; Defined at:
 13485 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  securityClos    1    wreg     enum E10397
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;  securityClos    1   15[COMRAM] enum E10397
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      void 
 13492 ;; Registers used:
 13493 ;;		wreg, status,2, status,0
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/0
 13496 ;;		On exit  : 3E/0
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13503 ;;Total ram usage:        1 bytes
 13504 ;; Hardware stack levels used: 1
 13505 ;; Hardware stack levels required when called: 4
 13506 ;; This function calls:
 13507 ;;		Nothing
 13508 ;; This function is called by:
 13509 ;;		_actionZone_Opening
 13510 ;;		_actionZone_Opened
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text31
 13515  009A88                     __ptext31:
 13516                           	callstack 0
 13517  009A88                     _VerifyFollowMe:
 13518                           	callstack 24
 13519                           
 13520                           ;incstack = 0
 13521                           ;VerifyFollowMe@securityClose stored from wreg
 13522  009A88  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13523                           
 13524                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13525  009A8A  0100               	movlb	0	; () banked
 13526  009A8C  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13527  009A8E  B4D8               	btfsc	status,2,c
 13528  009A90  0012               	return	
 13529                           
 13530                           ; BSR set to: 0
 13531  009A92  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13532  009A94  A4D8               	btfss	status,2,c
 13533  009A96  0012               	return	
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13537  009A98  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13538  009A9A  A4D8               	btfss	status,2,c
 13539  009A9C  0012               	return	
 13540                           
 13541                           ; BSR set to: 0
 13542  009A9E  0101               	movlb	1	; () banked
 13543  009AA0  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13544  009AA2  A4D8               	btfss	status,2,c
 13545  009AA4  0012               	return	
 13546                           
 13547                           ; BSR set to: 1
 13548                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13549  009AA6  0E01               	movlw	1
 13550  009AA8  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13551  009AAA  0012               	return		;funcret
 13552  009AAC                     __end_of_VerifyFollowMe:
 13553                           	callstack 0
 13554                           
 13555 ;; *************** function _CloseOrder *****************
 13556 ;; Defined at:
 13557 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;		None
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;		None
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  1    wreg      void 
 13564 ;; Registers used:
 13565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 3E/1
 13568 ;;		On exit  : 3E/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;Total ram usage:        0 bytes
 13576 ;; Hardware stack levels used: 1
 13577 ;; Hardware stack levels required when called: 6
 13578 ;; This function calls:
 13579 ;;		_InitSoftStart
 13580 ;;		_sm_send_event
 13581 ;; This function is called by:
 13582 ;;		_actionZone_Opening
 13583 ;;		_actionZone_Opened
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           	psect	text32
 13588  0099CA                     __ptext32:
 13589                           	callstack 0
 13590  0099CA                     _CloseOrder:
 13591                           	callstack 22
 13592                           
 13593                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13594                           
 13595                           ;incstack = 0
 13596  0099CA  0E03               	movlw	3
 13597  0099CC  0101               	movlb	1	; () banked
 13598  0099CE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13599                           
 13600                           ; BSR set to: 1
 13601                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13602  0099D0  0EE7               	movlw	low _controlGate_stateMachine
 13603  0099D2  6E12               	movwf	sm_send_event@psm^0,c
 13604  0099D4  0E01               	movlw	high _controlGate_stateMachine
 13605  0099D6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13606  0099D8  0E00               	movlw	0
 13607  0099DA  6E15               	movwf	(sm_send_event@event+1)^0,c
 13608  0099DC  0E0E               	movlw	14
 13609  0099DE  6E14               	movwf	sm_send_event@event^0,c
 13610  0099E0  ECE1  F046         	call	_sm_send_event	;wreg free
 13611                           
 13612                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13613  0099E4  0E03               	movlw	3
 13614  0099E6  0101               	movlb	1	; () banked
 13615  0099E8  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13616                           
 13617                           ; BSR set to: 1
 13618                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13619  0099EA  EC0F  F047         	call	_InitSoftStart	;wreg free
 13620  0099EE  0012               	return		;funcret
 13621  0099F0                     __end_of_CloseOrder:
 13622                           	callstack 0
 13623                           
 13624 ;; *************** function _actionZone_Closing *****************
 13625 ;; Defined at:
 13626 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;		None
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13631 ;;  securityClos    1   49[COMRAM] enum E10397
 13632 ;; Return value:  Size  Location     Type
 13633 ;;                  1    wreg      void 
 13634 ;; Registers used:
 13635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13636 ;; Tracked objects:
 13637 ;;		On entry : 3F/0
 13638 ;;		On exit  : 0/0
 13639 ;;		Unchanged: 0/0
 13640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13645 ;;Total ram usage:        2 bytes
 13646 ;; Hardware stack levels used: 1
 13647 ;; Hardware stack levels required when called: 7
 13648 ;; This function calls:
 13649 ;;		_GetOpenOrder
 13650 ;;		_GetSecurityStateInClosing
 13651 ;;		_InitFullAutoTime
 13652 ;;		_InitWalkAutoTime
 13653 ;;		_OpenFullOrder
 13654 ;;		_OpenWalkOrder
 13655 ;;		_SetSegmentValueIntermitent
 13656 ;;		_StopOrder
 13657 ;;		___lmul
 13658 ;;		_setPositionInvertionInClosing
 13659 ;;		_sm_send_event
 13660 ;; This function is called by:
 13661 ;;		_sm_execute_ControlGate
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665                           	psect	text33
 13666  004BC4                     __ptext33:
 13667                           	callstack 0
 13668  004BC4                     _actionZone_Closing:
 13669                           	callstack 22
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13673                           
 13674                           ;incstack = 0
 13675  004BC4  ECB2  F02E         	call	_GetOpenOrder	;wreg free
 13676  004BC8  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13677                           
 13678                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13679  004BCA  ECF9  F03E         	call	_GetSecurityStateInClosing	;wreg free
 13680  004BCE  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13681                           
 13682                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13683  004BD0  0E00               	movlw	0
 13684  004BD2  0101               	movlb	1	; () banked
 13685  004BD4  6F92               	movwf	_Abertura_pedonal& (0+255),b
 13686                           
 13687                           ; BSR set to: 1
 13688                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13689  004BD6  ECEC  F04D         	call	_InitFullAutoTime	;wreg free
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13693  004BDA  0E00               	movlw	0
 13694  004BDC  0101               	movlb	1	; () banked
 13695  004BDE  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13696                           
 13697                           ; BSR set to: 1
 13698                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13699  004BE0  0E03               	movlw	3
 13700  004BE2  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13701  004BE4  D00D               	goto	l23394
 13702                           
 13703                           ; BSR set to: 1
 13704                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13705  004BE6  0E00               	movlw	0
 13706  004BE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13707  004BEA                     l23392:
 13708                           
 13709                           ; BSR set to: 1
 13710                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13711  004BEA  0EE7               	movlw	low _controlGate_stateMachine
 13712  004BEC  6E12               	movwf	sm_send_event@psm^0,c
 13713  004BEE  0E01               	movlw	high _controlGate_stateMachine
 13714  004BF0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13715  004BF2  0E00               	movlw	0
 13716  004BF4  6E15               	movwf	(sm_send_event@event+1)^0,c
 13717  004BF6  0E10               	movlw	16
 13718  004BF8  6E14               	movwf	sm_send_event@event^0,c
 13719  004BFA  ECE1  F046         	call	_sm_send_event	;wreg free
 13720                           
 13721                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13722  004BFE  0012               	return	
 13723  004C00                     l23394:
 13724                           
 13725                           ; BSR set to: 1
 13726  004C00  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13727  004C02  B4D8               	btfsc	status,2,c
 13728  004C04  D00C               	goto	u27700
 13729                           
 13730                           ; BSR set to: 1
 13731  004C06  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13732  004C08  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13733  004C0A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13734  004C0C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13735  004C0E  A4D8               	btfss	status,2,c
 13736  004C10  D05F               	goto	l23426
 13737                           
 13738                           ; BSR set to: 1
 13739  004C12  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13740  004C14  A4D8               	btfss	status,2,c
 13741  004C16  D05C               	goto	l23426
 13742                           
 13743                           ; BSR set to: 1
 13744  004C18  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13745  004C1A  A4D8               	btfss	status,2,c
 13746  004C1C  D059               	goto	l23426
 13747  004C1E                     u27700:
 13748                           
 13749                           ; BSR set to: 1
 13750                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13751  004C1E  0E02               	movlw	2
 13752  004C20  0100               	movlb	0	; () banked
 13753  004C22  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13754  004C24  A4D8               	btfss	status,2,c
 13755  004C26  D018               	goto	l23406
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13759  004C28  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13760  004C2A  6E1D               	movwf	___lmul@multiplier^0,c
 13761  004C2C  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13762  004C2E  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13763  004C30  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13764  004C32  0EB0               	movlw	176
 13765  004C34  6E21               	movwf	___lmul@multiplicand^0,c
 13766  004C36  0E04               	movlw	4
 13767  004C38  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13768  004C3A  0E00               	movlw	0
 13769  004C3C  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13770  004C3E  0E00               	movlw	0
 13771  004C40  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13772  004C42  EC1C  F048         	call	___lmul	;wreg free
 13773  004C46  C01D  F1BF         	movff	?___lmul,_ts_system+32	;volatile
 13774  004C4A  C01E  F1C0         	movff	?___lmul+1,_ts_system+33	;volatile
 13775  004C4E  C01F  F1C1         	movff	?___lmul+2,_ts_system+34	;volatile
 13776  004C52  C020  F1C2         	movff	?___lmul+3,_ts_system+35	;volatile
 13777                           
 13778                           ;sm_ControlGate_MC50.c: 668:         }
 13779  004C56  D009               	goto	l2773
 13780  004C58                     l23406:
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13784  004C58  0E00               	movlw	0
 13785  004C5A  0101               	movlb	1	; () banked
 13786  004C5C  6FBF               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13787  004C5E  0E00               	movlw	0
 13788  004C60  6FC0               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13789  004C62  0E00               	movlw	0
 13790  004C64  6FC1               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13791  004C66  0E00               	movlw	0
 13792  004C68  6FC2               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13793  004C6A                     l2773:
 13794                           
 13795                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13796  004C6A  0E00               	movlw	0
 13797  004C6C  0101               	movlb	1	; () banked
 13798  004C6E  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13799                           
 13800                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13801  004C70  0E01               	movlw	1
 13802  004C72  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13803                           
 13804                           ; BSR set to: 1
 13805                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13806  004C74  0E01               	movlw	1
 13807  004C76  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13808  004C78  0E00               	movlw	0
 13809  004C7A  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13810  004C7C  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13811  004C7E  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13812                           
 13813                           ; BSR set to: 1
 13814                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13815  004C80  0E00               	movlw	0
 13816  004C82  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13817                           
 13818                           ; BSR set to: 1
 13819                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13820  004C84  0E00               	movlw	0
 13821  004C86  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13822  004C88  0E00               	movlw	0
 13823  004C8A  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13824  004C8C  0E00               	movlw	0
 13825  004C8E  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13826  004C90  0E00               	movlw	0
 13827  004C92  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13828                           
 13829                           ; BSR set to: 1
 13830                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13831  004C94  0E00               	movlw	0
 13832  004C96  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13836  004C98  0E00               	movlw	0
 13837  004C9A  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13838                           
 13839                           ; BSR set to: 1
 13840                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13841  004C9C  0E00               	movlw	0
 13842  004C9E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13843                           
 13844                           ; BSR set to: 1
 13845                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13846  004CA0  0E00               	movlw	0
 13847  004CA2  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13848  004CA4  0E28               	movlw	40
 13849  004CA6  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13850                           
 13851                           ; BSR set to: 1
 13852                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13853  004CA8  0E0C               	movlw	12
 13854  004CAA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13855  004CAC  0E00               	movlw	0
 13856  004CAE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13857  004CB0  0E04               	movlw	4
 13858  004CB2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13859  004CB4  0E0F               	movlw	15
 13860  004CB6  EC9F  F04B         	call	_SetSegmentValueIntermitent
 13861                           
 13862                           ; BSR set to: 1
 13863                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13864  004CBA  0EE7               	movlw	low _controlGate_stateMachine
 13865  004CBC  6E12               	movwf	sm_send_event@psm^0,c
 13866  004CBE  0E01               	movlw	high _controlGate_stateMachine
 13867  004CC0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13868  004CC2  0E00               	movlw	0
 13869  004CC4  6E15               	movwf	(sm_send_event@event+1)^0,c
 13870  004CC6  0E0F               	movlw	15
 13871  004CC8  6E14               	movwf	sm_send_event@event^0,c
 13872  004CCA  ECE1  F046         	call	_sm_send_event	;wreg free
 13873                           
 13874                           ;sm_ControlGate_MC50.c: 691:     }
 13875  004CCE  0012               	return	
 13876  004CD0                     l23426:
 13877                           
 13878                           ; BSR set to: 1
 13879  004CD0  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13880  004CD2  B4D8               	btfsc	status,2,c
 13881  004CD4  D011               	goto	u27750
 13882                           
 13883                           ; BSR set to: 1
 13884  004CD6  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13885  004CD8  D021               	goto	l23446
 13886  004CDA  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13887  004CDC  E103               	bnz	u27730
 13888  004CDE  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13889  004CE0  A0D8               	btfss	status,0,c
 13890  004CE2  D01C               	goto	l23446
 13891  004CE4                     u27730:
 13892                           
 13893                           ; BSR set to: 1
 13894  004CE4  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13895  004CE6  A4D8               	btfss	status,2,c
 13896  004CE8  D019               	goto	l23446
 13897                           
 13898                           ; BSR set to: 1
 13899  004CEA  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13900  004CEC  D005               	goto	u27750
 13901  004CEE  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13902  004CF0  E115               	bnz	l23446
 13903  004CF2  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13904  004CF4  B0D8               	btfsc	status,0,c
 13905  004CF6  D012               	goto	l23446
 13906  004CF8                     u27750:
 13907                           
 13908                           ; BSR set to: 1
 13909  004CF8  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13910  004CFA  A4D8               	btfss	status,2,c
 13911  004CFC  D00F               	goto	l23446
 13912                           
 13913                           ; BSR set to: 1
 13914                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13915  004CFE  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13916  004D00  A4D8               	btfss	status,2,c
 13917                           
 13918                           ; BSR set to: 1
 13919                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13920  004D02  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13921                           
 13922                           ; BSR set to: 1
 13923                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13924                           
 13925                           ;sm_ControlGate_MC50.c: 696:         }
 13926  004D04  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13927                           
 13928                           ; BSR set to: 1
 13929                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13930  004D06  0E01               	movlw	1
 13931  004D08  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13932                           
 13933                           ; BSR set to: 1
 13934                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13935  004D0A  0E00               	movlw	0
 13936  004D0C  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13937  004D0E  0E0A               	movlw	10
 13938  004D10  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13939                           
 13940                           ; BSR set to: 1
 13941                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13942  004D12  0E00               	movlw	0
 13943  004D14  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13944  004D16  0E1E               	movlw	30
 13945  004D18  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13946                           
 13947                           ;sm_ControlGate_MC50.c: 702:     }
 13948  004D1A  0012               	return	
 13949  004D1C                     l23446:
 13950                           
 13951                           ; BSR set to: 1
 13952  004D1C  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13953  004D1E  D02E               	goto	l23476
 13954  004D20  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13955  004D22  E103               	bnz	u27780
 13956  004D24  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13957  004D26  A0D8               	btfss	status,0,c
 13958  004D28  D029               	goto	l23476
 13959  004D2A                     u27780:
 13960                           
 13961                           ; BSR set to: 1
 13962  004D2A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13963  004D2C  A4D8               	btfss	status,2,c
 13964  004D2E  D026               	goto	l23476
 13965                           
 13966                           ; BSR set to: 1
 13967                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13968  004D30  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13969  004D32  A4D8               	btfss	status,2,c
 13970  004D34  D005               	goto	l23458
 13971  004D36                     u27800:
 13972                           
 13973                           ; BSR set to: 1
 13974                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13975  004D36  0E00               	movlw	0
 13976  004D38  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13977                           
 13978                           ; BSR set to: 1
 13979                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 13980  004D3A  ECB1  F037         	call	_setPositionInvertionInClosing	;wreg free
 13981  004D3E  D755               	goto	l23392
 13982  004D40                     l23458:
 13983                           
 13984                           ; BSR set to: 1
 13985  004D40  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13986  004D42  D005               	goto	u27810
 13987  004D44  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13988  004D46  E117               	bnz	l23474
 13989  004D48  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13990  004D4A  B0D8               	btfsc	status,0,c
 13991  004D4C  D014               	goto	l23474
 13992  004D4E                     u27810:
 13993                           
 13994                           ; BSR set to: 1
 13995                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 13996  004D4E  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13997  004D50  A4D8               	btfss	status,2,c
 13998  004D52  D003               	goto	l23464
 13999                           
 14000                           ; BSR set to: 1
 14001                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14002  004D54  EC76  F045         	call	_OpenWalkOrder	;wreg free
 14003                           
 14004                           ;sm_ControlGate_MC50.c: 713:             }
 14005  004D58  D004               	goto	l23468
 14006  004D5A                     l23464:
 14007                           
 14008                           ; BSR set to: 1
 14009                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14010  004D5A  ECF8  F04C         	call	_OpenFullOrder	;wreg free
 14011                           
 14012                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14013  004D5E  ECB1  F037         	call	_setPositionInvertionInClosing	;wreg free
 14014  004D62                     l23468:
 14015                           
 14016                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14017  004D62  0E00               	movlw	0
 14018  004D64  0101               	movlb	1	; () banked
 14019  004D66  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14023  004D68  0E01               	movlw	1
 14024  004D6A  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14025                           
 14026                           ; BSR set to: 1
 14027                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14028  004D6C  0E00               	movlw	0
 14029  004D6E  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14030  004D70  0E14               	movlw	20
 14031  004D72  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14032                           
 14033                           ;sm_ControlGate_MC50.c: 726:         } else
 14034  004D74  0012               	return	
 14035  004D76                     l23474:
 14036                           
 14037                           ; BSR set to: 1
 14038                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14039  004D76  0E00               	movlw	0
 14040  004D78  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14041  004D7A  0012               	return	
 14042  004D7C                     l23476:
 14043                           
 14044                           ; BSR set to: 1
 14045  004D7C  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14046  004D7E  A4D8               	btfss	status,2,c
 14047  004D80  D017               	goto	l23492
 14048                           
 14049                           ; BSR set to: 1
 14050                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14051  004D82  0E00               	movlw	0
 14052  004D84  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14053                           
 14054                           ; BSR set to: 1
 14055                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14056  004D86  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14057  004D88  D005               	goto	u27840
 14058  004D8A  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14059  004D8C  E160               	bnz	l2810
 14060  004D8E  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14061  004D90  B0D8               	btfsc	status,0,c
 14062  004D92  0012               	return	
 14063  004D94                     u27840:
 14064                           
 14065                           ; BSR set to: 1
 14066                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14067  004D94  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14068  004D96  A4D8               	btfss	status,2,c
 14069  004D98  D003               	goto	l23486
 14070                           
 14071                           ; BSR set to: 1
 14072                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14073  004D9A  EC76  F045         	call	_OpenWalkOrder	;wreg free
 14074                           
 14075                           ;sm_ControlGate_MC50.c: 741:             }
 14076  004D9E  D004               	goto	l23490
 14077  004DA0                     l23486:
 14078                           
 14079                           ; BSR set to: 1
 14080                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14081  004DA0  ECF8  F04C         	call	_OpenFullOrder	;wreg free
 14082                           
 14083                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14084  004DA4  ECB1  F037         	call	_setPositionInvertionInClosing	;wreg free
 14085  004DA8                     l23490:
 14086                           
 14087                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14088  004DA8  0E00               	movlw	0
 14089  004DAA  0101               	movlb	1	; () banked
 14090  004DAC  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14091  004DAE  0012               	return	
 14092  004DB0                     l23492:
 14093                           
 14094                           ; BSR set to: 1
 14095  004DB0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14096  004DB2  A4D8               	btfss	status,2,c
 14097  004DB4  D00B               	goto	l23508
 14098                           
 14099                           ; BSR set to: 1
 14100                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14101  004DB6  0E02               	movlw	2
 14102  004DB8  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14103  004DBA  B4D8               	btfsc	status,2,c
 14104  004DBC  D002               	goto	l23504
 14105                           
 14106                           ; BSR set to: 1
 14107                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14108  004DBE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14109  004DC0  D7BA               	goto	u27800
 14110  004DC2                     l23504:
 14111                           
 14112                           ; BSR set to: 1
 14113                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14114  004DC2  ECB1  F037         	call	_setPositionInvertionInClosing	;wreg free
 14115  004DC6                     l23506:
 14116                           
 14117                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14118  004DC6  EC9A  F04D         	call	_StopOrder	;wreg free
 14119  004DCA  0012               	return	
 14120  004DCC                     l23508:
 14121                           
 14122                           ; BSR set to: 1
 14123  004DCC  BFD2               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14124  004DCE  D005               	goto	u27880
 14125  004DD0  51D2               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14126  004DD2  E10B               	bnz	l23518
 14127  004DD4  05D1               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14128  004DD6  B0D8               	btfsc	status,0,c
 14129  004DD8  D008               	goto	l23518
 14130  004DDA                     u27880:
 14131                           
 14132                           ; BSR set to: 1
 14133  004DDA  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14134  004DDC  A4D8               	btfss	status,2,c
 14135  004DDE  D005               	goto	l23518
 14136                           
 14137                           ; BSR set to: 1
 14138                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14139  004DE0  ECB1  F037         	call	_setPositionInvertionInClosing	;wreg free
 14140                           
 14141                           ; BSR set to: 1
 14142                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14143  004DE4  0E00               	movlw	0
 14144  004DE6  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14145  004DE8  D7EE               	goto	l23506
 14146  004DEA                     l23518:
 14147                           
 14148                           ; BSR set to: 1
 14149  004DEA  0100               	movlb	0	; () banked
 14150  004DEC  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14151  004DEE  B4D8               	btfsc	status,2,c
 14152  004DF0  D004               	goto	u27910
 14153                           
 14154                           ; BSR set to: 0
 14155  004DF2  0E02               	movlw	2
 14156  004DF4  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14157  004DF6  A4D8               	btfss	status,2,c
 14158  004DF8  D005               	goto	l23526
 14159  004DFA                     u27910:
 14160                           
 14161                           ; BSR set to: 0
 14162                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14163  004DFA  0E04               	movlw	4
 14164  004DFC  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14165  004DFE  B4D8               	btfsc	status,2,c
 14166  004E00  0012               	return	
 14167  004E02  D7E1               	goto	l23506
 14168  004E04                     l23526:
 14169                           
 14170                           ; BSR set to: 0
 14171  004E04  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14172  004E06  B4D8               	btfsc	status,2,c
 14173  004E08  0012               	return	
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14177  004E0A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14178  004E0C  A4D8               	btfss	status,2,c
 14179  004E0E  D013               	goto	l23542
 14180                           
 14181                           ; BSR set to: 0
 14182                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14183  004E10  ECB1  F037         	call	_setPositionInvertionInClosing	;wreg free
 14184                           
 14185                           ; BSR set to: 1
 14186                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14187  004E14  EC9A  F04D         	call	_StopOrder	;wreg free
 14188                           
 14189                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14190  004E18  0E02               	movlw	2
 14191  004E1A  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14192  004E1C  A4D8               	btfss	status,2,c
 14193  004E1E  0012               	return	
 14194  004E20  0E02               	movlw	2
 14195  004E22  0100               	movlb	0	; () banked
 14196  004E24  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14197  004E26  B4D8               	btfsc	status,2,c
 14198  004E28  0012               	return	
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14202  004E2A  EC70  F04E         	call	_InitWalkAutoTime	;wreg free
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14206  004E2E  0E01               	movlw	1
 14207  004E30  0101               	movlb	1	; () banked
 14208  004E32  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14209  004E34  0012               	return	
 14210  004E36                     l23542:
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14214  004E36  0E04               	movlw	4
 14215  004E38  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14216  004E3A  B4D8               	btfsc	status,2,c
 14217  004E3C  D7C4               	goto	l23506
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14221  004E3E  0E01               	movlw	1
 14222  004E40  0101               	movlb	1	; () banked
 14223  004E42  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14224                           
 14225                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14226  004E44  0E00               	movlw	0
 14227  004E46  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14228  004E48  0E0A               	movlw	10
 14229  004E4A  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14230                           
 14231                           ;sm_ControlGate_MC50.c: 806:             }
 14232  004E4C  0012               	return	
 14233  004E4E                     l2810:
 14234  004E4E  0012               	return		;funcret
 14235  004E50                     __end_of_actionZone_Closing:
 14236                           	callstack 0
 14237                           
 14238 ;; *************** function _setPositionInvertionInClosing *****************
 14239 ;; Defined at:
 14240 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;		None
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;		None
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  1    wreg      void 
 14247 ;; Registers used:
 14248 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14249 ;; Tracked objects:
 14250 ;;		On entry : 3E/1
 14251 ;;		On exit  : 3F/1
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14256 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14257 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14258 ;;Total ram usage:       12 bytes
 14259 ;; Hardware stack levels used: 1
 14260 ;; Hardware stack levels required when called: 6
 14261 ;; This function calls:
 14262 ;;		_getTimeDecelaration
 14263 ;; This function is called by:
 14264 ;;		_actionZone_Opening
 14265 ;;		_actionZone_Closing
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text34
 14270  006F62                     __ptext34:
 14271                           	callstack 0
 14272  006F62                     _setPositionInvertionInClosing:
 14273                           	callstack 22
 14274                           
 14275                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14276                           
 14277                           ;incstack = 0
 14278  006F62  0E02               	movlw	2
 14279  006F64  0100               	movlb	0	; () banked
 14280  006F66  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14281  006F68  B4D8               	btfsc	status,2,c
 14282  006F6A  D007               	goto	l21806
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14286  006F6C  0E02               	movlw	2
 14287  006F6E  0101               	movlb	1	; () banked
 14288  006F70  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14289  006F72  0E00               	movlw	0
 14290  006F74  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14291  006F76  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14292  006F78  D008               	goto	L74
 14293  006F7A                     l21806:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14297  006F7A  0EFF               	movlw	255
 14298  006F7C  0101               	movlb	1	; () banked
 14299  006F7E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14300  006F80  0EFF               	movlw	255
 14301  006F82  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14302  006F84  0EFF               	movlw	255
 14303  006F86  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14304  006F88  0EFF               	movlw	255
 14305  006F8A                     L74:
 14306  006F8A  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14307                           
 14308                           ; BSR set to: 1
 14309                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14310  006F8C  0E01               	movlw	1
 14311  006F8E  ECE4  F03B         	call	_getTimeDecelaration
 14312  006F92  0101               	movlb	1	; () banked
 14313  006F94  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14314  006F96  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14315  006F98  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14316  006F9A  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14317  006F9C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14318  006F9E  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14319  006FA0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14320  006FA2  0A80               	xorlw	128
 14321  006FA4  0100               	movlb	0	; () banked
 14322  006FA6  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14323  006FA8  0101               	movlb	1	; () banked
 14324  006FAA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14325  006FAC  0A80               	xorlw	128
 14326  006FAE  0100               	movlb	0	; () banked
 14327  006FB0  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14328  006FB2  B0D8               	btfsc	status,0,c
 14329  006FB4  D008               	goto	l21814
 14330                           
 14331                           ; BSR set to: 0
 14332  006FB6  0E02               	movlw	2
 14333  006FB8  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14334  006FBA  B4D8               	btfsc	status,2,c
 14335  006FBC  D004               	goto	l21814
 14336                           
 14337                           ; BSR set to: 0
 14338                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14339  006FBE  0E01               	movlw	1
 14340  006FC0  ECE4  F03B         	call	_getTimeDecelaration
 14341  006FC4  D01A               	goto	L75
 14342  006FC6                     l21814:
 14343                           
 14344                           ; BSR set to: 0
 14345  006FC6  0E03               	movlw	3
 14346  006FC8  ECE4  F03B         	call	_getTimeDecelaration
 14347  006FCC  5029               	movf	?_getTimeDecelaration^0,w,c
 14348  006FCE  0101               	movlb	1	; () banked
 14349  006FD0  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14350  006FD2  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14351  006FD4  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14352  006FD6  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14353  006FD8  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14354  006FDA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14355  006FDC  0A80               	xorlw	128
 14356  006FDE  0100               	movlb	0	; () banked
 14357  006FE0  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14358  006FE2  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14359  006FE4  0A80               	xorlw	128
 14360  006FE6  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14361  006FE8  B0D8               	btfsc	status,0,c
 14362  006FEA  D00F               	goto	l21820
 14363                           
 14364                           ; BSR set to: 0
 14365  006FEC  0E02               	movlw	2
 14366  006FEE  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14367  006FF0  B4D8               	btfsc	status,2,c
 14368  006FF2  D00B               	goto	l21820
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14372  006FF4  0E03               	movlw	3
 14373  006FF6  ECE4  F03B         	call	_getTimeDecelaration
 14374  006FFA                     L75:
 14375  006FFA  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14376  006FFE  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14377  007002  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14378  007006  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14379  00700A                     l21820:
 14380                           
 14381                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14382  00700A  0100               	movlb	0	; () banked
 14383  00700C  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14384  00700E  0D0A               	mullw	10
 14385  007010  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14386  007014  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14387  007018  0E00               	movlw	0
 14388  00701A  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14389  00701C  0EFF               	movlw	255
 14390  00701E  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14391  007020  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14392  007022  0101               	movlb	1	; () banked
 14393  007024  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14394  007026  0100               	movlb	0	; () banked
 14395  007028  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14396  00702A  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14397  00702C  0101               	movlb	1	; () banked
 14398  00702E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14399  007030  0100               	movlb	0	; () banked
 14400  007032  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14401  007034  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14402  007036  0101               	movlb	1	; () banked
 14403  007038  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14404  00703A  0100               	movlb	0	; () banked
 14405  00703C  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14406  00703E  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14407  007040  0101               	movlb	1	; () banked
 14408  007042  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14409  007044  0100               	movlb	0	; () banked
 14410  007046  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14411  007048  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14412  00704A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14413  00704C  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14414  00704E  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14415  007050  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14416  007052  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14417  007054  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14418  007056  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14419  007058  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14420  00705A  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14421  00705C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14422  00705E  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14423  007060  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14424  007062  0EC8               	movlw	200
 14425  007064  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14426  007066  0101               	movlb	1	; () banked
 14427  007068  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14428  00706A  0E00               	movlw	0
 14429  00706C  0100               	movlb	0	; () banked
 14430  00706E  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14431  007070  0101               	movlb	1	; () banked
 14432  007072  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14433  007074  0E00               	movlw	0
 14434  007076  0100               	movlb	0	; () banked
 14435  007078  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14436  00707A  0101               	movlb	1	; () banked
 14437  00707C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14438  00707E  0E00               	movlw	0
 14439  007080  0100               	movlb	0	; () banked
 14440  007082  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14441  007084  0101               	movlb	1	; () banked
 14442  007086  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14443                           
 14444                           ; BSR set to: 1
 14445  007088  0012               	return		;funcret
 14446  00708A                     __end_of_setPositionInvertionInClosing:
 14447                           	callstack 0
 14448                           
 14449 ;; *************** function _getTimeDecelaration *****************
 14450 ;; Defined at:
 14451 ;;		line 641 in file "outputs_MC50.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;  state           1    wreg     enum E10381
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;  state           1   48[COMRAM] enum E10381
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  4   40[COMRAM] long 
 14458 ;; Registers used:
 14459 ;;		wreg, status,2, status,0, cstack
 14460 ;; Tracked objects:
 14461 ;;		On entry : 3E/1
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14468 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14469 ;;Total ram usage:        9 bytes
 14470 ;; Hardware stack levels used: 1
 14471 ;; Hardware stack levels required when called: 5
 14472 ;; This function calls:
 14473 ;;		___lmul
 14474 ;; This function is called by:
 14475 ;;		_getStateOpenPosition
 14476 ;;		_controlVelocity
 14477 ;;		_setPositionInvertionInClosing
 14478 ;;		_setPositionInvertionInOpening
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           	psect	text35
 14483  0077C8                     __ptext35:
 14484                           	callstack 0
 14485  0077C8                     _getTimeDecelaration:
 14486                           	callstack 22
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;incstack = 0
 14490                           ;getTimeDecelaration@state stored from wreg
 14491  0077C8  6E31               	movwf	getTimeDecelaration@state^0,c
 14492                           
 14493                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14494  0077CA  0E03               	movlw	3
 14495  0077CC  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14496  0077CE  A4D8               	btfss	status,2,c
 14497  0077D0  D033               	goto	l20608
 14498                           
 14499                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14500  0077D2  0E02               	movlw	2
 14501  0077D4  0100               	movlb	0	; () banked
 14502  0077D6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14503  0077D8  B4D8               	btfsc	status,2,c
 14504  0077DA  D018               	goto	l20604
 14505                           
 14506                           ; BSR set to: 0
 14507                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14508  0077DC  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14509  0077DE  6E1D               	movwf	___lmul@multiplier^0,c
 14510  0077E0  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14511  0077E2  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14512  0077E4  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14513  0077E6  0E0A               	movlw	10
 14514  0077E8  6E21               	movwf	___lmul@multiplicand^0,c
 14515  0077EA  0E00               	movlw	0
 14516  0077EC  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14517  0077EE  0E00               	movlw	0
 14518  0077F0  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14519  0077F2  0E00               	movlw	0
 14520  0077F4  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14521  0077F6  EC1C  F048         	call	___lmul	;wreg free
 14522  0077FA  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14523  0077FE  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14524  007802  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14525  007806  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14526  00780A  0012               	return	
 14527  00780C                     l20604:
 14528                           
 14529                           ; BSR set to: 0
 14530  00780C  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14531  007810  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14532  007812  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14533  007814  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14534  007816  0E02               	movlw	2
 14535  007818                     u23625:
 14536  007818  90D8               	bcf	status,0,c
 14537  00781A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14538  00781C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14539  00781E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14540  007820  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14541  007822  2EE8               	decfsz	wreg,f,c
 14542  007824  D7F9               	goto	u23625
 14543  007826  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14544  00782A  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14545  00782E  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14546  007832  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14547  007836  0012               	return	
 14548  007838                     l20608:
 14549                           
 14550                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14551  007838  0E02               	movlw	2
 14552  00783A  0100               	movlb	0	; () banked
 14553  00783C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14554  00783E  B4D8               	btfsc	status,2,c
 14555  007840  D01D               	goto	l20616
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14559  007842  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14560  007844  6E1D               	movwf	___lmul@multiplier^0,c
 14561  007846  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14562  007848  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14563  00784A  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14564  00784C  0EF6               	movlw	246
 14565  00784E  6E21               	movwf	___lmul@multiplicand^0,c
 14566  007850  0EFF               	movlw	255
 14567  007852  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14568  007854  0EFF               	movlw	255
 14569  007856  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14570  007858  0EFF               	movlw	255
 14571  00785A  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14572  00785C  EC1C  F048         	call	___lmul	;wreg free
 14573  007860  0100               	movlb	0	; () banked
 14574  007862  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14575  007864  241D               	addwf	?___lmul^0,w,c
 14576  007866  6E29               	movwf	?_getTimeDecelaration^0,c
 14577  007868  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14578  00786A  201E               	addwfc	(?___lmul+1)^0,w,c
 14579  00786C  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14580  00786E  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14581  007870  201F               	addwfc	(?___lmul+2)^0,w,c
 14582  007872  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14583  007874  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14584  007876  2020               	addwfc	(?___lmul+3)^0,w,c
 14585  007878  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14586  00787A  0012               	return	
 14587  00787C                     l20616:
 14588                           
 14589                           ; BSR set to: 0
 14590  00787C  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14591  007880  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14592  007882  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14593  007884  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14594  007886  0E02               	movlw	2
 14595  007888                     u23645:
 14596  007888  90D8               	bcf	status,0,c
 14597  00788A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14598  00788C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14599  00788E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14600  007890  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14601  007892  2EE8               	decfsz	wreg,f,c
 14602  007894  D7F9               	goto	u23645
 14603  007896  502D               	movf	??_getTimeDecelaration^0,w,c
 14604  007898  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14605  00789A  6E29               	movwf	?_getTimeDecelaration^0,c
 14606  00789C  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14607  00789E  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14608  0078A0  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14609  0078A2  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14610  0078A4  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14611  0078A6  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14612  0078A8  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14613  0078AA  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14614  0078AC  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14615  0078AE  0012               	return		;funcret
 14616  0078B0                     __end_of_getTimeDecelaration:
 14617                           	callstack 0
 14618                           
 14619 ;; *************** function ___lmul *****************
 14620 ;; Defined at:
 14621 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  multiplier      4   28[COMRAM] unsigned long 
 14624 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;  product         4   36[COMRAM] unsigned long 
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  4   28[COMRAM] unsigned long 
 14629 ;; Registers used:
 14630 ;;		wreg, status,2, status,0
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/1
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14637 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14639 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14640 ;;Total ram usage:       12 bytes
 14641 ;; Hardware stack levels used: 1
 14642 ;; Hardware stack levels required when called: 4
 14643 ;; This function calls:
 14644 ;;		Nothing
 14645 ;; This function is called by:
 14646 ;;		_getStateOpenPosition
 14647 ;;		_getTimeDecelaration
 14648 ;;		_actionZone_Closing
 14649 ;;		_sm_execute_menuConfiguration
 14650 ;; This function uses a non-reentrant model
 14651 ;;
 14652                           
 14653                           	psect	text36
 14654  009038                     __ptext36:
 14655                           	callstack 0
 14656  009038                     ___lmul:
 14657                           	callstack 24
 14658                           
 14659                           ;incstack = 0
 14660  009038  0E00               	movlw	0
 14661  00903A  6E25               	movwf	___lmul@product^0,c
 14662  00903C  0E00               	movlw	0
 14663  00903E  6E26               	movwf	(___lmul@product+1)^0,c
 14664  009040  0E00               	movlw	0
 14665  009042  6E27               	movwf	(___lmul@product+2)^0,c
 14666  009044  0E00               	movlw	0
 14667  009046  6E28               	movwf	(___lmul@product+3)^0,c
 14668  009048                     l20474:
 14669  009048  A01D               	btfss	___lmul@multiplier^0,0,c
 14670  00904A  D008               	goto	l20478
 14671  00904C  5021               	movf	___lmul@multiplicand^0,w,c
 14672  00904E  2625               	addwf	___lmul@product^0,f,c
 14673  009050  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14674  009052  2226               	addwfc	(___lmul@product+1)^0,f,c
 14675  009054  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14676  009056  2227               	addwfc	(___lmul@product+2)^0,f,c
 14677  009058  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14678  00905A  2228               	addwfc	(___lmul@product+3)^0,f,c
 14679  00905C                     l20478:
 14680  00905C  90D8               	bcf	status,0,c
 14681  00905E  3621               	rlcf	___lmul@multiplicand^0,f,c
 14682  009060  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14683  009062  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14684  009064  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14685  009066  90D8               	bcf	status,0,c
 14686  009068  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14687  00906A  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14688  00906C  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14689  00906E  321D               	rrcf	___lmul@multiplier^0,f,c
 14690  009070  501D               	movf	___lmul@multiplier^0,w,c
 14691  009072  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14692  009074  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14693  009076  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14694  009078  A4D8               	btfss	status,2,c
 14695  00907A  D7E6               	goto	l20474
 14696  00907C  C025  F01D         	movff	___lmul@product,?___lmul
 14697  009080  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14698  009084  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14699  009088  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14700  00908C  0012               	return		;funcret
 14701  00908E                     __end_of___lmul:
 14702                           	callstack 0
 14703                           
 14704 ;; *************** function _StopOrder *****************
 14705 ;; Defined at:
 14706 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;		None
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;		None
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  1    wreg      void 
 14713 ;; Registers used:
 14714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14715 ;; Tracked objects:
 14716 ;;		On entry : 3E/1
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;Total ram usage:        0 bytes
 14725 ;; Hardware stack levels used: 1
 14726 ;; Hardware stack levels required when called: 6
 14727 ;; This function calls:
 14728 ;;		_sm_send_event
 14729 ;; This function is called by:
 14730 ;;		_actionZone_Opening
 14731 ;;		_actionZone_Closing
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text37
 14736  009B34                     __ptext37:
 14737                           	callstack 0
 14738  009B34                     _StopOrder:
 14739                           	callstack 22
 14740                           
 14741                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14742                           
 14743                           ;incstack = 0
 14744  009B34  0E00               	movlw	0
 14745  009B36  0101               	movlb	1	; () banked
 14746  009B38  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14747                           
 14748                           ; BSR set to: 1
 14749                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14750  009B3A  0EE7               	movlw	low _controlGate_stateMachine
 14751  009B3C  6E12               	movwf	sm_send_event@psm^0,c
 14752  009B3E  0E01               	movlw	high _controlGate_stateMachine
 14753  009B40  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14754  009B42  0E00               	movlw	0
 14755  009B44  6E15               	movwf	(sm_send_event@event+1)^0,c
 14756  009B46  0E0D               	movlw	13
 14757  009B48  6E14               	movwf	sm_send_event@event^0,c
 14758  009B4A  ECE1  F046         	call	_sm_send_event	;wreg free
 14759  009B4E  0012               	return		;funcret
 14760  009B50                     __end_of_StopOrder:
 14761                           	callstack 0
 14762                           
 14763 ;; *************** function _GetSecurityStateInClosing *****************
 14764 ;; Defined at:
 14765 ;;		line 776 in file "inputs_MC50.c"
 14766 ;; Parameters:    Size  Location     Type
 14767 ;;		None
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;		None
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      enum E10564
 14772 ;; Registers used:
 14773 ;;		wreg, status,2, status,0, cstack
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 3E/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14783 ;;Total ram usage:        0 bytes
 14784 ;; Hardware stack levels used: 1
 14785 ;; Hardware stack levels required when called: 5
 14786 ;; This function calls:
 14787 ;;		_SetSegmentValueIntermitent
 14788 ;; This function is called by:
 14789 ;;		_actionZone_Opening
 14790 ;;		_actionZone_Opened
 14791 ;;		_actionZone_Closing
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           	psect	text38
 14796  007DF2                     __ptext38:
 14797                           	callstack 0
 14798  007DF2                     _GetSecurityStateInClosing:
 14799                           	callstack 23
 14800                           
 14801                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14802                           
 14803                           ;incstack = 0
 14804  007DF2  0100               	movlb	0	; () banked
 14805  007DF4  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14806  007DF6  A4D8               	btfss	status,2,c
 14807  007DF8  D01B               	goto	l21482
 14808                           
 14809                           ; BSR set to: 0
 14810  007DFA  0101               	movlb	1	; () banked
 14811  007DFC  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14812  007DFE  A4D8               	btfss	status,2,c
 14813  007E00  D017               	goto	l21482
 14814                           
 14815                           ; BSR set to: 1
 14816  007E02  0100               	movlb	0	; () banked
 14817  007E04  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14818  007E06  A4D8               	btfss	status,2,c
 14819  007E08  D013               	goto	l21482
 14820                           
 14821                           ; BSR set to: 0
 14822  007E0A  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14823  007E0C  A4D8               	btfss	status,2,c
 14824  007E0E  D010               	goto	l21482
 14825                           
 14826                           ; BSR set to: 0
 14827                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14828  007E10  0E00               	movlw	0
 14829  007E12  0101               	movlb	1	; () banked
 14830  007E14  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14831  007E16  0E04               	movlw	4
 14832  007E18  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14833                           
 14834                           ; BSR set to: 1
 14835                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14836  007E1A  0E0A               	movlw	10
 14837  007E1C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14838  007E1E  0E00               	movlw	0
 14839  007E20  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14840  007E22  0E14               	movlw	20
 14841  007E24  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14842  007E26  0E12               	movlw	18
 14843  007E28  EC9F  F04B         	call	_SetSegmentValueIntermitent
 14844  007E2C                     l21476:
 14845                           
 14846                           ; BSR set to: 1
 14847                           ;inputs_MC50.c: 792:         return YES;
 14848  007E2C  0E01               	movlw	1
 14849  007E2E  0012               	return	
 14850  007E30                     l21482:
 14851  007E30  0100               	movlb	0	; () banked
 14852  007E32  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14853  007E34  A4D8               	btfss	status,2,c
 14854  007E36  D013               	goto	l21496
 14855                           
 14856                           ; BSR set to: 0
 14857  007E38  0101               	movlb	1	; () banked
 14858  007E3A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14859  007E3C  A4D8               	btfss	status,2,c
 14860  007E3E  D00F               	goto	l21496
 14861                           
 14862                           ; BSR set to: 1
 14863                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14864  007E40  0E00               	movlw	0
 14865  007E42  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14866  007E44  0E04               	movlw	4
 14867  007E46  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14868                           
 14869                           ; BSR set to: 1
 14870                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14871  007E48  0E15               	movlw	21
 14872  007E4A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14873  007E4C  0E00               	movlw	0
 14874  007E4E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14875  007E50  0E14               	movlw	20
 14876  007E52  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14877  007E54  0E05               	movlw	5
 14878  007E56  EC9F  F04B         	call	_SetSegmentValueIntermitent
 14879                           
 14880                           ; BSR set to: 1
 14881                           ;inputs_MC50.c: 799:         return ST;
 14882  007E5A  0E02               	movlw	2
 14883  007E5C  0012               	return	
 14884  007E5E                     l21496:
 14885  007E5E  0100               	movlb	0	; () banked
 14886  007E60  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14887  007E62  A4D8               	btfss	status,2,c
 14888  007E64  D017               	goto	l21512
 14889                           
 14890                           ; BSR set to: 0
 14891  007E66  0101               	movlb	1	; () banked
 14892  007E68  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14893  007E6A  A4D8               	btfss	status,2,c
 14894  007E6C  D013               	goto	l21512
 14895                           
 14896                           ; BSR set to: 1
 14897  007E6E  0100               	movlb	0	; () banked
 14898  007E70  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14899  007E72  A4D8               	btfss	status,2,c
 14900  007E74  D00F               	goto	l21512
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14904  007E76  0E00               	movlw	0
 14905  007E78  0101               	movlb	1	; () banked
 14906  007E7A  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14907  007E7C  0E04               	movlw	4
 14908  007E7E  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14909                           
 14910                           ; BSR set to: 1
 14911                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14912  007E80  0E0E               	movlw	14
 14913  007E82  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14914  007E84  0E00               	movlw	0
 14915  007E86  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14916  007E88  0E14               	movlw	20
 14917  007E8A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14918  007E8C  0E12               	movlw	18
 14919  007E8E  EC9F  F04B         	call	_SetSegmentValueIntermitent
 14920  007E92  D7CC               	goto	l21476
 14921  007E94                     l21512:
 14922                           
 14923                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14924  007E94  0E00               	movlw	0
 14925  007E96  0012               	return		;funcret
 14926  007E98                     __end_of_GetSecurityStateInClosing:
 14927                           	callstack 0
 14928                           
 14929 ;; *************** function _actionZone_Closed *****************
 14930 ;; Defined at:
 14931 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14932 ;; Parameters:    Size  Location     Type
 14933 ;;		None
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14936 ;;  securityOpen    1   31[COMRAM] enum E10397
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14941 ;; Tracked objects:
 14942 ;;		On entry : 3F/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14950 ;;Total ram usage:        2 bytes
 14951 ;; Hardware stack levels used: 1
 14952 ;; Hardware stack levels required when called: 8
 14953 ;; This function calls:
 14954 ;;		_GetOpenOrder
 14955 ;;		_GetSecurityStateInOpening
 14956 ;;		_InitFullAutoTime
 14957 ;;		_InitWalkAutoTime
 14958 ;;		_OpenFullOrder
 14959 ;;		_OpenWalkOrder
 14960 ;;		_WaitPreFlash
 14961 ;;		_sm_send_event
 14962 ;; This function is called by:
 14963 ;;		_sm_execute_ControlGate
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text39
 14968  007D48                     __ptext39:
 14969                           	callstack 0
 14970  007D48                     _actionZone_Closed:
 14971                           	callstack 21
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14975                           
 14976                           ;incstack = 0
 14977  007D48  0101               	movlb	1	; () banked
 14978  007D4A  05F2               	decf	_main_stateMachine& (0+255),w,b
 14979  007D4C  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 14980  007D4E  B4D8               	btfsc	status,2,c
 14981  007D50  0012               	return	
 14982                           
 14983                           ; BSR set to: 1
 14984                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 14985  007D52  ECB2  F02E         	call	_GetOpenOrder	;wreg free
 14986  007D56  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 14987                           
 14988                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 14989  007D58  EC4C  F03F         	call	_GetSecurityStateInOpening	;wreg free
 14990  007D5C  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 14991                           
 14992                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 14993  007D5E  0100               	movlb	0	; () banked
 14994  007D60  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14995  007D62  A4D8               	btfss	status,2,c
 14996  007D64  D018               	goto	l23034
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15000  007D66  0E03               	movlw	3
 15001  007D68  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15002  007D6A  A4D8               	btfss	status,2,c
 15003  007D6C  0012               	return	
 15004                           
 15005                           ; BSR set to: 0
 15006  007D6E  0101               	movlb	1	; () banked
 15007  007D70  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15008  007D72  A4D8               	btfss	status,2,c
 15009  007D74  0012               	return	
 15010                           
 15011                           ; BSR set to: 1
 15012  007D76  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15013  007D78  A4D8               	btfss	status,2,c
 15014  007D7A  0012               	return	
 15015                           
 15016                           ; BSR set to: 1
 15017                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15018  007D7C  ECF8  F04C         	call	_OpenFullOrder	;wreg free
 15019  007D80                     l23032:
 15020                           
 15021                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15022  007D80  0EF2               	movlw	low _main_stateMachine
 15023  007D82  6E12               	movwf	sm_send_event@psm^0,c
 15024  007D84  0E01               	movlw	high _main_stateMachine
 15025  007D86  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15026  007D88  0E00               	movlw	0
 15027  007D8A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15028  007D8C  0E11               	movlw	17
 15029  007D8E  6E14               	movwf	sm_send_event@event^0,c
 15030  007D90  ECE1  F046         	call	_sm_send_event	;wreg free
 15031  007D94  0012               	return	
 15032  007D96                     l23034:
 15033                           
 15034                           ; BSR set to: 0
 15035  007D96  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15036  007D98  B4D8               	btfsc	status,2,c
 15037  007D9A  D004               	goto	u26840
 15038                           
 15039                           ; BSR set to: 0
 15040  007D9C  0E03               	movlw	3
 15041  007D9E  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15042  007DA0  A4D8               	btfss	status,2,c
 15043  007DA2  D017               	goto	l23054
 15044  007DA4                     u26840:
 15045                           
 15046                           ; BSR set to: 0
 15047  007DA4  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15048  007DA6  A4D8               	btfss	status,2,c
 15049  007DA8  D014               	goto	l23054
 15050                           
 15051                           ; BSR set to: 0
 15052  007DAA  0101               	movlb	1	; () banked
 15053  007DAC  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15054  007DAE  A4D8               	btfss	status,2,c
 15055  007DB0  D010               	goto	l23054
 15056                           
 15057                           ; BSR set to: 1
 15058                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15059  007DB2  0E02               	movlw	2
 15060  007DB4  0100               	movlb	0	; () banked
 15061  007DB6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15062  007DB8  A4D8               	btfss	status,2,c
 15063  007DBA  D006               	goto	l23048
 15064                           
 15065                           ; BSR set to: 0
 15066                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15067  007DBC  0E01               	movlw	1
 15068  007DBE  0101               	movlb	1	; () banked
 15069  007DC0  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15070                           
 15071                           ; BSR set to: 1
 15072                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15073  007DC2  ECCE  F044         	call	_WaitPreFlash	;wreg free
 15074                           
 15075                           ;sm_ControlGate_MC50.c: 356:             }
 15076  007DC6  0012               	return	
 15077  007DC8                     l23048:
 15078                           
 15079                           ; BSR set to: 0
 15080                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15081  007DC8  ECF8  F04C         	call	_OpenFullOrder	;wreg free
 15082                           
 15083                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15084  007DCC  ECEC  F04D         	call	_InitFullAutoTime	;wreg free
 15085  007DD0  D7D7               	goto	l23032
 15086  007DD2                     l23054:
 15087  007DD2  0E02               	movlw	2
 15088  007DD4  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15089  007DD6  A4D8               	btfss	status,2,c
 15090  007DD8  0012               	return	
 15091  007DDA  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15092  007DDC  A4D8               	btfss	status,2,c
 15093  007DDE  0012               	return	
 15094  007DE0  0100               	movlb	0	; () banked
 15095  007DE2  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15096  007DE4  B4D8               	btfsc	status,2,c
 15097  007DE6  0012               	return	
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15101  007DE8  EC76  F045         	call	_OpenWalkOrder	;wreg free
 15102                           
 15103                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15104  007DEC  EC70  F04E         	call	_InitWalkAutoTime	;wreg free
 15105  007DF0  D7C7               	goto	l23032
 15106  007DF2                     __end_of_actionZone_Closed:
 15107                           	callstack 0
 15108                           
 15109 ;; *************** function _WaitPreFlash *****************
 15110 ;; Defined at:
 15111 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15112 ;; Parameters:    Size  Location     Type
 15113 ;;		None
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;		None
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  1    wreg      void 
 15118 ;; Registers used:
 15119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15120 ;; Tracked objects:
 15121 ;;		On entry : 3F/1
 15122 ;;		On exit  : 3F/1
 15123 ;;		Unchanged: 0/0
 15124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15129 ;;Total ram usage:        0 bytes
 15130 ;; Hardware stack levels used: 1
 15131 ;; Hardware stack levels required when called: 7
 15132 ;; This function calls:
 15133 ;;		_InitFullAutoTime
 15134 ;;		_OpenFullOrder
 15135 ;;		_sm_send_event
 15136 ;; This function is called by:
 15137 ;;		_sm_execute_ControlGate
 15138 ;;		_actionZone_Closed
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text40
 15143  00899C                     __ptext40:
 15144                           	callstack 0
 15145  00899C                     _WaitPreFlash:
 15146                           	callstack 21
 15147                           
 15148                           ; BSR set to: 1
 15149                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15150                           
 15151                           ;incstack = 0
 15152  00899C  0E02               	movlw	2
 15153  00899E  0100               	movlb	0	; () banked
 15154  0089A0  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15155  0089A2  A4D8               	btfss	status,2,c
 15156  0089A4  D014               	goto	l21726
 15157                           
 15158                           ; BSR set to: 0
 15159  0089A6  0101               	movlb	1	; () banked
 15160  0089A8  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15161  0089AA  A4D8               	btfss	status,2,c
 15162  0089AC  D010               	goto	l21726
 15163                           
 15164                           ; BSR set to: 1
 15165  0089AE  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15166  0089B0  D005               	goto	u25270
 15167  0089B2  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15168  0089B4  E10C               	bnz	l21726
 15169  0089B6  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15170  0089B8  B0D8               	btfsc	status,0,c
 15171  0089BA  D009               	goto	l21726
 15172  0089BC                     u25270:
 15173                           
 15174                           ; BSR set to: 1
 15175  0089BC  5191               	movf	_aux_i& (0+255),w,b
 15176  0089BE  A4D8               	btfss	status,2,c
 15177  0089C0  D006               	goto	l21726
 15178                           
 15179                           ; BSR set to: 1
 15180                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15181  0089C2  0E00               	movlw	0
 15182  0089C4  6FE6               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15183  0089C6  0E3C               	movlw	60
 15184  0089C8  6FE5               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15185                           
 15186                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15187  0089CA  0E01               	movlw	1
 15188  0089CC  6F91               	movwf	_aux_i& (0+255),b
 15189  0089CE                     l21726:
 15190                           
 15191                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15192  0089CE  0101               	movlb	1	; () banked
 15193  0089D0  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15194  0089D2  D005               	goto	u25290
 15195  0089D4  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15196  0089D6  E119               	bnz	l2585
 15197  0089D8  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15198  0089DA  B0D8               	btfsc	status,0,c
 15199  0089DC  0012               	return	
 15200  0089DE                     u25290:
 15201                           
 15202                           ; BSR set to: 1
 15203  0089DE  0591               	decf	_aux_i& (0+255),w,b
 15204  0089E0  A4D8               	btfss	status,2,c
 15205  0089E2  0012               	return	
 15206                           
 15207                           ; BSR set to: 1
 15208                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15209  0089E4  0E00               	movlw	0
 15210  0089E6  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15211                           
 15212                           ; BSR set to: 1
 15213                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15214  0089E8  ECF8  F04C         	call	_OpenFullOrder	;wreg free
 15215                           
 15216                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15217  0089EC  ECEC  F04D         	call	_InitFullAutoTime	;wreg free
 15218                           
 15219                           ; BSR set to: 0
 15220                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15221  0089F0  0EF2               	movlw	low _main_stateMachine
 15222  0089F2  6E12               	movwf	sm_send_event@psm^0,c
 15223  0089F4  0E01               	movlw	high _main_stateMachine
 15224  0089F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15225  0089F8  0E00               	movlw	0
 15226  0089FA  6E15               	movwf	(sm_send_event@event+1)^0,c
 15227  0089FC  0E11               	movlw	17
 15228  0089FE  6E14               	movwf	sm_send_event@event^0,c
 15229  008A00  ECE1  F046         	call	_sm_send_event	;wreg free
 15230                           
 15231                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15232  008A04  0E00               	movlw	0
 15233  008A06  0101               	movlb	1	; () banked
 15234  008A08  6F91               	movwf	_aux_i& (0+255),b
 15235  008A0A                     l2585:
 15236                           
 15237                           ; BSR set to: 1
 15238  008A0A  0012               	return		;funcret
 15239  008A0C                     __end_of_WaitPreFlash:
 15240                           	callstack 0
 15241                           
 15242 ;; *************** function _OpenFullOrder *****************
 15243 ;; Defined at:
 15244 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15245 ;; Parameters:    Size  Location     Type
 15246 ;;		None
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;		None
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  1    wreg      void 
 15251 ;; Registers used:
 15252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15253 ;; Tracked objects:
 15254 ;;		On entry : 3E/1
 15255 ;;		On exit  : 3E/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15262 ;;Total ram usage:        0 bytes
 15263 ;; Hardware stack levels used: 1
 15264 ;; Hardware stack levels required when called: 6
 15265 ;; This function calls:
 15266 ;;		_InitSoftStart
 15267 ;;		_sm_send_event
 15268 ;; This function is called by:
 15269 ;;		_WaitPreFlash
 15270 ;;		_actionZone_Closed
 15271 ;;		_actionZone_Opened
 15272 ;;		_actionZone_Closing
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276                           	psect	text41
 15277  0099F0                     __ptext41:
 15278                           	callstack 0
 15279  0099F0                     _OpenFullOrder:
 15280                           	callstack 22
 15281                           
 15282                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15283                           
 15284                           ; BSR set to: 1
 15285                           ;incstack = 0
 15286  0099F0  0E01               	movlw	1
 15287  0099F2  0101               	movlb	1	; () banked
 15288  0099F4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15289                           
 15290                           ; BSR set to: 1
 15291                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15292  0099F6  0EE7               	movlw	low _controlGate_stateMachine
 15293  0099F8  6E12               	movwf	sm_send_event@psm^0,c
 15294  0099FA  0E01               	movlw	high _controlGate_stateMachine
 15295  0099FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15296  0099FE  0E00               	movlw	0
 15297  009A00  6E15               	movwf	(sm_send_event@event+1)^0,c
 15298  009A02  0E0C               	movlw	12
 15299  009A04  6E14               	movwf	sm_send_event@event^0,c
 15300  009A06  ECE1  F046         	call	_sm_send_event	;wreg free
 15301                           
 15302                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15303  009A0A  0E01               	movlw	1
 15304  009A0C  0101               	movlb	1	; () banked
 15305  009A0E  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15306                           
 15307                           ; BSR set to: 1
 15308                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15309  009A10  EC0F  F047         	call	_InitSoftStart	;wreg free
 15310  009A14  0012               	return		;funcret
 15311  009A16                     __end_of_OpenFullOrder:
 15312                           	callstack 0
 15313                           
 15314 ;; *************** function _InitFullAutoTime *****************
 15315 ;; Defined at:
 15316 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;		None
 15319 ;; Auto vars:     Size  Location     Type
 15320 ;;		None
 15321 ;; Return value:  Size  Location     Type
 15322 ;;                  1    wreg      void 
 15323 ;; Registers used:
 15324 ;;		wreg, status,2, status,0, prodl, prodh
 15325 ;; Tracked objects:
 15326 ;;		On entry : 3E/0
 15327 ;;		On exit  : 3F/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15334 ;;Total ram usage:        0 bytes
 15335 ;; Hardware stack levels used: 1
 15336 ;; Hardware stack levels required when called: 4
 15337 ;; This function calls:
 15338 ;;		Nothing
 15339 ;; This function is called by:
 15340 ;;		_WaitPreFlash
 15341 ;;		_actionZone_Closed
 15342 ;;		_actionZone_Opening
 15343 ;;		_actionZone_Opened
 15344 ;;		_actionZone_Closing
 15345 ;; This function uses a non-reentrant model
 15346 ;;
 15347                           
 15348                           	psect	text42
 15349  009BD8                     __ptext42:
 15350                           	callstack 0
 15351  009BD8                     _InitFullAutoTime:
 15352                           	callstack 24
 15353                           
 15354                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15355                           
 15356                           ;incstack = 0
 15357  009BD8  0100               	movlb	0	; () banked
 15358  009BDA  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15359  009BDC  A4D8               	btfss	status,2,c
 15360  009BDE  0012               	return	
 15361                           
 15362                           ; BSR set to: 0
 15363                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15364  009BE0  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15365  009BE2  0D14               	mullw	20
 15366  009BE4  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15367  009BE8  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15371  009BEC  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15372                           
 15373                           ; BSR set to: 0
 15374  009BF0  0012               	return		;funcret
 15375  009BF2                     __end_of_InitFullAutoTime:
 15376                           	callstack 0
 15377                           
 15378 ;; *************** function _OpenWalkOrder *****************
 15379 ;; Defined at:
 15380 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;		None
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;  diffTime        2   25[COMRAM] int 
 15385 ;; Return value:  Size  Location     Type
 15386 ;;                  1    wreg      void 
 15387 ;; Registers used:
 15388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15389 ;; Tracked objects:
 15390 ;;		On entry : 3E/1
 15391 ;;		On exit  : 3E/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15398 ;;Total ram usage:        4 bytes
 15399 ;; Hardware stack levels used: 1
 15400 ;; Hardware stack levels required when called: 6
 15401 ;; This function calls:
 15402 ;;		_InitSoftStart
 15403 ;;		_sm_send_event
 15404 ;; This function is called by:
 15405 ;;		_actionZone_Closed
 15406 ;;		_actionZone_Opened
 15407 ;;		_actionZone_Closing
 15408 ;; This function uses a non-reentrant model
 15409 ;;
 15410                           
 15411                           	psect	text43
 15412  008AEC                     __ptext43:
 15413                           	callstack 0
 15414  008AEC                     _OpenWalkOrder:
 15415                           	callstack 22
 15416                           
 15417                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;incstack = 0
 15421  008AEC  0100               	movlb	0	; () banked
 15422  008AEE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15423  008AF0  0D14               	mullw	20
 15424  008AF2  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15425  008AF6  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15426  008AFA  0101               	movlb	1	; () banked
 15427  008AFC  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15428  008AFE  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15429  008B00  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15430  008B02  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15431  008B04  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15432  008B06  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15433                           
 15434                           ; BSR set to: 1
 15435                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15436  008B08  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15437  008B0A  D022               	goto	l21764
 15438  008B0C  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15439  008B0E  E103               	bnz	u25310
 15440  008B10  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15441  008B12  A0D8               	btfss	status,0,c
 15442  008B14  D01D               	goto	l21764
 15443  008B16                     u25310:
 15444                           
 15445                           ; BSR set to: 1
 15446                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15447  008B16  0EE7               	movlw	low _controlGate_stateMachine
 15448  008B18  6E12               	movwf	sm_send_event@psm^0,c
 15449  008B1A  0E01               	movlw	high _controlGate_stateMachine
 15450  008B1C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15451  008B1E  0E00               	movlw	0
 15452  008B20  6E15               	movwf	(sm_send_event@event+1)^0,c
 15453  008B22  0E0C               	movlw	12
 15454  008B24  6E14               	movwf	sm_send_event@event^0,c
 15455  008B26  ECE1  F046         	call	_sm_send_event	;wreg free
 15456                           
 15457                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15458  008B2A  0101               	movlb	1	; () banked
 15459  008B2C  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15460  008B2E  A4D8               	btfss	status,2,c
 15461  008B30  D005               	goto	l21758
 15462                           
 15463                           ; BSR set to: 1
 15464                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15465  008B32  C01A  F1AF         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15466  008B36  C01B  F1B0         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15467                           
 15468                           ;sm_ControlGate_MC50.c: 79:         }
 15469  008B3A  D006               	goto	l21760
 15470  008B3C                     l21758:
 15471                           
 15472                           ; BSR set to: 1
 15473                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15474  008B3C  0E14               	movlw	20
 15475  008B3E  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15476  008B40  6FAF               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15477  008B42  0E00               	movlw	0
 15478  008B44  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15479  008B46  6FB0               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15480  008B48                     l21760:
 15481                           
 15482                           ; BSR set to: 1
 15483                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15484  008B48  0E02               	movlw	2
 15485  008B4A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15489  008B4C  0E01               	movlw	1
 15490  008B4E  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15491  008B50                     l21764:
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15495  008B50  0E02               	movlw	2
 15496  008B52  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15497                           
 15498                           ; BSR set to: 1
 15499                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15500  008B54  EC0F  F047         	call	_InitSoftStart	;wreg free
 15501  008B58  0012               	return		;funcret
 15502  008B5A                     __end_of_OpenWalkOrder:
 15503                           	callstack 0
 15504                           
 15505 ;; *************** function _sm_send_event *****************
 15506 ;; Defined at:
 15507 ;;		line 34 in file "sm_common_MC50.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;  psm             2   17[COMRAM] PTR struct .
 15510 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15511 ;;  event           2   19[COMRAM] int 
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;		None
 15514 ;; Return value:  Size  Location     Type
 15515 ;;                  1    wreg      void 
 15516 ;; Registers used:
 15517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15518 ;; Tracked objects:
 15519 ;;		On entry : 0/0
 15520 ;;		On exit  : 0/0
 15521 ;;		Unchanged: 0/0
 15522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15527 ;;Total ram usage:        6 bytes
 15528 ;; Hardware stack levels used: 1
 15529 ;; Hardware stack levels required when called: 5
 15530 ;; This function calls:
 15531 ;;		_sm_get_current_state
 15532 ;; This function is called by:
 15533 ;;		_OpenFullOrder
 15534 ;;		_WaitPreFlash
 15535 ;;		_CloseOrder
 15536 ;;		_OpenWalkOrder
 15537 ;;		_StopOrder
 15538 ;;		_sm_execute_ControlGate
 15539 ;;		_actionZone_Closed
 15540 ;;		_actionZone_Opening
 15541 ;;		_actionZone_Closing
 15542 ;;		_sm_execute_ControlLearning
 15543 ;;		_sm_execute_main
 15544 ;;		_sm_execute_menuConfiguration
 15545 ;;		_setValueToEdit
 15546 ;;		_controlSelectRemote
 15547 ;;		_controlSaveRemote
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text44
 15552  008DC2                     __ptext44:
 15553                           	callstack 0
 15554  008DC2                     _sm_send_event:
 15555                           	callstack 24
 15556                           
 15557                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15558                           
 15559                           ;incstack = 0
 15560  008DC2  EE20 F007          	lfsr	2,7
 15561  008DC6  5012               	movf	sm_send_event@psm^0,w,c
 15562  008DC8  26D9               	addwf	fsr2l,f,c
 15563  008DCA  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15564  008DCC  22DA               	addwfc	fsr2h,f,c
 15565  008DCE  50DE               	movf	postinc2,w,c
 15566  008DD0  10DE               	iorwf	postinc2,w,c
 15567  008DD2  B4D8               	btfsc	status,2,c
 15568  008DD4  D019               	goto	u23660
 15569  008DD6  EE20 F007          	lfsr	2,7
 15570  008DDA  5012               	movf	sm_send_event@psm^0,w,c
 15571  008DDC  26D9               	addwf	fsr2l,f,c
 15572  008DDE  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15573  008DE0  22DA               	addwfc	fsr2h,f,c
 15574  008DE2  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15575  008DE6  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15576  008DEA  EC8E  F04E         	call	_sm_get_current_state	;wreg free
 15577  008DEE  EE20 F009          	lfsr	2,9
 15578  008DF2  5012               	movf	sm_send_event@psm^0,w,c
 15579  008DF4  26D9               	addwf	fsr2l,f,c
 15580  008DF6  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15581  008DF8  22DA               	addwfc	fsr2h,f,c
 15582  008DFA  50DE               	movf	postinc2,w,c
 15583  008DFC  1810               	xorwf	?_sm_get_current_state^0,w,c
 15584  008DFE  E10E               	bnz	l3517
 15585  008E00  50DE               	movf	postinc2,w,c
 15586  008E02  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15587  008E04  A4D8               	btfss	status,2,c
 15588  008E06  0012               	return	
 15589  008E08                     u23660:
 15590                           
 15591                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15592  008E08  EE20 F004          	lfsr	2,4
 15593  008E0C  5012               	movf	sm_send_event@psm^0,w,c
 15594  008E0E  26D9               	addwf	fsr2l,f,c
 15595  008E10  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15596  008E12  22DA               	addwfc	fsr2h,f,c
 15597  008E14  C014  FFDE         	movff	sm_send_event@event,postinc2
 15598  008E18  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15599  008E1C                     l3517:
 15600  008E1C  0012               	return		;funcret
 15601  008E1E                     __end_of_sm_send_event:
 15602                           	callstack 0
 15603                           
 15604 ;; *************** function _sm_get_current_state *****************
 15605 ;; Defined at:
 15606 ;;		line 30 in file "sm_common_MC50.c"
 15607 ;; Parameters:    Size  Location     Type
 15608 ;;  psm             2   15[COMRAM] PTR struct .
 15609 ;;		 -> NULL(0), 
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;                  2   15[COMRAM] int 
 15614 ;; Registers used:
 15615 ;;		fsr2l, fsr2h
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15625 ;;Total ram usage:        2 bytes
 15626 ;; Hardware stack levels used: 1
 15627 ;; Hardware stack levels required when called: 4
 15628 ;; This function calls:
 15629 ;;		Nothing
 15630 ;; This function is called by:
 15631 ;;		_sm_send_event
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text45
 15636  009D1C                     __ptext45:
 15637                           	callstack 0
 15638  009D1C                     _sm_get_current_state:
 15639                           	callstack 24
 15640                           
 15641                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15642                           
 15643                           ;incstack = 0
 15644  009D1C  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15645  009D20  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15646  009D24  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15647  009D28  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15648  009D2C  0012               	return		;funcret
 15649  009D2E                     __end_of_sm_get_current_state:
 15650                           	callstack 0
 15651                           
 15652 ;; *************** function _InitSoftStart *****************
 15653 ;; Defined at:
 15654 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;		None
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;		None
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      void 
 15661 ;; Registers used:
 15662 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15663 ;; Tracked objects:
 15664 ;;		On entry : 3F/1
 15665 ;;		On exit  : 3E/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;Total ram usage:        1 bytes
 15673 ;; Hardware stack levels used: 1
 15674 ;; Hardware stack levels required when called: 5
 15675 ;; This function calls:
 15676 ;;		_GetMotorPower
 15677 ;; This function is called by:
 15678 ;;		_OpenFullOrder
 15679 ;;		_CloseOrder
 15680 ;;		_OpenWalkOrder
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           	psect	text46
 15685  008E1E                     __ptext46:
 15686                           	callstack 0
 15687  008E1E                     _InitSoftStart:
 15688                           	callstack 22
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15692                           
 15693                           ;incstack = 0
 15694  008E1E  0100               	movlb	0	; () banked
 15695  008E20  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15696  008E22  B4D8               	btfsc	status,2,c
 15697  008E24  0012               	return	
 15698                           
 15699                           ; BSR set to: 0
 15700  008E26  0101               	movlb	1	; () banked
 15701  008E28  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15702  008E2A  A4D8               	btfss	status,2,c
 15703  008E2C  0012               	return	
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15707  008E2E  0E00               	movlw	0
 15708  008E30  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15709  008E32  0E00               	movlw	0
 15710  008E34  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15711                           
 15712                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15713  008E36  0E00               	movlw	0
 15714  008E38  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15715  008E3A  0E00               	movlw	0
 15716  008E3C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15717                           
 15718                           ; BSR set to: 1
 15719                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15720  008E3E  EC2C  F03D         	call	_GetMotorPower	;wreg free
 15721  008E42  6E14               	movwf	??_InitSoftStart^0,c
 15722  008E44  5014               	movf	??_InitSoftStart^0,w,c
 15723  008E46  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15724  008E48  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15728  008E4A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15729  008E4C  D00A               	goto	l20638
 15730  008E4E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15731  008E50  E104               	bnz	u23690
 15732  008E52  0E52               	movlw	82
 15733  008E54  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15734  008E56  A0D8               	btfss	status,0,c
 15735  008E58  D004               	goto	l20638
 15736  008E5A                     u23690:
 15737                           
 15738                           ; BSR set to: 1
 15739                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15740  008E5A  0E00               	movlw	0
 15741  008E5C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15742  008E5E  0E51               	movlw	81
 15743  008E60  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15744  008E62                     l20638:
 15745                           
 15746                           ; BSR set to: 1
 15747                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15748  008E62  0E01               	movlw	1
 15749  008E64  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15750  008E66  6FB5               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15751  008E68  0E00               	movlw	0
 15752  008E6A  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15753  008E6C  6FB6               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15754                           
 15755                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15756  008E6E  0100               	movlb	0	; () banked
 15757  008E70  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15758  008E72  080A               	sublw	10
 15759  008E74  0101               	movlb	1	; () banked
 15760  008E76  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15761  008E78  0012               	return		;funcret
 15762  008E7A                     __end_of_InitSoftStart:
 15763                           	callstack 0
 15764                           
 15765 ;; *************** function _InitWalkAutoTime *****************
 15766 ;; Defined at:
 15767 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15768 ;; Parameters:    Size  Location     Type
 15769 ;;		None
 15770 ;; Auto vars:     Size  Location     Type
 15771 ;;		None
 15772 ;; Return value:  Size  Location     Type
 15773 ;;                  1    wreg      void 
 15774 ;; Registers used:
 15775 ;;		wreg, status,2, status,0, prodl, prodh
 15776 ;; Tracked objects:
 15777 ;;		On entry : 0/1
 15778 ;;		On exit  : 3F/0
 15779 ;;		Unchanged: 0/0
 15780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15785 ;;Total ram usage:        0 bytes
 15786 ;; Hardware stack levels used: 1
 15787 ;; Hardware stack levels required when called: 4
 15788 ;; This function calls:
 15789 ;;		Nothing
 15790 ;; This function is called by:
 15791 ;;		_actionZone_Closed
 15792 ;;		_actionZone_Opening
 15793 ;;		_actionZone_Opened
 15794 ;;		_actionZone_Closing
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text47
 15799  009CE0                     __ptext47:
 15800                           	callstack 0
 15801  009CE0                     _InitWalkAutoTime:
 15802                           	callstack 24
 15803                           
 15804                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15805                           
 15806                           ;incstack = 0
 15807  009CE0  0100               	movlb	0	; () banked
 15808  009CE2  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15809  009CE4  0D14               	mullw	20
 15810  009CE6  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15811  009CEA  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15815  009CEE  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15816                           
 15817                           ; BSR set to: 0
 15818  009CF2  0012               	return		;funcret
 15819  009CF4                     __end_of_InitWalkAutoTime:
 15820                           	callstack 0
 15821                           
 15822 ;; *************** function _GetSecurityStateInOpening *****************
 15823 ;; Defined at:
 15824 ;;		line 738 in file "inputs_MC50.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;		None
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;		None
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      enum E10564
 15831 ;; Registers used:
 15832 ;;		wreg, status,2, status,0, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 3E/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15842 ;;Total ram usage:        0 bytes
 15843 ;; Hardware stack levels used: 1
 15844 ;; Hardware stack levels required when called: 5
 15845 ;; This function calls:
 15846 ;;		_SetSegmentValueIntermitent
 15847 ;; This function is called by:
 15848 ;;		_actionZone_Closed
 15849 ;;		_actionZone_Opening
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text48
 15854  007E98                     __ptext48:
 15855                           	callstack 0
 15856  007E98                     _GetSecurityStateInOpening:
 15857                           	callstack 23
 15858                           
 15859                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15860                           
 15861                           ; BSR set to: 0
 15862                           ;incstack = 0
 15863  007E98  0100               	movlb	0	; () banked
 15864  007E9A  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15865  007E9C  A4D8               	btfss	status,2,c
 15866  007E9E  D01B               	goto	l21430
 15867                           
 15868                           ; BSR set to: 0
 15869  007EA0  0101               	movlb	1	; () banked
 15870  007EA2  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15871  007EA4  A4D8               	btfss	status,2,c
 15872  007EA6  D017               	goto	l21430
 15873                           
 15874                           ; BSR set to: 1
 15875  007EA8  0100               	movlb	0	; () banked
 15876  007EAA  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15877  007EAC  A4D8               	btfss	status,2,c
 15878  007EAE  D013               	goto	l21430
 15879                           
 15880                           ; BSR set to: 0
 15881  007EB0  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15882  007EB2  A4D8               	btfss	status,2,c
 15883  007EB4  D010               	goto	l21430
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15887  007EB6  0E00               	movlw	0
 15888  007EB8  0101               	movlb	1	; () banked
 15889  007EBA  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15890  007EBC  0E04               	movlw	4
 15891  007EBE  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15892                           
 15893                           ; BSR set to: 1
 15894                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15895  007EC0  0E0A               	movlw	10
 15896  007EC2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15897  007EC4  0E00               	movlw	0
 15898  007EC6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15899  007EC8  0E14               	movlw	20
 15900  007ECA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15901  007ECC  0E12               	movlw	18
 15902  007ECE  EC9F  F04B         	call	_SetSegmentValueIntermitent
 15903  007ED2                     l21424:
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;inputs_MC50.c: 752:         return YES;
 15907  007ED2  0E01               	movlw	1
 15908  007ED4  0012               	return	
 15909  007ED6                     l21430:
 15910  007ED6  0100               	movlb	0	; () banked
 15911  007ED8  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15912  007EDA  A4D8               	btfss	status,2,c
 15913  007EDC  D013               	goto	l21444
 15914                           
 15915                           ; BSR set to: 0
 15916  007EDE  0101               	movlb	1	; () banked
 15917  007EE0  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15918  007EE2  A4D8               	btfss	status,2,c
 15919  007EE4  D00F               	goto	l21444
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15923  007EE6  0E00               	movlw	0
 15924  007EE8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15925  007EEA  0E04               	movlw	4
 15926  007EEC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15927                           
 15928                           ; BSR set to: 1
 15929                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15930  007EEE  0E15               	movlw	21
 15931  007EF0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15932  007EF2  0E00               	movlw	0
 15933  007EF4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15934  007EF6  0E14               	movlw	20
 15935  007EF8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15936  007EFA  0E05               	movlw	5
 15937  007EFC  EC9F  F04B         	call	_SetSegmentValueIntermitent
 15938                           
 15939                           ; BSR set to: 1
 15940                           ;inputs_MC50.c: 760:         return ST;
 15941  007F00  0E02               	movlw	2
 15942  007F02  0012               	return	
 15943  007F04                     l21444:
 15944  007F04  0100               	movlb	0	; () banked
 15945  007F06  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15946  007F08  A4D8               	btfss	status,2,c
 15947  007F0A  D017               	goto	l21460
 15948                           
 15949                           ; BSR set to: 0
 15950  007F0C  0101               	movlb	1	; () banked
 15951  007F0E  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15952  007F10  A4D8               	btfss	status,2,c
 15953  007F12  D013               	goto	l21460
 15954                           
 15955                           ; BSR set to: 1
 15956  007F14  0100               	movlb	0	; () banked
 15957  007F16  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15958  007F18  A4D8               	btfss	status,2,c
 15959  007F1A  D00F               	goto	l21460
 15960                           
 15961                           ; BSR set to: 0
 15962                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15963  007F1C  0E00               	movlw	0
 15964  007F1E  0101               	movlb	1	; () banked
 15965  007F20  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15966  007F22  0E04               	movlw	4
 15967  007F24  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15968                           
 15969                           ; BSR set to: 1
 15970                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15971  007F26  0E0E               	movlw	14
 15972  007F28  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15973  007F2A  0E00               	movlw	0
 15974  007F2C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15975  007F2E  0E14               	movlw	20
 15976  007F30  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15977  007F32  0E12               	movlw	18
 15978  007F34  EC9F  F04B         	call	_SetSegmentValueIntermitent
 15979  007F38  D7CC               	goto	l21424
 15980  007F3A                     l21460:
 15981                           
 15982                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 15983  007F3A  0E00               	movlw	0
 15984  007F3C  0012               	return		;funcret
 15985  007F3E                     __end_of_GetSecurityStateInOpening:
 15986                           	callstack 0
 15987                           
 15988 ;; *************** function _SetSegmentValueIntermitent *****************
 15989 ;; Defined at:
 15990 ;;		line 201 in file "outputs_MC50.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;  d1              1    wreg     unsigned char 
 15993 ;;  d2              1   15[COMRAM] unsigned char 
 15994 ;;  time            2   16[COMRAM] int 
 15995 ;; Auto vars:     Size  Location     Type
 15996 ;;  d1              1   18[COMRAM] unsigned char 
 15997 ;; Return value:  Size  Location     Type
 15998 ;;                  1    wreg      void 
 15999 ;; Registers used:
 16000 ;;		wreg, status,2, status,0
 16001 ;; Tracked objects:
 16002 ;;		On entry : 3E/0
 16003 ;;		On exit  : 3F/1
 16004 ;;		Unchanged: 0/0
 16005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16006 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16010 ;;Total ram usage:        4 bytes
 16011 ;; Hardware stack levels used: 1
 16012 ;; Hardware stack levels required when called: 4
 16013 ;; This function calls:
 16014 ;;		Nothing
 16015 ;; This function is called by:
 16016 ;;		_GetSecurityStateInOpening
 16017 ;;		_GetSecurityStateInClosing
 16018 ;;		_sm_execute_ControlGate
 16019 ;;		_actionZone_Opening
 16020 ;;		_actionZone_Closing
 16021 ;; This function uses a non-reentrant model
 16022 ;;
 16023                           
 16024                           	psect	text49
 16025  00973E                     __ptext49:
 16026                           	callstack 0
 16027  00973E                     _SetSegmentValueIntermitent:
 16028                           	callstack 24
 16029                           
 16030                           ;incstack = 0
 16031                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16032  00973E  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16033                           
 16034                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16035  009740  0101               	movlb	1	; () banked
 16036  009742  05F2               	decf	_main_stateMachine& (0+255),w,b
 16037  009744  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16038  009746  B4D8               	btfsc	status,2,c
 16039  009748  0012               	return	
 16040                           
 16041                           ; BSR set to: 1
 16042  00974A  51AD               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16043  00974C  11AE               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16044  00974E  A4D8               	btfss	status,2,c
 16045  009750  0012               	return	
 16046                           
 16047                           ; BSR set to: 1
 16048  009752  0E14               	movlw	20
 16049  009754  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16050  009756  0012               	return	
 16051                           
 16052                           ; BSR set to: 1
 16053                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16054  009758  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16055                           
 16056                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16057  00975C  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16058                           
 16059                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16060  009760  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16061  009764  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16062                           
 16063                           ; BSR set to: 1
 16064  009768  0012               	return		;funcret
 16065  00976A                     __end_of_SetSegmentValueIntermitent:
 16066                           	callstack 0
 16067                           
 16068 ;; *************** function _GetOpenOrder *****************
 16069 ;; Defined at:
 16070 ;;		line 330 in file "inputs_MC50.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;		None
 16073 ;; Auto vars:     Size  Location     Type
 16074 ;;		None
 16075 ;; Return value:  Size  Location     Type
 16076 ;;                  1    wreg      enum E10539
 16077 ;; Registers used:
 16078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16079 ;; Tracked objects:
 16080 ;;		On entry : 3E/1
 16081 ;;		On exit  : 0/0
 16082 ;;		Unchanged: 0/0
 16083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;Total ram usage:        0 bytes
 16089 ;; Hardware stack levels used: 1
 16090 ;; Hardware stack levels required when called: 5
 16091 ;; This function calls:
 16092 ;;		_SetSegmentValueIntermitentMain
 16093 ;;		___lbdiv
 16094 ;; This function is called by:
 16095 ;;		_sm_execute_ControlGate
 16096 ;;		_actionZone_Closed
 16097 ;;		_actionZone_Opening
 16098 ;;		_actionZone_Opened
 16099 ;;		_actionZone_Closing
 16100 ;;		_sm_execute_ControlLearning
 16101 ;; This function uses a non-reentrant model
 16102 ;;
 16103                           
 16104                           	psect	text50
 16105  005D64                     __ptext50:
 16106                           	callstack 0
 16107  005D64                     _GetOpenOrder:
 16108                           	callstack 23
 16109                           
 16110                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16111                           
 16112                           ; BSR set to: 1
 16113                           ;incstack = 0
 16114  005D64  0101               	movlb	1	; () banked
 16115  005D66  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16116  005D68  A4D8               	btfss	status,2,c
 16117  005D6A  D0C0               	goto	l21400
 16118                           
 16119                           ; BSR set to: 1
 16120                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16121  005D6C  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16122  005D6E  D019               	goto	l21292
 16123  005D70  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16124  005D72  E103               	bnz	u24520
 16125  005D74  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16126  005D76  A0D8               	btfss	status,0,c
 16127  005D78  D014               	goto	l21292
 16128  005D7A                     u24520:
 16129                           
 16130                           ; BSR set to: 1
 16131                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16132  005D7A  0E01               	movlw	1
 16133  005D7C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16134  005D7E  0E00               	movlw	0
 16135  005D80  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16136  005D82  0E14               	movlw	20
 16137  005D84  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16138  005D86  0E12               	movlw	18
 16139  005D88  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16140                           
 16141                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16142  005D8C  0E00               	movlw	0
 16143  005D8E  0101               	movlb	1	; () banked
 16144  005D90  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16145  005D92  0E0A               	movlw	10
 16146  005D94  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16147                           
 16148                           ; BSR set to: 1
 16149                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16150  005D96  0E01               	movlw	1
 16151  005D98  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16152                           
 16153                           ; BSR set to: 1
 16154                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16155  005D9A  0E01               	movlw	1
 16156  005D9C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16157  005D9E                     l21286:
 16158                           
 16159                           ;inputs_MC50.c: 341:             return NoCMD;
 16160  005D9E  0E00               	movlw	0
 16161  005DA0  0012               	return	
 16162  005DA2                     l21292:
 16163                           
 16164                           ; BSR set to: 1
 16165  005DA2  0100               	movlb	0	; () banked
 16166  005DA4  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16167  005DA6  B4D8               	btfsc	status,2,c
 16168  005DA8  D02F               	goto	l21326
 16169                           
 16170                           ; BSR set to: 0
 16171                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16172  005DAA  0E35               	movlw	53
 16173  005DAC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16174  005DAE  A4D8               	btfss	status,2,c
 16175  005DB0  D017               	goto	l21310
 16176                           
 16177                           ; BSR set to: 0
 16178                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16179  005DB2  0E00               	movlw	0
 16180  005DB4  0101               	movlb	1	; () banked
 16181  005DB6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16182  005DB8  0E0A               	movlw	10
 16183  005DBA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16184                           
 16185                           ; BSR set to: 1
 16186                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16187  005DBC  0E00               	movlw	0
 16188  005DBE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16189  005DC0  0E00               	movlw	0
 16190  005DC2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16191  005DC4  0E04               	movlw	4
 16192  005DC6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16193  005DC8  0E12               	movlw	18
 16194  005DCA  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16195                           
 16196                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16197  005DCE  0E02               	movlw	2
 16198  005DD0  0100               	movlb	0	; () banked
 16199  005DD2  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16200  005DD4  A4D8               	btfss	status,2,c
 16201  005DD6  D002               	goto	l21304
 16202  005DD8                     u24550:
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16206  005DD8  0E01               	movlw	1
 16207  005DDA  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16208  005DDC                     l21304:
 16209                           
 16210                           ; BSR set to: 0
 16211                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16212  005DDC  0E03               	movlw	3
 16213  005DDE  0012               	return	
 16214  005DE0                     l21310:
 16215                           
 16216                           ; BSR set to: 0
 16217  005DE0  0E33               	movlw	51
 16218  005DE2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16219  005DE4  A4D8               	btfss	status,2,c
 16220  005DE6  D7DB               	goto	l21286
 16221                           
 16222                           ; BSR set to: 0
 16223                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16224  005DE8  0E00               	movlw	0
 16225  005DEA  0101               	movlb	1	; () banked
 16226  005DEC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16227  005DEE  0E0A               	movlw	10
 16228  005DF0  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16229                           
 16230                           ; BSR set to: 1
 16231                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16232  005DF2  0E05               	movlw	5
 16233  005DF4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16234  005DF6  0E00               	movlw	0
 16235  005DF8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16236  005DFA  0E04               	movlw	4
 16237  005DFC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16238  005DFE  0E12               	movlw	18
 16239  005E00  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16240  005E04                     l21316:
 16241                           
 16242                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16243  005E04  0E04               	movlw	4
 16244  005E06  0012               	return	
 16245  005E08                     l21326:
 16246                           
 16247                           ; BSR set to: 0
 16248  005E08  0E35               	movlw	53
 16249  005E0A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16250  005E0C  A4D8               	btfss	status,2,c
 16251  005E0E  D016               	goto	l21348
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16255  005E10  0E00               	movlw	0
 16256  005E12  0101               	movlb	1	; () banked
 16257  005E14  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16258  005E16  0E28               	movlw	40
 16259  005E18  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16260                           
 16261                           ; BSR set to: 1
 16262                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16263  005E1A  0E00               	movlw	0
 16264  005E1C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16265  005E1E  0E00               	movlw	0
 16266  005E20  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16267  005E22  0E04               	movlw	4
 16268  005E24  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16269  005E26  0E12               	movlw	18
 16270  005E28  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16271                           
 16272                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16273  005E2C  0100               	movlb	0	; () banked
 16274  005E2E  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16275  005E30  B4D8               	btfsc	status,2,c
 16276  005E32  D7D2               	goto	u24550
 16277  005E34                     l21342:
 16278                           
 16279                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16280  005E34  0E01               	movlw	1
 16281  005E36  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16282                           
 16283                           ;inputs_MC50.c: 382:                 return TypeFull;
 16284  005E38  0E01               	movlw	1
 16285  005E3A  0012               	return	
 16286  005E3C                     l21348:
 16287                           
 16288                           ; BSR set to: 0
 16289  005E3C  0E33               	movlw	51
 16290  005E3E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16291  005E40  A4D8               	btfss	status,2,c
 16292  005E42  D019               	goto	l21370
 16293                           
 16294                           ; BSR set to: 0
 16295                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16296  005E44  0E00               	movlw	0
 16297  005E46  0101               	movlb	1	; () banked
 16298  005E48  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16299  005E4A  0E28               	movlw	40
 16300  005E4C  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16301                           
 16302                           ; BSR set to: 1
 16303                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16304  005E4E  0E05               	movlw	5
 16305  005E50  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16306  005E52  0E00               	movlw	0
 16307  005E54  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16308  005E56  0E04               	movlw	4
 16309  005E58  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16310  005E5A  0E12               	movlw	18
 16311  005E5C  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16312                           
 16313                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16314  005E60  0100               	movlb	0	; () banked
 16315  005E62  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16316  005E64  A4D8               	btfss	status,2,c
 16317  005E66  D003               	goto	l21364
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16321  005E68  0E01               	movlw	1
 16322  005E6A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16323  005E6C  D7CB               	goto	l21316
 16324  005E6E                     l21364:
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16328  005E6E  0E01               	movlw	1
 16329  005E70  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16333  005E72  0E02               	movlw	2
 16334  005E74  0012               	return	
 16335  005E76                     l21370:
 16336                           
 16337                           ; BSR set to: 0
 16338  005E76  0E36               	movlw	54
 16339  005E78  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16340  005E7A  A4D8               	btfss	status,2,c
 16341  005E7C  D00F               	goto	l21384
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16345  005E7E  0E00               	movlw	0
 16346  005E80  0101               	movlb	1	; () banked
 16347  005E82  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16348  005E84  0E28               	movlw	40
 16349  005E86  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16353  005E88  0E13               	movlw	19
 16354  005E8A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16355  005E8C  0E00               	movlw	0
 16356  005E8E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16357  005E90  0E04               	movlw	4
 16358  005E92  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16359  005E94  0E10               	movlw	16
 16360  005E96  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16361  005E9A  D7CC               	goto	l21342
 16362  005E9C                     l21384:
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16366  005E9C  503B               	movf	_rfCMD^0,w,c	;volatile
 16367  005E9E  B4D8               	btfsc	status,2,c
 16368  005EA0  D023               	goto	l21396
 16369                           
 16370                           ; BSR set to: 0
 16371  005EA2  0E06               	movlw	6
 16372  005EA4  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16373  005EA6  B4D8               	btfsc	status,2,c
 16374  005EA8  D01F               	goto	l21396
 16375                           
 16376                           ; BSR set to: 0
 16377  005EAA  0E05               	movlw	5
 16378  005EAC  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16379  005EAE  B4D8               	btfsc	status,2,c
 16380  005EB0  D01B               	goto	l21396
 16381                           
 16382                           ; BSR set to: 0
 16383                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16384  005EB2  0E0A               	movlw	10
 16385  005EB4  6E10               	movwf	___lbdiv@divisor^0,c
 16386  005EB6  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16387  005EB8  ECD2  F04A         	call	___lbdiv
 16388  005EBC  0DF6               	mullw	246
 16389  005EBE  50F3               	movf	243,w,c
 16390  005EC0  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16391  005EC2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16392  005EC4  0E00               	movlw	0
 16393  005EC6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16394  005EC8  0E04               	movlw	4
 16395  005ECA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16396  005ECC  0E0A               	movlw	10
 16397  005ECE  6E10               	movwf	___lbdiv@divisor^0,c
 16398  005ED0  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16399  005ED2  ECD2  F04A         	call	___lbdiv
 16400  005ED6  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16401                           
 16402                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16403  005EDA  0E00               	movlw	0
 16404  005EDC  0101               	movlb	1	; () banked
 16405  005EDE  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16406  005EE0  0E28               	movlw	40
 16407  005EE2  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16408                           
 16409                           ; BSR set to: 1
 16410                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16411  005EE4  0E01               	movlw	1
 16412  005EE6  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16413  005EE8                     l21396:
 16414                           
 16415                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16416  005EE8  503B               	movf	_rfCMD^0,w,c	;volatile
 16417  005EEA  0012               	return	
 16418  005EEC                     l21400:
 16419                           
 16420                           ; BSR set to: 1
 16421                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16422  005EEC  503B               	movf	_rfCMD^0,w,c	;volatile
 16423  005EEE  B4D8               	btfsc	status,2,c
 16424  005EF0  D01B               	goto	l21408
 16425                           
 16426                           ; BSR set to: 1
 16427                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16428  005EF2  0E0A               	movlw	10
 16429  005EF4  6E10               	movwf	___lbdiv@divisor^0,c
 16430  005EF6  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16431  005EF8  ECD2  F04A         	call	___lbdiv
 16432  005EFC  0DF6               	mullw	246
 16433  005EFE  50F3               	movf	243,w,c
 16434  005F00  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16435  005F02  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16436  005F04  0E00               	movlw	0
 16437  005F06  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16438  005F08  0E04               	movlw	4
 16439  005F0A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16440  005F0C  0E0A               	movlw	10
 16441  005F0E  6E10               	movwf	___lbdiv@divisor^0,c
 16442  005F10  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16443  005F12  ECD2  F04A         	call	___lbdiv
 16444  005F16  EC7A  F04E         	call	_SetSegmentValueIntermitentMain
 16445                           
 16446                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16447  005F1A  0E00               	movlw	0
 16448  005F1C  0101               	movlb	1	; () banked
 16449  005F1E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16450  005F20  0E14               	movlw	20
 16451  005F22  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16452                           
 16453                           ; BSR set to: 1
 16454                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16455  005F24  0E01               	movlw	1
 16456  005F26  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16457  005F28                     l21408:
 16458                           
 16459                           ; BSR set to: 1
 16460                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16461  005F28  503B               	movf	_rfCMD^0,w,c	;volatile
 16462  005F2A  0012               	return		;funcret
 16463  005F2C                     __end_of_GetOpenOrder:
 16464                           	callstack 0
 16465                           
 16466 ;; *************** function ___lbdiv *****************
 16467 ;; Defined at:
 16468 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16469 ;; Parameters:    Size  Location     Type
 16470 ;;  dividend        1    wreg     unsigned char 
 16471 ;;  divisor         1   15[COMRAM] unsigned char 
 16472 ;; Auto vars:     Size  Location     Type
 16473 ;;  dividend        1   16[COMRAM] unsigned char 
 16474 ;;  quotient        1   18[COMRAM] unsigned char 
 16475 ;;  counter         1   17[COMRAM] unsigned char 
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  1    wreg      unsigned char 
 16478 ;; Registers used:
 16479 ;;		wreg, status,2, status,0
 16480 ;; Tracked objects:
 16481 ;;		On entry : 0/0
 16482 ;;		On exit  : 0/0
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16485 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16486 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16489 ;;Total ram usage:        4 bytes
 16490 ;; Hardware stack levels used: 1
 16491 ;; Hardware stack levels required when called: 4
 16492 ;; This function calls:
 16493 ;;		Nothing
 16494 ;; This function is called by:
 16495 ;;		_GetOpenOrder
 16496 ;;		_sm_execute_menuConfiguration
 16497 ;; This function uses a non-reentrant model
 16498 ;;
 16499                           
 16500                           	psect	text51
 16501  0095A4                     __ptext51:
 16502                           	callstack 0
 16503  0095A4                     ___lbdiv:
 16504                           	callstack 24
 16505                           
 16506                           ;incstack = 0
 16507                           ;___lbdiv@dividend stored from wreg
 16508  0095A4  6E11               	movwf	___lbdiv@dividend^0,c
 16509  0095A6  0E00               	movlw	0
 16510  0095A8  6E13               	movwf	___lbdiv@quotient^0,c
 16511  0095AA  5010               	movf	___lbdiv@divisor^0,w,c
 16512  0095AC  B4D8               	btfsc	status,2,c
 16513  0095AE  D015               	goto	l21156
 16514  0095B0  0E01               	movlw	1
 16515  0095B2  6E12               	movwf	___lbdiv@counter^0,c
 16516  0095B4  D003               	goto	l21144
 16517  0095B6                     l21140:
 16518  0095B6  90D8               	bcf	status,0,c
 16519  0095B8  3610               	rlcf	___lbdiv@divisor^0,f,c
 16520  0095BA  2A12               	incf	___lbdiv@counter^0,f,c
 16521  0095BC                     l21144:
 16522  0095BC  AE10               	btfss	___lbdiv@divisor^0,7,c
 16523  0095BE  D7FB               	goto	l21140
 16524  0095C0                     u24350:
 16525  0095C0  90D8               	bcf	status,0,c
 16526  0095C2  3613               	rlcf	___lbdiv@quotient^0,f,c
 16527  0095C4  5010               	movf	___lbdiv@divisor^0,w,c
 16528  0095C6  5C11               	subwf	___lbdiv@dividend^0,w,c
 16529  0095C8  A0D8               	btfss	status,0,c
 16530  0095CA  D003               	goto	l21152
 16531  0095CC  5010               	movf	___lbdiv@divisor^0,w,c
 16532  0095CE  5E11               	subwf	___lbdiv@dividend^0,f,c
 16533  0095D0  8013               	bsf	___lbdiv@quotient^0,0,c
 16534  0095D2                     l21152:
 16535  0095D2  90D8               	bcf	status,0,c
 16536  0095D4  3210               	rrcf	___lbdiv@divisor^0,f,c
 16537  0095D6  2E12               	decfsz	___lbdiv@counter^0,f,c
 16538  0095D8  D7F3               	goto	u24350
 16539  0095DA                     l21156:
 16540  0095DA  5013               	movf	___lbdiv@quotient^0,w,c
 16541  0095DC  0012               	return		;funcret
 16542  0095DE                     __end_of___lbdiv:
 16543                           	callstack 0
 16544                           
 16545 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16546 ;; Defined at:
 16547 ;;		line 193 in file "outputs_MC50.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;  d1              1    wreg     unsigned char 
 16550 ;;  d2              1   27[COMRAM] unsigned char 
 16551 ;;  time            2   28[COMRAM] int 
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;  d1              1   30[COMRAM] unsigned char 
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      void 
 16556 ;; Registers used:
 16557 ;;		wreg
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/1
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16563 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;Total ram usage:        4 bytes
 16568 ;; Hardware stack levels used: 1
 16569 ;; Hardware stack levels required when called: 4
 16570 ;; This function calls:
 16571 ;;		Nothing
 16572 ;; This function is called by:
 16573 ;;		_GetOpenOrder
 16574 ;;		_sm_execute_main
 16575 ;;		_sm_execute_menuConfiguration
 16576 ;;		_load_New_Menu
 16577 ;;		_controlSelectRemote
 16578 ;;		_controlSaveRemote
 16579 ;; This function uses a non-reentrant model
 16580 ;;
 16581                           
 16582                           	psect	text52
 16583  009CF4                     __ptext52:
 16584                           	callstack 0
 16585  009CF4                     _SetSegmentValueIntermitentMain:
 16586                           	callstack 22
 16587                           
 16588                           ;incstack = 0
 16589                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16590  009CF4  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16591                           
 16592                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16593  009CF6  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16594                           
 16595                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16596  009CFA  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16597                           
 16598                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16599  009CFE  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16600  009D02  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16601  009D06  0012               	return		;funcret
 16602  009D08                     __end_of_SetSegmentValueIntermitentMain:
 16603                           	callstack 0
 16604                           
 16605 ;; *************** function _readbutton *****************
 16606 ;; Defined at:
 16607 ;;		line 471 in file "inputs_MC50.c"
 16608 ;; Parameters:    Size  Location     Type
 16609 ;;		None
 16610 ;; Auto vars:     Size  Location     Type
 16611 ;;		None
 16612 ;; Return value:  Size  Location     Type
 16613 ;;                  1    wreg      void 
 16614 ;; Registers used:
 16615 ;;		wreg, status,2, status,0
 16616 ;; Tracked objects:
 16617 ;;		On entry : 3F/1
 16618 ;;		On exit  : 3F/1
 16619 ;;		Unchanged: 0/0
 16620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16625 ;;Total ram usage:        0 bytes
 16626 ;; Hardware stack levels used: 1
 16627 ;; Hardware stack levels required when called: 4
 16628 ;; This function calls:
 16629 ;;		Nothing
 16630 ;; This function is called by:
 16631 ;;		_main
 16632 ;; This function uses a non-reentrant model
 16633 ;;
 16634                           
 16635                           	psect	text53
 16636  008BC8                     __ptext53:
 16637                           	callstack 0
 16638  008BC8                     _readbutton:
 16639                           	callstack 26
 16640                           
 16641                           ; BSR set to: 1
 16642                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16643                           
 16644                           ;incstack = 0
 16645  008BC8  508E               	movf	142,w,c	;volatile
 16646  008BCA  0B37               	andlw	55
 16647  008BCC  6F9B               	movwf	readbutton@key2& (0+255),b
 16648  008BCE  F000               	nop		;# 
 16649  008BD0  F000               	nop		;# 
 16650  008BD2  F000               	nop		;# 
 16651                           
 16652                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16653  008BD4  508E               	movf	142,w,c	;volatile
 16654  008BD6  0B37               	andlw	55
 16655  008BD8  0100               	movlb	0	; () banked
 16656  008BDA  6F86               	movwf	readbutton@key1& (0+255),b
 16657                           
 16658                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16659  008BDC  5186               	movf	readbutton@key1& (0+255),w,b
 16660  008BDE  0101               	movlb	1	; () banked
 16661  008BE0  199B               	xorwf	readbutton@key2& (0+255),w,b
 16662  008BE2  A4D8               	btfss	status,2,c
 16663  008BE4  D003               	goto	l24712
 16664                           
 16665                           ; BSR set to: 1
 16666                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16667  008BE6  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16668                           
 16669                           ;inputs_MC50.c: 488:  }
 16670  008BEA  D002               	goto	l24714
 16671  008BEC                     l24712:
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16675  008BEC  0E37               	movlw	55
 16676  008BEE  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16677  008BF0                     l24714:
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16681  008BF0  0E37               	movlw	55
 16682  008BF2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16683  008BF4  B4D8               	btfsc	status,2,c
 16684  008BF6  D007               	goto	u30060
 16685                           
 16686                           ; BSR set to: 1
 16687  008BF8  504C               	movf	_button_struct^0,w,c	;volatile
 16688  008BFA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16689  008BFC  B4D8               	btfsc	status,2,c
 16690  008BFE  D007               	goto	l24722
 16691                           
 16692                           ; BSR set to: 1
 16693  008C00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16694  008C02  A4D8               	btfss	status,2,c
 16695  008C04  D004               	goto	l24722
 16696  008C06                     u30060:
 16697                           
 16698                           ; BSR set to: 1
 16699                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16700  008C06  0E00               	movlw	0
 16701  008C08  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16702                           
 16703                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16704  008C0A  0E00               	movlw	0
 16705  008C0C  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16706  008C0E                     l24722:
 16707                           
 16708                           ; BSR set to: 1
 16709                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16710  008C0E  0E37               	movlw	55
 16711  008C10  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16712  008C12  B4D8               	btfsc	status,2,c
 16713  008C14  D007               	goto	l24730
 16714                           
 16715                           ; BSR set to: 1
 16716                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16717  008C16  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16718                           
 16719                           ; BSR set to: 1
 16720                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16721  008C1A  0EFA               	movlw	250
 16722  008C1C  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16723  008C1E  D004               	goto	l24732
 16724                           
 16725                           ; BSR set to: 1
 16726                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16727  008C20  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16728  008C22  D002               	goto	l24732
 16729  008C24                     l24730:
 16730                           
 16731                           ; BSR set to: 1
 16732                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16733  008C24  0E00               	movlw	0
 16734  008C26  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16735  008C28                     l24732:
 16736                           
 16737                           ; BSR set to: 1
 16738                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16739  008C28  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16740  008C2A  A4D8               	btfss	status,2,c
 16741  008C2C  0012               	return	
 16742                           
 16743                           ; BSR set to: 1
 16744                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16745  008C2E  0E37               	movlw	55
 16746  008C30  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16747                           
 16748                           ; BSR set to: 1
 16749  008C32  0012               	return		;funcret
 16750  008C34                     __end_of_readbutton:
 16751                           	callstack 0
 16752                           
 16753 ;; *************** function _read_package *****************
 16754 ;; Defined at:
 16755 ;;		line 21 in file "eusartpackage.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;  package         7   23[COMRAM] struct package_t
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  7   16[COMRAM] struct package_t
 16762 ;; Registers used:
 16763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 3F/0
 16766 ;;		On exit  : 3F/E
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16769 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16772 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16773 ;;Total ram usage:       14 bytes
 16774 ;; Hardware stack levels used: 1
 16775 ;; Hardware stack levels required when called: 5
 16776 ;; This function calls:
 16777 ;;		_EUSART1_Read
 16778 ;; This function is called by:
 16779 ;;		_main
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text54
 16784  00918A                     __ptext54:
 16785                           	callstack 0
 16786  00918A                     _read_package:
 16787                           	callstack 25
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16791                           
 16792                           ; BSR set to: 1
 16793                           ;incstack = 0
 16794  00918A  EC88  F049         	call	_EUSART1_Read	;wreg free
 16795  00918E  0A0A               	xorlw	10
 16796  009190  B4D8               	btfsc	status,2,c
 16797  009192  D00C               	goto	l24890
 16798  009194                     u30590:
 16799                           
 16800                           ; BSR set to: 14
 16801                           ;eusartpackage.c: 25:             package.valid=0;
 16802  009194  0E00               	movlw	0
 16803  009196  6E1E               	movwf	(read_package@package+6)^0,c
 16804                           
 16805                           ; BSR set to: 14
 16806                           ;eusartpackage.c: 26:             return package;
 16807  009198  EE20  F018         	lfsr	2,read_package@package
 16808  00919C  EE00  F011         	lfsr	0,?_read_package
 16809  0091A0  0E06               	movlw	6
 16810  0091A2                     u30601:
 16811  0091A2  CFDB FFEB          	movff	plusw2,plusw0
 16812  0091A6  06E8               	decf	wreg,f,c
 16813  0091A8  E2FC               	bc	u30601
 16814  0091AA  0012               	return	
 16815  0091AC                     l24890:
 16816                           
 16817                           ; BSR set to: 14
 16818                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16819  0091AC  0E0A               	movlw	10
 16820  0091AE  6E1C               	movwf	(read_package@package+4)^0,c
 16821                           
 16822                           ; BSR set to: 14
 16823                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16824  0091B0  EC88  F049         	call	_EUSART1_Read	;wreg free
 16825  0091B4  6E18               	movwf	read_package@package^0,c
 16826                           
 16827                           ; BSR set to: 14
 16828                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16829  0091B6  EC88  F049         	call	_EUSART1_Read	;wreg free
 16830  0091BA  6E19               	movwf	(read_package@package+1)^0,c
 16831                           
 16832                           ; BSR set to: 14
 16833                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16834  0091BC  EC88  F049         	call	_EUSART1_Read	;wreg free
 16835  0091C0  6E1A               	movwf	(read_package@package+2)^0,c
 16836                           
 16837                           ; BSR set to: 14
 16838                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16839  0091C2  EC88  F049         	call	_EUSART1_Read	;wreg free
 16840  0091C6  6E1B               	movwf	(read_package@package+3)^0,c
 16841                           
 16842                           ; BSR set to: 14
 16843                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16844  0091C8  EC88  F049         	call	_EUSART1_Read	;wreg free
 16845  0091CC  0A0D               	xorlw	13
 16846  0091CE  A4D8               	btfss	status,2,c
 16847  0091D0  D7E1               	goto	u30590
 16848                           
 16849                           ; BSR set to: 14
 16850                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16851  0091D2  0E0D               	movlw	13
 16852  0091D4  6E1D               	movwf	(read_package@package+5)^0,c
 16853                           
 16854                           ; BSR set to: 14
 16855                           ;eusartpackage.c: 46:         package.valid=1;
 16856  0091D6  0E01               	movlw	1
 16857  0091D8  D7DE               	goto	L76
 16858  0091DA                     __end_of_read_package:
 16859                           	callstack 0
 16860                           
 16861 ;; *************** function _EUSART1_Read *****************
 16862 ;; Defined at:
 16863 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16864 ;; Parameters:    Size  Location     Type
 16865 ;;		None
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  readValue       1   15[COMRAM] unsigned char 
 16868 ;; Return value:  Size  Location     Type
 16869 ;;                  1    wreg      unsigned char 
 16870 ;; Registers used:
 16871 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16872 ;; Tracked objects:
 16873 ;;		On entry : 31/0
 16874 ;;		On exit  : 3F/E
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;Total ram usage:        1 bytes
 16882 ;; Hardware stack levels used: 1
 16883 ;; Hardware stack levels required when called: 4
 16884 ;; This function calls:
 16885 ;;		Nothing
 16886 ;; This function is called by:
 16887 ;;		_read_package
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text55
 16892  009310                     __ptext55:
 16893                           	callstack 0
 16894  009310                     _EUSART1_Read:
 16895                           	callstack 25
 16896                           
 16897                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16898                           
 16899                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16900                           
 16901                           ; BSR set to: 14
 16902                           ;incstack = 0
 16903  009310  0100               	movlb	0	; () banked
 16904  009312  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16905  009314  B4D8               	btfsc	status,2,c
 16906  009316  D7FC               	goto	__ptext55
 16907                           
 16908                           ; BSR set to: 0
 16909                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16910  009318  0E74               	movlw	low _eusart1RxStatusBuffer
 16911  00931A  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16912  00931C  6ED9               	movwf	fsr2l,c
 16913  00931E  6ADA               	clrf	fsr2h,c
 16914  009320  0E02               	movlw	high _eusart1RxStatusBuffer
 16915  009322  22DA               	addwfc	fsr2h,f,c
 16916  009324  50DF               	movf	indf2,w,c
 16917  009326  0101               	movlb	1	; () banked
 16918  009328  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16919                           
 16920                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16921  00932A  0E7C               	movlw	low _eusart1RxBuffer
 16922  00932C  0100               	movlb	0	; () banked
 16923  00932E  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16924  009330  6ED9               	movwf	fsr2l,c
 16925  009332  6ADA               	clrf	fsr2h,c
 16926  009334  0E02               	movlw	high _eusart1RxBuffer
 16927  009336  22DA               	addwfc	fsr2h,f,c
 16928  009338  50DF               	movf	indf2,w,c
 16929  00933A  6E10               	movwf	EUSART1_Read@readValue^0,c
 16930                           
 16931                           ; BSR set to: 0
 16932  00933C  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16936  00933E  0E07               	movlw	7
 16937  009340  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16938  009342  D002               	goto	l22544
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16942  009344  0E00               	movlw	0
 16943  009346  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16944  009348                     l22544:
 16945                           
 16946                           ; BSR set to: 0
 16947                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16948  009348  010E               	movlb	14	; () banked
 16949  00934A  9BC5               	bcf	197,5,b	;volatile
 16950                           
 16951                           ; BSR set to: 14
 16952                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16953  00934C  0100               	movlb	0	; () banked
 16954  00934E  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16955                           
 16956                           ; BSR set to: 0
 16957                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16958  009350  010E               	movlb	14	; () banked
 16959  009352  8BC5               	bsf	197,5,b	;volatile
 16960                           
 16961                           ; BSR set to: 14
 16962                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16963  009354  5010               	movf	EUSART1_Read@readValue^0,w,c
 16964                           
 16965                           ; BSR set to: 14
 16966  009356  0012               	return		;funcret
 16967  009358                     __end_of_EUSART1_Read:
 16968                           	callstack 0
 16969                           
 16970 ;; *************** function _readRFButtons *****************
 16971 ;; Defined at:
 16972 ;;		line 231 in file "inputs_MC50.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;		None
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  1    wreg      void 
 16979 ;; Registers used:
 16980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16981 ;; Tracked objects:
 16982 ;;		On entry : 3F/1
 16983 ;;		On exit  : 3E/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16990 ;;Total ram usage:        0 bytes
 16991 ;; Hardware stack levels used: 1
 16992 ;; Hardware stack levels required when called: 15
 16993 ;; This function calls:
 16994 ;;		_DecryptPacket_12BIT
 16995 ;;		_keeloqDecryptPacket
 16996 ;; This function is called by:
 16997 ;;		_main
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text56
 17002  00659C                     __ptext56:
 17003                           	callstack 0
 17004  00659C                     _readRFButtons:
 17005                           	callstack 15
 17006                           
 17007                           ; BSR set to: 1
 17008                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17009                           
 17010                           ; BSR set to: 14
 17011                           ;incstack = 0
 17012  00659C  0100               	movlb	0	; () banked
 17013  00659E  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17014  0065A0  B4D8               	btfsc	status,2,c
 17015  0065A2  D0B9               	goto	l24698
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17019  0065A4  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17020  0065A6  A4D8               	btfss	status,2,c
 17021  0065A8  D00B               	goto	l24644
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17025  0065AA  0EC6               	movlw	low _BufferRF
 17026  0065AC  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17027  0065AE  0E02               	movlw	high _BufferRF
 17028  0065B0  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17029  0065B2  0E90               	movlw	low _classic_data
 17030  0065B4  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17031  0065B6  0E02               	movlw	high _classic_data
 17032  0065B8  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17033  0065BA  ECC9  F02D         	call	_keeloqDecryptPacket	;wreg free
 17034  0065BE  D00A               	goto	L77
 17035  0065C0                     l24644:
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17039  0065C0  0EC6               	movlw	low _BufferRF
 17040  0065C2  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17041  0065C4  0E02               	movlw	high _BufferRF
 17042  0065C6  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17043  0065C8  0E90               	movlw	low _classic_data
 17044  0065CA  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17045  0065CC  0E02               	movlw	high _classic_data
 17046  0065CE  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17047  0065D0  ECC9  F040         	call	_DecryptPacket_12BIT	;wreg free
 17048  0065D4                     L77:
 17049  0065D4  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17053  0065D6  C29C  F088         	movff	_classic_data+12,readRFButtons@key1
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17057  0065DA  C294  F181         	movff	_classic_data+4,readRFButtons@serial
 17058  0065DE  C295  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17059  0065E2  C296  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17060  0065E6  C297  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17064  0065EA  C298  F189         	movff	_classic_data+8,readRFButtons@rollingCode
 17065  0065EE  C299  F18A         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17069  0065F2  C29E  F19C         	movff	_classic_data+14,readRFButtons@typeRemote
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17073  0065F6  0101               	movlb	1	; () banked
 17074  0065F8  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17075  0065FA  A4D8               	btfss	status,2,c
 17076  0065FC  D01E               	goto	l24666
 17077                           
 17078                           ; BSR set to: 1
 17079                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17080  0065FE  0100               	movlb	0	; () banked
 17081  006600  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17082  006602  B4D8               	btfsc	status,2,c
 17083  006604  D044               	goto	u29930
 17084                           
 17085                           ; BSR set to: 0
 17086  006606  5188               	movf	readRFButtons@key1& (0+255),w,b
 17087  006608  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17088  00660A  A4D8               	btfss	status,2,c
 17089  00660C  D040               	goto	u29930
 17090                           
 17091                           ; BSR set to: 0
 17092  00660E  0101               	movlb	1	; () banked
 17093  006610  5181               	movf	readRFButtons@serial& (0+255),w,b
 17094  006612  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17095  006614  E13C               	bnz	l24678
 17096  006616  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17097  006618  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17098  00661A  E139               	bnz	l24678
 17099  00661C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17100  00661E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17101  006620  E136               	bnz	l24678
 17102  006622  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17103  006624  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17104  006626  A4D8               	btfss	status,2,c
 17105  006628  D032               	goto	u29930
 17106                           
 17107                           ; BSR set to: 1
 17108  00662A  0100               	movlb	0	; () banked
 17109  00662C  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17110  00662E  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17111  006630  A4D8               	btfss	status,2,c
 17112  006632  D02D               	goto	u29930
 17113  006634                     l1654:
 17114                           
 17115                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17116  006634  0E00               	movlw	0
 17117  006636  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17118                           
 17119                           ;inputs_MC50.c: 275:         }
 17120  006638  D038               	goto	l1657
 17121  00663A                     l24666:
 17122                           
 17123                           ; BSR set to: 1
 17124  00663A  0100               	movlb	0	; () banked
 17125  00663C  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17126  00663E  B4D8               	btfsc	status,2,c
 17127  006640  D026               	goto	u29930
 17128                           
 17129                           ; BSR set to: 0
 17130  006642  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17131  006644  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17132  006646  B4D8               	btfsc	status,2,c
 17133  006648  D00F               	goto	u29910
 17134                           
 17135                           ; BSR set to: 0
 17136  00664A  0101               	movlb	1	; () banked
 17137  00664C  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17138  00664E  D005               	goto	u29900
 17139  006650  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17140  006652  E10A               	bnz	l24674
 17141  006654  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17142  006656  B0D8               	btfsc	status,0,c
 17143  006658  D007               	goto	u29910
 17144  00665A                     u29900:
 17145                           
 17146                           ; BSR set to: 1
 17147  00665A  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17148  00665C  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17149  00665E  E117               	bnz	l24678
 17150  006660  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17151  006662  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17152  006664  A4D8               	btfss	status,2,c
 17153  006666  D013               	goto	u29930
 17154  006668                     u29910:
 17155  006668                     l24674:
 17156  006668  0100               	movlb	0	; () banked
 17157  00666A  5188               	movf	readRFButtons@key1& (0+255),w,b
 17158  00666C  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17159  00666E  A4D8               	btfss	status,2,c
 17160  006670  D00E               	goto	u29930
 17161                           
 17162                           ; BSR set to: 0
 17163  006672  0101               	movlb	1	; () banked
 17164  006674  5181               	movf	readRFButtons@serial& (0+255),w,b
 17165  006676  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17166  006678  E10A               	bnz	u29930
 17167  00667A  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17168  00667C  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17169  00667E  E107               	bnz	u29930
 17170  006680  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17171  006682  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17172  006684  E104               	bnz	u29930
 17173  006686  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17174  006688  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17175  00668A  B4D8               	btfsc	status,2,c
 17176  00668C  D003               	goto	l24680
 17177  00668E                     u29930:
 17178  00668E                     l24678:
 17179                           
 17180                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17181  00668E  0E00               	movlw	0
 17182  006690  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17183  006692  D7D0               	goto	l1654
 17184  006694                     l24680:
 17185                           
 17186                           ; BSR set to: 1
 17187  006694  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17188  006696  D005               	goto	u29940
 17189  006698  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17190  00669A  E107               	bnz	l1657
 17191  00669C  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17192  00669E  B0D8               	btfsc	status,0,c
 17193  0066A0  D004               	goto	l1657
 17194  0066A2                     u29940:
 17195                           
 17196                           ; BSR set to: 1
 17197  0066A2  0E02               	movlw	2
 17198  0066A4  199C               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17199  0066A6  B4D8               	btfsc	status,2,c
 17200  0066A8  D7F2               	goto	u29930
 17201  0066AA                     l1657:
 17202                           
 17203                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17204  0066AA  0E00               	movlw	0
 17205  0066AC  0101               	movlb	1	; () banked
 17206  0066AE  6FB4               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17207  0066B0  0E0A               	movlw	10
 17208  0066B2  6FB3               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17212  0066B4  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17213                           
 17214                           ;inputs_MC50.c: 292:         if
 17215  0066B8  503B               	movf	_rfCMD^0,w,c	;volatile
 17216  0066BA  B4D8               	btfsc	status,2,c
 17217  0066BC  D01A               	goto	u29990
 17218                           
 17219                           ; BSR set to: 1
 17220  0066BE  0100               	movlb	0	; () banked
 17221  0066C0  5188               	movf	readRFButtons@key1& (0+255),w,b
 17222  0066C2  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17223  0066C4  A4D8               	btfss	status,2,c
 17224  0066C6  D015               	goto	u29990
 17225                           
 17226                           ; BSR set to: 0
 17227  0066C8  0101               	movlb	1	; () banked
 17228  0066CA  5181               	movf	readRFButtons@serial& (0+255),w,b
 17229  0066CC  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17230  0066CE  E111               	bnz	l1667
 17231  0066D0  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17232  0066D2  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17233  0066D4  E10E               	bnz	l1667
 17234  0066D6  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17235  0066D8  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17236  0066DA  E10B               	bnz	l1667
 17237  0066DC  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17238  0066DE  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17239  0066E0  A4D8               	btfss	status,2,c
 17240  0066E2  D007               	goto	u29990
 17241                           
 17242                           ; BSR set to: 1
 17243  0066E4  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17244  0066E6  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17245  0066E8  E104               	bnz	u29990
 17246  0066EA  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17247  0066EC  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17248  0066EE  B4D8               	btfsc	status,2,c
 17249  0066F0  D00E               	goto	l24696
 17250  0066F2                     u29990:
 17251  0066F2                     l1667:
 17252                           
 17253                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17254  0066F2  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17255                           
 17256                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17257  0066F6  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17258  0066FA  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17259  0066FE  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17260  006702  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17261                           
 17262                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17263  006706  C29F  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17264                           
 17265                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17266  00670A  0E00               	movlw	0
 17267  00670C  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17268  00670E                     l24696:
 17269                           
 17270                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17271  00670E  C189  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17272  006712  C18A  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17273  006716                     l24698:
 17274                           
 17275                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17276  006716  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17277  006718  A4D8               	btfss	status,2,c
 17278  00671A  D003               	goto	l24702
 17279                           
 17280                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17281  00671C  0E00               	movlw	0
 17282  00671E  6E3B               	movwf	_rfCMD^0,c	;volatile
 17283                           
 17284                           ;inputs_MC50.c: 313:     }
 17285  006720  0012               	return	
 17286  006722                     l24702:
 17287  006722  503B               	movf	_rfCMD^0,w,c	;volatile
 17288  006724  B4D8               	btfsc	status,2,c
 17289  006726  0012               	return	
 17290                           
 17291                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17292  006728  0EFA               	movlw	250
 17293  00672A  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17294  00672C  0012               	return	
 17295                           
 17296                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17297  00672E  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17298  006730  0012               	return		;funcret
 17299  006732                     __end_of_readRFButtons:
 17300                           	callstack 0
 17301                           
 17302 ;; *************** function _keeloqDecryptPacket *****************
 17303 ;; Defined at:
 17304 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17307 ;;		 -> BufferRF(9), 
 17308 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17309 ;;		 -> classic_data(16), 
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;  commandType     1   17[BANK0 ] enum E10539
 17312 ;;  hop_error       1   16[BANK0 ] enum E10730
 17313 ;; Return value:  Size  Location     Type
 17314 ;;                  1    wreg      enum E10539
 17315 ;; Registers used:
 17316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17317 ;; Tracked objects:
 17318 ;;		On entry : 3F/0
 17319 ;;		On exit  : 3F/0
 17320 ;;		Unchanged: 0/0
 17321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17324 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17325 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17326 ;;Total ram usage:       10 bytes
 17327 ;; Hardware stack levels used: 1
 17328 ;; Hardware stack levels required when called: 14
 17329 ;; This function calls:
 17330 ;;		_DecCHK
 17331 ;;		_HopCHK
 17332 ;;		_keeloq_classic_decrypt_packet
 17333 ;;		_memcpy
 17334 ;;		_validateRemoteSerialNumber
 17335 ;;		_verifyProgramingMode
 17336 ;; This function is called by:
 17337 ;;		_readRFButtons
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           	psect	text57
 17342  005B92                     __ptext57:
 17343                           	callstack 0
 17344  005B92                     _keeloqDecryptPacket:
 17345                           	callstack 15
 17346                           
 17347                           ; BSR set to: 0
 17348                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17349                           
 17350                           ;incstack = 0
 17351  005B92  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17352  005B96  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17353  005B9A  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17354  005B9E  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17355  005BA2  0E00               	movlw	0
 17356  005BA4  6E15               	movwf	(memcpy@n+1)^0,c
 17357  005BA6  0E08               	movlw	8
 17358  005BA8  6E14               	movwf	memcpy@n^0,c
 17359  005BAA  ECF1  F049         	call	_memcpy	;wreg free
 17360                           
 17361                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17362  005BAE  0E08               	movlw	8
 17363  005BB0  0100               	movlb	0	; () banked
 17364  005BB2  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17365  005BB4  6E10               	movwf	memcpy@d1^0,c
 17366  005BB6  0E00               	movlw	0
 17367  005BB8  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17368  005BBA  6E11               	movwf	(memcpy@d1+1)^0,c
 17369  005BBC  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17370  005BC0  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17371  005BC4  0E00               	movlw	0
 17372  005BC6  6E15               	movwf	(memcpy@n+1)^0,c
 17373  005BC8  0E04               	movlw	4
 17374  005BCA  6E14               	movwf	memcpy@n^0,c
 17375  005BCC  ECF1  F049         	call	_memcpy	;wreg free
 17376                           
 17377                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17378  005BD0  0100               	movlb	0	; () banked
 17379  005BD2  EE20 F00C          	lfsr	2,12
 17380  005BD6  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17381  005BD8  26D9               	addwf	fsr2l,f,c
 17382  005BDA  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17383  005BDC  22DA               	addwfc	fsr2h,f,c
 17384  005BDE  EE10 F007          	lfsr	1,7
 17385  005BE2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17386  005BE4  26E1               	addwf	fsr1l,f,c
 17387  005BE6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17388  005BE8  22E2               	addwfc	fsr1h,f,c
 17389  005BEA  50E7               	movf	indf1,w,c
 17390  005BEC  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17391  005BEE  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17392  005BF0  0B0F               	andlw	15
 17393  005BF2  6EDF               	movwf	indf2,c
 17394                           
 17395                           ; BSR set to: 0
 17396                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17397  005BF4  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17398  005BF8  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17399  005BFC  EC0B  F04B         	call	_verifyProgramingMode	;wreg free
 17400  005C00  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17404  005C02  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17405  005C04  A4D8               	btfss	status,2,c
 17406  005C06  D019               	goto	l22868
 17407                           
 17408                           ; BSR set to: 0
 17409                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17410  005C08  EE20 F004          	lfsr	2,4
 17411  005C0C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17412  005C0E  26D9               	addwf	fsr2l,f,c
 17413  005C10  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17414  005C12  22DA               	addwfc	fsr2h,f,c
 17415  005C14  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17416  005C18  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17417  005C1C  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17418  005C20  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17419  005C24  0E00               	movlw	0
 17420  005C26  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17421  005C28  0E0F               	movlw	15
 17422  005C2A  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17423  005C2C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17424  005C2E  0E00               	movlw	0
 17425  005C30  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17426  005C32  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17427  005C34  EC66  F030         	call	_validateRemoteSerialNumber	;wreg free
 17428  005C38  D004               	goto	L78
 17429  005C3A                     l22868:
 17430                           
 17431                           ; BSR set to: 0
 17432  005C3A  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17433  005C3C  A4D8               	btfss	status,2,c
 17434  005C3E  D002               	goto	l22872
 17435                           
 17436                           ; BSR set to: 0
 17437                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17438  005C40  0E00               	movlw	0
 17439  005C42                     L78:
 17440  005C42  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17441  005C44                     l22872:
 17442                           
 17443                           ; BSR set to: 0
 17444                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17445  005C44  EE20 F004          	lfsr	2,4
 17446  005C48  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17447  005C4A  26D9               	addwf	fsr2l,f,c
 17448  005C4C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17449  005C4E  22DA               	addwfc	fsr2h,f,c
 17450  005C50  0EFF               	movlw	255
 17451  005C52  14DE               	andwf	postinc2,w,c
 17452  005C54  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17453  005C56  0EFF               	movlw	255
 17454  005C58  14DE               	andwf	postinc2,w,c
 17455  005C5A  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17456  005C5C  0EFF               	movlw	255
 17457  005C5E  14DE               	andwf	postinc2,w,c
 17458  005C60  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17459  005C62  0E0F               	movlw	15
 17460  005C64  14DE               	andwf	postinc2,w,c
 17461  005C66  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17462  005C68  EE20 F004          	lfsr	2,4
 17463  005C6C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17464  005C6E  26D9               	addwf	fsr2l,f,c
 17465  005C70  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17466  005C72  22DA               	addwfc	fsr2h,f,c
 17467  005C74  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17468  005C78  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17469  005C7C  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17470  005C80  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17471                           
 17472                           ; BSR set to: 0
 17473                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17474  005C84  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17475  005C88  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17476  005C8C  ECC5  F047         	call	_keeloq_classic_decrypt_packet	;wreg free
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17480  005C90  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17481  005C92  A4D8               	btfss	status,2,c
 17482  005C94  D01B               	goto	l22890
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17486  005C96  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17487  005C9A  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17488  005C9E  EC25  F04B         	call	_DecCHK	;wreg free
 17489  005CA2  0900               	iorlw	0
 17490  005CA4  A4D8               	btfss	status,2,c
 17491  005CA6  D008               	goto	l22882
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17495  005CA8  EE20 F00E          	lfsr	2,14
 17496  005CAC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17497  005CAE  26D9               	addwf	fsr2l,f,c
 17498  005CB0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17499  005CB2  22DA               	addwfc	fsr2h,f,c
 17500  005CB4  0E01               	movlw	1
 17501  005CB6  D007               	goto	L79
 17502  005CB8                     l22882:
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17506  005CB8  EE20 F00E          	lfsr	2,14
 17507  005CBC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17508  005CBE  26D9               	addwf	fsr2l,f,c
 17509  005CC0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17510  005CC2  22DA               	addwfc	fsr2h,f,c
 17511  005CC4  0E00               	movlw	0
 17512  005CC6                     L79:
 17513  005CC6  6EDF               	movwf	indf2,c
 17514  005CC8                     l22884:
 17515                           
 17516                           ; BSR set to: 0
 17517                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17518  005CC8  0E00               	movlw	0
 17519  005CCA  0012               	return	
 17520  005CCC                     l22890:
 17521                           
 17522                           ; BSR set to: 0
 17523  005CCC  0E06               	movlw	6
 17524  005CCE  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17525  005CD0  B4D8               	btfsc	status,2,c
 17526  005CD2  D004               	goto	u26570
 17527                           
 17528                           ; BSR set to: 0
 17529  005CD4  0E05               	movlw	5
 17530  005CD6  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17531  005CD8  A4D8               	btfss	status,2,c
 17532  005CDA  D01B               	goto	l22900
 17533  005CDC                     u26570:
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17537  005CDC  EE20 F004          	lfsr	2,4
 17538  005CE0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17539  005CE2  26D9               	addwf	fsr2l,f,c
 17540  005CE4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17541  005CE6  22DA               	addwfc	fsr2h,f,c
 17542  005CE8  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17543  005CEC  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17544  005CF0  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17545  005CF4  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17546  005CF8  0E01               	movlw	1
 17547  005CFA  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17548  005CFC  0E0F               	movlw	15
 17549  005CFE  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17550  005D00  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17551  005D02  0E00               	movlw	0
 17552  005D04  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17553  005D06  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17554  005D08  EC66  F030         	call	_validateRemoteSerialNumber	;wreg free
 17555  005D0C  0900               	iorlw	0
 17556  005D0E  B4D8               	btfsc	status,2,c
 17557  005D10  D7DB               	goto	l22884
 17558  005D12                     l22900:
 17559                           
 17560                           ; BSR set to: 0
 17561                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17562  005D12  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17563  005D16  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17564  005D1A  EC25  F04B         	call	_DecCHK	;wreg free
 17565  005D1E  0900               	iorlw	0
 17566  005D20  A4D8               	btfss	status,2,c
 17567  005D22  D00D               	goto	l22916
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17571  005D24  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17572  005D26  B4D8               	btfsc	status,2,c
 17573  005D28  D7CF               	goto	l22884
 17574                           
 17575                           ; BSR set to: 0
 17576                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17577  005D2A  EE20 F00E          	lfsr	2,14
 17578  005D2E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17579  005D30  26D9               	addwf	fsr2l,f,c
 17580  005D32  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17581  005D34  22DA               	addwfc	fsr2h,f,c
 17582  005D36  0E01               	movlw	1
 17583  005D38  6EDF               	movwf	indf2,c
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17587  005D3A  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17588  005D3C  0012               	return	
 17589  005D3E                     l22916:
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17593  005D3E  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17594  005D42  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17595  005D46  EC9B  F041         	call	_HopCHK	;wreg free
 17596  005D4A  0100               	movlb	0	; () banked
 17597  005D4C  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17601  005D4E  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17602  005D50  A4D8               	btfss	status,2,c
 17603  005D52  D7BA               	goto	l22884
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17607  005D54  EE20 F00E          	lfsr	2,14
 17608  005D58  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17609  005D5A  26D9               	addwf	fsr2l,f,c
 17610  005D5C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17611  005D5E  22DA               	addwfc	fsr2h,f,c
 17612  005D60  0E00               	movlw	0
 17613  005D62  D7EA               	goto	L80
 17614  005D64                     __end_of_keeloqDecryptPacket:
 17615                           	callstack 0
 17616                           
 17617 ;; *************** function _verifyProgramingMode *****************
 17618 ;; Defined at:
 17619 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  classic_data    2   15[COMRAM] PTR struct .
 17622 ;;		 -> classic_data(16), 
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;		None
 17625 ;; Return value:  Size  Location     Type
 17626 ;;                  1    wreg      enum E10539
 17627 ;; Registers used:
 17628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17629 ;; Tracked objects:
 17630 ;;		On entry : 3F/0
 17631 ;;		On exit  : 3F/0
 17632 ;;		Unchanged: 3F/0
 17633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17637 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17638 ;;Total ram usage:        3 bytes
 17639 ;; Hardware stack levels used: 1
 17640 ;; Hardware stack levels required when called: 4
 17641 ;; This function calls:
 17642 ;;		Nothing
 17643 ;; This function is called by:
 17644 ;;		_keeloqDecryptPacket
 17645 ;; This function uses a non-reentrant model
 17646 ;;
 17647                           
 17648                           	psect	text58
 17649  009616                     __ptext58:
 17650                           	callstack 0
 17651  009616                     _verifyProgramingMode:
 17652                           	callstack 24
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;incstack = 0
 17659  009616  EE20 F00C          	lfsr	2,12
 17660  00961A  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17661  00961C  26D9               	addwf	fsr2l,f,c
 17662  00961E  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17663  009620  22DA               	addwfc	fsr2h,f,c
 17664  009622  0E0A               	movlw	10
 17665  009624  18DE               	xorwf	postinc2,w,c
 17666  009626  A4D8               	btfss	status,2,c
 17667  009628  D002               	goto	l21568
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17671  00962A  0E06               	movlw	6
 17672  00962C  0012               	return	
 17673  00962E                     l21568:
 17674                           
 17675                           ; BSR set to: 0
 17676  00962E  EE20 F00C          	lfsr	2,12
 17677  009632  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17678  009634  26D9               	addwf	fsr2l,f,c
 17679  009636  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17680  009638  22DA               	addwfc	fsr2h,f,c
 17681  00963A  0E05               	movlw	5
 17682  00963C  18DE               	xorwf	postinc2,w,c
 17683  00963E  A4D8               	btfss	status,2,c
 17684  009640  D002               	goto	l21576
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17688  009642  0E05               	movlw	5
 17689  009644  0012               	return	
 17690  009646                     l21576:
 17691                           
 17692                           ; BSR set to: 0
 17693                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17694  009646  0E00               	movlw	0
 17695                           
 17696                           ; BSR set to: 0
 17697  009648  0012               	return		;funcret
 17698  00964A                     __end_of_verifyProgramingMode:
 17699                           	callstack 0
 17700                           
 17701 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17702 ;; Defined at:
 17703 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17704 ;; Parameters:    Size  Location     Type
 17705 ;;  data            2   55[COMRAM] PTR struct .
 17706 ;;		 -> classic_data(16), 
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;		None
 17709 ;; Return value:  Size  Location     Type
 17710 ;;                  1    wreg      void 
 17711 ;; Registers used:
 17712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17713 ;; Tracked objects:
 17714 ;;		On entry : 3F/0
 17715 ;;		On exit  : 3F/0
 17716 ;;		Unchanged: 0/0
 17717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17720 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17721 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17722 ;;Total ram usage:        5 bytes
 17723 ;; Hardware stack levels used: 1
 17724 ;; Hardware stack levels required when called: 7
 17725 ;; This function calls:
 17726 ;;		_Decrypt
 17727 ;;		_NormalKeyGen
 17728 ;; This function is called by:
 17729 ;;		_keeloqDecryptPacket
 17730 ;; This function uses a non-reentrant model
 17731 ;;
 17732                           
 17733                           	psect	text59
 17734  008F8A                     __ptext59:
 17735                           	callstack 0
 17736  008F8A                     _keeloq_classic_decrypt_packet:
 17737                           	callstack 21
 17738                           
 17739                           ; BSR set to: 0
 17740                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17741                           
 17742                           ; BSR set to: 0
 17743                           ;incstack = 0
 17744  008F8A  0E04               	movlw	4
 17745  008F8C  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17746  008F8E  6E26               	movwf	NormalKeyGen@serial^0,c
 17747  008F90  0E00               	movlw	0
 17748  008F92  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17749  008F94  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17750  008F96  EC5F  F039         	call	_NormalKeyGen	;wreg free
 17751                           
 17752                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17753  008F9A  0E08               	movlw	8
 17754  008F9C  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17755  008F9E  6E1B               	movwf	Decrypt@packet^0,c
 17756  008FA0  0E00               	movlw	0
 17757  008FA2  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17758  008FA4  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17759  008FA6  ECC6  F03C         	call	_Decrypt	;wreg free
 17760                           
 17761                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17762  008FAA  EE20 F00D          	lfsr	2,13
 17763  008FAE  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17764  008FB0  26D9               	addwf	fsr2l,f,c
 17765  008FB2  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17766  008FB4  22DA               	addwfc	fsr2h,f,c
 17767  008FB6  EE10 F00A          	lfsr	1,10
 17768  008FBA  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17769  008FBC  26E1               	addwf	fsr1l,f,c
 17770  008FBE  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17771  008FC0  22E2               	addwfc	fsr1h,f,c
 17772  008FC2  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17773  008FC6  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17774  008FCA  0E0C               	movlw	12
 17775  008FCC  0100               	movlb	0	; () banked
 17776  008FCE  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17777  008FD0                     u24915:
 17778  008FD0  90D8               	bcf	status,0,c
 17779  008FD2  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17780  008FD4  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17781  008FD6  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17782  008FD8  D7FB               	goto	u24915
 17783  008FDA  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17784  008FDC  0B0F               	andlw	15
 17785  008FDE  6EDF               	movwf	indf2,c
 17786                           
 17787                           ; BSR set to: 0
 17788  008FE0  0012               	return		;funcret
 17789  008FE2                     __end_of_keeloq_classic_decrypt_packet:
 17790                           	callstack 0
 17791                           
 17792 ;; *************** function _NormalKeyGen *****************
 17793 ;; Defined at:
 17794 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17795 ;; Parameters:    Size  Location     Type
 17796 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17797 ;;		 -> classic_data(16), 
 17798 ;; Auto vars:     Size  Location     Type
 17799 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17800 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17801 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17802 ;; Return value:  Size  Location     Type
 17803 ;;                  1    wreg      void 
 17804 ;; Registers used:
 17805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17806 ;; Tracked objects:
 17807 ;;		On entry : 3F/0
 17808 ;;		On exit  : 0/0
 17809 ;;		Unchanged: 0/0
 17810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17812 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17814 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17815 ;;Total ram usage:       18 bytes
 17816 ;; Hardware stack levels used: 1
 17817 ;; Hardware stack levels required when called: 6
 17818 ;; This function calls:
 17819 ;;		_Decrypt
 17820 ;;		_LoadManufCode
 17821 ;;		_memcpy
 17822 ;; This function is called by:
 17823 ;;		_keeloq_classic_decrypt_packet
 17824 ;; This function uses a non-reentrant model
 17825 ;;
 17826                           
 17827                           	psect	text60
 17828  0072BE                     __ptext60:
 17829                           	callstack 0
 17830  0072BE                     _NormalKeyGen:
 17831                           	callstack 21
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;incstack = 0
 17838  0072BE  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17839  0072C0  6E10               	movwf	memcpy@d1^0,c
 17840  0072C2  6A11               	clrf	(memcpy@d1+1)^0,c
 17841  0072C4  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17842  0072C8  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17843  0072CC  0E00               	movlw	0
 17844  0072CE  6E15               	movwf	(memcpy@n+1)^0,c
 17845  0072D0  0E04               	movlw	4
 17846  0072D2  6E14               	movwf	memcpy@n^0,c
 17847  0072D4  ECF1  F049         	call	_memcpy	;wreg free
 17848                           
 17849                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17850  0072D8  0E28               	movlw	low NormalKeyGen@HOPtemp
 17851  0072DA  6E10               	movwf	memcpy@d1^0,c
 17852  0072DC  6A11               	clrf	(memcpy@d1+1)^0,c
 17853  0072DE  0E30               	movlw	low NormalKeyGen@Buffer
 17854  0072E0  6E12               	movwf	memcpy@s1^0,c
 17855  0072E2  6A13               	clrf	(memcpy@s1+1)^0,c
 17856  0072E4  0E00               	movlw	0
 17857  0072E6  6E15               	movwf	(memcpy@n+1)^0,c
 17858  0072E8  0E04               	movlw	4
 17859  0072EA  6E14               	movwf	memcpy@n^0,c
 17860  0072EC  ECF1  F049         	call	_memcpy	;wreg free
 17861                           
 17862                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17863  0072F0  0ED7               	movlw	low NormalKeyGen@SEED
 17864  0072F2  6E10               	movwf	memcpy@d1^0,c
 17865  0072F4  0E02               	movlw	high NormalKeyGen@SEED
 17866  0072F6  6E11               	movwf	(memcpy@d1+1)^0,c
 17867  0072F8  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17868  0072FA  6E12               	movwf	memcpy@s1^0,c
 17869  0072FC  6A13               	clrf	(memcpy@s1+1)^0,c
 17870  0072FE  0E00               	movlw	0
 17871  007300  6E15               	movwf	(memcpy@n+1)^0,c
 17872  007302  0E04               	movlw	4
 17873  007304  6E14               	movwf	memcpy@n^0,c
 17874  007306  ECF1  F049         	call	_memcpy	;wreg free
 17875                           
 17876                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17877  00730A  0E0F               	movlw	15
 17878  00730C  0102               	movlb	2	; () banked
 17879  00730E  17DA               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17880                           
 17881                           ; BSR set to: 2
 17882                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17883  007310  0E30               	movlw	low NormalKeyGen@Buffer
 17884  007312  6E10               	movwf	memcpy@d1^0,c
 17885  007314  6A11               	clrf	(memcpy@d1+1)^0,c
 17886  007316  0ED7               	movlw	low NormalKeyGen@SEED
 17887  007318  6E12               	movwf	memcpy@s1^0,c
 17888  00731A  0E02               	movlw	high NormalKeyGen@SEED
 17889  00731C  6E13               	movwf	(memcpy@s1+1)^0,c
 17890  00731E  0E00               	movlw	0
 17891  007320  6E15               	movwf	(memcpy@n+1)^0,c
 17892  007322  0E04               	movlw	4
 17893  007324  6E14               	movwf	memcpy@n^0,c
 17894  007326  ECF1  F049         	call	_memcpy	;wreg free
 17895                           
 17896                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17897  00732A  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17898                           
 17899                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17900  00732C  EC56  F04D         	call	_LoadManufCode	;wreg free
 17901                           
 17902                           ; BSR set to: 2
 17903                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17904  007330  0E30               	movlw	low NormalKeyGen@Buffer
 17905  007332  6E1B               	movwf	Decrypt@packet^0,c
 17906  007334  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17907  007336  ECC6  F03C         	call	_Decrypt	;wreg free
 17908                           
 17909                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17910  00733A  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17911  00733C  6E10               	movwf	memcpy@d1^0,c
 17912  00733E  6A11               	clrf	(memcpy@d1+1)^0,c
 17913  007340  0E30               	movlw	low NormalKeyGen@Buffer
 17914  007342  6E12               	movwf	memcpy@s1^0,c
 17915  007344  6A13               	clrf	(memcpy@s1+1)^0,c
 17916  007346  0E00               	movlw	0
 17917  007348  6E15               	movwf	(memcpy@n+1)^0,c
 17918  00734A  0E04               	movlw	4
 17919  00734C  6E14               	movwf	memcpy@n^0,c
 17920  00734E  ECF1  F049         	call	_memcpy	;wreg free
 17921                           
 17922                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17923  007352  0E30               	movlw	low NormalKeyGen@Buffer
 17924  007354  6E10               	movwf	memcpy@d1^0,c
 17925  007356  6A11               	clrf	(memcpy@d1+1)^0,c
 17926  007358  0ED7               	movlw	low NormalKeyGen@SEED
 17927  00735A  6E12               	movwf	memcpy@s1^0,c
 17928  00735C  0E02               	movlw	high NormalKeyGen@SEED
 17929  00735E  6E13               	movwf	(memcpy@s1+1)^0,c
 17930  007360  0E00               	movlw	0
 17931  007362  6E15               	movwf	(memcpy@n+1)^0,c
 17932  007364  0E04               	movlw	4
 17933  007366  6E14               	movwf	memcpy@n^0,c
 17934  007368  ECF1  F049         	call	_memcpy	;wreg free
 17935                           
 17936                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17937  00736C  0E60               	movlw	96
 17938  00736E  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17939                           
 17940                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17941  007370  EC56  F04D         	call	_LoadManufCode	;wreg free
 17942                           
 17943                           ; BSR set to: 2
 17944                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17945  007374  0E30               	movlw	low NormalKeyGen@Buffer
 17946  007376  6E1B               	movwf	Decrypt@packet^0,c
 17947  007378  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17948  00737A  ECC6  F03C         	call	_Decrypt	;wreg free
 17949                           
 17950                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17951  00737E  0ED3               	movlw	low (_DKEY+4)
 17952  007380  6E10               	movwf	memcpy@d1^0,c
 17953  007382  0E02               	movlw	high (_DKEY+4)
 17954  007384  6E11               	movwf	(memcpy@d1+1)^0,c
 17955  007386  0E30               	movlw	low NormalKeyGen@Buffer
 17956  007388  6E12               	movwf	memcpy@s1^0,c
 17957  00738A  6A13               	clrf	(memcpy@s1+1)^0,c
 17958  00738C  0E00               	movlw	0
 17959  00738E  6E15               	movwf	(memcpy@n+1)^0,c
 17960  007390  0E04               	movlw	4
 17961  007392  6E14               	movwf	memcpy@n^0,c
 17962  007394  ECF1  F049         	call	_memcpy	;wreg free
 17963                           
 17964                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17965  007398  0ECF               	movlw	low _DKEY
 17966  00739A  6E10               	movwf	memcpy@d1^0,c
 17967  00739C  0E02               	movlw	high _DKEY
 17968  00739E  6E11               	movwf	(memcpy@d1+1)^0,c
 17969  0073A0  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17970  0073A2  6E12               	movwf	memcpy@s1^0,c
 17971  0073A4  6A13               	clrf	(memcpy@s1+1)^0,c
 17972  0073A6  0E00               	movlw	0
 17973  0073A8  6E15               	movwf	(memcpy@n+1)^0,c
 17974  0073AA  0E04               	movlw	4
 17975  0073AC  6E14               	movwf	memcpy@n^0,c
 17976  0073AE  ECF1  F049         	call	_memcpy	;wreg free
 17977                           
 17978                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 17979  0073B2  0E30               	movlw	low NormalKeyGen@Buffer
 17980  0073B4  6E10               	movwf	memcpy@d1^0,c
 17981  0073B6  6A11               	clrf	(memcpy@d1+1)^0,c
 17982  0073B8  0E28               	movlw	low NormalKeyGen@HOPtemp
 17983  0073BA  6E12               	movwf	memcpy@s1^0,c
 17984  0073BC  6A13               	clrf	(memcpy@s1+1)^0,c
 17985  0073BE  0E00               	movlw	0
 17986  0073C0  6E15               	movwf	(memcpy@n+1)^0,c
 17987  0073C2  0E04               	movlw	4
 17988  0073C4  6E14               	movwf	memcpy@n^0,c
 17989  0073C6  ECF1  F049         	call	_memcpy	;wreg free
 17990  0073CA  0012               	return		;funcret
 17991  0073CC                     __end_of_NormalKeyGen:
 17992                           	callstack 0
 17993                           
 17994 ;; *************** function _LoadManufCode *****************
 17995 ;; Defined at:
 17996 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 17997 ;; Parameters:    Size  Location     Type
 17998 ;;		None
 17999 ;; Auto vars:     Size  Location     Type
 18000 ;;		None
 18001 ;; Return value:  Size  Location     Type
 18002 ;;                  1    wreg      void 
 18003 ;; Registers used:
 18004 ;;		wreg, status,2
 18005 ;; Tracked objects:
 18006 ;;		On entry : 0/2
 18007 ;;		On exit  : 3F/2
 18008 ;;		Unchanged: 0/0
 18009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18014 ;;Total ram usage:        0 bytes
 18015 ;; Hardware stack levels used: 1
 18016 ;; Hardware stack levels required when called: 4
 18017 ;; This function calls:
 18018 ;;		Nothing
 18019 ;; This function is called by:
 18020 ;;		_NormalKeyGen
 18021 ;; This function uses a non-reentrant model
 18022 ;;
 18023                           
 18024                           	psect	text61
 18025  009AAC                     __ptext61:
 18026                           	callstack 0
 18027  009AAC                     _LoadManufCode:
 18028                           	callstack 22
 18029                           
 18030                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18031                           
 18032                           ;incstack = 0
 18033  009AAC  0102               	movlb	2	; () banked
 18034  009AAE  69CF               	setf	_DKEY& (0+255),b
 18035                           
 18036                           ; BSR set to: 2
 18037                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18038  009AB0  0ECA               	movlw	202
 18039  009AB2  6FD0               	movwf	(_DKEY+1)& (0+255),b
 18040                           
 18041                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18042  009AB4  0E76               	movlw	118
 18043  009AB6  6FD1               	movwf	(_DKEY+2)& (0+255),b
 18044                           
 18045                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18046  009AB8  0E94               	movlw	148
 18047  009ABA  6FD2               	movwf	(_DKEY+3)& (0+255),b
 18048                           
 18049                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18050  009ABC  0E22               	movlw	34
 18051  009ABE  6FD3               	movwf	(_DKEY+4)& (0+255),b
 18052                           
 18053                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18054  009AC0  0E68               	movlw	104
 18055  009AC2  6FD4               	movwf	(_DKEY+5)& (0+255),b
 18056                           
 18057                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18058  009AC4  0E27               	movlw	39
 18059  009AC6  6FD5               	movwf	(_DKEY+6)& (0+255),b
 18060                           
 18061                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18062  009AC8  0E57               	movlw	87
 18063  009ACA  6FD6               	movwf	(_DKEY+7)& (0+255),b
 18064                           
 18065                           ; BSR set to: 2
 18066  009ACC  0012               	return		;funcret
 18067  009ACE                     __end_of_LoadManufCode:
 18068                           	callstack 0
 18069                           
 18070 ;; *************** function _Decrypt *****************
 18071 ;; Defined at:
 18072 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18075 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18078 ;;  aux             1   32[COMRAM] unsigned char 
 18079 ;;  p               1   31[COMRAM] char 
 18080 ;;  j               1   30[COMRAM] unsigned char 
 18081 ;;  i               1   29[COMRAM] unsigned char 
 18082 ;;  key             1   28[COMRAM] unsigned char 
 18083 ;; Return value:  Size  Location     Type
 18084 ;;                  1    wreg      void 
 18085 ;; Registers used:
 18086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18087 ;; Tracked objects:
 18088 ;;		On entry : 0/0
 18089 ;;		On exit  : 0/0
 18090 ;;		Unchanged: 0/0
 18091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18093 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18095 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18096 ;;Total ram usage:       11 bytes
 18097 ;; Hardware stack levels used: 1
 18098 ;; Hardware stack levels required when called: 5
 18099 ;; This function calls:
 18100 ;;		_memcpy
 18101 ;; This function is called by:
 18102 ;;		_NormalKeyGen
 18103 ;;		_keeloq_classic_decrypt_packet
 18104 ;; This function uses a non-reentrant model
 18105 ;;
 18106                           
 18107                           	psect	text62
 18108  00798C                     __ptext62:
 18109                           	callstack 0
 18110  00798C                     _Decrypt:
 18111                           	callstack 21
 18112                           
 18113                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18114                           
 18115                           ; BSR set to: 2
 18116                           ;incstack = 0
 18117  00798C  0E22               	movlw	low Decrypt@Buffer
 18118  00798E  6E10               	movwf	memcpy@d1^0,c
 18119  007990  6A11               	clrf	(memcpy@d1+1)^0,c
 18120  007992  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18121  007996  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18122  00799A  0E00               	movlw	0
 18123  00799C  6E15               	movwf	(memcpy@n+1)^0,c
 18124  00799E  0E04               	movlw	4
 18125  0079A0  6E14               	movwf	memcpy@n^0,c
 18126  0079A2  ECF1  F049         	call	_memcpy	;wreg free
 18127                           
 18128                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18129  0079A6  0E01               	movlw	1
 18130  0079A8  6E20               	movwf	Decrypt@p^0,c
 18131                           
 18132                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18133  0079AA  0E42               	movlw	66
 18134  0079AC  6E1F               	movwf	Decrypt@j^0,c
 18135  0079AE                     l20534:
 18136                           
 18137                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18138  0079AE  0ECF               	movlw	low _DKEY
 18139  0079B0  2420               	addwf	Decrypt@p^0,w,c
 18140  0079B2  6ED9               	movwf	fsr2l,c
 18141  0079B4  6ADA               	clrf	fsr2h,c
 18142  0079B6  0E02               	movlw	high _DKEY
 18143  0079B8  22DA               	addwfc	fsr2h,f,c
 18144  0079BA  50DF               	movf	indf2,w,c
 18145  0079BC  6E1D               	movwf	Decrypt@key^0,c
 18146  0079BE  0620               	decf	Decrypt@p^0,f,c
 18147                           
 18148                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18149  0079C0  AE20               	btfss	Decrypt@p^0,7,c
 18150  0079C2  D002               	goto	l20542
 18151                           
 18152                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18153  0079C4  0E08               	movlw	8
 18154  0079C6  2620               	addwf	Decrypt@p^0,f,c
 18155  0079C8                     l20542:
 18156                           
 18157                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18158  0079C8  0E08               	movlw	8
 18159  0079CA  6E1E               	movwf	Decrypt@i^0,c
 18160  0079CC                     l1859:
 18161                           
 18162                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18163  0079CC  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18164  0079CE  D006               	goto	l1861
 18165                           
 18166                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18167  0079D0  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18168  0079D2  D002               	goto	l20552
 18169                           
 18170                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18171  0079D4  0E3A               	movlw	58
 18172  0079D6  D007               	goto	L81
 18173  0079D8                     l20552:
 18174                           
 18175                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18176  0079D8  0E5C               	movlw	92
 18177  0079DA  D005               	goto	L81
 18178  0079DC                     l1861:
 18179                           
 18180                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18181  0079DC  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18182  0079DE  D002               	goto	l20556
 18183                           
 18184                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18185  0079E0  0E74               	movlw	116
 18186  0079E2  D001               	goto	L81
 18187  0079E4                     l20556:
 18188                           
 18189                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18190  0079E4  0E2E               	movlw	46
 18191  0079E6                     L81:
 18192  0079E6  6E21               	movwf	Decrypt@aux^0,c
 18193                           
 18194                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18195  0079E8  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18196                           
 18197                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18198  0079EA  3A21               	swapf	Decrypt@aux^0,f,c
 18199                           
 18200                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18201  0079EC  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18202  0079EE  D004               	goto	l20564
 18203                           
 18204                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18205  0079F0  90D8               	bcf	status,0,c
 18206  0079F2  3621               	rlcf	Decrypt@aux^0,f,c
 18207  0079F4  90D8               	bcf	status,0,c
 18208  0079F6  3621               	rlcf	Decrypt@aux^0,f,c
 18209  0079F8                     l20564:
 18210                           
 18211                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18212  0079F8  A022               	btfss	Decrypt@Buffer^0,0,c
 18213  0079FA  D002               	goto	l1869
 18214                           
 18215                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18216  0079FC  90D8               	bcf	status,0,c
 18217  0079FE  3621               	rlcf	Decrypt@aux^0,f,c
 18218  007A00                     l1869:
 18219                           
 18220                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18221  007A00  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18222  007A02  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18223  007A04  181D               	xorwf	Decrypt@key^0,w,c
 18224  007A06  1A21               	xorwf	Decrypt@aux^0,f,c
 18225                           
 18226                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18227  007A08  90D8               	bcf	status,0,c
 18228  007A0A  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18229  007A0C  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18230  007A0E  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18231                           
 18232                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18233  007A10  90D8               	bcf	status,0,c
 18234  007A12  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18235  007A14  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18236  007A16  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18237                           
 18238                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18239  007A18  90D8               	bcf	status,0,c
 18240  007A1A  3422               	rlcf	Decrypt@Buffer^0,w,c
 18241  007A1C  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18242  007A1E  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18243                           
 18244                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18245  007A20  90D8               	bcf	status,0,c
 18246  007A22  3421               	rlcf	Decrypt@aux^0,w,c
 18247  007A24  3422               	rlcf	Decrypt@Buffer^0,w,c
 18248  007A26  6E22               	movwf	Decrypt@Buffer^0,c
 18249                           
 18250                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18251  007A28  90D8               	bcf	status,0,c
 18252  007A2A  361D               	rlcf	Decrypt@key^0,f,c
 18253                           
 18254                           ;keeloqDecrypt_MC50.c: 189:         }
 18255  007A2C  061E               	decf	Decrypt@i^0,f,c
 18256  007A2E  501E               	movf	Decrypt@i^0,w,c
 18257  007A30  A4D8               	btfss	status,2,c
 18258  007A32  D7CC               	goto	l1859
 18259                           
 18260                           ;keeloqDecrypt_MC50.c: 190:     }
 18261  007A34  061F               	decf	Decrypt@j^0,f,c
 18262  007A36  501F               	movf	Decrypt@j^0,w,c
 18263  007A38  A4D8               	btfss	status,2,c
 18264  007A3A  D7B9               	goto	l20534
 18265                           
 18266                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18267  007A3C  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18268  007A40  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18269  007A44  0E22               	movlw	low Decrypt@Buffer
 18270  007A46  6E12               	movwf	memcpy@s1^0,c
 18271  007A48  6A13               	clrf	(memcpy@s1+1)^0,c
 18272  007A4A  0E00               	movlw	0
 18273  007A4C  6E15               	movwf	(memcpy@n+1)^0,c
 18274  007A4E  0E04               	movlw	4
 18275  007A50  6E14               	movwf	memcpy@n^0,c
 18276  007A52  ECF1  F049         	call	_memcpy	;wreg free
 18277  007A56  0012               	return		;funcret
 18278  007A58                     __end_of_Decrypt:
 18279                           	callstack 0
 18280                           
 18281 ;; *************** function _HopCHK *****************
 18282 ;; Defined at:
 18283 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18284 ;; Parameters:    Size  Location     Type
 18285 ;;  data            2   35[COMRAM] PTR struct .
 18286 ;;		 -> classic_data(16), 
 18287 ;; Auto vars:     Size  Location     Type
 18288 ;;  hopDiff         2   37[COMRAM] short 
 18289 ;; Return value:  Size  Location     Type
 18290 ;;                  1    wreg      enum E10730
 18291 ;; Registers used:
 18292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18293 ;; Tracked objects:
 18294 ;;		On entry : 3F/0
 18295 ;;		On exit  : 3E/0
 18296 ;;		Unchanged: 0/0
 18297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18301 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18302 ;;Total ram usage:        4 bytes
 18303 ;; Hardware stack levels used: 1
 18304 ;; Hardware stack levels required when called: 6
 18305 ;; This function calls:
 18306 ;;		_ReqResync
 18307 ;;		_getHopCode
 18308 ;; This function is called by:
 18309 ;;		_keeloqDecryptPacket
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313                           	psect	text63
 18314  008336                     __ptext63:
 18315                           	callstack 0
 18316  008336                     _HopCHK:
 18317                           	callstack 22
 18318                           
 18319                           ; BSR set to: 0
 18320                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18321                           
 18322                           ;incstack = 0
 18323  008336  EE20 F008          	lfsr	2,8
 18324  00833A  5024               	movf	HopCHK@data^0,w,c
 18325  00833C  26D9               	addwf	fsr2l,f,c
 18326  00833E  5025               	movf	(HopCHK@data+1)^0,w,c
 18327  008340  22DA               	addwfc	fsr2h,f,c
 18328  008342  CFDE F07C          	movff	postinc2,_Hop
 18329  008346  CFDD F07D          	movff	postdec2,_Hop+1
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18333  00834A  C024  F016         	movff	HopCHK@data,getHopCode@data
 18334  00834E  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18335  008352  EC83  F036         	call	_getHopCode	;wreg free
 18336  008356  C016  F28C         	movff	?_getHopCode,_EHop
 18337  00835A  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18338                           
 18339                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18340  00835E  0101               	movlb	1	; () banked
 18341  008360  519A               	movf	_F2Chance& (0+255),w,b
 18342  008362  B4D8               	btfsc	status,2,c
 18343  008364  D00F               	goto	l21540
 18344                           
 18345                           ; BSR set to: 1
 18346                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18347  008366  0100               	movlb	0	; () banked
 18348  008368  517C               	movf	_Hop& (0+255),w,b
 18349  00836A  0101               	movlb	1	; () banked
 18350  00836C  1987               	xorwf	_NextHop& (0+255),w,b
 18351  00836E  E10A               	bnz	l21540
 18352  008370  0100               	movlb	0	; () banked
 18353  008372  517D               	movf	(_Hop+1)& (0+255),w,b
 18354  008374  0101               	movlb	1	; () banked
 18355  008376  1988               	xorwf	(_NextHop+1)& (0+255),w,b
 18356  008378  A4D8               	btfss	status,2,c
 18357  00837A  D004               	goto	l21540
 18358                           
 18359                           ; BSR set to: 1
 18360                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18361  00837C  0E00               	movlw	0
 18362  00837E  6F9A               	movwf	_F2Chance& (0+255),b
 18363  008380                     l21536:
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18366  008380  0E01               	movlw	1
 18367  008382  0012               	return	
 18368  008384                     l21540:
 18369                           
 18370                           ; BSR set to: 1
 18371                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18372  008384  0102               	movlb	2	; () banked
 18373  008386  518C               	movf	_EHop& (0+255),w,b
 18374  008388  0100               	movlb	0	; () banked
 18375  00838A  5D7C               	subwf	_Hop& (0+255),w,b
 18376  00838C  6E26               	movwf	HopCHK@hopDiff^0,c
 18377  00838E  0102               	movlb	2	; () banked
 18378  008390  518D               	movf	(_EHop+1)& (0+255),w,b
 18379  008392  0100               	movlb	0	; () banked
 18380  008394  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18381  008396  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18382                           
 18383                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18384  008398  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18385  00839A  D002               	goto	l21548
 18386                           
 18387                           ; BSR set to: 0
 18388                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18389  00839C  0E0A               	movlw	10
 18390  00839E  0012               	return	
 18391  0083A0                     l21548:
 18392                           
 18393                           ; BSR set to: 0
 18394  0083A0  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18395  0083A2  D7EE               	goto	l21536
 18396  0083A4  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18397  0083A6  E104               	bnz	u24880
 18398  0083A8  0E11               	movlw	17
 18399  0083AA  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18400  0083AC  A0D8               	btfss	status,0,c
 18401  0083AE  D7E8               	goto	l21536
 18402  0083B0                     u24880:
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18406  0083B0  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18407  0083B4  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18408  0083B8  EC4F  F04E         	call	_ReqResync	;wreg free
 18409  0083BC  0012               	return		;funcret
 18410  0083BE                     __end_of_HopCHK:
 18411                           	callstack 0
 18412                           
 18413 ;; *************** function _getHopCode *****************
 18414 ;; Defined at:
 18415 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;  data            2   21[COMRAM] PTR struct .
 18418 ;;		 -> classic_data(16), 
 18419 ;; Auto vars:     Size  Location     Type
 18420 ;;  tempHop         2   31[COMRAM] unsigned short 
 18421 ;;  i               1   34[COMRAM] unsigned char 
 18422 ;;  tempPos         1   33[COMRAM] char 
 18423 ;; Return value:  Size  Location     Type
 18424 ;;                  2   21[COMRAM] unsigned short 
 18425 ;; Registers used:
 18426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18427 ;; Tracked objects:
 18428 ;;		On entry : 3F/0
 18429 ;;		On exit  : 3E/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18434 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18435 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18436 ;;Total ram usage:       14 bytes
 18437 ;; Hardware stack levels used: 1
 18438 ;; Hardware stack levels required when called: 5
 18439 ;; This function calls:
 18440 ;;		_ReqResync
 18441 ;;		___wmul
 18442 ;; This function is called by:
 18443 ;;		_HopCHK
 18444 ;; This function uses a non-reentrant model
 18445 ;;
 18446                           
 18447                           	psect	text64
 18448  006D06                     __ptext64:
 18449                           	callstack 0
 18450  006D06                     _getHopCode:
 18451                           	callstack 22
 18452                           
 18453                           ; BSR set to: 0
 18454                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18455                           
 18456                           ;incstack = 0
 18457  006D06  0E00               	movlw	0
 18458  006D08  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18459  006D0A  0E00               	movlw	0
 18460  006D0C  6E20               	movwf	getHopCode@tempHop^0,c
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18464  006D0E  6822               	setf	getHopCode@tempPos^0,c
 18465                           
 18466                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18467  006D10  0E00               	movlw	0
 18468  006D12  6E23               	movwf	getHopCode@i^0,c
 18469  006D14                     l20832:
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18473  006D14  EE20 F004          	lfsr	2,4
 18474  006D18  5016               	movf	getHopCode@data^0,w,c
 18475  006D1A  26D9               	addwf	fsr2l,f,c
 18476  006D1C  5017               	movf	(getHopCode@data+1)^0,w,c
 18477  006D1E  22DA               	addwfc	fsr2h,f,c
 18478  006D20  5023               	movf	getHopCode@i^0,w,c
 18479  006D22  0D06               	mullw	6
 18480  006D24  0E00               	movlw	low _listSyncValues
 18481  006D26  24F3               	addwf	243,w,c
 18482  006D28  6EE1               	movwf	fsr1l,c
 18483  006D2A  0E03               	movlw	high _listSyncValues
 18484  006D2C  20F4               	addwfc	prodh,w,c
 18485  006D2E  6EE2               	movwf	fsr1h,c
 18486  006D30  50DE               	movf	postinc2,w,c
 18487  006D32  18E6               	xorwf	postinc1,w,c
 18488  006D34  E118               	bnz	l20838
 18489  006D36  50DE               	movf	postinc2,w,c
 18490  006D38  18E6               	xorwf	postinc1,w,c
 18491  006D3A  E115               	bnz	l20838
 18492  006D3C  50DE               	movf	postinc2,w,c
 18493  006D3E  18E6               	xorwf	postinc1,w,c
 18494  006D40  E112               	bnz	l20838
 18495  006D42  50DE               	movf	postinc2,w,c
 18496  006D44  18E6               	xorwf	postinc1,w,c
 18497  006D46  A4D8               	btfss	status,2,c
 18498  006D48  D00E               	goto	l20838
 18499                           
 18500                           ; BSR set to: 0
 18501                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18502  006D4A  5023               	movf	getHopCode@i^0,w,c
 18503  006D4C  0D06               	mullw	6
 18504  006D4E  0E04               	movlw	low (_listSyncValues+4)
 18505  006D50  24F3               	addwf	243,w,c
 18506  006D52  6ED9               	movwf	fsr2l,c
 18507  006D54  0E03               	movlw	high (_listSyncValues+4)
 18508  006D56  20F4               	addwfc	prodh,w,c
 18509  006D58  6EDA               	movwf	fsr2h,c
 18510  006D5A  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18511  006D5E  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18515  006D62  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18516  006D66                     l20838:
 18517                           
 18518                           ; BSR set to: 0
 18519                           ;keeloqDecrypt_MC50.c: 278:     }
 18520  006D66  2A23               	incf	getHopCode@i^0,f,c
 18521                           
 18522                           ; BSR set to: 0
 18523  006D68  0E18               	movlw	24
 18524  006D6A  6423               	cpfsgt	getHopCode@i^0,c
 18525  006D6C  D7D3               	goto	l20832
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18529  006D6E  AE22               	btfss	getHopCode@tempPos^0,7,c
 18530  006D70  D050               	goto	l20858
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18534  006D72  EE20 F004          	lfsr	2,4
 18535  006D76  5016               	movf	getHopCode@data^0,w,c
 18536  006D78  26D9               	addwf	fsr2l,f,c
 18537  006D7A  5017               	movf	(getHopCode@data+1)^0,w,c
 18538  006D7C  22DA               	addwfc	fsr2h,f,c
 18539  006D7E  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18540  006D82  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18541  006D86  0E00               	movlw	0
 18542  006D88  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18543  006D8A  0E06               	movlw	6
 18544  006D8C  6E12               	movwf	___wmul@multiplicand^0,c
 18545  006D8E  EC0B  F04D         	call	___wmul	;wreg free
 18546  006D92  0E00               	movlw	low _listSyncValues
 18547  006D94  2410               	addwf	?___wmul^0,w,c
 18548  006D96  6EE1               	movwf	fsr1l,c
 18549  006D98  0E03               	movlw	high _listSyncValues
 18550  006D9A  2011               	addwfc	(?___wmul+1)^0,w,c
 18551  006D9C  6EE2               	movwf	fsr1h,c
 18552  006D9E  CFDE FFE6          	movff	postinc2,postinc1
 18553  006DA2  CFDE FFE6          	movff	postinc2,postinc1
 18554  006DA6  CFDE FFE6          	movff	postinc2,postinc1
 18555  006DAA  CFDE FFE6          	movff	postinc2,postinc1
 18556                           
 18557                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18558  006DAE  EE20 F008          	lfsr	2,8
 18559  006DB2  5016               	movf	getHopCode@data^0,w,c
 18560  006DB4  26D9               	addwf	fsr2l,f,c
 18561  006DB6  5017               	movf	(getHopCode@data+1)^0,w,c
 18562  006DB8  22DA               	addwfc	fsr2h,f,c
 18563  006DBA  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18564  006DBE  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18565  006DC2  0E00               	movlw	0
 18566  006DC4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18567  006DC6  0E06               	movlw	6
 18568  006DC8  6E12               	movwf	___wmul@multiplicand^0,c
 18569  006DCA  EC0B  F04D         	call	___wmul	;wreg free
 18570  006DCE  0E04               	movlw	low (_listSyncValues+4)
 18571  006DD0  2410               	addwf	?___wmul^0,w,c
 18572  006DD2  6EE1               	movwf	fsr1l,c
 18573  006DD4  0E03               	movlw	high (_listSyncValues+4)
 18574  006DD6  2011               	addwfc	(?___wmul+1)^0,w,c
 18575  006DD8  6EE2               	movwf	fsr1h,c
 18576  006DDA  CFDE FFE6          	movff	postinc2,postinc1
 18577  006DDE  CFDD FFE5          	movff	postdec2,postdec1
 18578                           
 18579                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18580  006DE2  0100               	movlb	0	; () banked
 18581  006DE4  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18582  006DE6  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18586  006DE8  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18587  006DEA  E104               	bnz	u23930
 18588  006DEC  0E19               	movlw	25
 18589  006DEE  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18590  006DF0  A0D8               	btfss	status,0,c
 18591  006DF2  D004               	goto	l20852
 18592  006DF4                     u23930:
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18596  006DF4  0E00               	movlw	0
 18597  006DF6  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18598  006DF8  0E00               	movlw	0
 18599  006DFA  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18600  006DFC                     l20852:
 18601                           
 18602                           ; BSR set to: 0
 18603                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18604  006DFC  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18605  006E00  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18606  006E04  EC4F  F04E         	call	_ReqResync	;wreg free
 18607  006E08  6E18               	movwf	??_getHopCode^0,c
 18608  006E0A  5018               	movf	??_getHopCode^0,w,c
 18609  006E0C  6E16               	movwf	?_getHopCode^0,c
 18610  006E0E  6A17               	clrf	(?_getHopCode+1)^0,c
 18611  006E10  0012               	return	
 18612  006E12                     l20858:
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18616  006E12  5022               	movf	getHopCode@tempPos^0,w,c
 18617  006E14  0D06               	mullw	6
 18618  006E16  0E04               	movlw	low (_listSyncValues+4)
 18619  006E18  24F3               	addwf	243,w,c
 18620  006E1A  6ED9               	movwf	fsr2l,c
 18621  006E1C  0E03               	movlw	high (_listSyncValues+4)
 18622  006E1E  20F4               	addwfc	prodh,w,c
 18623  006E20  6EDA               	movwf	fsr2h,c
 18624  006E22  C07C  FFDE         	movff	_Hop,postinc2
 18625  006E26  C07D  FFDD         	movff	_Hop+1,postdec2
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18629  006E2A  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18630  006E2E  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18631  006E32  0012               	return		;funcret
 18632  006E34                     __end_of_getHopCode:
 18633                           	callstack 0
 18634                           
 18635 ;; *************** function _ReqResync *****************
 18636 ;; Defined at:
 18637 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;		None
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  1    wreg      enum E10730
 18644 ;; Registers used:
 18645 ;;		wreg, status,2, status,0
 18646 ;; Tracked objects:
 18647 ;;		On entry : 3F/0
 18648 ;;		On exit  : 3F/1
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18655 ;;Total ram usage:        2 bytes
 18656 ;; Hardware stack levels used: 1
 18657 ;; Hardware stack levels required when called: 4
 18658 ;; This function calls:
 18659 ;;		Nothing
 18660 ;; This function is called by:
 18661 ;;		_HopCHK
 18662 ;;		_getHopCode
 18663 ;; This function uses a non-reentrant model
 18664 ;;
 18665                           
 18666                           	psect	text65
 18667  009C9E                     __ptext65:
 18668                           	callstack 0
 18669  009C9E                     _ReqResync:
 18670                           	callstack 22
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18674                           
 18675                           ;incstack = 0
 18676  009C9E  0E01               	movlw	1
 18677  009CA0  0101               	movlb	1	; () banked
 18678  009CA2  6F9A               	movwf	_F2Chance& (0+255),b
 18679                           
 18680                           ; BSR set to: 1
 18681                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18682  009CA4  0E01               	movlw	1
 18683  009CA6  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18684  009CA8  6F87               	movwf	_NextHop& (0+255),b
 18685  009CAA  0E00               	movlw	0
 18686  009CAC  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18687  009CAE  6F88               	movwf	(_NextHop+1)& (0+255),b
 18688                           
 18689                           ; BSR set to: 1
 18690                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18691  009CB0  0E09               	movlw	9
 18692                           
 18693                           ; BSR set to: 1
 18694  009CB2  0012               	return		;funcret
 18695  009CB4                     __end_of_ReqResync:
 18696                           	callstack 0
 18697                           
 18698 ;; *************** function _DecCHK *****************
 18699 ;; Defined at:
 18700 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18701 ;; Parameters:    Size  Location     Type
 18702 ;;  data            2   15[COMRAM] PTR struct .
 18703 ;;		 -> classic_data(16), 
 18704 ;; Auto vars:     Size  Location     Type
 18705 ;;		None
 18706 ;; Return value:  Size  Location     Type
 18707 ;;                  1    wreg      _Bool 
 18708 ;; Registers used:
 18709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18710 ;; Tracked objects:
 18711 ;;		On entry : 3F/0
 18712 ;;		On exit  : 3F/0
 18713 ;;		Unchanged: 3F/0
 18714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18719 ;;Total ram usage:        4 bytes
 18720 ;; Hardware stack levels used: 1
 18721 ;; Hardware stack levels required when called: 4
 18722 ;; This function calls:
 18723 ;;		Nothing
 18724 ;; This function is called by:
 18725 ;;		_keeloqDecryptPacket
 18726 ;; This function uses a non-reentrant model
 18727 ;;
 18728                           
 18729                           	psect	text66
 18730  00964A                     __ptext66:
 18731                           	callstack 0
 18732  00964A                     _DecCHK:
 18733                           	callstack 24
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18737                           
 18738                           ; BSR set to: 1
 18739                           ;incstack = 0
 18740  00964A  EE20 F00D          	lfsr	2,13
 18741  00964E  5010               	movf	DecCHK@data^0,w,c
 18742  009650  26D9               	addwf	fsr2l,f,c
 18743  009652  5011               	movf	(DecCHK@data+1)^0,w,c
 18744  009654  22DA               	addwfc	fsr2h,f,c
 18745  009656  50DF               	movf	indf2,w,c
 18746  009658  6E12               	movwf	??_DecCHK^0,c
 18747  00965A  EE20 F00C          	lfsr	2,12
 18748  00965E  5010               	movf	DecCHK@data^0,w,c
 18749  009660  26D9               	addwf	fsr2l,f,c
 18750  009662  5011               	movf	(DecCHK@data+1)^0,w,c
 18751  009664  22DA               	addwfc	fsr2h,f,c
 18752  009666  50DF               	movf	indf2,w,c
 18753  009668  1812               	xorwf	??_DecCHK^0,w,c
 18754  00966A  6E13               	movwf	(??_DecCHK+1)^0,c
 18755  00966C  0E0F               	movlw	15
 18756  00966E  1613               	andwf	(??_DecCHK+1)^0,f,c
 18757  009670  B4D8               	btfsc	status,2,c
 18758  009672  D002               	goto	l21522
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18762  009674  0E00               	movlw	0
 18763  009676  0012               	return	
 18764  009678                     l21522:
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18768  009678  0E01               	movlw	1
 18769                           
 18770                           ; BSR set to: 0
 18771  00967A  0012               	return		;funcret
 18772  00967C                     __end_of_DecCHK:
 18773                           	callstack 0
 18774                           
 18775 ;; *************** function _DecryptPacket_12BIT *****************
 18776 ;; Defined at:
 18777 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18780 ;;		 -> BufferRF(9), 
 18781 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18782 ;;		 -> classic_data(16), 
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;  commandType     1   12[BANK0 ] enum E10539
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  1    wreg      enum E10539
 18787 ;; Registers used:
 18788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18789 ;; Tracked objects:
 18790 ;;		On entry : 3F/0
 18791 ;;		On exit  : 3F/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18797 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18798 ;;Total ram usage:        5 bytes
 18799 ;; Hardware stack levels used: 1
 18800 ;; Hardware stack levels required when called: 14
 18801 ;; This function calls:
 18802 ;;		_memcpy
 18803 ;;		_validateRemoteSerialNumber
 18804 ;; This function is called by:
 18805 ;;		_readRFButtons
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           	psect	text67
 18810  008192                     __ptext67:
 18811                           	callstack 0
 18812  008192                     _DecryptPacket_12BIT:
 18813                           	callstack 15
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;incstack = 0
 18820  008192  0E04               	movlw	4
 18821  008194  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18822  008196  6E10               	movwf	memcpy@d1^0,c
 18823  008198  0E00               	movlw	0
 18824  00819A  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18825  00819C  6E11               	movwf	(memcpy@d1+1)^0,c
 18826  00819E  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18827  0081A2  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18828  0081A6  0E00               	movlw	0
 18829  0081A8  6E15               	movwf	(memcpy@n+1)^0,c
 18830  0081AA  0E04               	movlw	4
 18831  0081AC  6E14               	movwf	memcpy@n^0,c
 18832  0081AE  ECF1  F049         	call	_memcpy	;wreg free
 18833                           
 18834                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18835  0081B2  0100               	movlb	0	; () banked
 18836  0081B4  EE20 F004          	lfsr	2,4
 18837  0081B8  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18838  0081BA  26D9               	addwf	fsr2l,f,c
 18839  0081BC  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18840  0081BE  22DA               	addwfc	fsr2h,f,c
 18841  0081C0  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18842  0081C4  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18843  0081C8  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18844  0081CC  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18845  0081D0  0E00               	movlw	0
 18846  0081D2  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18847  0081D4  0E0F               	movlw	15
 18848  0081D6  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18849  0081D8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18850  0081DA  0E00               	movlw	0
 18851  0081DC  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18852  0081DE  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18853  0081E0  EC66  F030         	call	_validateRemoteSerialNumber	;wreg free
 18854  0081E4  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18858  0081E6  EE20 F00C          	lfsr	2,12
 18859  0081EA  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18860  0081EC  26D9               	addwf	fsr2l,f,c
 18861  0081EE  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18862  0081F0  22DA               	addwfc	fsr2h,f,c
 18863  0081F2  0E00               	movlw	0
 18864  0081F4  6EDF               	movwf	indf2,c
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18868  0081F6  EE20 F008          	lfsr	2,8
 18869  0081FA  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18870  0081FC  26D9               	addwf	fsr2l,f,c
 18871  0081FE  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18872  008200  22DA               	addwfc	fsr2h,f,c
 18873  008202  0E00               	movlw	0
 18874  008204  6EDE               	movwf	postinc2,c
 18875  008206  0E00               	movlw	0
 18876  008208  6EDD               	movwf	postdec2,c
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18880  00820A  EE20 F00E          	lfsr	2,14
 18881  00820E  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18882  008210  26D9               	addwf	fsr2l,f,c
 18883  008212  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18884  008214  22DA               	addwfc	fsr2h,f,c
 18885  008216  0E02               	movlw	2
 18886  008218  6EDF               	movwf	indf2,c
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18890  00821A  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18891                           
 18892                           ; BSR set to: 0
 18893  00821C  0012               	return		;funcret
 18894  00821E                     __end_of_DecryptPacket_12BIT:
 18895                           	callstack 0
 18896                           
 18897 ;; *************** function _readInputs *****************
 18898 ;; Defined at:
 18899 ;;		line 528 in file "inputs_MC50.c"
 18900 ;; Parameters:    Size  Location     Type
 18901 ;;		None
 18902 ;; Auto vars:     Size  Location     Type
 18903 ;;		None
 18904 ;; Return value:  Size  Location     Type
 18905 ;;                  1    wreg      void 
 18906 ;; Registers used:
 18907 ;;		wreg, status,2, status,0
 18908 ;; Tracked objects:
 18909 ;;		On entry : 3F/1
 18910 ;;		On exit  : 3E/0
 18911 ;;		Unchanged: 0/0
 18912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18917 ;;Total ram usage:        0 bytes
 18918 ;; Hardware stack levels used: 1
 18919 ;; Hardware stack levels required when called: 4
 18920 ;; This function calls:
 18921 ;;		Nothing
 18922 ;; This function is called by:
 18923 ;;		_main
 18924 ;; This function uses a non-reentrant model
 18925 ;;
 18926                           
 18927                           	psect	text68
 18928  0073CC                     __ptext68:
 18929                           	callstack 0
 18930  0073CC                     _readInputs:
 18931                           	callstack 26
 18932                           
 18933                           ; BSR set to: 1
 18934                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;incstack = 0
 18938  0073CC  0100               	movlb	0	; () banked
 18939  0073CE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18940  0073D0  A4D8               	btfss	status,2,c
 18941  0073D2  D006               	goto	l24740
 18942                           
 18943                           ; BSR set to: 0
 18944  0073D4  0E00               	movlw	0
 18945  0073D6  B28D               	btfsc	141,1,c	;volatile
 18946  0073D8  0E01               	movlw	1
 18947  0073DA  0101               	movlb	1	; () banked
 18948  0073DC  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18949  0073DE  D005               	goto	l24742
 18950  0073E0                     l24740:
 18951                           
 18952                           ; BSR set to: 0
 18953  0073E0  0E00               	movlw	0
 18954  0073E2  B48D               	btfsc	141,2,c	;volatile
 18955  0073E4  0E01               	movlw	1
 18956  0073E6  0101               	movlb	1	; () banked
 18957  0073E8  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18958  0073EA                     l24742:
 18959                           
 18960                           ; BSR set to: 1
 18961                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18962  0073EA  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18963  0073EC  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18964  0073EE  A4D8               	btfss	status,2,c
 18965  0073F0  D002               	goto	l1731
 18966                           
 18967                           ; BSR set to: 1
 18968                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18969  0073F2  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18970                           
 18971                           ;inputs_MC50.c: 544:     }
 18972  0073F4  D004               	goto	l1732
 18973  0073F6                     l1731:
 18974                           
 18975                           ; BSR set to: 1
 18976                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18977  0073F6  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 18978                           
 18979                           ; BSR set to: 1
 18980                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 18981  0073FA  0E00               	movlw	0
 18982  0073FC  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 18983  0073FE                     l1732:
 18984                           
 18985                           ; BSR set to: 1
 18986                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 18987  0073FE  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 18988  007400  A4D8               	btfss	status,2,c
 18989                           
 18990                           ; BSR set to: 1
 18991                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 18992  007402  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 18993                           
 18994                           ; BSR set to: 1
 18995                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 18996  007406  0100               	movlb	0	; () banked
 18997  007408  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18998  00740A  A4D8               	btfss	status,2,c
 18999  00740C  D006               	goto	l24754
 19000                           
 19001                           ; BSR set to: 0
 19002  00740E  0E00               	movlw	0
 19003  007410  B48D               	btfsc	141,2,c	;volatile
 19004  007412  0E01               	movlw	1
 19005  007414  0101               	movlb	1	; () banked
 19006  007416  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19007  007418  D005               	goto	l24756
 19008  00741A                     l24754:
 19009                           
 19010                           ; BSR set to: 0
 19011  00741A  0E00               	movlw	0
 19012  00741C  B28D               	btfsc	141,1,c	;volatile
 19013  00741E  0E01               	movlw	1
 19014  007420  0101               	movlb	1	; () banked
 19015  007422  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19016  007424                     l24756:
 19017                           
 19018                           ; BSR set to: 1
 19019                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19020  007424  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19021  007426  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19022  007428  A4D8               	btfss	status,2,c
 19023  00742A  D002               	goto	l1736
 19024                           
 19025                           ; BSR set to: 1
 19026                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19027  00742C  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19028                           
 19029                           ;inputs_MC50.c: 573:     }
 19030  00742E  D004               	goto	l1737
 19031  007430                     l1736:
 19032                           
 19033                           ; BSR set to: 1
 19034                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19035  007430  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19036                           
 19037                           ; BSR set to: 1
 19038                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19039  007434  0E00               	movlw	0
 19040  007436  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19041  007438                     l1737:
 19042                           
 19043                           ; BSR set to: 1
 19044                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19045  007438  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19046  00743A  A4D8               	btfss	status,2,c
 19047                           
 19048                           ; BSR set to: 1
 19049                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19050  00743C  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19051                           
 19052                           ; BSR set to: 1
 19053                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19054  007440  0E00               	movlw	0
 19055  007442  B88D               	btfsc	141,4,c	;volatile
 19056  007444  0E01               	movlw	1
 19057  007446  6F6A               	movwf	_security& (0+255),b	;volatile
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19061  007448  516A               	movf	_security& (0+255),w,b	;volatile
 19062  00744A  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19063  00744C  A4D8               	btfss	status,2,c
 19064  00744E  D002               	goto	l1739
 19065                           
 19066                           ; BSR set to: 1
 19067                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19068  007450  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19069                           
 19070                           ;inputs_MC50.c: 597:     }
 19071  007452  D004               	goto	l1740
 19072  007454                     l1739:
 19073                           
 19074                           ; BSR set to: 1
 19075                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19076  007454  C16A  F16B         	movff	_security,_security+1	;volatile
 19077                           
 19078                           ; BSR set to: 1
 19079                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19080  007458  0E00               	movlw	0
 19081  00745A  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19082  00745C                     l1740:
 19083                           
 19084                           ; BSR set to: 1
 19085                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19086  00745C  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19087  00745E  A4D8               	btfss	status,2,c
 19088                           
 19089                           ; BSR set to: 1
 19090                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19091  007460  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19092                           
 19093                           ; BSR set to: 1
 19094                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19095  007464  0E00               	movlw	0
 19096  007466  BA8D               	btfsc	141,5,c	;volatile
 19097  007468  0E01               	movlw	1
 19098  00746A  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19099                           
 19100                           ; BSR set to: 1
 19101                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19102  00746C  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19103  00746E  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19104  007470  A4D8               	btfss	status,2,c
 19105  007472  D002               	goto	l1742
 19106                           
 19107                           ; BSR set to: 1
 19108                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19109  007474  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19110                           
 19111                           ;inputs_MC50.c: 619:     }
 19112  007476  D004               	goto	l1743
 19113  007478                     l1742:
 19114                           
 19115                           ; BSR set to: 1
 19116                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19117  007478  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19118                           
 19119                           ; BSR set to: 1
 19120                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19121  00747C  0E00               	movlw	0
 19122  00747E  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19123  007480                     l1743:
 19124                           
 19125                           ; BSR set to: 1
 19126                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19127  007480  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19128  007482  A4D8               	btfss	status,2,c
 19129                           
 19130                           ; BSR set to: 1
 19131                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19132  007484  C16D  F170         	movff	_security+3,_security+6	;volatile
 19133                           
 19134                           ; BSR set to: 1
 19135                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19136  007488  0E00               	movlw	0
 19137  00748A  BC8D               	btfsc	141,6,c	;volatile
 19138  00748C  0E01               	movlw	1
 19139  00748E  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19143  007490  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19144  007492  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19145  007494  A4D8               	btfss	status,2,c
 19146  007496  D002               	goto	l1745
 19147                           
 19148                           ; BSR set to: 1
 19149                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19150  007498  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19151                           
 19152                           ;inputs_MC50.c: 640:     }
 19153  00749A  D004               	goto	l1746
 19154  00749C                     l1745:
 19155                           
 19156                           ; BSR set to: 1
 19157                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19158  00749C  C171  F172         	movff	_security+7,_security+8	;volatile
 19159                           
 19160                           ; BSR set to: 1
 19161                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19162  0074A0  0E00               	movlw	0
 19163  0074A2  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19164  0074A4                     l1746:
 19165                           
 19166                           ; BSR set to: 1
 19167                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19168  0074A4  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19169  0074A6  A4D8               	btfss	status,2,c
 19170                           
 19171                           ; BSR set to: 1
 19172                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19173  0074A8  C171  F174         	movff	_security+7,_security+10	;volatile
 19174                           
 19175                           ; BSR set to: 1
 19176                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19177  0074AC  0100               	movlb	0	; () banked
 19178  0074AE  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19179  0074B0  A4D8               	btfss	status,2,c
 19180  0074B2  D00D               	goto	l1748
 19181                           
 19182                           ; BSR set to: 0
 19183                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19184  0074B4  0101               	movlb	1	; () banked
 19185  0074B6  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19186  0074B8  A4D8               	btfss	status,2,c
 19187  0074BA  D006               	goto	l24802
 19188                           
 19189                           ; BSR set to: 1
 19190  0074BC  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19191  0074BE  A4D8               	btfss	status,2,c
 19192  0074C0  D003               	goto	l24802
 19193                           
 19194                           ; BSR set to: 1
 19195                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19196  0074C2  0E00               	movlw	0
 19197  0074C4  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19198                           
 19199                           ;inputs_MC50.c: 660:         }
 19200  0074C6  0012               	return	
 19201  0074C8                     l24802:
 19202                           
 19203                           ; BSR set to: 1
 19204                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19205  0074C8  0E01               	movlw	1
 19206  0074CA  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19207  0074CC  0012               	return	
 19208  0074CE                     l1748:
 19209                           
 19210                           ; BSR set to: 0
 19211                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19212  0074CE  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19213  0074D2  0012               	return		;funcret
 19214  0074D4                     __end_of_readInputs:
 19215                           	callstack 0
 19216                           
 19217 ;; *************** function _loadNVM_VarSystem *****************
 19218 ;; Defined at:
 19219 ;;		line 151 in file "controlMemory_MC50.c"
 19220 ;; Parameters:    Size  Location     Type
 19221 ;;		None
 19222 ;; Auto vars:     Size  Location     Type
 19223 ;;		None
 19224 ;; Return value:  Size  Location     Type
 19225 ;;                  1    wreg      void 
 19226 ;; Registers used:
 19227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19228 ;; Tracked objects:
 19229 ;;		On entry : 3F/0
 19230 ;;		On exit  : 0/0
 19231 ;;		Unchanged: 0/0
 19232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19237 ;;Total ram usage:        0 bytes
 19238 ;; Hardware stack levels used: 1
 19239 ;; Hardware stack levels required when called: 15
 19240 ;; This function calls:
 19241 ;;		_I2C1_Read1ByteRegister
 19242 ;;		_ResetDefaultMemory
 19243 ;;		_SaveNVM_VarSystem
 19244 ;;		_checkNVM_VarSystem
 19245 ;;		_i2c_readDataBlock
 19246 ;; This function is called by:
 19247 ;;		_main
 19248 ;; This function uses a non-reentrant model
 19249 ;;
 19250                           
 19251                           	psect	text69
 19252  006E34                     __ptext69:
 19253                           	callstack 0
 19254  006E34                     _loadNVM_VarSystem:
 19255                           	callstack 15
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19259                           
 19260                           ;incstack = 0
 19261  006E34  0E00               	movlw	0
 19262  006E36  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19263  006E38  0E50               	movlw	80
 19264  006E3A  EC3D  F047         	call	_I2C1_Read1ByteRegister
 19265  006E3E  0AFF               	xorlw	255
 19266  006E40  A4D8               	btfss	status,2,c
 19267  006E42  D04C               	goto	l24606
 19268  006E44  0E10               	movlw	16
 19269  006E46  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19270  006E48  0E50               	movlw	80
 19271  006E4A  EC3D  F047         	call	_I2C1_Read1ByteRegister
 19272  006E4E  0AFF               	xorlw	255
 19273  006E50  A4D8               	btfss	status,2,c
 19274  006E52  D044               	goto	l24606
 19275                           
 19276                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19277  006E54  0E00               	movlw	0
 19278  006E56  EC99  F033         	call	_ResetDefaultMemory
 19279                           
 19280                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19281  006E5A  0E00               	movlw	0
 19282  006E5C  0100               	movlb	0	; () banked
 19283  006E5E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19284  006E60  0E00               	movlw	0
 19285  006E62  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19286  006E64  0E00               	movlw	0
 19287  006E66  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19288  006E68  0E00               	movlw	0
 19289  006E6A  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19293  006E6C  0E00               	movlw	0
 19294  006E6E  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19295  006E70  0E00               	movlw	0
 19296  006E72  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19297  006E74  0E00               	movlw	0
 19298  006E76  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19299  006E78  0E00               	movlw	0
 19300  006E7A  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19301                           
 19302                           ; BSR set to: 0
 19303                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19304  006E7C  0E00               	movlw	0
 19305  006E7E  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19306  006E80  0E00               	movlw	0
 19307  006E82  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19311  006E84  0E00               	movlw	0
 19312  006E86  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19313  006E88  0E00               	movlw	0
 19314  006E8A  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19318  006E8C  0E00               	movlw	0
 19319  006E8E  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19320  006E90  0E00               	movlw	0
 19321  006E92  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19322  006E94  0E00               	movlw	0
 19323  006E96  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19324  006E98  0E00               	movlw	0
 19325  006E9A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19326                           
 19327                           ; BSR set to: 0
 19328                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19329  006E9C  0E00               	movlw	0
 19330  006E9E  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19331  006EA0  0E00               	movlw	0
 19332  006EA2  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19333  006EA4  0E00               	movlw	0
 19334  006EA6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19335  006EA8  0E00               	movlw	0
 19336  006EAA  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19337                           
 19338                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19339  006EAC  0E03               	movlw	3
 19340  006EAE  ECEF  F04A         	call	_SaveNVM_VarSystem
 19341                           
 19342                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19343  006EB2  0E00               	movlw	0
 19344  006EB4  0100               	movlb	0	; () banked
 19345  006EB6  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19349  006EB8  0E00               	movlw	0
 19350  006EBA  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19351                           
 19352                           ; BSR set to: 0
 19353                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19354  006EBC  0E00               	movlw	0
 19355  006EBE  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19359  006EC0  0E00               	movlw	0
 19360  006EC2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19361  006EC4  0E00               	movlw	0
 19362  006EC6  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19363  006EC8  0E00               	movlw	0
 19364  006ECA  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19365  006ECC  0E00               	movlw	0
 19366  006ECE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19367                           
 19368                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19369  006ED0  0E02               	movlw	2
 19370  006ED2  ECEF  F04A         	call	_SaveNVM_VarSystem
 19371                           
 19372                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19373  006ED6  0E00               	movlw	0
 19374  006ED8  0100               	movlb	0	; () banked
 19375  006EDA  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19376  006EDC                     l24606:
 19377                           
 19378                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19379  006EDC  0E00               	movlw	0
 19380  006EDE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19381  006EE0  0E00               	movlw	0
 19382  006EE2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19383  006EE4  0E98               	movlw	low _var_sys_NVM
 19384  006EE6  6E24               	movwf	i2c_readDataBlock@data^0,c
 19385  006EE8  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19386  006EEA  0E00               	movlw	0
 19387  006EEC  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19388  006EEE  0E10               	movlw	16
 19389  006EF0  6E26               	movwf	i2c_readDataBlock@len^0,c
 19390  006EF2  0E50               	movlw	80
 19391  006EF4  EC59  F044         	call	_i2c_readDataBlock
 19392                           
 19393                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19394  006EF8  0E00               	movlw	0
 19395  006EFA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19396  006EFC  0E10               	movlw	16
 19397  006EFE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19398  006F00  0EA8               	movlw	low (_var_sys_NVM+16)
 19399  006F02  6E24               	movwf	i2c_readDataBlock@data^0,c
 19400  006F04  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19401  006F06  0E00               	movlw	0
 19402  006F08  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19403  006F0A  0E10               	movlw	16
 19404  006F0C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19405  006F0E  0E50               	movlw	80
 19406  006F10  EC59  F044         	call	_i2c_readDataBlock
 19407                           
 19408                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19409  006F14  0E00               	movlw	0
 19410  006F16  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19411  006F18  0E20               	movlw	32
 19412  006F1A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19413  006F1C  0EB8               	movlw	low (_var_sys_NVM+32)
 19414  006F1E  6E24               	movwf	i2c_readDataBlock@data^0,c
 19415  006F20  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19416  006F22  0E00               	movlw	0
 19417  006F24  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19418  006F26  0E10               	movlw	16
 19419  006F28  6E26               	movwf	i2c_readDataBlock@len^0,c
 19420  006F2A  0E50               	movlw	80
 19421  006F2C  EC59  F044         	call	_i2c_readDataBlock
 19422                           
 19423                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19424  006F30  0E00               	movlw	0
 19425  006F32  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19426  006F34  0E30               	movlw	48
 19427  006F36  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19428  006F38  0EC8               	movlw	low (_var_sys_NVM+48)
 19429  006F3A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19430  006F3C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19431  006F3E  0E00               	movlw	0
 19432  006F40  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19433  006F42  0E10               	movlw	16
 19434  006F44  6E26               	movwf	i2c_readDataBlock@len^0,c
 19435  006F46  0E50               	movlw	80
 19436  006F48  EC59  F044         	call	_i2c_readDataBlock
 19437                           
 19438                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19439  006F4C  EC96  F02F         	call	_checkNVM_VarSystem	;wreg free
 19440                           
 19441                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19442  006F50  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19443  006F54  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19444  006F58  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19445  006F5C  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19446  006F60  0012               	return		;funcret
 19447  006F62                     __end_of_loadNVM_VarSystem:
 19448                           	callstack 0
 19449                           
 19450 ;; *************** function _checkNVM_VarSystem *****************
 19451 ;; Defined at:
 19452 ;;		line 326 in file "controlMemory_MC50.c"
 19453 ;; Parameters:    Size  Location     Type
 19454 ;;		None
 19455 ;; Auto vars:     Size  Location     Type
 19456 ;;  saveParam       1   57[COMRAM] unsigned char 
 19457 ;; Return value:  Size  Location     Type
 19458 ;;                  1    wreg      void 
 19459 ;; Registers used:
 19460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19461 ;; Tracked objects:
 19462 ;;		On entry : 0/2
 19463 ;;		On exit  : 0/0
 19464 ;;		Unchanged: 0/0
 19465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19470 ;;Total ram usage:        1 bytes
 19471 ;; Hardware stack levels used: 1
 19472 ;; Hardware stack levels required when called: 14
 19473 ;; This function calls:
 19474 ;;		_SaveNVM_VarSystem
 19475 ;; This function is called by:
 19476 ;;		_loadNVM_VarSystem
 19477 ;; This function uses a non-reentrant model
 19478 ;;
 19479                           
 19480                           	psect	text70
 19481  005F2C                     __ptext70:
 19482                           	callstack 0
 19483  005F2C                     _checkNVM_VarSystem:
 19484                           	callstack 15
 19485                           
 19486                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19487                           
 19488                           ;incstack = 0
 19489  005F2C  0E00               	movlw	0
 19490  005F2E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19491                           
 19492                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19493  005F30  0E2D               	movlw	45
 19494  005F32  0100               	movlb	0	; () banked
 19495  005F34  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19496  005F36  D004               	goto	l22752
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19500  005F38  0E03               	movlw	3
 19501  005F3A  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19502                           
 19503                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19504  005F3C  0E01               	movlw	1
 19505  005F3E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19506  005F40                     l22752:
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19510  005F40  0E2D               	movlw	45
 19511  005F42  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19512  005F44  D004               	goto	l1495
 19513                           
 19514                           ; BSR set to: 0
 19515                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19516  005F46  0E03               	movlw	3
 19517  005F48  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19518                           
 19519                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19520  005F4A  0E01               	movlw	1
 19521  005F4C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19522  005F4E                     l1495:
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19526  005F4E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19527  005F50  B4D8               	btfsc	status,2,c
 19528  005F52  D003               	goto	u26250
 19529                           
 19530                           ; BSR set to: 0
 19531  005F54  0E09               	movlw	9
 19532  005F56  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19533  005F58  D004               	goto	l22760
 19534  005F5A                     u26250:
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19538  005F5A  0E09               	movlw	9
 19539  005F5C  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19540                           
 19541                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19542  005F5E  0E01               	movlw	1
 19543  005F60  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19544  005F62                     l22760:
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19548  005F62  0E09               	movlw	9
 19549  005F64  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19550  005F66  D004               	goto	l22764
 19551                           
 19552                           ; BSR set to: 0
 19553                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19554  005F68  0E00               	movlw	0
 19555  005F6A  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19556                           
 19557                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19558  005F6C  0E01               	movlw	1
 19559  005F6E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19560  005F70                     l22764:
 19561                           
 19562                           ; BSR set to: 0
 19563                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19564  005F70  0E63               	movlw	99
 19565  005F72  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19566  005F74  D004               	goto	l22768
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19570  005F76  0E0A               	movlw	10
 19571  005F78  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19572                           
 19573                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19574  005F7A  0E01               	movlw	1
 19575  005F7C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19576  005F7E                     l22768:
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19580  005F7E  0E63               	movlw	99
 19581  005F80  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19582  005F82  D004               	goto	l22772
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19586  005F84  0E00               	movlw	0
 19587  005F86  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19588                           
 19589                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19590  005F88  0E01               	movlw	1
 19591  005F8A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19592  005F8C                     l22772:
 19593                           
 19594                           ; BSR set to: 0
 19595                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19596  005F8C  0E63               	movlw	99
 19597  005F8E  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19598  005F90  D004               	goto	l22776
 19599                           
 19600                           ; BSR set to: 0
 19601                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19602  005F92  0E00               	movlw	0
 19603  005F94  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19604                           
 19605                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19606  005F96  0E01               	movlw	1
 19607  005F98  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19608  005F9A                     l22776:
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19612  005F9A  0E01               	movlw	1
 19613  005F9C  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19614  005F9E  D004               	goto	l22780
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19618  005FA0  0E00               	movlw	0
 19619  005FA2  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19620                           
 19621                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19622  005FA4  0E01               	movlw	1
 19623  005FA6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19624  005FA8                     l22780:
 19625                           
 19626                           ; BSR set to: 0
 19627                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19628  005FA8  0E01               	movlw	1
 19629  005FAA  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19630  005FAC  D004               	goto	l22784
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19634  005FAE  0E00               	movlw	0
 19635  005FB0  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19636                           
 19637                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19638  005FB2  0E01               	movlw	1
 19639  005FB4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19640  005FB6                     l22784:
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19644  005FB6  0E01               	movlw	1
 19645  005FB8  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19646  005FBA  D004               	goto	l22788
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19650  005FBC  0E00               	movlw	0
 19651  005FBE  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19652                           
 19653                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19654  005FC0  0E01               	movlw	1
 19655  005FC2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19656  005FC4                     l22788:
 19657                           
 19658                           ; BSR set to: 0
 19659                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19660  005FC4  0E01               	movlw	1
 19661  005FC6  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19662  005FC8  D004               	goto	l22792
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19666  005FCA  0E01               	movlw	1
 19667  005FCC  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19668                           
 19669                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19670  005FCE  0E01               	movlw	1
 19671  005FD0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19672  005FD2                     l22792:
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19676  005FD2  0E01               	movlw	1
 19677  005FD4  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19678  005FD6  D004               	goto	l22796
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19682  005FD8  0E00               	movlw	0
 19683  005FDA  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19684                           
 19685                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19686  005FDC  0E01               	movlw	1
 19687  005FDE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19688  005FE0                     l22796:
 19689                           
 19690                           ; BSR set to: 0
 19691                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19692  005FE0  0E02               	movlw	2
 19693  005FE2  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19694  005FE4  D004               	goto	l22800
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19698  005FE6  0E00               	movlw	0
 19699  005FE8  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19700                           
 19701                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19702  005FEA  0E01               	movlw	1
 19703  005FEC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19704  005FEE                     l22800:
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19708  005FEE  0E03               	movlw	3
 19709  005FF0  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19710  005FF2  D004               	goto	l22804
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19714  005FF4  0E00               	movlw	0
 19715  005FF6  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19716                           
 19717                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19718  005FF8  0E01               	movlw	1
 19719  005FFA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19720  005FFC                     l22804:
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19724  005FFC  0E01               	movlw	1
 19725  005FFE  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19726  006000  D004               	goto	l22808
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19730  006002  0E00               	movlw	0
 19731  006004  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19732                           
 19733                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19734  006006  0E01               	movlw	1
 19735  006008  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19736  00600A                     l22808:
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19740  00600A  0E09               	movlw	9
 19741  00600C  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19742  00600E  D004               	goto	l22812
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19746  006010  0E00               	movlw	0
 19747  006012  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19748                           
 19749                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19750  006014  0E01               	movlw	1
 19751  006016  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19752  006018                     l22812:
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19756  006018  0E02               	movlw	2
 19757  00601A  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19758  00601C  D004               	goto	l22816
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19762  00601E  0E00               	movlw	0
 19763  006020  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19764                           
 19765                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19766  006022  0E01               	movlw	1
 19767  006024  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19768  006026                     l22816:
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19772  006026  0E01               	movlw	1
 19773  006028  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19774  00602A  D004               	goto	l22820
 19775                           
 19776                           ; BSR set to: 0
 19777                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19778  00602C  0E00               	movlw	0
 19779  00602E  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19780                           
 19781                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19782  006030  0E01               	movlw	1
 19783  006032  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19784  006034                     l22820:
 19785                           
 19786                           ; BSR set to: 0
 19787                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19788  006034  0E09               	movlw	9
 19789  006036  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19790  006038  D004               	goto	l22824
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19794  00603A  0E00               	movlw	0
 19795  00603C  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19796                           
 19797                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19798  00603E  0E01               	movlw	1
 19799  006040  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19800  006042                     l22824:
 19801                           
 19802                           ; BSR set to: 0
 19803                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19804  006042  0E63               	movlw	99
 19805  006044  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19806  006046  D004               	goto	l22828
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19810  006048  0E03               	movlw	3
 19811  00604A  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19812                           
 19813                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19814  00604C  0E01               	movlw	1
 19815  00604E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19816  006050                     l22828:
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19820  006050  0E09               	movlw	9
 19821  006052  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19822  006054  D004               	goto	l22832
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19826  006056  0E00               	movlw	0
 19827  006058  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19828                           
 19829                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19830  00605A  0E01               	movlw	1
 19831  00605C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19832  00605E                     l22832:
 19833                           
 19834                           ; BSR set to: 0
 19835                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19836  00605E  0E01               	movlw	1
 19837  006060  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19838  006062  D004               	goto	l1517
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19842  006064  0E00               	movlw	0
 19843  006066  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19844                           
 19845                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19846  006068  0E01               	movlw	1
 19847  00606A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19848  00606C                     l1517:
 19849                           
 19850                           ; BSR set to: 0
 19851                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19852  00606C  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19853  00606E  B4D8               	btfsc	status,2,c
 19854  006070  D003               	goto	u26460
 19855                           
 19856                           ; BSR set to: 0
 19857  006072  0E09               	movlw	9
 19858  006074  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19859  006076  D004               	goto	l22840
 19860  006078                     u26460:
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19864  006078  0E05               	movlw	5
 19865  00607A  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19866                           
 19867                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19868  00607C  0E01               	movlw	1
 19869  00607E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19870  006080                     l22840:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19874  006080  0E03               	movlw	3
 19875  006082  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19876  006084  D004               	goto	l22844
 19877                           
 19878                           ; BSR set to: 0
 19879                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19880  006086  0E03               	movlw	3
 19881  006088  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19882                           
 19883                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19884  00608A  0E01               	movlw	1
 19885  00608C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19886  00608E                     l22844:
 19887                           
 19888                           ; BSR set to: 0
 19889                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19890  00608E  0E01               	movlw	1
 19891  006090  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19892  006092  D004               	goto	l22848
 19893                           
 19894                           ; BSR set to: 0
 19895                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19896  006094  0E00               	movlw	0
 19897  006096  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19898                           
 19899                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19900  006098  0E01               	movlw	1
 19901  00609A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19902  00609C                     l22848:
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19906  00609C  0E01               	movlw	1
 19907  00609E  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19908  0060A0  D004               	goto	l22852
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19912  0060A2  0E01               	movlw	1
 19913  0060A4  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19914                           
 19915                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19916  0060A6  0E01               	movlw	1
 19917  0060A8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19918  0060AA                     l22852:
 19919                           
 19920                           ; BSR set to: 0
 19921                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19922  0060AA  0E09               	movlw	9
 19923  0060AC  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19924  0060AE  D004               	goto	l1524
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19928  0060B0  0E00               	movlw	0
 19929  0060B2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19930                           
 19931                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19932  0060B4  0E01               	movlw	1
 19933  0060B6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19934  0060B8                     l1524:
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19938  0060B8  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19939  0060BA  B4D8               	btfsc	status,2,c
 19940  0060BC  0012               	return	
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19944  0060BE  0E00               	movlw	0
 19945  0060C0  ECEF  F04A         	call	_SaveNVM_VarSystem
 19946                           
 19947                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19948  0060C4  0E01               	movlw	1
 19949  0060C6  ECEF  F04A         	call	_SaveNVM_VarSystem
 19950  0060CA  0012               	return		;funcret
 19951  0060CC                     __end_of_checkNVM_VarSystem:
 19952                           	callstack 0
 19953                           
 19954 ;; *************** function _ResetDefaultMemory *****************
 19955 ;; Defined at:
 19956 ;;		line 198 in file "controlMemory_MC50.c"
 19957 ;; Parameters:    Size  Location     Type
 19958 ;;  type            1    wreg     unsigned char 
 19959 ;; Auto vars:     Size  Location     Type
 19960 ;;  type            1   57[COMRAM] unsigned char 
 19961 ;; Return value:  Size  Location     Type
 19962 ;;                  1    wreg      void 
 19963 ;; Registers used:
 19964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19965 ;; Tracked objects:
 19966 ;;		On entry : 31/0
 19967 ;;		On exit  : 0/0
 19968 ;;		Unchanged: 0/0
 19969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;Total ram usage:        1 bytes
 19975 ;; Hardware stack levels used: 1
 19976 ;; Hardware stack levels required when called: 14
 19977 ;; This function calls:
 19978 ;;		_SaveNVM_VarSystem
 19979 ;; This function is called by:
 19980 ;;		_loadNVM_VarSystem
 19981 ;;		_sm_execute_menuConfiguration
 19982 ;; This function uses a non-reentrant model
 19983 ;;
 19984                           
 19985                           	psect	text71
 19986  006732                     __ptext71:
 19987                           	callstack 0
 19988  006732                     _ResetDefaultMemory:
 19989                           	callstack 14
 19990                           
 19991                           ;incstack = 0
 19992                           ;ResetDefaultMemory@type stored from wreg
 19993  006732  6E3A               	movwf	ResetDefaultMemory@type^0,c
 19994                           
 19995                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 19996  006734  0E03               	movlw	3
 19997  006736  0100               	movlb	0	; () banked
 19998  006738  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19999                           
 20000                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 20001  00673A  0E09               	movlw	9
 20002  00673C  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20003                           
 20004                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 20005  00673E  0E03               	movlw	3
 20006  006740  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20007                           
 20008                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 20009  006742  0E00               	movlw	0
 20010  006744  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20011                           
 20012                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 20013  006746  0E00               	movlw	0
 20014  006748  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20015                           
 20016                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 20017  00674A  0E00               	movlw	0
 20018  00674C  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20019                           
 20020                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 20021  00674E  0E01               	movlw	1
 20022  006750  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20023                           
 20024                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 20025  006752  0E00               	movlw	0
 20026  006754  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20027                           
 20028                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 20029  006756  0E00               	movlw	0
 20030  006758  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20031                           
 20032                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 20033  00675A  0E00               	movlw	0
 20034  00675C  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20035                           
 20036                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 20037  00675E  0E00               	movlw	0
 20038  006760  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20039                           
 20040                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 20041  006762  0E00               	movlw	0
 20042  006764  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20043                           
 20044                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 20045  006766  0E00               	movlw	0
 20046  006768  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20047                           
 20048                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 20049  00676A  0E03               	movlw	3
 20050  00676C  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20051                           
 20052                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 20053  00676E  0E00               	movlw	0
 20054  006770  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20055                           
 20056                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 20057  006772  0E00               	movlw	0
 20058  006774  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20059                           
 20060                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20061  006776  0E00               	movlw	0
 20062  006778  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20063                           
 20064                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20065  00677A  0E01               	movlw	1
 20066  00677C  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20067                           
 20068                           ; BSR set to: 0
 20069                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20070  00677E  503A               	movf	ResetDefaultMemory@type^0,w,c
 20071  006780  A4D8               	btfss	status,2,c
 20072  006782  D014               	goto	l21248
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20076  006784  0E00               	movlw	0
 20077  006786  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20078                           
 20079                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20080  006788  0E00               	movlw	0
 20081  00678A  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20082                           
 20083                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20084  00678C  0E00               	movlw	0
 20085  00678E  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20086                           
 20087                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20088  006790  0E00               	movlw	0
 20089  006792  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20090                           
 20091                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20092  006794  0E00               	movlw	0
 20093  006796  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20094                           
 20095                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20096  006798  0E05               	movlw	5
 20097  00679A  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20098                           
 20099                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20100  00679C  0E03               	movlw	3
 20101  00679E  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20102                           
 20103                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20104  0067A0  0E00               	movlw	0
 20105  0067A2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20106                           
 20107                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20108  0067A4  0E00               	movlw	0
 20109  0067A6  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20110                           
 20111                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20112  0067A8  0E0A               	movlw	10
 20113  0067AA  D039               	goto	L82
 20114  0067AC                     l21248:
 20115                           
 20116                           ; BSR set to: 0
 20117  0067AC  043A               	decf	ResetDefaultMemory@type^0,w,c
 20118  0067AE  A4D8               	btfss	status,2,c
 20119  0067B0  D01B               	goto	l21252
 20120                           
 20121                           ; BSR set to: 0
 20122                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20123  0067B2  0E04               	movlw	4
 20124  0067B4  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20125                           
 20126                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20127  0067B6  0E04               	movlw	4
 20128  0067B8  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20129                           
 20130                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20131  0067BA  0E04               	movlw	4
 20132  0067BC  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20133                           
 20134                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20135  0067BE  0E01               	movlw	1
 20136  0067C0  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20137                           
 20138                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20139  0067C2  0E01               	movlw	1
 20140  0067C4  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20141                           
 20142                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20143  0067C6  0E00               	movlw	0
 20144  0067C8  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20145                           
 20146                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20147  0067CA  0E00               	movlw	0
 20148  0067CC  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20149                           
 20150                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20151  0067CE  0E05               	movlw	5
 20152  0067D0  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20153                           
 20154                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20155  0067D2  0E03               	movlw	3
 20156  0067D4  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20157                           
 20158                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20159  0067D6  0E00               	movlw	0
 20160  0067D8  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20161                           
 20162                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20163  0067DA  0E05               	movlw	5
 20164  0067DC  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20165                           
 20166                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20167  0067DE  0E00               	movlw	0
 20168  0067E0  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20169                           
 20170                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20171  0067E2  0E00               	movlw	0
 20172  0067E4  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20173                           
 20174                           ;controlMemory_MC50.c: 251:     }
 20175  0067E6  D01C               	goto	l21256
 20176  0067E8                     l21252:
 20177                           
 20178                           ; BSR set to: 0
 20179  0067E8  0E02               	movlw	2
 20180  0067EA  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20181  0067EC  A4D8               	btfss	status,2,c
 20182  0067EE  D018               	goto	l21256
 20183                           
 20184                           ; BSR set to: 0
 20185                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20186  0067F0  0E06               	movlw	6
 20187  0067F2  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20188                           
 20189                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20190  0067F4  0E02               	movlw	2
 20191  0067F6  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20192                           
 20193                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20194  0067F8  0E00               	movlw	0
 20195  0067FA  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20196                           
 20197                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20198  0067FC  0E00               	movlw	0
 20199  0067FE  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20200                           
 20201                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20202  006800  0E00               	movlw	0
 20203  006802  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20204                           
 20205                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20206  006804  0E00               	movlw	0
 20207  006806  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20208                           
 20209                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20210  006808  0E02               	movlw	2
 20211  00680A  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20212                           
 20213                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20214  00680C  0E05               	movlw	5
 20215  00680E  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20216                           
 20217                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20218  006810  0E01               	movlw	1
 20219  006812  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20220                           
 20221                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20222  006814  0E05               	movlw	5
 20223  006816  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20224                           
 20225                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20226  006818  0E00               	movlw	0
 20227  00681A  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20228                           
 20229                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20230  00681C  0E00               	movlw	0
 20231  00681E                     L82:
 20232  00681E  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20233  006820                     l21256:
 20234                           
 20235                           ; BSR set to: 0
 20236                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20237  006820  0E01               	movlw	1
 20238  006822  ECEF  F04A         	call	_SaveNVM_VarSystem
 20239                           
 20240                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20241  006826  0E00               	movlw	0
 20242  006828  ECEF  F04A         	call	_SaveNVM_VarSystem
 20243                           
 20244                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20245  00682C  0E00               	movlw	0
 20246  00682E  0100               	movlb	0	; () banked
 20247  006830  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20248  006832  0E00               	movlw	0
 20249  006834  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20250  006836  0E00               	movlw	0
 20251  006838  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20252  00683A  0E00               	movlw	0
 20253  00683C  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20254                           
 20255                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20256  00683E  0E00               	movlw	0
 20257  006840  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20258  006842  0E00               	movlw	0
 20259  006844  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20260  006846  0E00               	movlw	0
 20261  006848  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20262  00684A  0E00               	movlw	0
 20263  00684C  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20264                           
 20265                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20266  00684E  0E00               	movlw	0
 20267  006850  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20268  006852  0E00               	movlw	0
 20269  006854  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20270                           
 20271                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20272  006856  0E00               	movlw	0
 20273  006858  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20274  00685A  0E00               	movlw	0
 20275  00685C  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20276                           
 20277                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20278  00685E  0E00               	movlw	0
 20279  006860  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20280  006862  0E00               	movlw	0
 20281  006864  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20282  006866  0E00               	movlw	0
 20283  006868  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20284  00686A  0E00               	movlw	0
 20285  00686C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20286                           
 20287                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20288  00686E  0E00               	movlw	0
 20289  006870  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20290  006872  0E00               	movlw	0
 20291  006874  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20292  006876  0E00               	movlw	0
 20293  006878  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20294  00687A  0E00               	movlw	0
 20295  00687C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20296                           
 20297                           ; BSR set to: 0
 20298                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20299  00687E  A48D               	btfss	141,2,c	;volatile
 20300                           
 20301                           ; BSR set to: 0
 20302  006880  B28D               	btfsc	141,1,c	;volatile
 20303  006882  D015               	goto	l21270
 20304                           
 20305                           ; BSR set to: 0
 20306  006884  A08E               	btfss	142,0,c	;volatile
 20307                           
 20308                           ; BSR set to: 0
 20309  006886  BA8D               	btfsc	141,5,c	;volatile
 20310  006888  D012               	goto	l21270
 20311                           
 20312                           ; BSR set to: 0
 20313                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20314  00688A  0E00               	movlw	0
 20315  00688C  0101               	movlb	1	; () banked
 20316  00688E  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20317  006890  0E00               	movlw	0
 20318  006892  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20319  006894  0E00               	movlw	0
 20320  006896  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20321  006898  0E00               	movlw	0
 20322  00689A  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20323                           
 20324                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20325  00689C  0E00               	movlw	0
 20326  00689E  0100               	movlb	0	; () banked
 20327  0068A0  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20328  0068A2  0E00               	movlw	0
 20329  0068A4  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20330  0068A6  0E00               	movlw	0
 20331  0068A8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20332  0068AA  0E00               	movlw	0
 20333  0068AC  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20334  0068AE                     l21270:
 20335                           
 20336                           ; BSR set to: 0
 20337                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20338  0068AE  0E02               	movlw	2
 20339  0068B0  ECEF  F04A         	call	_SaveNVM_VarSystem
 20340                           
 20341                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20342  0068B4  0E03               	movlw	3
 20343  0068B6  ECEF  F04A         	call	_SaveNVM_VarSystem
 20344  0068BA  0012               	return		;funcret
 20345  0068BC                     __end_of_ResetDefaultMemory:
 20346                           	callstack 0
 20347                           
 20348 ;; *************** function _I2C1_Read1ByteRegister *****************
 20349 ;; Defined at:
 20350 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20351 ;; Parameters:    Size  Location     Type
 20352 ;;  address         1    wreg     unsigned char 
 20353 ;;  reg             1   33[COMRAM] unsigned char 
 20354 ;; Auto vars:     Size  Location     Type
 20355 ;;  address         1   34[COMRAM] unsigned char 
 20356 ;;  returnValue     1   35[COMRAM] unsigned char 
 20357 ;; Return value:  Size  Location     Type
 20358 ;;                  1    wreg      unsigned char 
 20359 ;; Registers used:
 20360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20361 ;; Tracked objects:
 20362 ;;		On entry : 31/0
 20363 ;;		On exit  : 33/2
 20364 ;;		Unchanged: 0/0
 20365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20370 ;;Total ram usage:        3 bytes
 20371 ;; Hardware stack levels used: 1
 20372 ;; Hardware stack levels required when called: 12
 20373 ;; This function calls:
 20374 ;;		_I2C1_Close
 20375 ;;		_I2C1_MasterWrite
 20376 ;;		_I2C1_Open
 20377 ;;		_I2C1_SetAddressNackCallback
 20378 ;;		_I2C1_SetBuffer
 20379 ;;		_I2C1_SetDataCompleteCallback
 20380 ;; This function is called by:
 20381 ;;		_loadNVM_VarSystem
 20382 ;; This function uses a non-reentrant model
 20383 ;;
 20384                           
 20385                           	psect	text72
 20386  008E7A                     __ptext72:
 20387                           	callstack 0
 20388  008E7A                     _I2C1_Read1ByteRegister:
 20389                           	callstack 17
 20390                           
 20391                           ;incstack = 0
 20392                           ;I2C1_Read1ByteRegister@address stored from wreg
 20393  008E7A  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20394                           
 20395                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20396  008E7C  0E00               	movlw	0
 20397  008E7E  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20398  008E80                     l22556:
 20399  008E80  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20400  008E82  EC64  F042         	call	_I2C1_Open
 20401  008E86  0900               	iorlw	0
 20402  008E88  B4D8               	btfsc	status,2,c
 20403  008E8A  D7FA               	goto	l22556
 20404                           
 20405                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20406  008E8C  0E46               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20407  008E8E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20408  008E90  0E98               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20409  008E92  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20410  008E94  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20411  008E96  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20412  008E98  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20413  008E9A  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20414                           
 20415                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20416  008E9E  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20417  008EA0  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20418  008EA2  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20419  008EA4  0E00               	movlw	0
 20420  008EA6  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20421  008EA8  0E01               	movlw	1
 20422  008EAA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20423  008EAC  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 20424                           
 20425                           ; BSR set to: 2
 20426                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20427  008EB0  0E00               	movlw	0
 20428  008EB2  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20429  008EB4  0E00               	movlw	0
 20430  008EB6  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20431  008EB8  0E00               	movlw	0
 20432  008EBA  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20433  008EBC  0E00               	movlw	0
 20434  008EBE  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20435  008EC0  EC2B  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 20436                           
 20437                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20438  008EC4  EC04  F04F         	call	_I2C1_MasterWrite	;wreg free
 20439  008EC8                     l22566:
 20440  008EC8  EC78  F04D         	call	_I2C1_Close	;wreg free
 20441  008ECC  06E8               	decf	wreg,f,c
 20442  008ECE  B4D8               	btfsc	status,2,c
 20443  008ED0  D7FB               	goto	l22566
 20444                           
 20445                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20446  008ED2  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20447  008ED4  0012               	return		;funcret
 20448  008ED6                     __end_of_I2C1_Read1ByteRegister:
 20449                           	callstack 0
 20450                           
 20451 ;; *************** function _getKeyPressed *****************
 20452 ;; Defined at:
 20453 ;;		line 217 in file "inputs_MC50.c"
 20454 ;; Parameters:    Size  Location     Type
 20455 ;;		None
 20456 ;; Auto vars:     Size  Location     Type
 20457 ;;  temp            1   15[COMRAM] char 
 20458 ;; Return value:  Size  Location     Type
 20459 ;;                  1    wreg      char 
 20460 ;; Registers used:
 20461 ;;		wreg, status,2, status,0
 20462 ;; Tracked objects:
 20463 ;;		On entry : 3E/1
 20464 ;;		On exit  : 3D/0
 20465 ;;		Unchanged: 0/0
 20466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20471 ;;Total ram usage:        1 bytes
 20472 ;; Hardware stack levels used: 1
 20473 ;; Hardware stack levels required when called: 4
 20474 ;; This function calls:
 20475 ;;		Nothing
 20476 ;; This function is called by:
 20477 ;;		_main
 20478 ;; This function uses a non-reentrant model
 20479 ;;
 20480                           
 20481                           	psect	text73
 20482  009C3E                     __ptext73:
 20483                           	callstack 0
 20484  009C3E                     _getKeyPressed:
 20485                           	callstack 26
 20486                           
 20487                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20488                           
 20489                           ;incstack = 0
 20490  009C3E  6810               	setf	getKeyPressed@temp^0,c
 20491                           
 20492                           ;inputs_MC50.c: 219:     if(RFFull)
 20493  009C40  0100               	movlb	0	; () banked
 20494  009C42  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20495  009C44  B4D8               	btfsc	status,2,c
 20496  009C46  D005               	goto	l24634
 20497                           
 20498                           ; BSR set to: 0
 20499                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20500  009C48  0102               	movlb	2	; () banked
 20501  009C4A  39CD               	swapf	(_BufferRF+7)& (0+255),w,b
 20502  009C4C  0B0F               	andlw	15
 20503  009C4E  0B0F               	andlw	15
 20504  009C50  6E10               	movwf	getKeyPressed@temp^0,c
 20505  009C52                     l24634:
 20506                           
 20507                           ;inputs_MC50.c: 223:     return temp;
 20508  009C52  5010               	movf	getKeyPressed@temp^0,w,c
 20509  009C54  0012               	return		;funcret
 20510  009C56                     __end_of_getKeyPressed:
 20511                           	callstack 0
 20512                           
 20513 ;; *************** function _eusartparser *****************
 20514 ;; Defined at:
 20515 ;;		line 363 in file "eusartparser.c"
 20516 ;; Parameters:    Size  Location     Type
 20517 ;;  package         2    8[BANK0 ] PTR struct package_t
 20518 ;;		 -> main@package(7), 
 20519 ;; Auto vars:     Size  Location     Type
 20520 ;;  i               1   28[BANK0 ] unsigned char 
 20521 ;;  i               1   25[BANK0 ] unsigned char 
 20522 ;;  i               1   29[BANK0 ] unsigned char 
 20523 ;;  i               1   26[BANK0 ] unsigned char 
 20524 ;;  i               1   30[BANK0 ] unsigned char 
 20525 ;;  i               1   24[BANK0 ] unsigned char 
 20526 ;;  i               1   23[BANK0 ] unsigned char 
 20527 ;;  i               1   19[BANK0 ] unsigned char 
 20528 ;;  i               1   18[BANK0 ] unsigned char 
 20529 ;;  i               1   27[BANK0 ] unsigned char 
 20530 ;;  i               1   22[BANK0 ] unsigned char 
 20531 ;;  i               1   21[BANK0 ] unsigned char 
 20532 ;;  i               1   17[BANK0 ] unsigned char 
 20533 ;;  i               1   16[BANK0 ] unsigned char 
 20534 ;;  a               7    0        struct package_t
 20535 ;;  serial          4   32[BANK0 ] unsigned long 
 20536 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20537 ;;  pos             1   20[BANK0 ] unsigned char 
 20538 ;; Return value:  Size  Location     Type
 20539 ;;                  1    wreg      void 
 20540 ;; Registers used:
 20541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20542 ;; Tracked objects:
 20543 ;;		On entry : 3F/0
 20544 ;;		On exit  : 0/0
 20545 ;;		Unchanged: 0/0
 20546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20547 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20548 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20549 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;Total ram usage:       28 bytes
 20552 ;; Hardware stack levels used: 1
 20553 ;; Hardware stack levels required when called: 14
 20554 ;; This function calls:
 20555 ;;		_ReadSerial
 20556 ;;		_RemoveSerial
 20557 ;;		_SaveNVM_VarSystem
 20558 ;;		_cmdMemoryIsEmpty
 20559 ;;		_confirmpackage
 20560 ;;		_read_eusartparser
 20561 ;;		_saveNewSerial
 20562 ;;		_validateRemoteSerialNumber
 20563 ;;		_write_eusartparser
 20564 ;;		_write_package
 20565 ;; This function is called by:
 20566 ;;		_main
 20567 ;; This function uses a non-reentrant model
 20568 ;;
 20569                           
 20570                           	psect	text74
 20571  001886                     __ptext74:
 20572                           	callstack 0
 20573  001886                     _eusartparser:
 20574                           	callstack 16
 20575                           
 20576                           ; BSR set to: 0
 20577                           ;eusartparser.c: 364:         struct package_t a;;eusartparser.c: 365:         uint8_t r
      +                          elcounter;;eusartparser.c: 366:         static _Bool save_f=0;;eusartparser.c: 367:     
      +                              static uint16_t buffer=0x0000;;eusartparser.c: 368:         uint32_t serial;;eusartp
      +                          arser.c: 369:         char pos;;eusartparser.c: 371:         switch(package->functioncod
      +                          e){
 20578                           
 20579                           ;incstack = 0
 20580  001886  EF9B  F010         	goto	l27848
 20581  00188A                     l27408:
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;eusartparser.c: 373:                 read_eusartparser(package);
 20585  00188A  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20586  00188E  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 20587  001892  EC6C  F014         	call	_read_eusartparser	;wreg free
 20588  001896                     l27410:
 20589                           
 20590                           ;eusartparser.c: 374:                 confirmpackage(package, 1);
 20591  001896  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20592  00189A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20593  00189E  0E01               	movlw	1
 20594  0018A0  6E14               	movwf	confirmpackage@confirm^0,c
 20595  0018A2  EC6B  F047         	call	_confirmpackage	;wreg free
 20596  0018A6                     l27412:
 20597                           
 20598                           ;eusartparser.c: 375:                 write_package(*package);
 20599  0018A6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20600  0018AA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20601  0018AE  EE00  F011         	lfsr	0,write_package@package
 20602  0018B2  0E06               	movlw	6
 20603  0018B4                     u33401:
 20604  0018B4  CFDB FFEB          	movff	plusw2,plusw0
 20605  0018B8  06E8               	decf	wreg,f,c
 20606  0018BA  E2FC               	bc	u33401
 20607  0018BC  ECB5  F04B         	call	_write_package	;wreg free
 20608                           
 20609                           ;eusartparser.c: 376:                 break;
 20610  0018C0  0012               	return	
 20611  0018C2                     l27414:
 20612                           
 20613                           ; BSR set to: 0
 20614                           ;eusartparser.c: 379:                 if(programmer_enable){
 20615  0018C2  5185               	movf	_programmer_enable& (0+255),w,b
 20616  0018C4  B4D8               	btfsc	status,2,c
 20617  0018C6  D00E               	goto	l27422
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;eusartparser.c: 380:                     write_eusartparser(*package);
 20621  0018C8  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20622  0018CC  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20623  0018D0  EE00  F010         	lfsr	0,write_eusartparser@package
 20624  0018D4  0E06               	movlw	6
 20625  0018D6                     u33421:
 20626  0018D6  CFDB FFEB          	movff	plusw2,plusw0
 20627  0018DA  06E8               	decf	wreg,f,c
 20628  0018DC  E2FC               	bc	u33421
 20629  0018DE  EC50  F017         	call	_write_eusartparser	;wreg free
 20630  0018E2  D7D9               	goto	l27410
 20631  0018E4                     l27422:
 20632                           
 20633                           ; BSR set to: 0
 20634                           ;eusartparser.c: 385:                     confirmpackage(package, 0);
 20635  0018E4  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20636  0018E8  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20637  0018EC  0E00               	movlw	0
 20638  0018EE  6E14               	movwf	confirmpackage@confirm^0,c
 20639  0018F0  EC6B  F047         	call	_confirmpackage	;wreg free
 20640  0018F4  D7D8               	goto	l27412
 20641  0018F6                     l27426:
 20642                           
 20643                           ; BSR set to: 0
 20644                           ;eusartparser.c: 391:                 if(programmer_enable){
 20645  0018F6  5185               	movf	_programmer_enable& (0+255),w,b
 20646  0018F8  B4D8               	btfsc	status,2,c
 20647  0018FA  D008               	goto	l27432
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;eusartparser.c: 392:                     SaveNVM_VarSystem(pageMemoryE);
 20651  0018FC  0E01               	movlw	1
 20652  0018FE  ECEF  F04A         	call	_SaveNVM_VarSystem
 20653                           
 20654                           ;eusartparser.c: 393:                     SaveNVM_VarSystem(pageMemoryP);
 20655  001902  0E00               	movlw	0
 20656  001904  ECEF  F04A         	call	_SaveNVM_VarSystem
 20657                           
 20658                           ;eusartparser.c: 394:                     programmer_enable=0;
 20659  001908  0E00               	movlw	0
 20660  00190A  D005               	goto	L83
 20661  00190C                     l27432:
 20662                           
 20663                           ; BSR set to: 0
 20664                           ;eusartparser.c: 397:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 20665  00190C  0101               	movlb	1	; () banked
 20666  00190E  51F2               	movf	_main_stateMachine& (0+255),w,b
 20667  001910  A4D8               	btfss	status,2,c
 20668  001912  D004               	goto	l27436
 20669                           
 20670                           ; BSR set to: 1
 20671                           ;eusartparser.c: 398:                         programmer_enable=1;
 20672  001914  0E01               	movlw	1
 20673  001916                     L83:
 20674  001916  0100               	movlb	0	; () banked
 20675  001918  6F85               	movwf	_programmer_enable& (0+255),b
 20676  00191A  D019               	goto	l27444
 20677  00191C                     l27436:
 20678                           
 20679                           ; BSR set to: 1
 20680                           ;eusartparser.c: 400:                         package->data.data16=(uint16_t)2;
 20681  00191C  0100               	movlb	0	; () banked
 20682  00191E  EE20 F002          	lfsr	2,2
 20683  001922  51E0               	movf	eusartparser@package& (0+255),w,b
 20684  001924  26D9               	addwf	fsr2l,f,c
 20685  001926  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20686  001928  22DA               	addwfc	fsr2h,f,c
 20687  00192A  0E02               	movlw	2
 20688  00192C  6EDE               	movwf	postinc2,c
 20689  00192E  0E00               	movlw	0
 20690  001930  6EDD               	movwf	postdec2,c
 20691  001932                     l27438:
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;eusartparser.c: 401:                         write_package(*package);
 20695  001932  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20696  001936  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20697  00193A  EE00  F011         	lfsr	0,write_package@package
 20698  00193E  0E06               	movlw	6
 20699  001940                     u33451:
 20700  001940  CFDB FFEB          	movff	plusw2,plusw0
 20701  001944  06E8               	decf	wreg,f,c
 20702  001946  E2FC               	bc	u33451
 20703  001948  ECB5  F04B         	call	_write_package	;wreg free
 20704  00194C  D7A4               	goto	l27410
 20705  00194E                     l27444:
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;eusartparser.c: 408:                 package->data.data16=(uint16_t)programmer_enable;
 20709  00194E  5185               	movf	_programmer_enable& (0+255),w,b
 20710  001950  6FE2               	movwf	??_eusartparser& (0+255),b
 20711  001952  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20712  001954  EE20 F002          	lfsr	2,2
 20713  001958  51E0               	movf	eusartparser@package& (0+255),w,b
 20714  00195A  26D9               	addwf	fsr2l,f,c
 20715  00195C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20716  00195E  22DA               	addwfc	fsr2h,f,c
 20717  001960  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20718  001964  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20719  001968  D7E4               	goto	l27438
 20720  00196A                     l27456:
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;eusartparser.c: 418:                     package->address=0x00;
 20724  00196A  EE20 F001          	lfsr	2,1
 20725  00196E  51E0               	movf	eusartparser@package& (0+255),w,b
 20726  001970  26D9               	addwf	fsr2l,f,c
 20727  001972  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20728  001974  22DA               	addwfc	fsr2h,f,c
 20729  001976  0E00               	movlw	0
 20730  001978  6EDF               	movwf	indf2,c
 20731                           
 20732                           ;eusartparser.c: 419:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esFull;
 20733  00197A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20734  00197C  6FE2               	movwf	??_eusartparser& (0+255),b
 20735  00197E  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20736  001980  EE20 F002          	lfsr	2,2
 20737  001984  51E0               	movf	eusartparser@package& (0+255),w,b
 20738  001986  26D9               	addwf	fsr2l,f,c
 20739  001988  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20740  00198A  22DA               	addwfc	fsr2h,f,c
 20741  00198C  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20742  001990  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20743                           
 20744                           ; BSR set to: 0
 20745                           ;eusartparser.c: 420:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesF
      +                          ull;i++)
 20746  001994  0E00               	movlw	0
 20747  001996  6FE8               	movwf	eusartparser@i& (0+255),b
 20748  001998  D014               	goto	l27466
 20749  00199A                     l27460:
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;eusartparser.c: 421:                     if(cmdMemoryIsEmpty(0,i)==1)
 20753  00199A  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20754  00199E  0E00               	movlw	0
 20755  0019A0  EC38  F040         	call	_cmdMemoryIsEmpty
 20756  0019A4  06E8               	decf	wreg,f,c
 20757  0019A6  A4D8               	btfss	status,2,c
 20758  0019A8  D00A               	goto	l27464
 20759                           
 20760                           ;eusartparser.c: 422:                         package->data.data16--;
 20761  0019AA  0100               	movlb	0	; () banked
 20762  0019AC  EE20 F002          	lfsr	2,2
 20763  0019B0  51E0               	movf	eusartparser@package& (0+255),w,b
 20764  0019B2  26D9               	addwf	fsr2l,f,c
 20765  0019B4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20766  0019B6  22DA               	addwfc	fsr2h,f,c
 20767  0019B8  06DE               	decf	postinc2,f,c
 20768  0019BA  0E00               	movlw	0
 20769  0019BC  5ADD               	subwfb	postdec2,f,c
 20770  0019BE                     l27464:
 20771  0019BE  0100               	movlb	0	; () banked
 20772  0019C0  2BE8               	incf	eusartparser@i& (0+255),f,b
 20773  0019C2                     l27466:
 20774                           
 20775                           ; BSR set to: 0
 20776  0019C2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20777  0019C4  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20778  0019C6  B0D8               	btfsc	status,0,c
 20779  0019C8  D7B4               	goto	l27438
 20780  0019CA  D7E7               	goto	l27460
 20781  0019CC                     l27474:
 20782                           
 20783                           ; BSR set to: 0
 20784                           ;eusartparser.c: 429:                 package->address=0x00;
 20785  0019CC  EE20 F001          	lfsr	2,1
 20786  0019D0  51E0               	movf	eusartparser@package& (0+255),w,b
 20787  0019D2  26D9               	addwf	fsr2l,f,c
 20788  0019D4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20789  0019D6  22DA               	addwfc	fsr2h,f,c
 20790  0019D8  0E00               	movlw	0
 20791  0019DA  6EDF               	movwf	indf2,c
 20792                           
 20793                           ;eusartparser.c: 430:                 package->data.data16=0;
 20794  0019DC  EE20 F002          	lfsr	2,2
 20795  0019E0  51E0               	movf	eusartparser@package& (0+255),w,b
 20796  0019E2  26D9               	addwf	fsr2l,f,c
 20797  0019E4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20798  0019E6  22DA               	addwfc	fsr2h,f,c
 20799  0019E8  0E00               	movlw	0
 20800  0019EA  6EDE               	movwf	postinc2,c
 20801  0019EC  0E00               	movlw	0
 20802  0019EE  6EDD               	movwf	postdec2,c
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;eusartparser.c: 431:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20806  0019F0  0E00               	movlw	0
 20807  0019F2  6FE9               	movwf	eusartparser@i_7305& (0+255),b
 20808  0019F4  D014               	goto	l27484
 20809  0019F6                     l27478:
 20810                           
 20811                           ; BSR set to: 0
 20812                           ;eusartparser.c: 432:                 if(cmdMemoryIsEmpty(0,i)==1)
 20813  0019F6  C0E9  F02E         	movff	eusartparser@i_7305,cmdMemoryIsEmpty@position
 20814  0019FA  0E00               	movlw	0
 20815  0019FC  EC38  F040         	call	_cmdMemoryIsEmpty
 20816  001A00  06E8               	decf	wreg,f,c
 20817  001A02  A4D8               	btfss	status,2,c
 20818  001A04  D00A               	goto	l27482
 20819                           
 20820                           ;eusartparser.c: 433:                     package->data.data16++;
 20821  001A06  0100               	movlb	0	; () banked
 20822  001A08  EE20 F002          	lfsr	2,2
 20823  001A0C  51E0               	movf	eusartparser@package& (0+255),w,b
 20824  001A0E  26D9               	addwf	fsr2l,f,c
 20825  001A10  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20826  001A12  22DA               	addwfc	fsr2h,f,c
 20827  001A14  2ADE               	incf	postinc2,f,c
 20828  001A16  0E00               	movlw	0
 20829  001A18  22DD               	addwfc	postdec2,f,c
 20830  001A1A                     l27482:
 20831  001A1A  0100               	movlb	0	; () banked
 20832  001A1C  2BE9               	incf	eusartparser@i_7305& (0+255),f,b
 20833  001A1E                     l27484:
 20834                           
 20835                           ; BSR set to: 0
 20836  001A1E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20837  001A20  5DE9               	subwf	eusartparser@i_7305& (0+255),w,b
 20838  001A22  B0D8               	btfsc	status,0,c
 20839  001A24  D786               	goto	l27438
 20840  001A26  D7E7               	goto	l27478
 20841  001A28                     l27492:
 20842                           
 20843                           ; BSR set to: 0
 20844                           ;eusartparser.c: 439:                 relcounter=0;
 20845  001A28  0E00               	movlw	0
 20846  001A2A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20847                           
 20848                           ;eusartparser.c: 440:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20849  001A2C  0E00               	movlw	0
 20850  001A2E  6FED               	movwf	eusartparser@i_7306& (0+255),b
 20851  001A30  D02E               	goto	l27504
 20852  001A32                     l27494:
 20853                           
 20854                           ; BSR set to: 0
 20855                           ;eusartparser.c: 441:                     if(cmdMemoryIsEmpty(0,i)==0){
 20856  001A32  C0ED  F02E         	movff	eusartparser@i_7306,cmdMemoryIsEmpty@position
 20857  001A36  0E00               	movlw	0
 20858  001A38  EC38  F040         	call	_cmdMemoryIsEmpty
 20859  001A3C  0900               	iorlw	0
 20860  001A3E  A4D8               	btfss	status,2,c
 20861  001A40  D024               	goto	l27502
 20862                           
 20863                           ;eusartparser.c: 442:                         package->data.data16=(uint16_t)i;
 20864  001A42  0100               	movlb	0	; () banked
 20865  001A44  51ED               	movf	eusartparser@i_7306& (0+255),w,b
 20866  001A46  6FE2               	movwf	??_eusartparser& (0+255),b
 20867  001A48  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20868  001A4A  EE20 F002          	lfsr	2,2
 20869  001A4E  51E0               	movf	eusartparser@package& (0+255),w,b
 20870  001A50  26D9               	addwf	fsr2l,f,c
 20871  001A52  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20872  001A54  22DA               	addwfc	fsr2h,f,c
 20873  001A56  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20874  001A5A  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20875                           
 20876                           ;eusartparser.c: 443:                         package->address=relcounter;
 20877  001A5E  EE20 F001          	lfsr	2,1
 20878  001A62  51E0               	movf	eusartparser@package& (0+255),w,b
 20879  001A64  26D9               	addwf	fsr2l,f,c
 20880  001A66  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20881  001A68  22DA               	addwfc	fsr2h,f,c
 20882  001A6A  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20883                           
 20884                           ; BSR set to: 0
 20885                           ;eusartparser.c: 444:                         relcounter++;
 20886  001A6E  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20887                           
 20888                           ; BSR set to: 0
 20889                           ;eusartparser.c: 445:                         write_package(*package);
 20890  001A70  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20891  001A74  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20892  001A78  EE00  F011         	lfsr	0,write_package@package
 20893  001A7C  0E06               	movlw	6
 20894  001A7E                     u33511:
 20895  001A7E  CFDB FFEB          	movff	plusw2,plusw0
 20896  001A82  06E8               	decf	wreg,f,c
 20897  001A84  E2FC               	bc	u33511
 20898  001A86  ECB5  F04B         	call	_write_package	;wreg free
 20899  001A8A                     l27502:
 20900  001A8A  0100               	movlb	0	; () banked
 20901  001A8C  2BED               	incf	eusartparser@i_7306& (0+255),f,b
 20902  001A8E                     l27504:
 20903                           
 20904                           ; BSR set to: 0
 20905  001A8E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20906  001A90  5DED               	subwf	eusartparser@i_7306& (0+255),w,b
 20907  001A92  B0D8               	btfsc	status,0,c
 20908  001A94  D700               	goto	l27410
 20909  001A96  D7CD               	goto	l27494
 20910  001A98                     l27510:
 20911                           
 20912                           ; BSR set to: 0
 20913                           ;eusartparser.c: 451:                 relcounter=0;
 20914  001A98  0E00               	movlw	0
 20915  001A9A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20916                           
 20917                           ;eusartparser.c: 452:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20918  001A9C  0E00               	movlw	0
 20919  001A9E  6FEE               	movwf	eusartparser@i_7307& (0+255),b
 20920  001AA0  D02E               	goto	l27522
 20921  001AA2                     l27512:
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;eusartparser.c: 453:                     if(cmdMemoryIsEmpty(0,i)==1){
 20925  001AA2  C0EE  F02E         	movff	eusartparser@i_7307,cmdMemoryIsEmpty@position
 20926  001AA6  0E00               	movlw	0
 20927  001AA8  EC38  F040         	call	_cmdMemoryIsEmpty
 20928  001AAC  06E8               	decf	wreg,f,c
 20929  001AAE  A4D8               	btfss	status,2,c
 20930  001AB0  D024               	goto	l27520
 20931                           
 20932                           ;eusartparser.c: 454:                         package->data.data16=(uint16_t)i;
 20933  001AB2  0100               	movlb	0	; () banked
 20934  001AB4  51EE               	movf	eusartparser@i_7307& (0+255),w,b
 20935  001AB6  6FE2               	movwf	??_eusartparser& (0+255),b
 20936  001AB8  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20937  001ABA  EE20 F002          	lfsr	2,2
 20938  001ABE  51E0               	movf	eusartparser@package& (0+255),w,b
 20939  001AC0  26D9               	addwf	fsr2l,f,c
 20940  001AC2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20941  001AC4  22DA               	addwfc	fsr2h,f,c
 20942  001AC6  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20943  001ACA  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20944                           
 20945                           ;eusartparser.c: 455:                         package->address=relcounter;
 20946  001ACE  EE20 F001          	lfsr	2,1
 20947  001AD2  51E0               	movf	eusartparser@package& (0+255),w,b
 20948  001AD4  26D9               	addwf	fsr2l,f,c
 20949  001AD6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20950  001AD8  22DA               	addwfc	fsr2h,f,c
 20951  001ADA  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20952                           
 20953                           ; BSR set to: 0
 20954                           ;eusartparser.c: 456:                         relcounter++;
 20955  001ADE  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20956                           
 20957                           ; BSR set to: 0
 20958                           ;eusartparser.c: 457:                         write_package(*package);
 20959  001AE0  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20960  001AE4  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20961  001AE8  EE00  F011         	lfsr	0,write_package@package
 20962  001AEC  0E06               	movlw	6
 20963  001AEE                     u33541:
 20964  001AEE  CFDB FFEB          	movff	plusw2,plusw0
 20965  001AF2  06E8               	decf	wreg,f,c
 20966  001AF4  E2FC               	bc	u33541
 20967  001AF6  ECB5  F04B         	call	_write_package	;wreg free
 20968  001AFA                     l27520:
 20969  001AFA  0100               	movlb	0	; () banked
 20970  001AFC  2BEE               	incf	eusartparser@i_7307& (0+255),f,b
 20971  001AFE                     l27522:
 20972                           
 20973                           ; BSR set to: 0
 20974  001AFE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20975  001B00  5DEE               	subwf	eusartparser@i_7307& (0+255),w,b
 20976  001B02  B0D8               	btfsc	status,0,c
 20977  001B04  D6C8               	goto	l27410
 20978  001B06  D7CD               	goto	l27512
 20979  001B08                     l27528:
 20980                           
 20981                           ; BSR set to: 0
 20982                           ;eusartparser.c: 463:                 if(programmer_enable){
 20983  001B08  5185               	movf	_programmer_enable& (0+255),w,b
 20984  001B0A  B4D8               	btfsc	status,2,c
 20985  001B0C  D6EB               	goto	l27422
 20986                           
 20987                           ; BSR set to: 0
 20988                           ;eusartparser.c: 464:                     if(save_f==0){
 20989  001B0E  0101               	movlb	1	; () banked
 20990  001B10  518F               	movf	eusartparser@save_f& (0+255),w,b
 20991  001B12  A4D8               	btfss	status,2,c
 20992  001B14  D024               	goto	l27540
 20993  001B16                     u33570:
 20994                           
 20995                           ; BSR set to: 1
 20996                           ;eusartparser.c: 465:                         buffer=package->data.data16;
 20997  001B16  0100               	movlb	0	; () banked
 20998  001B18  EE20 F002          	lfsr	2,2
 20999  001B1C  51E0               	movf	eusartparser@package& (0+255),w,b
 21000  001B1E  26D9               	addwf	fsr2l,f,c
 21001  001B20  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21002  001B22  22DA               	addwfc	fsr2h,f,c
 21003  001B24  CFDE F185          	movff	postinc2,eusartparser@buffer
 21004  001B28  CFDD F186          	movff	postdec2,eusartparser@buffer+1
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;eusartparser.c: 466:                         confirmpackage(package, 1);
 21008  001B2C  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21009  001B30  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21010  001B34  0E01               	movlw	1
 21011  001B36  6E14               	movwf	confirmpackage@confirm^0,c
 21012  001B38  EC6B  F047         	call	_confirmpackage	;wreg free
 21013                           
 21014                           ;eusartparser.c: 467:                         write_package(*package);
 21015  001B3C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21016  001B40  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21017  001B44  EE00  F011         	lfsr	0,write_package@package
 21018  001B48  0E06               	movlw	6
 21019  001B4A                     u33581:
 21020  001B4A  CFDB FFEB          	movff	plusw2,plusw0
 21021  001B4E  06E8               	decf	wreg,f,c
 21022  001B50  E2FC               	bc	u33581
 21023  001B52  ECB5  F04B         	call	_write_package	;wreg free
 21024                           
 21025                           ;eusartparser.c: 468:                         save_f=1;
 21026  001B56  0E01               	movlw	1
 21027  001B58  0101               	movlb	1	; () banked
 21028  001B5A  6F8F               	movwf	eusartparser@save_f& (0+255),b
 21029                           
 21030                           ;eusartparser.c: 469:                     }
 21031  001B5C  0012               	return	
 21032  001B5E                     l27540:
 21033                           
 21034                           ; BSR set to: 1
 21035                           ;eusartparser.c: 471:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 21036  001B5E  0100               	movlb	0	; () banked
 21037  001B60  EE20 F002          	lfsr	2,2
 21038  001B64  51E0               	movf	eusartparser@package& (0+255),w,b
 21039  001B66  26D9               	addwf	fsr2l,f,c
 21040  001B68  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21041  001B6A  22DA               	addwfc	fsr2h,f,c
 21042  001B6C  CFDE F0E2          	movff	postinc2,??_eusartparser
 21043  001B70  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21044  001B74  0101               	movlb	1	; () banked
 21045  001B76  5185               	movf	eusartparser@buffer& (0+255),w,b
 21046  001B78  0100               	movlb	0	; () banked
 21047  001B7A  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21048  001B7C  0101               	movlb	1	; () banked
 21049  001B7E  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21050  001B80  0100               	movlb	0	; () banked
 21051  001B82  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21052  001B84  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21053  001B86  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21054  001B88  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21055  001B8C  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21056  001B90  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21057  001B92  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21058  001B94  51E2               	movf	??_eusartparser& (0+255),w,b
 21059  001B96  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21060  001B98  6FF8               	movwf	eusartparser@serial& (0+255),b
 21061  001B9A  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21062  001B9C  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21063  001B9E  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21064  001BA0  0E00               	movlw	0
 21065  001BA2  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21066  001BA4  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21067  001BA6  0E00               	movlw	0
 21068  001BA8  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21069  001BAA  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21070                           
 21071                           ; BSR set to: 0
 21072                           ;eusartparser.c: 472:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21073  001BAC  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21074  001BB0  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21075  001BB4  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21076  001BB8  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21077  001BBC  0E00               	movlw	0
 21078  001BBE  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21079  001BC0  0EEC               	movlw	low eusartparser@pos
 21080  001BC2  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21081  001BC4  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21082  001BC6  EC66  F030         	call	_validateRemoteSerialNumber	;wreg free
 21083  001BCA  0900               	iorlw	0
 21084  001BCC  A4D8               	btfss	status,2,c
 21085  001BCE  D04D               	goto	u33640
 21086                           
 21087                           ; BSR set to: 0
 21088                           ;eusartparser.c: 473:                             for(uint8_t i=0;;i++)
 21089  001BD0  0E00               	movlw	0
 21090  001BD2  6FF1               	movwf	eusartparser@i_7308& (0+255),b
 21091  001BD4                     l27546:
 21092                           
 21093                           ; BSR set to: 0
 21094                           ;eusartparser.c: 474:                                 if(cmdMemoryIsEmpty(0,i)==1&&packa
      +                          ge->address==0){
 21095  001BD4  C0F1  F02E         	movff	eusartparser@i_7308,cmdMemoryIsEmpty@position
 21096  001BD8  0E00               	movlw	0
 21097  001BDA  EC38  F040         	call	_cmdMemoryIsEmpty
 21098  001BDE  06E8               	decf	wreg,f,c
 21099  001BE0  A4D8               	btfss	status,2,c
 21100  001BE2  D02D               	goto	l27558
 21101  001BE4  0100               	movlb	0	; () banked
 21102  001BE6  EE20 F001          	lfsr	2,1
 21103  001BEA  51E0               	movf	eusartparser@package& (0+255),w,b
 21104  001BEC  26D9               	addwf	fsr2l,f,c
 21105  001BEE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21106  001BF0  22DA               	addwfc	fsr2h,f,c
 21107  001BF2  50DF               	movf	indf2,w,c
 21108  001BF4  A4D8               	btfss	status,2,c
 21109  001BF6  D023               	goto	l27558
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;eusartparser.c: 475:                                     saveNewSerial(0,serial,i);
 21113  001BF8  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21114  001BFC  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21115  001C00  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21116  001C04  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21117  001C08  C0F1  F0DC         	movff	eusartparser@i_7308,saveNewSerial@position
 21118  001C0C  0E00               	movlw	0
 21119  001C0E  EC06  F045         	call	_saveNewSerial
 21120  001C12                     l27552:
 21121                           
 21122                           ;eusartparser.c: 476:                                     confirmpackage(package, 1);
 21123  001C12  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21124  001C16  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21125  001C1A  0E01               	movlw	1
 21126  001C1C  6E14               	movwf	confirmpackage@confirm^0,c
 21127  001C1E  EC6B  F047         	call	_confirmpackage	;wreg free
 21128  001C22                     l27554:
 21129                           
 21130                           ;eusartparser.c: 477:                                     write_package(*package);
 21131  001C22  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21132  001C26  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21133  001C2A  EE00  F011         	lfsr	0,write_package@package
 21134  001C2E  0E06               	movlw	6
 21135  001C30                     u33621:
 21136  001C30  CFDB FFEB          	movff	plusw2,plusw0
 21137  001C34  06E8               	decf	wreg,f,c
 21138  001C36  E2FC               	bc	u33621
 21139  001C38  ECB5  F04B         	call	_write_package	;wreg free
 21140                           
 21141                           ;eusartparser.c: 478:                                     break;
 21142  001C3C  D021               	goto	l27574
 21143  001C3E                     l27558:
 21144  001C3E  C0F1  F02E         	movff	eusartparser@i_7308,cmdMemoryIsEmpty@position
 21145  001C42  0E00               	movlw	0
 21146  001C44  EC38  F040         	call	_cmdMemoryIsEmpty
 21147  001C48  06E8               	decf	wreg,f,c
 21148  001C4A  A4D8               	btfss	status,2,c
 21149  001C4C  D009               	goto	l27562
 21150                           
 21151                           ;eusartparser.c: 481:                                     package->address--;
 21152  001C4E  0100               	movlb	0	; () banked
 21153  001C50  EE20 F001          	lfsr	2,1
 21154  001C54  51E0               	movf	eusartparser@package& (0+255),w,b
 21155  001C56  26D9               	addwf	fsr2l,f,c
 21156  001C58  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21157  001C5A  22DA               	addwfc	fsr2h,f,c
 21158  001C5C  06DF               	decf	indf2,f,c
 21159                           
 21160                           ;eusartparser.c: 482:                                 }
 21161  001C5E  D00E               	goto	l27568
 21162  001C60                     l27562:
 21163  001C60  0100               	movlb	0	; () banked
 21164  001C62  51F1               	movf	eusartparser@i_7308& (0+255),w,b
 21165  001C64  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21166  001C66  A4D8               	btfss	status,2,c
 21167  001C68  D009               	goto	l27568
 21168  001C6A                     u33640:
 21169                           
 21170                           ; BSR set to: 0
 21171                           ;eusartparser.c: 484:                                     confirmpackage(package, 0);
 21172  001C6A  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21173  001C6E  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21174  001C72  0E00               	movlw	0
 21175  001C74  6E14               	movwf	confirmpackage@confirm^0,c
 21176  001C76  EC6B  F047         	call	_confirmpackage	;wreg free
 21177  001C7A  D7D3               	goto	l27554
 21178  001C7C                     l27568:
 21179                           
 21180                           ; BSR set to: 0
 21181  001C7C  2BF1               	incf	eusartparser@i_7308& (0+255),f,b
 21182  001C7E  D7AA               	goto	l27546
 21183  001C80                     l27574:
 21184                           
 21185                           ;eusartparser.c: 493:                         save_f=0;
 21186  001C80  0E00               	movlw	0
 21187  001C82  0101               	movlb	1	; () banked
 21188  001C84  6F8F               	movwf	eusartparser@save_f& (0+255),b
 21189  001C86  0012               	return	
 21190  001C88                     l27580:
 21191                           
 21192                           ; BSR set to: 0
 21193                           ;eusartparser.c: 502:                 if(programmer_enable){
 21194  001C88  5185               	movf	_programmer_enable& (0+255),w,b
 21195  001C8A  B4D8               	btfsc	status,2,c
 21196  001C8C  D62B               	goto	l27422
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;eusartparser.c: 503:                     for(uint8_t i=0;;i++)
 21200  001C8E  0E00               	movlw	0
 21201  001C90  6FF2               	movwf	eusartparser@i_7309& (0+255),b
 21202  001C92                     l27584:
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;eusartparser.c: 504:                         if(cmdMemoryIsEmpty(0,i)==0&&package->addr
      +                          ess==0){
 21206  001C92  C0F2  F02E         	movff	eusartparser@i_7309,cmdMemoryIsEmpty@position
 21207  001C96  0E00               	movlw	0
 21208  001C98  EC38  F040         	call	_cmdMemoryIsEmpty
 21209  001C9C  0900               	iorlw	0
 21210  001C9E  A4D8               	btfss	status,2,c
 21211  001CA0  D010               	goto	l27598
 21212  001CA2  0100               	movlb	0	; () banked
 21213  001CA4  EE20 F001          	lfsr	2,1
 21214  001CA8  51E0               	movf	eusartparser@package& (0+255),w,b
 21215  001CAA  26D9               	addwf	fsr2l,f,c
 21216  001CAC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21217  001CAE  22DA               	addwfc	fsr2h,f,c
 21218  001CB0  50DF               	movf	indf2,w,c
 21219  001CB2  A4D8               	btfss	status,2,c
 21220  001CB4  D006               	goto	l27598
 21221                           
 21222                           ; BSR set to: 0
 21223                           ;eusartparser.c: 505:                             RemoveSerial(0, i);
 21224  001CB6  C0F2  F03A         	movff	eusartparser@i_7309,RemoveSerial@position
 21225  001CBA  0E00               	movlw	0
 21226  001CBC  ECE7  F042         	call	_RemoveSerial
 21227  001CC0  D7A8               	goto	l27552
 21228  001CC2                     l27598:
 21229  001CC2  C0F2  F02E         	movff	eusartparser@i_7309,cmdMemoryIsEmpty@position
 21230  001CC6  0E00               	movlw	0
 21231  001CC8  EC38  F040         	call	_cmdMemoryIsEmpty
 21232  001CCC  0900               	iorlw	0
 21233  001CCE  A4D8               	btfss	status,2,c
 21234  001CD0  D009               	goto	l27602
 21235                           
 21236                           ;eusartparser.c: 512:                             package->address--;
 21237  001CD2  0100               	movlb	0	; () banked
 21238  001CD4  EE20 F001          	lfsr	2,1
 21239  001CD8  51E0               	movf	eusartparser@package& (0+255),w,b
 21240  001CDA  26D9               	addwf	fsr2l,f,c
 21241  001CDC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21242  001CDE  22DA               	addwfc	fsr2h,f,c
 21243  001CE0  06DF               	decf	indf2,f,c
 21244                           
 21245                           ;eusartparser.c: 513:                         }
 21246  001CE2  D005               	goto	l27610
 21247  001CE4                     l27602:
 21248  001CE4  0100               	movlb	0	; () banked
 21249  001CE6  51F2               	movf	eusartparser@i_7309& (0+255),w,b
 21250  001CE8  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21251  001CEA  B4D8               	btfsc	status,2,c
 21252  001CEC  D7BE               	goto	u33640
 21253  001CEE                     l27610:
 21254                           
 21255                           ; BSR set to: 0
 21256  001CEE  2BF2               	incf	eusartparser@i_7309& (0+255),f,b
 21257  001CF0  D7D0               	goto	l27584
 21258  001CF2                     l27616:
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;eusartparser.c: 527:                 for(uint8_t i=0;;i++)
 21262  001CF2  0E00               	movlw	0
 21263  001CF4  6FF3               	movwf	eusartparser@i_7310& (0+255),b
 21264  001CF6                     l27618:
 21265                           
 21266                           ; BSR set to: 0
 21267                           ;eusartparser.c: 528:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21268  001CF6  C0F3  F02E         	movff	eusartparser@i_7310,cmdMemoryIsEmpty@position
 21269  001CFA  0E00               	movlw	0
 21270  001CFC  EC38  F040         	call	_cmdMemoryIsEmpty
 21271  001D00  0900               	iorlw	0
 21272  001D02  A4D8               	btfss	status,2,c
 21273  001D04  D02A               	goto	l27638
 21274  001D06  0100               	movlb	0	; () banked
 21275  001D08  EE20 F001          	lfsr	2,1
 21276  001D0C  51E0               	movf	eusartparser@package& (0+255),w,b
 21277  001D0E  26D9               	addwf	fsr2l,f,c
 21278  001D10  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21279  001D12  22DA               	addwfc	fsr2h,f,c
 21280  001D14  50DF               	movf	indf2,w,c
 21281  001D16  A4D8               	btfss	status,2,c
 21282  001D18  D020               	goto	l27638
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;eusartparser.c: 529:                         ReadSerial(0, &serial, i);
 21286  001D1A  0EF8               	movlw	low eusartparser@serial
 21287  001D1C  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21288  001D1E  C0F3  F02F         	movff	eusartparser@i_7310,ReadSerial@position
 21289  001D22  0E00               	movlw	0
 21290  001D24  EC3E  F045         	call	_ReadSerial
 21291                           
 21292                           ;eusartparser.c: 530:                         package->data.data16=(uint16_t)serial;
 21293  001D28  0100               	movlb	0	; () banked
 21294  001D2A  EE20 F002          	lfsr	2,2
 21295  001D2E  51E0               	movf	eusartparser@package& (0+255),w,b
 21296  001D30  26D9               	addwf	fsr2l,f,c
 21297  001D32  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21298  001D34  22DA               	addwfc	fsr2h,f,c
 21299  001D36  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21300  001D3A  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;eusartparser.c: 531:                         write_package(*package);
 21304  001D3E  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21305  001D42  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21306  001D46  EE00  F011         	lfsr	0,write_package@package
 21307  001D4A  0E06               	movlw	6
 21308  001D4C                     u33721:
 21309  001D4C  CFDB FFEB          	movff	plusw2,plusw0
 21310  001D50  06E8               	decf	wreg,f,c
 21311  001D52  E2FC               	bc	u33721
 21312  001D54  ECB5  F04B         	call	_write_package	;wreg free
 21313  001D58  D1C9               	goto	l27822
 21314  001D5A                     l27638:
 21315  001D5A  C0F3  F02E         	movff	eusartparser@i_7310,cmdMemoryIsEmpty@position
 21316  001D5E  0E00               	movlw	0
 21317  001D60  EC38  F040         	call	_cmdMemoryIsEmpty
 21318  001D64  0900               	iorlw	0
 21319  001D66  A4D8               	btfss	status,2,c
 21320  001D68  D009               	goto	l27642
 21321                           
 21322                           ;eusartparser.c: 539:                         package->address--;
 21323  001D6A  0100               	movlb	0	; () banked
 21324  001D6C  EE20 F001          	lfsr	2,1
 21325  001D70  51E0               	movf	eusartparser@package& (0+255),w,b
 21326  001D72  26D9               	addwf	fsr2l,f,c
 21327  001D74  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21328  001D76  22DA               	addwfc	fsr2h,f,c
 21329  001D78  06DF               	decf	indf2,f,c
 21330                           
 21331                           ;eusartparser.c: 540:                     }
 21332  001D7A  D005               	goto	l27648
 21333  001D7C                     l27642:
 21334  001D7C  0100               	movlb	0	; () banked
 21335  001D7E  51F3               	movf	eusartparser@i_7310& (0+255),w,b
 21336  001D80  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21337  001D82  B4D8               	btfsc	status,2,c
 21338  001D84  D5AF               	goto	l27422
 21339  001D86                     l27648:
 21340                           
 21341                           ; BSR set to: 0
 21342  001D86  2BF3               	incf	eusartparser@i_7310& (0+255),f,b
 21343  001D88  D7B6               	goto	l27618
 21344  001D8A                     l27650:
 21345                           
 21346                           ; BSR set to: 0
 21347                           ;eusartparser.c: 548:                     package->address=0x00;
 21348  001D8A  EE20 F001          	lfsr	2,1
 21349  001D8E  51E0               	movf	eusartparser@package& (0+255),w,b
 21350  001D90  26D9               	addwf	fsr2l,f,c
 21351  001D92  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21352  001D94  22DA               	addwfc	fsr2h,f,c
 21353  001D96  0E00               	movlw	0
 21354  001D98  6EDF               	movwf	indf2,c
 21355                           
 21356                           ;eusartparser.c: 549:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esWalk;
 21357  001D9A  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21358  001D9C  6FE2               	movwf	??_eusartparser& (0+255),b
 21359  001D9E  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21360  001DA0  EE20 F002          	lfsr	2,2
 21361  001DA4  51E0               	movf	eusartparser@package& (0+255),w,b
 21362  001DA6  26D9               	addwf	fsr2l,f,c
 21363  001DA8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21364  001DAA  22DA               	addwfc	fsr2h,f,c
 21365  001DAC  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21366  001DB0  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21367                           
 21368                           ; BSR set to: 0
 21369                           ;eusartparser.c: 550:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesW
      +                          alk;i++)
 21370  001DB4  0E00               	movlw	0
 21371  001DB6  6FEA               	movwf	eusartparser@i_7312& (0+255),b
 21372  001DB8  D014               	goto	l27660
 21373  001DBA                     l27654:
 21374                           
 21375                           ; BSR set to: 0
 21376                           ;eusartparser.c: 551:                     if(cmdMemoryIsEmpty(1,i)==1)
 21377  001DBA  C0EA  F02E         	movff	eusartparser@i_7312,cmdMemoryIsEmpty@position
 21378  001DBE  0E01               	movlw	1
 21379  001DC0  EC38  F040         	call	_cmdMemoryIsEmpty
 21380  001DC4  06E8               	decf	wreg,f,c
 21381  001DC6  A4D8               	btfss	status,2,c
 21382  001DC8  D00A               	goto	l27658
 21383                           
 21384                           ;eusartparser.c: 552:                         package->data.data16--;
 21385  001DCA  0100               	movlb	0	; () banked
 21386  001DCC  EE20 F002          	lfsr	2,2
 21387  001DD0  51E0               	movf	eusartparser@package& (0+255),w,b
 21388  001DD2  26D9               	addwf	fsr2l,f,c
 21389  001DD4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21390  001DD6  22DA               	addwfc	fsr2h,f,c
 21391  001DD8  06DE               	decf	postinc2,f,c
 21392  001DDA  0E00               	movlw	0
 21393  001DDC  5ADD               	subwfb	postdec2,f,c
 21394  001DDE                     l27658:
 21395  001DDE  0100               	movlb	0	; () banked
 21396  001DE0  2BEA               	incf	eusartparser@i_7312& (0+255),f,b
 21397  001DE2                     l27660:
 21398                           
 21399                           ; BSR set to: 0
 21400  001DE2  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21401  001DE4  5DEA               	subwf	eusartparser@i_7312& (0+255),w,b
 21402  001DE6  B0D8               	btfsc	status,0,c
 21403  001DE8  D5A4               	goto	l27438
 21404  001DEA  D7E7               	goto	l27654
 21405  001DEC                     l27668:
 21406                           
 21407                           ; BSR set to: 0
 21408                           ;eusartparser.c: 559:                 package->address=0x00;
 21409  001DEC  EE20 F001          	lfsr	2,1
 21410  001DF0  51E0               	movf	eusartparser@package& (0+255),w,b
 21411  001DF2  26D9               	addwf	fsr2l,f,c
 21412  001DF4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21413  001DF6  22DA               	addwfc	fsr2h,f,c
 21414  001DF8  0E00               	movlw	0
 21415  001DFA  6EDF               	movwf	indf2,c
 21416                           
 21417                           ;eusartparser.c: 560:                 package->data.data16=0;
 21418  001DFC  EE20 F002          	lfsr	2,2
 21419  001E00  51E0               	movf	eusartparser@package& (0+255),w,b
 21420  001E02  26D9               	addwf	fsr2l,f,c
 21421  001E04  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21422  001E06  22DA               	addwfc	fsr2h,f,c
 21423  001E08  0E00               	movlw	0
 21424  001E0A  6EDE               	movwf	postinc2,c
 21425  001E0C  0E00               	movlw	0
 21426  001E0E  6EDD               	movwf	postdec2,c
 21427                           
 21428                           ; BSR set to: 0
 21429                           ;eusartparser.c: 561:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21430  001E10  0E00               	movlw	0
 21431  001E12  6FEB               	movwf	eusartparser@i_7313& (0+255),b
 21432  001E14  D014               	goto	l27678
 21433  001E16                     l27672:
 21434                           
 21435                           ; BSR set to: 0
 21436                           ;eusartparser.c: 562:                 if(cmdMemoryIsEmpty(1,i)==1)
 21437  001E16  C0EB  F02E         	movff	eusartparser@i_7313,cmdMemoryIsEmpty@position
 21438  001E1A  0E01               	movlw	1
 21439  001E1C  EC38  F040         	call	_cmdMemoryIsEmpty
 21440  001E20  06E8               	decf	wreg,f,c
 21441  001E22  A4D8               	btfss	status,2,c
 21442  001E24  D00A               	goto	l27676
 21443                           
 21444                           ;eusartparser.c: 563:                     package->data.data16++;
 21445  001E26  0100               	movlb	0	; () banked
 21446  001E28  EE20 F002          	lfsr	2,2
 21447  001E2C  51E0               	movf	eusartparser@package& (0+255),w,b
 21448  001E2E  26D9               	addwf	fsr2l,f,c
 21449  001E30  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21450  001E32  22DA               	addwfc	fsr2h,f,c
 21451  001E34  2ADE               	incf	postinc2,f,c
 21452  001E36  0E00               	movlw	0
 21453  001E38  22DD               	addwfc	postdec2,f,c
 21454  001E3A                     l27676:
 21455  001E3A  0100               	movlb	0	; () banked
 21456  001E3C  2BEB               	incf	eusartparser@i_7313& (0+255),f,b
 21457  001E3E                     l27678:
 21458                           
 21459                           ; BSR set to: 0
 21460  001E3E  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21461  001E40  5DEB               	subwf	eusartparser@i_7313& (0+255),w,b
 21462  001E42  B0D8               	btfsc	status,0,c
 21463  001E44  D576               	goto	l27438
 21464  001E46  D7E7               	goto	l27672
 21465  001E48                     l27686:
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;eusartparser.c: 569:                 relcounter=0;
 21469  001E48  0E00               	movlw	0
 21470  001E4A  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21471                           
 21472                           ;eusartparser.c: 570:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21473  001E4C  0E00               	movlw	0
 21474  001E4E  6FEF               	movwf	eusartparser@i_7314& (0+255),b
 21475  001E50  D02E               	goto	l27698
 21476  001E52                     l27688:
 21477                           
 21478                           ; BSR set to: 0
 21479                           ;eusartparser.c: 571:                     if(cmdMemoryIsEmpty(1,i)==0){
 21480  001E52  C0EF  F02E         	movff	eusartparser@i_7314,cmdMemoryIsEmpty@position
 21481  001E56  0E01               	movlw	1
 21482  001E58  EC38  F040         	call	_cmdMemoryIsEmpty
 21483  001E5C  0900               	iorlw	0
 21484  001E5E  A4D8               	btfss	status,2,c
 21485  001E60  D024               	goto	l27696
 21486                           
 21487                           ;eusartparser.c: 572:                         package->data.data16=(uint16_t)i;
 21488  001E62  0100               	movlb	0	; () banked
 21489  001E64  51EF               	movf	eusartparser@i_7314& (0+255),w,b
 21490  001E66  6FE2               	movwf	??_eusartparser& (0+255),b
 21491  001E68  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21492  001E6A  EE20 F002          	lfsr	2,2
 21493  001E6E  51E0               	movf	eusartparser@package& (0+255),w,b
 21494  001E70  26D9               	addwf	fsr2l,f,c
 21495  001E72  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21496  001E74  22DA               	addwfc	fsr2h,f,c
 21497  001E76  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21498  001E7A  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21499                           
 21500                           ;eusartparser.c: 573:                         package->address=relcounter;
 21501  001E7E  EE20 F001          	lfsr	2,1
 21502  001E82  51E0               	movf	eusartparser@package& (0+255),w,b
 21503  001E84  26D9               	addwf	fsr2l,f,c
 21504  001E86  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21505  001E88  22DA               	addwfc	fsr2h,f,c
 21506  001E8A  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;eusartparser.c: 574:                         relcounter++;
 21510  001E8E  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21511                           
 21512                           ; BSR set to: 0
 21513                           ;eusartparser.c: 575:                         write_package(*package);
 21514  001E90  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21515  001E94  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21516  001E98  EE00  F011         	lfsr	0,write_package@package
 21517  001E9C  0E06               	movlw	6
 21518  001E9E                     u33801:
 21519  001E9E  CFDB FFEB          	movff	plusw2,plusw0
 21520  001EA2  06E8               	decf	wreg,f,c
 21521  001EA4  E2FC               	bc	u33801
 21522  001EA6  ECB5  F04B         	call	_write_package	;wreg free
 21523  001EAA                     l27696:
 21524  001EAA  0100               	movlb	0	; () banked
 21525  001EAC  2BEF               	incf	eusartparser@i_7314& (0+255),f,b
 21526  001EAE                     l27698:
 21527                           
 21528                           ; BSR set to: 0
 21529  001EAE  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21530  001EB0  5DEF               	subwf	eusartparser@i_7314& (0+255),w,b
 21531  001EB2  B0D8               	btfsc	status,0,c
 21532  001EB4  D4F0               	goto	l27410
 21533  001EB6  D7CD               	goto	l27688
 21534  001EB8                     l27704:
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;eusartparser.c: 581:                 relcounter=0;
 21538  001EB8  0E00               	movlw	0
 21539  001EBA  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21540                           
 21541                           ;eusartparser.c: 582:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21542  001EBC  0E00               	movlw	0
 21543  001EBE  6FF0               	movwf	eusartparser@i_7315& (0+255),b
 21544  001EC0  D02E               	goto	l27716
 21545  001EC2                     l27706:
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;eusartparser.c: 583:                     if(cmdMemoryIsEmpty(1,i)==1){
 21549  001EC2  C0F0  F02E         	movff	eusartparser@i_7315,cmdMemoryIsEmpty@position
 21550  001EC6  0E01               	movlw	1
 21551  001EC8  EC38  F040         	call	_cmdMemoryIsEmpty
 21552  001ECC  06E8               	decf	wreg,f,c
 21553  001ECE  A4D8               	btfss	status,2,c
 21554  001ED0  D024               	goto	l27714
 21555                           
 21556                           ;eusartparser.c: 584:                         package->data.data16=(uint16_t)i;
 21557  001ED2  0100               	movlb	0	; () banked
 21558  001ED4  51F0               	movf	eusartparser@i_7315& (0+255),w,b
 21559  001ED6  6FE2               	movwf	??_eusartparser& (0+255),b
 21560  001ED8  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21561  001EDA  EE20 F002          	lfsr	2,2
 21562  001EDE  51E0               	movf	eusartparser@package& (0+255),w,b
 21563  001EE0  26D9               	addwf	fsr2l,f,c
 21564  001EE2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21565  001EE4  22DA               	addwfc	fsr2h,f,c
 21566  001EE6  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21567  001EEA  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21568                           
 21569                           ;eusartparser.c: 585:                         package->address=relcounter;
 21570  001EEE  EE20 F001          	lfsr	2,1
 21571  001EF2  51E0               	movf	eusartparser@package& (0+255),w,b
 21572  001EF4  26D9               	addwf	fsr2l,f,c
 21573  001EF6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21574  001EF8  22DA               	addwfc	fsr2h,f,c
 21575  001EFA  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;eusartparser.c: 586:                         relcounter++;
 21579  001EFE  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;eusartparser.c: 587:                         write_package(*package);
 21583  001F00  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21584  001F04  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21585  001F08  EE00  F011         	lfsr	0,write_package@package
 21586  001F0C  0E06               	movlw	6
 21587  001F0E                     u33831:
 21588  001F0E  CFDB FFEB          	movff	plusw2,plusw0
 21589  001F12  06E8               	decf	wreg,f,c
 21590  001F14  E2FC               	bc	u33831
 21591  001F16  ECB5  F04B         	call	_write_package	;wreg free
 21592  001F1A                     l27714:
 21593  001F1A  0100               	movlb	0	; () banked
 21594  001F1C  2BF0               	incf	eusartparser@i_7315& (0+255),f,b
 21595  001F1E                     l27716:
 21596                           
 21597                           ; BSR set to: 0
 21598  001F1E  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21599  001F20  5DF0               	subwf	eusartparser@i_7315& (0+255),w,b
 21600  001F22  B0D8               	btfsc	status,0,c
 21601  001F24  D4B8               	goto	l27410
 21602  001F26  D7CD               	goto	l27706
 21603  001F28                     l27722:
 21604                           
 21605                           ; BSR set to: 0
 21606                           ;eusartparser.c: 593:                 if(programmer_enable){
 21607  001F28  5185               	movf	_programmer_enable& (0+255),w,b
 21608  001F2A  B4D8               	btfsc	status,2,c
 21609  001F2C  D4DB               	goto	l27422
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;eusartparser.c: 594:                     if(save_f==0){
 21613  001F2E  0101               	movlb	1	; () banked
 21614  001F30  518F               	movf	eusartparser@save_f& (0+255),w,b
 21615  001F32  B4D8               	btfsc	status,2,c
 21616  001F34  D5F0               	goto	u33570
 21617                           
 21618                           ; BSR set to: 1
 21619                           ;eusartparser.c: 601:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 21620                           
 21621                           ; BSR set to: 1
 21622                           ;eusartparser.c: 595:                         buffer=package->data.data16;
 21623  001F36  0100               	movlb	0	; () banked
 21624  001F38  EE20 F002          	lfsr	2,2
 21625  001F3C  51E0               	movf	eusartparser@package& (0+255),w,b
 21626  001F3E  26D9               	addwf	fsr2l,f,c
 21627  001F40  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21628  001F42  22DA               	addwfc	fsr2h,f,c
 21629  001F44  CFDE F0E2          	movff	postinc2,??_eusartparser
 21630  001F48  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21631  001F4C  0101               	movlb	1	; () banked
 21632  001F4E  5185               	movf	eusartparser@buffer& (0+255),w,b
 21633  001F50  0100               	movlb	0	; () banked
 21634  001F52  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21635  001F54  0101               	movlb	1	; () banked
 21636  001F56  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21637  001F58  0100               	movlb	0	; () banked
 21638  001F5A  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21639  001F5C  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21640  001F5E  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21641  001F60  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21642  001F64  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21643  001F68  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21644  001F6A  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21645  001F6C  51E2               	movf	??_eusartparser& (0+255),w,b
 21646  001F6E  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21647  001F70  6FF8               	movwf	eusartparser@serial& (0+255),b
 21648  001F72  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21649  001F74  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21650  001F76  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21651  001F78  0E00               	movlw	0
 21652  001F7A  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21653  001F7C  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21654  001F7E  0E00               	movlw	0
 21655  001F80  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21656  001F82  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;eusartparser.c: 602:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21660  001F84  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21661  001F88  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21662  001F8C  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21663  001F90  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21664  001F94  0E00               	movlw	0
 21665  001F96  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21666  001F98  0EEC               	movlw	low eusartparser@pos
 21667  001F9A  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21668  001F9C  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21669  001F9E  EC66  F030         	call	_validateRemoteSerialNumber	;wreg free
 21670  001FA2  0900               	iorlw	0
 21671  001FA4  A4D8               	btfss	status,2,c
 21672  001FA6  D661               	goto	u33640
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;eusartparser.c: 603:                             for(uint8_t i=0;;i++)
 21676  001FA8  0E00               	movlw	0
 21677  001FAA  6FF4               	movwf	eusartparser@i_7316& (0+255),b
 21678  001FAC                     l27740:
 21679                           
 21680                           ; BSR set to: 0
 21681                           ;eusartparser.c: 604:                                 if(cmdMemoryIsEmpty(1,i)==1&&packa
      +                          ge->address==0){
 21682  001FAC  C0F4  F02E         	movff	eusartparser@i_7316,cmdMemoryIsEmpty@position
 21683  001FB0  0E01               	movlw	1
 21684  001FB2  EC38  F040         	call	_cmdMemoryIsEmpty
 21685  001FB6  06E8               	decf	wreg,f,c
 21686  001FB8  A4D8               	btfss	status,2,c
 21687  001FBA  D018               	goto	l27752
 21688  001FBC  0100               	movlb	0	; () banked
 21689  001FBE  EE20 F001          	lfsr	2,1
 21690  001FC2  51E0               	movf	eusartparser@package& (0+255),w,b
 21691  001FC4  26D9               	addwf	fsr2l,f,c
 21692  001FC6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21693  001FC8  22DA               	addwfc	fsr2h,f,c
 21694  001FCA  50DF               	movf	indf2,w,c
 21695  001FCC  A4D8               	btfss	status,2,c
 21696  001FCE  D00E               	goto	l27752
 21697                           
 21698                           ; BSR set to: 0
 21699                           ;eusartparser.c: 605:                                     saveNewSerial(1,serial,i);
 21700  001FD0  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21701  001FD4  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21702  001FD8  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21703  001FDC  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21704  001FE0  C0F4  F0DC         	movff	eusartparser@i_7316,saveNewSerial@position
 21705  001FE4  0E01               	movlw	1
 21706  001FE6  EC06  F045         	call	_saveNewSerial
 21707  001FEA  D613               	goto	l27552
 21708  001FEC                     l27752:
 21709  001FEC  C0F4  F02E         	movff	eusartparser@i_7316,cmdMemoryIsEmpty@position
 21710  001FF0  0E01               	movlw	1
 21711  001FF2  EC38  F040         	call	_cmdMemoryIsEmpty
 21712  001FF6  06E8               	decf	wreg,f,c
 21713  001FF8  A4D8               	btfss	status,2,c
 21714  001FFA  D009               	goto	l27756
 21715                           
 21716                           ;eusartparser.c: 611:                                     package->address--;
 21717  001FFC  0100               	movlb	0	; () banked
 21718  001FFE  EE20 F001          	lfsr	2,1
 21719  002002  51E0               	movf	eusartparser@package& (0+255),w,b
 21720  002004  26D9               	addwf	fsr2l,f,c
 21721  002006  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21722  002008  22DA               	addwfc	fsr2h,f,c
 21723  00200A  06DF               	decf	indf2,f,c
 21724                           
 21725                           ;eusartparser.c: 612:                                 }
 21726  00200C  D005               	goto	l27762
 21727  00200E                     l27756:
 21728  00200E  0100               	movlb	0	; () banked
 21729  002010  51F4               	movf	eusartparser@i_7316& (0+255),w,b
 21730  002012  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21731  002014  B4D8               	btfsc	status,2,c
 21732  002016  D629               	goto	u33640
 21733  002018                     l27762:
 21734                           
 21735                           ; BSR set to: 0
 21736  002018  2BF4               	incf	eusartparser@i_7316& (0+255),f,b
 21737  00201A  D7C8               	goto	l27740
 21738  00201C                     l27774:
 21739                           
 21740                           ; BSR set to: 0
 21741                           ;eusartparser.c: 632:                 if(programmer_enable){
 21742  00201C  5185               	movf	_programmer_enable& (0+255),w,b
 21743  00201E  B4D8               	btfsc	status,2,c
 21744  002020  D461               	goto	l27422
 21745                           
 21746                           ; BSR set to: 0
 21747                           ;eusartparser.c: 633:                     for(uint8_t i=0;;i++)
 21748  002022  0E00               	movlw	0
 21749  002024  6FF5               	movwf	eusartparser@i_7317& (0+255),b
 21750  002026                     l27778:
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;eusartparser.c: 634:                         if(cmdMemoryIsEmpty(1,i)==0&&package->addr
      +                          ess==0){
 21754  002026  C0F5  F02E         	movff	eusartparser@i_7317,cmdMemoryIsEmpty@position
 21755  00202A  0E01               	movlw	1
 21756  00202C  EC38  F040         	call	_cmdMemoryIsEmpty
 21757  002030  0900               	iorlw	0
 21758  002032  A4D8               	btfss	status,2,c
 21759  002034  D010               	goto	l27792
 21760  002036  0100               	movlb	0	; () banked
 21761  002038  EE20 F001          	lfsr	2,1
 21762  00203C  51E0               	movf	eusartparser@package& (0+255),w,b
 21763  00203E  26D9               	addwf	fsr2l,f,c
 21764  002040  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21765  002042  22DA               	addwfc	fsr2h,f,c
 21766  002044  50DF               	movf	indf2,w,c
 21767  002046  A4D8               	btfss	status,2,c
 21768  002048  D006               	goto	l27792
 21769                           
 21770                           ; BSR set to: 0
 21771                           ;eusartparser.c: 635:                             RemoveSerial(1, i);
 21772  00204A  C0F5  F03A         	movff	eusartparser@i_7317,RemoveSerial@position
 21773  00204E  0E01               	movlw	1
 21774  002050  ECE7  F042         	call	_RemoveSerial
 21775  002054  D5DE               	goto	l27552
 21776  002056                     l27792:
 21777  002056  C0F5  F02E         	movff	eusartparser@i_7317,cmdMemoryIsEmpty@position
 21778  00205A  0E01               	movlw	1
 21779  00205C  EC38  F040         	call	_cmdMemoryIsEmpty
 21780  002060  0900               	iorlw	0
 21781  002062  A4D8               	btfss	status,2,c
 21782  002064  D009               	goto	l27796
 21783                           
 21784                           ;eusartparser.c: 642:                             package->address--;
 21785  002066  0100               	movlb	0	; () banked
 21786  002068  EE20 F001          	lfsr	2,1
 21787  00206C  51E0               	movf	eusartparser@package& (0+255),w,b
 21788  00206E  26D9               	addwf	fsr2l,f,c
 21789  002070  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21790  002072  22DA               	addwfc	fsr2h,f,c
 21791  002074  06DF               	decf	indf2,f,c
 21792                           
 21793                           ;eusartparser.c: 643:                         }
 21794  002076  D005               	goto	l27804
 21795  002078                     l27796:
 21796  002078  0100               	movlb	0	; () banked
 21797  00207A  51F5               	movf	eusartparser@i_7317& (0+255),w,b
 21798  00207C  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21799  00207E  B4D8               	btfsc	status,2,c
 21800  002080  D5F4               	goto	u33640
 21801  002082                     l27804:
 21802                           
 21803                           ; BSR set to: 0
 21804  002082  2BF5               	incf	eusartparser@i_7317& (0+255),f,b
 21805  002084  D7D0               	goto	l27778
 21806  002086                     l27810:
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;eusartparser.c: 657:                 for(uint8_t i=0;;i++)
 21810  002086  0E00               	movlw	0
 21811  002088  6FF6               	movwf	eusartparser@i_7318& (0+255),b
 21812  00208A                     l27812:
 21813                           
 21814                           ; BSR set to: 0
 21815                           ;eusartparser.c: 658:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 21816  00208A  C0F6  F02E         	movff	eusartparser@i_7318,cmdMemoryIsEmpty@position
 21817  00208E  0E01               	movlw	1
 21818  002090  EC38  F040         	call	_cmdMemoryIsEmpty
 21819  002094  0900               	iorlw	0
 21820  002096  A4D8               	btfss	status,2,c
 21821  002098  D035               	goto	l27832
 21822  00209A  0100               	movlb	0	; () banked
 21823  00209C  EE20 F001          	lfsr	2,1
 21824  0020A0  51E0               	movf	eusartparser@package& (0+255),w,b
 21825  0020A2  26D9               	addwf	fsr2l,f,c
 21826  0020A4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21827  0020A6  22DA               	addwfc	fsr2h,f,c
 21828  0020A8  50DF               	movf	indf2,w,c
 21829  0020AA  A4D8               	btfss	status,2,c
 21830  0020AC  D02B               	goto	l27832
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;eusartparser.c: 659:                         ReadSerial(1, &serial, i);
 21834  0020AE  0EF8               	movlw	low eusartparser@serial
 21835  0020B0  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21836  0020B2  C0F6  F02F         	movff	eusartparser@i_7318,ReadSerial@position
 21837  0020B6  0E01               	movlw	1
 21838  0020B8  EC3E  F045         	call	_ReadSerial
 21839                           
 21840                           ;eusartparser.c: 660:                         package->data.data16=(uint16_t)serial;
 21841  0020BC  0100               	movlb	0	; () banked
 21842  0020BE  EE20 F002          	lfsr	2,2
 21843  0020C2  51E0               	movf	eusartparser@package& (0+255),w,b
 21844  0020C4  26D9               	addwf	fsr2l,f,c
 21845  0020C6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21846  0020C8  22DA               	addwfc	fsr2h,f,c
 21847  0020CA  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21848  0020CE  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21849                           
 21850                           ; BSR set to: 0
 21851                           ;eusartparser.c: 661:                         write_package(*package);
 21852  0020D2  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21853  0020D6  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21854  0020DA  EE00  F011         	lfsr	0,write_package@package
 21855  0020DE  0E06               	movlw	6
 21856  0020E0                     u33991:
 21857  0020E0  CFDB FFEB          	movff	plusw2,plusw0
 21858  0020E4  06E8               	decf	wreg,f,c
 21859  0020E6  E2FC               	bc	u33991
 21860  0020E8  ECB5  F04B         	call	_write_package	;wreg free
 21861  0020EC                     l27822:
 21862                           
 21863                           ;eusartparser.c: 662:                         package->data.data16=(uint16_t)(serial>>16
      +                          );
 21864  0020EC  0100               	movlb	0	; () banked
 21865  0020EE  EE20 F002          	lfsr	2,2
 21866  0020F2  51E0               	movf	eusartparser@package& (0+255),w,b
 21867  0020F4  26D9               	addwf	fsr2l,f,c
 21868  0020F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21869  0020F8  22DA               	addwfc	fsr2h,f,c
 21870  0020FA  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 21871  0020FE  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 21872  002102  D417               	goto	l27438
 21873  002104                     l27832:
 21874  002104  C0F6  F02E         	movff	eusartparser@i_7318,cmdMemoryIsEmpty@position
 21875  002108  0E01               	movlw	1
 21876  00210A  EC38  F040         	call	_cmdMemoryIsEmpty
 21877  00210E  0900               	iorlw	0
 21878  002110  A4D8               	btfss	status,2,c
 21879  002112  D009               	goto	l27836
 21880                           
 21881                           ;eusartparser.c: 669:                         package->address--;
 21882  002114  0100               	movlb	0	; () banked
 21883  002116  EE20 F001          	lfsr	2,1
 21884  00211A  51E0               	movf	eusartparser@package& (0+255),w,b
 21885  00211C  26D9               	addwf	fsr2l,f,c
 21886  00211E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21887  002120  22DA               	addwfc	fsr2h,f,c
 21888  002122  06DF               	decf	indf2,f,c
 21889                           
 21890                           ;eusartparser.c: 670:                     }
 21891  002124  D006               	goto	l27842
 21892  002126                     l27836:
 21893  002126  0100               	movlb	0	; () banked
 21894  002128  51F6               	movf	eusartparser@i_7318& (0+255),w,b
 21895  00212A  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21896  00212C  B4D8               	btfsc	status,2,c
 21897  00212E  EF72  F00C         	goto	l27422
 21898  002132                     l27842:
 21899                           
 21900                           ; BSR set to: 0
 21901  002132  2BF6               	incf	eusartparser@i_7318& (0+255),f,b
 21902  002134  D7AA               	goto	l27812
 21903  002136                     l27848:
 21904                           
 21905                           ; BSR set to: 0
 21906  002136  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21907  00213A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21908  00213E  50DF               	movf	indf2,w,c
 21909  002140  6FE2               	movwf	??_eusartparser& (0+255),b
 21910  002142  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21911                           
 21912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21913                           ; Switch size 1, requested type "simple"
 21914                           ; Number of cases is 1, Range of values is 0 to 0
 21915                           ; switch strategies available:
 21916                           ; Name         Instructions Cycles
 21917                           ; simple_byte            4     3 (average)
 21918                           ;	Chosen strategy is simple_byte
 21919  002144  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21920  002146  0A00               	xorlw	0	; case 0
 21921  002148  A4D8               	btfss	status,2,c
 21922  00214A  EF72  F00C         	goto	l27422
 21923                           
 21924                           ; BSR set to: 0
 21925                           ; Switch size 1, requested type "simple"
 21926                           ; Number of cases is 18, Range of values is 0 to 17
 21927                           ; switch strategies available:
 21928                           ; Name         Instructions Cycles
 21929                           ; simple_byte           55    28 (average)
 21930                           ;	Chosen strategy is simple_byte
 21931  00214E  51E2               	movf	??_eusartparser& (0+255),w,b
 21932  002150  0A00               	xorlw	0	; case 0
 21933  002152  B4D8               	btfsc	status,2,c
 21934  002154  EF45  F00C         	goto	l27408
 21935  002158  0A01               	xorlw	1	; case 1
 21936  00215A  B4D8               	btfsc	status,2,c
 21937  00215C  EF61  F00C         	goto	l27414
 21938  002160  0A03               	xorlw	3	; case 2
 21939  002162  B4D8               	btfsc	status,2,c
 21940  002164  EF7B  F00C         	goto	l27426
 21941  002168  0A01               	xorlw	1	; case 3
 21942  00216A  B4D8               	btfsc	status,2,c
 21943  00216C  EF4B  F00C         	goto	l27410
 21944  002170  0A07               	xorlw	7	; case 4
 21945  002172  B4D8               	btfsc	status,2,c
 21946  002174  EFB5  F00C         	goto	l27456
 21947  002178  0A01               	xorlw	1	; case 5
 21948  00217A  B4D8               	btfsc	status,2,c
 21949  00217C  D427               	goto	l27474
 21950  00217E  0A03               	xorlw	3	; case 6
 21951  002180  B4D8               	btfsc	status,2,c
 21952  002182  D452               	goto	l27492
 21953  002184  0A01               	xorlw	1	; case 7
 21954  002186  B4D8               	btfsc	status,2,c
 21955  002188  D487               	goto	l27510
 21956  00218A  0A0F               	xorlw	15	; case 8
 21957  00218C  B4D8               	btfsc	status,2,c
 21958  00218E  D4BC               	goto	l27528
 21959  002190  0A01               	xorlw	1	; case 9
 21960  002192  B4D8               	btfsc	status,2,c
 21961  002194  D579               	goto	l27580
 21962  002196  0A03               	xorlw	3	; case 10
 21963  002198  B4D8               	btfsc	status,2,c
 21964  00219A  D5AB               	goto	l27616
 21965  00219C  0A01               	xorlw	1	; case 11
 21966  00219E  B4D8               	btfsc	status,2,c
 21967  0021A0  D5F4               	goto	l27650
 21968  0021A2  0A07               	xorlw	7	; case 12
 21969  0021A4  B4D8               	btfsc	status,2,c
 21970  0021A6  D622               	goto	l27668
 21971  0021A8  0A01               	xorlw	1	; case 13
 21972  0021AA  B4D8               	btfsc	status,2,c
 21973  0021AC  D64D               	goto	l27686
 21974  0021AE  0A03               	xorlw	3	; case 14
 21975  0021B0  B4D8               	btfsc	status,2,c
 21976  0021B2  D682               	goto	l27704
 21977  0021B4  0A01               	xorlw	1	; case 15
 21978  0021B6  B4D8               	btfsc	status,2,c
 21979  0021B8  D6B7               	goto	l27722
 21980  0021BA  0A1F               	xorlw	31	; case 16
 21981  0021BC  B4D8               	btfsc	status,2,c
 21982  0021BE  D72E               	goto	l27774
 21983  0021C0  0A01               	xorlw	1	; case 17
 21984  0021C2  B4D8               	btfsc	status,2,c
 21985  0021C4  D760               	goto	l27810
 21986  0021C6  EF72  F00C         	goto	l27422
 21987  0021CA                     __end_of_eusartparser:
 21988                           	callstack 0
 21989                           
 21990 ;; *************** function _write_eusartparser *****************
 21991 ;; Defined at:
 21992 ;;		line 201 in file "eusartparser.c"
 21993 ;; Parameters:    Size  Location     Type
 21994 ;;  package         7   15[COMRAM] struct package_t
 21995 ;; Auto vars:     Size  Location     Type
 21996 ;;  debug2          2   32[COMRAM] volatile int 
 21997 ;;  debug           2   30[COMRAM] volatile int 
 21998 ;; Return value:  Size  Location     Type
 21999 ;;                  1    wreg      void 
 22000 ;; Registers used:
 22001 ;;		wreg, status,2, status,0
 22002 ;; Tracked objects:
 22003 ;;		On entry : 3F/0
 22004 ;;		On exit  : 3F/0
 22005 ;;		Unchanged: 0/0
 22006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22007 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22008 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22009 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22010 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22011 ;;Total ram usage:       19 bytes
 22012 ;; Hardware stack levels used: 1
 22013 ;; Hardware stack levels required when called: 4
 22014 ;; This function calls:
 22015 ;;		Nothing
 22016 ;; This function is called by:
 22017 ;;		_eusartparser
 22018 ;; This function uses a non-reentrant model
 22019 ;;
 22020                           
 22021                           	psect	text75
 22022  002EA0                     __ptext75:
 22023                           	callstack 0
 22024  002EA0                     _write_eusartparser:
 22025                           	callstack 25
 22026                           
 22027                           ; BSR set to: 0
 22028                           ;eusartparser.c: 202:         volatile int debug=(uint8_t)package.address;
 22029                           
 22030                           ;incstack = 0
 22031  002EA0  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 22032  002EA4  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;eusartparser.c: 203:         volatile int debug2=0x10;
 22036  002EA6  0E00               	movlw	0
 22037  002EA8  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 22038  002EAA  0E10               	movlw	16
 22039  002EAC  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 22040                           
 22041                           ;eusartparser.c: 204:         switch((uint8_t)package.address){
 22042  002EAE  D240               	goto	l24462
 22043  002EB0                     l3617:
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;eusartparser.c: 207:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 22047  002EB0  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 22048                           
 22049                           ;eusartparser.c: 208:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 22050  002EB4  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 22051                           
 22052                           ;eusartparser.c: 209:                 break;
 22053  002EB8  0012               	return	
 22054  002EBA                     l3619:
 22055                           
 22056                           ; BSR set to: 0
 22057                           ;eusartparser.c: 211:                 var_sys_NVM.motorPower=package.data.data8[0];
 22058  002EBA  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 22059                           
 22060                           ;eusartparser.c: 212:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 22061  002EBE  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 22062                           
 22063                           ;eusartparser.c: 213:                 break;
 22064  002EC2  0012               	return	
 22065  002EC4                     l3620:
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;eusartparser.c: 215:                 var_sys_NVM.walkTime=package.data.data8[1];
 22069  002EC4  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 22070                           
 22071                           ;eusartparser.c: 216:                 break;
 22072  002EC8  0012               	return	
 22073  002ECA                     l3622:
 22074                           
 22075                           ; BSR set to: 0
 22076                           ;eusartparser.c: 219:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 22077  002ECA  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 22078                           
 22079                           ;eusartparser.c: 220:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 22080  002ECE  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 22081                           
 22082                           ;eusartparser.c: 221:                 break;
 22083  002ED2  0012               	return	
 22084  002ED4                     l3624:
 22085                           
 22086                           ; BSR set to: 0
 22087                           ;eusartparser.c: 224:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 22088  002ED4  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 22089                           
 22090                           ;eusartparser.c: 225:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 22091  002ED8  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 22092                           
 22093                           ;eusartparser.c: 226:                 break;
 22094  002EDC  0012               	return	
 22095  002EDE                     l3625:
 22096                           
 22097                           ; BSR set to: 0
 22098                           ;eusartparser.c: 228:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 22099  002EDE  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 22100                           
 22101                           ;eusartparser.c: 229:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 22102  002EE2  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 22103                           
 22104                           ;eusartparser.c: 230:                 break;
 22105  002EE6  0012               	return	
 22106  002EE8                     l3626:
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;eusartparser.c: 232:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 22110  002EE8  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 22111                           
 22112                           ;eusartparser.c: 233:                 break;
 22113  002EEC  0012               	return	
 22114  002EEE                     l3627:
 22115                           
 22116                           ; BSR set to: 0
 22117                           ;eusartparser.c: 235:                 var_sys_NVM.operationMode=package.data.data8[1];
 22118  002EEE  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 22119                           
 22120                           ;eusartparser.c: 236:                 break;
 22121  002EF2  0012               	return	
 22122  002EF4                     l3628:
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;eusartparser.c: 238:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 22126  002EF4  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 22127                           
 22128                           ;eusartparser.c: 239:                 break;
 22129  002EF8  0012               	return	
 22130  002EFA                     l3629:
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;eusartparser.c: 241:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 22134  002EFA  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 22135                           
 22136                           ;eusartparser.c: 242:                 break;
 22137  002EFE  0012               	return	
 22138  002F00                     l3630:
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;eusartparser.c: 244:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 22142  002F00  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 22143                           
 22144                           ;eusartparser.c: 245:                 break;
 22145  002F04  0012               	return	
 22146  002F06                     l3631:
 22147                           
 22148                           ; BSR set to: 0
 22149                           ;eusartparser.c: 248:                 var_sys_NVM.homemPresente=package.data.data8[1];
 22150  002F06  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 22151                           
 22152                           ;eusartparser.c: 249:                 break;
 22153  002F0A  0012               	return	
 22154  002F0C                     l3633:
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;eusartparser.c: 252:                 var_sys_NVM.logicDigital=package.data.data8[1];
 22158  002F0C  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 22159                           
 22160                           ;eusartparser.c: 253:                 break;
 22161  002F10  0012               	return	
 22162  002F12                     l3634:
 22163                           
 22164                           ; BSR set to: 0
 22165                           ;eusartparser.c: 255:                 var_sys_NVM.softStart=package.data.data8[0];
 22166  002F12  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 22167                           
 22168                           ;eusartparser.c: 256:                 var_sys_NVM.softstop=package.data.data8[1];
 22169  002F16  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 22170                           
 22171                           ;eusartparser.c: 257:                 break;
 22172  002F1A  0012               	return	
 22173  002F1C                     l3636:
 22174                           
 22175                           ; BSR set to: 0
 22176                           ;eusartparser.c: 260:                 var_sys_NVM.ligthTime=package.data.data8[1];
 22177  002F1C  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 22178                           
 22179                           ;eusartparser.c: 261:                 break;
 22180  002F20  0012               	return	
 22181  002F22                     l3638:
 22182                           
 22183                           ; BSR set to: 0
 22184                           ;eusartparser.c: 264:                 var_sys_NVM.folow_me=package.data.data8[1];
 22185  002F22  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 22186                           
 22187                           ;eusartparser.c: 265:                 break;
 22188  002F26  0012               	return	
 22189  002F28                     l3639:
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;eusartparser.c: 267:                 var_sys_NVM.Stopboton=package.data.data8[1];
 22193  002F28  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 22194                           
 22195                           ;eusartparser.c: 268:                 break;
 22196  002F2C  0012               	return	
 22197  002F2E                     l3640:
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;eusartparser.c: 270:                 var_sys_NVM.electricBrake=package.data.data8[1];
 22201  002F2E  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 22202                           
 22203                           ;eusartparser.c: 271:                 break;
 22204  002F32  0012               	return	
 22205  002F34                     l3641:
 22206                           
 22207                           ; BSR set to: 0
 22208                           ;eusartparser.c: 273:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 22209  002F34  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 22210                           
 22211                           ;eusartparser.c: 274:                 break;
 22212  002F38  0012               	return	
 22213  002F3A                     l3643:
 22214                           
 22215                           ; BSR set to: 0
 22216                           ;eusartparser.c: 277:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 22217  002F3A  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 22218                           
 22219                           ;eusartparser.c: 278:                 break;
 22220  002F3E  0012               	return	
 22221  002F40                     l3644:
 22222                           
 22223                           ; BSR set to: 0
 22224                           ;eusartparser.c: 280:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 22225  002F40  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 22226                           
 22227                           ;eusartparser.c: 281:                 break;
 22228  002F44  0012               	return	
 22229  002F46                     l3645:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;eusartparser.c: 283:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 22233  002F46  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 22234                           
 22235                           ;eusartparser.c: 284:                 break;
 22236  002F4A  0012               	return	
 22237  002F4C                     l3646:
 22238                           
 22239                           ; BSR set to: 0
 22240                           ;eusartparser.c: 286:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 22241  002F4C  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 22242                           
 22243                           ;eusartparser.c: 287:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 22244  002F50  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 22245                           
 22246                           ;eusartparser.c: 288:                 break;
 22247  002F54  0012               	return	
 22248  002F56                     l24440:
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;eusartparser.c: 291:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22252  002F56  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22253  002F58  6E17               	movwf	??_write_eusartparser^0,c
 22254  002F5A  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22255  002F5C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22256  002F5E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22257  002F60  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22258  002F62  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22259  002F66  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22260  002F6A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22261  002F6C  6A17               	clrf	??_write_eusartparser^0,c
 22262  002F6E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22263  002F70  1017               	iorwf	??_write_eusartparser^0,w,c
 22264  002F72  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22265  002F74  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22266  002F76  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22267  002F78  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22268  002F7A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22269  002F7C  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22270  002F7E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22271  002F80  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22272  002F82  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22273  002F84  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22274                           
 22275                           ;eusartparser.c: 292:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22276  002F86  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22277  002F88  6E17               	movwf	??_write_eusartparser^0,c
 22278  002F8A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22279  002F8C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22280  002F8E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22281  002F90  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22282  002F92  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22283  002F96  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22284  002F9A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22285  002F9C  6A17               	clrf	??_write_eusartparser^0,c
 22286  002F9E  1C17               	comf	??_write_eusartparser^0,w,c
 22287  002FA0  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22288  002FA2  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22289  002FA4  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22290  002FA6  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22291  002FA8  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22292  002FAA  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22293  002FAC  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22294  002FAE  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22295  002FB0  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22296  002FB2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22297  002FB4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22298  002FB6  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22299  002FB8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22300  002FBA  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22301  002FBC  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22302  002FBE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22303  002FC0  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22304  002FC2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22305  002FC4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22306                           
 22307                           ;eusartparser.c: 293:                 break;
 22308  002FC6  0012               	return	
 22309  002FC8                     l24442:
 22310                           
 22311                           ; BSR set to: 0
 22312                           ;eusartparser.c: 295:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22313  002FC8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22314  002FCA  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22315  002FCC  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22316  002FCE  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22317  002FD0  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22318  002FD2  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22319  002FD4  0E00               	movlw	0
 22320  002FD6  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22321  002FD8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22322  002FDA  0E00               	movlw	0
 22323  002FDC  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22324  002FDE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22325                           
 22326                           ;eusartparser.c: 296:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22327  002FE0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22328  002FE2  6E17               	movwf	??_write_eusartparser^0,c
 22329  002FE4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22330  002FE6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22331  002FE8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22332  002FEA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22333  002FEC  1C17               	comf	??_write_eusartparser^0,w,c
 22334  002FEE  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22335  002FF0  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22336  002FF2  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22337  002FF4  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22338  002FF6  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22339  002FF8  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22340  002FFA  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22341  002FFC  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22342  002FFE  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22343  003000  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22344  003002  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22345  003004  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22346  003006  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22347  003008  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22348  00300A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22349  00300C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22350  00300E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22351  003010  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22352  003012  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22353                           
 22354                           ;eusartparser.c: 297:                 break;
 22355  003014  0012               	return	
 22356  003016                     l3649:
 22357                           
 22358                           ; BSR set to: 0
 22359                           ;eusartparser.c: 300:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 22360  003016  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 22361                           
 22362                           ;eusartparser.c: 301:                 break;
 22363  00301A  0012               	return	
 22364  00301C                     l24444:
 22365                           
 22366                           ; BSR set to: 0
 22367                           ;eusartparser.c: 304:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22368  00301C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22369  00301E  6E17               	movwf	??_write_eusartparser^0,c
 22370  003020  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22371  003022  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22372  003024  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22373  003026  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22374  003028  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22375  00302C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22376  003030  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22377  003032  6A17               	clrf	??_write_eusartparser^0,c
 22378  003034  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22379  003036  1017               	iorwf	??_write_eusartparser^0,w,c
 22380  003038  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22381  00303A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22382  00303C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22383  00303E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22384  003040  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22385  003042  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22386  003044  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22387  003046  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22388  003048  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22389  00304A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22390                           
 22391                           ;eusartparser.c: 305:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 22392  00304C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22393  00304E  6E17               	movwf	??_write_eusartparser^0,c
 22394  003050  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22395  003052  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22396  003054  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22397  003056  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22398  003058  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22399  00305C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22400  003060  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22401  003062  6A17               	clrf	??_write_eusartparser^0,c
 22402  003064  1C17               	comf	??_write_eusartparser^0,w,c
 22403  003066  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22404  003068  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22405  00306A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22406  00306C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22407  00306E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22408  003070  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22409  003072  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22410  003074  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22411  003076  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22412  003078  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22413  00307A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22414  00307C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22415  00307E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22416  003080  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22417  003082  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22418  003084  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22419  003086  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22420  003088  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22421  00308A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22422                           
 22423                           ;eusartparser.c: 306:                 break;
 22424  00308C  0012               	return	
 22425  00308E                     l24446:
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;eusartparser.c: 308:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22429  00308E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22430  003090  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22431  003092  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22432  003094  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22433  003096  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22434  003098  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22435  00309A  0E00               	movlw	0
 22436  00309C  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22437  00309E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22438  0030A0  0E00               	movlw	0
 22439  0030A2  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22440  0030A4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22441                           
 22442                           ;eusartparser.c: 309:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 22443  0030A6  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22444  0030A8  6E17               	movwf	??_write_eusartparser^0,c
 22445  0030AA  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22446  0030AC  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22447  0030AE  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22448  0030B0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22449  0030B2  1C17               	comf	??_write_eusartparser^0,w,c
 22450  0030B4  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22451  0030B6  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22452  0030B8  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22453  0030BA  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22454  0030BC  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22455  0030BE  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22456  0030C0  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22457  0030C2  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22458  0030C4  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22459  0030C6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22460  0030C8  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22461  0030CA  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22462  0030CC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22463  0030CE  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22464  0030D0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22465  0030D2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22466  0030D4  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22467  0030D6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22468  0030D8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22469                           
 22470                           ;eusartparser.c: 310:                 break;
 22471  0030DA  0012               	return	
 22472  0030DC                     l24448:
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;eusartparser.c: 313:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 22476  0030DC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22477  0030DE  6E17               	movwf	??_write_eusartparser^0,c
 22478  0030E0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22479  0030E2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22480  0030E4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22481  0030E6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22482  0030E8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22483  0030EC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22484  0030F0  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22485  0030F2  6A17               	clrf	??_write_eusartparser^0,c
 22486  0030F4  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22487  0030F6  1017               	iorwf	??_write_eusartparser^0,w,c
 22488  0030F8  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22489  0030FA  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22490  0030FC  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22491  0030FE  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22492  003100  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22493  003102  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22494  003104  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22495  003106  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22496  003108  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22497  00310A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22498                           
 22499                           ;eusartparser.c: 314:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22500  00310C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22501  00310E  6E17               	movwf	??_write_eusartparser^0,c
 22502  003110  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22503  003112  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22504  003114  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22505  003116  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22506  003118  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22507  00311C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22508  003120  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22509  003122  6A17               	clrf	??_write_eusartparser^0,c
 22510  003124  1C17               	comf	??_write_eusartparser^0,w,c
 22511  003126  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22512  003128  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22513  00312A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22514  00312C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22515  00312E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22516  003130  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22517  003132  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22518  003134  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22519  003136  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22520  003138  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22521  00313A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22522  00313C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22523  00313E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22524  003140  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22525  003142  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22526  003144  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22527  003146  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22528  003148  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22529  00314A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22530                           
 22531                           ;eusartparser.c: 315:                 break;
 22532  00314C  0012               	return	
 22533  00314E                     l24450:
 22534                           
 22535                           ; BSR set to: 0
 22536                           ;eusartparser.c: 317:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22537  00314E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22538  003150  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22539  003152  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22540  003154  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22541  003156  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22542  003158  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22543  00315A  0E00               	movlw	0
 22544  00315C  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22545  00315E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22546  003160  0E00               	movlw	0
 22547  003162  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22548  003164  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22549                           
 22550                           ;eusartparser.c: 318:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22551  003166  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22552  003168  6E17               	movwf	??_write_eusartparser^0,c
 22553  00316A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22554  00316C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22555  00316E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22556  003170  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22557  003172  1C17               	comf	??_write_eusartparser^0,w,c
 22558  003174  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22559  003176  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22560  003178  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22561  00317A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22562  00317C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22563  00317E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22564  003180  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22565  003182  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22566  003184  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22567  003186  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22568  003188  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22569  00318A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22570  00318C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22571  00318E  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22572  003190  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22573  003192  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22574  003194  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22575  003196  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22576  003198  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22577                           
 22578                           ;eusartparser.c: 319:                 break;
 22579  00319A  0012               	return	
 22580  00319C                     l3654:
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;eusartparser.c: 322:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 22584  00319C  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22585  0031A0  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22586                           
 22587                           ;eusartparser.c: 323:                 break;
 22588  0031A4  0012               	return	
 22589  0031A6                     l3655:
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;eusartparser.c: 326:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 22593  0031A6  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22594  0031AA  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22595                           
 22596                           ;eusartparser.c: 327:                 break;
 22597  0031AE  0012               	return	
 22598  0031B0                     l24452:
 22599                           
 22600                           ; BSR set to: 0
 22601                           ;eusartparser.c: 330:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22602  0031B0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22603  0031B2  6E17               	movwf	??_write_eusartparser^0,c
 22604  0031B4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22605  0031B6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22606  0031B8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22607  0031BA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22608  0031BC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22609  0031C0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22610  0031C4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22611  0031C6  6A17               	clrf	??_write_eusartparser^0,c
 22612  0031C8  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22613  0031CA  1017               	iorwf	??_write_eusartparser^0,w,c
 22614  0031CC  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22615  0031CE  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22616  0031D0  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22617  0031D2  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22618  0031D4  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22619  0031D6  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22620  0031D8  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22621  0031DA  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22622  0031DC  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22623  0031DE  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22624                           
 22625                           ;eusartparser.c: 331:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22626  0031E0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22627  0031E2  6E17               	movwf	??_write_eusartparser^0,c
 22628  0031E4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22629  0031E6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22630  0031E8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22631  0031EA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22632  0031EC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22633  0031F0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22634  0031F4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22635  0031F6  6A17               	clrf	??_write_eusartparser^0,c
 22636  0031F8  1C17               	comf	??_write_eusartparser^0,w,c
 22637  0031FA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22638  0031FC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22639  0031FE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22640  003200  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22641  003202  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22642  003204  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22643  003206  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22644  003208  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22645  00320A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22646  00320C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22647  00320E  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22648  003210  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22649  003212  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22650  003214  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22651  003216  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22652  003218  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22653  00321A  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22654  00321C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22655  00321E  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22656                           
 22657                           ;eusartparser.c: 332:                 break;
 22658  003220  0012               	return	
 22659  003222                     l24454:
 22660                           
 22661                           ; BSR set to: 0
 22662                           ;eusartparser.c: 334:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22663  003222  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22664  003224  11CC               	iorwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22665  003226  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22666  003228  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22667  00322A  11CD               	iorwf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22668  00322C  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22669  00322E  0E00               	movlw	0
 22670  003230  11CE               	iorwf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22671  003232  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22672  003234  0E00               	movlw	0
 22673  003236  11CF               	iorwf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22674  003238  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22675                           
 22676                           ;eusartparser.c: 335:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22677  00323A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22678  00323C  6E17               	movwf	??_write_eusartparser^0,c
 22679  00323E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22680  003240  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22681  003242  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22682  003244  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22683  003246  1C17               	comf	??_write_eusartparser^0,w,c
 22684  003248  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22685  00324A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22686  00324C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22687  00324E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22688  003250  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22689  003252  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22690  003254  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22691  003256  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22692  003258  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22693  00325A  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22694  00325C  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22695  00325E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22696  003260  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22697  003262  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22698  003264  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22699  003266  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22700  003268  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22701  00326A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22702  00326C  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22703                           
 22704                           ;eusartparser.c: 336:                 break;
 22705  00326E  0012               	return	
 22706  003270                     l24456:
 22707                           
 22708                           ; BSR set to: 0
 22709                           ;eusartparser.c: 339:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22710  003270  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22711  003272  6E17               	movwf	??_write_eusartparser^0,c
 22712  003274  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22713  003276  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22714  003278  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22715  00327A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22716  00327C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22717  003280  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22718  003284  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22719  003286  6A17               	clrf	??_write_eusartparser^0,c
 22720  003288  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22721  00328A  1017               	iorwf	??_write_eusartparser^0,w,c
 22722  00328C  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22723  00328E  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22724  003290  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22725  003292  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22726  003294  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22727  003296  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22728  003298  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22729  00329A  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22730  00329C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22731  00329E  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22732                           
 22733                           ;eusartparser.c: 340:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22734  0032A0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22735  0032A2  6E17               	movwf	??_write_eusartparser^0,c
 22736  0032A4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22737  0032A6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22738  0032A8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22739  0032AA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22740  0032AC  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22741  0032B0  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22742  0032B4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22743  0032B6  6A17               	clrf	??_write_eusartparser^0,c
 22744  0032B8  1C17               	comf	??_write_eusartparser^0,w,c
 22745  0032BA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22746  0032BC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22747  0032BE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22748  0032C0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22749  0032C2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22750  0032C4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22751  0032C6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22752  0032C8  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22753  0032CA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22754  0032CC  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22755  0032CE  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22756  0032D0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22757  0032D2  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22758  0032D4  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22759  0032D6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22760  0032D8  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22761  0032DA  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22762  0032DC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22763  0032DE  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22764                           
 22765                           ;eusartparser.c: 341:                 break;
 22766  0032E0  0012               	return	
 22767  0032E2                     l24458:
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;eusartparser.c: 343:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22771  0032E2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22772  0032E4  11D0               	iorwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22773  0032E6  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22774  0032E8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22775  0032EA  11D1               	iorwf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22776  0032EC  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22777  0032EE  0E00               	movlw	0
 22778  0032F0  11D2               	iorwf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22779  0032F2  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22780  0032F4  0E00               	movlw	0
 22781  0032F6  11D3               	iorwf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22782  0032F8  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22783                           
 22784                           ;eusartparser.c: 344:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22785  0032FA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22786  0032FC  6E17               	movwf	??_write_eusartparser^0,c
 22787  0032FE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22788  003300  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22789  003302  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22790  003304  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22791  003306  1C17               	comf	??_write_eusartparser^0,w,c
 22792  003308  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22793  00330A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22794  00330C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22795  00330E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22796  003310  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22797  003312  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22798  003314  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22799  003316  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22800  003318  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22801  00331A  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22802  00331C  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22803  00331E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22804  003320  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22805  003322  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22806  003324  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22807  003326  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22808  003328  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22809  00332A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22810  00332C  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22811                           
 22812                           ;eusartparser.c: 345:                 break;
 22813  00332E  0012               	return	
 22814  003330                     l24462:
 22815                           
 22816                           ; BSR set to: 0
 22817  003330  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22818  003332  6E17               	movwf	??_write_eusartparser^0,c
 22819  003334  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22820                           
 22821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22822                           ; Switch size 1, requested type "simple"
 22823                           ; Number of cases is 1, Range of values is 0 to 0
 22824                           ; switch strategies available:
 22825                           ; Name         Instructions Cycles
 22826                           ; simple_byte            4     3 (average)
 22827                           ;	Chosen strategy is simple_byte
 22828  003336  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22829  003338  0A00               	xorlw	0	; case 0
 22830  00333A  A4D8               	btfss	status,2,c
 22831  00333C  0012               	return	
 22832                           
 22833                           ; BSR set to: 0
 22834                           ; Switch size 1, requested type "simple"
 22835                           ; Number of cases is 43, Range of values is 0 to 51
 22836                           ; switch strategies available:
 22837                           ; Name         Instructions Cycles
 22838                           ; simple_byte          130    66 (average)
 22839                           ;	Chosen strategy is simple_byte
 22840  00333E  5017               	movf	??_write_eusartparser^0,w,c
 22841  003340  0A00               	xorlw	0	; case 0
 22842  003342  B4D8               	btfsc	status,2,c
 22843  003344  D5B5               	goto	l3617
 22844  003346  0A02               	xorlw	2	; case 2
 22845  003348  B4D8               	btfsc	status,2,c
 22846  00334A  D5BF               	goto	l3622
 22847  00334C  0A01               	xorlw	1	; case 3
 22848  00334E  B4D8               	btfsc	status,2,c
 22849  003350  D5E5               	goto	l3636
 22850  003352  0A06               	xorlw	6	; case 5
 22851  003354  B4D8               	btfsc	status,2,c
 22852  003356  D5BE               	goto	l3624
 22853  003358  0A02               	xorlw	2	; case 7
 22854  00335A  B4D8               	btfsc	status,2,c
 22855  00335C  D5D7               	goto	l3633
 22856  00335E  0A0F               	xorlw	15	; case 8
 22857  003360  B4D8               	btfsc	status,2,c
 22858  003362  D5EB               	goto	l3643
 22859  003364  0A02               	xorlw	2	; case 10
 22860  003366  B4D8               	btfsc	status,2,c
 22861  003368  D5DC               	goto	l3638
 22862  00336A  0A1A               	xorlw	26	; case 16
 22863  00336C  B4D8               	btfsc	status,2,c
 22864  00336E  D5A0               	goto	l3617
 22865  003370  0A01               	xorlw	1	; case 17
 22866  003372  B4D8               	btfsc	status,2,c
 22867  003374  D5A2               	goto	l3619
 22868  003376  0A03               	xorlw	3	; case 18
 22869  003378  B4D8               	btfsc	status,2,c
 22870  00337A  D5A4               	goto	l3620
 22871  00337C  0A01               	xorlw	1	; case 19
 22872  00337E  B4D8               	btfsc	status,2,c
 22873  003380  D5A4               	goto	l3622
 22874  003382  0A07               	xorlw	7	; case 20
 22875  003384  B4D8               	btfsc	status,2,c
 22876  003386  D5A6               	goto	l3624
 22877  003388  0A01               	xorlw	1	; case 21
 22878  00338A  B4D8               	btfsc	status,2,c
 22879  00338C  D5A8               	goto	l3625
 22880  00338E  0A03               	xorlw	3	; case 22
 22881  003390  B4D8               	btfsc	status,2,c
 22882  003392  D5AA               	goto	l3626
 22883  003394  0A01               	xorlw	1	; case 23
 22884  003396  B4D8               	btfsc	status,2,c
 22885  003398  D5AA               	goto	l3627
 22886  00339A  0A0F               	xorlw	15	; case 24
 22887  00339C  B4D8               	btfsc	status,2,c
 22888  00339E  D5AA               	goto	l3628
 22889  0033A0  0A01               	xorlw	1	; case 25
 22890  0033A2  B4D8               	btfsc	status,2,c
 22891  0033A4  D5AA               	goto	l3629
 22892  0033A6  0A03               	xorlw	3	; case 26
 22893  0033A8  B4D8               	btfsc	status,2,c
 22894  0033AA  D5AA               	goto	l3630
 22895  0033AC  0A01               	xorlw	1	; case 27
 22896  0033AE  B4D8               	btfsc	status,2,c
 22897  0033B0  D5AA               	goto	l3631
 22898  0033B2  0A07               	xorlw	7	; case 28
 22899  0033B4  B4D8               	btfsc	status,2,c
 22900  0033B6  D5AA               	goto	l3633
 22901  0033B8  0A01               	xorlw	1	; case 29
 22902  0033BA  B4D8               	btfsc	status,2,c
 22903  0033BC  D5AA               	goto	l3634
 22904  0033BE  0A03               	xorlw	3	; case 30
 22905  0033C0  B4D8               	btfsc	status,2,c
 22906  0033C2  D5AC               	goto	l3636
 22907  0033C4  0A01               	xorlw	1	; case 31
 22908  0033C6  B4D8               	btfsc	status,2,c
 22909  0033C8  D5AC               	goto	l3638
 22910  0033CA  0A3F               	xorlw	63	; case 32
 22911  0033CC  B4D8               	btfsc	status,2,c
 22912  0033CE  D5AC               	goto	l3639
 22913  0033D0  0A01               	xorlw	1	; case 33
 22914  0033D2  B4D8               	btfsc	status,2,c
 22915  0033D4  D5AC               	goto	l3640
 22916  0033D6  0A03               	xorlw	3	; case 34
 22917  0033D8  B4D8               	btfsc	status,2,c
 22918  0033DA  D5AC               	goto	l3641
 22919  0033DC  0A01               	xorlw	1	; case 35
 22920  0033DE  B4D8               	btfsc	status,2,c
 22921  0033E0  D5AC               	goto	l3643
 22922  0033E2  0A07               	xorlw	7	; case 36
 22923  0033E4  B4D8               	btfsc	status,2,c
 22924  0033E6  D5AC               	goto	l3644
 22925  0033E8  0A01               	xorlw	1	; case 37
 22926  0033EA  B4D8               	btfsc	status,2,c
 22927  0033EC  D5AC               	goto	l3645
 22928  0033EE  0A03               	xorlw	3	; case 38
 22929  0033F0  B4D8               	btfsc	status,2,c
 22930  0033F2  D5AC               	goto	l3646
 22931  0033F4  0A01               	xorlw	1	; case 39
 22932  0033F6  B4D8               	btfsc	status,2,c
 22933  0033F8  D5AE               	goto	l24440
 22934  0033FA  0A0F               	xorlw	15	; case 40
 22935  0033FC  B4D8               	btfsc	status,2,c
 22936  0033FE  D5E4               	goto	l24442
 22937  003400  0A01               	xorlw	1	; case 41
 22938  003402  B4D8               	btfsc	status,2,c
 22939  003404  D608               	goto	l3649
 22940  003406  0A03               	xorlw	3	; case 42
 22941  003408  B4D8               	btfsc	status,2,c
 22942  00340A  D608               	goto	l24444
 22943  00340C  0A01               	xorlw	1	; case 43
 22944  00340E  B4D8               	btfsc	status,2,c
 22945  003410  D63E               	goto	l24446
 22946  003412  0A07               	xorlw	7	; case 44
 22947  003414  B4D8               	btfsc	status,2,c
 22948  003416  D662               	goto	l24448
 22949  003418  0A01               	xorlw	1	; case 45
 22950  00341A  B4D8               	btfsc	status,2,c
 22951  00341C  D698               	goto	l24450
 22952  00341E  0A03               	xorlw	3	; case 46
 22953  003420  B4D8               	btfsc	status,2,c
 22954  003422  D6BC               	goto	l3654
 22955  003424  0A01               	xorlw	1	; case 47
 22956  003426  B4D8               	btfsc	status,2,c
 22957  003428  D6BE               	goto	l3655
 22958  00342A  0A1F               	xorlw	31	; case 48
 22959  00342C  B4D8               	btfsc	status,2,c
 22960  00342E  D6C0               	goto	l24452
 22961  003430  0A01               	xorlw	1	; case 49
 22962  003432  B4D8               	btfsc	status,2,c
 22963  003434  D6F6               	goto	l24454
 22964  003436  0A03               	xorlw	3	; case 50
 22965  003438  B4D8               	btfsc	status,2,c
 22966  00343A  D71A               	goto	l24456
 22967  00343C  0A01               	xorlw	1	; case 51
 22968  00343E  A4D8               	btfss	status,2,c
 22969  003440  0012               	return	
 22970  003442  D74F               	goto	l24458
 22971  003444                     __end_of_write_eusartparser:
 22972                           	callstack 0
 22973                           
 22974 ;; *************** function _validateRemoteSerialNumber *****************
 22975 ;; Defined at:
 22976 ;;		line 27 in file "controlMemory_MC50.c"
 22977 ;; Parameters:    Size  Location     Type
 22978 ;;  serial          4   45[COMRAM] unsigned long 
 22979 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 22980 ;;  position        2   50[COMRAM] PTR unsigned char 
 22981 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 22982 ;; Auto vars:     Size  Location     Type
 22983 ;;  mask            4   52[COMRAM] unsigned long 
 22984 ;;  i               1   57[COMRAM] unsigned char 
 22985 ;;  j               1   56[COMRAM] unsigned char 
 22986 ;; Return value:  Size  Location     Type
 22987 ;;                  1    wreg      enum E10539
 22988 ;; Registers used:
 22989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22990 ;; Tracked objects:
 22991 ;;		On entry : 3F/0
 22992 ;;		On exit  : 3F/0
 22993 ;;		Unchanged: 0/0
 22994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22995 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22997 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22998 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22999 ;;Total ram usage:       21 bytes
 23000 ;; Hardware stack levels used: 1
 23001 ;; Hardware stack levels required when called: 13
 23002 ;; This function calls:
 23003 ;;		_i2c_readDataBlock
 23004 ;; This function is called by:
 23005 ;;		_keeloqDecryptPacket
 23006 ;;		_DecryptPacket_12BIT
 23007 ;;		_controlSelectRemote
 23008 ;;		_eusartparser
 23009 ;; This function uses a non-reentrant model
 23010 ;;
 23011                           
 23012                           	psect	text76
 23013  0060CC                     __ptext76:
 23014                           	callstack 0
 23015  0060CC                     _validateRemoteSerialNumber:
 23016                           	callstack 14
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;controlMemory_MC50.c: 29:     char j=0;
 23020                           
 23021                           ; BSR set to: 0
 23022                           ;incstack = 0
 23023  0060CC  0E00               	movlw	0
 23024  0060CE  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23025                           
 23026                           ; BSR set to: 0
 23027                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 23028  0060D0  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 23029  0060D2  A4D8               	btfss	status,2,c
 23030  0060D4  D009               	goto	l1436
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 23034  0060D6  0EFF               	movlw	255
 23035  0060D8  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 23036  0060DA  0EFF               	movlw	255
 23037  0060DC  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 23038  0060DE  0EFF               	movlw	255
 23039  0060E0  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 23040  0060E2  0E0F               	movlw	15
 23041  0060E4  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 23042                           
 23043                           ;controlMemory_MC50.c: 36:     }
 23044  0060E6  D004               	goto	l20676
 23045  0060E8                     l1436:
 23046                           
 23047                           ; BSR set to: 0
 23048                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 23049  0060E8  6835               	setf	validateRemoteSerialNumber@mask^0,c
 23050  0060EA  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 23051  0060EC  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 23052  0060EE  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 23053  0060F0                     l20676:
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 23057  0060F0  0E00               	movlw	0
 23058  0060F2  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23059  0060F4  D056               	goto	l20694
 23060  0060F6                     l20678:
 23061                           
 23062                           ; BSR set to: 0
 23063                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 23064  0060F6  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23065  0060FA  0E03               	movlw	3
 23066  0060FC  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23067  0060FE  A4D8               	btfss	status,2,c
 23068  006100  D01C               	goto	l20684
 23069                           
 23070                           ; BSR set to: 0
 23071                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 23072  006102  0E00               	movlw	0
 23073  006104  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23074                           
 23075                           ; BSR set to: 0
 23076                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23077  006106  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23078  006108  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23079  00610A  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23080  00610C  90D8               	bcf	status,0,c
 23081  00610E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23082  006110  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23083  006112  90D8               	bcf	status,0,c
 23084  006114  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23085  006116  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23086  006118  0E00               	movlw	0
 23087  00611A  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23088  00611C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23089  00611E  0E02               	movlw	2
 23090  006120  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23091  006122  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23092  006124  0EA0               	movlw	low _memoryTEMP
 23093  006126  6E24               	movwf	i2c_readDataBlock@data^0,c
 23094  006128  0E02               	movlw	high _memoryTEMP
 23095  00612A  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23096  00612C  0E00               	movlw	0
 23097  00612E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23098  006130  0E10               	movlw	16
 23099  006132  6E26               	movwf	i2c_readDataBlock@len^0,c
 23100  006134  0E50               	movlw	80
 23101  006136  EC59  F044         	call	_i2c_readDataBlock
 23102  00613A                     l20684:
 23103                           
 23104                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23105  00613A  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23106  00613C  0D04               	mullw	4
 23107  00613E  0EA0               	movlw	low _memoryTEMP
 23108  006140  24F3               	addwf	243,w,c
 23109  006142  6ED9               	movwf	fsr2l,c
 23110  006144  0E02               	movlw	high _memoryTEMP
 23111  006146  20F4               	addwfc	prodh,w,c
 23112  006148  6EDA               	movwf	fsr2h,c
 23113  00614A  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23114  00614E  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23115  006152  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23116  006156  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23117  00615A  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23118  00615C  0100               	movlb	0	; () banked
 23119  00615E  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23120  006160  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23121  006162  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23122  006164  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23123  006166  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23124  006168  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23125  00616A  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23126  00616C  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23127  00616E  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23128  006170  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23129  006172  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23130  006174  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23131  006176  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23132  006178  E112               	bnz	l20692
 23133  00617A  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23134  00617C  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23135  00617E  E10F               	bnz	l20692
 23136  006180  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23137  006182  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23138  006184  E10C               	bnz	l20692
 23139  006186  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23140  006188  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23141  00618A  A4D8               	btfss	status,2,c
 23142  00618C  D008               	goto	l20692
 23143                           
 23144                           ; BSR set to: 0
 23145                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 23146  00618E  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23147  006192  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23148  006196  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23149                           
 23150                           ; BSR set to: 0
 23151                           ;controlMemory_MC50.c: 54:             return TypeFull;
 23152  00619A  0E01               	movlw	1
 23153  00619C  0012               	return	
 23154  00619E                     l20692:
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;controlMemory_MC50.c: 57:         j++;
 23158  00619E  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23159                           
 23160                           ;controlMemory_MC50.c: 59:     }
 23161  0061A0  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23162  0061A2                     l20694:
 23163                           
 23164                           ; BSR set to: 0
 23165  0061A2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 23166  0061A4  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23167  0061A6  A0D8               	btfss	status,0,c
 23168  0061A8  D7A6               	goto	l20678
 23169                           
 23170                           ; BSR set to: 0
 23171                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 23172  0061AA  0E00               	movlw	0
 23173  0061AC  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23174  0061AE  D056               	goto	l20714
 23175  0061B0                     l20698:
 23176                           
 23177                           ; BSR set to: 0
 23178                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 23179  0061B0  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23180  0061B4  0E03               	movlw	3
 23181  0061B6  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23182  0061B8  A4D8               	btfss	status,2,c
 23183  0061BA  D01C               	goto	l20704
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 23187  0061BC  0E00               	movlw	0
 23188  0061BE  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23189                           
 23190                           ; BSR set to: 0
 23191                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23192  0061C0  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23193  0061C2  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23194  0061C4  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23195  0061C6  90D8               	bcf	status,0,c
 23196  0061C8  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23197  0061CA  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23198  0061CC  90D8               	bcf	status,0,c
 23199  0061CE  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23200  0061D0  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23201  0061D2  0E00               	movlw	0
 23202  0061D4  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23203  0061D6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23204  0061D8  0E05               	movlw	5
 23205  0061DA  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23206  0061DC  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23207  0061DE  0EA0               	movlw	low _memoryTEMP
 23208  0061E0  6E24               	movwf	i2c_readDataBlock@data^0,c
 23209  0061E2  0E02               	movlw	high _memoryTEMP
 23210  0061E4  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23211  0061E6  0E00               	movlw	0
 23212  0061E8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23213  0061EA  0E10               	movlw	16
 23214  0061EC  6E26               	movwf	i2c_readDataBlock@len^0,c
 23215  0061EE  0E50               	movlw	80
 23216  0061F0  EC59  F044         	call	_i2c_readDataBlock
 23217  0061F4                     l20704:
 23218                           
 23219                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23220  0061F4  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23221  0061F6  0D04               	mullw	4
 23222  0061F8  0EA0               	movlw	low _memoryTEMP
 23223  0061FA  24F3               	addwf	243,w,c
 23224  0061FC  6ED9               	movwf	fsr2l,c
 23225  0061FE  0E02               	movlw	high _memoryTEMP
 23226  006200  20F4               	addwfc	prodh,w,c
 23227  006202  6EDA               	movwf	fsr2h,c
 23228  006204  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23229  006208  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23230  00620C  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23231  006210  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23232  006214  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23233  006216  0100               	movlb	0	; () banked
 23234  006218  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23235  00621A  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23236  00621C  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23237  00621E  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23238  006220  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23239  006222  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23240  006224  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23241  006226  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23242  006228  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23243  00622A  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23244  00622C  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23245  00622E  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23246  006230  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23247  006232  E112               	bnz	l20712
 23248  006234  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23249  006236  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23250  006238  E10F               	bnz	l20712
 23251  00623A  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23252  00623C  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23253  00623E  E10C               	bnz	l20712
 23254  006240  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23255  006242  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23256  006244  A4D8               	btfss	status,2,c
 23257  006246  D008               	goto	l20712
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 23261  006248  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23262  00624C  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23263  006250  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23264                           
 23265                           ; BSR set to: 0
 23266                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 23267  006254  0E02               	movlw	2
 23268  006256  0012               	return	
 23269  006258                     l20712:
 23270                           
 23271                           ; BSR set to: 0
 23272                           ;controlMemory_MC50.c: 75:         j++;
 23273  006258  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23274                           
 23275                           ;controlMemory_MC50.c: 76:     }
 23276  00625A  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23277  00625C                     l20714:
 23278                           
 23279                           ; BSR set to: 0
 23280  00625C  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23281  00625E  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23282  006260  A0D8               	btfss	status,0,c
 23283  006262  D7A6               	goto	l20698
 23284                           
 23285                           ; BSR set to: 0
 23286                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23287  006264  0E00               	movlw	0
 23288                           
 23289                           ; BSR set to: 0
 23290  006266  0012               	return		;funcret
 23291  006268                     __end_of_validateRemoteSerialNumber:
 23292                           	callstack 0
 23293                           
 23294 ;; *************** function _saveNewSerial *****************
 23295 ;; Defined at:
 23296 ;;		line 81 in file "controlMemory_MC50.c"
 23297 ;; Parameters:    Size  Location     Type
 23298 ;;  cmdType         1    wreg     unsigned char 
 23299 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 23300 ;;  position        1    4[BANK0 ] unsigned char 
 23301 ;; Auto vars:     Size  Location     Type
 23302 ;;  cmdType         1   57[COMRAM] unsigned char 
 23303 ;; Return value:  Size  Location     Type
 23304 ;;                  1    wreg      void 
 23305 ;; Registers used:
 23306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23307 ;; Tracked objects:
 23308 ;;		On entry : 3E/1
 23309 ;;		On exit  : 0/0
 23310 ;;		Unchanged: 0/0
 23311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23312 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23314 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23315 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23316 ;;Total ram usage:        8 bytes
 23317 ;; Hardware stack levels used: 1
 23318 ;; Hardware stack levels required when called: 13
 23319 ;; This function calls:
 23320 ;;		_i2c_writeNBytes
 23321 ;; This function is called by:
 23322 ;;		_controlSelectRemote
 23323 ;;		_eusartparser
 23324 ;; This function uses a non-reentrant model
 23325 ;;
 23326                           
 23327                           	psect	text77
 23328  008A0C                     __ptext77:
 23329                           	callstack 0
 23330  008A0C                     _saveNewSerial:
 23331                           	callstack 14
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;incstack = 0
 23335                           ;saveNewSerial@cmdType stored from wreg
 23336  008A0C  6E3A               	movwf	saveNewSerial@cmdType^0,c
 23337                           
 23338                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 23339  008A0E  503A               	movf	saveNewSerial@cmdType^0,w,c
 23340  008A10  A4D8               	btfss	status,2,c
 23341  008A12  D01A               	goto	l20724
 23342                           
 23343                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 23344  008A14  0100               	movlb	0	; () banked
 23345  008A16  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23346  008A18  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23347  008A1A  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23348  008A1C  90D8               	bcf	status,0,c
 23349  008A1E  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23350  008A20  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23351  008A22  90D8               	bcf	status,0,c
 23352  008A24  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23353  008A26  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23354  008A28  0E00               	movlw	0
 23355  008A2A  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23356  008A2C  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23357  008A2E  0E02               	movlw	2
 23358  008A30  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23359  008A32  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23360  008A34  0ED8               	movlw	low saveNewSerial@tempSerial
 23361  008A36  6E24               	movwf	i2c_writeNBytes@data^0,c
 23362  008A38  0E00               	movlw	0
 23363  008A3A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23364  008A3C  0E04               	movlw	4
 23365  008A3E  6E25               	movwf	i2c_writeNBytes@len^0,c
 23366  008A40  0E50               	movlw	80
 23367  008A42  EC94  F044         	call	_i2c_writeNBytes
 23368                           
 23369                           ;controlMemory_MC50.c: 87:     }
 23370  008A46  0012               	return	
 23371  008A48                     l20724:
 23372                           
 23373                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 23374  008A48  0100               	movlb	0	; () banked
 23375  008A4A  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23376  008A4C  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23377  008A4E  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23378  008A50  90D8               	bcf	status,0,c
 23379  008A52  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23380  008A54  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23381  008A56  90D8               	bcf	status,0,c
 23382  008A58  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23383  008A5A  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23384  008A5C  0E00               	movlw	0
 23385  008A5E  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23386  008A60  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23387  008A62  0E05               	movlw	5
 23388  008A64  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23389  008A66  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23390  008A68  0ED8               	movlw	low saveNewSerial@tempSerial
 23391  008A6A  6E24               	movwf	i2c_writeNBytes@data^0,c
 23392  008A6C  0E00               	movlw	0
 23393  008A6E  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23394  008A70  0E04               	movlw	4
 23395  008A72  6E25               	movwf	i2c_writeNBytes@len^0,c
 23396  008A74  0E50               	movlw	80
 23397  008A76  EC94  F044         	call	_i2c_writeNBytes
 23398  008A7A  0012               	return		;funcret
 23399  008A7C                     __end_of_saveNewSerial:
 23400                           	callstack 0
 23401                           
 23402 ;; *************** function _read_eusartparser *****************
 23403 ;; Defined at:
 23404 ;;		line 12 in file "eusartparser.c"
 23405 ;; Parameters:    Size  Location     Type
 23406 ;;  package         2   23[COMRAM] PTR struct package_t
 23407 ;;		 -> main@package(7), 
 23408 ;; Auto vars:     Size  Location     Type
 23409 ;;		None
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  1    wreg      void 
 23412 ;; Registers used:
 23413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23414 ;; Tracked objects:
 23415 ;;		On entry : 3F/0
 23416 ;;		On exit  : 0/0
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23423 ;;Total ram usage:        4 bytes
 23424 ;; Hardware stack levels used: 1
 23425 ;; Hardware stack levels required when called: 6
 23426 ;; This function calls:
 23427 ;;		_write_package
 23428 ;; This function is called by:
 23429 ;;		_eusartparser
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           	psect	text78
 23434  0028D8                     __ptext78:
 23435                           	callstack 0
 23436  0028D8                     _read_eusartparser:
 23437                           	callstack 23
 23438                           
 23439                           ; BSR set to: 0
 23440                           ;eusartparser.c: 13:         switch(package->address){
 23441                           
 23442                           ;incstack = 0
 23443  0028D8  D25C               	goto	l27388
 23444  0028DA                     l27244:
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;eusartparser.c: 16:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 23448  0028DA  EE20 F003          	lfsr	2,3
 23449  0028DE  5018               	movf	read_eusartparser@package^0,w,c
 23450  0028E0  26D9               	addwf	fsr2l,f,c
 23451  0028E2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23452  0028E4  22DA               	addwfc	fsr2h,f,c
 23453  0028E6  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 23454                           
 23455                           ;eusartparser.c: 17:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 23456  0028EA  EE20 F002          	lfsr	2,2
 23457  0028EE  5018               	movf	read_eusartparser@package^0,w,c
 23458  0028F0  26D9               	addwf	fsr2l,f,c
 23459  0028F2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23460  0028F4  22DA               	addwfc	fsr2h,f,c
 23461  0028F6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 23462  0028FA                     l27246:
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;eusartparser.c: 18:                 write_package(*package);
 23466  0028FA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23467  0028FE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23468  002902  EE00  F011         	lfsr	0,write_package@package
 23469  002906  0E06               	movlw	6
 23470  002908                     u33281:
 23471  002908  CFDB FFEB          	movff	plusw2,plusw0
 23472  00290C  06E8               	decf	wreg,f,c
 23473  00290E  E2FC               	bc	u33281
 23474  002910  ECB5  F04B         	call	_write_package	;wreg free
 23475                           
 23476                           ;eusartparser.c: 19:                 break;
 23477  002914  0012               	return	
 23478  002916                     l27248:
 23479                           
 23480                           ; BSR set to: 0
 23481                           ;eusartparser.c: 21:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 23482  002916  EE20 F003          	lfsr	2,3
 23483  00291A  5018               	movf	read_eusartparser@package^0,w,c
 23484  00291C  26D9               	addwf	fsr2l,f,c
 23485  00291E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23486  002920  22DA               	addwfc	fsr2h,f,c
 23487  002922  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 23488                           
 23489                           ;eusartparser.c: 22:                 package->data.data8[0]=var_sys_NVM.motorPower;
 23490  002926  EE20 F002          	lfsr	2,2
 23491  00292A  5018               	movf	read_eusartparser@package^0,w,c
 23492  00292C  26D9               	addwf	fsr2l,f,c
 23493  00292E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23494  002930  22DA               	addwfc	fsr2h,f,c
 23495  002932  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 23496  002936  D7E1               	goto	l27246
 23497  002938                     l27252:
 23498                           
 23499                           ; BSR set to: 0
 23500                           ;eusartparser.c: 26:                 package->data.data8[1]=var_sys_NVM.walkTime;
 23501  002938  EE20 F003          	lfsr	2,3
 23502  00293C  5018               	movf	read_eusartparser@package^0,w,c
 23503  00293E  26D9               	addwf	fsr2l,f,c
 23504  002940  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23505  002942  22DA               	addwfc	fsr2h,f,c
 23506  002944  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 23507  002948  D117               	goto	L99
 23508  00294A                     l27256:
 23509                           
 23510                           ; BSR set to: 0
 23511                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 23512  00294A  EE20 F003          	lfsr	2,3
 23513  00294E  5018               	movf	read_eusartparser@package^0,w,c
 23514  002950  26D9               	addwf	fsr2l,f,c
 23515  002952  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23516  002954  22DA               	addwfc	fsr2h,f,c
 23517  002956  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 23518                           
 23519                           ;eusartparser.c: 33:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 23520  00295A  EE20 F002          	lfsr	2,2
 23521  00295E  5018               	movf	read_eusartparser@package^0,w,c
 23522  002960  26D9               	addwf	fsr2l,f,c
 23523  002962  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23524  002964  22DA               	addwfc	fsr2h,f,c
 23525  002966  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 23526  00296A  D7C7               	goto	l27246
 23527  00296C                     l27260:
 23528                           
 23529                           ; BSR set to: 0
 23530                           ;eusartparser.c: 38:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 23531  00296C  EE20 F003          	lfsr	2,3
 23532  002970  5018               	movf	read_eusartparser@package^0,w,c
 23533  002972  26D9               	addwf	fsr2l,f,c
 23534  002974  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23535  002976  22DA               	addwfc	fsr2h,f,c
 23536  002978  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 23537                           
 23538                           ;eusartparser.c: 39:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 23539  00297C  EE20 F002          	lfsr	2,2
 23540  002980  5018               	movf	read_eusartparser@package^0,w,c
 23541  002982  26D9               	addwf	fsr2l,f,c
 23542  002984  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23543  002986  22DA               	addwfc	fsr2h,f,c
 23544  002988  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 23545  00298C  D7B6               	goto	l27246
 23546  00298E                     l27264:
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;eusartparser.c: 43:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 23550  00298E  EE20 F003          	lfsr	2,3
 23551  002992  5018               	movf	read_eusartparser@package^0,w,c
 23552  002994  26D9               	addwf	fsr2l,f,c
 23553  002996  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23554  002998  22DA               	addwfc	fsr2h,f,c
 23555  00299A  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 23556                           
 23557                           ;eusartparser.c: 44:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 23558  00299E  EE20 F002          	lfsr	2,2
 23559  0029A2  5018               	movf	read_eusartparser@package^0,w,c
 23560  0029A4  26D9               	addwf	fsr2l,f,c
 23561  0029A6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23562  0029A8  22DA               	addwfc	fsr2h,f,c
 23563  0029AA  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 23564  0029AE  D7A5               	goto	l27246
 23565  0029B0                     l27268:
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 23569  0029B0  EE20 F003          	lfsr	2,3
 23570  0029B4  5018               	movf	read_eusartparser@package^0,w,c
 23571  0029B6  26D9               	addwf	fsr2l,f,c
 23572  0029B8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23573  0029BA  22DA               	addwfc	fsr2h,f,c
 23574  0029BC  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 23575  0029C0  D0DB               	goto	L99
 23576  0029C2                     l27272:
 23577                           
 23578                           ; BSR set to: 0
 23579                           ;eusartparser.c: 53:                 package->data.data8[1]=var_sys_NVM.operationMode;
 23580  0029C2  EE20 F003          	lfsr	2,3
 23581  0029C6  5018               	movf	read_eusartparser@package^0,w,c
 23582  0029C8  26D9               	addwf	fsr2l,f,c
 23583  0029CA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23584  0029CC  22DA               	addwfc	fsr2h,f,c
 23585  0029CE  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 23586  0029D2  D0D2               	goto	L99
 23587  0029D4                     l27276:
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;eusartparser.c: 58:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 23591  0029D4  EE20 F003          	lfsr	2,3
 23592  0029D8  5018               	movf	read_eusartparser@package^0,w,c
 23593  0029DA  26D9               	addwf	fsr2l,f,c
 23594  0029DC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23595  0029DE  22DA               	addwfc	fsr2h,f,c
 23596  0029E0  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 23597  0029E4  D0C9               	goto	L99
 23598  0029E6                     l27280:
 23599                           
 23600                           ; BSR set to: 0
 23601                           ;eusartparser.c: 63:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 23602  0029E6  EE20 F003          	lfsr	2,3
 23603  0029EA  5018               	movf	read_eusartparser@package^0,w,c
 23604  0029EC  26D9               	addwf	fsr2l,f,c
 23605  0029EE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23606  0029F0  22DA               	addwfc	fsr2h,f,c
 23607  0029F2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 23608  0029F6  D0C0               	goto	L99
 23609  0029F8                     l27284:
 23610                           
 23611                           ; BSR set to: 0
 23612                           ;eusartparser.c: 68:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 23613  0029F8  EE20 F003          	lfsr	2,3
 23614  0029FC  5018               	movf	read_eusartparser@package^0,w,c
 23615  0029FE  26D9               	addwf	fsr2l,f,c
 23616  002A00  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23617  002A02  22DA               	addwfc	fsr2h,f,c
 23618  002A04  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 23619  002A08  D0B7               	goto	L99
 23620  002A0A                     l27288:
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;eusartparser.c: 74:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 23624  002A0A  EE20 F003          	lfsr	2,3
 23625  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 23626  002A10  26D9               	addwf	fsr2l,f,c
 23627  002A12  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23628  002A14  22DA               	addwfc	fsr2h,f,c
 23629  002A16  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 23630  002A1A  D0AE               	goto	L99
 23631  002A1C                     l27292:
 23632                           
 23633                           ; BSR set to: 0
 23634                           ;eusartparser.c: 80:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 23635  002A1C  EE20 F003          	lfsr	2,3
 23636  002A20  5018               	movf	read_eusartparser@package^0,w,c
 23637  002A22  26D9               	addwf	fsr2l,f,c
 23638  002A24  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23639  002A26  22DA               	addwfc	fsr2h,f,c
 23640  002A28  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 23641  002A2C  D0A5               	goto	L99
 23642  002A2E                     l27296:
 23643                           
 23644                           ; BSR set to: 0
 23645                           ;eusartparser.c: 85:                 package->data.data8[1]=var_sys_NVM.softstop;
 23646  002A2E  EE20 F003          	lfsr	2,3
 23647  002A32  5018               	movf	read_eusartparser@package^0,w,c
 23648  002A34  26D9               	addwf	fsr2l,f,c
 23649  002A36  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23650  002A38  22DA               	addwfc	fsr2h,f,c
 23651  002A3A  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 23652                           
 23653                           ;eusartparser.c: 86:                 package->data.data8[0]=var_sys_NVM.softStart;
 23654  002A3E  EE20 F002          	lfsr	2,2
 23655  002A42  5018               	movf	read_eusartparser@package^0,w,c
 23656  002A44  26D9               	addwf	fsr2l,f,c
 23657  002A46  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23658  002A48  22DA               	addwfc	fsr2h,f,c
 23659  002A4A  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 23660  002A4E  D755               	goto	l27246
 23661  002A50                     l27300:
 23662                           
 23663                           ; BSR set to: 0
 23664                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 23665  002A50  EE20 F003          	lfsr	2,3
 23666  002A54  5018               	movf	read_eusartparser@package^0,w,c
 23667  002A56  26D9               	addwf	fsr2l,f,c
 23668  002A58  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23669  002A5A  22DA               	addwfc	fsr2h,f,c
 23670  002A5C  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 23671  002A60  D08B               	goto	L99
 23672  002A62                     l27304:
 23673                           
 23674                           ; BSR set to: 0
 23675                           ;eusartparser.c: 97:                 package->data.data8[1]=var_sys_NVM.folow_me;
 23676  002A62  EE20 F003          	lfsr	2,3
 23677  002A66  5018               	movf	read_eusartparser@package^0,w,c
 23678  002A68  26D9               	addwf	fsr2l,f,c
 23679  002A6A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23680  002A6C  22DA               	addwfc	fsr2h,f,c
 23681  002A6E  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 23682  002A72  D082               	goto	L99
 23683  002A74                     l27308:
 23684                           
 23685                           ; BSR set to: 0
 23686                           ;eusartparser.c: 102:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 23687  002A74  EE20 F003          	lfsr	2,3
 23688  002A78  5018               	movf	read_eusartparser@package^0,w,c
 23689  002A7A  26D9               	addwf	fsr2l,f,c
 23690  002A7C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23691  002A7E  22DA               	addwfc	fsr2h,f,c
 23692  002A80  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 23693  002A84  D079               	goto	L99
 23694  002A86                     l27312:
 23695                           
 23696                           ; BSR set to: 0
 23697                           ;eusartparser.c: 107:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 23698  002A86  EE20 F003          	lfsr	2,3
 23699  002A8A  5018               	movf	read_eusartparser@package^0,w,c
 23700  002A8C  26D9               	addwf	fsr2l,f,c
 23701  002A8E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23702  002A90  22DA               	addwfc	fsr2h,f,c
 23703  002A92  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 23704  002A96  D070               	goto	L99
 23705  002A98                     l27316:
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;eusartparser.c: 112:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 23709  002A98  EE20 F003          	lfsr	2,3
 23710  002A9C  5018               	movf	read_eusartparser@package^0,w,c
 23711  002A9E  26D9               	addwf	fsr2l,f,c
 23712  002AA0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23713  002AA2  22DA               	addwfc	fsr2h,f,c
 23714  002AA4  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 23715  002AA8  D067               	goto	L99
 23716  002AAA                     l27320:
 23717                           
 23718                           ; BSR set to: 0
 23719                           ;eusartparser.c: 118:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 23720  002AAA  EE20 F003          	lfsr	2,3
 23721  002AAE  5018               	movf	read_eusartparser@package^0,w,c
 23722  002AB0  26D9               	addwf	fsr2l,f,c
 23723  002AB2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23724  002AB4  22DA               	addwfc	fsr2h,f,c
 23725  002AB6  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 23726  002ABA  D05E               	goto	L99
 23727  002ABC                     l27324:
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;eusartparser.c: 123:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 23731  002ABC  EE20 F003          	lfsr	2,3
 23732  002AC0  5018               	movf	read_eusartparser@package^0,w,c
 23733  002AC2  26D9               	addwf	fsr2l,f,c
 23734  002AC4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23735  002AC6  22DA               	addwfc	fsr2h,f,c
 23736  002AC8  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 23737  002ACC  D055               	goto	L99
 23738  002ACE                     l27328:
 23739                           
 23740                           ; BSR set to: 0
 23741                           ;eusartparser.c: 128:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 23742  002ACE  EE20 F003          	lfsr	2,3
 23743  002AD2  5018               	movf	read_eusartparser@package^0,w,c
 23744  002AD4  26D9               	addwf	fsr2l,f,c
 23745  002AD6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23746  002AD8  22DA               	addwfc	fsr2h,f,c
 23747  002ADA  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 23748  002ADE  D04C               	goto	L99
 23749  002AE0                     l27332:
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;eusartparser.c: 133:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 23753  002AE0  EE20 F003          	lfsr	2,3
 23754  002AE4  5018               	movf	read_eusartparser@package^0,w,c
 23755  002AE6  26D9               	addwf	fsr2l,f,c
 23756  002AE8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23757  002AEA  22DA               	addwfc	fsr2h,f,c
 23758  002AEC  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 23759                           
 23760                           ;eusartparser.c: 134:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 23761  002AF0  EE20 F002          	lfsr	2,2
 23762  002AF4  5018               	movf	read_eusartparser@package^0,w,c
 23763  002AF6  26D9               	addwf	fsr2l,f,c
 23764  002AF8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23765  002AFA  22DA               	addwfc	fsr2h,f,c
 23766  002AFC  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 23767  002B00  D6FC               	goto	l27246
 23768  002B02                     l27336:
 23769                           
 23770                           ; BSR set to: 0
 23771                           ;eusartparser.c: 138:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 23772  002B02  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 23773  002B06  EE10 F002          	lfsr	1,2
 23774  002B0A  5018               	movf	read_eusartparser@package^0,w,c
 23775  002B0C  26E1               	addwf	fsr1l,f,c
 23776  002B0E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23777  002B10  22E2               	addwfc	fsr1h,f,c
 23778  002B12  CFDE FFE6          	movff	postinc2,postinc1
 23779  002B16  CFDD FFE5          	movff	postdec2,postdec1
 23780                           
 23781                           ; BSR set to: 0
 23782                           ;eusartparser.c: 139:                 write_package(*package);
 23783  002B1A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23784  002B1E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23785  002B22  EE00  F011         	lfsr	0,write_package@package
 23786  002B26  0E06               	movlw	6
 23787  002B28                     u33291:
 23788  002B28  CFDB FFEB          	movff	plusw2,plusw0
 23789  002B2C  06E8               	decf	wreg,f,c
 23790  002B2E  E2FC               	bc	u33291
 23791  002B30  ECB5  F04B         	call	_write_package	;wreg free
 23792                           
 23793                           ;eusartparser.c: 140:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 23794  002B34  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 23795  002B38  EE10 F002          	lfsr	1,2
 23796  002B3C  5018               	movf	read_eusartparser@package^0,w,c
 23797  002B3E  26E1               	addwf	fsr1l,f,c
 23798  002B40  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23799  002B42  22E2               	addwfc	fsr1h,f,c
 23800  002B44  CFDE FFE6          	movff	postinc2,postinc1
 23801  002B48  CFDD FFE5          	movff	postdec2,postdec1
 23802                           
 23803                           ;eusartparser.c: 141:                 write_package(*package);
 23804  002B4C  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23805  002B50  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23806  002B54  EE00  F011         	lfsr	0,write_package@package
 23807  002B58  0E06               	movlw	6
 23808  002B5A                     u33301:
 23809  002B5A  CFDB FFEB          	movff	plusw2,plusw0
 23810  002B5E  06E8               	decf	wreg,f,c
 23811  002B60  E2FC               	bc	u33301
 23812  002B62  ECB5  F04B         	call	_write_package	;wreg free
 23813                           
 23814                           ;eusartparser.c: 142:                 break;
 23815  002B66  0012               	return	
 23816  002B68                     l27342:
 23817                           
 23818                           ; BSR set to: 0
 23819                           ;eusartparser.c: 144:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 23820  002B68  EE20 F003          	lfsr	2,3
 23821  002B6C  5018               	movf	read_eusartparser@package^0,w,c
 23822  002B6E  26D9               	addwf	fsr2l,f,c
 23823  002B70  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23824  002B72  22DA               	addwfc	fsr2h,f,c
 23825  002B74  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 23826  002B78                     L99:
 23827                           
 23828                           ;eusartparser.c: 145:                 package->data.data8[0]=0x00;
 23829  002B78  EE20 F002          	lfsr	2,2
 23830  002B7C  5018               	movf	read_eusartparser@package^0,w,c
 23831  002B7E  26D9               	addwf	fsr2l,f,c
 23832  002B80  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23833  002B82  22DA               	addwfc	fsr2h,f,c
 23834  002B84  0E00               	movlw	0
 23835  002B86  6EDF               	movwf	indf2,c
 23836  002B88  D6B8               	goto	l27246
 23837  002B8A                     l27346:
 23838                           
 23839                           ; BSR set to: 0
 23840                           ;eusartparser.c: 149:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 23841  002B8A  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 23842  002B8E  EE10 F002          	lfsr	1,2
 23843  002B92  5018               	movf	read_eusartparser@package^0,w,c
 23844  002B94  26E1               	addwf	fsr1l,f,c
 23845  002B96  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23846  002B98  22E2               	addwfc	fsr1h,f,c
 23847  002B9A  CFDE FFE6          	movff	postinc2,postinc1
 23848  002B9E  CFDD FFE5          	movff	postdec2,postdec1
 23849                           
 23850                           ; BSR set to: 0
 23851                           ;eusartparser.c: 150:                 write_package(*package);
 23852  002BA2  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23853  002BA6  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23854  002BAA  EE00  F011         	lfsr	0,write_package@package
 23855  002BAE  0E06               	movlw	6
 23856  002BB0                     u33311:
 23857  002BB0  CFDB FFEB          	movff	plusw2,plusw0
 23858  002BB4  06E8               	decf	wreg,f,c
 23859  002BB6  E2FC               	bc	u33311
 23860  002BB8  ECB5  F04B         	call	_write_package	;wreg free
 23861                           
 23862                           ;eusartparser.c: 151:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 23863  002BBC  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23864  002BC0  EE10 F002          	lfsr	1,2
 23865  002BC4  5018               	movf	read_eusartparser@package^0,w,c
 23866  002BC6  26E1               	addwf	fsr1l,f,c
 23867  002BC8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23868  002BCA  22E2               	addwfc	fsr1h,f,c
 23869  002BCC  CFDE FFE6          	movff	postinc2,postinc1
 23870  002BD0  CFDD FFE5          	movff	postdec2,postdec1
 23871                           
 23872                           ;eusartparser.c: 152:                 write_package(*package);
 23873  002BD4  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23874  002BD8  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23875  002BDC  EE00  F011         	lfsr	0,write_package@package
 23876  002BE0  0E06               	movlw	6
 23877  002BE2                     u33321:
 23878  002BE2  CFDB FFEB          	movff	plusw2,plusw0
 23879  002BE6  06E8               	decf	wreg,f,c
 23880  002BE8  E2FC               	bc	u33321
 23881  002BEA  ECB5  F04B         	call	_write_package	;wreg free
 23882                           
 23883                           ;eusartparser.c: 153:                 break;
 23884  002BEE  0012               	return	
 23885  002BF0                     l27352:
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;eusartparser.c: 155:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 23889  002BF0  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23890  002BF4  EE10 F002          	lfsr	1,2
 23891  002BF8  5018               	movf	read_eusartparser@package^0,w,c
 23892  002BFA  26E1               	addwf	fsr1l,f,c
 23893  002BFC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23894  002BFE  22E2               	addwfc	fsr1h,f,c
 23895  002C00  CFDE FFE6          	movff	postinc2,postinc1
 23896  002C04  CFDD FFE5          	movff	postdec2,postdec1
 23897                           
 23898                           ; BSR set to: 0
 23899                           ;eusartparser.c: 156:                 write_package(*package);
 23900  002C08  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23901  002C0C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23902  002C10  EE00  F011         	lfsr	0,write_package@package
 23903  002C14  0E06               	movlw	6
 23904  002C16                     u33331:
 23905  002C16  CFDB FFEB          	movff	plusw2,plusw0
 23906  002C1A  06E8               	decf	wreg,f,c
 23907  002C1C  E2FC               	bc	u33331
 23908  002C1E  ECB5  F04B         	call	_write_package	;wreg free
 23909                           
 23910                           ;eusartparser.c: 157:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 23911  002C22  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23912  002C26  EE10 F002          	lfsr	1,2
 23913  002C2A  5018               	movf	read_eusartparser@package^0,w,c
 23914  002C2C  26E1               	addwf	fsr1l,f,c
 23915  002C2E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23916  002C30  22E2               	addwfc	fsr1h,f,c
 23917  002C32  CFDE FFE6          	movff	postinc2,postinc1
 23918  002C36  CFDD FFE5          	movff	postdec2,postdec1
 23919                           
 23920                           ;eusartparser.c: 158:                 write_package(*package);
 23921  002C3A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23922  002C3E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23923  002C42  EE00  F011         	lfsr	0,write_package@package
 23924  002C46  0E06               	movlw	6
 23925  002C48                     u33341:
 23926  002C48  CFDB FFEB          	movff	plusw2,plusw0
 23927  002C4C  06E8               	decf	wreg,f,c
 23928  002C4E  E2FC               	bc	u33341
 23929  002C50  ECB5  F04B         	call	_write_package	;wreg free
 23930                           
 23931                           ;eusartparser.c: 159:                 break;
 23932  002C54  0012               	return	
 23933  002C56                     l27358:
 23934                           
 23935                           ; BSR set to: 0
 23936                           ;eusartparser.c: 161:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 23937  002C56  EE20 F002          	lfsr	2,2
 23938  002C5A  5018               	movf	read_eusartparser@package^0,w,c
 23939  002C5C  26D9               	addwf	fsr2l,f,c
 23940  002C5E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23941  002C60  22DA               	addwfc	fsr2h,f,c
 23942  002C62  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 23943  002C66  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 23944  002C6A  D647               	goto	l27246
 23945  002C6C                     l27362:
 23946                           
 23947                           ; BSR set to: 0
 23948                           ;eusartparser.c: 165:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 23949  002C6C  EE20 F002          	lfsr	2,2
 23950  002C70  5018               	movf	read_eusartparser@package^0,w,c
 23951  002C72  26D9               	addwf	fsr2l,f,c
 23952  002C74  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23953  002C76  22DA               	addwfc	fsr2h,f,c
 23954  002C78  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 23955  002C7C  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 23956  002C80  D63C               	goto	l27246
 23957  002C82                     l27366:
 23958                           
 23959                           ; BSR set to: 0
 23960                           ;eusartparser.c: 169:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 23961  002C82  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 23962  002C86  EE10 F002          	lfsr	1,2
 23963  002C8A  5018               	movf	read_eusartparser@package^0,w,c
 23964  002C8C  26E1               	addwf	fsr1l,f,c
 23965  002C8E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23966  002C90  22E2               	addwfc	fsr1h,f,c
 23967  002C92  CFDE FFE6          	movff	postinc2,postinc1
 23968  002C96  CFDD FFE5          	movff	postdec2,postdec1
 23969                           
 23970                           ; BSR set to: 0
 23971                           ;eusartparser.c: 170:                 write_package(*package);
 23972  002C9A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23973  002C9E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23974  002CA2  EE00  F011         	lfsr	0,write_package@package
 23975  002CA6  0E06               	movlw	6
 23976  002CA8                     u33351:
 23977  002CA8  CFDB FFEB          	movff	plusw2,plusw0
 23978  002CAC  06E8               	decf	wreg,f,c
 23979  002CAE  E2FC               	bc	u33351
 23980  002CB0  ECB5  F04B         	call	_write_package	;wreg free
 23981                           
 23982                           ;eusartparser.c: 171:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 23983  002CB4  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23984  002CB8  EE10 F002          	lfsr	1,2
 23985  002CBC  5018               	movf	read_eusartparser@package^0,w,c
 23986  002CBE  26E1               	addwf	fsr1l,f,c
 23987  002CC0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23988  002CC2  22E2               	addwfc	fsr1h,f,c
 23989  002CC4  CFDE FFE6          	movff	postinc2,postinc1
 23990  002CC8  CFDD FFE5          	movff	postdec2,postdec1
 23991                           
 23992                           ;eusartparser.c: 172:                 write_package(*package);
 23993  002CCC  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23994  002CD0  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23995  002CD4  EE00  F011         	lfsr	0,write_package@package
 23996  002CD8  0E06               	movlw	6
 23997  002CDA                     u33361:
 23998  002CDA  CFDB FFEB          	movff	plusw2,plusw0
 23999  002CDE  06E8               	decf	wreg,f,c
 24000  002CE0  E2FC               	bc	u33361
 24001  002CE2  ECB5  F04B         	call	_write_package	;wreg free
 24002                           
 24003                           ;eusartparser.c: 173:                 break;
 24004  002CE6  0012               	return	
 24005  002CE8                     l27372:
 24006                           
 24007                           ; BSR set to: 0
 24008                           ;eusartparser.c: 175:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 24009  002CE8  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 24010  002CEC  EE10 F002          	lfsr	1,2
 24011  002CF0  5018               	movf	read_eusartparser@package^0,w,c
 24012  002CF2  26E1               	addwf	fsr1l,f,c
 24013  002CF4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24014  002CF6  22E2               	addwfc	fsr1h,f,c
 24015  002CF8  CFDE FFE6          	movff	postinc2,postinc1
 24016  002CFC  CFDD FFE5          	movff	postdec2,postdec1
 24017                           
 24018                           ; BSR set to: 0
 24019                           ;eusartparser.c: 176:                 write_package(*package);
 24020  002D00  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24021  002D04  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24022  002D08  EE00  F011         	lfsr	0,write_package@package
 24023  002D0C  0E06               	movlw	6
 24024  002D0E                     u33371:
 24025  002D0E  CFDB FFEB          	movff	plusw2,plusw0
 24026  002D12  06E8               	decf	wreg,f,c
 24027  002D14  E2FC               	bc	u33371
 24028  002D16  ECB5  F04B         	call	_write_package	;wreg free
 24029                           
 24030                           ;eusartparser.c: 177:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 24031  002D1A  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 24032  002D1E  EE10 F002          	lfsr	1,2
 24033  002D22  5018               	movf	read_eusartparser@package^0,w,c
 24034  002D24  26E1               	addwf	fsr1l,f,c
 24035  002D26  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24036  002D28  22E2               	addwfc	fsr1h,f,c
 24037  002D2A  CFDE FFE6          	movff	postinc2,postinc1
 24038  002D2E  CFDD FFE5          	movff	postdec2,postdec1
 24039                           
 24040                           ;eusartparser.c: 178:                 write_package(*package);
 24041  002D32  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24042  002D36  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24043  002D3A  EE00  F011         	lfsr	0,write_package@package
 24044  002D3E  0E06               	movlw	6
 24045  002D40                     u33381:
 24046  002D40  CFDB FFEB          	movff	plusw2,plusw0
 24047  002D44  06E8               	decf	wreg,f,c
 24048  002D46  E2FC               	bc	u33381
 24049  002D48  ECB5  F04B         	call	_write_package	;wreg free
 24050                           
 24051                           ;eusartparser.c: 179:                 break;
 24052  002D4C  0012               	return	
 24053  002D4E                     l27378:
 24054                           
 24055                           ; BSR set to: 0
 24056                           ;eusartparser.c: 184:                 package->data.data8[1]=(uint8_t)controlGate_stateM
      +                          achine.current_state;
 24057  002D4E  EE20 F003          	lfsr	2,3
 24058  002D52  5018               	movf	read_eusartparser@package^0,w,c
 24059  002D54  26D9               	addwf	fsr2l,f,c
 24060  002D56  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24061  002D58  22DA               	addwfc	fsr2h,f,c
 24062  002D5A  C1E7  FFDF         	movff	_controlGate_stateMachine,indf2
 24063                           
 24064                           ;eusartparser.c: 185:                 package->data.data8[0]=(uint8_t)controlLearning_st
      +                          ateMachine.current_state;
 24065  002D5E  EE20 F002          	lfsr	2,2
 24066  002D62  5018               	movf	read_eusartparser@package^0,w,c
 24067  002D64  26D9               	addwf	fsr2l,f,c
 24068  002D66  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24069  002D68  22DA               	addwfc	fsr2h,f,c
 24070  002D6A  C2B0  FFDF         	movff	_controlLearning_stateMachine,indf2
 24071  002D6E  D5C5               	goto	l27246
 24072  002D70                     l27382:
 24073                           
 24074                           ; BSR set to: 0
 24075                           ;eusartparser.c: 189:                 package->data.data8[1]=(uint8_t)main_stateMachine.
      +                          current_state;
 24076  002D70  EE20 F003          	lfsr	2,3
 24077  002D74  5018               	movf	read_eusartparser@package^0,w,c
 24078  002D76  26D9               	addwf	fsr2l,f,c
 24079  002D78  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24080  002D7A  22DA               	addwfc	fsr2h,f,c
 24081  002D7C  C1F2  FFDF         	movff	_main_stateMachine,indf2
 24082                           
 24083                           ;eusartparser.c: 190:                 package->data.data8[0]=(uint8_t)menuConfiguration_
      +                          stateMachine.current_state;
 24084  002D80  EE20 F002          	lfsr	2,2
 24085  002D84  5018               	movf	read_eusartparser@package^0,w,c
 24086  002D86  26D9               	addwf	fsr2l,f,c
 24087  002D88  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24088  002D8A  22DA               	addwfc	fsr2h,f,c
 24089  002D8C  C2BB  FFDF         	movff	_menuConfiguration_stateMachine,indf2
 24090  002D90  D5B4               	goto	l27246
 24091  002D92                     l27388:
 24092                           
 24093                           ; BSR set to: 0
 24094  002D92  EE20 F001          	lfsr	2,1
 24095  002D96  5018               	movf	read_eusartparser@package^0,w,c
 24096  002D98  26D9               	addwf	fsr2l,f,c
 24097  002D9A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24098  002D9C  22DA               	addwfc	fsr2h,f,c
 24099  002D9E  50DF               	movf	indf2,w,c
 24100  002DA0  6E1A               	movwf	??_read_eusartparser^0,c
 24101  002DA2  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 24102                           
 24103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24104                           ; Switch size 1, requested type "simple"
 24105                           ; Number of cases is 1, Range of values is 0 to 0
 24106                           ; switch strategies available:
 24107                           ; Name         Instructions Cycles
 24108                           ; simple_byte            4     3 (average)
 24109                           ;	Chosen strategy is simple_byte
 24110  002DA4  501B               	movf	(??_read_eusartparser+1)^0,w,c
 24111  002DA6  0A00               	xorlw	0	; case 0
 24112  002DA8  A4D8               	btfss	status,2,c
 24113  002DAA  0012               	return	
 24114                           
 24115                           ; BSR set to: 0
 24116                           ; Switch size 1, requested type "simple"
 24117                           ; Number of cases is 40, Range of values is 0 to 53
 24118                           ; switch strategies available:
 24119                           ; Name         Instructions Cycles
 24120                           ; simple_byte          121    61 (average)
 24121                           ;	Chosen strategy is simple_byte
 24122  002DAC  501A               	movf	??_read_eusartparser^0,w,c
 24123  002DAE  0A00               	xorlw	0	; case 0
 24124  002DB0  B4D8               	btfsc	status,2,c
 24125  002DB2  D593               	goto	l27244
 24126  002DB4  0A02               	xorlw	2	; case 2
 24127  002DB6  B4D8               	btfsc	status,2,c
 24128  002DB8  D5C8               	goto	l27256
 24129  002DBA  0A01               	xorlw	1	; case 3
 24130  002DBC  B4D8               	btfsc	status,2,c
 24131  002DBE  D648               	goto	l27300
 24132  002DC0  0A06               	xorlw	6	; case 5
 24133  002DC2  B4D8               	btfsc	status,2,c
 24134  002DC4  D5D3               	goto	l27260
 24135  002DC6  0A02               	xorlw	2	; case 7
 24136  002DC8  B4D8               	btfsc	status,2,c
 24137  002DCA  D628               	goto	l27292
 24138  002DCC  0A0F               	xorlw	15	; case 8
 24139  002DCE  B4D8               	btfsc	status,2,c
 24140  002DD0  D66C               	goto	l27320
 24141  002DD2  0A02               	xorlw	2	; case 10
 24142  002DD4  B4D8               	btfsc	status,2,c
 24143  002DD6  D645               	goto	l27304
 24144  002DD8  0A1A               	xorlw	26	; case 16
 24145  002DDA  B4D8               	btfsc	status,2,c
 24146  002DDC  D57E               	goto	l27244
 24147  002DDE  0A01               	xorlw	1	; case 17
 24148  002DE0  B4D8               	btfsc	status,2,c
 24149  002DE2  D599               	goto	l27248
 24150  002DE4  0A03               	xorlw	3	; case 18
 24151  002DE6  B4D8               	btfsc	status,2,c
 24152  002DE8  D5A7               	goto	l27252
 24153  002DEA  0A01               	xorlw	1	; case 19
 24154  002DEC  B4D8               	btfsc	status,2,c
 24155  002DEE  D5AD               	goto	l27256
 24156  002DF0  0A07               	xorlw	7	; case 20
 24157  002DF2  B4D8               	btfsc	status,2,c
 24158  002DF4  D5BB               	goto	l27260
 24159  002DF6  0A01               	xorlw	1	; case 21
 24160  002DF8  B4D8               	btfsc	status,2,c
 24161  002DFA  D5C9               	goto	l27264
 24162  002DFC  0A03               	xorlw	3	; case 22
 24163  002DFE  B4D8               	btfsc	status,2,c
 24164  002E00  D5D7               	goto	l27268
 24165  002E02  0A01               	xorlw	1	; case 23
 24166  002E04  B4D8               	btfsc	status,2,c
 24167  002E06  D5DD               	goto	l27272
 24168  002E08  0A0F               	xorlw	15	; case 24
 24169  002E0A  B4D8               	btfsc	status,2,c
 24170  002E0C  D5E3               	goto	l27276
 24171  002E0E  0A01               	xorlw	1	; case 25
 24172  002E10  B4D8               	btfsc	status,2,c
 24173  002E12  D5E9               	goto	l27280
 24174  002E14  0A03               	xorlw	3	; case 26
 24175  002E16  B4D8               	btfsc	status,2,c
 24176  002E18  D5EF               	goto	l27284
 24177  002E1A  0A01               	xorlw	1	; case 27
 24178  002E1C  B4D8               	btfsc	status,2,c
 24179  002E1E  D5F5               	goto	l27288
 24180  002E20  0A07               	xorlw	7	; case 28
 24181  002E22  B4D8               	btfsc	status,2,c
 24182  002E24  D5FB               	goto	l27292
 24183  002E26  0A01               	xorlw	1	; case 29
 24184  002E28  B4D8               	btfsc	status,2,c
 24185  002E2A  D601               	goto	l27296
 24186  002E2C  0A03               	xorlw	3	; case 30
 24187  002E2E  B4D8               	btfsc	status,2,c
 24188  002E30  D60F               	goto	l27300
 24189  002E32  0A01               	xorlw	1	; case 31
 24190  002E34  B4D8               	btfsc	status,2,c
 24191  002E36  D615               	goto	l27304
 24192  002E38  0A3F               	xorlw	63	; case 32
 24193  002E3A  B4D8               	btfsc	status,2,c
 24194  002E3C  D61B               	goto	l27308
 24195  002E3E  0A01               	xorlw	1	; case 33
 24196  002E40  B4D8               	btfsc	status,2,c
 24197  002E42  D621               	goto	l27312
 24198  002E44  0A03               	xorlw	3	; case 34
 24199  002E46  B4D8               	btfsc	status,2,c
 24200  002E48  D627               	goto	l27316
 24201  002E4A  0A01               	xorlw	1	; case 35
 24202  002E4C  B4D8               	btfsc	status,2,c
 24203  002E4E  D62D               	goto	l27320
 24204  002E50  0A07               	xorlw	7	; case 36
 24205  002E52  B4D8               	btfsc	status,2,c
 24206  002E54  D633               	goto	l27324
 24207  002E56  0A01               	xorlw	1	; case 37
 24208  002E58  B4D8               	btfsc	status,2,c
 24209  002E5A  D639               	goto	l27328
 24210  002E5C  0A03               	xorlw	3	; case 38
 24211  002E5E  B4D8               	btfsc	status,2,c
 24212  002E60  D63F               	goto	l27332
 24213  002E62  0A01               	xorlw	1	; case 39
 24214  002E64  B4D8               	btfsc	status,2,c
 24215  002E66  D64D               	goto	l27336
 24216  002E68  0A0E               	xorlw	14	; case 41
 24217  002E6A  B4D8               	btfsc	status,2,c
 24218  002E6C  D67D               	goto	l27342
 24219  002E6E  0A03               	xorlw	3	; case 42
 24220  002E70  B4D8               	btfsc	status,2,c
 24221  002E72  D68B               	goto	l27346
 24222  002E74  0A06               	xorlw	6	; case 44
 24223  002E76  B4D8               	btfsc	status,2,c
 24224  002E78  D6BB               	goto	l27352
 24225  002E7A  0A02               	xorlw	2	; case 46
 24226  002E7C  B4D8               	btfsc	status,2,c
 24227  002E7E  D6EB               	goto	l27358
 24228  002E80  0A01               	xorlw	1	; case 47
 24229  002E82  B4D8               	btfsc	status,2,c
 24230  002E84  D6F3               	goto	l27362
 24231  002E86  0A1F               	xorlw	31	; case 48
 24232  002E88  B4D8               	btfsc	status,2,c
 24233  002E8A  D6FB               	goto	l27366
 24234  002E8C  0A02               	xorlw	2	; case 50
 24235  002E8E  B4D8               	btfsc	status,2,c
 24236  002E90  D72B               	goto	l27372
 24237  002E92  0A06               	xorlw	6	; case 52
 24238  002E94  B4D8               	btfsc	status,2,c
 24239  002E96  D75B               	goto	l27378
 24240  002E98  0A01               	xorlw	1	; case 53
 24241  002E9A  A4D8               	btfss	status,2,c
 24242  002E9C  0012               	return	
 24243  002E9E  D768               	goto	l27382
 24244  002EA0                     __end_of_read_eusartparser:
 24245                           	callstack 0
 24246                           
 24247 ;; *************** function _write_package *****************
 24248 ;; Defined at:
 24249 ;;		line 50 in file "eusartpackage.c"
 24250 ;; Parameters:    Size  Location     Type
 24251 ;;  package         7   16[COMRAM] const struct package_t
 24252 ;; Auto vars:     Size  Location     Type
 24253 ;;		None
 24254 ;; Return value:  Size  Location     Type
 24255 ;;                  1    wreg      void 
 24256 ;; Registers used:
 24257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24258 ;; Tracked objects:
 24259 ;;		On entry : 0/0
 24260 ;;		On exit  : 0/0
 24261 ;;		Unchanged: 0/0
 24262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24263 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24266 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24267 ;;Total ram usage:        7 bytes
 24268 ;; Hardware stack levels used: 1
 24269 ;; Hardware stack levels required when called: 5
 24270 ;; This function calls:
 24271 ;;		_EUSART1_Write
 24272 ;; This function is called by:
 24273 ;;		_read_eusartparser
 24274 ;;		_eusartparser
 24275 ;; This function uses a non-reentrant model
 24276 ;;
 24277                           
 24278                           	psect	text79
 24279  00976A                     __ptext79:
 24280                           	callstack 0
 24281  00976A                     _write_package:
 24282                           	callstack 24
 24283                           
 24284                           ;eusartpackage.c: 52:         if(package.valid==0)
 24285                           
 24286                           ;incstack = 0
 24287  00976A  5017               	movf	(write_package@package+6)^0,w,c
 24288  00976C  B4D8               	btfsc	status,2,c
 24289  00976E  0012               	return	
 24290                           
 24291                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 24292  009770  5015               	movf	(write_package@package+4)^0,w,c
 24293  009772  EC34  F04A         	call	_EUSART1_Write
 24294                           
 24295                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 24296  009776  5011               	movf	write_package@package^0,w,c
 24297  009778  EC34  F04A         	call	_EUSART1_Write
 24298                           
 24299                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 24300  00977C  5012               	movf	(write_package@package+1)^0,w,c
 24301  00977E  EC34  F04A         	call	_EUSART1_Write
 24302                           
 24303                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 24304  009782  5013               	movf	(write_package@package+2)^0,w,c
 24305  009784  EC34  F04A         	call	_EUSART1_Write
 24306                           
 24307                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 24308  009788  5014               	movf	(write_package@package+3)^0,w,c
 24309  00978A  EC34  F04A         	call	_EUSART1_Write
 24310                           
 24311                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 24312  00978E  5016               	movf	(write_package@package+5)^0,w,c
 24313  009790  EC34  F04A         	call	_EUSART1_Write
 24314  009794  0012               	return		;funcret
 24315  009796                     __end_of_write_package:
 24316                           	callstack 0
 24317                           
 24318 ;; *************** function _EUSART1_Write *****************
 24319 ;; Defined at:
 24320 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 24321 ;; Parameters:    Size  Location     Type
 24322 ;;  txData          1    wreg     unsigned char 
 24323 ;; Auto vars:     Size  Location     Type
 24324 ;;  txData          1   15[COMRAM] unsigned char 
 24325 ;; Return value:  Size  Location     Type
 24326 ;;                  1    wreg      void 
 24327 ;; Registers used:
 24328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24329 ;; Tracked objects:
 24330 ;;		On entry : 0/0
 24331 ;;		On exit  : 3F/E
 24332 ;;		Unchanged: 0/0
 24333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24338 ;;Total ram usage:        1 bytes
 24339 ;; Hardware stack levels used: 1
 24340 ;; Hardware stack levels required when called: 4
 24341 ;; This function calls:
 24342 ;;		Nothing
 24343 ;; This function is called by:
 24344 ;;		_write_package
 24345 ;; This function uses a non-reentrant model
 24346 ;;
 24347                           
 24348                           	psect	text80
 24349  009468                     __ptext80:
 24350                           	callstack 0
 24351  009468                     _EUSART1_Write:
 24352                           	callstack 24
 24353                           
 24354                           ;incstack = 0
 24355                           ;EUSART1_Write@txData stored from wreg
 24356  009468  6E10               	movwf	EUSART1_Write@txData^0,c
 24357  00946A                     
 24358                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 24359                           
 24360                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 24361  00946A  0101               	movlb	1	; () banked
 24362  00946C  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 24363  00946E  B4D8               	btfsc	status,2,c
 24364  009470  D7FC               	goto	l20652
 24365                           
 24366                           ; BSR set to: 1
 24367                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 24368  009472  010E               	movlb	14	; () banked
 24369  009474  B9C5               	btfsc	197,4,b	;volatile
 24370  009476  D003               	goto	l100
 24371                           
 24372                           ; BSR set to: 14
 24373                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 24374  009478  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 24375                           
 24376                           ;mcc_generated_files/eusart1.c: 182:     }
 24377  00947C  D012               	goto	l20668
 24378  00947E                     l100:
 24379                           
 24380                           ; BSR set to: 14
 24381                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 24382  00947E  99C5               	bcf	197,4,b	;volatile
 24383                           
 24384                           ; BSR set to: 14
 24385                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 24386  009480  0E84               	movlw	low _eusart1TxBuffer
 24387  009482  0100               	movlb	0	; () banked
 24388  009484  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 24389  009486  6ED9               	movwf	fsr2l,c
 24390  009488  6ADA               	clrf	fsr2h,c
 24391  00948A  0E02               	movlw	high _eusart1TxBuffer
 24392  00948C  22DA               	addwfc	fsr2h,f,c
 24393  00948E  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 24394                           
 24395                           ; BSR set to: 0
 24396  009492  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 24397                           
 24398                           ; BSR set to: 0
 24399                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24400  009494  0E07               	movlw	7
 24401  009496  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 24402  009498  D002               	goto	l20666
 24403                           
 24404                           ; BSR set to: 0
 24405                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24406  00949A  0E00               	movlw	0
 24407  00949C  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24408  00949E                     l20666:
 24409                           
 24410                           ; BSR set to: 0
 24411                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24412  00949E  0101               	movlb	1	; () banked
 24413  0094A0  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 24414  0094A2                     l20668:
 24415                           
 24416                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24417  0094A2  010E               	movlb	14	; () banked
 24418  0094A4  89C5               	bsf	197,4,b	;volatile
 24419                           
 24420                           ; BSR set to: 14
 24421  0094A6  0012               	return		;funcret
 24422  0094A8                     __end_of_EUSART1_Write:
 24423                           	callstack 0
 24424                           
 24425 ;; *************** function _confirmpackage *****************
 24426 ;; Defined at:
 24427 ;;		line 353 in file "eusartparser.c"
 24428 ;; Parameters:    Size  Location     Type
 24429 ;;  package         2   17[COMRAM] PTR struct package_t
 24430 ;;		 -> main@package(7), 
 24431 ;;  confirm         1   19[COMRAM] _Bool 
 24432 ;; Auto vars:     Size  Location     Type
 24433 ;;		None
 24434 ;; Return value:  Size  Location     Type
 24435 ;;                  1    wreg      void 
 24436 ;; Registers used:
 24437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24438 ;; Tracked objects:
 24439 ;;		On entry : 0/0
 24440 ;;		On exit  : 0/0
 24441 ;;		Unchanged: 0/0
 24442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24443 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24447 ;;Total ram usage:        3 bytes
 24448 ;; Hardware stack levels used: 1
 24449 ;; Hardware stack levels required when called: 5
 24450 ;; This function calls:
 24451 ;;		_init_package
 24452 ;; This function is called by:
 24453 ;;		_eusartparser
 24454 ;; This function uses a non-reentrant model
 24455 ;;
 24456                           
 24457                           	psect	text81
 24458  008ED6                     __ptext81:
 24459                           	callstack 0
 24460  008ED6                     _confirmpackage:
 24461                           	callstack 24
 24462                           
 24463                           ;eusartparser.c: 354:         init_package(package);
 24464                           
 24465                           ; BSR set to: 14
 24466                           ;incstack = 0
 24467  008ED6  C012  F010         	movff	confirmpackage@package,init_package@package
 24468  008EDA  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24469  008EDE  EC3E  F04B         	call	_init_package	;wreg free
 24470                           
 24471                           ;eusartparser.c: 355:         package->functioncode=0x03;
 24472  008EE2  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24473  008EE6  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24474  008EEA  0E03               	movlw	3
 24475  008EEC  6EDF               	movwf	indf2,c
 24476                           
 24477                           ;eusartparser.c: 356:         package->address=0x00;
 24478  008EEE  EE20 F001          	lfsr	2,1
 24479  008EF2  5012               	movf	confirmpackage@package^0,w,c
 24480  008EF4  26D9               	addwf	fsr2l,f,c
 24481  008EF6  5013               	movf	(confirmpackage@package+1)^0,w,c
 24482  008EF8  22DA               	addwfc	fsr2h,f,c
 24483  008EFA  0E00               	movlw	0
 24484  008EFC  6EDF               	movwf	indf2,c
 24485                           
 24486                           ;eusartparser.c: 357:         if(confirm==1)
 24487  008EFE  0414               	decf	confirmpackage@confirm^0,w,c
 24488  008F00  A4D8               	btfss	status,2,c
 24489  008F02  D00B               	goto	l27404
 24490                           
 24491                           ;eusartparser.c: 358:             package->data.data16=0x0001;
 24492  008F04  EE20 F002          	lfsr	2,2
 24493  008F08  5012               	movf	confirmpackage@package^0,w,c
 24494  008F0A  26D9               	addwf	fsr2l,f,c
 24495  008F0C  5013               	movf	(confirmpackage@package+1)^0,w,c
 24496  008F0E  22DA               	addwfc	fsr2h,f,c
 24497  008F10  0E01               	movlw	1
 24498  008F12  6EDE               	movwf	postinc2,c
 24499  008F14  0E00               	movlw	0
 24500  008F16  6EDD               	movwf	postdec2,c
 24501  008F18  0012               	return	
 24502  008F1A                     l27404:
 24503                           
 24504                           ;eusartparser.c: 360:             package->data.data16=0x0000;
 24505  008F1A  EE20 F002          	lfsr	2,2
 24506  008F1E  5012               	movf	confirmpackage@package^0,w,c
 24507  008F20  26D9               	addwf	fsr2l,f,c
 24508  008F22  5013               	movf	(confirmpackage@package+1)^0,w,c
 24509  008F24  22DA               	addwfc	fsr2h,f,c
 24510  008F26  0E00               	movlw	0
 24511  008F28  6EDE               	movwf	postinc2,c
 24512  008F2A  0E00               	movlw	0
 24513  008F2C  6EDD               	movwf	postdec2,c
 24514  008F2E  0012               	return		;funcret
 24515  008F30                     __end_of_confirmpackage:
 24516                           	callstack 0
 24517                           
 24518 ;; *************** function _init_package *****************
 24519 ;; Defined at:
 24520 ;;		line 11 in file "eusartpackage.c"
 24521 ;; Parameters:    Size  Location     Type
 24522 ;;  package         2   15[COMRAM] PTR struct package_t
 24523 ;;		 -> main@package(7), 
 24524 ;; Auto vars:     Size  Location     Type
 24525 ;;		None
 24526 ;; Return value:  Size  Location     Type
 24527 ;;                  1    wreg      void 
 24528 ;; Registers used:
 24529 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24530 ;; Tracked objects:
 24531 ;;		On entry : 0/0
 24532 ;;		On exit  : 0/0
 24533 ;;		Unchanged: 0/0
 24534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24539 ;;Total ram usage:        2 bytes
 24540 ;; Hardware stack levels used: 1
 24541 ;; Hardware stack levels required when called: 4
 24542 ;; This function calls:
 24543 ;;		Nothing
 24544 ;; This function is called by:
 24545 ;;		_confirmpackage
 24546 ;; This function uses a non-reentrant model
 24547 ;;
 24548                           
 24549                           	psect	text82
 24550  00967C                     __ptext82:
 24551                           	callstack 0
 24552  00967C                     _init_package:
 24553                           	callstack 24
 24554                           
 24555                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24556                           
 24557                           ;incstack = 0
 24558  00967C  EE20 F004          	lfsr	2,4
 24559  009680  5010               	movf	init_package@package^0,w,c
 24560  009682  26D9               	addwf	fsr2l,f,c
 24561  009684  5011               	movf	(init_package@package+1)^0,w,c
 24562  009686  22DA               	addwfc	fsr2h,f,c
 24563  009688  0E0A               	movlw	10
 24564  00968A  6EDF               	movwf	indf2,c
 24565                           
 24566                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24567  00968C  EE20 F005          	lfsr	2,5
 24568  009690  5010               	movf	init_package@package^0,w,c
 24569  009692  26D9               	addwf	fsr2l,f,c
 24570  009694  5011               	movf	(init_package@package+1)^0,w,c
 24571  009696  22DA               	addwfc	fsr2h,f,c
 24572  009698  0E0D               	movlw	13
 24573  00969A  6EDF               	movwf	indf2,c
 24574                           
 24575                           ;eusartpackage.c: 14:         package->valid=1;
 24576  00969C  EE20 F006          	lfsr	2,6
 24577  0096A0  5010               	movf	init_package@package^0,w,c
 24578  0096A2  26D9               	addwf	fsr2l,f,c
 24579  0096A4  5011               	movf	(init_package@package+1)^0,w,c
 24580  0096A6  22DA               	addwfc	fsr2h,f,c
 24581  0096A8  0E01               	movlw	1
 24582  0096AA  6EDF               	movwf	indf2,c
 24583  0096AC  0012               	return		;funcret
 24584  0096AE                     __end_of_init_package:
 24585                           	callstack 0
 24586                           
 24587 ;; *************** function _cmdMemoryIsEmpty *****************
 24588 ;; Defined at:
 24589 ;;		line 122 in file "controlMemory_MC50.c"
 24590 ;; Parameters:    Size  Location     Type
 24591 ;;  cmdType         1    wreg     unsigned char 
 24592 ;;  position        1   45[COMRAM] unsigned char 
 24593 ;; Auto vars:     Size  Location     Type
 24594 ;;  cmdType         1   48[COMRAM] unsigned char 
 24595 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24596 ;; Return value:  Size  Location     Type
 24597 ;;                  1    wreg      unsigned char 
 24598 ;; Registers used:
 24599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24600 ;; Tracked objects:
 24601 ;;		On entry : 0/1
 24602 ;;		On exit  : 0/0
 24603 ;;		Unchanged: 0/0
 24604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24606 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24608 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24609 ;;Total ram usage:        8 bytes
 24610 ;; Hardware stack levels used: 1
 24611 ;; Hardware stack levels required when called: 13
 24612 ;; This function calls:
 24613 ;;		_i2c_readDataBlock
 24614 ;; This function is called by:
 24615 ;;		_setValueToEdit
 24616 ;;		_controlSelectRemote
 24617 ;;		_eusartparser
 24618 ;; This function uses a non-reentrant model
 24619 ;;
 24620                           
 24621                           	psect	text83
 24622  008070                     __ptext83:
 24623                           	callstack 0
 24624  008070                     _cmdMemoryIsEmpty:
 24625                           	callstack 14
 24626                           
 24627                           ;incstack = 0
 24628                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24629  008070  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24630                           
 24631                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24632  008072  0E00               	movlw	0
 24633  008074  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24634  008076  0E00               	movlw	0
 24635  008078  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24636  00807A  0E00               	movlw	0
 24637  00807C  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24638  00807E  0E00               	movlw	0
 24639  008080  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24640                           
 24641                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24642  008082  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24643  008084  A4D8               	btfss	status,2,c
 24644  008086  D01A               	goto	l20740
 24645                           
 24646                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24647  008088  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24648  00808A  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24649  00808C  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24650  00808E  90D8               	bcf	status,0,c
 24651  008090  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24652  008092  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24653  008094  90D8               	bcf	status,0,c
 24654  008096  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24655  008098  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24656  00809A  0E00               	movlw	0
 24657  00809C  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24658  00809E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24659  0080A0  0E02               	movlw	2
 24660  0080A2  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24661  0080A4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24662  0080A6  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24663  0080A8  6E24               	movwf	i2c_readDataBlock@data^0,c
 24664  0080AA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24665  0080AC  0E00               	movlw	0
 24666  0080AE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24667  0080B0  0E04               	movlw	4
 24668  0080B2  6E26               	movwf	i2c_readDataBlock@len^0,c
 24669  0080B4  0E50               	movlw	80
 24670  0080B6  EC59  F044         	call	_i2c_readDataBlock
 24671                           
 24672                           ;controlMemory_MC50.c: 130:     }
 24673  0080BA  D019               	goto	l20742
 24674  0080BC                     l20740:
 24675                           
 24676                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 24677  0080BC  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24678  0080BE  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24679  0080C0  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24680  0080C2  90D8               	bcf	status,0,c
 24681  0080C4  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24682  0080C6  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24683  0080C8  90D8               	bcf	status,0,c
 24684  0080CA  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24685  0080CC  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24686  0080CE  0E00               	movlw	0
 24687  0080D0  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24688  0080D2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24689  0080D4  0E05               	movlw	5
 24690  0080D6  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24691  0080D8  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24692  0080DA  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24693  0080DC  6E24               	movwf	i2c_readDataBlock@data^0,c
 24694  0080DE  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24695  0080E0  0E00               	movlw	0
 24696  0080E2  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24697  0080E4  0E04               	movlw	4
 24698  0080E6  6E26               	movwf	i2c_readDataBlock@len^0,c
 24699  0080E8  0E50               	movlw	80
 24700  0080EA  EC59  F044         	call	_i2c_readDataBlock
 24701  0080EE                     l20742:
 24702                           
 24703                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 24704  0080EE  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 24705  0080F0  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 24706  0080F2  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 24707  0080F4  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 24708  0080F6  A4D8               	btfss	status,2,c
 24709  0080F8  D002               	goto	l20750
 24710                           
 24711                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 24712  0080FA  0E01               	movlw	1
 24713  0080FC  0012               	return	
 24714  0080FE                     l20750:
 24715                           
 24716                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 24717  0080FE  0E00               	movlw	0
 24718  008100  0012               	return		;funcret
 24719  008102                     __end_of_cmdMemoryIsEmpty:
 24720                           	callstack 0
 24721                           
 24722 ;; *************** function _RemoveSerial *****************
 24723 ;; Defined at:
 24724 ;;		line 95 in file "controlMemory_MC50.c"
 24725 ;; Parameters:    Size  Location     Type
 24726 ;;  cmdType         1    wreg     unsigned char 
 24727 ;;  position        1   57[COMRAM] unsigned char 
 24728 ;; Auto vars:     Size  Location     Type
 24729 ;;  cmdType         1    2[BANK0 ] unsigned char 
 24730 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 24731 ;; Return value:  Size  Location     Type
 24732 ;;                  1    wreg      void 
 24733 ;; Registers used:
 24734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24735 ;; Tracked objects:
 24736 ;;		On entry : 3E/1
 24737 ;;		On exit  : 0/0
 24738 ;;		Unchanged: 0/0
 24739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24740 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24741 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24742 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24743 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24744 ;;Total ram usage:        8 bytes
 24745 ;; Hardware stack levels used: 1
 24746 ;; Hardware stack levels required when called: 13
 24747 ;; This function calls:
 24748 ;;		_i2c_writeNBytes
 24749 ;; This function is called by:
 24750 ;;		_controlSelectRemote
 24751 ;;		_eusartparser
 24752 ;; This function uses a non-reentrant model
 24753 ;;
 24754                           
 24755                           	psect	text84
 24756  0085CE                     __ptext84:
 24757                           	callstack 0
 24758  0085CE                     _RemoveSerial:
 24759                           	callstack 14
 24760                           
 24761                           ;incstack = 0
 24762                           ;RemoveSerial@cmdType stored from wreg
 24763  0085CE  0100               	movlb	0	; () banked
 24764  0085D0  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 24765                           
 24766                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 24767  0085D2  0E00               	movlw	0
 24768  0085D4  0100               	movlb	0	; () banked
 24769  0085D6  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 24770  0085D8  0E00               	movlw	0
 24771  0085DA  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 24772  0085DC  0E00               	movlw	0
 24773  0085DE  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 24774  0085E0  0E00               	movlw	0
 24775  0085E2  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 24776                           
 24777                           ; BSR set to: 0
 24778                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 24779  0085E4  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 24780  0085E6  A4D8               	btfss	status,2,c
 24781  0085E8  D019               	goto	l20732
 24782                           
 24783                           ; BSR set to: 0
 24784                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24785  0085EA  503A               	movf	RemoveSerial@position^0,w,c
 24786  0085EC  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24787  0085EE  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24788  0085F0  90D8               	bcf	status,0,c
 24789  0085F2  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24790  0085F4  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24791  0085F6  90D8               	bcf	status,0,c
 24792  0085F8  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24793  0085FA  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24794  0085FC  0E00               	movlw	0
 24795  0085FE  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24796  008600  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24797  008602  0E02               	movlw	2
 24798  008604  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24799  008606  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24800  008608  0EDB               	movlw	low RemoveSerial@tempSerial
 24801  00860A  6E24               	movwf	i2c_writeNBytes@data^0,c
 24802  00860C  0E00               	movlw	0
 24803  00860E  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24804  008610  0E04               	movlw	4
 24805  008612  6E25               	movwf	i2c_writeNBytes@len^0,c
 24806  008614  0E50               	movlw	80
 24807  008616  EC94  F044         	call	_i2c_writeNBytes
 24808                           
 24809                           ;controlMemory_MC50.c: 103:     }
 24810  00861A  0012               	return	
 24811  00861C                     l20732:
 24812                           
 24813                           ; BSR set to: 0
 24814                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24815  00861C  503A               	movf	RemoveSerial@position^0,w,c
 24816  00861E  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24817  008620  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24818  008622  90D8               	bcf	status,0,c
 24819  008624  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24820  008626  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24821  008628  90D8               	bcf	status,0,c
 24822  00862A  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24823  00862C  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24824  00862E  0E00               	movlw	0
 24825  008630  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24826  008632  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24827  008634  0E05               	movlw	5
 24828  008636  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24829  008638  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24830  00863A  0EDB               	movlw	low RemoveSerial@tempSerial
 24831  00863C  6E24               	movwf	i2c_writeNBytes@data^0,c
 24832  00863E  0E00               	movlw	0
 24833  008640  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24834  008642  0E04               	movlw	4
 24835  008644  6E25               	movwf	i2c_writeNBytes@len^0,c
 24836  008646  0E50               	movlw	80
 24837  008648  EC94  F044         	call	_i2c_writeNBytes
 24838  00864C  0012               	return		;funcret
 24839  00864E                     __end_of_RemoveSerial:
 24840                           	callstack 0
 24841                           
 24842 ;; *************** function _ReadSerial *****************
 24843 ;; Defined at:
 24844 ;;		line 110 in file "controlMemory_MC50.c"
 24845 ;; Parameters:    Size  Location     Type
 24846 ;;  cmdType         1    wreg     unsigned char 
 24847 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 24848 ;;		 -> eusartparser@serial(4), 
 24849 ;;  position        1   46[COMRAM] unsigned char 
 24850 ;; Auto vars:     Size  Location     Type
 24851 ;;  cmdType         1   49[COMRAM] unsigned char 
 24852 ;; Return value:  Size  Location     Type
 24853 ;;                  1    wreg      void 
 24854 ;; Registers used:
 24855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24856 ;; Tracked objects:
 24857 ;;		On entry : 3F/0
 24858 ;;		On exit  : 0/0
 24859 ;;		Unchanged: 0/0
 24860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24863 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24864 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24865 ;;Total ram usage:        5 bytes
 24866 ;; Hardware stack levels used: 1
 24867 ;; Hardware stack levels required when called: 13
 24868 ;; This function calls:
 24869 ;;		_i2c_readDataBlock
 24870 ;; This function is called by:
 24871 ;;		_eusartparser
 24872 ;; This function uses a non-reentrant model
 24873 ;;
 24874                           
 24875                           	psect	text85
 24876  008A7C                     __ptext85:
 24877                           	callstack 0
 24878  008A7C                     _ReadSerial:
 24879                           	callstack 16
 24880                           
 24881                           ;incstack = 0
 24882                           ;ReadSerial@cmdType stored from wreg
 24883  008A7C  6E32               	movwf	ReadSerial@cmdType^0,c
 24884                           
 24885                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 24886  008A7E  5032               	movf	ReadSerial@cmdType^0,w,c
 24887  008A80  A4D8               	btfss	status,2,c
 24888  008A82  D01A               	goto	l22744
 24889                           
 24890                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 24891  008A84  502F               	movf	ReadSerial@position^0,w,c
 24892  008A86  6E30               	movwf	??_ReadSerial^0,c
 24893  008A88  6A31               	clrf	(??_ReadSerial+1)^0,c
 24894  008A8A  90D8               	bcf	status,0,c
 24895  008A8C  3630               	rlcf	??_ReadSerial^0,f,c
 24896  008A8E  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24897  008A90  90D8               	bcf	status,0,c
 24898  008A92  3630               	rlcf	??_ReadSerial^0,f,c
 24899  008A94  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24900  008A96  0E00               	movlw	0
 24901  008A98  2430               	addwf	??_ReadSerial^0,w,c
 24902  008A9A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24903  008A9C  0E02               	movlw	2
 24904  008A9E  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24905  008AA0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24906  008AA2  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24907  008AA6  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24908  008AA8  0E00               	movlw	0
 24909  008AAA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24910  008AAC  0E04               	movlw	4
 24911  008AAE  6E26               	movwf	i2c_readDataBlock@len^0,c
 24912  008AB0  0E50               	movlw	80
 24913  008AB2  EC59  F044         	call	_i2c_readDataBlock
 24914                           
 24915                           ;controlMemory_MC50.c: 115:     }
 24916  008AB6  0012               	return	
 24917  008AB8                     l22744:
 24918                           
 24919                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 24920  008AB8  502F               	movf	ReadSerial@position^0,w,c
 24921  008ABA  6E30               	movwf	??_ReadSerial^0,c
 24922  008ABC  6A31               	clrf	(??_ReadSerial+1)^0,c
 24923  008ABE  90D8               	bcf	status,0,c
 24924  008AC0  3630               	rlcf	??_ReadSerial^0,f,c
 24925  008AC2  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24926  008AC4  90D8               	bcf	status,0,c
 24927  008AC6  3630               	rlcf	??_ReadSerial^0,f,c
 24928  008AC8  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24929  008ACA  0E00               	movlw	0
 24930  008ACC  2430               	addwf	??_ReadSerial^0,w,c
 24931  008ACE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24932  008AD0  0E05               	movlw	5
 24933  008AD2  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24934  008AD4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24935  008AD6  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24936  008ADA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24937  008ADC  0E00               	movlw	0
 24938  008ADE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24939  008AE0  0E04               	movlw	4
 24940  008AE2  6E26               	movwf	i2c_readDataBlock@len^0,c
 24941  008AE4  0E50               	movlw	80
 24942  008AE6  EC59  F044         	call	_i2c_readDataBlock
 24943  008AEA  0012               	return		;funcret
 24944  008AEC                     __end_of_ReadSerial:
 24945                           	callstack 0
 24946                           
 24947 ;; *************** function _i2c_readDataBlock *****************
 24948 ;; Defined at:
 24949 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24950 ;; Parameters:    Size  Location     Type
 24951 ;;  address         1    wreg     unsigned char 
 24952 ;;  reg             2   33[COMRAM] unsigned short 
 24953 ;;  data            2   35[COMRAM] PTR void 
 24954 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 24955 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 24956 ;;  len             2   37[COMRAM] unsigned int 
 24957 ;; Auto vars:     Size  Location     Type
 24958 ;;  address         1   40[COMRAM] unsigned char 
 24959 ;;  d               4   41[COMRAM] struct .
 24960 ;; Return value:  Size  Location     Type
 24961 ;;                  1    wreg      void 
 24962 ;; Registers used:
 24963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24964 ;; Tracked objects:
 24965 ;;		On entry : 0/2
 24966 ;;		On exit  : 0/0
 24967 ;;		Unchanged: 0/0
 24968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24969 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24970 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24972 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24973 ;;Total ram usage:       12 bytes
 24974 ;; Hardware stack levels used: 1
 24975 ;; Hardware stack levels required when called: 12
 24976 ;; This function calls:
 24977 ;;		_I2C1_Close
 24978 ;;		_I2C1_MasterWrite
 24979 ;;		_I2C1_Open
 24980 ;;		_I2C1_SetAddressNackCallback
 24981 ;;		_I2C1_SetBuffer
 24982 ;;		_I2C1_SetDataCompleteCallback
 24983 ;; This function is called by:
 24984 ;;		_validateRemoteSerialNumber
 24985 ;;		_ReadSerial
 24986 ;;		_cmdMemoryIsEmpty
 24987 ;;		_loadNVM_VarSystem
 24988 ;; This function uses a non-reentrant model
 24989 ;;
 24990                           
 24991                           	psect	text86
 24992  0088B2                     __ptext86:
 24993                           	callstack 0
 24994  0088B2                     _i2c_readDataBlock:
 24995                           	callstack 14
 24996                           
 24997                           ;incstack = 0
 24998                           ;i2c_readDataBlock@address stored from wreg
 24999  0088B2  6E29               	movwf	i2c_readDataBlock@address^0,c
 25000                           
 25001                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 25002  0088B4  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 25003  0088B8  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 25004                           
 25005                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 25006  0088BC  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 25007  0088C0  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 25008  0088C4                     l20500:
 25009  0088C4  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 25010  0088C6  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 25011  0088C8  EC64  F042         	call	_I2C1_Open
 25012  0088CC  0900               	iorlw	0
 25013  0088CE  B4D8               	btfsc	status,2,c
 25014  0088D0  D7F9               	goto	l20500
 25015                           
 25016                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 25017  0088D2  0EE8               	movlw	low _rdBlkRegCompleteHandler
 25018  0088D4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 25019  0088D6  0E94               	movlw	high _rdBlkRegCompleteHandler
 25020  0088D8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 25021  0088DA  0E2A               	movlw	low i2c_readDataBlock@d
 25022  0088DC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 25023  0088DE  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 25024  0088E0  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 25025                           
 25026                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 25027  0088E4  0E22               	movlw	low i2c_readDataBlock@reg
 25028  0088E6  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 25029  0088E8  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 25030  0088EA  0E00               	movlw	0
 25031  0088EC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 25032  0088EE  0E01               	movlw	1
 25033  0088F0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 25034  0088F2  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 25035                           
 25036                           ; BSR set to: 2
 25037                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 25038  0088F6  0E00               	movlw	0
 25039  0088F8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 25040  0088FA  0E00               	movlw	0
 25041  0088FC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 25042  0088FE  0E00               	movlw	0
 25043  008900  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 25044  008902  0E00               	movlw	0
 25045  008904  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 25046  008906  EC2B  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 25047                           
 25048                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 25049  00890A  EC04  F04F         	call	_I2C1_MasterWrite	;wreg free
 25050  00890E                     l20510:
 25051  00890E  EC78  F04D         	call	_I2C1_Close	;wreg free
 25052  008912  06E8               	decf	wreg,f,c
 25053  008914  B4D8               	btfsc	status,2,c
 25054  008916  D7FB               	goto	l20510
 25055                           
 25056                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 25057  008918  0ED0               	movlw	208
 25058  00891A  6E28               	movwf	??_i2c_readDataBlock^0,c
 25059  00891C  0ECA               	movlw	202
 25060  00891E                     u34097:
 25061  00891E  2EE8               	decfsz	wreg,f,c
 25062  008920  D7FE               	bra	u34097
 25063  008922  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 25064  008924  D7FC               	bra	u34097
 25065  008926  0012               	return		;funcret
 25066  008928                     __end_of_i2c_readDataBlock:
 25067                           	callstack 0
 25068                           
 25069 ;; *************** function _WWDT_TimerClear *****************
 25070 ;; Defined at:
 25071 ;;		line 128 in file "mcc_generated_files/mcc.c"
 25072 ;; Parameters:    Size  Location     Type
 25073 ;;		None
 25074 ;; Auto vars:     Size  Location     Type
 25075 ;;  state           1   15[COMRAM] _Bool 
 25076 ;;  readBack        1    0        unsigned char 
 25077 ;; Return value:  Size  Location     Type
 25078 ;;                  1    wreg      void 
 25079 ;; Registers used:
 25080 ;;		wreg, status,2
 25081 ;; Tracked objects:
 25082 ;;		On entry : 0/0
 25083 ;;		On exit  : 0/0
 25084 ;;		Unchanged: 0/0
 25085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25090 ;;Total ram usage:        1 bytes
 25091 ;; Hardware stack levels used: 1
 25092 ;; Hardware stack levels required when called: 4
 25093 ;; This function calls:
 25094 ;;		Nothing
 25095 ;; This function is called by:
 25096 ;;		_main
 25097 ;; This function uses a non-reentrant model
 25098 ;;
 25099                           
 25100                           	psect	text87
 25101  009B50                     __ptext87:
 25102                           	callstack 0
 25103  009B50                     _WWDT_TimerClear:
 25104                           	callstack 26
 25105                           
 25106                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 25107                           
 25108                           ;incstack = 0
 25109  009B50  0E00               	movlw	0
 25110  009B52  BEF2               	btfsc	4082,7,c	;volatile
 25111  009B54  0E01               	movlw	1
 25112  009B56  6E10               	movwf	WWDT_TimerClear@state^0,c
 25113                           
 25114                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 25115  009B58  9EF2               	bcf	4082,7,c	;volatile
 25116  009B5A  010E               	movlb	14	; () banked
 25117  009B5C  51D2               	movf	210,w,b	;volatile
 25118  009B5E  0004               	clrwdt		;# 
 25119                           
 25120                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 25121  009B60  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 25122  009B62  D002               	bra	u29595
 25123  009B64  9EF2               	bcf	4082,7,c	;volatile
 25124  009B66  D001               	bra	u29596
 25125  009B68                     u29595:
 25126  009B68  8EF2               	bsf	4082,7,c	;volatile
 25127  009B6A                     u29596:
 25128  009B6A  0012               	return		;funcret
 25129  009B6C                     __end_of_WWDT_TimerClear:
 25130                           	callstack 0
 25131                           
 25132 ;; *************** function _WWDT_SoftEnable *****************
 25133 ;; Defined at:
 25134 ;;		line 104 in file "mcc_generated_files/mcc.c"
 25135 ;; Parameters:    Size  Location     Type
 25136 ;;		None
 25137 ;; Auto vars:     Size  Location     Type
 25138 ;;		None
 25139 ;; Return value:  Size  Location     Type
 25140 ;;                  1    wreg      void 
 25141 ;; Registers used:
 25142 ;;		None
 25143 ;; Tracked objects:
 25144 ;;		On entry : 3F/E
 25145 ;;		On exit  : 3F/E
 25146 ;;		Unchanged: 0/0
 25147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25152 ;;Total ram usage:        0 bytes
 25153 ;; Hardware stack levels used: 1
 25154 ;; Hardware stack levels required when called: 4
 25155 ;; This function calls:
 25156 ;;		Nothing
 25157 ;; This function is called by:
 25158 ;;		_main
 25159 ;; This function uses a non-reentrant model
 25160 ;;
 25161                           
 25162                           	psect	text88
 25163  009E8E                     __ptext88:
 25164                           	callstack 0
 25165  009E8E                     _WWDT_SoftEnable:
 25166                           	callstack 26
 25167                           
 25168                           ; BSR set to: 14
 25169                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 25170                           
 25171                           ;incstack = 0
 25172  009E8E  81D2               	bsf	210,0,b	;volatile
 25173                           
 25174                           ; BSR set to: 14
 25175  009E90  0012               	return		;funcret
 25176  009E92                     __end_of_WWDT_SoftEnable:
 25177                           	callstack 0
 25178                           
 25179 ;; *************** function _ShowVersion *****************
 25180 ;; Defined at:
 25181 ;;		line 254 in file "main_MC50.c"
 25182 ;; Parameters:    Size  Location     Type
 25183 ;;		None
 25184 ;; Auto vars:     Size  Location     Type
 25185 ;;		None
 25186 ;; Return value:  Size  Location     Type
 25187 ;;                  1    wreg      void 
 25188 ;; Registers used:
 25189 ;;		wreg, status,2, status,0, cstack
 25190 ;; Tracked objects:
 25191 ;;		On entry : 3F/1
 25192 ;;		On exit  : 3F/1
 25193 ;;		Unchanged: 0/0
 25194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25199 ;;Total ram usage:        0 bytes
 25200 ;; Hardware stack levels used: 1
 25201 ;; Hardware stack levels required when called: 5
 25202 ;; This function calls:
 25203 ;;		_SetSegmentValue
 25204 ;; This function is called by:
 25205 ;;		_main
 25206 ;; This function uses a non-reentrant model
 25207 ;;
 25208                           
 25209                           	psect	text89
 25210  008C9C                     __ptext89:
 25211                           	callstack 0
 25212  008C9C                     _ShowVersion:
 25213                           	callstack 25
 25214                           
 25215                           ; BSR set to: 1
 25216                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 25217                           
 25218                           ; BSR set to: 14
 25219                           ;incstack = 0
 25220  008C9C  BFDC               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 25221  008C9E  D005               	goto	u31240
 25222  008CA0  51DC               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 25223  008CA2  E12E               	bnz	l2044
 25224  008CA4  05DB               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 25225  008CA6  B0D8               	btfsc	status,0,c
 25226  008CA8  0012               	return	
 25227  008CAA                     u31240:
 25228                           
 25229                           ; BSR set to: 1
 25230                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 25231  008CAA  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 25232  008CAC  A4D8               	btfss	status,2,c
 25233  008CAE  D006               	goto	l25372
 25234                           
 25235                           ; BSR set to: 1
 25236                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 25237  008CB0  0E01               	movlw	1
 25238  008CB2  6E1C               	movwf	SetSegmentValue@d2^0,c
 25239  008CB4  0E00               	movlw	0
 25240  008CB6  ECF9  F04D         	call	_SetSegmentValue
 25241                           
 25242                           ;main_MC50.c: 262:             }
 25243  008CBA  D01C               	goto	l2039
 25244  008CBC                     l25372:
 25245                           
 25246                           ; BSR set to: 1
 25247  008CBC  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 25248  008CBE  A4D8               	btfss	status,2,c
 25249  008CC0  D006               	goto	l25376
 25250                           
 25251                           ; BSR set to: 1
 25252                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 25253  008CC2  0E01               	movlw	1
 25254  008CC4  6E1C               	movwf	SetSegmentValue@d2^0,c
 25255  008CC6  0E14               	movlw	20
 25256  008CC8  ECF9  F04D         	call	_SetSegmentValue
 25257                           
 25258                           ;main_MC50.c: 266:             }
 25259  008CCC  D013               	goto	l2039
 25260  008CCE                     l25376:
 25261                           
 25262                           ; BSR set to: 1
 25263  008CCE  0E02               	movlw	2
 25264  008CD0  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25265  008CD2  A4D8               	btfss	status,2,c
 25266  008CD4  D006               	goto	l25380
 25267                           
 25268                           ; BSR set to: 1
 25269                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 25270  008CD6  0E00               	movlw	0
 25271  008CD8  6E1C               	movwf	SetSegmentValue@d2^0,c
 25272  008CDA  0E08               	movlw	8
 25273  008CDC  ECF9  F04D         	call	_SetSegmentValue
 25274                           
 25275                           ;main_MC50.c: 270:             }
 25276  008CE0  D009               	goto	l2039
 25277  008CE2                     l25380:
 25278                           
 25279                           ; BSR set to: 1
 25280  008CE2  0E03               	movlw	3
 25281  008CE4  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25282  008CE6  A4D8               	btfss	status,2,c
 25283  008CE8  D005               	goto	l2039
 25284                           
 25285                           ; BSR set to: 1
 25286                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 25287  008CEA  0E02               	movlw	2
 25288  008CEC  6E1C               	movwf	SetSegmentValue@d2^0,c
 25289  008CEE  0E14               	movlw	20
 25290  008CF0  ECF9  F04D         	call	_SetSegmentValue
 25291  008CF4                     l2039:
 25292                           
 25293                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 25294                           
 25295                           ; BSR set to: 1
 25296  008CF4  0101               	movlb	1	; () banked
 25297  008CF6  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 25298                           
 25299                           ; BSR set to: 1
 25300                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 25301  008CF8  0E00               	movlw	0
 25302  008CFA  6FDC               	movwf	(_ts_system+61)& (0+255),b	;volatile
 25303  008CFC  0E14               	movlw	20
 25304  008CFE  6FDB               	movwf	(_ts_system+60)& (0+255),b	;volatile
 25305  008D00                     l2044:
 25306                           
 25307                           ; BSR set to: 1
 25308  008D00  0012               	return		;funcret
 25309  008D02                     __end_of_ShowVersion:
 25310                           	callstack 0
 25311                           
 25312 ;; *************** function _SetSegmentValue *****************
 25313 ;; Defined at:
 25314 ;;		line 112 in file "outputs_MC50.c"
 25315 ;; Parameters:    Size  Location     Type
 25316 ;;  d1              1    wreg     unsigned char 
 25317 ;;  d2              1   27[COMRAM] unsigned char 
 25318 ;; Auto vars:     Size  Location     Type
 25319 ;;  d1              1   28[COMRAM] unsigned char 
 25320 ;; Return value:  Size  Location     Type
 25321 ;;                  1    wreg      void 
 25322 ;; Registers used:
 25323 ;;		wreg, status,2
 25324 ;; Tracked objects:
 25325 ;;		On entry : 0/0
 25326 ;;		On exit  : 3F/0
 25327 ;;		Unchanged: 0/0
 25328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25329 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25333 ;;Total ram usage:        2 bytes
 25334 ;; Hardware stack levels used: 1
 25335 ;; Hardware stack levels required when called: 4
 25336 ;; This function calls:
 25337 ;;		Nothing
 25338 ;; This function is called by:
 25339 ;;		_main
 25340 ;;		_ShowVersion
 25341 ;;		_controlSelectRemote
 25342 ;; This function uses a non-reentrant model
 25343 ;;
 25344                           
 25345                           	psect	text90
 25346  009BF2                     __ptext90:
 25347                           	callstack 0
 25348  009BF2                     _SetSegmentValue:
 25349                           	callstack 23
 25350                           
 25351                           ; BSR set to: 1
 25352                           ;incstack = 0
 25353                           ;SetSegmentValue@d1 stored from wreg
 25354  009BF2  6E1D               	movwf	SetSegmentValue@d1^0,c
 25355                           
 25356                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25357  009BF4  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25358                           
 25359                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25360  009BF8  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25361                           
 25362                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25363  009BFC  0E00               	movlw	0
 25364  009BFE  0100               	movlb	0	; () banked
 25365  009C00  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25366  009C02  0E00               	movlw	0
 25367  009C04  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25368                           
 25369                           ; BSR set to: 0
 25370                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25371  009C06  0E00               	movlw	0
 25372  009C08  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25373                           
 25374                           ; BSR set to: 0
 25375  009C0A  0012               	return		;funcret
 25376  009C0C                     __end_of_SetSegmentValue:
 25377                           	callstack 0
 25378                           
 25379 ;; *************** function _SYSTEM_Initialize *****************
 25380 ;; Defined at:
 25381 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25382 ;; Parameters:    Size  Location     Type
 25383 ;;		None
 25384 ;; Auto vars:     Size  Location     Type
 25385 ;;		None
 25386 ;; Return value:  Size  Location     Type
 25387 ;;                  1    wreg      void 
 25388 ;; Registers used:
 25389 ;;		wreg, status,2, status,0, cstack
 25390 ;; Tracked objects:
 25391 ;;		On entry : 3F/0
 25392 ;;		On exit  : 3F/E
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25399 ;;Total ram usage:        0 bytes
 25400 ;; Hardware stack levels used: 1
 25401 ;; Hardware stack levels required when called: 6
 25402 ;; This function calls:
 25403 ;;		_ADCC_Initialize
 25404 ;;		_EUSART1_Initialize
 25405 ;;		_I2C1_Initialize
 25406 ;;		_INTERRUPT_Initialize
 25407 ;;		_OSCILLATOR_Initialize
 25408 ;;		_PIN_MANAGER_Initialize
 25409 ;;		_PMD_Initialize
 25410 ;;		_TMR0_Initialize
 25411 ;;		_TMR1_Initialize
 25412 ;;		_TMR2_Initialize
 25413 ;;		_WWDT_Initialize
 25414 ;; This function is called by:
 25415 ;;		_main
 25416 ;; This function uses a non-reentrant model
 25417 ;;
 25418                           
 25419                           	psect	text91
 25420  009710                     __ptext91:
 25421                           	callstack 0
 25422  009710                     _SYSTEM_Initialize:
 25423                           	callstack 24
 25424                           
 25425                           ; BSR set to: 0
 25426                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25427                           
 25428                           ; BSR set to: 0
 25429                           ;incstack = 0
 25430  009710  EC49  F04F         	call	_INTERRUPT_Initialize	;wreg free
 25431                           
 25432                           ; BSR set to: 0
 25433                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25434  009714  ECB6  F04D         	call	_PMD_Initialize	;wreg free
 25435                           
 25436                           ; BSR set to: 14
 25437                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25438  009718  EC84  F04E         	call	_I2C1_Initialize	;wreg free
 25439                           
 25440                           ; BSR set to: 14
 25441                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25442  00971C  ECEC  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
 25443                           
 25444                           ; BSR set to: 14
 25445                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25446  009720  EC5A  F04E         	call	_OSCILLATOR_Initialize	;wreg free
 25447                           
 25448                           ; BSR set to: 14
 25449                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25450  009724  ECC8  F04E         	call	_WWDT_Initialize	;wreg free
 25451                           
 25452                           ; BSR set to: 14
 25453                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25454  009728  ECED  F048         	call	_ADCC_Initialize	;wreg free
 25455                           
 25456                           ; BSR set to: 15
 25457                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25458  00972C  ECCB  F04B         	call	_TMR2_Initialize	;wreg free
 25459                           
 25460                           ; BSR set to: 14
 25461                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25462  009730  EC13  F04A         	call	_TMR1_Initialize	;wreg free
 25463                           
 25464                           ; BSR set to: 14
 25465                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25466  009734  EC67  F04D         	call	_TMR0_Initialize	;wreg free
 25467                           
 25468                           ; BSR set to: 14
 25469                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25470  009738  EC27  F043         	call	_EUSART1_Initialize	;wreg free
 25471                           
 25472                           ; BSR set to: 14
 25473  00973C  0012               	return		;funcret
 25474  00973E                     __end_of_SYSTEM_Initialize:
 25475                           	callstack 0
 25476                           
 25477 ;; *************** function _WWDT_Initialize *****************
 25478 ;; Defined at:
 25479 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25480 ;; Parameters:    Size  Location     Type
 25481 ;;		None
 25482 ;; Auto vars:     Size  Location     Type
 25483 ;;		None
 25484 ;; Return value:  Size  Location     Type
 25485 ;;                  1    wreg      void 
 25486 ;; Registers used:
 25487 ;;		wreg, status,2
 25488 ;; Tracked objects:
 25489 ;;		On entry : 3F/E
 25490 ;;		On exit  : 3F/E
 25491 ;;		Unchanged: 0/0
 25492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25497 ;;Total ram usage:        0 bytes
 25498 ;; Hardware stack levels used: 1
 25499 ;; Hardware stack levels required when called: 4
 25500 ;; This function calls:
 25501 ;;		Nothing
 25502 ;; This function is called by:
 25503 ;;		_SYSTEM_Initialize
 25504 ;; This function uses a non-reentrant model
 25505 ;;
 25506                           
 25507                           	psect	text92
 25508  009D90                     __ptext92:
 25509                           	callstack 0
 25510  009D90                     _WWDT_Initialize:
 25511                           	callstack 25
 25512                           
 25513                           ; BSR set to: 14
 25514                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25515                           
 25516                           ; BSR set to: 14
 25517                           ;incstack = 0
 25518  009D90  0E16               	movlw	22
 25519  009D92  6FD2               	movwf	210,b	;volatile
 25520                           
 25521                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25522  009D94  0E27               	movlw	39
 25523  009D96  6FD3               	movwf	211,b	;volatile
 25524                           
 25525                           ; BSR set to: 14
 25526  009D98  0012               	return		;funcret
 25527  009D9A                     __end_of_WWDT_Initialize:
 25528                           	callstack 0
 25529                           
 25530 ;; *************** function _TMR2_Initialize *****************
 25531 ;; Defined at:
 25532 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25533 ;; Parameters:    Size  Location     Type
 25534 ;;		None
 25535 ;; Auto vars:     Size  Location     Type
 25536 ;;		None
 25537 ;; Return value:  Size  Location     Type
 25538 ;;                  1    wreg      void 
 25539 ;; Registers used:
 25540 ;;		wreg, status,2, status,0, cstack
 25541 ;; Tracked objects:
 25542 ;;		On entry : 3F/F
 25543 ;;		On exit  : 3F/E
 25544 ;;		Unchanged: 0/0
 25545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25550 ;;Total ram usage:        0 bytes
 25551 ;; Hardware stack levels used: 1
 25552 ;; Hardware stack levels required when called: 5
 25553 ;; This function calls:
 25554 ;;		_TMR2_SetInterruptHandler
 25555 ;; This function is called by:
 25556 ;;		_SYSTEM_Initialize
 25557 ;; This function uses a non-reentrant model
 25558 ;;
 25559                           
 25560                           	psect	text93
 25561  009796                     __ptext93:
 25562                           	callstack 0
 25563  009796                     _TMR2_Initialize:
 25564                           	callstack 24
 25565                           
 25566                           ; BSR set to: 15
 25567                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25568                           
 25569                           ; BSR set to: 14
 25570                           ;incstack = 0
 25571  009796  0E02               	movlw	2
 25572  009798  6EBF               	movwf	191,c	;volatile
 25573                           
 25574                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25575  00979A  0E40               	movlw	64
 25576  00979C  6EBE               	movwf	190,c	;volatile
 25577                           
 25578                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25579  00979E  0E00               	movlw	0
 25580  0097A0  6EC0               	movwf	192,c	;volatile
 25581                           
 25582                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25583  0097A2  0EC7               	movlw	199
 25584  0097A4  6EBC               	movwf	188,c	;volatile
 25585                           
 25586                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25587  0097A6  0E00               	movlw	0
 25588  0097A8  6EBB               	movwf	187,c	;volatile
 25589                           
 25590                           ; BSR set to: 15
 25591                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25592  0097AA  010E               	movlb	14	; () banked
 25593  0097AC  93CE               	bcf	206,1,b	;volatile
 25594                           
 25595                           ; BSR set to: 14
 25596                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25597  0097AE  83C6               	bsf	198,1,b	;volatile
 25598                           
 25599                           ; BSR set to: 14
 25600                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25601  0097B0  0EBC               	movlw	low _TMR2_DefaultInterruptHandler
 25602  0097B2  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25603  0097B4  0E9E               	movlw	high _TMR2_DefaultInterruptHandler
 25604  0097B6  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25605  0097B8  ECCD  F04E         	call	_TMR2_SetInterruptHandler	;wreg free
 25606                           
 25607                           ; BSR set to: 14
 25608                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25609  0097BC  0ED9               	movlw	217
 25610  0097BE  6EBD               	movwf	189,c	;volatile
 25611                           
 25612                           ; BSR set to: 14
 25613  0097C0  0012               	return		;funcret
 25614  0097C2                     __end_of_TMR2_Initialize:
 25615                           	callstack 0
 25616                           
 25617 ;; *************** function _TMR2_SetInterruptHandler *****************
 25618 ;; Defined at:
 25619 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25620 ;; Parameters:    Size  Location     Type
 25621 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25622 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25623 ;; Auto vars:     Size  Location     Type
 25624 ;;		None
 25625 ;; Return value:  Size  Location     Type
 25626 ;;                  1    wreg      void 
 25627 ;; Registers used:
 25628 ;;		wreg, status,2, status,0
 25629 ;; Tracked objects:
 25630 ;;		On entry : 3F/E
 25631 ;;		On exit  : 3F/E
 25632 ;;		Unchanged: 3F/0
 25633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25638 ;;Total ram usage:        2 bytes
 25639 ;; Hardware stack levels used: 1
 25640 ;; Hardware stack levels required when called: 4
 25641 ;; This function calls:
 25642 ;;		Nothing
 25643 ;; This function is called by:
 25644 ;;		_TMR2_Initialize
 25645 ;; This function uses a non-reentrant model
 25646 ;;
 25647                           
 25648                           	psect	text94
 25649  009D9A                     __ptext94:
 25650                           	callstack 0
 25651  009D9A                     _TMR2_SetInterruptHandler:
 25652                           	callstack 24
 25653                           
 25654                           ; BSR set to: 14
 25655                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25656                           
 25657                           ; BSR set to: 14
 25658                           ;incstack = 0
 25659  009D9A  C010  F2DB         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25660  009D9E  C011  F2DC         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25661                           
 25662                           ; BSR set to: 14
 25663  009DA2  0012               	return		;funcret
 25664  009DA4                     __end_of_TMR2_SetInterruptHandler:
 25665                           	callstack 0
 25666                           
 25667 ;; *************** function _TMR1_Initialize *****************
 25668 ;; Defined at:
 25669 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25670 ;; Parameters:    Size  Location     Type
 25671 ;;		None
 25672 ;; Auto vars:     Size  Location     Type
 25673 ;;		None
 25674 ;; Return value:  Size  Location     Type
 25675 ;;                  1    wreg      void 
 25676 ;; Registers used:
 25677 ;;		wreg, status,2, status,0, cstack
 25678 ;; Tracked objects:
 25679 ;;		On entry : 3F/E
 25680 ;;		On exit  : 3F/E
 25681 ;;		Unchanged: 0/0
 25682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25687 ;;Total ram usage:        2 bytes
 25688 ;; Hardware stack levels used: 1
 25689 ;; Hardware stack levels required when called: 5
 25690 ;; This function calls:
 25691 ;;		_TMR1_SetInterruptHandler
 25692 ;; This function is called by:
 25693 ;;		_SYSTEM_Initialize
 25694 ;; This function uses a non-reentrant model
 25695 ;;
 25696                           
 25697                           	psect	text95
 25698  009426                     __ptext95:
 25699                           	callstack 0
 25700  009426                     _TMR1_Initialize:
 25701                           	callstack 24
 25702                           
 25703                           ; BSR set to: 14
 25704                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 25705                           
 25706                           ; BSR set to: 14
 25707                           ;incstack = 0
 25708  009426  0E00               	movlw	0
 25709  009428  6ED0               	movwf	208,c	;volatile
 25710                           
 25711                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 25712  00942A  0E00               	movlw	0
 25713  00942C  6ED1               	movwf	209,c	;volatile
 25714                           
 25715                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 25716  00942E  0E01               	movlw	1
 25717  009430  6ED2               	movwf	210,c	;volatile
 25718                           
 25719                           ; BSR set to: 14
 25720                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 25721  009432  68CE               	setf	206,c	;volatile
 25722                           
 25723                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 25724  009434  0E38               	movlw	56
 25725  009436  6ECD               	movwf	205,c	;volatile
 25726                           
 25727                           ; BSR set to: 14
 25728                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 25729  009438  91CE               	bcf	206,0,b	;volatile
 25730                           
 25731                           ; BSR set to: 14
 25732                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 25733  00943A  50CD               	movf	205,w,c	;volatile
 25734  00943C  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 25735  009440  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 25736  009442  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 25737  009446  6A12               	clrf	??_TMR1_Initialize^0,c
 25738  009448  1012               	iorwf	??_TMR1_Initialize^0,w,c
 25739  00944A  0102               	movlb	2	; () banked
 25740  00944C  6FDF               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 25741  00944E  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 25742  009450  6FE0               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 25743                           
 25744                           ; BSR set to: 2
 25745                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 25746  009452  010E               	movlb	14	; () banked
 25747  009454  81C6               	bsf	198,0,b	;volatile
 25748                           
 25749                           ; BSR set to: 14
 25750                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 25751  009456  0EBE               	movlw	low _TMR1_DefaultInterruptHandler
 25752  009458  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 25753  00945A  0E9E               	movlw	high _TMR1_DefaultInterruptHandler
 25754  00945C  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 25755  00945E  ECD2  F04E         	call	_TMR1_SetInterruptHandler	;wreg free
 25756                           
 25757                           ; BSR set to: 14
 25758                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 25759  009462  0E31               	movlw	49
 25760  009464  6ECF               	movwf	207,c	;volatile
 25761                           
 25762                           ; BSR set to: 14
 25763  009466  0012               	return		;funcret
 25764  009468                     __end_of_TMR1_Initialize:
 25765                           	callstack 0
 25766                           
 25767 ;; *************** function _TMR1_SetInterruptHandler *****************
 25768 ;; Defined at:
 25769 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 25770 ;; Parameters:    Size  Location     Type
 25771 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25772 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 25773 ;; Auto vars:     Size  Location     Type
 25774 ;;		None
 25775 ;; Return value:  Size  Location     Type
 25776 ;;                  1    wreg      void 
 25777 ;; Registers used:
 25778 ;;		wreg, status,2, status,0
 25779 ;; Tracked objects:
 25780 ;;		On entry : 3F/E
 25781 ;;		On exit  : 3F/E
 25782 ;;		Unchanged: 3F/0
 25783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25788 ;;Total ram usage:        2 bytes
 25789 ;; Hardware stack levels used: 1
 25790 ;; Hardware stack levels required when called: 4
 25791 ;; This function calls:
 25792 ;;		Nothing
 25793 ;; This function is called by:
 25794 ;;		_TMR1_Initialize
 25795 ;; This function uses a non-reentrant model
 25796 ;;
 25797                           
 25798                           	psect	text96
 25799  009DA4                     __ptext96:
 25800                           	callstack 0
 25801  009DA4                     _TMR1_SetInterruptHandler:
 25802                           	callstack 24
 25803                           
 25804                           ; BSR set to: 14
 25805                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 25806                           
 25807                           ; BSR set to: 14
 25808                           ;incstack = 0
 25809  009DA4  C010  F2DD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 25810  009DA8  C011  F2DE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 25811                           
 25812                           ; BSR set to: 14
 25813  009DAC  0012               	return		;funcret
 25814  009DAE                     __end_of_TMR1_SetInterruptHandler:
 25815                           	callstack 0
 25816                           
 25817 ;; *************** function _TMR0_Initialize *****************
 25818 ;; Defined at:
 25819 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 25820 ;; Parameters:    Size  Location     Type
 25821 ;;		None
 25822 ;; Auto vars:     Size  Location     Type
 25823 ;;		None
 25824 ;; Return value:  Size  Location     Type
 25825 ;;                  1    wreg      void 
 25826 ;; Registers used:
 25827 ;;		wreg, status,2, status,0, cstack
 25828 ;; Tracked objects:
 25829 ;;		On entry : 3F/E
 25830 ;;		On exit  : 3F/E
 25831 ;;		Unchanged: 0/0
 25832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25837 ;;Total ram usage:        0 bytes
 25838 ;; Hardware stack levels used: 1
 25839 ;; Hardware stack levels required when called: 5
 25840 ;; This function calls:
 25841 ;;		_TMR0_SetInterruptHandler
 25842 ;; This function is called by:
 25843 ;;		_SYSTEM_Initialize
 25844 ;; This function uses a non-reentrant model
 25845 ;;
 25846                           
 25847                           	psect	text97
 25848  009ACE                     __ptext97:
 25849                           	callstack 0
 25850  009ACE                     _TMR0_Initialize:
 25851                           	callstack 24
 25852                           
 25853                           ; BSR set to: 14
 25854                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 25855                           
 25856                           ; BSR set to: 14
 25857                           ;incstack = 0
 25858  009ACE  0E41               	movlw	65
 25859  009AD0  6ED6               	movwf	214,c	;volatile
 25860                           
 25861                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 25862  009AD2  0E84               	movlw	132
 25863  009AD4  6ED4               	movwf	212,c	;volatile
 25864                           
 25865                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 25866  009AD6  0E00               	movlw	0
 25867  009AD8  6ED3               	movwf	211,c	;volatile
 25868                           
 25869                           ; BSR set to: 14
 25870                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 25871  009ADA  9BCA               	bcf	202,5,b	;volatile
 25872                           
 25873                           ; BSR set to: 14
 25874                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 25875  009ADC  8BC2               	bsf	194,5,b	;volatile
 25876                           
 25877                           ; BSR set to: 14
 25878                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 25879  009ADE  0EC0               	movlw	low _TMR0_DefaultInterruptHandler
 25880  009AE0  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 25881  009AE2  0E9E               	movlw	high _TMR0_DefaultInterruptHandler
 25882  009AE4  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 25883  009AE6  ECD7  F04E         	call	_TMR0_SetInterruptHandler	;wreg free
 25884                           
 25885                           ; BSR set to: 14
 25886                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 25887  009AEA  0E87               	movlw	135
 25888  009AEC  6ED5               	movwf	213,c	;volatile
 25889                           
 25890                           ; BSR set to: 14
 25891  009AEE  0012               	return		;funcret
 25892  009AF0                     __end_of_TMR0_Initialize:
 25893                           	callstack 0
 25894                           
 25895 ;; *************** function _TMR0_SetInterruptHandler *****************
 25896 ;; Defined at:
 25897 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 25898 ;; Parameters:    Size  Location     Type
 25899 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25900 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 25901 ;; Auto vars:     Size  Location     Type
 25902 ;;		None
 25903 ;; Return value:  Size  Location     Type
 25904 ;;                  1    wreg      void 
 25905 ;; Registers used:
 25906 ;;		wreg, status,2, status,0
 25907 ;; Tracked objects:
 25908 ;;		On entry : 3F/E
 25909 ;;		On exit  : 3F/E
 25910 ;;		Unchanged: 3F/0
 25911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25916 ;;Total ram usage:        2 bytes
 25917 ;; Hardware stack levels used: 1
 25918 ;; Hardware stack levels required when called: 4
 25919 ;; This function calls:
 25920 ;;		Nothing
 25921 ;; This function is called by:
 25922 ;;		_TMR0_Initialize
 25923 ;; This function uses a non-reentrant model
 25924 ;;
 25925                           
 25926                           	psect	text98
 25927  009DAE                     __ptext98:
 25928                           	callstack 0
 25929  009DAE                     _TMR0_SetInterruptHandler:
 25930                           	callstack 24
 25931                           
 25932                           ; BSR set to: 14
 25933                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 25934                           
 25935                           ; BSR set to: 14
 25936                           ;incstack = 0
 25937  009DAE  C010  F2E1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 25938  009DB2  C011  F2E2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 25939                           
 25940                           ; BSR set to: 14
 25941  009DB6  0012               	return		;funcret
 25942  009DB8                     __end_of_TMR0_SetInterruptHandler:
 25943                           	callstack 0
 25944                           
 25945 ;; *************** function _PMD_Initialize *****************
 25946 ;; Defined at:
 25947 ;;		line 79 in file "mcc_generated_files/mcc.c"
 25948 ;; Parameters:    Size  Location     Type
 25949 ;;		None
 25950 ;; Auto vars:     Size  Location     Type
 25951 ;;		None
 25952 ;; Return value:  Size  Location     Type
 25953 ;;                  1    wreg      void 
 25954 ;; Registers used:
 25955 ;;		wreg, status,2
 25956 ;; Tracked objects:
 25957 ;;		On entry : 3F/0
 25958 ;;		On exit  : 3F/E
 25959 ;;		Unchanged: 0/0
 25960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25965 ;;Total ram usage:        0 bytes
 25966 ;; Hardware stack levels used: 1
 25967 ;; Hardware stack levels required when called: 4
 25968 ;; This function calls:
 25969 ;;		Nothing
 25970 ;; This function is called by:
 25971 ;;		_SYSTEM_Initialize
 25972 ;; This function uses a non-reentrant model
 25973 ;;
 25974                           
 25975                           	psect	text99
 25976  009B6C                     __ptext99:
 25977                           	callstack 0
 25978  009B6C                     _PMD_Initialize:
 25979                           	callstack 25
 25980                           
 25981                           ; BSR set to: 0
 25982                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 25983                           
 25984                           ; BSR set to: 14
 25985                           ;incstack = 0
 25986  009B6C  0E00               	movlw	0
 25987  009B6E  010E               	movlb	14	; () banked
 25988  009B70  6FE1               	movwf	225,b	;volatile
 25989                           
 25990                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 25991  009B72  0E00               	movlw	0
 25992  009B74  6FE2               	movwf	226,b	;volatile
 25993                           
 25994                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 25995  009B76  0E00               	movlw	0
 25996  009B78  6FE3               	movwf	227,b	;volatile
 25997                           
 25998                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 25999  009B7A  0E00               	movlw	0
 26000  009B7C  6FE4               	movwf	228,b	;volatile
 26001                           
 26002                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 26003  009B7E  0E00               	movlw	0
 26004  009B80  6FE5               	movwf	229,b	;volatile
 26005                           
 26006                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 26007  009B82  0E00               	movlw	0
 26008  009B84  6FE6               	movwf	230,b	;volatile
 26009                           
 26010                           ; BSR set to: 14
 26011  009B86  0012               	return		;funcret
 26012  009B88                     __end_of_PMD_Initialize:
 26013                           	callstack 0
 26014                           
 26015 ;; *************** function _PIN_MANAGER_Initialize *****************
 26016 ;; Defined at:
 26017 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 26018 ;; Parameters:    Size  Location     Type
 26019 ;;		None
 26020 ;; Auto vars:     Size  Location     Type
 26021 ;;		None
 26022 ;; Return value:  Size  Location     Type
 26023 ;;                  1    wreg      void 
 26024 ;; Registers used:
 26025 ;;		wreg, status,2
 26026 ;; Tracked objects:
 26027 ;;		On entry : 3F/E
 26028 ;;		On exit  : 3F/E
 26029 ;;		Unchanged: 0/0
 26030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26035 ;;Total ram usage:        0 bytes
 26036 ;; Hardware stack levels used: 1
 26037 ;; Hardware stack levels required when called: 4
 26038 ;; This function calls:
 26039 ;;		Nothing
 26040 ;; This function is called by:
 26041 ;;		_SYSTEM_Initialize
 26042 ;; This function uses a non-reentrant model
 26043 ;;
 26044                           
 26045                           	psect	text100
 26046  007FD8                     __ptext100:
 26047                           	callstack 0
 26048  007FD8                     _PIN_MANAGER_Initialize:
 26049                           	callstack 25
 26050                           
 26051                           ; BSR set to: 14
 26052                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 26053                           
 26054                           ; BSR set to: 14
 26055                           ;incstack = 0
 26056  007FD8  0E00               	movlw	0
 26057  007FDA  6E87               	movwf	135,c	;volatile
 26058                           
 26059                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 26060  007FDC  0E00               	movlw	0
 26061  007FDE  6E86               	movwf	134,c	;volatile
 26062                           
 26063                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 26064  007FE0  0E00               	movlw	0
 26065  007FE2  6E83               	movwf	131,c	;volatile
 26066                           
 26067                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 26068  007FE4  0E00               	movlw	0
 26069  007FE6  6E84               	movwf	132,c	;volatile
 26070                           
 26071                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 26072  007FE8  0E00               	movlw	0
 26073  007FEA  6E85               	movwf	133,c	;volatile
 26074                           
 26075                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 26076  007FEC  0E00               	movlw	0
 26077  007FEE  6E8C               	movwf	140,c	;volatile
 26078                           
 26079                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 26080  007FF0  0E7F               	movlw	127
 26081  007FF2  6E88               	movwf	136,c	;volatile
 26082                           
 26083                           ; BSR set to: 14
 26084                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 26085  007FF4  6889               	setf	137,c	;volatile
 26086                           
 26087                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 26088  007FF6  0E58               	movlw	88
 26089  007FF8  6E8A               	movwf	138,c	;volatile
 26090                           
 26091                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 26092  007FFA  0E00               	movlw	0
 26093  007FFC  6E8B               	movwf	139,c	;volatile
 26094                           
 26095                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 26096  007FFE  0E00               	movlw	0
 26097  008000  010F               	movlb	15	; () banked
 26098  008002  6F26               	movwf	38,b	;volatile
 26099                           
 26100                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 26101  008004  0E00               	movlw	0
 26102  008006  6F21               	movwf	33,b	;volatile
 26103                           
 26104                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 26105  008008  0E00               	movlw	0
 26106  00800A  6F19               	movwf	25,b	;volatile
 26107                           
 26108                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 26109  00800C  0E00               	movlw	0
 26110  00800E  6F2E               	movwf	46,b	;volatile
 26111                           
 26112                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 26113  008010  0E01               	movlw	1
 26114  008012  6F11               	movwf	17,b	;volatile
 26115                           
 26116                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 26117  008014  0E00               	movlw	0
 26118  008016  6F25               	movwf	37,b	;volatile
 26119                           
 26120                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 26121  008018  0E00               	movlw	0
 26122  00801A  6F2D               	movwf	45,b	;volatile
 26123                           
 26124                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 26125  00801C  0EF7               	movlw	247
 26126  00801E  6F18               	movwf	24,b	;volatile
 26127                           
 26128                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 26129  008020  0E00               	movlw	0
 26130  008022  6F10               	movwf	16,b	;volatile
 26131                           
 26132                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 26133  008024  0E00               	movlw	0
 26134  008026  6F20               	movwf	32,b	;volatile
 26135                           
 26136                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 26137  008028  0E00               	movlw	0
 26138  00802A  6F2C               	movwf	44,b	;volatile
 26139                           
 26140                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 26141  00802C  0E00               	movlw	0
 26142  00802E  6F0F               	movwf	15,b	;volatile
 26143                           
 26144                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 26145  008030  0E00               	movlw	0
 26146  008032  6F17               	movwf	23,b	;volatile
 26147                           
 26148                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 26149  008034  0E00               	movlw	0
 26150  008036  6F1F               	movwf	31,b	;volatile
 26151                           
 26152                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 26153  008038  0E00               	movlw	0
 26154  00803A  6F24               	movwf	36,b	;volatile
 26155                           
 26156                           ; BSR set to: 15
 26157                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 26158  00803C  690E               	setf	14,b	;volatile
 26159                           
 26160                           ; BSR set to: 15
 26161                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 26162  00803E  6916               	setf	22,b	;volatile
 26163                           
 26164                           ; BSR set to: 15
 26165                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 26166  008040  691E               	setf	30,b	;volatile
 26167                           
 26168                           ; BSR set to: 15
 26169                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 26170  008042  6923               	setf	35,b	;volatile
 26171                           
 26172                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 26173  008044  0E07               	movlw	7
 26174  008046  6F2B               	movwf	43,b	;volatile
 26175                           
 26176                           ; BSR set to: 15
 26177                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 26178  008048  690D               	setf	13,b	;volatile
 26179                           
 26180                           ; BSR set to: 15
 26181                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 26182  00804A  6915               	setf	21,b	;volatile
 26183                           
 26184                           ; BSR set to: 15
 26185                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 26186  00804C  691D               	setf	29,b	;volatile
 26187                           
 26188                           ; BSR set to: 15
 26189                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 26190  00804E  6922               	setf	34,b	;volatile
 26191                           
 26192                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 26193  008050  0E0F               	movlw	15
 26194  008052  6F2A               	movwf	42,b	;volatile
 26195                           
 26196                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 26197  008054  0E13               	movlw	19
 26198  008056  010E               	movlb	14	; () banked
 26199  008058  6FB7               	movwf	183,b	;volatile
 26200                           
 26201                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 26202  00805A  0E16               	movlw	22
 26203  00805C  6FB5               	movwf	181,b	;volatile
 26204                           
 26205                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 26206  00805E  0E0F               	movlw	15
 26207  008060  6FFA               	movwf	250,b	;volatile
 26208                           
 26209                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 26210  008062  0E10               	movlw	16
 26211  008064  6FFB               	movwf	251,b	;volatile
 26212                           
 26213                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 26214  008066  0E09               	movlw	9
 26215  008068  6FFE               	movwf	254,b	;volatile
 26216                           
 26217                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 26218  00806A  0E14               	movlw	20
 26219  00806C  6FB8               	movwf	184,b	;volatile
 26220                           
 26221                           ; BSR set to: 14
 26222  00806E  0012               	return		;funcret
 26223  008070                     __end_of_PIN_MANAGER_Initialize:
 26224                           	callstack 0
 26225                           
 26226 ;; *************** function _OSCILLATOR_Initialize *****************
 26227 ;; Defined at:
 26228 ;;		line 65 in file "mcc_generated_files/mcc.c"
 26229 ;; Parameters:    Size  Location     Type
 26230 ;;		None
 26231 ;; Auto vars:     Size  Location     Type
 26232 ;;		None
 26233 ;; Return value:  Size  Location     Type
 26234 ;;                  1    wreg      void 
 26235 ;; Registers used:
 26236 ;;		wreg, status,2
 26237 ;; Tracked objects:
 26238 ;;		On entry : 3F/E
 26239 ;;		On exit  : 3F/E
 26240 ;;		Unchanged: 0/0
 26241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26246 ;;Total ram usage:        0 bytes
 26247 ;; Hardware stack levels used: 1
 26248 ;; Hardware stack levels required when called: 4
 26249 ;; This function calls:
 26250 ;;		Nothing
 26251 ;; This function is called by:
 26252 ;;		_SYSTEM_Initialize
 26253 ;; This function uses a non-reentrant model
 26254 ;;
 26255                           
 26256                           	psect	text101
 26257  009CB4                     __ptext101:
 26258                           	callstack 0
 26259  009CB4                     _OSCILLATOR_Initialize:
 26260                           	callstack 25
 26261                           
 26262                           ; BSR set to: 14
 26263                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 26264                           
 26265                           ; BSR set to: 14
 26266                           ;incstack = 0
 26267  009CB4  0E60               	movlw	96
 26268  009CB6  6FD8               	movwf	216,b	;volatile
 26269                           
 26270                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 26271  009CB8  0E00               	movlw	0
 26272  009CBA  6FDA               	movwf	218,b	;volatile
 26273                           
 26274                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 26275  009CBC  0E00               	movlw	0
 26276  009CBE  6FDC               	movwf	220,b	;volatile
 26277                           
 26278                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 26279  009CC0  0E08               	movlw	8
 26280  009CC2  6FDE               	movwf	222,b	;volatile
 26281                           
 26282                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 26283  009CC4  0E00               	movlw	0
 26284  009CC6  6FDD               	movwf	221,b	;volatile
 26285                           
 26286                           ; BSR set to: 14
 26287  009CC8  0012               	return		;funcret
 26288  009CCA                     __end_of_OSCILLATOR_Initialize:
 26289                           	callstack 0
 26290                           
 26291 ;; *************** function _INTERRUPT_Initialize *****************
 26292 ;; Defined at:
 26293 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26294 ;; Parameters:    Size  Location     Type
 26295 ;;		None
 26296 ;; Auto vars:     Size  Location     Type
 26297 ;;		None
 26298 ;; Return value:  Size  Location     Type
 26299 ;;                  1    wreg      void 
 26300 ;; Registers used:
 26301 ;;		None
 26302 ;; Tracked objects:
 26303 ;;		On entry : 3F/0
 26304 ;;		On exit  : 3F/0
 26305 ;;		Unchanged: 3F/0
 26306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26311 ;;Total ram usage:        0 bytes
 26312 ;; Hardware stack levels used: 1
 26313 ;; Hardware stack levels required when called: 4
 26314 ;; This function calls:
 26315 ;;		Nothing
 26316 ;; This function is called by:
 26317 ;;		_SYSTEM_Initialize
 26318 ;; This function uses a non-reentrant model
 26319 ;;
 26320                           
 26321                           	psect	text102
 26322  009E92                     __ptext102:
 26323                           	callstack 0
 26324  009E92                     _INTERRUPT_Initialize:
 26325                           	callstack 25
 26326                           
 26327                           ; BSR set to: 0
 26328                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 26329                           
 26330                           ; BSR set to: 14
 26331                           ;incstack = 0
 26332  009E92  9AF2               	bcf	242,5,c	;volatile
 26333                           
 26334                           ; BSR set to: 0
 26335  009E94  0012               	return		;funcret
 26336  009E96                     __end_of_INTERRUPT_Initialize:
 26337                           	callstack 0
 26338                           
 26339 ;; *************** function _I2C1_Initialize *****************
 26340 ;; Defined at:
 26341 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26342 ;; Parameters:    Size  Location     Type
 26343 ;;		None
 26344 ;; Auto vars:     Size  Location     Type
 26345 ;;		None
 26346 ;; Return value:  Size  Location     Type
 26347 ;;                  1    wreg      void 
 26348 ;; Registers used:
 26349 ;;		wreg, status,2
 26350 ;; Tracked objects:
 26351 ;;		On entry : 3F/E
 26352 ;;		On exit  : 3F/E
 26353 ;;		Unchanged: 3F/0
 26354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26359 ;;Total ram usage:        0 bytes
 26360 ;; Hardware stack levels used: 1
 26361 ;; Hardware stack levels required when called: 4
 26362 ;; This function calls:
 26363 ;;		Nothing
 26364 ;; This function is called by:
 26365 ;;		_SYSTEM_Initialize
 26366 ;; This function uses a non-reentrant model
 26367 ;;
 26368                           
 26369                           	psect	text103
 26370  009D08                     __ptext103:
 26371                           	callstack 0
 26372  009D08                     _I2C1_Initialize:
 26373                           	callstack 25
 26374                           
 26375                           ; BSR set to: 14
 26376                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;incstack = 0
 26380  009D08  0E80               	movlw	128
 26381  009D0A  6E95               	movwf	149,c	;volatile
 26382                           
 26383                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26384  009D0C  0E08               	movlw	8
 26385  009D0E  6E96               	movwf	150,c	;volatile
 26386                           
 26387                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26388  009D10  0E00               	movlw	0
 26389  009D12  6E97               	movwf	151,c	;volatile
 26390                           
 26391                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26392  009D14  0E9F               	movlw	159
 26393  009D16  6E93               	movwf	147,c	;volatile
 26394                           
 26395                           ; BSR set to: 14
 26396                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26397  009D18  9A96               	bcf	150,5,c	;volatile
 26398                           
 26399                           ; BSR set to: 14
 26400  009D1A  0012               	return		;funcret
 26401  009D1C                     __end_of_I2C1_Initialize:
 26402                           	callstack 0
 26403                           
 26404 ;; *************** function _EUSART1_Initialize *****************
 26405 ;; Defined at:
 26406 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26407 ;; Parameters:    Size  Location     Type
 26408 ;;		None
 26409 ;; Auto vars:     Size  Location     Type
 26410 ;;		None
 26411 ;; Return value:  Size  Location     Type
 26412 ;;                  1    wreg      void 
 26413 ;; Registers used:
 26414 ;;		wreg, status,2, status,0, cstack
 26415 ;; Tracked objects:
 26416 ;;		On entry : 3F/E
 26417 ;;		On exit  : 3F/E
 26418 ;;		Unchanged: 0/0
 26419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26424 ;;Total ram usage:        0 bytes
 26425 ;; Hardware stack levels used: 1
 26426 ;; Hardware stack levels required when called: 5
 26427 ;; This function calls:
 26428 ;;		_EUSART1_SetErrorHandler
 26429 ;;		_EUSART1_SetFramingErrorHandler
 26430 ;;		_EUSART1_SetOverrunErrorHandler
 26431 ;;		_EUSART1_SetRxInterruptHandler
 26432 ;;		_EUSART1_SetTxInterruptHandler
 26433 ;; This function is called by:
 26434 ;;		_SYSTEM_Initialize
 26435 ;; This function uses a non-reentrant model
 26436 ;;
 26437                           
 26438                           	psect	text104
 26439  00864E                     __ptext104:
 26440                           	callstack 0
 26441  00864E                     _EUSART1_Initialize:
 26442                           	callstack 24
 26443                           
 26444                           ; BSR set to: 14
 26445                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26446                           
 26447                           ; BSR set to: 14
 26448                           ;incstack = 0
 26449  00864E  9BC5               	bcf	197,5,b	;volatile
 26450                           
 26451                           ; BSR set to: 14
 26452                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26453  008650  0E3E               	movlw	low _EUSART1_Receive_ISR
 26454  008652  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26455  008654  0E7F               	movlw	high _EUSART1_Receive_ISR
 26456  008656  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26457  008658  ECE1  F04E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26458                           
 26459                           ; BSR set to: 14
 26460                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26461  00865C  99C5               	bcf	197,4,b	;volatile
 26462                           
 26463                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26464  00865E  0EAE               	movlw	low _EUSART1_Transmit_ISR
 26465  008660  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26466  008662  0E96               	movlw	high _EUSART1_Transmit_ISR
 26467  008664  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26468  008666  ECDC  F04E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26469                           
 26470                           ; BSR set to: 14
 26471                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26472  00866A  0E08               	movlw	8
 26473  00866C  6E9F               	movwf	159,c	;volatile
 26474                           
 26475                           ; BSR set to: 14
 26476                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26477  00866E  0E90               	movlw	144
 26478  008670  6E9D               	movwf	157,c	;volatile
 26479                           
 26480                           ; BSR set to: 14
 26481                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26482  008672  0E24               	movlw	36
 26483  008674  6E9E               	movwf	158,c	;volatile
 26484                           
 26485                           ; BSR set to: 14
 26486                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26487  008676  0E82               	movlw	130
 26488  008678  6E9B               	movwf	155,c	;volatile
 26489                           
 26490                           ; BSR set to: 14
 26491                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26492  00867A  0E06               	movlw	6
 26493  00867C  6E9C               	movwf	156,c	;volatile
 26494                           
 26495                           ; BSR set to: 14
 26496                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26497  00867E  0EC2               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26498  008680  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26499  008682  0E9E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26500  008684  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26501  008686  ECEB  F04E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26502                           
 26503                           ; BSR set to: 14
 26504                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26505  00868A  0E82               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26506  00868C  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26507  00868E  0E9E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26508  008690  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26509  008692  ECE6  F04E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26510                           
 26511                           ; BSR set to: 14
 26512                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26513  008696  0E88               	movlw	low _EUSART1_DefaultErrorHandler
 26514  008698  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26515  00869A  0E9E               	movlw	high _EUSART1_DefaultErrorHandler
 26516  00869C  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26517  00869E  ECF0  F04E         	call	_EUSART1_SetErrorHandler	;wreg free
 26518                           
 26519                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26520  0086A2  0E00               	movlw	0
 26521  0086A4  0101               	movlb	1	; () banked
 26522  0086A6  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26523                           
 26524                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26525  0086A8  0E00               	movlw	0
 26526  0086AA  0100               	movlb	0	; () banked
 26527  0086AC  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26528                           
 26529                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26530  0086AE  0E00               	movlw	0
 26531  0086B0  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26532                           
 26533                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26534  0086B2  0E08               	movlw	8
 26535  0086B4  0101               	movlb	1	; () banked
 26536  0086B6  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26537                           
 26538                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26539  0086B8  0E00               	movlw	0
 26540  0086BA  0100               	movlb	0	; () banked
 26541  0086BC  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26542                           
 26543                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26544  0086BE  0E00               	movlw	0
 26545  0086C0  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26546                           
 26547                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26548  0086C2  0E00               	movlw	0
 26549  0086C4  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26550                           
 26551                           ; BSR set to: 0
 26552                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26553  0086C6  010E               	movlb	14	; () banked
 26554  0086C8  8BC5               	bsf	197,5,b	;volatile
 26555                           
 26556                           ; BSR set to: 14
 26557  0086CA  0012               	return		;funcret
 26558  0086CC                     __end_of_EUSART1_Initialize:
 26559                           	callstack 0
 26560                           
 26561 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26562 ;; Defined at:
 26563 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26564 ;; Parameters:    Size  Location     Type
 26565 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26566 ;;		 -> EUSART1_Transmit_ISR(1), 
 26567 ;; Auto vars:     Size  Location     Type
 26568 ;;		None
 26569 ;; Return value:  Size  Location     Type
 26570 ;;                  1    wreg      void 
 26571 ;; Registers used:
 26572 ;;		wreg, status,2, status,0
 26573 ;; Tracked objects:
 26574 ;;		On entry : 3F/E
 26575 ;;		On exit  : 3F/E
 26576 ;;		Unchanged: 3F/0
 26577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26582 ;;Total ram usage:        2 bytes
 26583 ;; Hardware stack levels used: 1
 26584 ;; Hardware stack levels required when called: 4
 26585 ;; This function calls:
 26586 ;;		Nothing
 26587 ;; This function is called by:
 26588 ;;		_EUSART1_Initialize
 26589 ;; This function uses a non-reentrant model
 26590 ;;
 26591                           
 26592                           	psect	text105
 26593  009DB8                     __ptext105:
 26594                           	callstack 0
 26595  009DB8                     _EUSART1_SetTxInterruptHandler:
 26596                           	callstack 24
 26597                           
 26598                           ; BSR set to: 14
 26599                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26600                           
 26601                           ; BSR set to: 14
 26602                           ;incstack = 0
 26603  009DB8  C010  F2EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26604  009DBC  C011  F2EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26605                           
 26606                           ; BSR set to: 14
 26607  009DC0  0012               	return		;funcret
 26608  009DC2                     __end_of_EUSART1_SetTxInterruptHandler:
 26609                           	callstack 0
 26610                           
 26611 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26612 ;; Defined at:
 26613 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26614 ;; Parameters:    Size  Location     Type
 26615 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26616 ;;		 -> EUSART1_Receive_ISR(1), 
 26617 ;; Auto vars:     Size  Location     Type
 26618 ;;		None
 26619 ;; Return value:  Size  Location     Type
 26620 ;;                  1    wreg      void 
 26621 ;; Registers used:
 26622 ;;		wreg, status,2, status,0
 26623 ;; Tracked objects:
 26624 ;;		On entry : 3F/E
 26625 ;;		On exit  : 3F/E
 26626 ;;		Unchanged: 3F/0
 26627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26632 ;;Total ram usage:        2 bytes
 26633 ;; Hardware stack levels used: 1
 26634 ;; Hardware stack levels required when called: 4
 26635 ;; This function calls:
 26636 ;;		Nothing
 26637 ;; This function is called by:
 26638 ;;		_EUSART1_Initialize
 26639 ;; This function uses a non-reentrant model
 26640 ;;
 26641                           
 26642                           	psect	text106
 26643  009DC2                     __ptext106:
 26644                           	callstack 0
 26645  009DC2                     _EUSART1_SetRxInterruptHandler:
 26646                           	callstack 24
 26647                           
 26648                           ; BSR set to: 14
 26649                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26650                           
 26651                           ; BSR set to: 14
 26652                           ;incstack = 0
 26653  009DC2  C010  F2E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26654  009DC6  C011  F2EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26655                           
 26656                           ; BSR set to: 14
 26657  009DCA  0012               	return		;funcret
 26658  009DCC                     __end_of_EUSART1_SetRxInterruptHandler:
 26659                           	callstack 0
 26660                           
 26661 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26662 ;; Defined at:
 26663 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26664 ;; Parameters:    Size  Location     Type
 26665 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26666 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26667 ;; Auto vars:     Size  Location     Type
 26668 ;;		None
 26669 ;; Return value:  Size  Location     Type
 26670 ;;                  1    wreg      void 
 26671 ;; Registers used:
 26672 ;;		wreg, status,2, status,0
 26673 ;; Tracked objects:
 26674 ;;		On entry : 3F/E
 26675 ;;		On exit  : 3F/E
 26676 ;;		Unchanged: 3F/0
 26677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26682 ;;Total ram usage:        2 bytes
 26683 ;; Hardware stack levels used: 1
 26684 ;; Hardware stack levels required when called: 4
 26685 ;; This function calls:
 26686 ;;		Nothing
 26687 ;; This function is called by:
 26688 ;;		_EUSART1_Initialize
 26689 ;; This function uses a non-reentrant model
 26690 ;;
 26691                           
 26692                           	psect	text107
 26693  009DCC                     __ptext107:
 26694                           	callstack 0
 26695  009DCC                     _EUSART1_SetOverrunErrorHandler:
 26696                           	callstack 24
 26697                           
 26698                           ; BSR set to: 14
 26699                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 26700                           
 26701                           ; BSR set to: 14
 26702                           ;incstack = 0
 26703  009DCC  C010  F2E5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 26704  009DD0  C011  F2E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 26705                           
 26706                           ; BSR set to: 14
 26707  009DD4  0012               	return		;funcret
 26708  009DD6                     __end_of_EUSART1_SetOverrunErrorHandler:
 26709                           	callstack 0
 26710                           
 26711 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 26712 ;; Defined at:
 26713 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 26714 ;; Parameters:    Size  Location     Type
 26715 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26716 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 26717 ;; Auto vars:     Size  Location     Type
 26718 ;;		None
 26719 ;; Return value:  Size  Location     Type
 26720 ;;                  1    wreg      void 
 26721 ;; Registers used:
 26722 ;;		wreg, status,2, status,0
 26723 ;; Tracked objects:
 26724 ;;		On entry : 3F/E
 26725 ;;		On exit  : 3F/E
 26726 ;;		Unchanged: 3F/0
 26727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;Total ram usage:        2 bytes
 26733 ;; Hardware stack levels used: 1
 26734 ;; Hardware stack levels required when called: 4
 26735 ;; This function calls:
 26736 ;;		Nothing
 26737 ;; This function is called by:
 26738 ;;		_EUSART1_Initialize
 26739 ;; This function uses a non-reentrant model
 26740 ;;
 26741                           
 26742                           	psect	text108
 26743  009DD6                     __ptext108:
 26744                           	callstack 0
 26745  009DD6                     _EUSART1_SetFramingErrorHandler:
 26746                           	callstack 24
 26747                           
 26748                           ; BSR set to: 14
 26749                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 26750                           
 26751                           ; BSR set to: 14
 26752                           ;incstack = 0
 26753  009DD6  C010  F2E7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 26754  009DDA  C011  F2E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 26755                           
 26756                           ; BSR set to: 14
 26757  009DDE  0012               	return		;funcret
 26758  009DE0                     __end_of_EUSART1_SetFramingErrorHandler:
 26759                           	callstack 0
 26760                           
 26761 ;; *************** function _EUSART1_SetErrorHandler *****************
 26762 ;; Defined at:
 26763 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 26764 ;; Parameters:    Size  Location     Type
 26765 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26766 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 26767 ;; Auto vars:     Size  Location     Type
 26768 ;;		None
 26769 ;; Return value:  Size  Location     Type
 26770 ;;                  1    wreg      void 
 26771 ;; Registers used:
 26772 ;;		wreg, status,2, status,0
 26773 ;; Tracked objects:
 26774 ;;		On entry : 3F/E
 26775 ;;		On exit  : 3F/E
 26776 ;;		Unchanged: 3F/0
 26777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26782 ;;Total ram usage:        2 bytes
 26783 ;; Hardware stack levels used: 1
 26784 ;; Hardware stack levels required when called: 4
 26785 ;; This function calls:
 26786 ;;		Nothing
 26787 ;; This function is called by:
 26788 ;;		_EUSART1_Initialize
 26789 ;; This function uses a non-reentrant model
 26790 ;;
 26791                           
 26792                           	psect	text109
 26793  009DE0                     __ptext109:
 26794                           	callstack 0
 26795  009DE0                     _EUSART1_SetErrorHandler:
 26796                           	callstack 24
 26797                           
 26798                           ; BSR set to: 14
 26799                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 26800                           
 26801                           ; BSR set to: 14
 26802                           ;incstack = 0
 26803  009DE0  C010  F2E3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 26804  009DE4  C011  F2E4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 26805                           
 26806                           ; BSR set to: 14
 26807  009DE8  0012               	return		;funcret
 26808  009DEA                     __end_of_EUSART1_SetErrorHandler:
 26809                           	callstack 0
 26810                           
 26811 ;; *************** function _ADCC_Initialize *****************
 26812 ;; Defined at:
 26813 ;;		line 62 in file "mcc_generated_files/adcc.c"
 26814 ;; Parameters:    Size  Location     Type
 26815 ;;		None
 26816 ;; Auto vars:     Size  Location     Type
 26817 ;;		None
 26818 ;; Return value:  Size  Location     Type
 26819 ;;                  1    wreg      void 
 26820 ;; Registers used:
 26821 ;;		wreg, status,2
 26822 ;; Tracked objects:
 26823 ;;		On entry : 3F/E
 26824 ;;		On exit  : 3F/F
 26825 ;;		Unchanged: 0/0
 26826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26831 ;;Total ram usage:        0 bytes
 26832 ;; Hardware stack levels used: 1
 26833 ;; Hardware stack levels required when called: 4
 26834 ;; This function calls:
 26835 ;;		Nothing
 26836 ;; This function is called by:
 26837 ;;		_SYSTEM_Initialize
 26838 ;; This function uses a non-reentrant model
 26839 ;;
 26840                           
 26841                           	psect	text110
 26842  0091DA                     __ptext110:
 26843                           	callstack 0
 26844  0091DA                     _ADCC_Initialize:
 26845                           	callstack 25
 26846                           
 26847                           ; BSR set to: 14
 26848                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 26849                           
 26850                           ; BSR set to: 14
 26851                           ;incstack = 0
 26852  0091DA  0E00               	movlw	0
 26853  0091DC  6E6A               	movwf	106,c	;volatile
 26854                           
 26855                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 26856  0091DE  0E00               	movlw	0
 26857  0091E0  6E6B               	movwf	107,c	;volatile
 26858                           
 26859                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 26860  0091E2  0E00               	movlw	0
 26861  0091E4  6E6C               	movwf	108,c	;volatile
 26862                           
 26863                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 26864  0091E6  0E00               	movlw	0
 26865  0091E8  6E6D               	movwf	109,c	;volatile
 26866                           
 26867                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 26868  0091EA  0E00               	movlw	0
 26869  0091EC  6E68               	movwf	104,c	;volatile
 26870                           
 26871                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 26872  0091EE  0E00               	movlw	0
 26873  0091F0  6E69               	movwf	105,c	;volatile
 26874                           
 26875                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 26876  0091F2  0E00               	movlw	0
 26877  0091F4  6E66               	movwf	102,c	;volatile
 26878                           
 26879                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 26880  0091F6  0E00               	movlw	0
 26881  0091F8  010F               	movlb	15	; () banked
 26882  0091FA  6F5F               	movwf	95,b	;volatile
 26883                           
 26884                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 26885  0091FC  0E00               	movlw	0
 26886  0091FE  6F5D               	movwf	93,b	;volatile
 26887                           
 26888                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 26889  009200  0E00               	movlw	0
 26890  009202  6F5E               	movwf	94,b	;volatile
 26891                           
 26892                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 26893  009204  0E00               	movlw	0
 26894  009206  6F59               	movwf	89,b	;volatile
 26895                           
 26896                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 26897  009208  0E00               	movlw	0
 26898  00920A  6F5A               	movwf	90,b	;volatile
 26899                           
 26900                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 26901  00920C  0E00               	movlw	0
 26902  00920E  6F5B               	movwf	91,b	;volatile
 26903                           
 26904                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 26905  009210  0E00               	movlw	0
 26906  009212  6E65               	movwf	101,c	;volatile
 26907                           
 26908                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 26909  009214  0E00               	movlw	0
 26910  009216  6F58               	movwf	88,b	;volatile
 26911                           
 26912                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 26913  009218  0E00               	movlw	0
 26914  00921A  6F56               	movwf	86,b	;volatile
 26915                           
 26916                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 26917  00921C  0E3F               	movlw	63
 26918  00921E  6F57               	movwf	87,b	;volatile
 26919                           
 26920                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 26921  009220  0E80               	movlw	128
 26922  009222  6E60               	movwf	96,c	;volatile
 26923                           
 26924                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 26925  009224  0E00               	movlw	0
 26926  009226  6F5C               	movwf	92,b	;volatile
 26927                           
 26928                           ; BSR set to: 15
 26929  009228  0012               	return		;funcret
 26930  00922A                     __end_of_ADCC_Initialize:
 26931                           	callstack 0
 26932                           
 26933 ;; *************** function _EUSART1_is_rx_ready *****************
 26934 ;; Defined at:
 26935 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 26936 ;; Parameters:    Size  Location     Type
 26937 ;;		None
 26938 ;; Auto vars:     Size  Location     Type
 26939 ;;		None
 26940 ;; Return value:  Size  Location     Type
 26941 ;;                  1    wreg      _Bool 
 26942 ;; Registers used:
 26943 ;;		wreg, status,2
 26944 ;; Tracked objects:
 26945 ;;		On entry : 0/1
 26946 ;;		On exit  : 3F/0
 26947 ;;		Unchanged: 0/0
 26948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26953 ;;Total ram usage:        0 bytes
 26954 ;; Hardware stack levels used: 1
 26955 ;; Hardware stack levels required when called: 4
 26956 ;; This function calls:
 26957 ;;		Nothing
 26958 ;; This function is called by:
 26959 ;;		_main
 26960 ;; This function uses a non-reentrant model
 26961 ;;
 26962                           
 26963                           	psect	text111
 26964  009D2E                     __ptext111:
 26965                           	callstack 0
 26966  009D2E                     _EUSART1_is_rx_ready:
 26967                           	callstack 26
 26968                           
 26969                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 26970                           
 26971                           ; BSR set to: 15
 26972                           ;incstack = 0
 26973  009D2E  0100               	movlb	0	; () banked
 26974  009D30  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 26975  009D32  B4D8               	btfsc	status,2,c
 26976  009D34  D002               	goto	u29570
 26977  009D36  0E01               	movlw	1
 26978  009D38  0012               	return	
 26979  009D3A                     u29570:
 26980  009D3A  0E00               	movlw	0
 26981                           
 26982                           ; BSR set to: 0
 26983  009D3C  0012               	return		;funcret
 26984  009D3E                     __end_of_EUSART1_is_rx_ready:
 26985                           	callstack 0
 26986                           
 26987 ;; *************** function _ControlMotor *****************
 26988 ;; Defined at:
 26989 ;;		line 703 in file "outputs_MC50.c"
 26990 ;; Parameters:    Size  Location     Type
 26991 ;;		None
 26992 ;; Auto vars:     Size  Location     Type
 26993 ;;  stateMotor      1   23[COMRAM] enum E10381
 26994 ;; Return value:  Size  Location     Type
 26995 ;;                  1    wreg      void 
 26996 ;; Registers used:
 26997 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26998 ;; Tracked objects:
 26999 ;;		On entry : 3E/1
 27000 ;;		On exit  : 3E/0
 27001 ;;		Unchanged: 0/0
 27002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27005 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27006 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27007 ;;Total ram usage:        7 bytes
 27008 ;; Hardware stack levels used: 1
 27009 ;; Hardware stack levels required when called: 5
 27010 ;; This function calls:
 27011 ;;		_VerifyElectricalBrake
 27012 ;; This function is called by:
 27013 ;;		_main
 27014 ;; This function uses a non-reentrant model
 27015 ;;
 27016                           
 27017                           	psect	text112
 27018  00531A                     __ptext112:
 27019                           	callstack 0
 27020  00531A                     _ControlMotor:
 27021                           	callstack 25
 27022                           
 27023                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 27024                           
 27025                           ; BSR set to: 0
 27026                           ;incstack = 0
 27027  00531A  0101               	movlb	1	; () banked
 27028  00531C  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 27029  00531E  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 27030  005320  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 27031  005322  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 27032  005324  A4D8               	btfss	status,2,c
 27033  005326  D00D               	goto	l25398
 27034                           
 27035                           ; BSR set to: 1
 27036  005328  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 27037  00532A  B4D8               	btfsc	status,2,c
 27038  00532C  D00A               	goto	l25398
 27039                           
 27040                           ; BSR set to: 1
 27041  00532E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 27042  005330  A4D8               	btfss	status,2,c
 27043  005332  D007               	goto	l25398
 27044                           
 27045                           ; BSR set to: 1
 27046  005334  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 27047  005336  A4D8               	btfss	status,2,c
 27048  005338  D004               	goto	l25398
 27049                           
 27050                           ; BSR set to: 1
 27051                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 27052  00533A  0E00               	movlw	0
 27053  00533C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27054                           
 27055                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 27056  00533E  0E02               	movlw	2
 27057  005340  D007               	goto	L100
 27058  005342                     l25398:
 27059                           
 27060                           ; BSR set to: 1
 27061  005342  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 27062  005344  A4D8               	btfss	status,2,c
 27063  005346  D005               	goto	l25404
 27064                           
 27065                           ; BSR set to: 1
 27066  005348  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27067  00534A  A4D8               	btfss	status,2,c
 27068  00534C  D002               	goto	l25404
 27069                           
 27070                           ; BSR set to: 1
 27071                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 27072  00534E  0E00               	movlw	0
 27073  005350                     L100:
 27074  005350  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 27075  005352                     l25404:
 27076                           
 27077                           ; BSR set to: 1
 27078                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 27079  005352  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27080  005354  ECE1  F043         	call	_VerifyElectricalBrake
 27081  005358  6E18               	movwf	ControlMotor@stateMotor^0,c
 27082                           
 27083                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 27084  00535A  5018               	movf	ControlMotor@stateMotor^0,w,c
 27085  00535C  A4D8               	btfss	status,2,c
 27086  00535E  D00A               	goto	l25414
 27087                           
 27088                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 27089  005360  0E01               	movlw	1
 27090  005362  0101               	movlb	1	; () banked
 27091  005364  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27092                           
 27093                           ; BSR set to: 1
 27094                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 27095  005366  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 27096  005368  0012               	return	
 27097                           
 27098                           ; BSR set to: 1
 27099                           
 27100                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 27101  00536A  9287               	bcf	135,1,c	;volatile
 27102                           
 27103                           ; BSR set to: 1
 27104                           
 27105                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 27106  00536C  9087               	bcf	135,0,c	;volatile
 27107  00536E                     l25412:
 27108                           
 27109                           ; BSR set to: 1
 27110                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 27111  00536E  0E00               	movlw	0
 27112  005370  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27113  005372  0012               	return	
 27114  005374                     l25414:
 27115  005374  0100               	movlb	0	; () banked
 27116  005376  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27117  005378  A4D8               	btfss	status,2,c
 27118  00537A  D022               	goto	l25430
 27119                           
 27120                           ; BSR set to: 0
 27121  00537C  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27122  00537E  A4D8               	btfss	status,2,c
 27123  005380  D01F               	goto	l25430
 27124                           
 27125                           ; BSR set to: 0
 27126  005382  0101               	movlb	1	; () banked
 27127  005384  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27128  005386  A4D8               	btfss	status,2,c
 27129  005388  D01B               	goto	l25430
 27130                           
 27131                           ; BSR set to: 1
 27132  00538A  5018               	movf	ControlMotor@stateMotor^0,w,c
 27133  00538C  A4D8               	btfss	status,2,c
 27134                           
 27135                           ; BSR set to: 1
 27136  00538E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27137  005390  D017               	goto	l25430
 27138  005392  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27139  005394  E103               	bnz	u31410
 27140  005396  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27141  005398  A0D8               	btfss	status,0,c
 27142  00539A  D012               	goto	l25430
 27143  00539C                     u31410:
 27144                           
 27145                           ; BSR set to: 1
 27146  00539C  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27147  00539E  D005               	goto	u31420
 27148  0053A0  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27149  0053A2  E10E               	bnz	l25430
 27150  0053A4  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27151  0053A6  B0D8               	btfsc	status,0,c
 27152  0053A8  D00B               	goto	l25430
 27153  0053AA                     u31420:
 27154                           
 27155                           ; BSR set to: 1
 27156                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 27157  0053AA  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27158  0053AC  D006               	goto	u31430
 27159  0053AE  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27160  0053B0  E103               	bnz	u31431
 27161  0053B2  0E12               	movlw	18
 27162  0053B4  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 27163  0053B6  B0D8               	btfsc	status,0,c
 27164  0053B8                     u31431:
 27165  0053B8  0012               	return	
 27166  0053BA                     u31430:
 27167                           
 27168                           ; BSR set to: 1
 27169                           
 27170                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 27171  0053BA  8287               	bsf	135,1,c	;volatile
 27172                           
 27173                           ; BSR set to: 1
 27174                           
 27175                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 27176  0053BC  8087               	bsf	135,0,c	;volatile
 27177  0053BE  D7D7               	goto	l25412
 27178  0053C0                     l25430:
 27179  0053C0  0418               	decf	ControlMotor@stateMotor^0,w,c
 27180  0053C2  B4D8               	btfsc	status,2,c
 27181  0053C4  D004               	goto	u31450
 27182  0053C6  0E02               	movlw	2
 27183  0053C8  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27184  0053CA  A4D8               	btfss	status,2,c
 27185  0053CC  D063               	goto	l25460
 27186  0053CE                     u31450:
 27187  0053CE  0101               	movlb	1	; () banked
 27188  0053D0  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 27189  0053D2  A4D8               	btfss	status,2,c
 27190  0053D4  D05F               	goto	l25460
 27191                           
 27192                           ; BSR set to: 1
 27193                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 27194  0053D6  B291               	btfsc	145,1,c	;volatile
 27195  0053D8  D004               	goto	u31480
 27196                           
 27197                           ; BSR set to: 1
 27198  0053DA  0100               	movlb	0	; () banked
 27199  0053DC  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27200  0053DE  B4D8               	btfsc	status,2,c
 27201  0053E0  D006               	goto	u31500
 27202  0053E2                     u31480:
 27203  0053E2  B091               	btfsc	145,0,c	;volatile
 27204  0053E4  D04F               	goto	l2353
 27205  0053E6  0100               	movlb	0	; () banked
 27206  0053E8  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27207  0053EA  A4D8               	btfss	status,2,c
 27208  0053EC  D04B               	goto	l2353
 27209  0053EE                     u31500:
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27213  0053EE  B091               	btfsc	145,0,c	;volatile
 27214  0053F0  D003               	goto	u31520
 27215                           
 27216                           ; BSR set to: 0
 27217  0053F2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27218  0053F4  B4D8               	btfsc	status,2,c
 27219  0053F6  D005               	goto	u31540
 27220  0053F8                     u31520:
 27221                           
 27222                           ; BSR set to: 0
 27223  0053F8  B291               	btfsc	145,1,c	;volatile
 27224  0053FA  D03A               	goto	l25456
 27225                           
 27226                           ; BSR set to: 0
 27227  0053FC  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27228  0053FE  A4D8               	btfss	status,2,c
 27229  005400  D037               	goto	l25456
 27230  005402                     u31540:
 27231                           
 27232                           ; BSR set to: 0
 27233                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 27234  005402  0E00               	movlw	0
 27235  005404  0101               	movlb	1	; () banked
 27236  005406  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27237                           
 27238                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 27239  005408  0E00               	movlw	0
 27240  00540A  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27241  00540C  0EC8               	movlw	200
 27242  00540E  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27243                           
 27244                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 27245  005410  0E00               	movlw	0
 27246  005412  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27247  005414  0E14               	movlw	20
 27248  005416  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27249                           
 27250                           ; BSR set to: 1
 27251                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 27252  005418  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27253  00541A  B4D8               	btfsc	status,2,c
 27254  00541C  D003               	goto	u31560
 27255                           
 27256                           ; BSR set to: 1
 27257  00541E  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 27258  005420  A4D8               	btfss	status,2,c
 27259  005422  D024               	goto	l25454
 27260  005424                     u31560:
 27261                           
 27262                           ; BSR set to: 1
 27263                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 27264  005424  0100               	movlb	0	; () banked
 27265  005426  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 27266  005428  0D0A               	mullw	10
 27267  00542A  CFF3 F012          	movff	prodl,??_ControlMotor
 27268  00542E  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27269  005432  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27270  005434  2612               	addwf	??_ControlMotor^0,f,c
 27271  005436  0E00               	movlw	0
 27272  005438  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27273  00543A  5012               	movf	??_ControlMotor^0,w,c
 27274  00543C  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 27275  00543E  6E14               	movwf	(??_ControlMotor+2)^0,c
 27276  005440  5013               	movf	(??_ControlMotor+1)^0,w,c
 27277  005442  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 27278  005444  6E15               	movwf	(??_ControlMotor+3)^0,c
 27279  005446  0E00               	movlw	0
 27280  005448  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 27281  00544A  6E16               	movwf	(??_ControlMotor+4)^0,c
 27282  00544C  0E00               	movlw	0
 27283  00544E  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 27284  005450  6E17               	movwf	(??_ControlMotor+5)^0,c
 27285  005452  0E50               	movlw	80
 27286  005454  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27287  005456  0101               	movlb	1	; () banked
 27288  005458  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27289  00545A  0E00               	movlw	0
 27290  00545C  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27291  00545E  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27292  005460  0E00               	movlw	0
 27293  005462  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27294  005464  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27295  005466  0E00               	movlw	0
 27296  005468  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27297  00546A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27298  00546C                     l25454:
 27299                           
 27300                           ; BSR set to: 1
 27301                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 27302  00546C  0E02               	movlw	2
 27303  00546E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27304  005470                     l25456:
 27305                           
 27306                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 27307  005470  0100               	movlb	0	; () banked
 27308  005472  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27309  005474  A4D8               	btfss	status,2,c
 27310  005476  D002               	goto	l2370
 27311                           
 27312                           ; BSR set to: 0
 27313  005478  8087               	bsf	135,0,c	;volatile
 27314  00547A  D001               	goto	l25458
 27315  00547C                     l2370:
 27316                           
 27317                           ; BSR set to: 0
 27318  00547C  8287               	bsf	135,1,c	;volatile
 27319  00547E                     l25458:
 27320                           
 27321                           ; BSR set to: 0
 27322                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27323  00547E  0E01               	movlw	1
 27324  005480  0101               	movlb	1	; () banked
 27325  005482  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27326  005484                     l2353:
 27327                           
 27328                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27329  005484  0100               	movlb	0	; () banked
 27330  005486  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27331  005488  A4D8               	btfss	status,2,c
 27332  00548A  D002               	goto	l2376
 27333                           
 27334                           ; BSR set to: 0
 27335  00548C  9287               	bcf	135,1,c	;volatile
 27336  00548E  0012               	return	
 27337  005490                     l2376:
 27338                           
 27339                           ; BSR set to: 0
 27340  005490  9087               	bcf	135,0,c	;volatile
 27341  005492  0012               	return	
 27342  005494                     l25460:
 27343  005494  0E03               	movlw	3
 27344  005496  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27345  005498  A4D8               	btfss	status,2,c
 27346  00549A  0012               	return	
 27347  00549C  0101               	movlb	1	; () banked
 27348  00549E  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27349  0054A0  A4D8               	btfss	status,2,c
 27350  0054A2  0012               	return	
 27351                           
 27352                           ; BSR set to: 1
 27353                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27354  0054A4  B091               	btfsc	145,0,c	;volatile
 27355  0054A6  D004               	goto	u31620
 27356                           
 27357                           ; BSR set to: 1
 27358  0054A8  0100               	movlb	0	; () banked
 27359  0054AA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27360  0054AC  B4D8               	btfsc	status,2,c
 27361  0054AE  D006               	goto	u31640
 27362  0054B0                     u31620:
 27363  0054B0  B291               	btfsc	145,1,c	;volatile
 27364  0054B2  D050               	goto	l2380
 27365  0054B4  0100               	movlb	0	; () banked
 27366  0054B6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27367  0054B8  A4D8               	btfss	status,2,c
 27368  0054BA  D04C               	goto	l2380
 27369  0054BC                     u31640:
 27370                           
 27371                           ; BSR set to: 0
 27372                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27373  0054BC  B291               	btfsc	145,1,c	;volatile
 27374  0054BE  D003               	goto	u31660
 27375                           
 27376                           ; BSR set to: 0
 27377  0054C0  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27378  0054C2  B4D8               	btfsc	status,2,c
 27379  0054C4  D005               	goto	u31680
 27380  0054C6                     u31660:
 27381                           
 27382                           ; BSR set to: 0
 27383  0054C6  B091               	btfsc	145,0,c	;volatile
 27384  0054C8  D03B               	goto	l25484
 27385                           
 27386                           ; BSR set to: 0
 27387  0054CA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27388  0054CC  A4D8               	btfss	status,2,c
 27389  0054CE  D038               	goto	l25484
 27390  0054D0                     u31680:
 27391                           
 27392                           ; BSR set to: 0
 27393                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27394  0054D0  0E00               	movlw	0
 27395  0054D2  0101               	movlb	1	; () banked
 27396  0054D4  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27397                           
 27398                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27399  0054D6  0E00               	movlw	0
 27400  0054D8  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27401  0054DA  0EC8               	movlw	200
 27402  0054DC  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27403                           
 27404                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27405  0054DE  0E00               	movlw	0
 27406  0054E0  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27407  0054E2  0E14               	movlw	20
 27408  0054E4  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27409                           
 27410                           ; BSR set to: 1
 27411                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27412  0054E6  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27413  0054E8  B4D8               	btfsc	status,2,c
 27414  0054EA  D004               	goto	u31700
 27415                           
 27416                           ; BSR set to: 1
 27417  0054EC  0E04               	movlw	4
 27418  0054EE  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27419  0054F0  A4D8               	btfss	status,2,c
 27420  0054F2  D024               	goto	l25482
 27421  0054F4                     u31700:
 27422                           
 27423                           ; BSR set to: 1
 27424                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27425  0054F4  0100               	movlb	0	; () banked
 27426  0054F6  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27427  0054F8  0D0A               	mullw	10
 27428  0054FA  CFF3 F012          	movff	prodl,??_ControlMotor
 27429  0054FE  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27430  005502  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27431  005504  2612               	addwf	??_ControlMotor^0,f,c
 27432  005506  0E00               	movlw	0
 27433  005508  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27434  00550A  5012               	movf	??_ControlMotor^0,w,c
 27435  00550C  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27436  00550E  6E14               	movwf	(??_ControlMotor+2)^0,c
 27437  005510  5013               	movf	(??_ControlMotor+1)^0,w,c
 27438  005512  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27439  005514  6E15               	movwf	(??_ControlMotor+3)^0,c
 27440  005516  0E00               	movlw	0
 27441  005518  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27442  00551A  6E16               	movwf	(??_ControlMotor+4)^0,c
 27443  00551C  0E00               	movlw	0
 27444  00551E  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27445  005520  6E17               	movwf	(??_ControlMotor+5)^0,c
 27446  005522  0E50               	movlw	80
 27447  005524  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27448  005526  0101               	movlb	1	; () banked
 27449  005528  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27450  00552A  0E00               	movlw	0
 27451  00552C  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27452  00552E  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27453  005530  0E00               	movlw	0
 27454  005532  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27455  005534  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27456  005536  0E00               	movlw	0
 27457  005538  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27458  00553A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27459  00553C                     l25482:
 27460                           
 27461                           ; BSR set to: 1
 27462                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27463  00553C  0E03               	movlw	3
 27464  00553E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27465  005540                     l25484:
 27466                           
 27467                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27468  005540  0100               	movlb	0	; () banked
 27469  005542  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27470  005544  A4D8               	btfss	status,2,c
 27471  005546  D002               	goto	l2397
 27472                           
 27473                           ; BSR set to: 0
 27474  005548  8287               	bsf	135,1,c	;volatile
 27475  00554A  D001               	goto	l25486
 27476  00554C                     l2397:
 27477                           
 27478                           ; BSR set to: 0
 27479  00554C  8087               	bsf	135,0,c	;volatile
 27480  00554E                     l25486:
 27481                           
 27482                           ; BSR set to: 0
 27483                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27484  00554E  0E02               	movlw	2
 27485  005550  0101               	movlb	1	; () banked
 27486  005552  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27487  005554                     l2380:
 27488                           
 27489                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27490  005554  0100               	movlb	0	; () banked
 27491  005556  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27492  005558  A4D8               	btfss	status,2,c
 27493  00555A  D002               	goto	l2403
 27494                           
 27495                           ; BSR set to: 0
 27496  00555C  9087               	bcf	135,0,c	;volatile
 27497  00555E  0012               	return	
 27498  005560                     l2403:
 27499                           
 27500                           ; BSR set to: 0
 27501  005560  9287               	bcf	135,1,c	;volatile
 27502  005562  0012               	return		;funcret
 27503  005564                     __end_of_ControlMotor:
 27504                           	callstack 0
 27505                           
 27506 ;; *************** function _VerifyElectricalBrake *****************
 27507 ;; Defined at:
 27508 ;;		line 658 in file "outputs_MC50.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;  actualState     1    wreg     enum E10381
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;  actualState     1   16[COMRAM] enum E10381
 27513 ;;  tempState       1   15[COMRAM] enum E10381
 27514 ;; Return value:  Size  Location     Type
 27515 ;;                  1    wreg      enum E10381
 27516 ;; Registers used:
 27517 ;;		wreg, status,2, status,0
 27518 ;; Tracked objects:
 27519 ;;		On entry : 3F/1
 27520 ;;		On exit  : 3E/0
 27521 ;;		Unchanged: 0/0
 27522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27527 ;;Total ram usage:        2 bytes
 27528 ;; Hardware stack levels used: 1
 27529 ;; Hardware stack levels required when called: 4
 27530 ;; This function calls:
 27531 ;;		Nothing
 27532 ;; This function is called by:
 27533 ;;		_ControlMotor
 27534 ;; This function uses a non-reentrant model
 27535 ;;
 27536                           
 27537                           	psect	text113
 27538  0087C2                     __ptext113:
 27539                           	callstack 0
 27540  0087C2                     _VerifyElectricalBrake:
 27541                           	callstack 25
 27542                           
 27543                           ;incstack = 0
 27544                           ;VerifyElectricalBrake@actualState stored from wreg
 27545  0087C2  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27546                           
 27547                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27548  0087C4  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27549                           
 27550                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27551  0087C8  0100               	movlb	0	; () banked
 27552  0087CA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27553  0087CC  A4D8               	btfss	status,2,c
 27554  0087CE  D02E               	goto	l2323
 27555                           
 27556                           ; BSR set to: 0
 27557  0087D0  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27558  0087D2  A4D8               	btfss	status,2,c
 27559  0087D4  D02B               	goto	l2323
 27560                           
 27561                           ; BSR set to: 0
 27562  0087D6  0101               	movlb	1	; () banked
 27563  0087D8  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27564  0087DA  D005               	goto	u26640
 27565  0087DC  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27566  0087DE  E126               	bnz	l2323
 27567  0087E0  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27568  0087E2  B0D8               	btfsc	status,0,c
 27569  0087E4  D023               	goto	l2323
 27570  0087E6                     u26640:
 27571                           
 27572                           ; BSR set to: 1
 27573                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27574  0087E6  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27575  0087E8  0100               	movlb	0	; () banked
 27576  0087EA  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 27577  0087EC  B4D8               	btfsc	status,2,c
 27578  0087EE  D00B               	goto	l22958
 27579                           
 27580                           ; BSR set to: 0
 27581  0087F0  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27582  0087F2  A4D8               	btfss	status,2,c
 27583  0087F4  D008               	goto	l22958
 27584                           
 27585                           ; BSR set to: 0
 27586                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27587  0087F6  0E01               	movlw	1
 27588  0087F8  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27589                           
 27590                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27591  0087FA  0E00               	movlw	0
 27592  0087FC  0101               	movlb	1	; () banked
 27593  0087FE  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27594  008800  0E16               	movlw	22
 27595  008802  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27596                           
 27597                           ;outputs_MC50.c: 670:         }
 27598  008804  D018               	goto	l2328
 27599  008806                     l22958:
 27600                           
 27601                           ; BSR set to: 0
 27602  008806  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27603  008808  A4D8               	btfss	status,2,c
 27604  00880A  D00B               	goto	l22964
 27605                           
 27606                           ; BSR set to: 0
 27607  00880C  0101               	movlb	1	; () banked
 27608  00880E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27609  008810  D008               	goto	l22964
 27610  008812  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27611  008814  E103               	bnz	u26680
 27612  008816  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27613  008818  A0D8               	btfss	status,0,c
 27614  00881A  D003               	goto	l22964
 27615  00881C                     u26680:
 27616                           
 27617                           ; BSR set to: 1
 27618                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27619  00881C  0E01               	movlw	1
 27620  00881E  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27621                           
 27622                           ;outputs_MC50.c: 686:         }
 27623  008820  D00A               	goto	l2328
 27624  008822                     l22964:
 27625                           
 27626                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27627  008822  0E00               	movlw	0
 27628  008824  0100               	movlb	0	; () banked
 27629  008826  6F78               	movwf	_brakeElectric_st& (0+255),b
 27630                           
 27631                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27632  008828  0E00               	movlw	0
 27633  00882A  D004               	goto	L101
 27634  00882C                     l2323:
 27635                           
 27636                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27637  00882C  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27638                           
 27639                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27640  008830  0E00               	movlw	0
 27641  008832  0100               	movlb	0	; () banked
 27642  008834                     L101:
 27643  008834  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27644  008836                     l2328:
 27645                           
 27646                           ;outputs_MC50.c: 700:     return tempState;
 27647  008836  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27648  008838  0012               	return		;funcret
 27649  00883A                     __end_of_VerifyElectricalBrake:
 27650                           	callstack 0
 27651                           
 27652 ;; *************** function _ControlLights *****************
 27653 ;; Defined at:
 27654 ;;		line 816 in file "outputs_MC50.c"
 27655 ;; Parameters:    Size  Location     Type
 27656 ;;		None
 27657 ;; Auto vars:     Size  Location     Type
 27658 ;;		None
 27659 ;; Return value:  Size  Location     Type
 27660 ;;                  1    wreg      void 
 27661 ;; Registers used:
 27662 ;;		wreg, status,2, status,0, cstack
 27663 ;; Tracked objects:
 27664 ;;		On entry : 3E/1
 27665 ;;		On exit  : 3E/0
 27666 ;;		Unchanged: 0/0
 27667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27672 ;;Total ram usage:        0 bytes
 27673 ;; Hardware stack levels used: 1
 27674 ;; Hardware stack levels required when called: 6
 27675 ;; This function calls:
 27676 ;;		_setFlashLigth_ON
 27677 ;;		_setRGB_ON
 27678 ;; This function is called by:
 27679 ;;		_main
 27680 ;; This function uses a non-reentrant model
 27681 ;;
 27682                           
 27683                           	psect	text114
 27684  0045AA                     __ptext114:
 27685                           	callstack 0
 27686  0045AA                     _ControlLights:
 27687                           	callstack 24
 27688                           
 27689                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 27690                           
 27691                           ;incstack = 0
 27692  0045AA  0101               	movlb	1	; () banked
 27693  0045AC  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 27694  0045AE  A4D8               	btfss	status,2,c
 27695  0045B0  D007               	goto	l25492
 27696                           
 27697                           ; BSR set to: 1
 27698                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 27699  0045B2  0E00               	movlw	0
 27700  0045B4  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27701  0045B6  0E14               	movlw	20
 27702  0045B8  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27703  0045BA  ECB4  F04A         	call	_setFlashLigth_ON	;wreg free
 27704                           
 27705                           ;outputs_MC50.c: 821:     }
 27706  0045BE  D010               	goto	l25498
 27707  0045C0                     l25492:
 27708                           
 27709                           ; BSR set to: 1
 27710  0045C0  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
 27711  0045C2  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27712  0045C4  A4D8               	btfss	status,2,c
 27713  0045C6  D00C               	goto	l25498
 27714                           
 27715                           ; BSR set to: 1
 27716                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27717  0045C8  0E00               	movlw	0
 27718  0045CA  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27719                           
 27720                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 27721  0045CC  0E00               	movlw	0
 27722  0045CE  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27723                           
 27724                           ; BSR set to: 1
 27725                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 27726  0045D0  0E03               	movlw	3
 27727  0045D2  0100               	movlb	0	; () banked
 27728  0045D4  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27729  0045D6  B4D8               	btfsc	status,2,c
 27730  0045D8  D002               	goto	l2415
 27731                           
 27732                           ; BSR set to: 0
 27733                           
 27734                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 27735  0045DA  9487               	bcf	135,2,c	;volatile
 27736  0045DC  D001               	goto	l25498
 27737  0045DE                     l2415:
 27738                           
 27739                           ; BSR set to: 0
 27740  0045DE  8487               	bsf	135,2,c	;volatile
 27741  0045E0                     l25498:
 27742                           
 27743                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 27744  0045E0  0101               	movlb	1	; () banked
 27745  0045E2  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27746  0045E4  B4D8               	btfsc	status,2,c
 27747  0045E6  D005               	goto	u31770
 27748                           
 27749                           ; BSR set to: 1
 27750  0045E8  0E04               	movlw	4
 27751  0045EA  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27752  0045EC  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27753  0045EE  A4D8               	btfss	status,2,c
 27754  0045F0  D01C               	goto	l25510
 27755  0045F2                     u31770:
 27756                           
 27757                           ; BSR set to: 1
 27758  0045F2  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27759  0045F4  D01A               	goto	l25510
 27760  0045F6  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27761  0045F8  E103               	bnz	u31780
 27762  0045FA  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 27763  0045FC  A0D8               	btfss	status,0,c
 27764  0045FE  D015               	goto	l25510
 27765  004600                     u31780:
 27766                           
 27767                           ; BSR set to: 1
 27768  004600  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27769  004602  D006               	goto	u31790
 27770  004604  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27771  004606  E111               	bnz	l25510
 27772  004608  0E3D               	movlw	61
 27773  00460A  5DB1               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 27774  00460C  B0D8               	btfsc	status,0,c
 27775  00460E  D00D               	goto	l25510
 27776  004610                     u31790:
 27777                           
 27778                           ; BSR set to: 1
 27779  004610  0E02               	movlw	2
 27780  004612  0100               	movlb	0	; () banked
 27781  004614  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27782  004616  A4D8               	btfss	status,2,c
 27783  004618  D008               	goto	l25510
 27784                           
 27785                           ; BSR set to: 0
 27786                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 27787  00461A  0E00               	movlw	0
 27788  00461C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27789  00461E  0E04               	movlw	4
 27790  004620  6E11               	movwf	setRGB_ON@Freq^0,c
 27791  004622  0E01               	movlw	1
 27792  004624  EC81  F040         	call	_setRGB_ON
 27793                           
 27794                           ;outputs_MC50.c: 838:     }
 27795  004628  0012               	return	
 27796  00462A                     l25510:
 27797  00462A  0E03               	movlw	3
 27798  00462C  0101               	movlb	1	; () banked
 27799  00462E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27800  004630  A4D8               	btfss	status,2,c
 27801  004632  D04F               	goto	l25540
 27802                           
 27803                           ; BSR set to: 1
 27804                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27805  004634  0E00               	movlw	0
 27806  004636  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27807                           
 27808                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 27809  004638  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 27810  00463A  A4D8               	btfss	status,2,c
 27811  00463C  D013               	goto	l25522
 27812                           
 27813                           ; BSR set to: 1
 27814  00463E  0E03               	movlw	3
 27815  004640  0100               	movlb	0	; () banked
 27816  004642  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27817  004644  A4D8               	btfss	status,2,c
 27818  004646  D00E               	goto	l25522
 27819                           
 27820                           ; BSR set to: 0
 27821                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27822  004648  0E00               	movlw	0
 27823  00464A  0101               	movlb	1	; () banked
 27824  00464C  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27825  00464E  0E28               	movlw	40
 27826  004650  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27827                           
 27828                           ; BSR set to: 1
 27829                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 27830  004652  0E00               	movlw	0
 27831  004654  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27832  004656  0E00               	movlw	0
 27833  004658  6E11               	movwf	setRGB_ON@Freq^0,c
 27834  00465A  0E04               	movlw	4
 27835  00465C  EC81  F040         	call	_setRGB_ON
 27836                           
 27837                           ; BSR set to: 1
 27838                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 27839  004660  0E01               	movlw	1
 27840  004662  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27841  004664                     l25522:
 27842                           
 27843                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 27844  004664  0101               	movlb	1	; () banked
 27845  004666  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27846  004668  D005               	goto	u31840
 27847  00466A  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27848  00466C  E105               	bnz	l25526
 27849  00466E  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27850  004670  B0D8               	btfsc	status,0,c
 27851  004672  D002               	goto	l25526
 27852  004674                     u31840:
 27853                           
 27854                           ; BSR set to: 1
 27855  004674  0100               	movlb	0	; () banked
 27856  004676  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27857  004678                     l25526:
 27858                           
 27859                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 27860  004678  0100               	movlb	0	; () banked
 27861  00467A  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27862  00467C  A4D8               	btfss	status,2,c
 27863  00467E  D010               	goto	l25532
 27864                           
 27865                           ; BSR set to: 0
 27866  004680  0101               	movlb	1	; () banked
 27867  004682  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27868  004684  D005               	goto	u31860
 27869  004686  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27870  004688  E10B               	bnz	l25532
 27871  00468A  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27872  00468C  B0D8               	btfsc	status,0,c
 27873  00468E  D008               	goto	l25532
 27874  004690                     u31860:
 27875                           
 27876                           ; BSR set to: 1
 27877                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 27878  004690  0E00               	movlw	0
 27879  004692  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27880  004694  0E05               	movlw	5
 27881  004696  6E11               	movwf	setRGB_ON@Freq^0,c
 27882  004698  0E03               	movlw	3
 27883  00469A  EC81  F040         	call	_setRGB_ON
 27884                           
 27885                           ;outputs_MC50.c: 862:         }
 27886  00469E  D007               	goto	l25534
 27887  0046A0                     l25532:
 27888                           
 27889                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 27890  0046A0  0E00               	movlw	0
 27891  0046A2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27892  0046A4  0E00               	movlw	0
 27893  0046A6  6E11               	movwf	setRGB_ON@Freq^0,c
 27894  0046A8  0E03               	movlw	3
 27895  0046AA  EC81  F040         	call	_setRGB_ON
 27896  0046AE                     l25534:
 27897                           
 27898                           ; BSR set to: 1
 27899                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 27900  0046AE  0100               	movlb	0	; () banked
 27901  0046B0  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27902  0046B2  A4D8               	btfss	status,2,c
 27903  0046B4  D007               	goto	l25538
 27904                           
 27905                           ; BSR set to: 0
 27906                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 27907  0046B6  0E00               	movlw	0
 27908  0046B8  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27909  0046BA  0E0A               	movlw	10
 27910  0046BC  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27911  0046BE  ECB4  F04A         	call	_setFlashLigth_ON	;wreg free
 27912                           
 27913                           ;outputs_MC50.c: 873:         }
 27914  0046C2  0012               	return	
 27915  0046C4                     l25538:
 27916                           
 27917                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 27918  0046C4  0E00               	movlw	0
 27919  0046C6  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27920  0046C8  0E00               	movlw	0
 27921  0046CA  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27922  0046CC  ECB4  F04A         	call	_setFlashLigth_ON	;wreg free
 27923  0046D0  0012               	return	
 27924  0046D2                     l25540:
 27925                           
 27926                           ; BSR set to: 1
 27927  0046D2  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27928  0046D4  A4D8               	btfss	status,2,c
 27929  0046D6  D042               	goto	l25568
 27930                           
 27931                           ; BSR set to: 1
 27932  0046D8  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
 27933  0046DA  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27934  0046DC  A4D8               	btfss	status,2,c
 27935  0046DE  D03E               	goto	l25568
 27936                           
 27937                           ; BSR set to: 1
 27938                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 27939  0046E0  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27940  0046E2  A4D8               	btfss	status,2,c
 27941                           
 27942                           ; BSR set to: 1
 27943                           
 27944                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 27945  0046E4  8E83               	bsf	131,7,c	;volatile
 27946                           
 27947                           ; BSR set to: 1
 27948                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 27949  0046E6  0100               	movlb	0	; () banked
 27950  0046E8  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27951  0046EA  A4D8               	btfss	status,2,c
 27952  0046EC  D017               	goto	l25556
 27953                           
 27954                           ; BSR set to: 0
 27955                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 27956  0046EE  0E02               	movlw	2
 27957  0046F0  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27958  0046F2  B4D8               	btfsc	status,2,c
 27959  0046F4  D003               	goto	u31930
 27960                           
 27961                           ; BSR set to: 0
 27962  0046F6  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27963  0046F8  A4D8               	btfss	status,2,c
 27964  0046FA  D008               	goto	l25554
 27965  0046FC                     u31930:
 27966                           
 27967                           ; BSR set to: 0
 27968  0046FC  0E00               	movlw	0
 27969  0046FE  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27970  004700  0E00               	movlw	0
 27971  004702  6E11               	movwf	setRGB_ON@Freq^0,c
 27972  004704  0E04               	movlw	4
 27973  004706  EC81  F040         	call	_setRGB_ON
 27974  00470A  D013               	goto	l25560
 27975  00470C                     l25554:
 27976                           
 27977                           ; BSR set to: 0
 27978  00470C  0E00               	movlw	0
 27979  00470E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27980  004710  0E28               	movlw	40
 27981  004712  6E11               	movwf	setRGB_ON@Freq^0,c
 27982  004714  0E04               	movlw	4
 27983  004716  EC81  F040         	call	_setRGB_ON
 27984  00471A  D00B               	goto	l25560
 27985  00471C                     l25556:
 27986                           
 27987                           ; BSR set to: 0
 27988  00471C  0E03               	movlw	3
 27989  00471E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27990  004720  B4D8               	btfsc	status,2,c
 27991  004722  D007               	goto	l25560
 27992                           
 27993                           ; BSR set to: 0
 27994  004724  0E00               	movlw	0
 27995  004726  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27996  004728  0E00               	movlw	0
 27997  00472A  6E11               	movwf	setRGB_ON@Freq^0,c
 27998  00472C  0E04               	movlw	4
 27999  00472E  EC81  F040         	call	_setRGB_ON
 28000  004732                     l25560:
 28001                           
 28002                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 28003  004732  0E03               	movlw	3
 28004  004734  0100               	movlb	0	; () banked
 28005  004736  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28006  004738  B4D8               	btfsc	status,2,c
 28007  00473A  0012               	return	
 28008                           
 28009                           ; BSR set to: 0
 28010                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 28011  00473C  0101               	movlb	1	; () banked
 28012  00473E  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 28013  004740  D007               	goto	l2443
 28014  004742  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 28015  004744  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 28016  004746  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 28017  004748  E1BD               	bnz	l25538
 28018  00474A  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 28019  00474C  B0D8               	btfsc	status,0,c
 28020  00474E  D7BA               	goto	l25538
 28021  004750                     l2443:
 28022                           
 28023                           ; BSR set to: 1
 28024  004750  9487               	bcf	135,2,c	;volatile
 28025                           
 28026                           ; BSR set to: 1
 28027                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 28028  004752  0E00               	movlw	0
 28029  004754  6FBE               	movwf	(_ts_system+31)& (0+255),b	;volatile
 28030  004756  0E00               	movlw	0
 28031  004758  6FBD               	movwf	(_ts_system+30)& (0+255),b	;volatile
 28032                           
 28033                           ; BSR set to: 0
 28034                           ;outputs_MC50.c: 907:     }
 28035                           
 28036                           ;outputs_MC50.c: 906:         }
 28037  00475A  0012               	return	
 28038  00475C                     l25568:
 28039                           
 28040                           ; BSR set to: 1
 28041  00475C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28042  00475E  A4D8               	btfss	status,2,c
 28043  004760  D048               	goto	l25602
 28044                           
 28045                           ; BSR set to: 1
 28046                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 28047  004762  0100               	movlb	0	; () banked
 28048  004764  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28049  004766  A4D8               	btfss	status,2,c
 28050  004768  D004               	goto	u31990
 28051                           
 28052                           ; BSR set to: 0
 28053  00476A  0101               	movlb	1	; () banked
 28054  00476C  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28055  00476E  B4D8               	btfsc	status,2,c
 28056  004770  D00C               	goto	u32020
 28057  004772                     u31990:
 28058  004772  0100               	movlb	0	; () banked
 28059  004774  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28060  004776  A4D8               	btfss	status,2,c
 28061  004778  D017               	goto	l25586
 28062                           
 28063                           ; BSR set to: 0
 28064  00477A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28065  00477C  B4D8               	btfsc	status,2,c
 28066  00477E  D014               	goto	l25586
 28067                           
 28068                           ; BSR set to: 0
 28069  004780  0E02               	movlw	2
 28070  004782  0101               	movlb	1	; () banked
 28071  004784  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28072  004786  A4D8               	btfss	status,2,c
 28073  004788  D00F               	goto	l25586
 28074  00478A                     u32020:
 28075                           
 28076                           ; BSR set to: 1
 28077                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28078  00478A  0E00               	movlw	0
 28079  00478C  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28080                           
 28081                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 28082  00478E  0E00               	movlw	0
 28083  004790  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28084                           
 28085                           ; BSR set to: 1
 28086                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 28087  004792  0E03               	movlw	3
 28088  004794  0100               	movlb	0	; () banked
 28089  004796  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28090  004798  B4D8               	btfsc	status,2,c
 28091  00479A  0012               	return	
 28092                           
 28093                           ; BSR set to: 0
 28094  00479C  0E02               	movlw	2
 28095  00479E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28096  0047A0  B4D8               	btfsc	status,2,c
 28097  0047A2  0012               	return	
 28098                           
 28099                           ; BSR set to: 0
 28100                           
 28101                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 28102  0047A4  9487               	bcf	135,2,c	;volatile
 28103  0047A6  0012               	return	
 28104  0047A8                     l25586:
 28105                           
 28106                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28107  0047A8  0100               	movlb	0	; () banked
 28108  0047AA  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28109  0047AC  A4D8               	btfss	status,2,c
 28110  0047AE  D008               	goto	l25590
 28111                           
 28112                           ; BSR set to: 0
 28113                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 28114  0047B0  0E00               	movlw	0
 28115  0047B2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28116  0047B4  0E14               	movlw	20
 28117  0047B6  6E11               	movwf	setRGB_ON@Freq^0,c
 28118  0047B8  0E01               	movlw	1
 28119  0047BA  EC81  F040         	call	_setRGB_ON
 28120                           
 28121                           ;outputs_MC50.c: 932:             }
 28122  0047BE  D007               	goto	l25592
 28123  0047C0                     l25590:
 28124                           
 28125                           ; BSR set to: 0
 28126                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 28127  0047C0  0E00               	movlw	0
 28128  0047C2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28129  0047C4  0E00               	movlw	0
 28130  0047C6  6E11               	movwf	setRGB_ON@Freq^0,c
 28131  0047C8  0E01               	movlw	1
 28132  0047CA  EC81  F040         	call	_setRGB_ON
 28133  0047CE                     l25592:
 28134                           
 28135                           ; BSR set to: 1
 28136                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 28137  0047CE  0100               	movlb	0	; () banked
 28138  0047D0  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28139  0047D2  B4D8               	btfsc	status,2,c
 28140  0047D4  D004               	goto	u32070
 28141                           
 28142                           ; BSR set to: 0
 28143  0047D6  0E03               	movlw	3
 28144  0047D8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28145  0047DA  A4D8               	btfss	status,2,c
 28146  0047DC  D002               	goto	l25596
 28147  0047DE                     u32070:
 28148                           
 28149                           ; BSR set to: 0
 28150                           
 28151                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 28152  0047DE  9487               	bcf	135,2,c	;volatile
 28153  0047E0  0012               	return	
 28154  0047E2                     l25596:
 28155                           
 28156                           ; BSR set to: 0
 28157  0047E2  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28158  0047E4  B4D8               	btfsc	status,2,c
 28159  0047E6  D76E               	goto	l25538
 28160                           
 28161                           ; BSR set to: 0
 28162  0047E8  0E02               	movlw	2
 28163  0047EA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28164  0047EC  A4D8               	btfss	status,2,c
 28165  0047EE  0012               	return	
 28166  0047F0  D769               	goto	l25538
 28167  0047F2                     l25602:
 28168                           
 28169                           ; BSR set to: 1
 28170                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 28171  0047F2  0E00               	movlw	0
 28172  0047F4  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28173                           
 28174                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 28175  0047F6  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 28176  0047F8  A4D8               	btfss	status,2,c
 28177  0047FA  D00C               	goto	l25608
 28178                           
 28179                           ; BSR set to: 1
 28180  0047FC  0E03               	movlw	3
 28181  0047FE  0100               	movlb	0	; () banked
 28182  004800  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28183  004802  A4D8               	btfss	status,2,c
 28184  004804  D007               	goto	l25608
 28185                           
 28186                           ; BSR set to: 0
 28187                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28188  004806  0E00               	movlw	0
 28189  004808  0101               	movlb	1	; () banked
 28190  00480A  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28191  00480C  0E28               	movlw	40
 28192  00480E  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28193                           
 28194                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 28195  004810  0E01               	movlw	1
 28196  004812  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28197  004814                     l25608:
 28198                           
 28199                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 28200  004814  0101               	movlb	1	; () banked
 28201  004816  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28202  004818  D005               	goto	u32120
 28203  00481A  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28204  00481C  E105               	bnz	l25612
 28205  00481E  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28206  004820  B0D8               	btfsc	status,0,c
 28207  004822  D002               	goto	l25612
 28208  004824                     u32120:
 28209                           
 28210                           ; BSR set to: 1
 28211  004824  0100               	movlb	0	; () banked
 28212  004826  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28213  004828                     l25612:
 28214                           
 28215                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 28216  004828  0E04               	movlw	4
 28217  00482A  0101               	movlb	1	; () banked
 28218  00482C  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28219  00482E  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28220  004830  A4D8               	btfss	status,2,c
 28221  004832  D01B               	goto	l25624
 28222                           
 28223                           ; BSR set to: 1
 28224                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28225  004834  0E00               	movlw	0
 28226  004836  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28227                           
 28228                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 28229  004838  0E00               	movlw	0
 28230  00483A  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28231                           
 28232                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 28233  00483C  0100               	movlb	0	; () banked
 28234  00483E  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28235  004840  A4D8               	btfss	status,2,c
 28236  004842  D00A               	goto	u32170
 28237                           
 28238                           ; BSR set to: 0
 28239  004844  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28240  004846  B4D8               	btfsc	status,2,c
 28241  004848  D003               	goto	u32160
 28242                           
 28243                           ; BSR set to: 0
 28244  00484A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28245  00484C  A4D8               	btfss	status,2,c
 28246  00484E  D004               	goto	u32170
 28247  004850                     u32160:
 28248                           
 28249                           ; BSR set to: 0
 28250  004850  0E02               	movlw	2
 28251  004852  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 28252  004854  A4D8               	btfss	status,2,c
 28253  004856  D007               	goto	l2477
 28254  004858                     u32170:
 28255                           
 28256                           ; BSR set to: 0
 28257                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 28258  004858  0E00               	movlw	0
 28259  00485A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28260  00485C  0E00               	movlw	0
 28261  00485E  6E11               	movwf	setRGB_ON@Freq^0,c
 28262  004860  0E01               	movlw	1
 28263  004862  EC81  F040         	call	_setRGB_ON
 28264  004866                     l2477:
 28265  004866  9487               	bcf	135,2,c	;volatile
 28266  004868  0012               	return	
 28267  00486A                     l25624:
 28268                           
 28269                           ; BSR set to: 1
 28270                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28271  00486A  0100               	movlb	0	; () banked
 28272  00486C  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28273  00486E  A4D8               	btfss	status,2,c
 28274  004870  D008               	goto	l25628
 28275                           
 28276                           ; BSR set to: 0
 28277                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 28278  004872  0E00               	movlw	0
 28279  004874  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28280  004876  0E0A               	movlw	10
 28281  004878  6E11               	movwf	setRGB_ON@Freq^0,c
 28282  00487A  0E02               	movlw	2
 28283  00487C  EC81  F040         	call	_setRGB_ON
 28284                           
 28285                           ;outputs_MC50.c: 999:             }
 28286  004880  D007               	goto	l25630
 28287  004882                     l25628:
 28288                           
 28289                           ; BSR set to: 0
 28290                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 28291  004882  0E00               	movlw	0
 28292  004884  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28293  004886  0E00               	movlw	0
 28294  004888  6E11               	movwf	setRGB_ON@Freq^0,c
 28295  00488A  0E02               	movlw	2
 28296  00488C  EC81  F040         	call	_setRGB_ON
 28297  004890                     l25630:
 28298                           
 28299                           ; BSR set to: 1
 28300                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 28301  004890  0100               	movlb	0	; () banked
 28302  004892  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28303  004894  A4D8               	btfss	status,2,c
 28304  004896  D007               	goto	l25634
 28305                           
 28306                           ; BSR set to: 0
 28307                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 28308  004898  0E00               	movlw	0
 28309  00489A  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28310  00489C  0E14               	movlw	20
 28311  00489E  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28312  0048A0  ECB4  F04A         	call	_setFlashLigth_ON	;wreg free
 28313                           
 28314                           ;outputs_MC50.c: 1011:             }
 28315  0048A4  D00D               	goto	l25640
 28316  0048A6                     l25634:
 28317                           
 28318                           ; BSR set to: 0
 28319  0048A6  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28320  0048A8  B4D8               	btfsc	status,2,c
 28321  0048AA  D004               	goto	u32210
 28322                           
 28323                           ; BSR set to: 0
 28324  0048AC  0E02               	movlw	2
 28325  0048AE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28326  0048B0  A4D8               	btfss	status,2,c
 28327  0048B2  D006               	goto	l25640
 28328  0048B4                     u32210:
 28329                           
 28330                           ; BSR set to: 0
 28331                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28332  0048B4  0E00               	movlw	0
 28333  0048B6  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28334  0048B8  0E00               	movlw	0
 28335  0048BA  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28336  0048BC  ECB4  F04A         	call	_setFlashLigth_ON	;wreg free
 28337  0048C0                     l25640:
 28338                           
 28339                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28340  0048C0  0E03               	movlw	3
 28341  0048C2  0100               	movlb	0	; () banked
 28342  0048C4  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28343  0048C6  A4D8               	btfss	status,2,c
 28344  0048C8  0012               	return	
 28345                           
 28346                           ; BSR set to: 0
 28347                           
 28348                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28349  0048CA  9487               	bcf	135,2,c	;volatile
 28350  0048CC  0012               	return		;funcret
 28351  0048CE                     __end_of_ControlLights:
 28352                           	callstack 0
 28353                           
 28354 ;; *************** function _setRGB_ON *****************
 28355 ;; Defined at:
 28356 ;;		line 1028 in file "outputs_MC50.c"
 28357 ;; Parameters:    Size  Location     Type
 28358 ;;  RGBLigth        1    wreg     enum E10611
 28359 ;;  Freq            2   16[COMRAM] int 
 28360 ;; Auto vars:     Size  Location     Type
 28361 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28362 ;; Return value:  Size  Location     Type
 28363 ;;                  1    wreg      void 
 28364 ;; Registers used:
 28365 ;;		wreg, status,2, status,0, cstack
 28366 ;; Tracked objects:
 28367 ;;		On entry : 3E/0
 28368 ;;		On exit  : 3F/1
 28369 ;;		Unchanged: 0/0
 28370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28374 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28375 ;;Total ram usage:        5 bytes
 28376 ;; Hardware stack levels used: 1
 28377 ;; Hardware stack levels required when called: 5
 28378 ;; This function calls:
 28379 ;;		_RGB_Set
 28380 ;; This function is called by:
 28381 ;;		_ControlLights
 28382 ;; This function uses a non-reentrant model
 28383 ;;
 28384                           
 28385                           	psect	text115
 28386  008102                     __ptext115:
 28387                           	callstack 0
 28388  008102                     _setRGB_ON:
 28389                           	callstack 24
 28390                           
 28391                           ;incstack = 0
 28392                           ;setRGB_ON@RGBLigth stored from wreg
 28393  008102  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28394                           
 28395                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28396  008104  8E83               	bsf	131,7,c	;volatile
 28397                           
 28398                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28399  008106  5011               	movf	setRGB_ON@Freq^0,w,c
 28400  008108  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28401  00810A  B4D8               	btfsc	status,2,c
 28402  00810C  D015               	goto	l22996
 28403  00810E  0101               	movlb	1	; () banked
 28404  008110  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28405  008112  B4D8               	btfsc	status,2,c
 28406  008114  D011               	goto	l22996
 28407  008116  D024               	goto	l22998
 28408  008118                     l22986:
 28409                           
 28410                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28411  008118  0E20               	movlw	32
 28412  00811A  ECA7  F04E         	call	_RGB_Set
 28413                           
 28414                           ;outputs_MC50.c: 1044:             break;
 28415  00811E  D020               	goto	l22998
 28416  008120                     l22988:
 28417                           
 28418                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28419  008120  0E04               	movlw	4
 28420  008122  ECA7  F04E         	call	_RGB_Set
 28421                           
 28422                           ;outputs_MC50.c: 1048:             break;
 28423  008126  D01C               	goto	l22998
 28424  008128                     l22990:
 28425                           
 28426                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28427  008128  0E00               	movlw	0
 28428  00812A  ECA7  F04E         	call	_RGB_Set
 28429                           
 28430                           ;outputs_MC50.c: 1052:             break;
 28431  00812E  D018               	goto	l22998
 28432  008130                     l22992:
 28433                           
 28434                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28435  008130  0E24               	movlw	36
 28436  008132  ECA7  F04E         	call	_RGB_Set
 28437                           
 28438                           ;outputs_MC50.c: 1056:             break;
 28439  008136  D014               	goto	l22998
 28440  008138                     l22996:
 28441  008138  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28442  00813A  6E13               	movwf	??_setRGB_ON^0,c
 28443  00813C  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28444                           
 28445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28446                           ; Switch size 1, requested type "simple"
 28447                           ; Number of cases is 1, Range of values is 0 to 0
 28448                           ; switch strategies available:
 28449                           ; Name         Instructions Cycles
 28450                           ; simple_byte            4     3 (average)
 28451                           ;	Chosen strategy is simple_byte
 28452  00813E  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28453  008140  0A00               	xorlw	0	; case 0
 28454  008142  A4D8               	btfss	status,2,c
 28455  008144  D00D               	goto	l22998
 28456                           
 28457                           ; Switch size 1, requested type "simple"
 28458                           ; Number of cases is 4, Range of values is 1 to 4
 28459                           ; switch strategies available:
 28460                           ; Name         Instructions Cycles
 28461                           ; simple_byte           13     7 (average)
 28462                           ;	Chosen strategy is simple_byte
 28463  008146  5013               	movf	??_setRGB_ON^0,w,c
 28464  008148  0A01               	xorlw	1	; case 1
 28465  00814A  B4D8               	btfsc	status,2,c
 28466  00814C  D7ED               	goto	l22990
 28467  00814E  0A03               	xorlw	3	; case 2
 28468  008150  B4D8               	btfsc	status,2,c
 28469  008152  D7E6               	goto	l22988
 28470  008154  0A01               	xorlw	1	; case 3
 28471  008156  B4D8               	btfsc	status,2,c
 28472  008158  D7DF               	goto	l22986
 28473  00815A  0A07               	xorlw	7	; case 4
 28474  00815C  B4D8               	btfsc	status,2,c
 28475  00815E  D7E8               	goto	l22992
 28476  008160                     l22998:
 28477                           
 28478                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28479  008160  0101               	movlb	1	; () banked
 28480  008162  BFBC               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28481  008164  D005               	goto	u26750
 28482  008166  51BC               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28483  008168  E113               	bnz	l2507
 28484  00816A  05BB               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28485  00816C  B0D8               	btfsc	status,0,c
 28486  00816E  0012               	return	
 28487  008170                     u26750:
 28488                           
 28489                           ; BSR set to: 1
 28490  008170  5011               	movf	setRGB_ON@Freq^0,w,c
 28491  008172  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28492  008174  B4D8               	btfsc	status,2,c
 28493  008176  0012               	return	
 28494                           
 28495                           ; BSR set to: 1
 28496                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28497  008178  C011  F1BB         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28498  00817C  C012  F1BC         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28499                           
 28500                           ; BSR set to: 1
 28501                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28502  008180  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28503  008182  A4D8               	btfss	status,2,c
 28504  008184  D003               	goto	l23008
 28505                           
 28506                           ; BSR set to: 1
 28507                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28508  008186  0E00               	movlw	0
 28509  008188  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28510                           
 28511                           ;outputs_MC50.c: 1067:         }
 28512  00818A  0012               	return	
 28513  00818C                     l23008:
 28514                           
 28515                           ; BSR set to: 1
 28516                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28517  00818C  0E01               	movlw	1
 28518  00818E  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28519  008190                     l2507:
 28520                           
 28521                           ; BSR set to: 1
 28522  008190  0012               	return		;funcret
 28523  008192                     __end_of_setRGB_ON:
 28524                           	callstack 0
 28525                           
 28526 ;; *************** function _RGB_Set *****************
 28527 ;; Defined at:
 28528 ;;		line 98 in file "outputs_MC50.c"
 28529 ;; Parameters:    Size  Location     Type
 28530 ;;  value           1    wreg     unsigned char 
 28531 ;; Auto vars:     Size  Location     Type
 28532 ;;  value           1   15[COMRAM] unsigned char 
 28533 ;; Return value:  Size  Location     Type
 28534 ;;                  1    wreg      void 
 28535 ;; Registers used:
 28536 ;;		wreg, status,2, status,0
 28537 ;; Tracked objects:
 28538 ;;		On entry : 0/0
 28539 ;;		On exit  : 0/0
 28540 ;;		Unchanged: 0/0
 28541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28546 ;;Total ram usage:        1 bytes
 28547 ;; Hardware stack levels used: 1
 28548 ;; Hardware stack levels required when called: 4
 28549 ;; This function calls:
 28550 ;;		Nothing
 28551 ;; This function is called by:
 28552 ;;		_setRGB_ON
 28553 ;; This function uses a non-reentrant model
 28554 ;;
 28555                           
 28556                           	psect	text116
 28557  009D4E                     __ptext116:
 28558                           	callstack 0
 28559  009D4E                     _RGB_Set:
 28560                           	callstack 24
 28561                           
 28562                           ; BSR set to: 1
 28563                           ;incstack = 0
 28564                           ;RGB_Set@value stored from wreg
 28565  009D4E  6E10               	movwf	RGB_Set@value^0,c
 28566                           
 28567                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28568  009D50  0EDB               	movlw	219
 28569  009D52  1685               	andwf	133,f,c	;volatile
 28570                           
 28571                           ;outputs_MC50.c: 101:    LATC |= value;
 28572  009D54  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28573  009D56  1285               	iorwf	133,f,c	;volatile
 28574  009D58  9E83               	bcf	131,7,c	;volatile
 28575  009D5A  0012               	return		;funcret
 28576  009D5C                     __end_of_RGB_Set:
 28577                           	callstack 0
 28578                           
 28579 ;; *************** function _setFlashLigth_ON *****************
 28580 ;; Defined at:
 28581 ;;		line 1077 in file "outputs_MC50.c"
 28582 ;; Parameters:    Size  Location     Type
 28583 ;;  Freq            2   15[COMRAM] int 
 28584 ;; Auto vars:     Size  Location     Type
 28585 ;;		None
 28586 ;; Return value:  Size  Location     Type
 28587 ;;                  1    wreg      void 
 28588 ;; Registers used:
 28589 ;;		wreg, status,2, status,0
 28590 ;; Tracked objects:
 28591 ;;		On entry : 3E/1
 28592 ;;		On exit  : 3F/1
 28593 ;;		Unchanged: 0/0
 28594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28599 ;;Total ram usage:        2 bytes
 28600 ;; Hardware stack levels used: 1
 28601 ;; Hardware stack levels required when called: 4
 28602 ;; This function calls:
 28603 ;;		Nothing
 28604 ;; This function is called by:
 28605 ;;		_ControlLights
 28606 ;; This function uses a non-reentrant model
 28607 ;;
 28608                           
 28609                           	psect	text117
 28610  009568                     __ptext117:
 28611                           	callstack 0
 28612  009568                     _setFlashLigth_ON:
 28613                           	callstack 25
 28614                           
 28615                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28616                           
 28617                           ;incstack = 0
 28618  009568  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28619  00956A  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28620  00956C  B4D8               	btfsc	status,2,c
 28621  00956E  D004               	goto	u26700
 28622  009570  0101               	movlb	1	; () banked
 28623  009572  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28624  009574  A4D8               	btfss	status,2,c
 28625  009576  D002               	goto	l2516
 28626  009578                     u26700:
 28627                           
 28628                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28629  009578  8487               	bsf	135,2,c	;volatile
 28630  00957A  D001               	goto	l22974
 28631  00957C                     l2516:
 28632                           
 28633                           ; BSR set to: 1
 28634  00957C  9487               	bcf	135,2,c	;volatile
 28635  00957E                     l22974:
 28636                           
 28637                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28638  00957E  0101               	movlb	1	; () banked
 28639  009580  BFBE               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28640  009582  D005               	goto	u26710
 28641  009584  51BE               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28642  009586  E10D               	bnz	l2519
 28643  009588  05BD               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28644  00958A  B0D8               	btfsc	status,0,c
 28645  00958C  0012               	return	
 28646  00958E                     u26710:
 28647                           
 28648                           ; BSR set to: 1
 28649  00958E  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28650  009590  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28651  009592  B4D8               	btfsc	status,2,c
 28652  009594  0012               	return	
 28653                           
 28654                           ; BSR set to: 1
 28655                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28656  009596  C010  F1BD         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28657  00959A  C011  F1BE         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28658                           
 28659                           ; BSR set to: 1
 28660                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28661  00959E  0E01               	movlw	1
 28662  0095A0  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28663  0095A2                     l2519:
 28664                           
 28665                           ; BSR set to: 1
 28666  0095A2  0012               	return		;funcret
 28667  0095A4                     __end_of_setFlashLigth_ON:
 28668                           	callstack 0
 28669                           
 28670 ;; *************** function _ControlInputs *****************
 28671 ;; Defined at:
 28672 ;;		line 674 in file "inputs_MC50.c"
 28673 ;; Parameters:    Size  Location     Type
 28674 ;;		None
 28675 ;; Auto vars:     Size  Location     Type
 28676 ;;		None
 28677 ;; Return value:  Size  Location     Type
 28678 ;;                  1    wreg      void 
 28679 ;; Registers used:
 28680 ;;		wreg, status,2, status,0
 28681 ;; Tracked objects:
 28682 ;;		On entry : 3E/1
 28683 ;;		On exit  : 3E/0
 28684 ;;		Unchanged: 0/0
 28685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28690 ;;Total ram usage:        0 bytes
 28691 ;; Hardware stack levels used: 1
 28692 ;; Hardware stack levels required when called: 4
 28693 ;; This function calls:
 28694 ;;		Nothing
 28695 ;; This function is called by:
 28696 ;;		_main
 28697 ;; This function uses a non-reentrant model
 28698 ;;
 28699                           
 28700                           	psect	text118
 28701  00708A                     __ptext118:
 28702                           	callstack 0
 28703  00708A                     _ControlInputs:
 28704                           	callstack 26
 28705                           
 28706                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 28707                           
 28708                           ; BSR set to: 1
 28709                           ;incstack = 0
 28710  00708A  0E03               	movlw	3
 28711  00708C  0101               	movlb	1	; () banked
 28712  00708E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28713  007090  B4D8               	btfsc	status,2,c
 28714  007092  D00C               	goto	u30290
 28715                           
 28716                           ; BSR set to: 1
 28717  007094  A291               	btfss	145,1,c	;volatile
 28718  007096  D004               	goto	u30270
 28719                           
 28720                           ; BSR set to: 1
 28721  007098  0100               	movlb	0	; () banked
 28722  00709A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28723  00709C  B4D8               	btfsc	status,2,c
 28724  00709E  D006               	goto	u30290
 28725  0070A0                     u30270:
 28726  0070A0  A091               	btfss	145,0,c	;volatile
 28727  0070A2  D00A               	goto	l24816
 28728  0070A4  0100               	movlb	0	; () banked
 28729  0070A6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28730  0070A8  A4D8               	btfss	status,2,c
 28731  0070AA  D006               	goto	l24816
 28732  0070AC                     u30290:
 28733  0070AC  0101               	movlb	1	; () banked
 28734  0070AE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 28735  0070B0  A4D8               	btfss	status,2,c
 28736  0070B2  D002               	goto	l24816
 28737                           
 28738                           ; BSR set to: 1
 28739                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 28740  0070B4  0E00               	movlw	0
 28741  0070B6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28742  0070B8                     l24816:
 28743                           
 28744                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 28745  0070B8  0101               	movlb	1	; () banked
 28746  0070BA  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28747  0070BC  B4D8               	btfsc	status,2,c
 28748  0070BE  D010               	goto	u30360
 28749                           
 28750                           ; BSR set to: 1
 28751  0070C0  0E02               	movlw	2
 28752  0070C2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28753  0070C4  B4D8               	btfsc	status,2,c
 28754  0070C6  D00C               	goto	u30360
 28755                           
 28756                           ; BSR set to: 1
 28757  0070C8  A091               	btfss	145,0,c	;volatile
 28758  0070CA  D004               	goto	u30340
 28759                           
 28760                           ; BSR set to: 1
 28761  0070CC  0100               	movlb	0	; () banked
 28762  0070CE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28763  0070D0  B4D8               	btfsc	status,2,c
 28764  0070D2  D006               	goto	u30360
 28765  0070D4                     u30340:
 28766  0070D4  A291               	btfss	145,1,c	;volatile
 28767  0070D6  D00A               	goto	l24830
 28768  0070D8  0100               	movlb	0	; () banked
 28769  0070DA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28770  0070DC  A4D8               	btfss	status,2,c
 28771  0070DE  D006               	goto	l24830
 28772  0070E0                     u30360:
 28773  0070E0  0101               	movlb	1	; () banked
 28774  0070E2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 28775  0070E4  A4D8               	btfss	status,2,c
 28776  0070E6  D002               	goto	l24830
 28777                           
 28778                           ; BSR set to: 1
 28779                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 28780  0070E8  0E00               	movlw	0
 28781  0070EA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28782  0070EC                     l24830:
 28783                           
 28784                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 28785  0070EC  0101               	movlb	1	; () banked
 28786  0070EE  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 28787  0070F0  B4D8               	btfsc	status,2,c
 28788  0070F2  0012               	return	
 28789                           
 28790                           ; BSR set to: 1
 28791                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 28792  0070F4  0100               	movlb	0	; () banked
 28793  0070F6  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 28794  0070F8  A4D8               	btfss	status,2,c
 28795  0070FA  D02B               	goto	l24856
 28796                           
 28797                           ; BSR set to: 0
 28798  0070FC  0101               	movlb	1	; () banked
 28799  0070FE  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 28800  007100  A4D8               	btfss	status,2,c
 28801  007102  D027               	goto	l24856
 28802                           
 28803                           ; BSR set to: 1
 28804  007104  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28805  007106  A4D8               	btfss	status,2,c
 28806  007108  D024               	goto	l24856
 28807                           
 28808                           ; BSR set to: 1
 28809                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 28810  00710A  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28811  00710C  B4D8               	btfsc	status,2,c
 28812  00710E  D004               	goto	u30430
 28813                           
 28814                           ; BSR set to: 1
 28815  007110  0E02               	movlw	2
 28816  007112  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28817  007114  A4D8               	btfss	status,2,c
 28818  007116  D007               	goto	l24846
 28819  007118                     u30430:
 28820                           
 28821                           ; BSR set to: 1
 28822  007118  0100               	movlb	0	; () banked
 28823  00711A  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28824  00711C  A4D8               	btfss	status,2,c
 28825  00711E  D003               	goto	l24846
 28826                           
 28827                           ; BSR set to: 0
 28828                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 28829  007120  0E00               	movlw	0
 28830  007122  0101               	movlb	1	; () banked
 28831  007124  D015               	goto	L102
 28832  007126                     l24846:
 28833  007126  0E03               	movlw	3
 28834  007128  0101               	movlb	1	; () banked
 28835  00712A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28836  00712C  A4D8               	btfss	status,2,c
 28837  00712E  D011               	goto	l24856
 28838                           
 28839                           ; BSR set to: 1
 28840  007130  0100               	movlb	0	; () banked
 28841  007132  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28842  007134  A4D8               	btfss	status,2,c
 28843  007136  D00D               	goto	l24856
 28844                           
 28845                           ; BSR set to: 0
 28846  007138  0101               	movlb	1	; () banked
 28847  00713A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28848  00713C  D005               	goto	u30470
 28849  00713E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28850  007140  E108               	bnz	l24856
 28851  007142  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28852  007144  B0D8               	btfsc	status,0,c
 28853  007146  D005               	goto	l24856
 28854  007148                     u30470:
 28855                           
 28856                           ; BSR set to: 1
 28857  007148  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 28858  00714A  A4D8               	btfss	status,2,c
 28859  00714C  D002               	goto	l24856
 28860                           
 28861                           ; BSR set to: 1
 28862                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 28863  00714E  0E00               	movlw	0
 28864  007150                     L102:
 28865  007150  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28866  007152                     l24856:
 28867                           
 28868                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 28869  007152  0100               	movlb	0	; () banked
 28870  007154  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 28871  007156  B4D8               	btfsc	status,2,c
 28872  007158  D003               	goto	u30500
 28873                           
 28874                           ; BSR set to: 0
 28875  00715A  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28876  00715C  A4D8               	btfss	status,2,c
 28877  00715E  0012               	return	
 28878  007160                     u30500:
 28879                           
 28880                           ; BSR set to: 0
 28881  007160  0101               	movlb	1	; () banked
 28882  007162  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 28883  007164  A4D8               	btfss	status,2,c
 28884  007166  0012               	return	
 28885                           
 28886                           ; BSR set to: 1
 28887  007168  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28888  00716A  A4D8               	btfss	status,2,c
 28889  00716C  0012               	return	
 28890                           
 28891                           ; BSR set to: 1
 28892                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 28893  00716E  0E03               	movlw	3
 28894  007170  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28895  007172  A4D8               	btfss	status,2,c
 28896  007174  D008               	goto	l24870
 28897                           
 28898                           ; BSR set to: 1
 28899  007176  0100               	movlb	0	; () banked
 28900  007178  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28901  00717A  A4D8               	btfss	status,2,c
 28902  00717C  D004               	goto	l24870
 28903                           
 28904                           ; BSR set to: 0
 28905                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 28906  00717E  0E00               	movlw	0
 28907  007180  0101               	movlb	1	; () banked
 28908  007182  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28909                           
 28910                           ;inputs_MC50.c: 727:             }
 28911  007184  0012               	return	
 28912  007186                     l24870:
 28913  007186  0101               	movlb	1	; () banked
 28914  007188  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28915  00718A  B4D8               	btfsc	status,2,c
 28916  00718C  D004               	goto	u30560
 28917                           
 28918                           ; BSR set to: 1
 28919  00718E  0E02               	movlw	2
 28920  007190  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28921  007192  A4D8               	btfss	status,2,c
 28922  007194  D004               	goto	u30570
 28923  007196                     u30560:
 28924                           
 28925                           ; BSR set to: 1
 28926  007196  0100               	movlb	0	; () banked
 28927  007198  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28928  00719A  B4D8               	btfsc	status,2,c
 28929  00719C  D004               	goto	u30580
 28930  00719E                     u30570:
 28931  00719E  0100               	movlb	0	; () banked
 28932  0071A0  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28933  0071A2  A4D8               	btfss	status,2,c
 28934  0071A4  0012               	return	
 28935  0071A6                     u30580:
 28936                           
 28937                           ; BSR set to: 0
 28938                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 28939  0071A6  0E00               	movlw	0
 28940  0071A8  0101               	movlb	1	; () banked
 28941  0071AA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28942  0071AC  0012               	return	
 28943  0071AE                     __end_of_ControlInputs:
 28944                           	callstack 0
 28945                           
 28946 ;; *************** function _ControlCurrent *****************
 28947 ;; Defined at:
 28948 ;;		line 342 in file "controlCurrent_MC50.c"
 28949 ;; Parameters:    Size  Location     Type
 28950 ;;		None
 28951 ;; Auto vars:     Size  Location     Type
 28952 ;;		None
 28953 ;; Return value:  Size  Location     Type
 28954 ;;                  1    wreg      void 
 28955 ;; Registers used:
 28956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28957 ;; Tracked objects:
 28958 ;;		On entry : 3E/1
 28959 ;;		On exit  : 3E/0
 28960 ;;		Unchanged: 0/0
 28961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28966 ;;Total ram usage:        4 bytes
 28967 ;; Hardware stack levels used: 1
 28968 ;; Hardware stack levels required when called: 6
 28969 ;; This function calls:
 28970 ;;		_GetMotorPower
 28971 ;;		_getCurrentComparator
 28972 ;;		_refreshADCZeroOffset
 28973 ;;		_refreshCurrent
 28974 ;; This function is called by:
 28975 ;;		_main
 28976 ;; This function uses a non-reentrant model
 28977 ;;
 28978                           
 28979                           	psect	text119
 28980  006A44                     __ptext119:
 28981                           	callstack 0
 28982  006A44                     _ControlCurrent:
 28983                           	callstack 24
 28984                           
 28985                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 28986                           
 28987                           ;incstack = 0
 28988  006A44  ECAC  F049         	call	_refreshCurrent	;wreg free
 28989                           
 28990                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 28991  006A48  EC6A  F03A         	call	_refreshADCZeroOffset	;wreg free
 28992                           
 28993                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 28994  006A4C  EC2C  F03D         	call	_GetMotorPower	;wreg free
 28995  006A50  6E23               	movwf	??_ControlCurrent^0,c
 28996  006A52  5023               	movf	??_ControlCurrent^0,w,c
 28997  006A54  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 28998  006A56  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 28999                           
 29000                           ; BSR set to: 1
 29001                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 29002  006A58  EC34  F031         	call	_getCurrentComparator	;wreg free
 29003  006A5C  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 29004  006A60  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 29005  006A64  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 29006  006A68  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 29007                           
 29008                           ; BSR set to: 1
 29009                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 29010  006A6C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29011  006A6E  A4D8               	btfss	status,2,c
 29012  006A70  D00F               	goto	l24526
 29013                           
 29014                           ; BSR set to: 1
 29015                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 29016  006A72  0E00               	movlw	0
 29017  006A74  0100               	movlb	0	; () banked
 29018  006A76  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29019                           
 29020                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 29021  006A78  0E00               	movlw	0
 29022  006A7A  0101               	movlb	1	; () banked
 29023  006A7C  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29024                           
 29025                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 29026  006A7E  0E00               	movlw	0
 29027  006A80  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29028                           
 29029                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 29030  006A82  0E00               	movlw	0
 29031  006A84  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29032                           
 29033                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 29034  006A86  0E00               	movlw	0
 29035  006A88  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29036  006A8A  0E14               	movlw	20
 29037  006A8C  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29038                           
 29039                           ;controlCurrent_MC50.c: 365:     }
 29040  006A8E  0012               	return	
 29041  006A90                     l24526:
 29042                           
 29043                           ; BSR set to: 1
 29044  006A90  517B               	movf	_powerControl_st& (0+255),w,b
 29045  006A92  A4D8               	btfss	status,2,c
 29046  006A94  D05D               	goto	l24560
 29047                           
 29048                           ; BSR set to: 1
 29049                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 29050  006A96  0E00               	movlw	0
 29051  006A98  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29052  006A9A  0E14               	movlw	20
 29053  006A9C  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29054                           
 29055                           ; BSR set to: 1
 29056                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 29057  006A9E  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 29058  006AA0  6E23               	movwf	??_ControlCurrent^0,c
 29059  006AA2  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 29060  006AA4  6E24               	movwf	(??_ControlCurrent+1)^0,c
 29061  006AA6  6A25               	clrf	(??_ControlCurrent+2)^0,c
 29062  006AA8  6A26               	clrf	(??_ControlCurrent+3)^0,c
 29063  006AAA  5023               	movf	??_ControlCurrent^0,w,c
 29064  006AAC  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29065  006AAE  5024               	movf	(??_ControlCurrent+1)^0,w,c
 29066  006AB0  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29067  006AB2  5025               	movf	(??_ControlCurrent+2)^0,w,c
 29068  006AB4  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29069  006AB6  5026               	movf	(??_ControlCurrent+3)^0,w,c
 29070  006AB8  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29071  006ABA  B0D8               	btfsc	status,0,c
 29072  006ABC  D03E               	goto	l24558
 29073                           
 29074                           ; BSR set to: 1
 29075  006ABE  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29076  006AC0  D005               	goto	u29630
 29077  006AC2  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29078  006AC4  E13A               	bnz	l24558
 29079  006AC6  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29080  006AC8  B0D8               	btfsc	status,0,c
 29081  006ACA  D037               	goto	l24558
 29082  006ACC                     u29630:
 29083                           
 29084                           ; BSR set to: 1
 29085  006ACC  0100               	movlb	0	; () banked
 29086  006ACE  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 29087  006AD0  B4D8               	btfsc	status,2,c
 29088  006AD2  D033               	goto	l24558
 29089                           
 29090                           ; BSR set to: 0
 29091  006AD4  0101               	movlb	1	; () banked
 29092  006AD6  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 29093  006AD8  D005               	goto	u29650
 29094  006ADA  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 29095  006ADC  E12E               	bnz	l24558
 29096  006ADE  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 29097  006AE0  B0D8               	btfsc	status,0,c
 29098  006AE2  D02B               	goto	l24558
 29099  006AE4                     u29650:
 29100                           
 29101                           ; BSR set to: 1
 29102                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 29103  006AE4  0100               	movlb	0	; () banked
 29104  006AE6  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 29105  006AE8  B4D8               	btfsc	status,2,c
 29106  006AEA  D00B               	goto	l24544
 29107                           
 29108                           ; BSR set to: 0
 29109                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 29110  006AEC  0101               	movlb	1	; () banked
 29111  006AEE  518D               	movf	_erroranterior& (0+255),w,b	;volatile
 29112  006AF0  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 29113  006AF2  518E               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 29114  006AF4  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 29115  006AF6  B0D8               	btfsc	status,0,c
 29116  006AF8  D004               	goto	l24544
 29117                           
 29118                           ; BSR set to: 1
 29119                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 29120  006AFA  0E00               	movlw	0
 29121  006AFC  0100               	movlb	0	; () banked
 29122  006AFE  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29123                           
 29124                           ;controlCurrent_MC50.c: 384:                  }
 29125  006B00  D002               	goto	l24546
 29126  006B02                     l24544:
 29127                           
 29128                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 29129  006B02  0100               	movlb	0	; () banked
 29130  006B04  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29131  006B06                     l24546:
 29132                           
 29133                           ; BSR set to: 0
 29134                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 29135  006B06  C12E  F18D         	movff	_var_sys+46,_erroranterior	;volatile
 29136  006B0A  C12F  F18E         	movff	_var_sys+47,_erroranterior+1	;volatile
 29137                           
 29138                           ; BSR set to: 0
 29139                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 29140                           
 29141                           ;controlCurrent_MC50.c: 390:              }
 29142  006B0E  0101               	movlb	1	; () banked
 29143  006B10  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29144  006B12  D005               	goto	u29680
 29145  006B14  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29146  006B16  E14F               	bnz	l1405
 29147  006B18  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29148  006B1A  B0D8               	btfsc	status,0,c
 29149  006B1C  0012               	return	
 29150  006B1E                     u29680:
 29151                           
 29152                           ; BSR set to: 1
 29153  006B1E  0E01               	movlw	1
 29154  006B20  0100               	movlb	0	; () banked
 29155  006B22  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29156  006B24  0012               	return	
 29157                           
 29158                           ; BSR set to: 0
 29159                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 29160  006B26  0E00               	movlw	0
 29161  006B28  0101               	movlb	1	; () banked
 29162  006B2A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29163                           
 29164                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29165  006B2C  0E00               	movlw	0
 29166  006B2E  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29167  006B30  0EC8               	movlw	200
 29168  006B32  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29169                           
 29170                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 29171  006B34  0E01               	movlw	1
 29172  006B36  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29173  006B38  0012               	return	
 29174  006B3A                     l24558:
 29175                           
 29176                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 29177  006B3A  0E00               	movlw	0
 29178  006B3C  0100               	movlb	0	; () banked
 29179  006B3E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29180                           
 29181                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 29182  006B40  0E00               	movlw	0
 29183  006B42  0101               	movlb	1	; () banked
 29184  006B44  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29185                           
 29186                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 29187  006B46  0E00               	movlw	0
 29188  006B48  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29189                           
 29190                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 29191  006B4A  0E00               	movlw	0
 29192  006B4C  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29193  006B4E  0012               	return	
 29194  006B50                     l24560:
 29195                           
 29196                           ; BSR set to: 1
 29197                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 29198  006B50  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29199  006B52  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 29200  006B54  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29201  006B56  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 29202  006B58  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29203  006B5A  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 29204  006B5C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29205  006B5E  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 29206  006B60  B0D8               	btfsc	status,0,c
 29207  006B62  D7EB               	goto	l24558
 29208                           
 29209                           ; BSR set to: 1
 29210  006B64  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29211  006B66  D005               	goto	u29710
 29212  006B68  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29213  006B6A  E1E7               	bnz	l24558
 29214  006B6C  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29215  006B6E  B0D8               	btfsc	status,0,c
 29216  006B70  D7E4               	goto	l24558
 29217  006B72                     u29710:
 29218                           
 29219                           ; BSR set to: 1
 29220  006B72  BFD8               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 29221  006B74  D005               	goto	u29720
 29222  006B76  51D8               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 29223  006B78  E1E0               	bnz	l24558
 29224  006B7A  05D7               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 29225  006B7C  B0D8               	btfsc	status,0,c
 29226  006B7E  D7DD               	goto	l24558
 29227  006B80                     u29720:
 29228                           
 29229                           ; BSR set to: 1
 29230  006B80  0100               	movlb	0	; () banked
 29231  006B82  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 29232  006B84  B4D8               	btfsc	status,2,c
 29233  006B86  D7D9               	goto	l24558
 29234                           
 29235                           ; BSR set to: 0
 29236                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 29237  006B88  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29238                           
 29239                           ; BSR set to: 0
 29240                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 29241  006B8A  0101               	movlb	1	; () banked
 29242  006B8C  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29243  006B8E  D005               	goto	u29740
 29244  006B90  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29245  006B92  E111               	bnz	l1405
 29246  006B94  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29247  006B96  B0D8               	btfsc	status,0,c
 29248  006B98  0012               	return	
 29249  006B9A                     u29740:
 29250                           
 29251                           ; BSR set to: 1
 29252  006B9A  0E02               	movlw	2
 29253  006B9C  0100               	movlb	0	; () banked
 29254  006B9E  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29255  006BA0  0012               	return	
 29256                           
 29257                           ; BSR set to: 0
 29258                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 29259  006BA2  0E00               	movlw	0
 29260  006BA4  0101               	movlb	1	; () banked
 29261  006BA6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29262                           
 29263                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29264  006BA8  0E00               	movlw	0
 29265  006BAA  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29266  006BAC  0EC8               	movlw	200
 29267  006BAE  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29268                           
 29269                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 29270  006BB0  0E01               	movlw	1
 29271  006BB2  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29272  006BB4  0012               	return	
 29273  006BB6                     l1405:
 29274  006BB6  0012               	return		;funcret
 29275  006BB8                     __end_of_ControlCurrent:
 29276                           	callstack 0
 29277                           
 29278 ;; *************** function _refreshCurrent *****************
 29279 ;; Defined at:
 29280 ;;		line 233 in file "controlCurrent_MC50.c"
 29281 ;; Parameters:    Size  Location     Type
 29282 ;;		None
 29283 ;; Auto vars:     Size  Location     Type
 29284 ;;		None
 29285 ;; Return value:  Size  Location     Type
 29286 ;;                  1    wreg      void 
 29287 ;; Registers used:
 29288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29289 ;; Tracked objects:
 29290 ;;		On entry : 3E/1
 29291 ;;		On exit  : 3F/0
 29292 ;;		Unchanged: 0/0
 29293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29298 ;;Total ram usage:        0 bytes
 29299 ;; Hardware stack levels used: 1
 29300 ;; Hardware stack levels required when called: 5
 29301 ;; This function calls:
 29302 ;;		_saveEnergyADCHist
 29303 ;;		_sumEnergyADC
 29304 ;;		_sumHIST
 29305 ;; This function is called by:
 29306 ;;		_ControlCurrent
 29307 ;; This function uses a non-reentrant model
 29308 ;;
 29309                           
 29310                           	psect	text120
 29311  009358                     __ptext120:
 29312                           	callstack 0
 29313  009358                     _refreshCurrent:
 29314                           	callstack 24
 29315                           
 29316                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 29317                           
 29318                           ;incstack = 0
 29319  009358  0100               	movlb	0	; () banked
 29320  00935A  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 29321  00935C  A4D8               	btfss	status,2,c
 29322  00935E  D008               	goto	l22698
 29323                           
 29324                           ; BSR set to: 0
 29325  009360  0101               	movlb	1	; () banked
 29326  009362  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 29327  009364  D005               	goto	l22698
 29328  009366  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 29329  009368  E109               	bnz	l1372
 29330  00936A  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29331  00936C  B0D8               	btfsc	status,0,c
 29332  00936E  D006               	goto	l1372
 29333  009370                     l22698:
 29334                           
 29335                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29336  009370  EC0F  F041         	call	_sumEnergyADC	;wreg free
 29337  009374  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29338  009378  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29339  00937C                     l1372:
 29340                           
 29341                           ; BSR set to: 1
 29342                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29343  00937C  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29344  009380  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29345  009384  ECD1  F04C         	call	_saveEnergyADCHist	;wreg free
 29346                           
 29347                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29348  009388  EC67  F03B         	call	_sumHIST	;wreg free
 29349  00938C  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 29350  009390  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29351  009394  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29352  009398  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29353                           
 29354                           ; BSR set to: 0
 29355  00939C  0012               	return		;funcret
 29356  00939E                     __end_of_refreshCurrent:
 29357                           	callstack 0
 29358                           
 29359 ;; *************** function _sumHIST *****************
 29360 ;; Defined at:
 29361 ;;		line 199 in file "controlCurrent_MC50.c"
 29362 ;; Parameters:    Size  Location     Type
 29363 ;;		None
 29364 ;; Auto vars:     Size  Location     Type
 29365 ;;  sumH            4   27[COMRAM] unsigned long 
 29366 ;;  min             2   25[COMRAM] unsigned int 
 29367 ;;  max             2   23[COMRAM] unsigned int 
 29368 ;;  i               1   31[COMRAM] unsigned char 
 29369 ;; Return value:  Size  Location     Type
 29370 ;;                  4   15[COMRAM] unsigned long 
 29371 ;; Registers used:
 29372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29373 ;; Tracked objects:
 29374 ;;		On entry : 3F/0
 29375 ;;		On exit  : 3F/0
 29376 ;;		Unchanged: 3F/0
 29377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29379 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29380 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29381 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29382 ;;Total ram usage:       17 bytes
 29383 ;; Hardware stack levels used: 1
 29384 ;; Hardware stack levels required when called: 4
 29385 ;; This function calls:
 29386 ;;		Nothing
 29387 ;; This function is called by:
 29388 ;;		_refreshCurrent
 29389 ;; This function uses a non-reentrant model
 29390 ;;
 29391                           
 29392                           	psect	text121
 29393  0076CE                     __ptext121:
 29394                           	callstack 0
 29395  0076CE                     _sumHIST:
 29396                           	callstack 24
 29397                           
 29398                           ; BSR set to: 0
 29399                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29400                           
 29401                           ; BSR set to: 0
 29402                           ;incstack = 0
 29403  0076CE  0E00               	movlw	0
 29404  0076D0  6E1C               	movwf	sumHIST@sumH^0,c
 29405  0076D2  0E00               	movlw	0
 29406  0076D4  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29407  0076D6  0E00               	movlw	0
 29408  0076D8  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29409  0076DA  0E00               	movlw	0
 29410  0076DC  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29411                           
 29412                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29413  0076DE  0E00               	movlw	0
 29414  0076E0  6E19               	movwf	(sumHIST@max+1)^0,c
 29415  0076E2  0E00               	movlw	0
 29416  0076E4  6E18               	movwf	sumHIST@max^0,c
 29417                           
 29418                           ; BSR set to: 0
 29419                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29420  0076E6  681A               	setf	sumHIST@min^0,c
 29421  0076E8  681B               	setf	(sumHIST@min+1)^0,c
 29422                           
 29423                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29424  0076EA  0E00               	movlw	0
 29425  0076EC  6E20               	movwf	sumHIST@i^0,c
 29426  0076EE                     l21226:
 29427                           
 29428                           ; BSR set to: 0
 29429                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29430  0076EE  5020               	movf	sumHIST@i^0,w,c
 29431  0076F0  0D02               	mullw	2
 29432  0076F2  0E60               	movlw	low _SumEnergyADCHist_array
 29433  0076F4  24F3               	addwf	243,w,c
 29434  0076F6  6ED9               	movwf	fsr2l,c
 29435  0076F8  0E02               	movlw	high _SumEnergyADCHist_array
 29436  0076FA  20F4               	addwfc	prodh,w,c
 29437  0076FC  6EDA               	movwf	fsr2h,c
 29438  0076FE  CFDE F014          	movff	postinc2,??_sumHIST
 29439  007702  CFDD F015          	movff	postdec2,??_sumHIST+1
 29440  007706  5014               	movf	??_sumHIST^0,w,c
 29441  007708  241C               	addwf	sumHIST@sumH^0,w,c
 29442  00770A  6E1C               	movwf	sumHIST@sumH^0,c
 29443  00770C  5015               	movf	(??_sumHIST+1)^0,w,c
 29444  00770E  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29445  007710  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29446  007712  0E00               	movlw	0
 29447  007714  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29448  007716  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29449  007718  0E00               	movlw	0
 29450  00771A  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29451  00771C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29452                           
 29453                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29454  00771E  5020               	movf	sumHIST@i^0,w,c
 29455  007720  0D02               	mullw	2
 29456  007722  0E60               	movlw	low _SumEnergyADCHist_array
 29457  007724  24F3               	addwf	243,w,c
 29458  007726  6ED9               	movwf	fsr2l,c
 29459  007728  0E02               	movlw	high _SumEnergyADCHist_array
 29460  00772A  20F4               	addwfc	prodh,w,c
 29461  00772C  6EDA               	movwf	fsr2h,c
 29462  00772E  50DE               	movf	postinc2,w,c
 29463  007730  5C18               	subwf	sumHIST@max^0,w,c
 29464  007732  50DE               	movf	postinc2,w,c
 29465  007734  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29466  007736  B0D8               	btfsc	status,0,c
 29467  007738  D00C               	goto	l1366
 29468                           
 29469                           ; BSR set to: 0
 29470                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29471  00773A  5020               	movf	sumHIST@i^0,w,c
 29472  00773C  0D02               	mullw	2
 29473  00773E  0E60               	movlw	low _SumEnergyADCHist_array
 29474  007740  24F3               	addwf	243,w,c
 29475  007742  6ED9               	movwf	fsr2l,c
 29476  007744  0E02               	movlw	high _SumEnergyADCHist_array
 29477  007746  20F4               	addwfc	prodh,w,c
 29478  007748  6EDA               	movwf	fsr2h,c
 29479  00774A  CFDE F018          	movff	postinc2,sumHIST@max
 29480  00774E  CFDD F019          	movff	postdec2,sumHIST@max+1
 29481  007752                     l1366:
 29482                           
 29483                           ; BSR set to: 0
 29484                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29485  007752  5020               	movf	sumHIST@i^0,w,c
 29486  007754  0D02               	mullw	2
 29487  007756  0E60               	movlw	low _SumEnergyADCHist_array
 29488  007758  24F3               	addwf	243,w,c
 29489  00775A  6ED9               	movwf	fsr2l,c
 29490  00775C  0E02               	movlw	high _SumEnergyADCHist_array
 29491  00775E  20F4               	addwfc	prodh,w,c
 29492  007760  6EDA               	movwf	fsr2h,c
 29493  007762  501A               	movf	sumHIST@min^0,w,c
 29494  007764  5CDE               	subwf	postinc2,w,c
 29495  007766  501B               	movf	(sumHIST@min+1)^0,w,c
 29496  007768  58DE               	subwfb	postinc2,w,c
 29497  00776A  B0D8               	btfsc	status,0,c
 29498  00776C  D00C               	goto	l21232
 29499                           
 29500                           ; BSR set to: 0
 29501                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29502  00776E  5020               	movf	sumHIST@i^0,w,c
 29503  007770  0D02               	mullw	2
 29504  007772  0E60               	movlw	low _SumEnergyADCHist_array
 29505  007774  24F3               	addwf	243,w,c
 29506  007776  6ED9               	movwf	fsr2l,c
 29507  007778  0E02               	movlw	high _SumEnergyADCHist_array
 29508  00777A  20F4               	addwfc	prodh,w,c
 29509  00777C  6EDA               	movwf	fsr2h,c
 29510  00777E  CFDE F01A          	movff	postinc2,sumHIST@min
 29511  007782  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29512  007786                     l21232:
 29513                           
 29514                           ; BSR set to: 0
 29515                           ;controlCurrent_MC50.c: 222:     }
 29516  007786  2A20               	incf	sumHIST@i^0,f,c
 29517                           
 29518                           ; BSR set to: 0
 29519  007788  0E09               	movlw	9
 29520  00778A  6420               	cpfsgt	sumHIST@i^0,c
 29521  00778C  D7B0               	goto	l21226
 29522                           
 29523                           ; BSR set to: 0
 29524                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29525  00778E  501A               	movf	sumHIST@min^0,w,c
 29526  007790  2418               	addwf	sumHIST@max^0,w,c
 29527  007792  6E14               	movwf	??_sumHIST^0,c
 29528  007794  501B               	movf	(sumHIST@min+1)^0,w,c
 29529  007796  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29530  007798  6E15               	movwf	(??_sumHIST+1)^0,c
 29531  00779A  6A16               	clrf	(??_sumHIST+2)^0,c
 29532  00779C  6A17               	clrf	(??_sumHIST+3)^0,c
 29533  00779E  5014               	movf	??_sumHIST^0,w,c
 29534  0077A0  5C1C               	subwf	sumHIST@sumH^0,w,c
 29535  0077A2  6E1C               	movwf	sumHIST@sumH^0,c
 29536  0077A4  5015               	movf	(??_sumHIST+1)^0,w,c
 29537  0077A6  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29538  0077A8  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29539  0077AA  5016               	movf	(??_sumHIST+2)^0,w,c
 29540  0077AC  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29541  0077AE  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29542  0077B0  5017               	movf	(??_sumHIST+3)^0,w,c
 29543  0077B2  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29544  0077B4  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29545                           
 29546                           ; BSR set to: 0
 29547                           ;controlCurrent_MC50.c: 226:     return sumH;
 29548  0077B6  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29549  0077BA  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29550  0077BE  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29551  0077C2  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29552                           
 29553                           ; BSR set to: 0
 29554  0077C6  0012               	return		;funcret
 29555  0077C8                     __end_of_sumHIST:
 29556                           	callstack 0
 29557                           
 29558 ;; *************** function _sumEnergyADC *****************
 29559 ;; Defined at:
 29560 ;;		line 59 in file "controlCurrent_MC50.c"
 29561 ;; Parameters:    Size  Location     Type
 29562 ;;		None
 29563 ;; Auto vars:     Size  Location     Type
 29564 ;;  auxValue        2   21[COMRAM] unsigned int 
 29565 ;;  sumE            2   19[COMRAM] unsigned int 
 29566 ;;  i               1   23[COMRAM] unsigned char 
 29567 ;; Return value:  Size  Location     Type
 29568 ;;                  2   15[COMRAM] unsigned int 
 29569 ;; Registers used:
 29570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29571 ;; Tracked objects:
 29572 ;;		On entry : 3E/0
 29573 ;;		On exit  : 3F/1
 29574 ;;		Unchanged: 0/0
 29575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29577 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29579 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29580 ;;Total ram usage:        9 bytes
 29581 ;; Hardware stack levels used: 1
 29582 ;; Hardware stack levels required when called: 4
 29583 ;; This function calls:
 29584 ;;		Nothing
 29585 ;; This function is called by:
 29586 ;;		_refreshCurrent
 29587 ;; This function uses a non-reentrant model
 29588 ;;
 29589                           
 29590                           	psect	text122
 29591  00821E                     __ptext122:
 29592                           	callstack 0
 29593  00821E                     _sumEnergyADC:
 29594                           	callstack 24
 29595                           
 29596                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29597                           
 29598                           ; BSR set to: 0
 29599                           ;incstack = 0
 29600  00821E  0E00               	movlw	0
 29601  008220  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29602  008222  0E00               	movlw	0
 29603  008224  6E14               	movwf	sumEnergyADC@sumE^0,c
 29604                           
 29605                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29606  008226  0E00               	movlw	0
 29607  008228  6E18               	movwf	sumEnergyADC@i^0,c
 29608  00822A                     l21198:
 29609                           
 29610                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29611  00822A  5018               	movf	sumEnergyADC@i^0,w,c
 29612  00822C  0D02               	mullw	2
 29613  00822E  0E00               	movlw	low _ADC_array
 29614  008230  24F3               	addwf	243,w,c
 29615  008232  6ED9               	movwf	fsr2l,c
 29616  008234  0E02               	movlw	high _ADC_array
 29617  008236  20F4               	addwfc	prodh,w,c
 29618  008238  6EDA               	movwf	fsr2h,c
 29619  00823A  50DE               	movf	postinc2,w,c
 29620  00823C  0101               	movlb	1	; () banked
 29621  00823E  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29622  008240  50DE               	movf	postinc2,w,c
 29623  008242  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29624  008244  B0D8               	btfsc	status,0,c
 29625  008246  D012               	goto	l21202
 29626                           
 29627                           ; BSR set to: 1
 29628                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29629  008248  5018               	movf	sumEnergyADC@i^0,w,c
 29630  00824A  0D02               	mullw	2
 29631  00824C  0E00               	movlw	low _ADC_array
 29632  00824E  24F3               	addwf	243,w,c
 29633  008250  6ED9               	movwf	fsr2l,c
 29634  008252  0E02               	movlw	high _ADC_array
 29635  008254  20F4               	addwfc	prodh,w,c
 29636  008256  6EDA               	movwf	fsr2h,c
 29637  008258  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29638  00825C  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29639  008260  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29640  008262  5C12               	subwf	??_sumEnergyADC^0,w,c
 29641  008264  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29642  008266  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29643  008268  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29644  00826A  D011               	goto	L103
 29645  00826C                     l21202:
 29646                           
 29647                           ; BSR set to: 1
 29648                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29649  00826C  5018               	movf	sumEnergyADC@i^0,w,c
 29650  00826E  0D02               	mullw	2
 29651  008270  0E00               	movlw	low _ADC_array
 29652  008272  24F3               	addwf	243,w,c
 29653  008274  6ED9               	movwf	fsr2l,c
 29654  008276  0E02               	movlw	high _ADC_array
 29655  008278  20F4               	addwfc	prodh,w,c
 29656  00827A  6EDA               	movwf	fsr2h,c
 29657  00827C  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29658  008280  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29659  008284  5012               	movf	??_sumEnergyADC^0,w,c
 29660  008286  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29661  008288  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29662  00828A  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29663  00828C  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29664  00828E                     L103:
 29665  00828E  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29666                           
 29667                           ; BSR set to: 1
 29668                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29669  008290  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29670  008292  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29671  008294  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29672  008296  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29673                           
 29674                           ; BSR set to: 1
 29675                           ;controlCurrent_MC50.c: 94:     }
 29676  008298  2A18               	incf	sumEnergyADC@i^0,f,c
 29677                           
 29678                           ; BSR set to: 1
 29679  00829A  0E1D               	movlw	29
 29680  00829C  6418               	cpfsgt	sumEnergyADC@i^0,c
 29681  00829E  D7C5               	goto	l21198
 29682                           
 29683                           ; BSR set to: 1
 29684                           ;controlCurrent_MC50.c: 96:     return sumE;
 29685  0082A0  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 29686  0082A4  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 29687                           
 29688                           ; BSR set to: 1
 29689  0082A8  0012               	return		;funcret
 29690  0082AA                     __end_of_sumEnergyADC:
 29691                           	callstack 0
 29692                           
 29693 ;; *************** function _saveEnergyADCHist *****************
 29694 ;; Defined at:
 29695 ;;		line 182 in file "controlCurrent_MC50.c"
 29696 ;; Parameters:    Size  Location     Type
 29697 ;;  valueToSave     2   15[COMRAM] unsigned int 
 29698 ;; Auto vars:     Size  Location     Type
 29699 ;;		None
 29700 ;; Return value:  Size  Location     Type
 29701 ;;                  1    wreg      void 
 29702 ;; Registers used:
 29703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29704 ;; Tracked objects:
 29705 ;;		On entry : 3F/1
 29706 ;;		On exit  : 3F/0
 29707 ;;		Unchanged: 0/0
 29708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29713 ;;Total ram usage:        2 bytes
 29714 ;; Hardware stack levels used: 1
 29715 ;; Hardware stack levels required when called: 4
 29716 ;; This function calls:
 29717 ;;		Nothing
 29718 ;; This function is called by:
 29719 ;;		_refreshCurrent
 29720 ;; This function uses a non-reentrant model
 29721 ;;
 29722                           
 29723                           	psect	text123
 29724  0099A2                     __ptext123:
 29725                           	callstack 0
 29726  0099A2                     _saveEnergyADCHist:
 29727                           	callstack 24
 29728                           
 29729                           ; BSR set to: 1
 29730                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 29731                           
 29732                           ; BSR set to: 1
 29733                           ;incstack = 0
 29734  0099A2  0E09               	movlw	9
 29735  0099A4  0100               	movlb	0	; () banked
 29736  0099A6  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29737  0099A8  D002               	goto	l21214
 29738                           
 29739                           ; BSR set to: 0
 29740                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 29741  0099AA  0E00               	movlw	0
 29742  0099AC  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29743  0099AE                     l21214:
 29744                           
 29745                           ; BSR set to: 0
 29746                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 29747  0099AE  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 29748  0099B0  0D02               	mullw	2
 29749  0099B2  0E60               	movlw	low _SumEnergyADCHist_array
 29750  0099B4  24F3               	addwf	243,w,c
 29751  0099B6  6ED9               	movwf	fsr2l,c
 29752  0099B8  0E02               	movlw	high _SumEnergyADCHist_array
 29753  0099BA  20F4               	addwfc	prodh,w,c
 29754  0099BC  6EDA               	movwf	fsr2h,c
 29755  0099BE  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 29756  0099C2  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 29757                           
 29758                           ; BSR set to: 0
 29759                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 29760  0099C6  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 29761                           
 29762                           ; BSR set to: 0
 29763  0099C8  0012               	return		;funcret
 29764  0099CA                     __end_of_saveEnergyADCHist:
 29765                           	callstack 0
 29766                           
 29767 ;; *************** function _refreshADCZeroOffset *****************
 29768 ;; Defined at:
 29769 ;;		line 103 in file "controlCurrent_MC50.c"
 29770 ;; Parameters:    Size  Location     Type
 29771 ;;		None
 29772 ;; Auto vars:     Size  Location     Type
 29773 ;;  media           2   23[COMRAM] unsigned int 
 29774 ;;  i               1   22[COMRAM] unsigned char 
 29775 ;; Return value:  Size  Location     Type
 29776 ;;                  1    wreg      void 
 29777 ;; Registers used:
 29778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29779 ;; Tracked objects:
 29780 ;;		On entry : 3F/0
 29781 ;;		On exit  : 3C/0
 29782 ;;		Unchanged: 0/0
 29783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29785 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29787 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29788 ;;Total ram usage:        3 bytes
 29789 ;; Hardware stack levels used: 1
 29790 ;; Hardware stack levels required when called: 5
 29791 ;; This function calls:
 29792 ;;		___lwdiv
 29793 ;; This function is called by:
 29794 ;;		_ControlCurrent
 29795 ;; This function uses a non-reentrant model
 29796 ;;
 29797                           
 29798                           	psect	text124
 29799  0074D4                     __ptext124:
 29800                           	callstack 0
 29801  0074D4                     _refreshADCZeroOffset:
 29802                           	callstack 24
 29803                           
 29804                           ; BSR set to: 0
 29805                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 29806                           
 29807                           ; BSR set to: 0
 29808                           ;incstack = 0
 29809  0074D4  0E00               	movlw	0
 29810  0074D6  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29811  0074D8  0E00               	movlw	0
 29812  0074DA  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29813                           
 29814                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 29815  0074DC  0101               	movlb	1	; () banked
 29816  0074DE  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29817  0074E0  A4D8               	btfss	status,2,c
 29818  0074E2  0012               	return	
 29819                           
 29820                           ; BSR set to: 1
 29821                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 29822  0074E4  BFDE               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 29823  0074E6  D005               	goto	u26050
 29824  0074E8  51DE               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 29825  0074EA  E172               	bnz	l1357
 29826  0074EC  05DD               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 29827  0074EE  B0D8               	btfsc	status,0,c
 29828  0074F0  0012               	return	
 29829  0074F2                     u26050:
 29830                           
 29831                           ; BSR set to: 1
 29832                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 29833  0074F2  0E00               	movlw	0
 29834  0074F4  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
 29835  0074F6  0E14               	movlw	20
 29836  0074F8  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
 29837                           
 29838                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 29839  0074FA  0E00               	movlw	0
 29840  0074FC  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29841  0074FE                     l22650:
 29842                           
 29843                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 29844  0074FE  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29845  007500  0D02               	mullw	2
 29846  007502  0E00               	movlw	low _ADC_array
 29847  007504  24F3               	addwf	243,w,c
 29848  007506  6ED9               	movwf	fsr2l,c
 29849  007508  0E02               	movlw	high _ADC_array
 29850  00750A  20F4               	addwfc	prodh,w,c
 29851  00750C  6EDA               	movwf	fsr2h,c
 29852  00750E  50DE               	movf	postinc2,w,c
 29853  007510  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29854  007512  50DD               	movf	postdec2,w,c
 29855  007514  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29856                           
 29857                           ;controlCurrent_MC50.c: 128:             }
 29858  007516  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29859  007518  0E1D               	movlw	29
 29860  00751A  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29861  00751C  D7F0               	goto	l22650
 29862                           
 29863                           ;controlCurrent_MC50.c: 130:             media = media/30;
 29864  00751E  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29865  007522  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29866  007526  0E00               	movlw	0
 29867  007528  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29868  00752A  0E1E               	movlw	30
 29869  00752C  6E12               	movwf	___lwdiv@divisor^0,c
 29870  00752E  EC9C  F048         	call	___lwdiv	;wreg free
 29871  007532  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29872  007536  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29873                           
 29874                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 29875  00753A  0EEB               	movlw	235
 29876  00753C  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29877  00753E  0E01               	movlw	1
 29878  007540  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29879  007542  A0D8               	btfss	status,0,c
 29880  007544  D006               	goto	l22664
 29881  007546  0E12               	movlw	18
 29882  007548  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29883  00754A  0E02               	movlw	2
 29884  00754C  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29885  00754E  A0D8               	btfss	status,0,c
 29886  007550  D004               	goto	l22666
 29887  007552                     l22664:
 29888                           
 29889                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 29890  007552  0E01               	movlw	1
 29891  007554  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29892  007556  0EFE               	movlw	254
 29893  007558  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29894  00755A                     l22666:
 29895                           
 29896                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 29897  00755A  0E1D               	movlw	29
 29898  00755C  0100               	movlb	0	; () banked
 29899  00755E  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 29900  007560  D002               	goto	l22670
 29901                           
 29902                           ; BSR set to: 0
 29903                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 29904  007562  0E00               	movlw	0
 29905  007564  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 29906  007566                     l22670:
 29907                           
 29908                           ; BSR set to: 0
 29909                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 29910  007566  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 29911  007568  0D02               	mullw	2
 29912  00756A  0E96               	movlw	low _ADC_zero_array
 29913  00756C  24F3               	addwf	243,w,c
 29914  00756E  6ED9               	movwf	fsr2l,c
 29915  007570  0E03               	movlw	high _ADC_zero_array
 29916  007572  20F4               	addwfc	prodh,w,c
 29917  007574  6EDA               	movwf	fsr2h,c
 29918  007576  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 29919  00757A  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 29920                           
 29921                           ; BSR set to: 0
 29922                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 29923  00757E  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 29924                           
 29925                           ; BSR set to: 0
 29926                           ;controlCurrent_MC50.c: 150:             media = 0;
 29927  007580  0E00               	movlw	0
 29928  007582  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29929  007584  0E00               	movlw	0
 29930  007586  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29931                           
 29932                           ; BSR set to: 0
 29933                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 29934  007588  0E00               	movlw	0
 29935  00758A  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29936  00758C                     l22682:
 29937                           
 29938                           ; BSR set to: 0
 29939                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 29940  00758C  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29941  00758E  0D02               	mullw	2
 29942  007590  0E96               	movlw	low _ADC_zero_array
 29943  007592  24F3               	addwf	243,w,c
 29944  007594  6ED9               	movwf	fsr2l,c
 29945  007596  0E03               	movlw	high _ADC_zero_array
 29946  007598  20F4               	addwfc	prodh,w,c
 29947  00759A  6EDA               	movwf	fsr2h,c
 29948  00759C  50DE               	movf	postinc2,w,c
 29949  00759E  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29950  0075A0  50DD               	movf	postdec2,w,c
 29951  0075A2  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29952                           
 29953                           ; BSR set to: 0
 29954                           ;controlCurrent_MC50.c: 159:             }
 29955  0075A4  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29956                           
 29957                           ; BSR set to: 0
 29958  0075A6  0E1D               	movlw	29
 29959  0075A8  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29960  0075AA  D7F0               	goto	l22682
 29961                           
 29962                           ; BSR set to: 0
 29963                           ;controlCurrent_MC50.c: 160:             media = media/30;
 29964  0075AC  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29965  0075B0  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29966  0075B4  0E00               	movlw	0
 29967  0075B6  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29968  0075B8  0E1E               	movlw	30
 29969  0075BA  6E12               	movwf	___lwdiv@divisor^0,c
 29970  0075BC  EC9C  F048         	call	___lwdiv	;wreg free
 29971  0075C0  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29972  0075C4  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29973                           
 29974                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 29975  0075C8  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 29976  0075CC  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 29977  0075D0                     l1357:
 29978  0075D0  0012               	return		;funcret
 29979  0075D2                     __end_of_refreshADCZeroOffset:
 29980                           	callstack 0
 29981                           
 29982 ;; *************** function ___lwdiv *****************
 29983 ;; Defined at:
 29984 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 29985 ;; Parameters:    Size  Location     Type
 29986 ;;  dividend        2   15[COMRAM] unsigned int 
 29987 ;;  divisor         2   17[COMRAM] unsigned int 
 29988 ;; Auto vars:     Size  Location     Type
 29989 ;;  quotient        2   20[COMRAM] unsigned int 
 29990 ;;  counter         1   19[COMRAM] unsigned char 
 29991 ;; Return value:  Size  Location     Type
 29992 ;;                  2   15[COMRAM] unsigned int 
 29993 ;; Registers used:
 29994 ;;		wreg, status,2, status,0
 29995 ;; Tracked objects:
 29996 ;;		On entry : 3C/2
 29997 ;;		On exit  : 3C/0
 29998 ;;		Unchanged: 3C/0
 29999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30001 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30003 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30004 ;;Total ram usage:        7 bytes
 30005 ;; Hardware stack levels used: 1
 30006 ;; Hardware stack levels required when called: 4
 30007 ;; This function calls:
 30008 ;;		Nothing
 30009 ;; This function is called by:
 30010 ;;		_refreshADCZeroOffset
 30011 ;;		_sm_execute_menuConfiguration
 30012 ;; This function uses a non-reentrant model
 30013 ;;
 30014                           
 30015                           	psect	text125
 30016  009138                     __ptext125:
 30017                           	callstack 0
 30018  009138                     ___lwdiv:
 30019                           	callstack 24
 30020                           
 30021                           ;incstack = 0
 30022  009138  0E00               	movlw	0
 30023  00913A  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 30024  00913C  0E00               	movlw	0
 30025  00913E  6E15               	movwf	___lwdiv@quotient^0,c
 30026  009140  5012               	movf	___lwdiv@divisor^0,w,c
 30027  009142  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 30028  009144  B4D8               	btfsc	status,2,c
 30029  009146  D01C               	goto	l4284
 30030  009148  0E01               	movlw	1
 30031  00914A  6E14               	movwf	___lwdiv@counter^0,c
 30032  00914C  D004               	goto	l22494
 30033  00914E                     l22492:
 30034  00914E  90D8               	bcf	status,0,c
 30035  009150  3612               	rlcf	___lwdiv@divisor^0,f,c
 30036  009152  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 30037  009154  2A14               	incf	___lwdiv@counter^0,f,c
 30038  009156                     l22494:
 30039  009156  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 30040  009158  D7FA               	goto	l22492
 30041  00915A                     u25980:
 30042  00915A  90D8               	bcf	status,0,c
 30043  00915C  3615               	rlcf	___lwdiv@quotient^0,f,c
 30044  00915E  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 30045  009160  5012               	movf	___lwdiv@divisor^0,w,c
 30046  009162  5C10               	subwf	___lwdiv@dividend^0,w,c
 30047  009164  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30048  009166  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 30049  009168  A0D8               	btfss	status,0,c
 30050  00916A  D005               	goto	l22504
 30051  00916C  5012               	movf	___lwdiv@divisor^0,w,c
 30052  00916E  5E10               	subwf	___lwdiv@dividend^0,f,c
 30053  009170  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30054  009172  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 30055  009174  8015               	bsf	___lwdiv@quotient^0,0,c
 30056  009176                     l22504:
 30057  009176  90D8               	bcf	status,0,c
 30058  009178  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 30059  00917A  3212               	rrcf	___lwdiv@divisor^0,f,c
 30060  00917C  2E14               	decfsz	___lwdiv@counter^0,f,c
 30061  00917E  D7ED               	goto	u25980
 30062  009180                     l4284:
 30063  009180  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 30064  009184  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30065  009188  0012               	return		;funcret
 30066  00918A                     __end_of___lwdiv:
 30067                           	callstack 0
 30068                           
 30069 ;; *************** function _getCurrentComparator *****************
 30070 ;; Defined at:
 30071 ;;		line 264 in file "controlCurrent_MC50.c"
 30072 ;; Parameters:    Size  Location     Type
 30073 ;;		None
 30074 ;; Auto vars:     Size  Location     Type
 30075 ;;  x               1   33[COMRAM] unsigned char 
 30076 ;;  tempOffset      2   31[COMRAM] unsigned int 
 30077 ;; Return value:  Size  Location     Type
 30078 ;;                  4   21[COMRAM] unsigned long 
 30079 ;; Registers used:
 30080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30081 ;; Tracked objects:
 30082 ;;		On entry : 3F/1
 30083 ;;		On exit  : 3F/1
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30087 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30088 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30089 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30090 ;;Total ram usage:       13 bytes
 30091 ;; Hardware stack levels used: 1
 30092 ;; Hardware stack levels required when called: 5
 30093 ;; This function calls:
 30094 ;;		___wmul
 30095 ;; This function is called by:
 30096 ;;		_ControlCurrent
 30097 ;; This function uses a non-reentrant model
 30098 ;;
 30099                           
 30100                           	psect	text126
 30101  006268                     __ptext126:
 30102                           	callstack 0
 30103  006268                     _getCurrentComparator:
 30104                           	callstack 24
 30105                           
 30106                           ; BSR set to: 1
 30107                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 30108                           
 30109                           ; BSR set to: 1
 30110                           
 30111                           ;incstack = 0
 30112  006268  BFB6               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 30113  00626A  D00A               	goto	l22706
 30114  00626C  51B6               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 30115  00626E  E103               	bnz	u26130
 30116  006270  05B5               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 30117  006272  A0D8               	btfss	status,0,c
 30118  006274  D005               	goto	l22706
 30119  006276                     u26130:
 30120                           
 30121                           ; BSR set to: 1
 30122                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 30123  006276  0E00               	movlw	0
 30124  006278  6FDA               	movwf	(_ts_system+59)& (0+255),b	;volatile
 30125  00627A  0E14               	movlw	20
 30126  00627C  6FD9               	movwf	(_ts_system+58)& (0+255),b	;volatile
 30127  00627E  D007               	goto	u26140
 30128  006280                     l22706:
 30129                           
 30130                           ; BSR set to: 1
 30131  006280  BFDA               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 30132  006282  D009               	goto	l22710
 30133  006284  51DA               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 30134  006286  E103               	bnz	u26140
 30135  006288  05D9               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 30136  00628A  A0D8               	btfss	status,0,c
 30137  00628C  D004               	goto	l22710
 30138  00628E                     u26140:
 30139                           
 30140                           ; BSR set to: 1
 30141                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 30142  00628E  0E04               	movlw	4
 30143  006290  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30144  006292  0EB0               	movlw	176
 30145  006294  D003               	goto	L104
 30146  006296                     l22710:
 30147                           
 30148                           ; BSR set to: 1
 30149                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 30150  006296  0E00               	movlw	0
 30151  006298  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30152  00629A  0E00               	movlw	0
 30153  00629C                     L104:
 30154  00629C  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 30155                           
 30156                           ; BSR set to: 1
 30157                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 30158  00629E  517B               	movf	_powerControl_st& (0+255),w,b
 30159  0062A0  A4D8               	btfss	status,2,c
 30160  0062A2  D05B               	goto	l22726
 30161                           
 30162                           ; BSR set to: 1
 30163                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 30164  0062A4  0E03               	movlw	3
 30165  0062A6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30166  0062A8  A4D8               	btfss	status,2,c
 30167  0062AA  D005               	goto	l22716
 30168                           
 30169                           ; BSR set to: 1
 30170                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 30171  0062AC  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 30172  0062B0  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 30173  0062B4  D004               	goto	L105
 30174  0062B6                     l22716:
 30175                           
 30176                           ; BSR set to: 1
 30177                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 30178  0062B6  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 30179  0062BA  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 30180  0062BE                     L105:
 30181  0062BE  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 30182  0062C0  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 30183                           
 30184                           ; BSR set to: 1
 30185                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 30186  0062C2  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30187  0062C4  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30188  0062C6  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 30189  0062C8  E104               	bnz	u26170
 30190  0062CA  0E65               	movlw	101
 30191  0062CC  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30192  0062CE  A0D8               	btfss	status,0,c
 30193  0062D0  D009               	goto	u26180
 30194  0062D2                     u26170:
 30195                           
 30196                           ; BSR set to: 1
 30197  0062D2  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30198  0062D4  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30199  0062D6  E106               	bnz	u26180
 30200  0062D8  0EC5               	movlw	197
 30201  0062DA  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30202  0062DC  0E3B               	movlw	59
 30203  0062DE  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30204  0062E0  A0D8               	btfss	status,0,c
 30205  0062E2  D004               	goto	l1383
 30206  0062E4                     u26180:
 30207                           
 30208                           ; BSR set to: 1
 30209                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 30210  0062E4  0EC4               	movlw	196
 30211  0062E6  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30212  0062E8  0E3B               	movlw	59
 30213  0062EA  D058               	goto	L107
 30214  0062EC                     l1383:
 30215                           
 30216                           ; BSR set to: 1
 30217                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 30218  0062EC  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 30219                           
 30220                           ; BSR set to: 1
 30221                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 30222  0062F0  5022               	movf	getCurrentComparator@x^0,w,c
 30223  0062F2  0222               	mulwf	getCurrentComparator@x^0,c
 30224  0062F4  CFF3 F010          	movff	prodl,___wmul@multiplier
 30225  0062F8  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 30226  0062FC  0E00               	movlw	0
 30227  0062FE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30228  006300  0E0A               	movlw	10
 30229  006302  6E12               	movwf	___wmul@multiplicand^0,c
 30230  006304  EC0B  F04D         	call	___wmul	;wreg free
 30231  006308  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 30232  00630C  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 30233  006310  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 30234  006314  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30235  006316  0EFF               	movlw	255
 30236  006318  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30237  00631A  0E38               	movlw	56
 30238  00631C  6E12               	movwf	___wmul@multiplicand^0,c
 30239  00631E  EC0B  F04D         	call	___wmul	;wreg free
 30240  006322  5010               	movf	?___wmul^0,w,c
 30241  006324  261A               	addwf	??_getCurrentComparator^0,f,c
 30242  006326  5011               	movf	(?___wmul+1)^0,w,c
 30243  006328  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 30244  00632A  0E14               	movlw	20
 30245  00632C  241A               	addwf	??_getCurrentComparator^0,w,c
 30246  00632E  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 30247  006330  0E05               	movlw	5
 30248  006332  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 30249  006334  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30250  006336  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 30251  006338  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 30252  00633A  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 30253  00633C  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 30254  00633E  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 30255  006340  0101               	movlb	1	; () banked
 30256  006342  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 30257  006344  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 30258  006346  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30259  006348  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 30260  00634A  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 30261  00634C  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30262  00634E  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 30263  006350  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 30264  006352  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30265  006354  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30266  006356  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 30267  006358  D046               	goto	L106
 30268  00635A                     l22726:
 30269                           
 30270                           ; BSR set to: 1
 30271                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 30272  00635A  0E03               	movlw	3
 30273  00635C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30274  00635E  A4D8               	btfss	status,2,c
 30275  006360  D009               	goto	l1388
 30276                           
 30277                           ; BSR set to: 1
 30278                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 30279  006362  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 30280  006366  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 30281  00636A  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 30282  00636E  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 30283                           
 30284                           ;controlCurrent_MC50.c: 315:         }
 30285  006372  D008               	goto	l22730
 30286  006374                     l1388:
 30287                           
 30288                           ; BSR set to: 1
 30289                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 30290  006374  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 30291  006378  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 30292  00637C  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 30293  006380  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 30294  006384                     l22730:
 30295                           
 30296                           ; BSR set to: 1
 30297                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 30298  006384  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30299  006386  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30300  006388  E10E               	bnz	l22734
 30301  00638A  0E89               	movlw	137
 30302  00638C  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30303  00638E  0E13               	movlw	19
 30304  006390  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30305  006392  B0D8               	btfsc	status,0,c
 30306  006394  D008               	goto	l22734
 30307                           
 30308                           ; BSR set to: 1
 30309                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 30310  006396  0E88               	movlw	136
 30311  006398  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30312  00639A  0E13               	movlw	19
 30313  00639C                     L107:
 30314  00639C  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30315  00639E  0E00               	movlw	0
 30316  0063A0  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30317  0063A2  0E00               	movlw	0
 30318  0063A4  D020               	goto	L106
 30319  0063A6                     l22734:
 30320                           
 30321                           ; BSR set to: 1
 30322                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 30323  0063A6  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 30324  0063AA  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30325  0063AC  0EFE               	movlw	254
 30326  0063AE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30327  0063B0  0E0C               	movlw	12
 30328  0063B2  6E12               	movwf	___wmul@multiplicand^0,c
 30329  0063B4  EC0B  F04D         	call	___wmul	;wreg free
 30330  0063B8  0E38               	movlw	56
 30331  0063BA  2410               	addwf	?___wmul^0,w,c
 30332  0063BC  6E1A               	movwf	??_getCurrentComparator^0,c
 30333  0063BE  0E18               	movlw	24
 30334  0063C0  2011               	addwfc	(?___wmul+1)^0,w,c
 30335  0063C2  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30336  0063C4  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30337  0063C6  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30338  0063C8  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30339  0063CA  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30340  0063CC  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30341  0063CE  501A               	movf	??_getCurrentComparator^0,w,c
 30342  0063D0  0101               	movlb	1	; () banked
 30343  0063D2  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30344  0063D4  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30345  0063D6  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30346  0063D8  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30347  0063DA  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30348  0063DC  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30349  0063DE  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30350  0063E0  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30351  0063E2  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30352  0063E4  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30353  0063E6                     L106:
 30354  0063E6  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30355                           
 30356                           ; BSR set to: 1
 30357                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30358  0063E8  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30359  0063EA  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30360  0063EC  6E16               	movwf	?_getCurrentComparator^0,c
 30361  0063EE  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30362  0063F0  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30363  0063F2  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30364  0063F4  0E00               	movlw	0
 30365  0063F6  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30366  0063F8  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30367  0063FA  0E00               	movlw	0
 30368  0063FC  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30369  0063FE  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30370                           
 30371                           ; BSR set to: 1
 30372  006400  0012               	return		;funcret
 30373  006402                     __end_of_getCurrentComparator:
 30374                           	callstack 0
 30375                           
 30376 ;; *************** function ___wmul *****************
 30377 ;; Defined at:
 30378 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30379 ;; Parameters:    Size  Location     Type
 30380 ;;  multiplier      2   15[COMRAM] unsigned int 
 30381 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30382 ;; Auto vars:     Size  Location     Type
 30383 ;;  product         2   19[COMRAM] unsigned int 
 30384 ;; Return value:  Size  Location     Type
 30385 ;;                  2   15[COMRAM] unsigned int 
 30386 ;; Registers used:
 30387 ;;		wreg, status,2, status,0, prodl, prodh
 30388 ;; Tracked objects:
 30389 ;;		On entry : 0/0
 30390 ;;		On exit  : 0/0
 30391 ;;		Unchanged: 0/0
 30392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30396 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30397 ;;Total ram usage:        6 bytes
 30398 ;; Hardware stack levels used: 1
 30399 ;; Hardware stack levels required when called: 4
 30400 ;; This function calls:
 30401 ;;		Nothing
 30402 ;; This function is called by:
 30403 ;;		_getCurrentComparator
 30404 ;;		_getHopCode
 30405 ;; This function uses a non-reentrant model
 30406 ;;
 30407                           
 30408                           	psect	text127
 30409  009A16                     __ptext127:
 30410                           	callstack 0
 30411  009A16                     ___wmul:
 30412                           	callstack 22
 30413                           
 30414                           ; BSR set to: 1
 30415                           ;incstack = 0
 30416  009A16  5010               	movf	___wmul@multiplier^0,w,c
 30417  009A18  0212               	mulwf	___wmul@multiplicand^0,c
 30418  009A1A  CFF3 F014          	movff	prodl,___wmul@product
 30419  009A1E  CFF4 F015          	movff	prodh,___wmul@product+1
 30420  009A22  5010               	movf	___wmul@multiplier^0,w,c
 30421  009A24  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30422  009A26  50F3               	movf	243,w,c
 30423  009A28  2615               	addwf	(___wmul@product+1)^0,f,c
 30424  009A2A  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30425  009A2C  0212               	mulwf	___wmul@multiplicand^0,c
 30426  009A2E  50F3               	movf	243,w,c
 30427  009A30  2615               	addwf	(___wmul@product+1)^0,f,c
 30428  009A32  C014  F010         	movff	___wmul@product,?___wmul
 30429  009A36  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30430  009A3A  0012               	return		;funcret
 30431  009A3C                     __end_of___wmul:
 30432                           	callstack 0
 30433                           
 30434 ;; *************** function _GetMotorPower *****************
 30435 ;; Defined at:
 30436 ;;		line 405 in file "outputs_MC50.c"
 30437 ;; Parameters:    Size  Location     Type
 30438 ;;		None
 30439 ;; Auto vars:     Size  Location     Type
 30440 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30441 ;; Return value:  Size  Location     Type
 30442 ;;                  1    wreg      unsigned char 
 30443 ;; Registers used:
 30444 ;;		wreg, status,2, status,0, prodl, prodh
 30445 ;; Tracked objects:
 30446 ;;		On entry : 3C/1
 30447 ;;		On exit  : 3F/1
 30448 ;;		Unchanged: 0/0
 30449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30454 ;;Total ram usage:        4 bytes
 30455 ;; Hardware stack levels used: 1
 30456 ;; Hardware stack levels required when called: 4
 30457 ;; This function calls:
 30458 ;;		Nothing
 30459 ;; This function is called by:
 30460 ;;		_ControlCurrent
 30461 ;;		_InitSoftStart
 30462 ;;		_InitSoftStop
 30463 ;; This function uses a non-reentrant model
 30464 ;;
 30465                           
 30466                           	psect	text128
 30467  007A58                     __ptext128:
 30468                           	callstack 0
 30469  007A58                     _GetMotorPower:
 30470                           	callstack 22
 30471                           
 30472                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30473                           
 30474                           ;incstack = 0
 30475  007A58  0101               	movlb	1	; () banked
 30476  007A5A  057B               	decf	_powerControl_st& (0+255),w,b
 30477  007A5C  A4D8               	btfss	status,2,c
 30478  007A5E  D006               	goto	l20432
 30479                           
 30480                           ; BSR set to: 1
 30481                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30482  007A60  0100               	movlb	0	; () banked
 30483  007A62  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30484  007A64  0D06               	mullw	6
 30485  007A66  CFF3 F193          	movff	prodl,_temppower
 30486                           
 30487                           ;outputs_MC50.c: 416:     }
 30488  007A6A  D043               	goto	l2240
 30489  007A6C                     l20432:
 30490                           
 30491                           ; BSR set to: 1
 30492                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30493  007A6C  0100               	movlb	0	; () banked
 30494  007A6E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30495  007A70  0D06               	mullw	6
 30496  007A72  CFF3 F082          	movff	prodl,_fullmotorPower
 30497                           
 30498                           ; BSR set to: 0
 30499                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30500  007A76  0101               	movlb	1	; () banked
 30501  007A78  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30502  007A7A  D01C               	goto	l20442
 30503  007A7C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30504  007A7E  E103               	bnz	u23370
 30505  007A80  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30506  007A82  A0D8               	btfss	status,0,c
 30507  007A84  D017               	goto	l20442
 30508  007A86                     u23370:
 30509                           
 30510                           ; BSR set to: 1
 30511                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30512  007A86  0100               	movlb	0	; () banked
 30513  007A88  5182               	movf	_fullmotorPower& (0+255),w,b
 30514  007A8A  6E10               	movwf	??_GetMotorPower^0,c
 30515  007A8C  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30516  007A8E  0101               	movlb	1	; () banked
 30517  007A90  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30518  007A92  5C10               	subwf	??_GetMotorPower^0,w,c
 30519  007A94  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30520  007A96  0A80               	xorlw	128
 30521  007A98  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30522  007A9A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30523  007A9C  0A80               	xorlw	128
 30524  007A9E  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30525  007AA0  B0D8               	btfsc	status,0,c
 30526  007AA2  D002               	goto	l20440
 30527                           
 30528                           ; BSR set to: 1
 30529                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30530  007AA4  0E01               	movlw	1
 30531  007AA6  D004               	goto	L109
 30532  007AA8                     l20440:
 30533                           
 30534                           ; BSR set to: 1
 30535                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30536  007AA8  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30537  007AAA  0100               	movlb	0	; () banked
 30538  007AAC  5D82               	subwf	_fullmotorPower& (0+255),w,b
 30539  007AAE  D017               	goto	L110
 30540  007AB0                     L109:
 30541  007AB0  6F93               	movwf	_temppower& (0+255),b
 30542  007AB2  D01F               	goto	l2240
 30543  007AB4                     l20442:
 30544                           
 30545                           ; BSR set to: 1
 30546  007AB4  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30547  007AB6  D005               	goto	u23390
 30548  007AB8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30549  007ABA  E113               	bnz	l20452
 30550  007ABC  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30551  007ABE  B0D8               	btfsc	status,0,c
 30552  007AC0  D010               	goto	l20452
 30553  007AC2                     u23390:
 30554                           
 30555                           ; BSR set to: 1
 30556  007AC2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30557  007AC4  D005               	goto	u23400
 30558  007AC6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30559  007AC8  E10C               	bnz	l20452
 30560  007ACA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30561  007ACC  B0D8               	btfsc	status,0,c
 30562  007ACE  D009               	goto	l20452
 30563  007AD0                     u23400:
 30564                           
 30565                           ; BSR set to: 1
 30566                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30567  007AD0  C082  F193         	movff	_fullmotorPower,_temppower
 30568                           
 30569                           ; BSR set to: 1
 30570                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30571  007AD4  0E08               	movlw	8
 30572  007AD6  0100               	movlb	0	; () banked
 30573  007AD8  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30574  007ADA  D00B               	goto	l2240
 30575                           
 30576                           ; BSR set to: 0
 30577                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30578  007ADC  0E3A               	movlw	58
 30579  007ADE                     L110:
 30580  007ADE  0101               	movlb	1	; () banked
 30581  007AE0  D7E7               	goto	L109
 30582  007AE2                     l20452:
 30583                           
 30584                           ; BSR set to: 1
 30585  007AE2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30586  007AE4  D006               	goto	l2240
 30587  007AE6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30588  007AE8  E102               	bnz	u23420
 30589  007AEA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30590  007AEC  B0D8               	btfsc	status,0,c
 30591  007AEE                     u23420:
 30592                           
 30593                           ; BSR set to: 1
 30594                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30595  007AEE  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 30596  007AF2                     l2240:
 30597                           
 30598                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30599  007AF2  0101               	movlb	1	; () banked
 30600  007AF4  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30601  007AF6  D00E               	goto	l20462
 30602  007AF8  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30603  007AFA  E103               	bnz	u23430
 30604  007AFC  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30605  007AFE  A0D8               	btfss	status,0,c
 30606  007B00  D009               	goto	l20462
 30607  007B02                     u23430:
 30608                           
 30609                           ; BSR set to: 1
 30610  007B02  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30611  007B04  D005               	goto	u23440
 30612  007B06  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30613  007B08  E105               	bnz	l20462
 30614  007B0A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30615  007B0C  B0D8               	btfsc	status,0,c
 30616  007B0E  D002               	goto	l20462
 30617  007B10                     u23440:
 30618                           
 30619                           ; BSR set to: 1
 30620                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30621  007B10  0E05               	movlw	5
 30622  007B12  D001               	goto	L108
 30623  007B14                     l20462:
 30624                           
 30625                           ; BSR set to: 1
 30626                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30627  007B14  0E17               	movlw	23
 30628  007B16                     L108:
 30629  007B16  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30630                           
 30631                           ; BSR set to: 1
 30632                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30633  007B18  5193               	movf	_temppower& (0+255),w,b
 30634  007B1A  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30635                           
 30636                           ; BSR set to: 1
 30637  007B1C  0012               	return		;funcret
 30638  007B1E                     __end_of_GetMotorPower:
 30639                           	callstack 0
 30640                           
 30641 ;; *************** function _ControlCounterMoves *****************
 30642 ;; Defined at:
 30643 ;;		line 305 in file "controlMemory_MC50.c"
 30644 ;; Parameters:    Size  Location     Type
 30645 ;;		None
 30646 ;; Auto vars:     Size  Location     Type
 30647 ;;		None
 30648 ;; Return value:  Size  Location     Type
 30649 ;;                  1    wreg      void 
 30650 ;; Registers used:
 30651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30652 ;; Tracked objects:
 30653 ;;		On entry : 3E/1
 30654 ;;		On exit  : 0/0
 30655 ;;		Unchanged: 0/0
 30656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30661 ;;Total ram usage:        0 bytes
 30662 ;; Hardware stack levels used: 1
 30663 ;; Hardware stack levels required when called: 14
 30664 ;; This function calls:
 30665 ;;		_SaveNVM_VarSystem
 30666 ;; This function is called by:
 30667 ;;		_main
 30668 ;; This function uses a non-reentrant model
 30669 ;;
 30670                           
 30671                           	psect	text129
 30672  008F30                     __ptext129:
 30673                           	callstack 0
 30674  008F30                     _ControlCounterMoves:
 30675                           	callstack 16
 30676                           
 30677                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 30678                           
 30679                           ; BSR set to: 1
 30680                           ;incstack = 0
 30681  008F30  0101               	movlb	1	; () banked
 30682  008F32  BFC6               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 30683  008F34  D005               	goto	u29780
 30684  008F36  51C6               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 30685  008F38  E127               	bnz	l1491
 30686  008F3A  05C5               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 30687  008F3C  B0D8               	btfsc	status,0,c
 30688  008F3E  0012               	return	
 30689  008F40                     u29780:
 30690                           
 30691                           ; BSR set to: 1
 30692                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 30693  008F40  0E17               	movlw	23
 30694  008F42  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
 30695  008F44  0E70               	movlw	112
 30696  008F46  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
 30697                           
 30698                           ; BSR set to: 1
 30699                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 30700  008F48  0100               	movlb	0	; () banked
 30701  008F4A  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 30702  008F4C  0101               	movlb	1	; () banked
 30703  008F4E  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 30704  008F50  E110               	bnz	u29790
 30705  008F52  0100               	movlb	0	; () banked
 30706  008F54  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 30707  008F56  0101               	movlb	1	; () banked
 30708  008F58  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 30709  008F5A  E10B               	bnz	u29790
 30710  008F5C  0100               	movlb	0	; () banked
 30711  008F5E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 30712  008F60  0101               	movlb	1	; () banked
 30713  008F62  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 30714  008F64  E106               	bnz	u29790
 30715  008F66  0100               	movlb	0	; () banked
 30716  008F68  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 30717  008F6A  0101               	movlb	1	; () banked
 30718  008F6C  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 30719  008F6E  B4D8               	btfsc	status,2,c
 30720  008F70  0012               	return	
 30721  008F72                     u29790:
 30722                           
 30723                           ; BSR set to: 1
 30724                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 30725  008F72  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 30726  008F76  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 30727  008F7A  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 30728  008F7E  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 30729                           
 30730                           ; BSR set to: 1
 30731                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 30732  008F82  0E02               	movlw	2
 30733  008F84  ECEF  F04A         	call	_SaveNVM_VarSystem
 30734  008F88                     l1491:
 30735  008F88  0012               	return		;funcret
 30736  008F8A                     __end_of_ControlCounterMoves:
 30737                           	callstack 0
 30738                           
 30739 ;; *************** function _SaveNVM_VarSystem *****************
 30740 ;; Defined at:
 30741 ;;		line 187 in file "controlMemory_MC50.c"
 30742 ;; Parameters:    Size  Location     Type
 30743 ;;  page            1    wreg     unsigned char 
 30744 ;; Auto vars:     Size  Location     Type
 30745 ;;  page            1    0[BANK0 ] unsigned char 
 30746 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 30747 ;;  point           1    3[BANK0 ] PTR unsigned char 
 30748 ;;		 -> var_sys_NVM(64), 
 30749 ;; Return value:  Size  Location     Type
 30750 ;;                  1    wreg      void 
 30751 ;; Registers used:
 30752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30753 ;; Tracked objects:
 30754 ;;		On entry : 0/0
 30755 ;;		On exit  : 0/0
 30756 ;;		Unchanged: 0/0
 30757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30759 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30761 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30762 ;;Total ram usage:        4 bytes
 30763 ;; Hardware stack levels used: 1
 30764 ;; Hardware stack levels required when called: 13
 30765 ;; This function calls:
 30766 ;;		_i2c_writeNBytes
 30767 ;; This function is called by:
 30768 ;;		_loadNVM_VarSystem
 30769 ;;		_ResetDefaultMemory
 30770 ;;		_ControlCounterMoves
 30771 ;;		_checkNVM_VarSystem
 30772 ;;		_sm_execute_ControlLearning
 30773 ;;		_sm_execute_menuConfiguration
 30774 ;;		_setValueToEdit
 30775 ;;		_controlSelectRemote
 30776 ;;		_eusartparser
 30777 ;; This function uses a non-reentrant model
 30778 ;;
 30779                           
 30780                           	psect	text130
 30781  0095DE                     __ptext130:
 30782                           	callstack 0
 30783  0095DE                     _SaveNVM_VarSystem:
 30784                           	callstack 14
 30785                           
 30786                           ;incstack = 0
 30787                           ;SaveNVM_VarSystem@page stored from wreg
 30788  0095DE  0100               	movlb	0	; () banked
 30789  0095E0  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 30790                           
 30791                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 30792  0095E2  0100               	movlb	0	; () banked
 30793  0095E4  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 30794  0095E6  0D10               	mullw	16
 30795  0095E8  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 30796  0095EC  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 30797                           
 30798                           ; BSR set to: 0
 30799                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 30800  0095F0  0E98               	movlw	low _var_sys_NVM
 30801  0095F2  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30802                           
 30803                           ; BSR set to: 0
 30804                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 30805  0095F4  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 30806  0095F6  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 30807  0095F8  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30808                           
 30809                           ; BSR set to: 0
 30810                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 30811  0095FA  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 30812  0095FE  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 30813  009602  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 30814  009606  0E00               	movlw	0
 30815  009608  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 30816  00960A  0E10               	movlw	16
 30817  00960C  6E25               	movwf	i2c_writeNBytes@len^0,c
 30818  00960E  0E50               	movlw	80
 30819  009610  EC94  F044         	call	_i2c_writeNBytes
 30820  009614  0012               	return		;funcret
 30821  009616                     __end_of_SaveNVM_VarSystem:
 30822                           	callstack 0
 30823                           
 30824 ;; *************** function _i2c_writeNBytes *****************
 30825 ;; Defined at:
 30826 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 30827 ;; Parameters:    Size  Location     Type
 30828 ;;  address         1    wreg     unsigned char 
 30829 ;;  reg             2   33[COMRAM] unsigned short 
 30830 ;;  data            1   35[COMRAM] PTR void 
 30831 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30832 ;;  len             2   36[COMRAM] unsigned int 
 30833 ;; Auto vars:     Size  Location     Type
 30834 ;;  address         1   56[COMRAM] unsigned char 
 30835 ;;  dat            17   39[COMRAM] unsigned char [17]
 30836 ;; Return value:  Size  Location     Type
 30837 ;;                  1    wreg      void 
 30838 ;; Registers used:
 30839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30840 ;; Tracked objects:
 30841 ;;		On entry : 3F/0
 30842 ;;		On exit  : 0/0
 30843 ;;		Unchanged: 0/0
 30844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30845 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30846 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30848 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30849 ;;Total ram usage:       24 bytes
 30850 ;; Hardware stack levels used: 1
 30851 ;; Hardware stack levels required when called: 12
 30852 ;; This function calls:
 30853 ;;		_I2C1_Close
 30854 ;;		_I2C1_MasterWrite
 30855 ;;		_I2C1_Open
 30856 ;;		_I2C1_SetAddressNackCallback
 30857 ;;		_I2C1_SetBuffer
 30858 ;;		_memcpy
 30859 ;; This function is called by:
 30860 ;;		_saveNewSerial
 30861 ;;		_RemoveSerial
 30862 ;;		_SaveNVM_VarSystem
 30863 ;; This function uses a non-reentrant model
 30864 ;;
 30865                           
 30866                           	psect	text131
 30867  008928                     __ptext131:
 30868                           	callstack 0
 30869  008928                     _i2c_writeNBytes:
 30870                           	callstack 14
 30871                           
 30872                           ;incstack = 0
 30873                           ;i2c_writeNBytes@address stored from wreg
 30874  008928  6E39               	movwf	i2c_writeNBytes@address^0,c
 30875                           
 30876                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 30877  00892A  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 30878                           
 30879                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 30880  00892E  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 30881  008930  6E10               	movwf	memcpy@d1^0,c
 30882  008932  6A11               	clrf	(memcpy@d1+1)^0,c
 30883  008934  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 30884  008938  6A13               	clrf	(memcpy@s1+1)^0,c
 30885  00893A  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 30886  00893E  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 30887  008942  ECF1  F049         	call	_memcpy	;wreg free
 30888  008946                     l20486:
 30889  008946  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 30890  008948  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 30891  00894A  EC64  F042         	call	_I2C1_Open
 30892  00894E  0900               	iorlw	0
 30893  008950  B4D8               	btfsc	status,2,c
 30894  008952  D7F9               	goto	l20486
 30895                           
 30896                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 30897  008954  0E28               	movlw	low i2c_writeNBytes@dat
 30898  008956  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 30899  008958  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 30900  00895A  0E01               	movlw	1
 30901  00895C  2425               	addwf	i2c_writeNBytes@len^0,w,c
 30902  00895E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 30903  008960  0E00               	movlw	0
 30904  008962  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 30905  008964  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 30906  008966  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 30907                           
 30908                           ; BSR set to: 2
 30909                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 30910  00896A  0E00               	movlw	0
 30911  00896C  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 30912  00896E  0E00               	movlw	0
 30913  008970  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 30914  008972  0E00               	movlw	0
 30915  008974  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 30916  008976  0E00               	movlw	0
 30917  008978  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 30918  00897A  EC2B  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 30919                           
 30920                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 30921  00897E  EC04  F04F         	call	_I2C1_MasterWrite	;wreg free
 30922  008982                     l20494:
 30923  008982  EC78  F04D         	call	_I2C1_Close	;wreg free
 30924  008986  06E8               	decf	wreg,f,c
 30925  008988  B4D8               	btfsc	status,2,c
 30926  00898A  D7FB               	goto	l20494
 30927                           
 30928                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 30929  00898C  0ED0               	movlw	208
 30930  00898E  6E27               	movwf	??_i2c_writeNBytes^0,c
 30931  008990  0ECA               	movlw	202
 30932  008992                     u34107:
 30933  008992  2EE8               	decfsz	wreg,f,c
 30934  008994  D7FE               	bra	u34107
 30935  008996  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 30936  008998  D7FC               	bra	u34107
 30937  00899A  0012               	return		;funcret
 30938  00899C                     __end_of_i2c_writeNBytes:
 30939                           	callstack 0
 30940                           
 30941 ;; *************** function _memcpy *****************
 30942 ;; Defined at:
 30943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 30944 ;; Parameters:    Size  Location     Type
 30945 ;;  d1              2   15[COMRAM] PTR void 
 30946 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30947 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30948 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30949 ;;		 -> i2c_writeNBytes@dat(17), 
 30950 ;;  s1              2   17[COMRAM] PTR const void 
 30951 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30952 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30953 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30954 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30955 ;;  n               2   19[COMRAM] unsigned int 
 30956 ;; Auto vars:     Size  Location     Type
 30957 ;;  s               2   24[COMRAM] PTR const unsigned char 
 30958 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30959 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30960 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30961 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30962 ;;  d               2   22[COMRAM] PTR unsigned char 
 30963 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30964 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30965 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30966 ;;		 -> i2c_writeNBytes@dat(17), 
 30967 ;;  tmp             1   21[COMRAM] unsigned char 
 30968 ;; Return value:  Size  Location     Type
 30969 ;;                  2   15[COMRAM] PTR void 
 30970 ;; Registers used:
 30971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30972 ;; Tracked objects:
 30973 ;;		On entry : 0/0
 30974 ;;		On exit  : 0/0
 30975 ;;		Unchanged: 0/0
 30976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30977 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30978 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30980 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30981 ;;Total ram usage:       11 bytes
 30982 ;; Hardware stack levels used: 1
 30983 ;; Hardware stack levels required when called: 4
 30984 ;; This function calls:
 30985 ;;		Nothing
 30986 ;; This function is called by:
 30987 ;;		_i2c_writeNBytes
 30988 ;;		_getSerialCmd
 30989 ;;		_NormalKeyGen
 30990 ;;		_Decrypt
 30991 ;;		_keeloqDecryptPacket
 30992 ;;		_DecryptPacket_12BIT
 30993 ;; This function uses a non-reentrant model
 30994 ;;
 30995                           
 30996                           	psect	text132
 30997  0093E2                     __ptext132:
 30998                           	callstack 0
 30999  0093E2                     _memcpy:
 31000                           	callstack 21
 31001                           
 31002                           ;incstack = 0
 31003  0093E2  C012  F019         	movff	memcpy@s1,memcpy@s
 31004  0093E6  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 31005  0093EA  C010  F017         	movff	memcpy@d1,memcpy@d
 31006  0093EE  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 31007  0093F2  D010               	goto	l20426
 31008  0093F4                     l20418:
 31009  0093F4  C019  FFD9         	movff	memcpy@s,fsr2l
 31010  0093F8  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 31011  0093FC  50DF               	movf	indf2,w,c
 31012  0093FE  6E16               	movwf	memcpy@tmp^0,c
 31013  009400  4A19               	infsnz	memcpy@s^0,f,c
 31014  009402  2A1A               	incf	(memcpy@s+1)^0,f,c
 31015  009404  C017  FFD9         	movff	memcpy@d,fsr2l
 31016  009408  C018  FFDA         	movff	memcpy@d+1,fsr2h
 31017  00940C  C016  FFDF         	movff	memcpy@tmp,indf2
 31018  009410  4A17               	infsnz	memcpy@d^0,f,c
 31019  009412  2A18               	incf	(memcpy@d+1)^0,f,c
 31020  009414                     l20426:
 31021  009414  0614               	decf	memcpy@n^0,f,c
 31022  009416  A0D8               	btfss	status,0,c
 31023  009418  0615               	decf	(memcpy@n+1)^0,f,c
 31024  00941A  2814               	incf	memcpy@n^0,w,c
 31025  00941C  E1EB               	bnz	l20418
 31026  00941E  2815               	incf	(memcpy@n+1)^0,w,c
 31027  009420  B4D8               	btfsc	status,2,c
 31028  009422  0012               	return	
 31029  009424  D7E7               	goto	l20418
 31030  009426                     __end_of_memcpy:
 31031                           	callstack 0
 31032                           
 31033 ;; *************** function _I2C1_SetAddressNackCallback *****************
 31034 ;; Defined at:
 31035 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 31036 ;; Parameters:    Size  Location     Type
 31037 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 31038 ;;		 -> Absolute function(1), 
 31039 ;;  ptr             2   22[COMRAM] PTR void 
 31040 ;;		 -> NULL(0), 
 31041 ;; Auto vars:     Size  Location     Type
 31042 ;;		None
 31043 ;; Return value:  Size  Location     Type
 31044 ;;                  1    wreg      void 
 31045 ;; Registers used:
 31046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31047 ;; Tracked objects:
 31048 ;;		On entry : 3F/2
 31049 ;;		On exit  : 0/0
 31050 ;;		Unchanged: 0/0
 31051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31056 ;;Total ram usage:        4 bytes
 31057 ;; Hardware stack levels used: 1
 31058 ;; Hardware stack levels required when called: 5
 31059 ;; This function calls:
 31060 ;;		_I2C1_SetCallback
 31061 ;; This function is called by:
 31062 ;;		_i2c_writeNBytes
 31063 ;;		_i2c_readDataBlock
 31064 ;;		_I2C1_Read1ByteRegister
 31065 ;; This function uses a non-reentrant model
 31066 ;;
 31067                           
 31068                           	psect	text133
 31069  009C56                     __ptext133:
 31070                           	callstack 0
 31071  009C56                     _I2C1_SetAddressNackCallback:
 31072                           	callstack 20
 31073                           
 31074                           ; BSR set to: 2
 31075                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 31076                           
 31077                           ;incstack = 0
 31078  009C56  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 31079  009C5A  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 31080  009C5E  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 31081  009C62  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 31082  009C66  0E02               	movlw	2
 31083  009C68  ECAD  F045         	call	_I2C1_SetCallback
 31084  009C6C  0012               	return		;funcret
 31085  009C6E                     __end_of_I2C1_SetAddressNackCallback:
 31086                           	callstack 0
 31087                           
 31088 ;; *************** function _I2C1_Open *****************
 31089 ;; Defined at:
 31090 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 31091 ;; Parameters:    Size  Location     Type
 31092 ;;  address         1    wreg     unsigned char 
 31093 ;; Auto vars:     Size  Location     Type
 31094 ;;  address         1   15[COMRAM] unsigned char 
 31095 ;;  returnValue     1   16[COMRAM] enum E355
 31096 ;; Return value:  Size  Location     Type
 31097 ;;                  1    wreg      enum E355
 31098 ;; Registers used:
 31099 ;;		wreg, status,2, status,0, cstack
 31100 ;; Tracked objects:
 31101 ;;		On entry : 0/0
 31102 ;;		On exit  : 33/2
 31103 ;;		Unchanged: 0/0
 31104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31109 ;;Total ram usage:        2 bytes
 31110 ;; Hardware stack levels used: 1
 31111 ;; Hardware stack levels required when called: 5
 31112 ;; This function calls:
 31113 ;;		_I2C1_MasterClearIrq
 31114 ;;		_I2C1_MasterOpen
 31115 ;; This function is called by:
 31116 ;;		_i2c_writeNBytes
 31117 ;;		_i2c_readDataBlock
 31118 ;;		_I2C1_Read1ByteRegister
 31119 ;; This function uses a non-reentrant model
 31120 ;;
 31121                           
 31122                           	psect	text134
 31123  0084C8                     __ptext134:
 31124                           	callstack 0
 31125  0084C8                     _I2C1_Open:
 31126                           	callstack 20
 31127                           
 31128                           ;incstack = 0
 31129                           ;I2C1_Open@address stored from wreg
 31130  0084C8  6E10               	movwf	I2C1_Open@address^0,c
 31131                           
 31132                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 31133  0084CA  0E01               	movlw	1
 31134  0084CC  6E11               	movwf	I2C1_Open@returnValue^0,c
 31135                           
 31136                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 31137  0084CE  0102               	movlb	2	; () banked
 31138  0084D0  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 31139  0084D2  D03A               	goto	l20392
 31140                           
 31141                           ; BSR set to: 2
 31142                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 31143  0084D4  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 31144                           
 31145                           ; BSR set to: 2
 31146                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 31147  0084D8  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31148                           
 31149                           ; BSR set to: 2
 31150                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 31151  0084DA  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 31152                           
 31153                           ; BSR set to: 2
 31154                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 31155  0084DC  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31156                           
 31157                           ; BSR set to: 2
 31158                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 31159  0084DE  0E0E               	movlw	14
 31160  0084E0  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31161                           
 31162                           ; BSR set to: 2
 31163                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 31164  0084E2  0E01               	movlw	1
 31165  0084E4  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 31166  0084E6  0EF4               	movlw	244
 31167  0084E8  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 31168                           
 31169                           ; BSR set to: 2
 31170                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 31171  0084EA  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31172                           
 31173                           ; BSR set to: 2
 31174                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 31175  0084EC  0EA2               	movlw	low _I2C1_CallbackReturnStop
 31176  0084EE  6F3C               	movwf	_I2C1_Status& (0+255),b
 31177  0084F0  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31178  0084F2  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 31179                           
 31180                           ; BSR set to: 2
 31181                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 31182  0084F4  0E00               	movlw	0
 31183  0084F6  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 31184  0084F8  0E00               	movlw	0
 31185  0084FA  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 31186                           
 31187                           ; BSR set to: 2
 31188                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 31189  0084FC  0EA2               	movlw	low _I2C1_CallbackReturnStop
 31190  0084FE  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 31191  008500  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31192  008502  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 31193                           
 31194                           ; BSR set to: 2
 31195                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 31196  008504  0E00               	movlw	0
 31197  008506  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 31198  008508  0E00               	movlw	0
 31199  00850A  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 31200                           
 31201                           ; BSR set to: 2
 31202                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31203  00850C  0EA2               	movlw	low _I2C1_CallbackReturnStop
 31204  00850E  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 31205  008510  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31206  008512  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 31207                           
 31208                           ; BSR set to: 2
 31209                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 31210  008514  0E00               	movlw	0
 31211  008516  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 31212  008518  0E00               	movlw	0
 31213  00851A  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 31214                           
 31215                           ; BSR set to: 2
 31216                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31217  00851C  0EA2               	movlw	low _I2C1_CallbackReturnStop
 31218  00851E  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 31219  008520  0E9E               	movlw	high _I2C1_CallbackReturnStop
 31220  008522  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 31221                           
 31222                           ; BSR set to: 2
 31223                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 31224  008524  0E00               	movlw	0
 31225  008526  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 31226  008528  0E00               	movlw	0
 31227  00852A  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 31228                           
 31229                           ; BSR set to: 2
 31230                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 31231  00852C  0E9E               	movlw	low _I2C1_CallbackReturnReset
 31232  00852E  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 31233  008530  0E9E               	movlw	high _I2C1_CallbackReturnReset
 31234  008532  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 31235                           
 31236                           ; BSR set to: 2
 31237                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 31238  008534  0E00               	movlw	0
 31239  008536  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 31240  008538  0E00               	movlw	0
 31241  00853A  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 31242                           
 31243                           ; BSR set to: 2
 31244                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 31245  00853C  EC3E  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31246                           
 31247                           ; BSR set to: 14
 31248                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 31249  008540  EC37  F04E         	call	_I2C1_MasterOpen	;wreg free
 31250                           
 31251                           ; BSR set to: 14
 31252                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 31253  008544  0E00               	movlw	0
 31254  008546  6E11               	movwf	I2C1_Open@returnValue^0,c
 31255  008548                     l20392:
 31256                           
 31257                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 31258  008548  5011               	movf	I2C1_Open@returnValue^0,w,c
 31259  00854A  0012               	return		;funcret
 31260  00854C                     __end_of_I2C1_Open:
 31261                           	callstack 0
 31262                           
 31263 ;; *************** function _I2C1_MasterOpen *****************
 31264 ;; Defined at:
 31265 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 31266 ;; Parameters:    Size  Location     Type
 31267 ;;		None
 31268 ;; Auto vars:     Size  Location     Type
 31269 ;;		None
 31270 ;; Return value:  Size  Location     Type
 31271 ;;                  1    wreg      _Bool 
 31272 ;; Registers used:
 31273 ;;		wreg, status,2
 31274 ;; Tracked objects:
 31275 ;;		On entry : 3F/E
 31276 ;;		On exit  : 3F/E
 31277 ;;		Unchanged: 3F/0
 31278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31283 ;;Total ram usage:        0 bytes
 31284 ;; Hardware stack levels used: 1
 31285 ;; Hardware stack levels required when called: 4
 31286 ;; This function calls:
 31287 ;;		Nothing
 31288 ;; This function is called by:
 31289 ;;		_I2C1_Open
 31290 ;; This function uses a non-reentrant model
 31291 ;;
 31292                           
 31293                           	psect	text135
 31294  009C6E                     __ptext135:
 31295                           	callstack 0
 31296  009C6E                     _I2C1_MasterOpen:
 31297                           	callstack 20
 31298                           
 31299                           ; BSR set to: 14
 31300                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 31301                           
 31302                           ;incstack = 0
 31303  009C6E  BA96               	btfsc	150,5,c	;volatile
 31304  009C70  0012               	return	
 31305                           
 31306                           ; BSR set to: 14
 31307                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 31308  009C72  0E80               	movlw	128
 31309  009C74  6E95               	movwf	149,c	;volatile
 31310                           
 31311                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 31312  009C76  0E08               	movlw	8
 31313  009C78  6E96               	movwf	150,c	;volatile
 31314                           
 31315                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 31316  009C7A  0E00               	movlw	0
 31317  009C7C  6E97               	movwf	151,c	;volatile
 31318                           
 31319                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 31320  009C7E  0E9F               	movlw	159
 31321  009C80  6E93               	movwf	147,c	;volatile
 31322                           
 31323                           ; BSR set to: 14
 31324                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 31325  009C82  8A96               	bsf	150,5,c	;volatile
 31326                           
 31327                           ; BSR set to: 14
 31328  009C84  0012               	return		;funcret
 31329  009C86                     __end_of_I2C1_MasterOpen:
 31330                           	callstack 0
 31331                           
 31332 ;; *************** function _I2C1_MasterWrite *****************
 31333 ;; Defined at:
 31334 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31335 ;; Parameters:    Size  Location     Type
 31336 ;;		None
 31337 ;; Auto vars:     Size  Location     Type
 31338 ;;		None
 31339 ;; Return value:  Size  Location     Type
 31340 ;;                  1    wreg      enum E355
 31341 ;; Registers used:
 31342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31343 ;; Tracked objects:
 31344 ;;		On entry : 0/2
 31345 ;;		On exit  : 3F/2
 31346 ;;		Unchanged: 0/0
 31347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31352 ;;Total ram usage:        0 bytes
 31353 ;; Hardware stack levels used: 1
 31354 ;; Hardware stack levels required when called: 11
 31355 ;; This function calls:
 31356 ;;		_I2C1_MasterOperation
 31357 ;; This function is called by:
 31358 ;;		_i2c_writeNBytes
 31359 ;;		_i2c_readDataBlock
 31360 ;;		_I2C1_Read1ByteRegister
 31361 ;; This function uses a non-reentrant model
 31362 ;;
 31363                           
 31364                           	psect	text136
 31365  009E08                     __ptext136:
 31366                           	callstack 0
 31367  009E08                     _I2C1_MasterWrite:
 31368                           	callstack 14
 31369                           
 31370                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31371                           
 31372                           ; BSR set to: 14
 31373                           ;incstack = 0
 31374  009E08  0E00               	movlw	0
 31375  009E0A  ECE1  F04B         	call	_I2C1_MasterOperation
 31376                           
 31377                           ; BSR set to: 2
 31378  009E0E  0012               	return		;funcret
 31379  009E10                     __end_of_I2C1_MasterWrite:
 31380                           	callstack 0
 31381                           
 31382 ;; *************** function _I2C1_MasterOperation *****************
 31383 ;; Defined at:
 31384 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31385 ;; Parameters:    Size  Location     Type
 31386 ;;  read            1    wreg     _Bool 
 31387 ;; Auto vars:     Size  Location     Type
 31388 ;;  read            1   31[COMRAM] _Bool 
 31389 ;;  returnValue     1   32[COMRAM] enum E355
 31390 ;; Return value:  Size  Location     Type
 31391 ;;                  1    wreg      enum E355
 31392 ;; Registers used:
 31393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31394 ;; Tracked objects:
 31395 ;;		On entry : 0/2
 31396 ;;		On exit  : 3F/2
 31397 ;;		Unchanged: 0/0
 31398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31403 ;;Total ram usage:        2 bytes
 31404 ;; Hardware stack levels used: 1
 31405 ;; Hardware stack levels required when called: 10
 31406 ;; This function calls:
 31407 ;;		_I2C1_MasterStart
 31408 ;;		_I2C1_Poller
 31409 ;; This function is called by:
 31410 ;;		_I2C1_MasterWrite
 31411 ;; This function uses a non-reentrant model
 31412 ;;
 31413                           
 31414                           	psect	text137
 31415  0097C2                     __ptext137:
 31416                           	callstack 0
 31417  0097C2                     _I2C1_MasterOperation:
 31418                           	callstack 14
 31419                           
 31420                           ; BSR set to: 2
 31421                           ;incstack = 0
 31422                           ;I2C1_MasterOperation@read stored from wreg
 31423  0097C2  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31424                           
 31425                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31426  0097C4  0E01               	movlw	1
 31427  0097C6  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31428                           
 31429                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31430  0097C8  0102               	movlb	2	; () banked
 31431  0097CA  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31432  0097CC  D00E               	goto	l20344
 31433                           
 31434                           ; BSR set to: 2
 31435                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31436  0097CE  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31437                           
 31438                           ; BSR set to: 2
 31439                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31440  0097D0  0E00               	movlw	0
 31441  0097D2  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31442                           
 31443                           ; BSR set to: 2
 31444                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31445  0097D4  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31446  0097D6  B4D8               	btfsc	status,2,c
 31447  0097D8  D002               	goto	l20338
 31448                           
 31449                           ; BSR set to: 2
 31450                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31451  0097DA  0E01               	movlw	1
 31452  0097DC  D001               	goto	L111
 31453  0097DE                     l20338:
 31454                           
 31455                           ; BSR set to: 2
 31456                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31457  0097DE  0E02               	movlw	2
 31458  0097E0                     L111:
 31459  0097E0  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31460                           
 31461                           ; BSR set to: 2
 31462                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31463  0097E2  EC57  F04F         	call	_I2C1_MasterStart	;wreg free
 31464                           
 31465                           ; BSR set to: 2
 31466                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31467  0097E6  EC9F  F04E         	call	_I2C1_Poller	;wreg free
 31468  0097EA                     l20344:
 31469                           
 31470                           ; BSR set to: 2
 31471                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31472  0097EA  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31473                           
 31474                           ; BSR set to: 2
 31475  0097EC  0012               	return		;funcret
 31476  0097EE                     __end_of_I2C1_MasterOperation:
 31477                           	callstack 0
 31478                           
 31479 ;; *************** function _I2C1_Poller *****************
 31480 ;; Defined at:
 31481 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31482 ;; Parameters:    Size  Location     Type
 31483 ;;		None
 31484 ;; Auto vars:     Size  Location     Type
 31485 ;;		None
 31486 ;; Return value:  Size  Location     Type
 31487 ;;                  1    wreg      void 
 31488 ;; Registers used:
 31489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31490 ;; Tracked objects:
 31491 ;;		On entry : 3F/2
 31492 ;;		On exit  : 3F/2
 31493 ;;		Unchanged: 0/0
 31494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31499 ;;Total ram usage:        0 bytes
 31500 ;; Hardware stack levels used: 1
 31501 ;; Hardware stack levels required when called: 9
 31502 ;; This function calls:
 31503 ;;		_I2C1_MasterFsm
 31504 ;;		_I2C1_MasterWaitForEvent
 31505 ;; This function is called by:
 31506 ;;		_I2C1_MasterOperation
 31507 ;; This function uses a non-reentrant model
 31508 ;;
 31509                           
 31510                           	psect	text138
 31511  009D3E                     __ptext138:
 31512                           	callstack 0
 31513  009D3E                     _I2C1_Poller:
 31514                           	callstack 14
 31515                           
 31516                           ; BSR set to: 2
 31517                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31518                           
 31519                           ; BSR set to: 2
 31520                           ;incstack = 0
 31521  009D3E  D004               	goto	l20312
 31522  009D40                     l20308:
 31523                           
 31524                           ; BSR set to: 2
 31525                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31526  009D40  EC08  F04F         	call	_I2C1_MasterWaitForEvent	;wreg free
 31527                           
 31528                           ; BSR set to: 14
 31529                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31530  009D44  EC72  F048         	call	_I2C1_MasterFsm	;wreg free
 31531  009D48                     l20312:
 31532                           
 31533                           ; BSR set to: 2
 31534                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31535  009D48  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31536  009D4A  0012               	return	
 31537  009D4C  D7F9               	goto	l20308
 31538  009D4E                     __end_of_I2C1_Poller:
 31539                           	callstack 0
 31540                           
 31541 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31542 ;; Defined at:
 31543 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31544 ;; Parameters:    Size  Location     Type
 31545 ;;		None
 31546 ;; Auto vars:     Size  Location     Type
 31547 ;;		None
 31548 ;; Return value:  Size  Location     Type
 31549 ;;                  1    wreg      void 
 31550 ;; Registers used:
 31551 ;;		None
 31552 ;; Tracked objects:
 31553 ;;		On entry : 3F/2
 31554 ;;		On exit  : 3F/E
 31555 ;;		Unchanged: 0/0
 31556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31561 ;;Total ram usage:        0 bytes
 31562 ;; Hardware stack levels used: 1
 31563 ;; Hardware stack levels required when called: 4
 31564 ;; This function calls:
 31565 ;;		Nothing
 31566 ;; This function is called by:
 31567 ;;		_I2C1_Poller
 31568 ;; This function uses a non-reentrant model
 31569 ;;
 31570                           
 31571                           	psect	text139
 31572  009E10                     __ptext139:
 31573                           	callstack 0
 31574  009E10                     _I2C1_MasterWaitForEvent:
 31575                           	callstack 18
 31576                           
 31577                           ; BSR set to: 2
 31578                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31579                           
 31580                           ; BSR set to: 2
 31581                           ;incstack = 0
 31582                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31583  009E10  010E               	movlb	14	; () banked
 31584  009E12  B1CD               	btfsc	205,0,b	;volatile
 31585  009E14  0012               	return	
 31586  009E16  D7FC               	goto	__ptext139
 31587  009E18                     __end_of_I2C1_MasterWaitForEvent:
 31588                           	callstack 0
 31589                           
 31590 ;; *************** function _I2C1_MasterFsm *****************
 31591 ;; Defined at:
 31592 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31593 ;; Parameters:    Size  Location     Type
 31594 ;;		None
 31595 ;; Auto vars:     Size  Location     Type
 31596 ;;		None
 31597 ;; Return value:  Size  Location     Type
 31598 ;;                  1    wreg      void 
 31599 ;; Registers used:
 31600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31601 ;; Tracked objects:
 31602 ;;		On entry : 3F/E
 31603 ;;		On exit  : 3F/2
 31604 ;;		Unchanged: 0/0
 31605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31608 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31609 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31610 ;;Total ram usage:        3 bytes
 31611 ;; Hardware stack levels used: 1
 31612 ;; Hardware stack levels required when called: 8
 31613 ;; This function calls:
 31614 ;;		_I2C1_DO_ADDRESS_NACK
 31615 ;;		_I2C1_DO_IDLE
 31616 ;;		_I2C1_DO_RCEN
 31617 ;;		_I2C1_DO_RESET
 31618 ;;		_I2C1_DO_RX
 31619 ;;		_I2C1_DO_RX_ACK
 31620 ;;		_I2C1_DO_RX_NACK_RESTART
 31621 ;;		_I2C1_DO_RX_NACK_STOP
 31622 ;;		_I2C1_DO_SEND_ADR_READ
 31623 ;;		_I2C1_DO_SEND_ADR_WRITE
 31624 ;;		_I2C1_DO_SEND_RESTART
 31625 ;;		_I2C1_DO_SEND_RESTART_READ
 31626 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31627 ;;		_I2C1_DO_SEND_STOP
 31628 ;;		_I2C1_DO_TX
 31629 ;;		_I2C1_DO_TX_EMPTY
 31630 ;;		_I2C1_MasterClearIrq
 31631 ;;		_I2C1_MasterIsNack
 31632 ;; This function is called by:
 31633 ;;		_I2C1_Poller
 31634 ;; This function uses a non-reentrant model
 31635 ;;
 31636                           
 31637                           	psect	text140
 31638  0090E4                     __ptext140:
 31639                           	callstack 0
 31640  0090E4                     _I2C1_MasterFsm:
 31641                           	callstack 14
 31642                           
 31643                           ; BSR set to: 14
 31644                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31645                           
 31646                           ; BSR set to: 14
 31647                           ;incstack = 0
 31648  0090E4  EC3E  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31649                           
 31650                           ; BSR set to: 14
 31651                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31652  0090E8  0102               	movlb	2	; () banked
 31653  0090EA  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31654  0090EC  D007               	goto	l20302
 31655                           
 31656                           ; BSR set to: 2
 31657  0090EE  ECBC  F04E         	call	_I2C1_MasterIsNack	;wreg free
 31658  0090F2  0900               	iorlw	0
 31659  0090F4  B4D8               	btfsc	status,2,c
 31660  0090F6  D002               	goto	l20302
 31661                           
 31662                           ; BSR set to: 2
 31663                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31664  0090F8  0E0F               	movlw	15
 31665  0090FA  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31666  0090FC                     l20302:
 31667                           
 31668                           ; BSR set to: 2
 31669                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31670  0090FC  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31671  0090FE  0D02               	mullw	2
 31672  009100  50F3               	movf	243,w,c
 31673  009102  0F01               	addlw	low _i2c1_fsmStateTable
 31674  009104  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 31675  009106  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 31676  00910A                     	if	1	;There is more than 1 active tblptr byte
 31677  00910A  0E0F               	movlw	high __smallconst
 31678  00910C  6EF7               	movwf	tblptrh,c
 31679  00910E                     	endif
 31680  00910E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31681  00910E  6AF8               	clrf	tblptru,c
 31682  009110                     	endif
 31683  009110                     	if	0	;tblptru may be non-zero
 31684  009110                     	endif
 31685  009110  0009               	tblrd		*+
 31686  009112  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 31687  009116  0009               	tblrd		*+
 31688  009118  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 31689  00911C  D801               	call	u23288
 31690  00911E  D009               	goto	u23289
 31691  009120                     u23288:
 31692  009120  0005               	push	
 31693  009122  6EFA               	movwf	pclath,c
 31694  009124  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 31695  009126  6EFD               	movwf	tosl,c
 31696  009128  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 31697  00912A  6EFE               	movwf	tosh,c
 31698  00912C  6AFF               	clrf	tosu,c
 31699  00912E  50FA               	movf	pclath,w,c
 31700  009130  0012               	return		;indir
 31701  009132                     u23289:
 31702  009132  0102               	movlb	2	; () banked
 31703  009134  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31704                           
 31705                           ; BSR set to: 2
 31706  009136  0012               	return		;funcret
 31707  009138                     __end_of_I2C1_MasterFsm:
 31708                           	callstack 0
 31709                           
 31710 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 31711 ;; Defined at:
 31712 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 31713 ;; Parameters:    Size  Location     Type
 31714 ;;		None
 31715 ;; Auto vars:     Size  Location     Type
 31716 ;;		None
 31717 ;; Return value:  Size  Location     Type
 31718 ;;                  1    wreg      enum E10442
 31719 ;; Registers used:
 31720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31721 ;; Tracked objects:
 31722 ;;		On entry : 3F/2
 31723 ;;		On exit  : 0/0
 31724 ;;		Unchanged: 0/0
 31725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31730 ;;Total ram usage:        2 bytes
 31731 ;; Hardware stack levels used: 1
 31732 ;; Hardware stack levels required when called: 7
 31733 ;; This function calls:
 31734 ;;		Absolute function
 31735 ;;		_I2C1_CallbackReturnReset
 31736 ;;		_I2C1_CallbackReturnStop
 31737 ;;		_I2C1_DO_SEND_RESTART
 31738 ;;		_I2C1_DO_SEND_STOP
 31739 ;;		_rd1RegCompleteHandler
 31740 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31741 ;;		_rd2RegCompleteHandler
 31742 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31743 ;;		_rdBlkRegCompleteHandler
 31744 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31745 ;;		_wr1RegCompleteHandler
 31746 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31747 ;;		_wr2RegCompleteHandler
 31748 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31749 ;; This function is called by:
 31750 ;;		_I2C1_MasterFsm
 31751 ;; This function uses a non-reentrant model
 31752 ;;
 31753                           
 31754                           	psect	text141
 31755  009278                     __ptext141:
 31756                           	callstack 0
 31757  009278                     _I2C1_DO_ADDRESS_NACK:
 31758                           	callstack 14
 31759                           
 31760                           ; BSR set to: 2
 31761                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 31762                           
 31763                           ; BSR set to: 2
 31764                           ;incstack = 0
 31765  009278  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31766                           
 31767                           ; BSR set to: 2
 31768                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 31769  00927A  0E02               	movlw	2
 31770  00927C  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31771                           
 31772                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 31773  00927E  D006               	goto	l20286
 31774  009280                     l20276:
 31775                           
 31776                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 31777  009280  EC1C  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31778  009284  0012               	return	
 31779  009286                     l20280:
 31780                           
 31781                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 31782  009286  EC18  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 31783  00928A  0012               	return	
 31784  00928C                     l20286:
 31785                           
 31786                           ; BSR set to: 2
 31787  00928C  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 31788  009290  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 31789  009294  D801               	call	u23248
 31790  009296  D009               	goto	u23249
 31791  009298                     u23248:
 31792  009298  0005               	push	
 31793  00929A  6EFA               	movwf	pclath,c
 31794  00929C  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 31795  00929E  6EFD               	movwf	tosl,c
 31796  0092A0  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 31797  0092A2  6EFE               	movwf	tosh,c
 31798  0092A4  6AFF               	clrf	tosu,c
 31799  0092A6  50FA               	movf	pclath,w,c
 31800  0092A8  0012               	return		;indir
 31801  0092AA                     u23249:
 31802  0092AA  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 31803  0092AC  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 31804                           
 31805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31806                           ; Switch size 1, requested type "simple"
 31807                           ; Number of cases is 1, Range of values is 0 to 0
 31808                           ; switch strategies available:
 31809                           ; Name         Instructions Cycles
 31810                           ; simple_byte            4     3 (average)
 31811                           ;	Chosen strategy is simple_byte
 31812  0092AE  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 31813  0092B0  0A00               	xorlw	0	; case 0
 31814  0092B2  A4D8               	btfss	status,2,c
 31815  0092B4  D7E8               	goto	l20280
 31816                           
 31817                           ; Switch size 1, requested type "simple"
 31818                           ; Number of cases is 2, Range of values is 2 to 3
 31819                           ; switch strategies available:
 31820                           ; Name         Instructions Cycles
 31821                           ; simple_byte            7     4 (average)
 31822                           ;	Chosen strategy is simple_byte
 31823  0092B6  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 31824  0092B8  0A02               	xorlw	2	; case 2
 31825  0092BA  B4D8               	btfsc	status,2,c
 31826  0092BC  D7E1               	goto	l20276
 31827  0092BE  0A01               	xorlw	1	; case 3
 31828  0092C0  B4D8               	btfsc	status,2,c
 31829  0092C2  D7DE               	goto	l20276
 31830  0092C4  D7E0               	goto	l20280
 31831  0092C6                     __end_of_I2C1_DO_ADDRESS_NACK:
 31832                           	callstack 0
 31833                           
 31834 ;; *************** function _I2C1_DO_RESET *****************
 31835 ;; Defined at:
 31836 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 31837 ;; Parameters:    Size  Location     Type
 31838 ;;		None
 31839 ;; Auto vars:     Size  Location     Type
 31840 ;;		None
 31841 ;; Return value:  Size  Location     Type
 31842 ;;                  1    wreg      enum E10442
 31843 ;; Registers used:
 31844 ;;		wreg, status,2
 31845 ;; Tracked objects:
 31846 ;;		On entry : 3F/2
 31847 ;;		On exit  : 3F/2
 31848 ;;		Unchanged: 0/0
 31849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31854 ;;Total ram usage:        0 bytes
 31855 ;; Hardware stack levels used: 1
 31856 ;; Hardware stack levels required when called: 4
 31857 ;; This function calls:
 31858 ;;		Nothing
 31859 ;; This function is called by:
 31860 ;;		_I2C1_MasterFsm
 31861 ;; This function uses a non-reentrant model
 31862 ;;
 31863                           
 31864                           	psect	text142
 31865  009DEA                     __ptext142:
 31866                           	callstack 0
 31867  009DEA                     _I2C1_DO_RESET:
 31868                           	callstack 17
 31869                           
 31870                           ; BSR set to: 2
 31871                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 31872                           
 31873                           ;incstack = 0
 31874  009DEA  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31875                           
 31876                           ; BSR set to: 2
 31877                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 31878  009DEC  0E00               	movlw	0
 31879  009DEE  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31880                           
 31881                           ; BSR set to: 2
 31882                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 31883  009DF0  0E0E               	movlw	14
 31884                           
 31885                           ; BSR set to: 2
 31886  009DF2  0012               	return		;funcret
 31887  009DF4                     __end_of_I2C1_DO_RESET:
 31888                           	callstack 0
 31889                           
 31890 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 31891 ;; Defined at:
 31892 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 31893 ;; Parameters:    Size  Location     Type
 31894 ;;		None
 31895 ;; Auto vars:     Size  Location     Type
 31896 ;;		None
 31897 ;; Return value:  Size  Location     Type
 31898 ;;                  1    wreg      enum E10442
 31899 ;; Registers used:
 31900 ;;		wreg, cstack
 31901 ;; Tracked objects:
 31902 ;;		On entry : 0/2
 31903 ;;		On exit  : 0/0
 31904 ;;		Unchanged: 0/0
 31905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31910 ;;Total ram usage:        0 bytes
 31911 ;; Hardware stack levels used: 1
 31912 ;; Hardware stack levels required when called: 5
 31913 ;; This function calls:
 31914 ;;		_I2C1_MasterSendNack
 31915 ;; This function is called by:
 31916 ;;		_I2C1_DO_RX
 31917 ;;		_I2C1_MasterFsm
 31918 ;; This function uses a non-reentrant model
 31919 ;;
 31920                           
 31921                           	psect	text143
 31922  009E18                     __ptext143:
 31923                           	callstack 0
 31924  009E18                     _I2C1_DO_RX_NACK_RESTART:
 31925                           	callstack 16
 31926                           
 31927                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 31928                           
 31929                           ; BSR set to: 2
 31930                           ;incstack = 0
 31931  009E18  EC3B  F04F         	call	_I2C1_MasterSendNack	;wreg free
 31932                           
 31933                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 31934  009E1C  0E09               	movlw	9
 31935  009E1E  0012               	return		;funcret
 31936  009E20                     __end_of_I2C1_DO_RX_NACK_RESTART:
 31937                           	callstack 0
 31938                           
 31939 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 31940 ;; Defined at:
 31941 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 31942 ;; Parameters:    Size  Location     Type
 31943 ;;		None
 31944 ;; Auto vars:     Size  Location     Type
 31945 ;;		None
 31946 ;; Return value:  Size  Location     Type
 31947 ;;                  1    wreg      enum E10442
 31948 ;; Registers used:
 31949 ;;		wreg, cstack
 31950 ;; Tracked objects:
 31951 ;;		On entry : 0/2
 31952 ;;		On exit  : 0/0
 31953 ;;		Unchanged: 0/0
 31954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31959 ;;Total ram usage:        0 bytes
 31960 ;; Hardware stack levels used: 1
 31961 ;; Hardware stack levels required when called: 5
 31962 ;; This function calls:
 31963 ;;		_I2C1_MasterSendNack
 31964 ;; This function is called by:
 31965 ;;		_I2C1_DO_RX
 31966 ;;		_I2C1_MasterFsm
 31967 ;; This function uses a non-reentrant model
 31968 ;;
 31969                           
 31970                           	psect	text144
 31971  009E20                     __ptext144:
 31972                           	callstack 0
 31973  009E20                     _I2C1_DO_RX_NACK_STOP:
 31974                           	callstack 16
 31975                           
 31976                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 31977                           
 31978                           ;incstack = 0
 31979  009E20  EC3B  F04F         	call	_I2C1_MasterSendNack	;wreg free
 31980                           
 31981                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 31982  009E24  0E0A               	movlw	10
 31983  009E26  0012               	return		;funcret
 31984  009E28                     __end_of_I2C1_DO_RX_NACK_STOP:
 31985                           	callstack 0
 31986                           
 31987 ;; *************** function _I2C1_DO_RX_ACK *****************
 31988 ;; Defined at:
 31989 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 31990 ;; Parameters:    Size  Location     Type
 31991 ;;		None
 31992 ;; Auto vars:     Size  Location     Type
 31993 ;;		None
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1    wreg      enum E10442
 31996 ;; Registers used:
 31997 ;;		wreg, cstack
 31998 ;; Tracked objects:
 31999 ;;		On entry : 3F/2
 32000 ;;		On exit  : 3F/2
 32001 ;;		Unchanged: 3F/0
 32002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32007 ;;Total ram usage:        0 bytes
 32008 ;; Hardware stack levels used: 1
 32009 ;; Hardware stack levels required when called: 5
 32010 ;; This function calls:
 32011 ;;		_I2C1_MasterSendAck
 32012 ;; This function is called by:
 32013 ;;		_I2C1_MasterFsm
 32014 ;; This function uses a non-reentrant model
 32015 ;;
 32016                           
 32017                           	psect	text145
 32018  009E28                     __ptext145:
 32019                           	callstack 0
 32020  009E28                     _I2C1_DO_RX_ACK:
 32021                           	callstack 16
 32022                           
 32023                           ; BSR set to: 2
 32024                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 32025                           
 32026                           ;incstack = 0
 32027  009E28  EC38  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32028                           
 32029                           ; BSR set to: 2
 32030                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 32031  009E2C  0E05               	movlw	5
 32032                           
 32033                           ; BSR set to: 2
 32034  009E2E  0012               	return		;funcret
 32035  009E30                     __end_of_I2C1_DO_RX_ACK:
 32036                           	callstack 0
 32037                           
 32038 ;; *************** function _I2C1_DO_SEND_STOP *****************
 32039 ;; Defined at:
 32040 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 32041 ;; Parameters:    Size  Location     Type
 32042 ;;		None
 32043 ;; Auto vars:     Size  Location     Type
 32044 ;;		None
 32045 ;; Return value:  Size  Location     Type
 32046 ;;                  1    wreg      enum E10442
 32047 ;; Registers used:
 32048 ;;		wreg, cstack
 32049 ;; Tracked objects:
 32050 ;;		On entry : 0/2
 32051 ;;		On exit  : 0/0
 32052 ;;		Unchanged: 0/0
 32053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32058 ;;Total ram usage:        0 bytes
 32059 ;; Hardware stack levels used: 1
 32060 ;; Hardware stack levels required when called: 5
 32061 ;; This function calls:
 32062 ;;		_I2C1_MasterStop
 32063 ;; This function is called by:
 32064 ;;		_I2C1_DO_TX
 32065 ;;		_I2C1_DO_TX_EMPTY
 32066 ;;		_I2C1_DO_ADDRESS_NACK
 32067 ;;		_I2C1_MasterFsm
 32068 ;; This function uses a non-reentrant model
 32069 ;;
 32070                           
 32071                           	psect	text146
 32072  009E30                     __ptext146:
 32073                           	callstack 0
 32074  009E30                     _I2C1_DO_SEND_STOP:
 32075                           	callstack 15
 32076                           
 32077                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 32078                           
 32079                           ; BSR set to: 2
 32080                           ;incstack = 0
 32081  009E30  EC53  F04F         	call	_I2C1_MasterStop	;wreg free
 32082                           
 32083                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 32084  009E34  0E00               	movlw	0
 32085  009E36  0012               	return		;funcret
 32086  009E38                     __end_of_I2C1_DO_SEND_STOP:
 32087                           	callstack 0
 32088                           
 32089 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 32090 ;; Defined at:
 32091 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 32092 ;; Parameters:    Size  Location     Type
 32093 ;;		None
 32094 ;; Auto vars:     Size  Location     Type
 32095 ;;		None
 32096 ;; Return value:  Size  Location     Type
 32097 ;;                  1    wreg      enum E10442
 32098 ;; Registers used:
 32099 ;;		wreg, cstack
 32100 ;; Tracked objects:
 32101 ;;		On entry : 0/2
 32102 ;;		On exit  : 0/0
 32103 ;;		Unchanged: 0/0
 32104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32109 ;;Total ram usage:        0 bytes
 32110 ;; Hardware stack levels used: 1
 32111 ;; Hardware stack levels required when called: 5
 32112 ;; This function calls:
 32113 ;;		_I2C1_MasterEnableRestart
 32114 ;; This function is called by:
 32115 ;;		_I2C1_DO_TX_EMPTY
 32116 ;;		_I2C1_DO_ADDRESS_NACK
 32117 ;;		_I2C1_MasterFsm
 32118 ;; This function uses a non-reentrant model
 32119 ;;
 32120                           
 32121                           	psect	text147
 32122  009E38                     __ptext147:
 32123                           	callstack 0
 32124  009E38                     _I2C1_DO_SEND_RESTART:
 32125                           	callstack 15
 32126                           
 32127                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 32128                           
 32129                           ;incstack = 0
 32130  009E38  EC55  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32131                           
 32132                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 32133  009E3C  0E01               	movlw	1
 32134  009E3E  0012               	return		;funcret
 32135  009E40                     __end_of_I2C1_DO_SEND_RESTART:
 32136                           	callstack 0
 32137                           
 32138 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 32139 ;; Defined at:
 32140 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 32141 ;; Parameters:    Size  Location     Type
 32142 ;;		None
 32143 ;; Auto vars:     Size  Location     Type
 32144 ;;		None
 32145 ;; Return value:  Size  Location     Type
 32146 ;;                  1    wreg      enum E10442
 32147 ;; Registers used:
 32148 ;;		wreg, cstack
 32149 ;; Tracked objects:
 32150 ;;		On entry : 0/2
 32151 ;;		On exit  : 0/0
 32152 ;;		Unchanged: 0/0
 32153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32158 ;;Total ram usage:        0 bytes
 32159 ;; Hardware stack levels used: 1
 32160 ;; Hardware stack levels required when called: 5
 32161 ;; This function calls:
 32162 ;;		_I2C1_MasterEnableRestart
 32163 ;; This function is called by:
 32164 ;;		_I2C1_DO_TX
 32165 ;;		_I2C1_MasterFsm
 32166 ;; This function uses a non-reentrant model
 32167 ;;
 32168                           
 32169                           	psect	text148
 32170  009E40                     __ptext148:
 32171                           	callstack 0
 32172  009E40                     _I2C1_DO_SEND_RESTART_WRITE:
 32173                           	callstack 15
 32174                           
 32175                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 32176                           
 32177                           ;incstack = 0
 32178  009E40  EC55  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32179                           
 32180                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 32181  009E44  0E02               	movlw	2
 32182  009E46  0012               	return		;funcret
 32183  009E48                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 32184                           	callstack 0
 32185                           
 32186 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 32187 ;; Defined at:
 32188 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 32189 ;; Parameters:    Size  Location     Type
 32190 ;;		None
 32191 ;; Auto vars:     Size  Location     Type
 32192 ;;		None
 32193 ;; Return value:  Size  Location     Type
 32194 ;;                  1    wreg      enum E10442
 32195 ;; Registers used:
 32196 ;;		wreg, cstack
 32197 ;; Tracked objects:
 32198 ;;		On entry : 0/2
 32199 ;;		On exit  : 0/0
 32200 ;;		Unchanged: 0/0
 32201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32206 ;;Total ram usage:        0 bytes
 32207 ;; Hardware stack levels used: 1
 32208 ;; Hardware stack levels required when called: 5
 32209 ;; This function calls:
 32210 ;;		_I2C1_MasterEnableRestart
 32211 ;; This function is called by:
 32212 ;;		_I2C1_DO_TX
 32213 ;;		_I2C1_MasterFsm
 32214 ;; This function uses a non-reentrant model
 32215 ;;
 32216                           
 32217                           	psect	text149
 32218  009E48                     __ptext149:
 32219                           	callstack 0
 32220  009E48                     _I2C1_DO_SEND_RESTART_READ:
 32221                           	callstack 15
 32222                           
 32223                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 32224                           
 32225                           ;incstack = 0
 32226  009E48  EC55  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32227                           
 32228                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 32229  009E4C  0E01               	movlw	1
 32230  009E4E  0012               	return		;funcret
 32231  009E50                     __end_of_I2C1_DO_SEND_RESTART_READ:
 32232                           	callstack 0
 32233                           
 32234 ;; *************** function _I2C1_DO_RCEN *****************
 32235 ;; Defined at:
 32236 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 32237 ;; Parameters:    Size  Location     Type
 32238 ;;		None
 32239 ;; Auto vars:     Size  Location     Type
 32240 ;;		None
 32241 ;; Return value:  Size  Location     Type
 32242 ;;                  1    wreg      enum E10442
 32243 ;; Registers used:
 32244 ;;		wreg, cstack
 32245 ;; Tracked objects:
 32246 ;;		On entry : 3F/2
 32247 ;;		On exit  : 3F/2
 32248 ;;		Unchanged: 0/0
 32249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32254 ;;Total ram usage:        0 bytes
 32255 ;; Hardware stack levels used: 1
 32256 ;; Hardware stack levels required when called: 5
 32257 ;; This function calls:
 32258 ;;		_I2C1_MasterStartRx
 32259 ;; This function is called by:
 32260 ;;		_I2C1_MasterFsm
 32261 ;; This function uses a non-reentrant model
 32262 ;;
 32263                           
 32264                           	psect	text150
 32265  009DF4                     __ptext150:
 32266                           	callstack 0
 32267  009DF4                     _I2C1_DO_RCEN:
 32268                           	callstack 16
 32269                           
 32270                           ; BSR set to: 2
 32271                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 32272                           
 32273                           ;incstack = 0
 32274  009DF4  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32275                           
 32276                           ; BSR set to: 2
 32277                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 32278  009DF6  EC4D  F04F         	call	_I2C1_MasterStartRx	;wreg free
 32279                           
 32280                           ; BSR set to: 2
 32281                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 32282  009DFA  0E04               	movlw	4
 32283                           
 32284                           ; BSR set to: 2
 32285  009DFC  0012               	return		;funcret
 32286  009DFE                     __end_of_I2C1_DO_RCEN:
 32287                           	callstack 0
 32288                           
 32289 ;; *************** function _I2C1_DO_RX *****************
 32290 ;; Defined at:
 32291 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 32292 ;; Parameters:    Size  Location     Type
 32293 ;;		None
 32294 ;; Auto vars:     Size  Location     Type
 32295 ;;		None
 32296 ;; Return value:  Size  Location     Type
 32297 ;;                  1    wreg      enum E10442
 32298 ;; Registers used:
 32299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32300 ;; Tracked objects:
 32301 ;;		On entry : 3F/2
 32302 ;;		On exit  : 0/0
 32303 ;;		Unchanged: 0/0
 32304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32309 ;;Total ram usage:        2 bytes
 32310 ;; Hardware stack levels used: 1
 32311 ;; Hardware stack levels required when called: 7
 32312 ;; This function calls:
 32313 ;;		Absolute function
 32314 ;;		_I2C1_CallbackReturnReset
 32315 ;;		_I2C1_CallbackReturnStop
 32316 ;;		_I2C1_DO_RX_NACK_RESTART
 32317 ;;		_I2C1_DO_RX_NACK_STOP
 32318 ;;		_I2C1_MasterGetRxData
 32319 ;;		_I2C1_MasterSendAck
 32320 ;;		_rd1RegCompleteHandler
 32321 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32322 ;;		_rd2RegCompleteHandler
 32323 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32324 ;;		_rdBlkRegCompleteHandler
 32325 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32326 ;;		_wr1RegCompleteHandler
 32327 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32328 ;;		_wr2RegCompleteHandler
 32329 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32330 ;; This function is called by:
 32331 ;;		_I2C1_MasterFsm
 32332 ;; This function uses a non-reentrant model
 32333 ;;
 32334                           
 32335                           	psect	text151
 32336  008748                     __ptext151:
 32337                           	callstack 0
 32338  008748                     _I2C1_DO_RX:
 32339                           	callstack 14
 32340                           
 32341                           ; BSR set to: 2
 32342                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32343                           
 32344                           ; BSR set to: 2
 32345                           ;incstack = 0
 32346  008748  EC4B  F04F         	call	_I2C1_MasterGetRxData	;wreg free
 32347  00874C  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32348  008750  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32349  008754  6EDF               	movwf	indf2,c
 32350                           
 32351                           ; BSR set to: 2
 32352  008756  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32353  008758  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32354                           
 32355                           ; BSR set to: 2
 32356                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32357  00875A  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32358  00875C  A0D8               	btfss	status,0,c
 32359  00875E  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32360  008760  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32361  008762  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32362  008764  B4D8               	btfsc	status,2,c
 32363  008766  D004               	goto	l690
 32364                           
 32365                           ; BSR set to: 2
 32366                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32367  008768  EC38  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32368                           
 32369                           ; BSR set to: 2
 32370                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32371  00876C  0E05               	movlw	5
 32372  00876E  0012               	return	
 32373  008770                     l690:
 32374                           
 32375                           ; BSR set to: 2
 32376                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32377  008770  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32378                           
 32379                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32380  008772  D006               	goto	l20220
 32381  008774                     l20210:
 32382                           
 32383                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32384  008774  EC0C  F04F         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32385  008778  0012               	return	
 32386  00877A                     l20214:
 32387                           
 32388                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32389  00877A  EC10  F04F         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32390  00877E  0012               	return	
 32391  008780                     l20220:
 32392                           
 32393                           ; BSR set to: 2
 32394  008780  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32395  008784  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32396  008788  D801               	call	u23228
 32397  00878A  D009               	goto	u23229
 32398  00878C                     u23228:
 32399  00878C  0005               	push	
 32400  00878E  6EFA               	movwf	pclath,c
 32401  008790  513C               	movf	_I2C1_Status& (0+255),w,b
 32402  008792  6EFD               	movwf	tosl,c
 32403  008794  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32404  008796  6EFE               	movwf	tosh,c
 32405  008798  6AFF               	clrf	tosu,c
 32406  00879A  50FA               	movf	pclath,w,c
 32407  00879C  0012               	return		;indir
 32408  00879E                     u23229:
 32409  00879E  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32410  0087A0  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32411                           
 32412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32413                           ; Switch size 1, requested type "simple"
 32414                           ; Number of cases is 1, Range of values is 0 to 0
 32415                           ; switch strategies available:
 32416                           ; Name         Instructions Cycles
 32417                           ; simple_byte            4     3 (average)
 32418                           ;	Chosen strategy is simple_byte
 32419  0087A2  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32420  0087A4  0A00               	xorlw	0	; case 0
 32421  0087A6  A4D8               	btfss	status,2,c
 32422  0087A8  D7E8               	goto	l20214
 32423                           
 32424                           ; Switch size 1, requested type "simple"
 32425                           ; Number of cases is 4, Range of values is 1 to 4
 32426                           ; switch strategies available:
 32427                           ; Name         Instructions Cycles
 32428                           ; simple_byte           13     7 (average)
 32429                           ;	Chosen strategy is simple_byte
 32430  0087AA  501B               	movf	??_I2C1_DO_RX^0,w,c
 32431  0087AC  0A01               	xorlw	1	; case 1
 32432  0087AE  B4D8               	btfsc	status,2,c
 32433  0087B0  D7E4               	goto	l20214
 32434  0087B2  0A03               	xorlw	3	; case 2
 32435  0087B4  B4D8               	btfsc	status,2,c
 32436  0087B6  D7DE               	goto	l20210
 32437  0087B8  0A01               	xorlw	1	; case 3
 32438  0087BA  B4D8               	btfsc	status,2,c
 32439  0087BC  D7DB               	goto	l20210
 32440  0087BE  0A07               	xorlw	7	; case 4
 32441  0087C0  D7DC               	goto	l20214
 32442  0087C2                     __end_of_I2C1_DO_RX:
 32443                           	callstack 0
 32444                           
 32445 ;; *************** function _I2C1_DO_TX *****************
 32446 ;; Defined at:
 32447 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32448 ;; Parameters:    Size  Location     Type
 32449 ;;		None
 32450 ;; Auto vars:     Size  Location     Type
 32451 ;;		None
 32452 ;; Return value:  Size  Location     Type
 32453 ;;                  1    wreg      enum E10442
 32454 ;; Registers used:
 32455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32456 ;; Tracked objects:
 32457 ;;		On entry : 3F/2
 32458 ;;		On exit  : 0/0
 32459 ;;		Unchanged: 0/0
 32460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32465 ;;Total ram usage:        2 bytes
 32466 ;; Hardware stack levels used: 1
 32467 ;; Hardware stack levels required when called: 7
 32468 ;; This function calls:
 32469 ;;		Absolute function
 32470 ;;		_I2C1_CallbackReturnReset
 32471 ;;		_I2C1_CallbackReturnStop
 32472 ;;		_I2C1_DO_SEND_RESTART_READ
 32473 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32474 ;;		_I2C1_DO_SEND_STOP
 32475 ;;		_I2C1_MasterIsNack
 32476 ;;		_I2C1_MasterSendTxData
 32477 ;;		_rd1RegCompleteHandler
 32478 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32479 ;;		_rd2RegCompleteHandler
 32480 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32481 ;;		_rdBlkRegCompleteHandler
 32482 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32483 ;;		_wr1RegCompleteHandler
 32484 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32485 ;;		_wr2RegCompleteHandler
 32486 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32487 ;; This function is called by:
 32488 ;;		_I2C1_MasterFsm
 32489 ;; This function uses a non-reentrant model
 32490 ;;
 32491                           
 32492                           	psect	text152
 32493  0082AA                     __ptext152:
 32494                           	callstack 0
 32495  0082AA                     _I2C1_DO_TX:
 32496                           	callstack 14
 32497                           
 32498                           ; BSR set to: 2
 32499                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32500                           
 32501                           ;incstack = 0
 32502  0082AA  ECBC  F04E         	call	_I2C1_MasterIsNack	;wreg free
 32503  0082AE  0900               	iorlw	0
 32504  0082B0  A4D8               	btfss	status,2,c
 32505  0082B2  D00A               	goto	l20180
 32506  0082B4  D02A               	goto	l674
 32507  0082B6                     l20166:
 32508                           
 32509                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32510  0082B6  EC24  F04F         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32511  0082BA  0012               	return	
 32512  0082BC                     l20170:
 32513                           
 32514                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32515  0082BC  EC20  F04F         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32516  0082C0  0012               	return	
 32517  0082C2                     l20174:
 32518                           
 32519                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32520  0082C2  EC18  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 32521  0082C6  0012               	return	
 32522  0082C8                     l20180:
 32523                           
 32524                           ; BSR set to: 2
 32525  0082C8  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32526  0082CC  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32527  0082D0  D801               	call	u23198
 32528  0082D2  D009               	goto	u23199
 32529  0082D4                     u23198:
 32530  0082D4  0005               	push	
 32531  0082D6  6EFA               	movwf	pclath,c
 32532  0082D8  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32533  0082DA  6EFD               	movwf	tosl,c
 32534  0082DC  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32535  0082DE  6EFE               	movwf	tosh,c
 32536  0082E0  6AFF               	clrf	tosu,c
 32537  0082E2  50FA               	movf	pclath,w,c
 32538  0082E4  0012               	return		;indir
 32539  0082E6                     u23199:
 32540  0082E6  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32541  0082E8  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32542                           
 32543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32544                           ; Switch size 1, requested type "simple"
 32545                           ; Number of cases is 1, Range of values is 0 to 0
 32546                           ; switch strategies available:
 32547                           ; Name         Instructions Cycles
 32548                           ; simple_byte            4     3 (average)
 32549                           ;	Chosen strategy is simple_byte
 32550  0082EA  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32551  0082EC  0A00               	xorlw	0	; case 0
 32552  0082EE  A4D8               	btfss	status,2,c
 32553  0082F0  D7E8               	goto	l20174
 32554                           
 32555                           ; Switch size 1, requested type "simple"
 32556                           ; Number of cases is 4, Range of values is 1 to 4
 32557                           ; switch strategies available:
 32558                           ; Name         Instructions Cycles
 32559                           ; simple_byte           13     7 (average)
 32560                           ;	Chosen strategy is simple_byte
 32561  0082F2  501B               	movf	??_I2C1_DO_TX^0,w,c
 32562  0082F4  0A01               	xorlw	1	; case 1
 32563  0082F6  B4D8               	btfsc	status,2,c
 32564  0082F8  D7E4               	goto	l20174
 32565  0082FA  0A03               	xorlw	3	; case 2
 32566  0082FC  B4D8               	btfsc	status,2,c
 32567  0082FE  D7DB               	goto	l20166
 32568  008300  0A01               	xorlw	1	; case 3
 32569  008302  B4D8               	btfsc	status,2,c
 32570  008304  D7DB               	goto	l20170
 32571  008306  0A07               	xorlw	7	; case 4
 32572  008308  D7DC               	goto	l20174
 32573  00830A                     l674:
 32574                           
 32575                           ; BSR set to: 2
 32576                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32577  00830A  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32578                           
 32579                           ; BSR set to: 2
 32580                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32581  00830C  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32582  008310  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32583  008314  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32584  008316  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32585  008318  50DF               	movf	indf2,w,c
 32586  00831A  EC28  F04F         	call	_I2C1_MasterSendTxData
 32587                           
 32588                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32589  00831E  0102               	movlb	2	; () banked
 32590  008320  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32591  008322  A0D8               	btfss	status,0,c
 32592  008324  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32593  008326  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32594  008328  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32595  00832A  A4D8               	btfss	status,2,c
 32596  00832C  D002               	goto	l20188
 32597                           
 32598                           ; BSR set to: 2
 32599  00832E  0E06               	movlw	6
 32600  008330  0012               	return	
 32601  008332                     l20188:
 32602                           
 32603                           ; BSR set to: 2
 32604  008332  0E03               	movlw	3
 32605  008334  0012               	return		;funcret
 32606  008336                     __end_of_I2C1_DO_TX:
 32607                           	callstack 0
 32608                           
 32609 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32610 ;; Defined at:
 32611 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32612 ;; Parameters:    Size  Location     Type
 32613 ;;		None
 32614 ;; Auto vars:     Size  Location     Type
 32615 ;;		None
 32616 ;; Return value:  Size  Location     Type
 32617 ;;                  1    wreg      enum E10442
 32618 ;; Registers used:
 32619 ;;		wreg, status,2, status,0, cstack
 32620 ;; Tracked objects:
 32621 ;;		On entry : 3F/2
 32622 ;;		On exit  : 0/0
 32623 ;;		Unchanged: 0/0
 32624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32629 ;;Total ram usage:        0 bytes
 32630 ;; Hardware stack levels used: 1
 32631 ;; Hardware stack levels required when called: 5
 32632 ;; This function calls:
 32633 ;;		_I2C1_MasterSendTxData
 32634 ;; This function is called by:
 32635 ;;		_I2C1_MasterFsm
 32636 ;; This function uses a non-reentrant model
 32637 ;;
 32638                           
 32639                           	psect	text153
 32640  009D5C                     __ptext153:
 32641                           	callstack 0
 32642  009D5C                     _I2C1_DO_SEND_ADR_WRITE:
 32643                           	callstack 16
 32644                           
 32645                           ; BSR set to: 2
 32646                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32647                           
 32648                           ;incstack = 0
 32649  009D5C  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32650                           
 32651                           ; BSR set to: 2
 32652                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32653  009D5E  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32654  009D60  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32655  009D62  EC28  F04F         	call	_I2C1_MasterSendTxData
 32656                           
 32657                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32658  009D66  0E03               	movlw	3
 32659  009D68  0012               	return		;funcret
 32660  009D6A                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32661                           	callstack 0
 32662                           
 32663 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32664 ;; Defined at:
 32665 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32666 ;; Parameters:    Size  Location     Type
 32667 ;;		None
 32668 ;; Auto vars:     Size  Location     Type
 32669 ;;		None
 32670 ;; Return value:  Size  Location     Type
 32671 ;;                  1    wreg      enum E10442
 32672 ;; Registers used:
 32673 ;;		wreg, status,0, cstack
 32674 ;; Tracked objects:
 32675 ;;		On entry : 3F/2
 32676 ;;		On exit  : 0/0
 32677 ;;		Unchanged: 0/0
 32678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32683 ;;Total ram usage:        0 bytes
 32684 ;; Hardware stack levels used: 1
 32685 ;; Hardware stack levels required when called: 5
 32686 ;; This function calls:
 32687 ;;		_I2C1_MasterSendTxData
 32688 ;; This function is called by:
 32689 ;;		_I2C1_MasterFsm
 32690 ;; This function uses a non-reentrant model
 32691 ;;
 32692                           
 32693                           	psect	text154
 32694  009D6A                     __ptext154:
 32695                           	callstack 0
 32696  009D6A                     _I2C1_DO_SEND_ADR_READ:
 32697                           	callstack 16
 32698                           
 32699                           ; BSR set to: 2
 32700                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 32701                           
 32702                           ;incstack = 0
 32703  009D6A  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32704                           
 32705                           ; BSR set to: 2
 32706                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 32707  009D6C  80D8               	bsf	status,0,c
 32708  009D6E  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 32709  009D70  EC28  F04F         	call	_I2C1_MasterSendTxData
 32710                           
 32711                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 32712  009D74  0E05               	movlw	5
 32713  009D76  0012               	return		;funcret
 32714  009D78                     __end_of_I2C1_DO_SEND_ADR_READ:
 32715                           	callstack 0
 32716                           
 32717 ;; *************** function _I2C1_DO_IDLE *****************
 32718 ;; Defined at:
 32719 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 32720 ;; Parameters:    Size  Location     Type
 32721 ;;		None
 32722 ;; Auto vars:     Size  Location     Type
 32723 ;;		None
 32724 ;; Return value:  Size  Location     Type
 32725 ;;                  1    wreg      enum E10442
 32726 ;; Registers used:
 32727 ;;		wreg, status,2
 32728 ;; Tracked objects:
 32729 ;;		On entry : 3F/2
 32730 ;;		On exit  : 3F/2
 32731 ;;		Unchanged: 0/0
 32732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32737 ;;Total ram usage:        0 bytes
 32738 ;; Hardware stack levels used: 1
 32739 ;; Hardware stack levels required when called: 4
 32740 ;; This function calls:
 32741 ;;		Nothing
 32742 ;; This function is called by:
 32743 ;;		_I2C1_MasterFsm
 32744 ;; This function uses a non-reentrant model
 32745 ;;
 32746                           
 32747                           	psect	text155
 32748  009DFE                     __ptext155:
 32749                           	callstack 0
 32750  009DFE                     _I2C1_DO_IDLE:
 32751                           	callstack 17
 32752                           
 32753                           ; BSR set to: 2
 32754                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 32755                           
 32756                           ;incstack = 0
 32757  009DFE  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32758                           
 32759                           ; BSR set to: 2
 32760                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 32761  009E00  0E00               	movlw	0
 32762  009E02  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32763                           
 32764                           ; BSR set to: 2
 32765                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 32766  009E04  0E0E               	movlw	14
 32767                           
 32768                           ; BSR set to: 2
 32769  009E06  0012               	return		;funcret
 32770  009E08                     __end_of_I2C1_DO_IDLE:
 32771                           	callstack 0
 32772                           
 32773 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 32774 ;; Defined at:
 32775 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 32776 ;; Parameters:    Size  Location     Type
 32777 ;;		None
 32778 ;; Auto vars:     Size  Location     Type
 32779 ;;		None
 32780 ;; Return value:  Size  Location     Type
 32781 ;;                  1    wreg      enum E10442
 32782 ;; Registers used:
 32783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32784 ;; Tracked objects:
 32785 ;;		On entry : 3F/2
 32786 ;;		On exit  : 0/0
 32787 ;;		Unchanged: 0/0
 32788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32793 ;;Total ram usage:        2 bytes
 32794 ;; Hardware stack levels used: 1
 32795 ;; Hardware stack levels required when called: 7
 32796 ;; This function calls:
 32797 ;;		Absolute function
 32798 ;;		_I2C1_CallbackReturnReset
 32799 ;;		_I2C1_CallbackReturnStop
 32800 ;;		_I2C1_DO_SEND_RESTART
 32801 ;;		_I2C1_DO_SEND_STOP
 32802 ;;		_I2C1_MasterSetIrq
 32803 ;;		_rd1RegCompleteHandler
 32804 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32805 ;;		_rd2RegCompleteHandler
 32806 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32807 ;;		_rdBlkRegCompleteHandler
 32808 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32809 ;;		_wr1RegCompleteHandler
 32810 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32811 ;;		_wr2RegCompleteHandler
 32812 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32813 ;; This function is called by:
 32814 ;;		_I2C1_MasterFsm
 32815 ;; This function uses a non-reentrant model
 32816 ;;
 32817                           
 32818                           	psect	text156
 32819  008D64                     __ptext156:
 32820                           	callstack 0
 32821  008D64                     _I2C1_DO_TX_EMPTY:
 32822                           	callstack 14
 32823                           
 32824                           ; BSR set to: 2
 32825                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 32826                           
 32827                           ; BSR set to: 2
 32828                           ;incstack = 0
 32829  008D64  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32830                           
 32831                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32832  008D66  D00A               	goto	l20252
 32833  008D68                     l20236:
 32834                           
 32835                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 32836  008D68  EC1C  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 32837  008D6C  0012               	return	
 32838  008D6E                     l20240:
 32839                           
 32840                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 32841  008D6E  EC35  F04F         	call	_I2C1_MasterSetIrq	;wreg free
 32842                           
 32843                           ; BSR set to: 14
 32844                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 32845  008D72  0E03               	movlw	3
 32846  008D74  0012               	return	
 32847  008D76                     l20246:
 32848                           
 32849                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 32850  008D76  EC18  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 32851  008D7A  0012               	return	
 32852  008D7C                     l20252:
 32853                           
 32854                           ; BSR set to: 2
 32855  008D7C  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32856  008D80  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32857  008D84  D801               	call	u23238
 32858  008D86  D009               	goto	u23239
 32859  008D88                     u23238:
 32860  008D88  0005               	push	
 32861  008D8A  6EFA               	movwf	pclath,c
 32862  008D8C  513C               	movf	_I2C1_Status& (0+255),w,b
 32863  008D8E  6EFD               	movwf	tosl,c
 32864  008D90  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32865  008D92  6EFE               	movwf	tosh,c
 32866  008D94  6AFF               	clrf	tosu,c
 32867  008D96  50FA               	movf	pclath,w,c
 32868  008D98  0012               	return		;indir
 32869  008D9A                     u23239:
 32870  008D9A  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 32871  008D9C  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 32872                           
 32873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32874                           ; Switch size 1, requested type "simple"
 32875                           ; Number of cases is 1, Range of values is 0 to 0
 32876                           ; switch strategies available:
 32877                           ; Name         Instructions Cycles
 32878                           ; simple_byte            4     3 (average)
 32879                           ;	Chosen strategy is simple_byte
 32880  008D9E  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 32881  008DA0  0A00               	xorlw	0	; case 0
 32882  008DA2  A4D8               	btfss	status,2,c
 32883  008DA4  D7E8               	goto	l20246
 32884                           
 32885                           ; Switch size 1, requested type "simple"
 32886                           ; Number of cases is 4, Range of values is 1 to 4
 32887                           ; switch strategies available:
 32888                           ; Name         Instructions Cycles
 32889                           ; simple_byte           13     7 (average)
 32890                           ;	Chosen strategy is simple_byte
 32891  008DA6  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 32892  008DA8  0A01               	xorlw	1	; case 1
 32893  008DAA  B4D8               	btfsc	status,2,c
 32894  008DAC  D7E4               	goto	l20246
 32895  008DAE  0A03               	xorlw	3	; case 2
 32896  008DB0  B4D8               	btfsc	status,2,c
 32897  008DB2  D7DA               	goto	l20236
 32898  008DB4  0A01               	xorlw	1	; case 3
 32899  008DB6  B4D8               	btfsc	status,2,c
 32900  008DB8  D7D7               	goto	l20236
 32901  008DBA  0A07               	xorlw	7	; case 4
 32902  008DBC  B4D8               	btfsc	status,2,c
 32903  008DBE  D7D7               	goto	l20240
 32904  008DC0  D7DA               	goto	l20246
 32905  008DC2                     __end_of_I2C1_DO_TX_EMPTY:
 32906                           	callstack 0
 32907                           
 32908 ;; *************** function _I2C1_MasterSetIrq *****************
 32909 ;; Defined at:
 32910 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 32911 ;; Parameters:    Size  Location     Type
 32912 ;;		None
 32913 ;; Auto vars:     Size  Location     Type
 32914 ;;		None
 32915 ;; Return value:  Size  Location     Type
 32916 ;;                  1    wreg      void 
 32917 ;; Registers used:
 32918 ;;		None
 32919 ;; Tracked objects:
 32920 ;;		On entry : 0/2
 32921 ;;		On exit  : 3F/E
 32922 ;;		Unchanged: 0/0
 32923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32928 ;;Total ram usage:        0 bytes
 32929 ;; Hardware stack levels used: 1
 32930 ;; Hardware stack levels required when called: 4
 32931 ;; This function calls:
 32932 ;;		Nothing
 32933 ;; This function is called by:
 32934 ;;		_I2C1_DO_TX_EMPTY
 32935 ;; This function uses a non-reentrant model
 32936 ;;
 32937                           
 32938                           	psect	text157
 32939  009E6A                     __ptext157:
 32940                           	callstack 0
 32941  009E6A                     _I2C1_MasterSetIrq:
 32942                           	callstack 16
 32943                           
 32944                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 32945                           
 32946                           ;incstack = 0
 32947  009E6A  010E               	movlb	14	; () banked
 32948  009E6C  81CD               	bsf	205,0,b	;volatile
 32949                           
 32950                           ; BSR set to: 14
 32951  009E6E  0012               	return		;funcret
 32952  009E70                     __end_of_I2C1_MasterSetIrq:
 32953                           	callstack 0
 32954                           
 32955 ;; *************** function _I2C1_MasterIsNack *****************
 32956 ;; Defined at:
 32957 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 32958 ;; Parameters:    Size  Location     Type
 32959 ;;		None
 32960 ;; Auto vars:     Size  Location     Type
 32961 ;;		None
 32962 ;; Return value:  Size  Location     Type
 32963 ;;                  1    wreg      _Bool 
 32964 ;; Registers used:
 32965 ;;		wreg
 32966 ;; Tracked objects:
 32967 ;;		On entry : 3F/2
 32968 ;;		On exit  : 3F/2
 32969 ;;		Unchanged: 3F/0
 32970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32975 ;;Total ram usage:        0 bytes
 32976 ;; Hardware stack levels used: 1
 32977 ;; Hardware stack levels required when called: 4
 32978 ;; This function calls:
 32979 ;;		Nothing
 32980 ;; This function is called by:
 32981 ;;		_I2C1_MasterFsm
 32982 ;;		_I2C1_DO_TX
 32983 ;; This function uses a non-reentrant model
 32984 ;;
 32985                           
 32986                           	psect	text158
 32987  009D78                     __ptext158:
 32988                           	callstack 0
 32989  009D78                     _I2C1_MasterIsNack:
 32990                           	callstack 17
 32991                           
 32992                           ; BSR set to: 2
 32993                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 32994                           
 32995                           ; BSR set to: 14
 32996                           ;incstack = 0
 32997  009D78  AC97               	btfss	151,6,c	;volatile
 32998  009D7A  D002               	goto	u23170
 32999  009D7C  0E01               	movlw	1
 33000  009D7E  0012               	return	
 33001  009D80                     u23170:
 33002  009D80  0E00               	movlw	0
 33003                           
 33004                           ; BSR set to: 2
 33005  009D82  0012               	return		;funcret
 33006  009D84                     __end_of_I2C1_MasterIsNack:
 33007                           	callstack 0
 33008                           
 33009 ;; *************** function _I2C1_MasterSendTxData *****************
 33010 ;; Defined at:
 33011 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 33012 ;; Parameters:    Size  Location     Type
 33013 ;;  data            1    wreg     unsigned char 
 33014 ;; Auto vars:     Size  Location     Type
 33015 ;;  data            1   15[COMRAM] unsigned char 
 33016 ;; Return value:  Size  Location     Type
 33017 ;;                  1    wreg      void 
 33018 ;; Registers used:
 33019 ;;		wreg
 33020 ;; Tracked objects:
 33021 ;;		On entry : 3F/2
 33022 ;;		On exit  : 0/0
 33023 ;;		Unchanged: 0/0
 33024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33029 ;;Total ram usage:        1 bytes
 33030 ;; Hardware stack levels used: 1
 33031 ;; Hardware stack levels required when called: 4
 33032 ;; This function calls:
 33033 ;;		Nothing
 33034 ;; This function is called by:
 33035 ;;		_I2C1_DO_SEND_ADR_READ
 33036 ;;		_I2C1_DO_SEND_ADR_WRITE
 33037 ;;		_I2C1_DO_TX
 33038 ;; This function uses a non-reentrant model
 33039 ;;
 33040                           
 33041                           	psect	text159
 33042  009E50                     __ptext159:
 33043                           	callstack 0
 33044  009E50                     _I2C1_MasterSendTxData:
 33045                           	callstack 16
 33046                           
 33047                           ; BSR set to: 2
 33048                           ;incstack = 0
 33049                           ;I2C1_MasterSendTxData@data stored from wreg
 33050  009E50  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 33051                           
 33052                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 33053  009E52  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 33054  009E56  0012               	return		;funcret
 33055  009E58                     __end_of_I2C1_MasterSendTxData:
 33056                           	callstack 0
 33057                           
 33058 ;; *************** function _I2C1_MasterSendAck *****************
 33059 ;; Defined at:
 33060 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 33061 ;; Parameters:    Size  Location     Type
 33062 ;;		None
 33063 ;; Auto vars:     Size  Location     Type
 33064 ;;		None
 33065 ;; Return value:  Size  Location     Type
 33066 ;;                  1    wreg      void 
 33067 ;; Registers used:
 33068 ;;		None
 33069 ;; Tracked objects:
 33070 ;;		On entry : 3F/2
 33071 ;;		On exit  : 3F/2
 33072 ;;		Unchanged: 3F/0
 33073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33078 ;;Total ram usage:        0 bytes
 33079 ;; Hardware stack levels used: 1
 33080 ;; Hardware stack levels required when called: 4
 33081 ;; This function calls:
 33082 ;;		Nothing
 33083 ;; This function is called by:
 33084 ;;		_I2C1_DO_RX
 33085 ;;		_I2C1_DO_RX_ACK
 33086 ;; This function uses a non-reentrant model
 33087 ;;
 33088                           
 33089                           	psect	text160
 33090  009E70                     __ptext160:
 33091                           	callstack 0
 33092  009E70                     _I2C1_MasterSendAck:
 33093                           	callstack 16
 33094                           
 33095                           ; BSR set to: 2
 33096                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 33097                           
 33098                           ;incstack = 0
 33099  009E70  9A97               	bcf	151,5,c	;volatile
 33100                           
 33101                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 33102  009E72  8897               	bsf	151,4,c	;volatile
 33103                           
 33104                           ; BSR set to: 2
 33105  009E74  0012               	return		;funcret
 33106  009E76                     __end_of_I2C1_MasterSendAck:
 33107                           	callstack 0
 33108                           
 33109 ;; *************** function _I2C1_MasterGetRxData *****************
 33110 ;; Defined at:
 33111 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 33112 ;; Parameters:    Size  Location     Type
 33113 ;;		None
 33114 ;; Auto vars:     Size  Location     Type
 33115 ;;		None
 33116 ;; Return value:  Size  Location     Type
 33117 ;;                  1    wreg      unsigned char 
 33118 ;; Registers used:
 33119 ;;		wreg, status,2
 33120 ;; Tracked objects:
 33121 ;;		On entry : 3F/2
 33122 ;;		On exit  : 3F/2
 33123 ;;		Unchanged: 3F/0
 33124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33129 ;;Total ram usage:        0 bytes
 33130 ;; Hardware stack levels used: 1
 33131 ;; Hardware stack levels required when called: 4
 33132 ;; This function calls:
 33133 ;;		Nothing
 33134 ;; This function is called by:
 33135 ;;		_I2C1_DO_RX
 33136 ;; This function uses a non-reentrant model
 33137 ;;
 33138                           
 33139                           	psect	text161
 33140  009E96                     __ptext161:
 33141                           	callstack 0
 33142  009E96                     _I2C1_MasterGetRxData:
 33143                           	callstack 16
 33144                           
 33145                           ; BSR set to: 2
 33146                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 33147                           
 33148                           ; BSR set to: 2
 33149                           ;incstack = 0
 33150  009E96  5092               	movf	146,w,c	;volatile
 33151                           
 33152                           ; BSR set to: 2
 33153  009E98  0012               	return		;funcret
 33154  009E9A                     __end_of_I2C1_MasterGetRxData:
 33155                           	callstack 0
 33156                           
 33157 ;; *************** function _I2C1_MasterSendNack *****************
 33158 ;; Defined at:
 33159 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 33160 ;; Parameters:    Size  Location     Type
 33161 ;;		None
 33162 ;; Auto vars:     Size  Location     Type
 33163 ;;		None
 33164 ;; Return value:  Size  Location     Type
 33165 ;;                  1    wreg      void 
 33166 ;; Registers used:
 33167 ;;		None
 33168 ;; Tracked objects:
 33169 ;;		On entry : 0/2
 33170 ;;		On exit  : 0/0
 33171 ;;		Unchanged: 0/0
 33172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33177 ;;Total ram usage:        0 bytes
 33178 ;; Hardware stack levels used: 1
 33179 ;; Hardware stack levels required when called: 4
 33180 ;; This function calls:
 33181 ;;		Nothing
 33182 ;; This function is called by:
 33183 ;;		_I2C1_DO_RX_NACK_STOP
 33184 ;;		_I2C1_DO_RX_NACK_RESTART
 33185 ;; This function uses a non-reentrant model
 33186 ;;
 33187                           
 33188                           	psect	text162
 33189  009E76                     __ptext162:
 33190                           	callstack 0
 33191  009E76                     _I2C1_MasterSendNack:
 33192                           	callstack 16
 33193                           
 33194                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 33195                           
 33196                           ; BSR set to: 2
 33197                           ;incstack = 0
 33198  009E76  8A97               	bsf	151,5,c	;volatile
 33199                           
 33200                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 33201  009E78  8897               	bsf	151,4,c	;volatile
 33202  009E7A  0012               	return		;funcret
 33203  009E7C                     __end_of_I2C1_MasterSendNack:
 33204                           	callstack 0
 33205                           
 33206 ;; *************** function _I2C1_MasterStartRx *****************
 33207 ;; Defined at:
 33208 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 33209 ;; Parameters:    Size  Location     Type
 33210 ;;		None
 33211 ;; Auto vars:     Size  Location     Type
 33212 ;;		None
 33213 ;; Return value:  Size  Location     Type
 33214 ;;                  1    wreg      void 
 33215 ;; Registers used:
 33216 ;;		None
 33217 ;; Tracked objects:
 33218 ;;		On entry : 3F/2
 33219 ;;		On exit  : 3F/2
 33220 ;;		Unchanged: 3F/0
 33221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33226 ;;Total ram usage:        0 bytes
 33227 ;; Hardware stack levels used: 1
 33228 ;; Hardware stack levels required when called: 4
 33229 ;; This function calls:
 33230 ;;		Nothing
 33231 ;; This function is called by:
 33232 ;;		_I2C1_DO_RCEN
 33233 ;; This function uses a non-reentrant model
 33234 ;;
 33235                           
 33236                           	psect	text163
 33237  009E9A                     __ptext163:
 33238                           	callstack 0
 33239  009E9A                     _I2C1_MasterStartRx:
 33240                           	callstack 16
 33241                           
 33242                           ; BSR set to: 2
 33243                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 33244                           
 33245                           ;incstack = 0
 33246  009E9A  8697               	bsf	151,3,c	;volatile
 33247                           
 33248                           ; BSR set to: 2
 33249  009E9C  0012               	return		;funcret
 33250  009E9E                     __end_of_I2C1_MasterStartRx:
 33251                           	callstack 0
 33252                           
 33253 ;; *************** function _I2C1_CallbackReturnReset *****************
 33254 ;; Defined at:
 33255 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 33256 ;; Parameters:    Size  Location     Type
 33257 ;;  funPtr          2   24[COMRAM] PTR void 
 33258 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33259 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33260 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33261 ;; Auto vars:     Size  Location     Type
 33262 ;;		None
 33263 ;; Return value:  Size  Location     Type
 33264 ;;                  1    wreg      enum E360
 33265 ;; Registers used:
 33266 ;;		wreg
 33267 ;; Tracked objects:
 33268 ;;		On entry : 3F/2
 33269 ;;		On exit  : 3F/2
 33270 ;;		Unchanged: 3F/0
 33271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33276 ;;Total ram usage:        2 bytes
 33277 ;; Hardware stack levels used: 1
 33278 ;; Hardware stack levels required when called: 4
 33279 ;; This function calls:
 33280 ;;		Nothing
 33281 ;; This function is called by:
 33282 ;;		_I2C1_Open
 33283 ;;		_I2C1_DO_TX
 33284 ;;		_I2C1_DO_RX
 33285 ;;		_I2C1_DO_TX_EMPTY
 33286 ;;		_I2C1_DO_ADDRESS_NACK
 33287 ;; This function uses a non-reentrant model
 33288 ;;
 33289                           
 33290                           	psect	text164
 33291  009E9E                     __ptext164:
 33292                           	callstack 0
 33293  009E9E                     _I2C1_CallbackReturnReset:
 33294                           	callstack 16
 33295                           
 33296                           ; BSR set to: 2
 33297                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 33298                           
 33299                           ; BSR set to: 2
 33300                           ;incstack = 0
 33301  009E9E  0E05               	movlw	5
 33302                           
 33303                           ; BSR set to: 2
 33304  009EA0  0012               	return		;funcret
 33305  009EA2                     __end_of_I2C1_CallbackReturnReset:
 33306                           	callstack 0
 33307                           
 33308 ;; *************** function _I2C1_CallbackReturnStop *****************
 33309 ;; Defined at:
 33310 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 33311 ;; Parameters:    Size  Location     Type
 33312 ;;  funPtr          2   24[COMRAM] PTR void 
 33313 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33314 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33315 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33316 ;; Auto vars:     Size  Location     Type
 33317 ;;		None
 33318 ;; Return value:  Size  Location     Type
 33319 ;;                  1    wreg      enum E360
 33320 ;; Registers used:
 33321 ;;		wreg
 33322 ;; Tracked objects:
 33323 ;;		On entry : 3F/2
 33324 ;;		On exit  : 3F/2
 33325 ;;		Unchanged: 3F/0
 33326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33331 ;;Total ram usage:        2 bytes
 33332 ;; Hardware stack levels used: 1
 33333 ;; Hardware stack levels required when called: 4
 33334 ;; This function calls:
 33335 ;;		Nothing
 33336 ;; This function is called by:
 33337 ;;		_I2C1_Open
 33338 ;;		_I2C1_SetCallback
 33339 ;;		_I2C1_DO_TX
 33340 ;;		_I2C1_DO_RX
 33341 ;;		_I2C1_DO_TX_EMPTY
 33342 ;;		_I2C1_DO_ADDRESS_NACK
 33343 ;; This function uses a non-reentrant model
 33344 ;;
 33345                           
 33346                           	psect	text165
 33347  009EA2                     __ptext165:
 33348                           	callstack 0
 33349  009EA2                     _I2C1_CallbackReturnStop:
 33350                           	callstack 16
 33351                           
 33352                           ; BSR set to: 2
 33353                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33354                           
 33355                           ; BSR set to: 2
 33356                           ;incstack = 0
 33357  009EA2  0E01               	movlw	1
 33358                           
 33359                           ; BSR set to: 2
 33360  009EA4  0012               	return		;funcret
 33361  009EA6                     __end_of_I2C1_CallbackReturnStop:
 33362                           	callstack 0
 33363                           
 33364 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33365 ;; Defined at:
 33366 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33367 ;; Parameters:    Size  Location     Type
 33368 ;;  ptr             2   24[COMRAM] PTR void 
 33369 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33370 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33371 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33372 ;; Auto vars:     Size  Location     Type
 33373 ;;		None
 33374 ;; Return value:  Size  Location     Type
 33375 ;;                  1    wreg      enum E527
 33376 ;; Registers used:
 33377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33378 ;; Tracked objects:
 33379 ;;		On entry : 3F/2
 33380 ;;		On exit  : 0/0
 33381 ;;		Unchanged: 0/0
 33382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33387 ;;Total ram usage:        2 bytes
 33388 ;; Hardware stack levels used: 1
 33389 ;; Hardware stack levels required when called: 6
 33390 ;; This function calls:
 33391 ;;		_I2C1_SetBuffer
 33392 ;;		_I2C1_SetDataCompleteCallback
 33393 ;; This function is called by:
 33394 ;;		_I2C1_DO_TX
 33395 ;;		_I2C1_DO_RX
 33396 ;;		_I2C1_DO_TX_EMPTY
 33397 ;;		_I2C1_DO_ADDRESS_NACK
 33398 ;; This function uses a non-reentrant model
 33399 ;;
 33400                           
 33401                           	psect	text166
 33402  0094A8                     __ptext166:
 33403                           	callstack 0
 33404  0094A8                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33405                           	callstack 14
 33406                           
 33407                           ; BSR set to: 2
 33408                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33409                           
 33410                           ; BSR set to: 2
 33411                           ;incstack = 0
 33412  0094A8  EE20 F002          	lfsr	2,2
 33413  0094AC  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33414  0094AE  26D9               	addwf	fsr2l,f,c
 33415  0094B0  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33416  0094B2  22DA               	addwfc	fsr2h,f,c
 33417  0094B4  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33418  0094B8  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33419  0094BC  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33420  0094C0  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33421  0094C4  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33422  0094C8  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33423  0094CC  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33424                           
 33425                           ; BSR set to: 2
 33426                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33427  0094D0  0E00               	movlw	0
 33428  0094D2  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33429  0094D4  0E00               	movlw	0
 33430  0094D6  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33431  0094D8  0E00               	movlw	0
 33432  0094DA  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33433  0094DC  0E00               	movlw	0
 33434  0094DE  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33435  0094E0  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33436                           
 33437                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33438  0094E4  0E02               	movlw	2
 33439  0094E6  0012               	return		;funcret
 33440  0094E8                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33441                           	callstack 0
 33442                           
 33443 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33444 ;; Defined at:
 33445 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33446 ;; Parameters:    Size  Location     Type
 33447 ;;  ptr             2   24[COMRAM] PTR void 
 33448 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33449 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33450 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33451 ;; Auto vars:     Size  Location     Type
 33452 ;;		None
 33453 ;; Return value:  Size  Location     Type
 33454 ;;                  1    wreg      enum E527
 33455 ;; Registers used:
 33456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33457 ;; Tracked objects:
 33458 ;;		On entry : 3F/2
 33459 ;;		On exit  : 0/0
 33460 ;;		Unchanged: 0/0
 33461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33466 ;;Total ram usage:        2 bytes
 33467 ;; Hardware stack levels used: 1
 33468 ;; Hardware stack levels required when called: 6
 33469 ;; This function calls:
 33470 ;;		_I2C1_SetBuffer
 33471 ;;		_I2C1_SetDataCompleteCallback
 33472 ;; This function is called by:
 33473 ;;		_I2C1_DO_TX
 33474 ;;		_I2C1_DO_RX
 33475 ;;		_I2C1_DO_TX_EMPTY
 33476 ;;		_I2C1_DO_ADDRESS_NACK
 33477 ;; This function uses a non-reentrant model
 33478 ;;
 33479                           
 33480                           	psect	text167
 33481  0097EE                     __ptext167:
 33482                           	callstack 0
 33483  0097EE                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33484                           	callstack 14
 33485                           
 33486                           ; BSR set to: 2
 33487                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33488                           
 33489                           ;incstack = 0
 33490  0097EE  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33491  0097F2  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33492  0097F6  0E00               	movlw	0
 33493  0097F8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33494  0097FA  0E01               	movlw	1
 33495  0097FC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33496  0097FE  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33497                           
 33498                           ; BSR set to: 2
 33499                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33500  009802  0E00               	movlw	0
 33501  009804  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33502  009806  0E00               	movlw	0
 33503  009808  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33504  00980A  0E00               	movlw	0
 33505  00980C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33506  00980E  0E00               	movlw	0
 33507  009810  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33508  009812  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33509                           
 33510                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33511  009816  0E04               	movlw	4
 33512  009818  0012               	return		;funcret
 33513  00981A                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33514                           	callstack 0
 33515                           
 33516 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33517 ;; Defined at:
 33518 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33519 ;; Parameters:    Size  Location     Type
 33520 ;;  ptr             2   24[COMRAM] PTR void 
 33521 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33522 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33523 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33524 ;; Auto vars:     Size  Location     Type
 33525 ;;		None
 33526 ;; Return value:  Size  Location     Type
 33527 ;;                  1    wreg      enum E527
 33528 ;; Registers used:
 33529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33530 ;; Tracked objects:
 33531 ;;		On entry : 3F/2
 33532 ;;		On exit  : 0/0
 33533 ;;		Unchanged: 0/0
 33534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33539 ;;Total ram usage:        2 bytes
 33540 ;; Hardware stack levels used: 1
 33541 ;; Hardware stack levels required when called: 6
 33542 ;; This function calls:
 33543 ;;		_I2C1_SetBuffer
 33544 ;;		_I2C1_SetDataCompleteCallback
 33545 ;; This function is called by:
 33546 ;;		_I2C1_DO_TX
 33547 ;;		_I2C1_DO_RX
 33548 ;;		_I2C1_DO_TX_EMPTY
 33549 ;;		_I2C1_DO_ADDRESS_NACK
 33550 ;; This function uses a non-reentrant model
 33551 ;;
 33552                           
 33553                           	psect	text168
 33554  00981A                     __ptext168:
 33555                           	callstack 0
 33556  00981A                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33557                           	callstack 14
 33558                           
 33559                           ; BSR set to: 2
 33560                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33561                           
 33562                           ;incstack = 0
 33563  00981A  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33564  00981E  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33565  009822  0E00               	movlw	0
 33566  009824  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33567  009826  0E02               	movlw	2
 33568  009828  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33569  00982A  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33570                           
 33571                           ; BSR set to: 2
 33572                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33573  00982E  0E00               	movlw	0
 33574  009830  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33575  009832  0E00               	movlw	0
 33576  009834  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33577  009836  0E00               	movlw	0
 33578  009838  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33579  00983A  0E00               	movlw	0
 33580  00983C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33581  00983E  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33582                           
 33583                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33584  009842  0E02               	movlw	2
 33585  009844  0012               	return		;funcret
 33586  009846                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33587                           	callstack 0
 33588                           
 33589 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33590 ;; Defined at:
 33591 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33592 ;; Parameters:    Size  Location     Type
 33593 ;;  ptr             2   24[COMRAM] PTR void 
 33594 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33595 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33596 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33597 ;; Auto vars:     Size  Location     Type
 33598 ;;		None
 33599 ;; Return value:  Size  Location     Type
 33600 ;;                  1    wreg      enum E527
 33601 ;; Registers used:
 33602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33603 ;; Tracked objects:
 33604 ;;		On entry : 3F/2
 33605 ;;		On exit  : 0/0
 33606 ;;		Unchanged: 0/0
 33607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33612 ;;Total ram usage:        2 bytes
 33613 ;; Hardware stack levels used: 1
 33614 ;; Hardware stack levels required when called: 6
 33615 ;; This function calls:
 33616 ;;		_I2C1_SetBuffer
 33617 ;;		_I2C1_SetDataCompleteCallback
 33618 ;; This function is called by:
 33619 ;;		_I2C1_Read1ByteRegister
 33620 ;;		_I2C1_DO_TX
 33621 ;;		_I2C1_DO_RX
 33622 ;;		_I2C1_DO_TX_EMPTY
 33623 ;;		_I2C1_DO_ADDRESS_NACK
 33624 ;; This function uses a non-reentrant model
 33625 ;;
 33626                           
 33627                           	psect	text169
 33628  009846                     __ptext169:
 33629                           	callstack 0
 33630  009846                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33631                           	callstack 14
 33632                           
 33633                           ; BSR set to: 2
 33634                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33635                           
 33636                           ;incstack = 0
 33637  009846  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33638  00984A  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33639  00984E  0E00               	movlw	0
 33640  009850  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33641  009852  0E01               	movlw	1
 33642  009854  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33643  009856  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33644                           
 33645                           ; BSR set to: 2
 33646                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33647  00985A  0E00               	movlw	0
 33648  00985C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33649  00985E  0E00               	movlw	0
 33650  009860  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33651  009862  0E00               	movlw	0
 33652  009864  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33653  009866  0E00               	movlw	0
 33654  009868  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33655  00986A  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33656                           
 33657                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33658  00986E  0E02               	movlw	2
 33659  009870  0012               	return		;funcret
 33660  009872                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33661                           	callstack 0
 33662                           
 33663 ;; *************** function _rdBlkRegCompleteHandler *****************
 33664 ;; Defined at:
 33665 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33666 ;; Parameters:    Size  Location     Type
 33667 ;;  p               2   24[COMRAM] PTR void 
 33668 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33669 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33670 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33671 ;; Auto vars:     Size  Location     Type
 33672 ;;		None
 33673 ;; Return value:  Size  Location     Type
 33674 ;;                  1    wreg      enum E360
 33675 ;; Registers used:
 33676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33677 ;; Tracked objects:
 33678 ;;		On entry : 3F/2
 33679 ;;		On exit  : 0/0
 33680 ;;		Unchanged: 0/0
 33681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33686 ;;Total ram usage:        2 bytes
 33687 ;; Hardware stack levels used: 1
 33688 ;; Hardware stack levels required when called: 6
 33689 ;; This function calls:
 33690 ;;		_I2C1_SetBuffer
 33691 ;;		_I2C1_SetDataCompleteCallback
 33692 ;; This function is called by:
 33693 ;;		_i2c_readDataBlock
 33694 ;;		_I2C1_DO_TX
 33695 ;;		_I2C1_DO_RX
 33696 ;;		_I2C1_DO_TX_EMPTY
 33697 ;;		_I2C1_DO_ADDRESS_NACK
 33698 ;; This function uses a non-reentrant model
 33699 ;;
 33700                           
 33701                           	psect	text170
 33702  0094E8                     __ptext170:
 33703                           	callstack 0
 33704  0094E8                     _rdBlkRegCompleteHandler:
 33705                           	callstack 14
 33706                           
 33707                           ; BSR set to: 2
 33708                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 33709                           
 33710                           ;incstack = 0
 33711  0094E8  EE20 F002          	lfsr	2,2
 33712  0094EC  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 33713  0094EE  26D9               	addwf	fsr2l,f,c
 33714  0094F0  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 33715  0094F2  22DA               	addwfc	fsr2h,f,c
 33716  0094F4  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33717  0094F8  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33718  0094FC  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 33719  009500  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 33720  009504  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33721  009508  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33722  00950C  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33723                           
 33724                           ; BSR set to: 2
 33725                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33726  009510  0E00               	movlw	0
 33727  009512  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33728  009514  0E00               	movlw	0
 33729  009516  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33730  009518  0E00               	movlw	0
 33731  00951A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33732  00951C  0E00               	movlw	0
 33733  00951E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33734  009520  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33735                           
 33736                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 33737  009524  0E02               	movlw	2
 33738  009526  0012               	return		;funcret
 33739  009528                     __end_of_rdBlkRegCompleteHandler:
 33740                           	callstack 0
 33741                           
 33742 ;; *************** function _wr2RegCompleteHandler *****************
 33743 ;; Defined at:
 33744 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33745 ;; Parameters:    Size  Location     Type
 33746 ;;  p               2   24[COMRAM] PTR void 
 33747 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33748 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33749 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33750 ;; Auto vars:     Size  Location     Type
 33751 ;;		None
 33752 ;; Return value:  Size  Location     Type
 33753 ;;                  1    wreg      enum E360
 33754 ;; Registers used:
 33755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33756 ;; Tracked objects:
 33757 ;;		On entry : 3F/2
 33758 ;;		On exit  : 0/0
 33759 ;;		Unchanged: 0/0
 33760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33765 ;;Total ram usage:        2 bytes
 33766 ;; Hardware stack levels used: 1
 33767 ;; Hardware stack levels required when called: 6
 33768 ;; This function calls:
 33769 ;;		_I2C1_SetBuffer
 33770 ;;		_I2C1_SetDataCompleteCallback
 33771 ;; This function is called by:
 33772 ;;		_I2C1_DO_TX
 33773 ;;		_I2C1_DO_RX
 33774 ;;		_I2C1_DO_TX_EMPTY
 33775 ;;		_I2C1_DO_ADDRESS_NACK
 33776 ;; This function uses a non-reentrant model
 33777 ;;
 33778                           
 33779                           	psect	text171
 33780  009872                     __ptext171:
 33781                           	callstack 0
 33782  009872                     _wr2RegCompleteHandler:
 33783                           	callstack 14
 33784                           
 33785                           ; BSR set to: 2
 33786                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 33787                           
 33788                           ;incstack = 0
 33789  009872  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33790  009876  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33791  00987A  0E00               	movlw	0
 33792  00987C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33793  00987E  0E02               	movlw	2
 33794  009880  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33795  009882  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33796                           
 33797                           ; BSR set to: 2
 33798                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33799  009886  0E00               	movlw	0
 33800  009888  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33801  00988A  0E00               	movlw	0
 33802  00988C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33803  00988E  0E00               	movlw	0
 33804  009890  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33805  009892  0E00               	movlw	0
 33806  009894  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33807  009896  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33808                           
 33809                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 33810  00989A  0E04               	movlw	4
 33811  00989C  0012               	return		;funcret
 33812  00989E                     __end_of_wr2RegCompleteHandler:
 33813                           	callstack 0
 33814                           
 33815 ;; *************** function _rd2RegCompleteHandler *****************
 33816 ;; Defined at:
 33817 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33818 ;; Parameters:    Size  Location     Type
 33819 ;;  p               2   24[COMRAM] PTR void 
 33820 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33821 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33822 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33823 ;; Auto vars:     Size  Location     Type
 33824 ;;		None
 33825 ;; Return value:  Size  Location     Type
 33826 ;;                  1    wreg      enum E360
 33827 ;; Registers used:
 33828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33829 ;; Tracked objects:
 33830 ;;		On entry : 3F/2
 33831 ;;		On exit  : 0/0
 33832 ;;		Unchanged: 0/0
 33833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33838 ;;Total ram usage:        2 bytes
 33839 ;; Hardware stack levels used: 1
 33840 ;; Hardware stack levels required when called: 6
 33841 ;; This function calls:
 33842 ;;		_I2C1_SetBuffer
 33843 ;;		_I2C1_SetDataCompleteCallback
 33844 ;; This function is called by:
 33845 ;;		_I2C1_DO_TX
 33846 ;;		_I2C1_DO_RX
 33847 ;;		_I2C1_DO_TX_EMPTY
 33848 ;;		_I2C1_DO_ADDRESS_NACK
 33849 ;; This function uses a non-reentrant model
 33850 ;;
 33851                           
 33852                           	psect	text172
 33853  00989E                     __ptext172:
 33854                           	callstack 0
 33855  00989E                     _rd2RegCompleteHandler:
 33856                           	callstack 14
 33857                           
 33858                           ; BSR set to: 2
 33859                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 33860                           
 33861                           ;incstack = 0
 33862  00989E  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33863  0098A2  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33864  0098A6  0E00               	movlw	0
 33865  0098A8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33866  0098AA  0E02               	movlw	2
 33867  0098AC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33868  0098AE  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33869                           
 33870                           ; BSR set to: 2
 33871                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33872  0098B2  0E00               	movlw	0
 33873  0098B4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33874  0098B6  0E00               	movlw	0
 33875  0098B8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33876  0098BA  0E00               	movlw	0
 33877  0098BC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33878  0098BE  0E00               	movlw	0
 33879  0098C0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33880  0098C2  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33881                           
 33882                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 33883  0098C6  0E02               	movlw	2
 33884  0098C8  0012               	return		;funcret
 33885  0098CA                     __end_of_rd2RegCompleteHandler:
 33886                           	callstack 0
 33887                           
 33888 ;; *************** function _rd1RegCompleteHandler *****************
 33889 ;; Defined at:
 33890 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33891 ;; Parameters:    Size  Location     Type
 33892 ;;  p               2   24[COMRAM] PTR void 
 33893 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33894 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33895 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33896 ;; Auto vars:     Size  Location     Type
 33897 ;;		None
 33898 ;; Return value:  Size  Location     Type
 33899 ;;                  1    wreg      enum E360
 33900 ;; Registers used:
 33901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33902 ;; Tracked objects:
 33903 ;;		On entry : 3F/2
 33904 ;;		On exit  : 0/0
 33905 ;;		Unchanged: 0/0
 33906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33911 ;;Total ram usage:        2 bytes
 33912 ;; Hardware stack levels used: 1
 33913 ;; Hardware stack levels required when called: 6
 33914 ;; This function calls:
 33915 ;;		_I2C1_SetBuffer
 33916 ;;		_I2C1_SetDataCompleteCallback
 33917 ;; This function is called by:
 33918 ;;		_I2C1_DO_TX
 33919 ;;		_I2C1_DO_RX
 33920 ;;		_I2C1_DO_TX_EMPTY
 33921 ;;		_I2C1_DO_ADDRESS_NACK
 33922 ;; This function uses a non-reentrant model
 33923 ;;
 33924                           
 33925                           	psect	text173
 33926  0098CA                     __ptext173:
 33927                           	callstack 0
 33928  0098CA                     _rd1RegCompleteHandler:
 33929                           	callstack 14
 33930                           
 33931                           ; BSR set to: 2
 33932                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 33933                           
 33934                           ;incstack = 0
 33935  0098CA  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33936  0098CE  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33937  0098D2  0E00               	movlw	0
 33938  0098D4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33939  0098D6  0E01               	movlw	1
 33940  0098D8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33941  0098DA  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 33942                           
 33943                           ; BSR set to: 2
 33944                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33945  0098DE  0E00               	movlw	0
 33946  0098E0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33947  0098E2  0E00               	movlw	0
 33948  0098E4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33949  0098E6  0E00               	movlw	0
 33950  0098E8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33951  0098EA  0E00               	movlw	0
 33952  0098EC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33953  0098EE  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33954                           
 33955                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 33956  0098F2  0E02               	movlw	2
 33957  0098F4  0012               	return		;funcret
 33958  0098F6                     __end_of_rd1RegCompleteHandler:
 33959                           	callstack 0
 33960                           
 33961 ;; *************** function _wr1RegCompleteHandler *****************
 33962 ;; Defined at:
 33963 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33964 ;; Parameters:    Size  Location     Type
 33965 ;;  p               2   24[COMRAM] PTR void 
 33966 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33967 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33968 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33969 ;; Auto vars:     Size  Location     Type
 33970 ;;		None
 33971 ;; Return value:  Size  Location     Type
 33972 ;;                  1    wreg      enum E360
 33973 ;; Registers used:
 33974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33975 ;; Tracked objects:
 33976 ;;		On entry : 3F/2
 33977 ;;		On exit  : 0/0
 33978 ;;		Unchanged: 0/0
 33979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33984 ;;Total ram usage:        2 bytes
 33985 ;; Hardware stack levels used: 1
 33986 ;; Hardware stack levels required when called: 6
 33987 ;; This function calls:
 33988 ;;		_I2C1_SetBuffer
 33989 ;;		_I2C1_SetDataCompleteCallback
 33990 ;; This function is called by:
 33991 ;;		_I2C1_DO_TX
 33992 ;;		_I2C1_DO_RX
 33993 ;;		_I2C1_DO_TX_EMPTY
 33994 ;;		_I2C1_DO_ADDRESS_NACK
 33995 ;; This function uses a non-reentrant model
 33996 ;;
 33997                           
 33998                           	psect	text174
 33999  0098F6                     __ptext174:
 34000                           	callstack 0
 34001  0098F6                     _wr1RegCompleteHandler:
 34002                           	callstack 14
 34003                           
 34004                           ; BSR set to: 2
 34005                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 34006                           
 34007                           ;incstack = 0
 34008  0098F6  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34009  0098FA  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34010  0098FE  0E00               	movlw	0
 34011  009900  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34012  009902  0E01               	movlw	1
 34013  009904  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34014  009906  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 34015                           
 34016                           ; BSR set to: 2
 34017                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34018  00990A  0E00               	movlw	0
 34019  00990C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34020  00990E  0E00               	movlw	0
 34021  009910  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34022  009912  0E00               	movlw	0
 34023  009914  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34024  009916  0E00               	movlw	0
 34025  009918  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34026  00991A  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34027                           
 34028                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 34029  00991E  0E04               	movlw	4
 34030  009920  0012               	return		;funcret
 34031  009922                     __end_of_wr1RegCompleteHandler:
 34032                           	callstack 0
 34033                           
 34034 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 34035 ;; Defined at:
 34036 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 34037 ;; Parameters:    Size  Location     Type
 34038 ;;  ptr             2   24[COMRAM] PTR void 
 34039 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34040 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34041 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34042 ;; Auto vars:     Size  Location     Type
 34043 ;;		None
 34044 ;; Return value:  Size  Location     Type
 34045 ;;                  1    wreg      enum E527
 34046 ;; Registers used:
 34047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34048 ;; Tracked objects:
 34049 ;;		On entry : 3F/2
 34050 ;;		On exit  : 0/0
 34051 ;;		Unchanged: 0/0
 34052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34057 ;;Total ram usage:        2 bytes
 34058 ;; Hardware stack levels used: 1
 34059 ;; Hardware stack levels required when called: 6
 34060 ;; This function calls:
 34061 ;;		_I2C1_SetBuffer
 34062 ;;		_I2C1_SetDataCompleteCallback
 34063 ;; This function is called by:
 34064 ;;		_I2C1_DO_TX
 34065 ;;		_I2C1_DO_RX
 34066 ;;		_I2C1_DO_TX_EMPTY
 34067 ;;		_I2C1_DO_ADDRESS_NACK
 34068 ;; This function uses a non-reentrant model
 34069 ;;
 34070                           
 34071                           	psect	text175
 34072  009922                     __ptext175:
 34073                           	callstack 0
 34074  009922                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 34075                           	callstack 14
 34076                           
 34077                           ; BSR set to: 2
 34078                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 34079                           
 34080                           ;incstack = 0
 34081  009922  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 34082  009926  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 34083  00992A  0E00               	movlw	0
 34084  00992C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34085  00992E  0E02               	movlw	2
 34086  009930  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34087  009932  EC06  F04E         	call	_I2C1_SetBuffer	;wreg free
 34088                           
 34089                           ; BSR set to: 2
 34090                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 34091  009936  0E00               	movlw	0
 34092  009938  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34093  00993A  0E00               	movlw	0
 34094  00993C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34095  00993E  0E00               	movlw	0
 34096  009940  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34097  009942  0E00               	movlw	0
 34098  009944  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34099  009946  EC43  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34100                           
 34101                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 34102  00994A  0E04               	movlw	4
 34103  00994C  0012               	return		;funcret
 34104  00994E                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 34105                           	callstack 0
 34106                           
 34107 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 34108 ;; Defined at:
 34109 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 34110 ;; Parameters:    Size  Location     Type
 34111 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 34112 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34113 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34114 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34115 ;;  ptr             2   22[COMRAM] PTR void 
 34116 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34117 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34118 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34119 ;; Auto vars:     Size  Location     Type
 34120 ;;		None
 34121 ;; Return value:  Size  Location     Type
 34122 ;;                  1    wreg      void 
 34123 ;; Registers used:
 34124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34125 ;; Tracked objects:
 34126 ;;		On entry : 33/2
 34127 ;;		On exit  : 0/0
 34128 ;;		Unchanged: 0/0
 34129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34133 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34134 ;;Total ram usage:        4 bytes
 34135 ;; Hardware stack levels used: 1
 34136 ;; Hardware stack levels required when called: 5
 34137 ;; This function calls:
 34138 ;;		_I2C1_SetCallback
 34139 ;; This function is called by:
 34140 ;;		_wr1RegCompleteHandler
 34141 ;;		_rd1RegCompleteHandler
 34142 ;;		_rd2RegCompleteHandler
 34143 ;;		_wr2RegCompleteHandler
 34144 ;;		_rdBlkRegCompleteHandler
 34145 ;;		_i2c_readDataBlock
 34146 ;;		_I2C1_Read1ByteRegister
 34147 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34148 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34149 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34150 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34151 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34152 ;; This function uses a non-reentrant model
 34153 ;;
 34154                           
 34155                           	psect	text176
 34156  009C86                     __ptext176:
 34157                           	callstack 0
 34158  009C86                     _I2C1_SetDataCompleteCallback:
 34159                           	callstack 20
 34160                           
 34161                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 34162                           
 34163                           ;incstack = 0
 34164  009C86  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 34165  009C8A  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 34166  009C8E  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 34167  009C92  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 34168  009C96  0E00               	movlw	0
 34169  009C98  ECAD  F045         	call	_I2C1_SetCallback
 34170  009C9C  0012               	return		;funcret
 34171  009C9E                     __end_of_I2C1_SetDataCompleteCallback:
 34172                           	callstack 0
 34173                           
 34174 ;; *************** function _I2C1_SetCallback *****************
 34175 ;; Defined at:
 34176 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 34177 ;; Parameters:    Size  Location     Type
 34178 ;;  idx             1    wreg     enum E10460
 34179 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 34180 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34181 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34182 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34183 ;;  ptr             2   17[COMRAM] PTR void 
 34184 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34185 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34186 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34187 ;; Auto vars:     Size  Location     Type
 34188 ;;  idx             1   19[COMRAM] enum E10460
 34189 ;; Return value:  Size  Location     Type
 34190 ;;                  1    wreg      void 
 34191 ;; Registers used:
 34192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34193 ;; Tracked objects:
 34194 ;;		On entry : 33/2
 34195 ;;		On exit  : 0/0
 34196 ;;		Unchanged: 0/0
 34197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34201 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34202 ;;Total ram usage:        5 bytes
 34203 ;; Hardware stack levels used: 1
 34204 ;; Hardware stack levels required when called: 4
 34205 ;; This function calls:
 34206 ;;		Nothing
 34207 ;; This function is called by:
 34208 ;;		_I2C1_SetDataCompleteCallback
 34209 ;;		_I2C1_SetAddressNackCallback
 34210 ;; This function uses a non-reentrant model
 34211 ;;
 34212                           
 34213                           	psect	text177
 34214  008B5A                     __ptext177:
 34215                           	callstack 0
 34216  008B5A                     _I2C1_SetCallback:
 34217                           	callstack 20
 34218                           
 34219                           ;incstack = 0
 34220                           ;I2C1_SetCallback@idx stored from wreg
 34221  008B5A  6E14               	movwf	I2C1_SetCallback@idx^0,c
 34222                           
 34223                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 34224  008B5C  5010               	movf	I2C1_SetCallback@cb^0,w,c
 34225  008B5E  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 34226  008B60  B4D8               	btfsc	status,2,c
 34227  008B62  D019               	goto	l19978
 34228                           
 34229                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 34230  008B64  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34231  008B66  0D02               	mullw	2
 34232  008B68  0E3C               	movlw	low _I2C1_Status
 34233  008B6A  24F3               	addwf	243,w,c
 34234  008B6C  6ED9               	movwf	fsr2l,c
 34235  008B6E  0E02               	movlw	high _I2C1_Status
 34236  008B70  20F4               	addwfc	prodh,w,c
 34237  008B72  6EDA               	movwf	fsr2h,c
 34238  008B74  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 34239  008B78  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 34240                           
 34241                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 34242  008B7C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34243  008B7E  0D02               	mullw	2
 34244  008B80  0E48               	movlw	low (_I2C1_Status+12)
 34245  008B82  24F3               	addwf	243,w,c
 34246  008B84  6ED9               	movwf	fsr2l,c
 34247  008B86  0E02               	movlw	high (_I2C1_Status+12)
 34248  008B88  20F4               	addwfc	prodh,w,c
 34249  008B8A  6EDA               	movwf	fsr2h,c
 34250  008B8C  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 34251  008B90  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 34252                           
 34253                           ;mcc_generated_files/i2c1_master.c: 304:     }
 34254  008B94  0012               	return	
 34255  008B96                     l19978:
 34256                           
 34257                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 34258  008B96  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34259  008B98  0D02               	mullw	2
 34260  008B9A  0E3C               	movlw	low _I2C1_Status
 34261  008B9C  24F3               	addwf	243,w,c
 34262  008B9E  6ED9               	movwf	fsr2l,c
 34263  008BA0  0E02               	movlw	high _I2C1_Status
 34264  008BA2  20F4               	addwfc	prodh,w,c
 34265  008BA4  6EDA               	movwf	fsr2h,c
 34266  008BA6  0EA2               	movlw	low _I2C1_CallbackReturnStop
 34267  008BA8  6EDE               	movwf	postinc2,c
 34268  008BAA  0E9E               	movlw	high _I2C1_CallbackReturnStop
 34269  008BAC  6EDD               	movwf	postdec2,c
 34270                           
 34271                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 34272  008BAE  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34273  008BB0  0D02               	mullw	2
 34274  008BB2  0E48               	movlw	low (_I2C1_Status+12)
 34275  008BB4  24F3               	addwf	243,w,c
 34276  008BB6  6ED9               	movwf	fsr2l,c
 34277  008BB8  0E02               	movlw	high (_I2C1_Status+12)
 34278  008BBA  20F4               	addwfc	prodh,w,c
 34279  008BBC  6EDA               	movwf	fsr2h,c
 34280  008BBE  0E00               	movlw	0
 34281  008BC0  6EDE               	movwf	postinc2,c
 34282  008BC2  0E00               	movlw	0
 34283  008BC4  6EDD               	movwf	postdec2,c
 34284  008BC6  0012               	return		;funcret
 34285  008BC8                     __end_of_I2C1_SetCallback:
 34286                           	callstack 0
 34287                           
 34288 ;; *************** function _I2C1_SetBuffer *****************
 34289 ;; Defined at:
 34290 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 34291 ;; Parameters:    Size  Location     Type
 34292 ;;  buffer          2   15[COMRAM] PTR void 
 34293 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 34294 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 34295 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 34296 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 34297 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 34298 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 34299 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34300 ;;  bufferSize      2   17[COMRAM] unsigned int 
 34301 ;; Auto vars:     Size  Location     Type
 34302 ;;		None
 34303 ;; Return value:  Size  Location     Type
 34304 ;;                  1    wreg      void 
 34305 ;; Registers used:
 34306 ;;		wreg, status,2, status,0
 34307 ;; Tracked objects:
 34308 ;;		On entry : 0/2
 34309 ;;		On exit  : 3F/2
 34310 ;;		Unchanged: 0/0
 34311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34315 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34316 ;;Total ram usage:        4 bytes
 34317 ;; Hardware stack levels used: 1
 34318 ;; Hardware stack levels required when called: 4
 34319 ;; This function calls:
 34320 ;;		Nothing
 34321 ;; This function is called by:
 34322 ;;		_wr1RegCompleteHandler
 34323 ;;		_i2c_writeNBytes
 34324 ;;		_rd1RegCompleteHandler
 34325 ;;		_rd2RegCompleteHandler
 34326 ;;		_wr2RegCompleteHandler
 34327 ;;		_rdBlkRegCompleteHandler
 34328 ;;		_i2c_readDataBlock
 34329 ;;		_I2C1_Read1ByteRegister
 34330 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34331 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34332 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34333 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34334 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34335 ;; This function uses a non-reentrant model
 34336 ;;
 34337                           
 34338                           	psect	text178
 34339  009C0C                     __ptext178:
 34340                           	callstack 0
 34341  009C0C                     _I2C1_SetBuffer:
 34342                           	callstack 21
 34343                           
 34344                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34345                           
 34346                           ;incstack = 0
 34347  009C0C  0102               	movlb	2	; () banked
 34348  009C0E  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34349  009C10  0012               	return	
 34350                           
 34351                           ; BSR set to: 2
 34352                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34353  009C12  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34354  009C16  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34355                           
 34356                           ; BSR set to: 2
 34357                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34358  009C1A  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34359  009C1E  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34360                           
 34361                           ; BSR set to: 2
 34362                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34363  009C22  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34364                           
 34365                           ; BSR set to: 2
 34366  009C24  0012               	return		;funcret
 34367  009C26                     __end_of_I2C1_SetBuffer:
 34368                           	callstack 0
 34369                           
 34370 ;; *************** function _I2C1_MasterStop *****************
 34371 ;; Defined at:
 34372 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34373 ;; Parameters:    Size  Location     Type
 34374 ;;		None
 34375 ;; Auto vars:     Size  Location     Type
 34376 ;;		None
 34377 ;; Return value:  Size  Location     Type
 34378 ;;                  1    wreg      void 
 34379 ;; Registers used:
 34380 ;;		None
 34381 ;; Tracked objects:
 34382 ;;		On entry : 0/2
 34383 ;;		On exit  : 0/0
 34384 ;;		Unchanged: 0/0
 34385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34390 ;;Total ram usage:        0 bytes
 34391 ;; Hardware stack levels used: 1
 34392 ;; Hardware stack levels required when called: 4
 34393 ;; This function calls:
 34394 ;;		Nothing
 34395 ;; This function is called by:
 34396 ;;		_I2C1_DO_SEND_STOP
 34397 ;; This function uses a non-reentrant model
 34398 ;;
 34399                           
 34400                           	psect	text179
 34401  009EA6                     __ptext179:
 34402                           	callstack 0
 34403  009EA6                     _I2C1_MasterStop:
 34404                           	callstack 15
 34405                           
 34406                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34407                           
 34408                           ; BSR set to: 2
 34409                           ;incstack = 0
 34410  009EA6  8497               	bsf	151,2,c	;volatile
 34411  009EA8  0012               	return		;funcret
 34412  009EAA                     __end_of_I2C1_MasterStop:
 34413                           	callstack 0
 34414                           
 34415 ;; *************** function _I2C1_MasterEnableRestart *****************
 34416 ;; Defined at:
 34417 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34418 ;; Parameters:    Size  Location     Type
 34419 ;;		None
 34420 ;; Auto vars:     Size  Location     Type
 34421 ;;		None
 34422 ;; Return value:  Size  Location     Type
 34423 ;;                  1    wreg      void 
 34424 ;; Registers used:
 34425 ;;		None
 34426 ;; Tracked objects:
 34427 ;;		On entry : 0/2
 34428 ;;		On exit  : 0/0
 34429 ;;		Unchanged: 0/0
 34430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34435 ;;Total ram usage:        0 bytes
 34436 ;; Hardware stack levels used: 1
 34437 ;; Hardware stack levels required when called: 4
 34438 ;; This function calls:
 34439 ;;		Nothing
 34440 ;; This function is called by:
 34441 ;;		_I2C1_DO_SEND_RESTART_READ
 34442 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34443 ;;		_I2C1_DO_SEND_RESTART
 34444 ;; This function uses a non-reentrant model
 34445 ;;
 34446                           
 34447                           	psect	text180
 34448  009EAA                     __ptext180:
 34449                           	callstack 0
 34450  009EAA                     _I2C1_MasterEnableRestart:
 34451                           	callstack 15
 34452                           
 34453                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34454                           
 34455                           ;incstack = 0
 34456  009EAA  8297               	bsf	151,1,c	;volatile
 34457  009EAC  0012               	return		;funcret
 34458  009EAE                     __end_of_I2C1_MasterEnableRestart:
 34459                           	callstack 0
 34460                           
 34461 ;; *************** function _I2C1_MasterStart *****************
 34462 ;; Defined at:
 34463 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34464 ;; Parameters:    Size  Location     Type
 34465 ;;		None
 34466 ;; Auto vars:     Size  Location     Type
 34467 ;;		None
 34468 ;; Return value:  Size  Location     Type
 34469 ;;                  1    wreg      void 
 34470 ;; Registers used:
 34471 ;;		None
 34472 ;; Tracked objects:
 34473 ;;		On entry : 3F/2
 34474 ;;		On exit  : 3F/2
 34475 ;;		Unchanged: 3F/0
 34476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34481 ;;Total ram usage:        0 bytes
 34482 ;; Hardware stack levels used: 1
 34483 ;; Hardware stack levels required when called: 4
 34484 ;; This function calls:
 34485 ;;		Nothing
 34486 ;; This function is called by:
 34487 ;;		_I2C1_MasterOperation
 34488 ;; This function uses a non-reentrant model
 34489 ;;
 34490                           
 34491                           	psect	text181
 34492  009EAE                     __ptext181:
 34493                           	callstack 0
 34494  009EAE                     _I2C1_MasterStart:
 34495                           	callstack 19
 34496                           
 34497                           ; BSR set to: 2
 34498                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34499                           
 34500                           ;incstack = 0
 34501  009EAE  8097               	bsf	151,0,c	;volatile
 34502                           
 34503                           ; BSR set to: 2
 34504  009EB0  0012               	return		;funcret
 34505  009EB2                     __end_of_I2C1_MasterStart:
 34506                           	callstack 0
 34507                           
 34508 ;; *************** function _I2C1_Close *****************
 34509 ;; Defined at:
 34510 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34511 ;; Parameters:    Size  Location     Type
 34512 ;;		None
 34513 ;; Auto vars:     Size  Location     Type
 34514 ;;  returnValue     1   15[COMRAM] enum E355
 34515 ;; Return value:  Size  Location     Type
 34516 ;;                  1    wreg      enum E355
 34517 ;; Registers used:
 34518 ;;		wreg, status,2, cstack
 34519 ;; Tracked objects:
 34520 ;;		On entry : 0/2
 34521 ;;		On exit  : 33/2
 34522 ;;		Unchanged: 0/0
 34523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34528 ;;Total ram usage:        1 bytes
 34529 ;; Hardware stack levels used: 1
 34530 ;; Hardware stack levels required when called: 5
 34531 ;; This function calls:
 34532 ;;		_I2C1_MasterClearIrq
 34533 ;;		_I2C1_MasterClose
 34534 ;;		_I2C1_MasterDisableIrq
 34535 ;; This function is called by:
 34536 ;;		_i2c_writeNBytes
 34537 ;;		_i2c_readDataBlock
 34538 ;;		_I2C1_Read1ByteRegister
 34539 ;; This function uses a non-reentrant model
 34540 ;;
 34541                           
 34542                           	psect	text182
 34543  009AF0                     __ptext182:
 34544                           	callstack 0
 34545  009AF0                     _I2C1_Close:
 34546                           	callstack 20
 34547                           
 34548                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34549                           
 34550                           ; BSR set to: 2
 34551                           ;incstack = 0
 34552  009AF0  0E01               	movlw	1
 34553  009AF2  6E10               	movwf	I2C1_Close@returnValue^0,c
 34554                           
 34555                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34556  009AF4  0102               	movlb	2	; () banked
 34557  009AF6  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34558  009AF8  D00A               	goto	l20412
 34559                           
 34560                           ; BSR set to: 2
 34561                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34562  009AFA  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34563                           
 34564                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34565  009AFC  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34566                           
 34567                           ; BSR set to: 2
 34568                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34569  009AFE  EC3E  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 34570                           
 34571                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34572  009B02  EC59  F04F         	call	_I2C1_MasterDisableIrq	;wreg free
 34573                           
 34574                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34575  009B06  EC5B  F04F         	call	_I2C1_MasterClose	;wreg free
 34576                           
 34577                           ; BSR set to: 14
 34578                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34579  009B0A  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34580  009B0E                     l20412:
 34581                           
 34582                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34583  009B0E  5010               	movf	I2C1_Close@returnValue^0,w,c
 34584  009B10  0012               	return		;funcret
 34585  009B12                     __end_of_I2C1_Close:
 34586                           	callstack 0
 34587                           
 34588 ;; *************** function _I2C1_MasterDisableIrq *****************
 34589 ;; Defined at:
 34590 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34591 ;; Parameters:    Size  Location     Type
 34592 ;;		None
 34593 ;; Auto vars:     Size  Location     Type
 34594 ;;		None
 34595 ;; Return value:  Size  Location     Type
 34596 ;;                  1    wreg      void 
 34597 ;; Registers used:
 34598 ;;		None
 34599 ;; Tracked objects:
 34600 ;;		On entry : 3F/E
 34601 ;;		On exit  : 3F/E
 34602 ;;		Unchanged: 0/0
 34603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34608 ;;Total ram usage:        0 bytes
 34609 ;; Hardware stack levels used: 1
 34610 ;; Hardware stack levels required when called: 4
 34611 ;; This function calls:
 34612 ;;		Nothing
 34613 ;; This function is called by:
 34614 ;;		_I2C1_Close
 34615 ;; This function uses a non-reentrant model
 34616 ;;
 34617                           
 34618                           	psect	text183
 34619  009EB2                     __ptext183:
 34620                           	callstack 0
 34621  009EB2                     _I2C1_MasterDisableIrq:
 34622                           	callstack 20
 34623                           
 34624                           ; BSR set to: 14
 34625                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34626                           
 34627                           ;incstack = 0
 34628  009EB2  91C5               	bcf	197,0,b	;volatile
 34629                           
 34630                           ; BSR set to: 14
 34631  009EB4  0012               	return		;funcret
 34632  009EB6                     __end_of_I2C1_MasterDisableIrq:
 34633                           	callstack 0
 34634                           
 34635 ;; *************** function _I2C1_MasterClose *****************
 34636 ;; Defined at:
 34637 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34638 ;; Parameters:    Size  Location     Type
 34639 ;;		None
 34640 ;; Auto vars:     Size  Location     Type
 34641 ;;		None
 34642 ;; Return value:  Size  Location     Type
 34643 ;;                  1    wreg      void 
 34644 ;; Registers used:
 34645 ;;		None
 34646 ;; Tracked objects:
 34647 ;;		On entry : 3F/E
 34648 ;;		On exit  : 3F/E
 34649 ;;		Unchanged: 3F/0
 34650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34655 ;;Total ram usage:        0 bytes
 34656 ;; Hardware stack levels used: 1
 34657 ;; Hardware stack levels required when called: 4
 34658 ;; This function calls:
 34659 ;;		Nothing
 34660 ;; This function is called by:
 34661 ;;		_I2C1_Close
 34662 ;; This function uses a non-reentrant model
 34663 ;;
 34664                           
 34665                           	psect	text184
 34666  009EB6                     __ptext184:
 34667                           	callstack 0
 34668  009EB6                     _I2C1_MasterClose:
 34669                           	callstack 20
 34670                           
 34671                           ; BSR set to: 14
 34672                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34673                           
 34674                           ; BSR set to: 14
 34675                           ;incstack = 0
 34676  009EB6  9A96               	bcf	150,5,c	;volatile
 34677                           
 34678                           ; BSR set to: 14
 34679  009EB8  0012               	return		;funcret
 34680  009EBA                     __end_of_I2C1_MasterClose:
 34681                           	callstack 0
 34682                           
 34683 ;; *************** function _I2C1_MasterClearIrq *****************
 34684 ;; Defined at:
 34685 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 34686 ;; Parameters:    Size  Location     Type
 34687 ;;		None
 34688 ;; Auto vars:     Size  Location     Type
 34689 ;;		None
 34690 ;; Return value:  Size  Location     Type
 34691 ;;                  1    wreg      void 
 34692 ;; Registers used:
 34693 ;;		None
 34694 ;; Tracked objects:
 34695 ;;		On entry : 33/2
 34696 ;;		On exit  : 3F/E
 34697 ;;		Unchanged: 0/0
 34698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34703 ;;Total ram usage:        0 bytes
 34704 ;; Hardware stack levels used: 1
 34705 ;; Hardware stack levels required when called: 4
 34706 ;; This function calls:
 34707 ;;		Nothing
 34708 ;; This function is called by:
 34709 ;;		_I2C1_Open
 34710 ;;		_I2C1_Close
 34711 ;;		_I2C1_MasterFsm
 34712 ;; This function uses a non-reentrant model
 34713 ;;
 34714                           
 34715                           	psect	text185
 34716  009E7C                     __ptext185:
 34717                           	callstack 0
 34718  009E7C                     _I2C1_MasterClearIrq:
 34719                           	callstack 20
 34720                           
 34721                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 34722                           
 34723                           ; BSR set to: 14
 34724                           ;incstack = 0
 34725  009E7C  010E               	movlb	14	; () banked
 34726  009E7E  91CD               	bcf	205,0,b	;volatile
 34727                           
 34728                           ; BSR set to: 14
 34729  009E80  0012               	return		;funcret
 34730  009E82                     __end_of_I2C1_MasterClearIrq:
 34731                           	callstack 0
 34732                           
 34733 ;; *************** function _INTERRUPT_InterruptManager *****************
 34734 ;; Defined at:
 34735 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 34736 ;; Parameters:    Size  Location     Type
 34737 ;;		None
 34738 ;; Auto vars:     Size  Location     Type
 34739 ;;		None
 34740 ;; Return value:  Size  Location     Type
 34741 ;;                  1    wreg      void 
 34742 ;; Registers used:
 34743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34744 ;; Tracked objects:
 34745 ;;		On entry : 0/0
 34746 ;;		On exit  : 0/0
 34747 ;;		Unchanged: 0/0
 34748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34751 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34752 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34753 ;;Total ram usage:        6 bytes
 34754 ;; Hardware stack levels used: 1
 34755 ;; Hardware stack levels required when called: 3
 34756 ;; This function calls:
 34757 ;;		Absolute function
 34758 ;;		_EUSART1_Receive_ISR
 34759 ;;		_EUSART1_Transmit_ISR
 34760 ;;		_TMR0_ISR
 34761 ;;		_TMR1_ISR
 34762 ;;		_TMR2_ISR
 34763 ;; This function is called by:
 34764 ;;		Interrupt level 2
 34765 ;; This function uses a non-reentrant model
 34766 ;;
 34767                           
 34768                           	psect	intcode
 34769  000008                     __pintcode:
 34770                           	callstack 0
 34771  000008                     _INTERRUPT_InterruptManager:
 34772                           	callstack 14
 34773                           
 34774                           ; BSR set to: 14
 34775                           ;incstack = 0
 34776  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34777  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 34778  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 34779  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 34780  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 34781  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 34782  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 34783                           
 34784                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 34785  000022  010E               	movlb	14	; () banked
 34786  000024  BBC2               	btfsc	194,5,b	;volatile
 34787                           
 34788                           ; BSR set to: 14
 34789  000026  ABCA               	btfss	202,5,b	;volatile
 34790  000028  D003               	goto	i2l867
 34791                           
 34792                           ; BSR set to: 14
 34793                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 34794  00002A  EC1E  F04D         	call	_TMR0_ISR	;wreg free
 34795                           
 34796                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 34797  00002E  D028               	goto	i2l873
 34798  000030                     i2l867:
 34799                           
 34800                           ; BSR set to: 14
 34801  000030  ACF2               	btfss	242,6,c	;volatile
 34802  000032  D026               	goto	i2l873
 34803                           
 34804                           ; BSR set to: 14
 34805                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 34806  000034  B9C5               	btfsc	197,4,b	;volatile
 34807                           
 34808                           ; BSR set to: 14
 34809  000036  A9CD               	btfss	205,4,b	;volatile
 34810  000038  D009               	goto	i2l870
 34811                           
 34812                           ; BSR set to: 14
 34813                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 34814  00003A  D801               	call	i2u2300_48
 34815  00003C  D021               	goto	i2l873
 34816  00003E                     i2u2300_48:
 34817  00003E  0005               	push	
 34818  000040  6EFA               	movwf	pclath,c
 34819  000042  0102               	movlb	2	; () banked
 34820  000044  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 34821  000046  6EFD               	movwf	tosl,c
 34822  000048  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 34823  00004A  D00B               	goto	L112
 34824  00004C                     i2l870:
 34825                           
 34826                           ; BSR set to: 14
 34827  00004C  BBC5               	btfsc	197,5,b	;volatile
 34828                           
 34829                           ; BSR set to: 14
 34830  00004E  ABCD               	btfss	205,5,b	;volatile
 34831  000050  D00C               	goto	i2l872
 34832                           
 34833                           ; BSR set to: 14
 34834                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 34835  000052  D801               	call	i2u2303_48
 34836  000054  D015               	goto	i2l873
 34837  000056                     i2u2303_48:
 34838  000056  0005               	push	
 34839  000058  6EFA               	movwf	pclath,c
 34840  00005A  0102               	movlb	2	; () banked
 34841  00005C  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 34842  00005E  6EFD               	movwf	tosl,c
 34843  000060  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 34844  000062                     L112:
 34845  000062  6EFE               	movwf	tosh,c
 34846  000064  6AFF               	clrf	tosu,c
 34847  000066  50FA               	movf	pclath,w,c
 34848  000068  0012               	return		;indir
 34849  00006A                     i2l872:
 34850                           
 34851                           ; BSR set to: 14
 34852  00006A  B1C6               	btfsc	198,0,b	;volatile
 34853                           
 34854                           ; BSR set to: 14
 34855  00006C  A1CE               	btfss	206,0,b	;volatile
 34856  00006E  D003               	goto	i2l874
 34857                           
 34858                           ; BSR set to: 14
 34859                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 34860  000070  EC94  F04A         	call	_TMR1_ISR	;wreg free
 34861                           
 34862                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 34863  000074  D005               	goto	i2l873
 34864  000076                     i2l874:
 34865                           
 34866                           ; BSR set to: 14
 34867  000076  B3C6               	btfsc	198,1,b	;volatile
 34868                           
 34869                           ; BSR set to: 14
 34870  000078  A3CE               	btfss	206,1,b	;volatile
 34871  00007A  D002               	goto	i2l873
 34872                           
 34873                           ; BSR set to: 14
 34874                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 34875  00007C  ECDC  F035         	call	_TMR2_ISR	;wreg free
 34876  000080                     i2l873:
 34877                           
 34878                           ; BSR set to: 14
 34879  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 34880  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 34881  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 34882  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 34883  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 34884  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 34885  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34886  00009A  0011               	retfie		f
 34887  00009C                     __end_of_INTERRUPT_InterruptManager:
 34888                           	callstack 0
 34889                           
 34890 ;; *************** function _TMR2_ISR *****************
 34891 ;; Defined at:
 34892 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 34893 ;; Parameters:    Size  Location     Type
 34894 ;;		None
 34895 ;; Auto vars:     Size  Location     Type
 34896 ;;		None
 34897 ;; Return value:  Size  Location     Type
 34898 ;;                  1    wreg      void 
 34899 ;; Registers used:
 34900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34901 ;; Tracked objects:
 34902 ;;		On entry : 3F/E
 34903 ;;		On exit  : 0/0
 34904 ;;		Unchanged: 0/0
 34905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34910 ;;Total ram usage:        0 bytes
 34911 ;; Hardware stack levels used: 1
 34912 ;; Hardware stack levels required when called: 2
 34913 ;; This function calls:
 34914 ;;		Absolute function
 34915 ;;		_ReadADC
 34916 ;;		_TMR2_DefaultInterruptHandler
 34917 ;;		_controlTimeslots
 34918 ;;		_refreshSegment
 34919 ;; This function is called by:
 34920 ;;		_INTERRUPT_InterruptManager
 34921 ;; This function uses a non-reentrant model
 34922 ;;
 34923                           
 34924                           	psect	text187
 34925  006BB8                     __ptext187:
 34926                           	callstack 0
 34927  006BB8                     _TMR2_ISR:
 34928                           	callstack 14
 34929                           
 34930                           ; BSR set to: 14
 34931                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 34932                           
 34933                           ;incstack = 0
 34934  006BB8  93CE               	bcf	206,1,b	;volatile
 34935                           
 34936                           ; BSR set to: 14
 34937                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 34938  006BBA  EC47  F048         	call	_ReadADC	;wreg free
 34939                           
 34940                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 34941  006BBE  ECDF  F041         	call	_refreshSegment	;wreg free
 34942                           
 34943                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 34944  006BC2  0101               	movlb	1	; () banked
 34945  006BC4  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 34946  006BC6  A4D8               	btfss	status,2,c
 34947                           
 34948                           ; BSR set to: 1
 34949                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 34950  006BC8  07A2               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 34951                           
 34952                           ; BSR set to: 1
 34953                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 34954  006BCA  51A0               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 34955  006BCC  B4D8               	btfsc	status,2,c
 34956  006BCE  D002               	goto	i2l16930
 34957                           
 34958                           ; BSR set to: 1
 34959                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 34960  006BD0  07A0               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 34961                           
 34962                           ;mcc_generated_files/tmr2.c: 201:                 }
 34963  006BD2  D089               	goto	i2l17002
 34964  006BD4                     i2l16930:
 34965                           
 34966                           ; BSR set to: 1
 34967                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 34968  006BD4  0E32               	movlw	50
 34969  006BD6  6FA0               	movwf	(_ts_system+1)& (0+255),b	;volatile
 34970                           
 34971                           ; BSR set to: 1
 34972                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 34973  006BD8  EC01  F032         	call	_controlTimeslots	;wreg free
 34974                           
 34975                           ; BSR set to: 1
 34976                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 34977  006BDC  0100               	movlb	0	; () banked
 34978  006BDE  5192               	movf	_Counterchoose& (0+255),w,b
 34979  006BE0  A4D8               	btfss	status,2,c
 34980  006BE2  D002               	goto	i2l16938
 34981                           
 34982                           ; BSR set to: 0
 34983                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 34984  006BE4  0E01               	movlw	1
 34985  006BE6  D001               	goto	L113
 34986  006BE8                     i2l16938:
 34987                           
 34988                           ; BSR set to: 0
 34989                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 34990  006BE8  0E00               	movlw	0
 34991  006BEA                     L113:
 34992  006BEA  6F92               	movwf	_Counterchoose& (0+255),b
 34993                           
 34994                           ; BSR set to: 0
 34995                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 34996                           
 34997                           ;mcc_generated_files/tmr2.c: 217:                                }
 34998  006BEC  0101               	movlb	1	; () banked
 34999  006BEE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 35000  006BF0  A4D8               	btfss	status,2,c
 35001  006BF2  D034               	goto	i2l16964
 35002                           
 35003                           ; BSR set to: 1
 35004                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 35005  006BF4  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 35006  006BF6  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 35007  006BF8  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 35008  006BFA  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 35009  006BFC  B4D8               	btfsc	status,2,c
 35010  006BFE  D008               	goto	i2l1266
 35011                           
 35012                           ; BSR set to: 1
 35013  006C00  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 35014  006C02  B4D8               	btfsc	status,2,c
 35015  006C04  D005               	goto	i2l1266
 35016                           
 35017                           ; BSR set to: 1
 35018                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 35019  006C06  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 35020  006C08  0E00               	movlw	0
 35021  006C0A  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 35022  006C0C  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 35023  006C0E  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 35024  006C10                     i2l1266:
 35025                           
 35026                           ; BSR set to: 1
 35027                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 35028  006C10  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35029  006C12  A4D8               	btfss	status,2,c
 35030  006C14  D00E               	goto	i2l16954
 35031                           
 35032                           ; BSR set to: 1
 35033                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 35034  006C16  057B               	decf	_powerControl_st& (0+255),w,b
 35035  006C18  A4D8               	btfss	status,2,c
 35036  006C1A  D004               	goto	i2u1917_40
 35037                           
 35038                           ; BSR set to: 1
 35039                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 35040  006C1C  0100               	movlb	0	; () banked
 35041  006C1E  0592               	decf	_Counterchoose& (0+255),w,b
 35042  006C20  A4D8               	btfss	status,2,c
 35043  006C22  D061               	goto	i2l17002
 35044  006C24                     i2u1917_40:
 35045                           
 35046                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 35047  006C24  0E01               	movlw	1
 35048  006C26  0101               	movlb	1	; () banked
 35049  006C28  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35050  006C2A  0E00               	movlw	0
 35051  006C2C  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35052  006C2E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35053  006C30  D013               	goto	L114
 35054  006C32                     i2l16954:
 35055                           
 35056                           ; BSR set to: 1
 35057  006C32  0E02               	movlw	2
 35058  006C34  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35059  006C36  A4D8               	btfss	status,2,c
 35060  006C38  D056               	goto	i2l17002
 35061                           
 35062                           ; BSR set to: 1
 35063                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 35064  006C3A  057B               	decf	_powerControl_st& (0+255),w,b
 35065  006C3C  A4D8               	btfss	status,2,c
 35066  006C3E  D004               	goto	i2u1920_40
 35067                           
 35068                           ; BSR set to: 1
 35069                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 35070  006C40  0100               	movlb	0	; () banked
 35071  006C42  0592               	decf	_Counterchoose& (0+255),w,b
 35072  006C44  A4D8               	btfss	status,2,c
 35073  006C46  D04F               	goto	i2l17002
 35074  006C48                     i2u1920_40:
 35075                           
 35076                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 35077  006C48  0EFF               	movlw	255
 35078  006C4A  0101               	movlb	1	; () banked
 35079  006C4C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35080  006C4E  0EFF               	movlw	255
 35081  006C50  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35082  006C52  0EFF               	movlw	255
 35083  006C54  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35084  006C56  0EFF               	movlw	255
 35085  006C58                     L114:
 35086  006C58  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 35087                           
 35088                           ;mcc_generated_files/tmr2.c: 263:                            }
 35089  006C5A  D045               	goto	i2l17002
 35090  006C5C                     i2l16964:
 35091                           
 35092                           ; BSR set to: 1
 35093                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 35094  006C5C  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 35095  006C5E  A4D8               	btfss	status,2,c
 35096  006C60  D01C               	goto	i2l1277
 35097                           
 35098                           ; BSR set to: 1
 35099                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 35100  006C62  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35101  006C64  A4D8               	btfss	status,2,c
 35102  006C66  D00B               	goto	i2l16974
 35103                           
 35104                           ; BSR set to: 1
 35105                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35106  006C68  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35107  006C6A  B4D8               	btfsc	status,2,c
 35108  006C6C  D016               	goto	i2l1277
 35109                           
 35110                           ; BSR set to: 1
 35111                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 35112  006C6E  0E01               	movlw	1
 35113  006C70  0100               	movlb	0	; () banked
 35114  006C72  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35115  006C74  0E00               	movlw	0
 35116  006C76  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35117  006C78  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35118  006C7A  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35119  006C7C  D00E               	goto	i2l1277
 35120  006C7E                     i2l16974:
 35121                           
 35122                           ; BSR set to: 1
 35123  006C7E  0E02               	movlw	2
 35124  006C80  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35125  006C82  A4D8               	btfss	status,2,c
 35126  006C84  D00A               	goto	i2l1277
 35127                           
 35128                           ; BSR set to: 1
 35129                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35130  006C86  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35131  006C88  B4D8               	btfsc	status,2,c
 35132  006C8A  D007               	goto	i2l1277
 35133                           
 35134                           ; BSR set to: 1
 35135                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 35136  006C8C  0E01               	movlw	1
 35137  006C8E  0100               	movlb	0	; () banked
 35138  006C90  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35139  006C92  0E00               	movlw	0
 35140  006C94  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35141  006C96  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35142  006C98  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35143  006C9A                     i2l1277:
 35144                           
 35145                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 35146  006C9A  0101               	movlb	1	; () banked
 35147  006C9C  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35148  006C9E  A4D8               	btfss	status,2,c
 35149  006CA0  D022               	goto	i2l17002
 35150                           
 35151                           ; BSR set to: 1
 35152  006CA2  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 35153  006CA4  A4D8               	btfss	status,2,c
 35154  006CA6  D01F               	goto	i2l17002
 35155                           
 35156                           ; BSR set to: 1
 35157                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 35158  006CA8  519F               	movf	_ts_system& (0+255),w,b	;volatile
 35159  006CAA  B4D8               	btfsc	status,2,c
 35160  006CAC  D002               	goto	i2l16988
 35161                           
 35162                           ; BSR set to: 1
 35163                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 35164  006CAE  079F               	decf	_ts_system& (0+255),f,b	;volatile
 35165                           
 35166                           ;mcc_generated_files/tmr2.c: 311:                                            }
 35167  006CB0  D01A               	goto	i2l17002
 35168  006CB2                     i2l16988:
 35169                           
 35170                           ; BSR set to: 1
 35171                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 35172  006CB2  0E0A               	movlw	10
 35173  006CB4  6F9F               	movwf	_ts_system& (0+255),b	;volatile
 35174                           
 35175                           ; BSR set to: 1
 35176                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 35177  006CB6  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35178  006CB8  A4D8               	btfss	status,2,c
 35179  006CBA  D009               	goto	i2l16996
 35180                           
 35181                           ; BSR set to: 1
 35182                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 35183  006CBC  0100               	movlb	0	; () banked
 35184  006CBE  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 35185                           
 35186                           ; BSR set to: 0
 35187                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 35188  006CC0  0E01               	movlw	1
 35189  006CC2  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35190  006CC4  0E00               	movlw	0
 35191  006CC6  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35192  006CC8  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35193  006CCA  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35194                           
 35195                           ;mcc_generated_files/tmr2.c: 322:                                                }
 35196  006CCC  D00C               	goto	i2l17002
 35197  006CCE                     i2l16996:
 35198                           
 35199                           ; BSR set to: 1
 35200  006CCE  0E02               	movlw	2
 35201  006CD0  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35202  006CD2  A4D8               	btfss	status,2,c
 35203  006CD4  D008               	goto	i2l17002
 35204                           
 35205                           ; BSR set to: 1
 35206                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 35207  006CD6  0100               	movlb	0	; () banked
 35208  006CD8  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 35209                           
 35210                           ; BSR set to: 0
 35211                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 35212  006CDA  0E01               	movlw	1
 35213  006CDC  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35214  006CDE  0E00               	movlw	0
 35215  006CE0  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35216  006CE2  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35217  006CE4  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35218  006CE6                     i2l17002:
 35219                           
 35220                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 35221  006CE6  0102               	movlb	2	; () banked
 35222  006CE8  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35223  006CEA  11DC               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35224  006CEC  B4D8               	btfsc	status,2,c
 35225  006CEE  0012               	return	
 35226                           
 35227                           ; BSR set to: 2
 35228                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 35229  006CF0  D801               	call	i2u1932_48
 35230  006CF2  0012               	return	
 35231  006CF4                     i2u1932_48:
 35232  006CF4  0005               	push	
 35233  006CF6  6EFA               	movwf	pclath,c
 35234  006CF8  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35235  006CFA  6EFD               	movwf	tosl,c
 35236  006CFC  51DC               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35237  006CFE  6EFE               	movwf	tosh,c
 35238  006D00  6AFF               	clrf	tosu,c
 35239  006D02  50FA               	movf	pclath,w,c
 35240  006D04  0012               	return		;indir
 35241  006D06                     __end_of_TMR2_ISR:
 35242                           	callstack 0
 35243                           
 35244 ;; *************** function _refreshSegment *****************
 35245 ;; Defined at:
 35246 ;;		line 50 in file "outputs_MC50.c"
 35247 ;; Parameters:    Size  Location     Type
 35248 ;;		None
 35249 ;; Auto vars:     Size  Location     Type
 35250 ;;		None
 35251 ;; Return value:  Size  Location     Type
 35252 ;;                  1    wreg      void 
 35253 ;; Registers used:
 35254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35255 ;; Tracked objects:
 35256 ;;		On entry : 31/E
 35257 ;;		On exit  : 3E/0
 35258 ;;		Unchanged: 0/0
 35259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35264 ;;Total ram usage:        0 bytes
 35265 ;; Hardware stack levels used: 1
 35266 ;; Hardware stack levels required when called: 1
 35267 ;; This function calls:
 35268 ;;		_Segments_Set
 35269 ;; This function is called by:
 35270 ;;		_TMR2_ISR
 35271 ;; This function uses a non-reentrant model
 35272 ;;
 35273                           
 35274                           	psect	text188
 35275  0083BE                     __ptext188:
 35276                           	callstack 0
 35277  0083BE                     _refreshSegment:
 35278                           	callstack 14
 35279                           
 35280                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 35281                           
 35282                           ;incstack = 0
 35283  0083BE  0100               	movlb	0	; () banked
 35284  0083C0  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35285  0083C2  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35286  0083C4  B4D8               	btfsc	status,2,c
 35287  0083C6  D003               	goto	i2u1532_40
 35288                           
 35289                           ; BSR set to: 0
 35290  0083C8  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35291  0083CA  A4D8               	btfss	status,2,c
 35292  0083CC  D01F               	goto	i2l2133
 35293  0083CE                     i2u1532_40:
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 35297  0083CE  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 35298  0083D0  A4D8               	btfss	status,2,c
 35299  0083D2  D00D               	goto	i2l2128
 35300                           
 35301                           ; BSR set to: 0
 35302                           
 35303                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 35304  0083D4  9085               	bcf	133,0,c	;volatile
 35305                           
 35306                           ; BSR set to: 0
 35307                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 35308  0083D6  0ED2               	movlw	low _DispTable
 35309  0083D8  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 35310  0083DA  6ED9               	movwf	fsr2l,c
 35311  0083DC  6ADA               	clrf	fsr2h,c
 35312  0083DE  0E03               	movlw	high _DispTable
 35313  0083E0  22DA               	addwfc	fsr2h,f,c
 35314  0083E2  50DF               	movf	indf2,w,c
 35315  0083E4  ECC2  F04E         	call	_Segments_Set
 35316  0083E8  8285               	bsf	133,1,c	;volatile
 35317                           
 35318                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 35319  0083EA  0E00               	movlw	0
 35320  0083EC  D00C               	goto	L115
 35321  0083EE                     i2l2128:
 35322                           
 35323                           ; BSR set to: 0
 35324  0083EE  9285               	bcf	133,1,c	;volatile
 35325                           
 35326                           ; BSR set to: 0
 35327                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 35328  0083F0  0ED2               	movlw	low _DispTable
 35329  0083F2  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35330  0083F4  6ED9               	movwf	fsr2l,c
 35331  0083F6  6ADA               	clrf	fsr2h,c
 35332  0083F8  0E03               	movlw	high _DispTable
 35333  0083FA  22DA               	addwfc	fsr2h,f,c
 35334  0083FC  50DF               	movf	indf2,w,c
 35335  0083FE  ECC2  F04E         	call	_Segments_Set
 35336  008402  8085               	bsf	133,0,c	;volatile
 35337                           
 35338                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35339  008404  0E01               	movlw	1
 35340  008406                     L115:
 35341  008406  0100               	movlb	0	; () banked
 35342  008408  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35343  00840A  D002               	goto	i2l14992
 35344  00840C                     i2l2133:
 35345                           
 35346                           ; BSR set to: 0
 35347  00840C  9085               	bcf	133,0,c	;volatile
 35348                           
 35349                           ; BSR set to: 0
 35350                           
 35351                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35352  00840E  9285               	bcf	133,1,c	;volatile
 35353  008410                     i2l14992:
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35357  008410  0101               	movlb	1	; () banked
 35358  008412  BFAA               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35359  008414  D005               	goto	i2u1534_40
 35360  008416  51AA               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35361  008418  E114               	bnz	i2l2140
 35362  00841A  05A9               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35363  00841C  B0D8               	btfsc	status,0,c
 35364  00841E  0012               	return	
 35365  008420                     i2u1534_40:
 35366                           
 35367                           ; BSR set to: 1
 35368  008420  0100               	movlb	0	; () banked
 35369  008422  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35370  008424  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35371  008426  B4D8               	btfsc	status,2,c
 35372  008428  0012               	return	
 35373                           
 35374                           ; BSR set to: 0
 35375                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35376  00842A  C075  F1A9         	movff	_dispStruct+3,_ts_system+10	;volatile
 35377  00842E  C076  F1AA         	movff	_dispStruct+4,_ts_system+11	;volatile
 35378                           
 35379                           ; BSR set to: 0
 35380                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35381  008432  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35382  008434  A4D8               	btfss	status,2,c
 35383  008436  D003               	goto	i2l15002
 35384                           
 35385                           ; BSR set to: 0
 35386                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35387  008438  0E00               	movlw	0
 35388  00843A  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35389                           
 35390                           ;outputs_MC50.c: 85:         }
 35391  00843C  0012               	return	
 35392  00843E                     i2l15002:
 35393                           
 35394                           ; BSR set to: 0
 35395                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35396  00843E  0E01               	movlw	1
 35397  008440  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35398  008442                     i2l2140:
 35399  008442  0012               	return		;funcret
 35400  008444                     __end_of_refreshSegment:
 35401                           	callstack 0
 35402                           
 35403 ;; *************** function _Segments_Set *****************
 35404 ;; Defined at:
 35405 ;;		line 93 in file "outputs_MC50.c"
 35406 ;; Parameters:    Size  Location     Type
 35407 ;;  value           1    wreg     unsigned char 
 35408 ;; Auto vars:     Size  Location     Type
 35409 ;;  value           1    0[COMRAM] unsigned char 
 35410 ;; Return value:  Size  Location     Type
 35411 ;;                  1    wreg      void 
 35412 ;; Registers used:
 35413 ;;		wreg, status,2, status,0
 35414 ;; Tracked objects:
 35415 ;;		On entry : 3F/0
 35416 ;;		On exit  : 0/0
 35417 ;;		Unchanged: 0/0
 35418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35423 ;;Total ram usage:        1 bytes
 35424 ;; Hardware stack levels used: 1
 35425 ;; This function calls:
 35426 ;;		Nothing
 35427 ;; This function is called by:
 35428 ;;		_refreshSegment
 35429 ;; This function uses a non-reentrant model
 35430 ;;
 35431                           
 35432                           	psect	text189
 35433  009D84                     __ptext189:
 35434                           	callstack 0
 35435  009D84                     _Segments_Set:
 35436                           	callstack 14
 35437                           
 35438                           ;incstack = 0
 35439                           ;Segments_Set@value stored from wreg
 35440  009D84  6E01               	movwf	Segments_Set@value^0,c
 35441                           
 35442                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35443  009D86  0E80               	movlw	128
 35444  009D88  1686               	andwf	134,f,c	;volatile
 35445                           
 35446                           ;outputs_MC50.c: 96:    LATD |= value;
 35447  009D8A  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35448  009D8C  1286               	iorwf	134,f,c	;volatile
 35449  009D8E  0012               	return		;funcret
 35450  009D90                     __end_of_Segments_Set:
 35451                           	callstack 0
 35452                           
 35453 ;; *************** function _controlTimeslots *****************
 35454 ;; Defined at:
 35455 ;;		line 190 in file "main_MC50.c"
 35456 ;; Parameters:    Size  Location     Type
 35457 ;;		None
 35458 ;; Auto vars:     Size  Location     Type
 35459 ;;		None
 35460 ;; Return value:  Size  Location     Type
 35461 ;;                  1    wreg      void 
 35462 ;; Registers used:
 35463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35464 ;; Tracked objects:
 35465 ;;		On entry : 3F/1
 35466 ;;		On exit  : 3F/1
 35467 ;;		Unchanged: 0/0
 35468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35473 ;;Total ram usage:        0 bytes
 35474 ;; Hardware stack levels used: 1
 35475 ;; Hardware stack levels required when called: 1
 35476 ;; This function calls:
 35477 ;;		_decrementTimeslot
 35478 ;; This function is called by:
 35479 ;;		_TMR2_ISR
 35480 ;; This function uses a non-reentrant model
 35481 ;;
 35482                           
 35483                           	psect	text190
 35484  006402                     __ptext190:
 35485                           	callstack 0
 35486  006402                     _controlTimeslots:
 35487                           	callstack 14
 35488                           
 35489                           ; BSR set to: 1
 35490                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35491                           
 35492                           ;incstack = 0
 35493  006402  0EA7               	movlw	low (_ts_system+8)
 35494  006404  6E01               	movwf	decrementTimeslot@ts^0,c
 35495  006406  0E01               	movlw	high (_ts_system+8)
 35496  006408  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35497  00640A  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35498                           
 35499                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35500  00640E  0EE5               	movlw	low (_ts_system+70)
 35501  006410  6E01               	movwf	decrementTimeslot@ts^0,c
 35502  006412  0E01               	movlw	high (_ts_system+70)
 35503  006414  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35504  006416  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35505                           
 35506                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35507  00641A  0EA9               	movlw	low (_ts_system+10)
 35508  00641C  6E01               	movwf	decrementTimeslot@ts^0,c
 35509  00641E  0E01               	movlw	high (_ts_system+10)
 35510  006420  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35511  006422  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35512                           
 35513                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35514  006426  0EAB               	movlw	low (_ts_system+12)
 35515  006428  6E01               	movwf	decrementTimeslot@ts^0,c
 35516  00642A  0E01               	movlw	high (_ts_system+12)
 35517  00642C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35518  00642E  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35519                           
 35520                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35521  006432  0EAD               	movlw	low (_ts_system+14)
 35522  006434  6E01               	movwf	decrementTimeslot@ts^0,c
 35523  006436  0E01               	movlw	high (_ts_system+14)
 35524  006438  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35525  00643A  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35526                           
 35527                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35528  00643E  0EAF               	movlw	low (_ts_system+16)
 35529  006440  6E01               	movwf	decrementTimeslot@ts^0,c
 35530  006442  0E01               	movlw	high (_ts_system+16)
 35531  006444  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35532  006446  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35533                           
 35534                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35535  00644A  0EB1               	movlw	low (_ts_system+18)
 35536  00644C  6E01               	movwf	decrementTimeslot@ts^0,c
 35537  00644E  0E01               	movlw	high (_ts_system+18)
 35538  006450  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35539  006452  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35540                           
 35541                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35542  006456  0EB3               	movlw	low (_ts_system+20)
 35543  006458  6E01               	movwf	decrementTimeslot@ts^0,c
 35544  00645A  0E01               	movlw	high (_ts_system+20)
 35545  00645C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35546  00645E  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35547                           
 35548                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35549  006462  0EB5               	movlw	low (_ts_system+22)
 35550  006464  6E01               	movwf	decrementTimeslot@ts^0,c
 35551  006466  0E01               	movlw	high (_ts_system+22)
 35552  006468  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35553  00646A  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35554                           
 35555                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35556  00646E  0EB9               	movlw	low (_ts_system+26)
 35557  006470  6E01               	movwf	decrementTimeslot@ts^0,c
 35558  006472  0E01               	movlw	high (_ts_system+26)
 35559  006474  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35560  006476  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35561                           
 35562                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35563  00647A  0EBB               	movlw	low (_ts_system+28)
 35564  00647C  6E01               	movwf	decrementTimeslot@ts^0,c
 35565  00647E  0E01               	movlw	high (_ts_system+28)
 35566  006480  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35567  006482  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35568                           
 35569                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35570  006486  0EBD               	movlw	low (_ts_system+30)
 35571  006488  6E01               	movwf	decrementTimeslot@ts^0,c
 35572  00648A  0E01               	movlw	high (_ts_system+30)
 35573  00648C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35574  00648E  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35575                           
 35576                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35577  006492  0EC3               	movlw	low (_ts_system+36)
 35578  006494  6E01               	movwf	decrementTimeslot@ts^0,c
 35579  006496  0E01               	movlw	high (_ts_system+36)
 35580  006498  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35581  00649A  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35582                           
 35583                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35584  00649E  0EC5               	movlw	low (_ts_system+38)
 35585  0064A0  6E01               	movwf	decrementTimeslot@ts^0,c
 35586  0064A2  0E01               	movlw	high (_ts_system+38)
 35587  0064A4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35588  0064A6  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35589                           
 35590                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35591  0064AA  0EC7               	movlw	low (_ts_system+40)
 35592  0064AC  6E01               	movwf	decrementTimeslot@ts^0,c
 35593  0064AE  0E01               	movlw	high (_ts_system+40)
 35594  0064B0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35595  0064B2  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35596                           
 35597                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35598  0064B6  0EC9               	movlw	low (_ts_system+42)
 35599  0064B8  6E01               	movwf	decrementTimeslot@ts^0,c
 35600  0064BA  0E01               	movlw	high (_ts_system+42)
 35601  0064BC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35602  0064BE  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35603                           
 35604                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35605  0064C2  0ECB               	movlw	low (_ts_system+44)
 35606  0064C4  6E01               	movwf	decrementTimeslot@ts^0,c
 35607  0064C6  0E01               	movlw	high (_ts_system+44)
 35608  0064C8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35609  0064CA  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35610                           
 35611                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35612  0064CE  0ECD               	movlw	low (_ts_system+46)
 35613  0064D0  6E01               	movwf	decrementTimeslot@ts^0,c
 35614  0064D2  0E01               	movlw	high (_ts_system+46)
 35615  0064D4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35616  0064D6  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35617                           
 35618                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35619  0064DA  0ECF               	movlw	low (_ts_system+48)
 35620  0064DC  6E01               	movwf	decrementTimeslot@ts^0,c
 35621  0064DE  0E01               	movlw	high (_ts_system+48)
 35622  0064E0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35623  0064E2  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35624                           
 35625                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35626  0064E6  0EE1               	movlw	low (_ts_system+66)
 35627  0064E8  6E01               	movwf	decrementTimeslot@ts^0,c
 35628  0064EA  0E01               	movlw	high (_ts_system+66)
 35629  0064EC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35630  0064EE  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35631                           
 35632                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35633  0064F2  0EE3               	movlw	low (_ts_system+68)
 35634  0064F4  6E01               	movwf	decrementTimeslot@ts^0,c
 35635  0064F6  0E01               	movlw	high (_ts_system+68)
 35636  0064F8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35637  0064FA  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35638                           
 35639                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35640  0064FE  0100               	movlb	0	; () banked
 35641  006500  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35642  006502  B4D8               	btfsc	status,2,c
 35643  006504  D008               	goto	i2u1538_40
 35644                           
 35645                           ; BSR set to: 0
 35646  006506  0101               	movlb	1	; () banked
 35647  006508  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35648  00650A  D005               	goto	i2u1538_40
 35649  00650C  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35650  00650E  E109               	bnz	i2l2024
 35651  006510  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35652  006512  B0D8               	btfsc	status,0,c
 35653  006514  D006               	goto	i2l2024
 35654  006516                     i2u1538_40:
 35655                           
 35656                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35657  006516  0ED1               	movlw	low (_ts_system+50)
 35658  006518  6E01               	movwf	decrementTimeslot@ts^0,c
 35659  00651A  0E01               	movlw	high (_ts_system+50)
 35660  00651C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35661  00651E  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35662  006522                     i2l2024:
 35663                           
 35664                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35665  006522  0ED3               	movlw	low (_ts_system+52)
 35666  006524  6E01               	movwf	decrementTimeslot@ts^0,c
 35667  006526  0E01               	movlw	high (_ts_system+52)
 35668  006528  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35669  00652A  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35670                           
 35671                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35672  00652E  0ED5               	movlw	low (_ts_system+54)
 35673  006530  6E01               	movwf	decrementTimeslot@ts^0,c
 35674  006532  0E01               	movlw	high (_ts_system+54)
 35675  006534  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35676  006536  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35677                           
 35678                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 35679  00653A  0ED7               	movlw	low (_ts_system+56)
 35680  00653C  6E01               	movwf	decrementTimeslot@ts^0,c
 35681  00653E  0E01               	movlw	high (_ts_system+56)
 35682  006540  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35683  006542  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35684                           
 35685                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 35686  006546  0ED9               	movlw	low (_ts_system+58)
 35687  006548  6E01               	movwf	decrementTimeslot@ts^0,c
 35688  00654A  0E01               	movlw	high (_ts_system+58)
 35689  00654C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35690  00654E  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35691                           
 35692                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 35693  006552  0EDB               	movlw	low (_ts_system+60)
 35694  006554  6E01               	movwf	decrementTimeslot@ts^0,c
 35695  006556  0E01               	movlw	high (_ts_system+60)
 35696  006558  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35697  00655A  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35698                           
 35699                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 35700  00655E  0EDD               	movlw	low (_ts_system+62)
 35701  006560  6E01               	movwf	decrementTimeslot@ts^0,c
 35702  006562  0E01               	movlw	high (_ts_system+62)
 35703  006564  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35704  006566  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35705                           
 35706                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 35707  00656A  0EDF               	movlw	low (_ts_system+64)
 35708  00656C  6E01               	movwf	decrementTimeslot@ts^0,c
 35709  00656E  0E01               	movlw	high (_ts_system+64)
 35710  006570  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35711  006572  ECBC  F04C         	call	_decrementTimeslot	;wreg free
 35712                           
 35713                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 35714  006576  0101               	movlb	1	; () banked
 35715  006578  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 35716  00657A  0012               	return	
 35717  00657C  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 35718  00657E  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 35719  006580  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 35720  006582  E103               	bnz	i2u1539_40
 35721  006584  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 35722  006586  A0D8               	btfss	status,0,c
 35723  006588  0012               	return	
 35724  00658A                     i2u1539_40:
 35725                           
 35726                           ; BSR set to: 1
 35727                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 35728  00658A  0EFF               	movlw	255
 35729  00658C  27BF               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 35730  00658E  0EFF               	movlw	255
 35731  006590  23C0               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 35732  006592  0EFF               	movlw	255
 35733  006594  23C1               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 35734  006596  0EFF               	movlw	255
 35735  006598  23C2               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 35736                           
 35737                           ; BSR set to: 1
 35738  00659A  0012               	return		;funcret
 35739  00659C                     __end_of_controlTimeslots:
 35740                           	callstack 0
 35741                           
 35742 ;; *************** function _decrementTimeslot *****************
 35743 ;; Defined at:
 35744 ;;		line 246 in file "main_MC50.c"
 35745 ;; Parameters:    Size  Location     Type
 35746 ;;  ts              2    0[COMRAM] PTR int 
 35747 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 35748 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 35749 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 35750 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 35751 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 35752 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 35753 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 35754 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 35755 ;; Auto vars:     Size  Location     Type
 35756 ;;		None
 35757 ;; Return value:  Size  Location     Type
 35758 ;;                  1    wreg      void 
 35759 ;; Registers used:
 35760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35761 ;; Tracked objects:
 35762 ;;		On entry : 0/1
 35763 ;;		On exit  : 0/0
 35764 ;;		Unchanged: 0/0
 35765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35768 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35770 ;;Total ram usage:        4 bytes
 35771 ;; Hardware stack levels used: 1
 35772 ;; This function calls:
 35773 ;;		Nothing
 35774 ;; This function is called by:
 35775 ;;		_controlTimeslots
 35776 ;; This function uses a non-reentrant model
 35777 ;;
 35778                           
 35779                           	psect	text191
 35780  009978                     __ptext191:
 35781                           	callstack 0
 35782  009978                     _decrementTimeslot:
 35783                           	callstack 14
 35784                           
 35785                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 35786                           
 35787                           ; BSR set to: 1
 35788                           ;incstack = 0
 35789  009978  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35790  00997C  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35791  009980  0E01               	movlw	1
 35792  009982  BEDB               	btfsc	plusw2,7,c
 35793  009984  0012               	return	
 35794  009986  0E01               	movlw	1
 35795  009988  50DB               	movf	plusw2,w,c
 35796  00998A  E103               	bnz	i2u1369_40
 35797  00998C  04DE               	decf	postinc2,w,c
 35798  00998E  A0D8               	btfss	status,0,c
 35799  009990  0012               	return	
 35800  009992                     i2u1369_40:
 35801                           
 35802                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 35803  009992  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35804  009996  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35805  00999A  06DE               	decf	postinc2,f,c
 35806  00999C  0E00               	movlw	0
 35807  00999E  5ADD               	subwfb	postdec2,f,c
 35808  0099A0  0012               	return		;funcret
 35809  0099A2                     __end_of_decrementTimeslot:
 35810                           	callstack 0
 35811                           
 35812 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 35813 ;; Defined at:
 35814 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 35815 ;; Parameters:    Size  Location     Type
 35816 ;;		None
 35817 ;; Auto vars:     Size  Location     Type
 35818 ;;		None
 35819 ;; Return value:  Size  Location     Type
 35820 ;;                  1    wreg      void 
 35821 ;; Registers used:
 35822 ;;		None
 35823 ;; Tracked objects:
 35824 ;;		On entry : 3F/2
 35825 ;;		On exit  : 3F/2
 35826 ;;		Unchanged: 3F/0
 35827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35832 ;;Total ram usage:        0 bytes
 35833 ;; Hardware stack levels used: 1
 35834 ;; This function calls:
 35835 ;;		Nothing
 35836 ;; This function is called by:
 35837 ;;		_TMR2_Initialize
 35838 ;;		_TMR2_ISR
 35839 ;; This function uses a non-reentrant model
 35840 ;;
 35841                           
 35842                           	psect	text192
 35843  009EBC                     __ptext192:
 35844                           	callstack 0
 35845  009EBC                     _TMR2_DefaultInterruptHandler:
 35846                           	callstack 15
 35847                           
 35848                           ; BSR set to: 2
 35849                           
 35850                           ;incstack = 0
 35851  009EBC  0012               	return		;funcret
 35852  009EBE                     __end_of_TMR2_DefaultInterruptHandler:
 35853                           	callstack 0
 35854                           
 35855 ;; *************** function _ReadADC *****************
 35856 ;; Defined at:
 35857 ;;		line 38 in file "controlCurrent_MC50.c"
 35858 ;; Parameters:    Size  Location     Type
 35859 ;;		None
 35860 ;; Auto vars:     Size  Location     Type
 35861 ;;		None
 35862 ;; Return value:  Size  Location     Type
 35863 ;;                  1    wreg      void 
 35864 ;; Registers used:
 35865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35866 ;; Tracked objects:
 35867 ;;		On entry : 3F/E
 35868 ;;		On exit  : 31/0
 35869 ;;		Unchanged: 0/0
 35870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35873 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35875 ;;Total ram usage:        3 bytes
 35876 ;; Hardware stack levels used: 1
 35877 ;; Hardware stack levels required when called: 1
 35878 ;; This function calls:
 35879 ;;		_ADCC_GetSingleConversion
 35880 ;; This function is called by:
 35881 ;;		_TMR2_ISR
 35882 ;; This function uses a non-reentrant model
 35883 ;;
 35884                           
 35885                           	psect	text193
 35886  00908E                     __ptext193:
 35887                           	callstack 0
 35888  00908E                     _ReadADC:
 35889                           	callstack 14
 35890                           
 35891                           ; BSR set to: 14
 35892                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 35893                           
 35894                           ; BSR set to: 2
 35895                           ;incstack = 0
 35896  00908E  B060               	btfsc	96,0,c	;volatile
 35897  009090  0012               	return	
 35898                           
 35899                           ; BSR set to: 14
 35900                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 35901  009092  0E1D               	movlw	29
 35902  009094  0100               	movlb	0	; () banked
 35903  009096  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 35904  009098  D002               	goto	i2l14968
 35905                           
 35906                           ; BSR set to: 0
 35907                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 35908  00909A  0E00               	movlw	0
 35909  00909C  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 35910  00909E                     i2l14968:
 35911                           
 35912                           ; BSR set to: 0
 35913                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 35914  00909E  5063               	movf	99,w,c	;volatile
 35915  0090A0  CF64 F002          	movff	3940,??_ReadADC	;volatile
 35916  0090A4  6A03               	clrf	(??_ReadADC+1)^0,c
 35917  0090A6  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 35918  0090AA  6A02               	clrf	??_ReadADC^0,c
 35919  0090AC  2602               	addwf	??_ReadADC^0,f,c
 35920  0090AE  0E00               	movlw	0
 35921  0090B0  2203               	addwfc	(??_ReadADC+1)^0,f,c
 35922  0090B2  0E06               	movlw	6
 35923  0090B4  6E04               	movwf	(??_ReadADC+2)^0,c
 35924  0090B6                     i2u1530_45:
 35925  0090B6  90D8               	bcf	status,0,c
 35926  0090B8  3203               	rrcf	(??_ReadADC+1)^0,f,c
 35927  0090BA  3202               	rrcf	??_ReadADC^0,f,c
 35928  0090BC  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 35929  0090BE  D7FB               	goto	i2u1530_45
 35930  0090C0  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 35931  0090C2  0D02               	mullw	2
 35932  0090C4  0E00               	movlw	low _ADC_array
 35933  0090C6  24F3               	addwf	243,w,c
 35934  0090C8  6ED9               	movwf	fsr2l,c
 35935  0090CA  0E02               	movlw	high _ADC_array
 35936  0090CC  20F4               	addwfc	prodh,w,c
 35937  0090CE  6EDA               	movwf	fsr2h,c
 35938  0090D0  C002  FFDE         	movff	??_ReadADC,postinc2
 35939  0090D4  C003  FFDD         	movff	??_ReadADC+1,postdec2
 35940                           
 35941                           ; BSR set to: 0
 35942                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 35943  0090D8  0E00               	movlw	0
 35944  0090DA  EC65  F04E         	call	_ADCC_GetSingleConversion
 35945                           
 35946                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 35947  0090DE  0100               	movlb	0	; () banked
 35948  0090E0  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 35949  0090E2  0012               	return		;funcret
 35950  0090E4                     __end_of_ReadADC:
 35951                           	callstack 0
 35952                           
 35953 ;; *************** function _ADCC_GetSingleConversion *****************
 35954 ;; Defined at:
 35955 ;;		line 131 in file "mcc_generated_files/adcc.c"
 35956 ;; Parameters:    Size  Location     Type
 35957 ;;  channel         1    wreg     enum E10053
 35958 ;; Auto vars:     Size  Location     Type
 35959 ;;  channel         1    0[COMRAM] enum E10053
 35960 ;; Return value:  Size  Location     Type
 35961 ;;                  2  433[None  ] int 
 35962 ;; Registers used:
 35963 ;;		wreg, status,2, cstack
 35964 ;; Tracked objects:
 35965 ;;		On entry : 3F/0
 35966 ;;		On exit  : 0/0
 35967 ;;		Unchanged: 0/0
 35968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35973 ;;Total ram usage:        1 bytes
 35974 ;; Hardware stack levels used: 1
 35975 ;; This function calls:
 35976 ;;		Nothing
 35977 ;; This function is called by:
 35978 ;;		_ReadADC
 35979 ;; This function uses a non-reentrant model
 35980 ;;
 35981                           
 35982                           	psect	text194
 35983  009CCA                     __ptext194:
 35984                           	callstack 0
 35985  009CCA                     _ADCC_GetSingleConversion:
 35986                           	callstack 14
 35987                           
 35988                           ;incstack = 0
 35989                           ;ADCC_GetSingleConversion@channel stored from wreg
 35990  009CCA  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 35991                           
 35992                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 35993  009CCC  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 35994                           
 35995                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 35996  009CD0  8E60               	bsf	96,7,c	;volatile
 35997                           
 35998                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 35999  009CD2  0E1A               	movlw	26
 36000  009CD4                     i2u3411_47:
 36001  009CD4  2EE8               	decfsz	wreg,f,c
 36002  009CD6  D7FE               	bra	i2u3411_47
 36003  009CD8  D000               	nop2	
 36004                           
 36005                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 36006  009CDA  9C60               	bcf	96,6,c	;volatile
 36007                           
 36008                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 36009  009CDC  8060               	bsf	96,0,c	;volatile
 36010  009CDE  0012               	return		;funcret
 36011  009CE0                     __end_of_ADCC_GetSingleConversion:
 36012                           	callstack 0
 36013                           
 36014 ;; *************** function _TMR1_ISR *****************
 36015 ;; Defined at:
 36016 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 36017 ;; Parameters:    Size  Location     Type
 36018 ;;		None
 36019 ;; Auto vars:     Size  Location     Type
 36020 ;;		None
 36021 ;; Return value:  Size  Location     Type
 36022 ;;                  1    wreg      void 
 36023 ;; Registers used:
 36024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 36025 ;; Tracked objects:
 36026 ;;		On entry : 3F/E
 36027 ;;		On exit  : 0/0
 36028 ;;		Unchanged: 0/0
 36029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36034 ;;Total ram usage:        0 bytes
 36035 ;; Hardware stack levels used: 1
 36036 ;; Hardware stack levels required when called: 2
 36037 ;; This function calls:
 36038 ;;		Absolute function
 36039 ;;		_TMR1_DefaultInterruptHandler
 36040 ;;		_TMR1_WriteTimer
 36041 ;;		_controlMotorForce
 36042 ;; This function is called by:
 36043 ;;		_INTERRUPT_InterruptManager
 36044 ;; This function uses a non-reentrant model
 36045 ;;
 36046                           
 36047                           	psect	text195
 36048  009528                     __ptext195:
 36049                           	callstack 0
 36050  009528                     _TMR1_ISR:
 36051                           	callstack 14
 36052                           
 36053                           ; BSR set to: 14
 36054                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 36055                           
 36056                           ;incstack = 0
 36057  009528  91CE               	bcf	206,0,b	;volatile
 36058                           
 36059                           ; BSR set to: 14
 36060                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 36061  00952A  ECB2  F02A         	call	_controlMotorForce	;wreg free
 36062                           
 36063                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 36064  00952E  0101               	movlb	1	; () banked
 36065  009530  51A4               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 36066  009532  A4D8               	btfss	status,2,c
 36067                           
 36068                           ; BSR set to: 1
 36069                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 36070  009534  07A4               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 36071                           
 36072                           ; BSR set to: 1
 36073                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 36074  009536  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 36075  009538  A4D8               	btfss	status,2,c
 36076                           
 36077                           ; BSR set to: 1
 36078                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 36079  00953A  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 36080                           
 36081                           ; BSR set to: 1
 36082                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 36083  00953C  C2DF  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 36084  009540  C2E0  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 36085  009544  ECC4  F04D         	call	_TMR1_WriteTimer	;wreg free
 36086                           
 36087                           ; BSR set to: 1
 36088                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 36089  009548  0102               	movlb	2	; () banked
 36090  00954A  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36091  00954C  11DE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36092  00954E  B4D8               	btfsc	status,2,c
 36093  009550  0012               	return	
 36094                           
 36095                           ; BSR set to: 2
 36096                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 36097  009552  D801               	call	i2u1908_48
 36098  009554  0012               	return	
 36099  009556                     i2u1908_48:
 36100  009556  0005               	push	
 36101  009558  6EFA               	movwf	pclath,c
 36102  00955A  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36103  00955C  6EFD               	movwf	tosl,c
 36104  00955E  51DE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36105  009560  6EFE               	movwf	tosh,c
 36106  009562  6AFF               	clrf	tosu,c
 36107  009564  50FA               	movf	pclath,w,c
 36108  009566  0012               	return		;indir
 36109  009568                     __end_of_TMR1_ISR:
 36110                           	callstack 0
 36111                           
 36112 ;; *************** function _controlMotorForce *****************
 36113 ;; Defined at:
 36114 ;;		line 213 in file "outputs_MC50.c"
 36115 ;; Parameters:    Size  Location     Type
 36116 ;;		None
 36117 ;; Auto vars:     Size  Location     Type
 36118 ;;		None
 36119 ;; Return value:  Size  Location     Type
 36120 ;;                  1    wreg      void 
 36121 ;; Registers used:
 36122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36123 ;; Tracked objects:
 36124 ;;		On entry : 3F/E
 36125 ;;		On exit  : 3E/0
 36126 ;;		Unchanged: 0/0
 36127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36130 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36131 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36132 ;;Total ram usage:        5 bytes
 36133 ;; Hardware stack levels used: 1
 36134 ;; Hardware stack levels required when called: 1
 36135 ;; This function calls:
 36136 ;;		i2_GetMotorPower
 36137 ;;		i2_VerifyElectricalBrake
 36138 ;; This function is called by:
 36139 ;;		_TMR1_ISR
 36140 ;; This function uses a non-reentrant model
 36141 ;;
 36142                           
 36143                           	psect	text196
 36144  005564                     __ptext196:
 36145                           	callstack 0
 36146  005564                     _controlMotorForce:
 36147                           	callstack 14
 36148                           
 36149                           ; BSR set to: 14
 36150                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 36151                           
 36152                           ;incstack = 0
 36153  005564  EC8F  F03D         	call	i2_GetMotorPower	;wreg free
 36154  005568  6F94               	movwf	_difTime& (0+255),b
 36155                           
 36156                           ; BSR set to: 1
 36157                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 36158  00556A  057B               	decf	_powerControl_st& (0+255),w,b
 36159  00556C  A4D8               	btfss	status,2,c
 36160  00556E  D00F               	goto	i2l2191
 36161                           
 36162                           ; BSR set to: 1
 36163                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 36164  005570  BFCC               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 36165  005572  D008               	goto	i2l14856
 36166  005574  51CC               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 36167  005576  E103               	bnz	i2u1490_40
 36168  005578  05CB               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 36169  00557A  A0D8               	btfss	status,0,c
 36170  00557C  D003               	goto	i2l14856
 36171  00557E                     i2u1490_40:
 36172                           
 36173                           ; BSR set to: 1
 36174                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 36175  00557E  0E00               	movlw	0
 36176  005580  6F95               	movwf	_StateTRIAC& (0+255),b
 36177                           
 36178                           ;outputs_MC50.c: 223:         }
 36179  005582  D005               	goto	i2l2191
 36180  005584                     i2l14856:
 36181                           
 36182                           ; BSR set to: 1
 36183  005584  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 36184  005586  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 36185  005588  A0D8               	btfss	status,0,c
 36186                           
 36187                           ; BSR set to: 1
 36188                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 36189  00558A  C17E  F194         	movff	_powerControl_st+3,_difTime
 36190  00558E                     i2l2191:
 36191                           
 36192                           ; BSR set to: 1
 36193                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 36194  00558E  A68D               	btfss	141,3,c	;volatile
 36195  005590  D071               	goto	i2l2195
 36196                           
 36197                           ; BSR set to: 1
 36198  005592  5197               	movf	_zeroCrossing& (0+255),w,b
 36199  005594  A4D8               	btfss	status,2,c
 36200  005596  D06E               	goto	i2l2195
 36201                           
 36202                           ; BSR set to: 1
 36203                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 36204  005598  5196               	movf	_waitZeroPeak& (0+255),w,b
 36205  00559A  A4D8               	btfss	status,2,c
 36206  00559C  D016               	goto	i2l14872
 36207                           
 36208                           ; BSR set to: 1
 36209                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 36210  00559E  0EF8               	movlw	low _zeroCrossingWaitTime
 36211  0055A0  0100               	movlb	0	; () banked
 36212  0055A2  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36213  0055A4  6ED9               	movwf	fsr2l,c
 36214  0055A6  6ADA               	clrf	fsr2h,c
 36215  0055A8  0E02               	movlw	high _zeroCrossingWaitTime
 36216  0055AA  22DA               	addwfc	fsr2h,f,c
 36217  0055AC  0101               	movlb	1	; () banked
 36218  0055AE  90D8               	bcf	status,0,c
 36219  0055B0  3198               	rrcf	_zeroCrossingLength& (0+255),w,b
 36220  0055B2  6EDF               	movwf	indf2,c
 36221                           
 36222                           ; BSR set to: 1
 36223                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 36224  0055B4  0100               	movlb	0	; () banked
 36225  0055B6  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36226  0055B8  A4D8               	btfss	status,2,c
 36227  0055BA  D002               	goto	i2l14870
 36228                           
 36229                           ; BSR set to: 0
 36230                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 36231  0055BC  0E01               	movlw	1
 36232  0055BE  D001               	goto	L116
 36233  0055C0                     i2l14870:
 36234                           
 36235                           ; BSR set to: 0
 36236                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 36237  0055C0  0E00               	movlw	0
 36238  0055C2                     L116:
 36239  0055C2  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 36240                           
 36241                           ; BSR set to: 0
 36242                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 36243                           
 36244                           ;outputs_MC50.c: 268:             }
 36245  0055C4  0E00               	movlw	0
 36246  0055C6  0101               	movlb	1	; () banked
 36247  0055C8  6F98               	movwf	_zeroCrossingLength& (0+255),b
 36248  0055CA                     i2l14872:
 36249                           
 36250                           ; BSR set to: 1
 36251                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 36252  0055CA  0E50               	movlw	80
 36253  0055CC  6594               	cpfsgt	_difTime& (0+255),b
 36254  0055CE  D007               	goto	i2u1497_40
 36255                           
 36256                           ; BSR set to: 1
 36257  0055D0  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36258  0055D2  D008               	goto	i2l14878
 36259  0055D4  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36260  0055D6  E103               	bnz	i2u1497_40
 36261  0055D8  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36262  0055DA  A0D8               	btfss	status,0,c
 36263  0055DC  D003               	goto	i2l14878
 36264  0055DE                     i2u1497_40:
 36265                           
 36266                           ; BSR set to: 1
 36267                           
 36268                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 36269  0055DE  9E86               	bcf	134,7,c	;volatile
 36270                           
 36271                           ; BSR set to: 1
 36272                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 36273  0055E0  0E00               	movlw	0
 36274  0055E2  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36275  0055E4                     i2l14878:
 36276                           
 36277                           ; BSR set to: 1
 36278                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 36279  0055E4  2B96               	incf	_waitZeroPeak& (0+255),f,b
 36280                           
 36281                           ; BSR set to: 1
 36282                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 36283  0055E6  0EF8               	movlw	low _zeroCrossingWaitTime
 36284  0055E8  0100               	movlb	0	; () banked
 36285  0055EA  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36286  0055EC  6ED9               	movwf	fsr2l,c
 36287  0055EE  6ADA               	clrf	fsr2h,c
 36288  0055F0  0E02               	movlw	high _zeroCrossingWaitTime
 36289  0055F2  22DA               	addwfc	fsr2h,f,c
 36290  0055F4  0101               	movlb	1	; () banked
 36291  0055F6  5196               	movf	_waitZeroPeak& (0+255),w,b
 36292  0055F8  5CDE               	subwf	postinc2,w,c
 36293  0055FA  B0D8               	btfsc	status,0,c
 36294  0055FC  D044               	goto	i2l14908
 36295                           
 36296                           ; BSR set to: 1
 36297                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 36298  0055FE  0E59               	movlw	89
 36299  005600  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 36300  005602  D005               	goto	i2l14888
 36301                           
 36302                           ; BSR set to: 1
 36303  005604  0E6A               	movlw	106
 36304  005606  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 36305  005608  D002               	goto	i2l14888
 36306                           
 36307                           ; BSR set to: 1
 36308                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 36309  00560A  0E01               	movlw	1
 36310  00560C  D001               	goto	L117
 36311  00560E                     i2l14888:
 36312                           
 36313                           ; BSR set to: 1
 36314                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 36315  00560E  0E00               	movlw	0
 36316  005610                     L117:
 36317  005610  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 36318                           
 36319                           ; BSR set to: 1
 36320                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 36321                           
 36322                           ;outputs_MC50.c: 292:             }
 36323  005612  0E50               	movlw	80
 36324  005614  6FA4               	movwf	(_ts_system+5)& (0+255),b	;volatile
 36325                           
 36326                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 36327  005616  0E00               	movlw	0
 36328  005618  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 36329                           
 36330                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 36331  00561A  0E01               	movlw	1
 36332  00561C  6F95               	movwf	_StateTRIAC& (0+255),b
 36333                           
 36334                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 36335  00561E  0E01               	movlw	1
 36336  005620  6F97               	movwf	_zeroCrossing& (0+255),b
 36337                           
 36338                           ; BSR set to: 1
 36339                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 36340  005622  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 36341                           
 36342                           ; BSR set to: 1
 36343                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 36344  005624  0100               	movlb	0	; () banked
 36345  005626  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36346  005628  A4D8               	btfss	status,2,c
 36347  00562A  D00E               	goto	i2l14900
 36348                           
 36349                           ; BSR set to: 0
 36350  00562C  0101               	movlb	1	; () banked
 36351  00562E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36352  005630  D00B               	goto	i2l14900
 36353  005632  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36354  005634  E103               	bnz	i2u1502_40
 36355  005636  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36356  005638  A0D8               	btfss	status,0,c
 36357  00563A  D006               	goto	i2l14900
 36358  00563C                     i2u1502_40:
 36359                           
 36360                           ; BSR set to: 1
 36361                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 36362  00563C  0E01               	movlw	1
 36363  00563E  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 36364  005640  D022               	goto	i2l14908
 36365  005642                     i2u1503_40:
 36366                           
 36367                           ; BSR set to: 1
 36368                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 36369  005642  0E00               	movlw	0
 36370  005644  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 36371  005646  D01F               	goto	i2l14908
 36372  005648                     i2l14900:
 36373                           
 36374                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 36375  005648  0101               	movlb	1	; () banked
 36376  00564A  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 36377  00564C  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 36378  005650  6A06               	clrf	(??_controlMotorForce+1)^0,c
 36379  005652  2605               	addwf	??_controlMotorForce^0,f,c
 36380  005654  0E00               	movlw	0
 36381  005656  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36382  005658  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36383  00565A  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36384  00565C  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36385  00565E  5005               	movf	??_controlMotorForce^0,w,c
 36386  005660  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36387  005662  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36388  005664  0A80               	xorlw	128
 36389  005666  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36390  005668  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36391  00566A  0A80               	xorlw	128
 36392  00566C  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36393  00566E  B0D8               	btfsc	status,0,c
 36394  005670  D7E8               	goto	i2u1503_40
 36395  005672  D009               	goto	i2l14908
 36396  005674                     i2l2195:
 36397                           
 36398                           ; BSR set to: 1
 36399  005674  B68D               	btfsc	141,3,c	;volatile
 36400  005676  D007               	goto	i2l14908
 36401                           
 36402                           ; BSR set to: 1
 36403  005678  5197               	movf	_zeroCrossing& (0+255),w,b
 36404  00567A  B4D8               	btfsc	status,2,c
 36405  00567C  D004               	goto	i2l14908
 36406                           
 36407                           ; BSR set to: 1
 36408                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36409  00567E  0E00               	movlw	0
 36410  005680  6F97               	movwf	_zeroCrossing& (0+255),b
 36411                           
 36412                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36413  005682  0E00               	movlw	0
 36414  005684  6F96               	movwf	_waitZeroPeak& (0+255),b
 36415  005686                     i2l14908:
 36416                           
 36417                           ; BSR set to: 1
 36418                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36419  005686  B68D               	btfsc	141,3,c	;volatile
 36420                           
 36421                           ; BSR set to: 1
 36422                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36423  005688  2B98               	incf	_zeroCrossingLength& (0+255),f,b
 36424                           
 36425                           ; BSR set to: 1
 36426                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36427                           
 36428                           ;outputs_MC50.c: 340:     }
 36429  00568A  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36430                           
 36431                           ; BSR set to: 1
 36432                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36433  00568C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 36434  00568E  EC1D  F044         	call	i2_VerifyElectricalBrake
 36435  005692  0100               	movlb	0	; () banked
 36436  005694  6F83               	movwf	_stateMotor& (0+255),b
 36437                           
 36438                           ; BSR set to: 0
 36439                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36440  005696  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36441  005698  A4D8               	btfss	status,2,c
 36442  00569A  D02E               	goto	i2l14932
 36443                           
 36444                           ; BSR set to: 0
 36445  00569C  0101               	movlb	1	; () banked
 36446  00569E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36447  0056A0  D02B               	goto	i2l14932
 36448  0056A2  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36449  0056A4  E103               	bnz	i2u1509_40
 36450  0056A6  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36451  0056A8  A0D8               	btfss	status,0,c
 36452  0056AA  D026               	goto	i2l14932
 36453  0056AC                     i2u1509_40:
 36454                           
 36455                           ; BSR set to: 1
 36456  0056AC  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36457  0056AE  D005               	goto	i2u1510_40
 36458  0056B0  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36459  0056B2  E122               	bnz	i2l14932
 36460  0056B4  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36461  0056B6  B0D8               	btfsc	status,0,c
 36462  0056B8  D01F               	goto	i2l14932
 36463  0056BA                     i2u1510_40:
 36464                           
 36465                           ; BSR set to: 1
 36466                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36467  0056BA  0100               	movlb	0	; () banked
 36468  0056BC  5183               	movf	_stateMotor& (0+255),w,b
 36469  0056BE  B4D8               	btfsc	status,2,c
 36470  0056C0  D03A               	goto	i2l14944
 36471                           
 36472                           ; BSR set to: 0
 36473  0056C2  0101               	movlb	1	; () banked
 36474  0056C4  0595               	decf	_StateTRIAC& (0+255),w,b
 36475  0056C6  A4D8               	btfss	status,2,c
 36476  0056C8  D036               	goto	i2l14944
 36477                           
 36478                           ; BSR set to: 1
 36479  0056CA  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36480  0056CC  D005               	goto	i2u1513_40
 36481  0056CE  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36482  0056D0  E132               	bnz	i2l14944
 36483  0056D2  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36484  0056D4  B0D8               	btfsc	status,0,c
 36485  0056D6  D02F               	goto	i2l14944
 36486  0056D8                     i2u1513_40:
 36487                           
 36488                           ; BSR set to: 1
 36489  0056D8  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36490  0056DA  A4D8               	btfss	status,2,c
 36491  0056DC  D02C               	goto	i2l14944
 36492                           
 36493                           ; BSR set to: 1
 36494  0056DE  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36495  0056E0  D006               	goto	i2u1515_40
 36496  0056E2  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36497  0056E4  E128               	bnz	i2l14944
 36498  0056E6  0E0C               	movlw	12
 36499  0056E8  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36500  0056EA  B0D8               	btfsc	status,0,c
 36501  0056EC  D024               	goto	i2l14944
 36502  0056EE                     i2u1515_40:
 36503                           
 36504                           ; BSR set to: 1
 36505                           
 36506                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36507  0056EE  8E86               	bsf	134,7,c	;volatile
 36508                           
 36509                           ; BSR set to: 1
 36510                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36511  0056F0  0EEC               	movlw	236
 36512  0056F2  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36513  0056F4  0E78               	movlw	120
 36514  0056F6  D01A               	goto	L118
 36515  0056F8                     i2l14932:
 36516                           
 36517                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36518  0056F8  0100               	movlb	0	; () banked
 36519  0056FA  5183               	movf	_stateMotor& (0+255),w,b
 36520  0056FC  B4D8               	btfsc	status,2,c
 36521  0056FE  D01B               	goto	i2l14944
 36522                           
 36523                           ; BSR set to: 0
 36524  005700  0101               	movlb	1	; () banked
 36525  005702  5194               	movf	_difTime& (0+255),w,b
 36526  005704  5DA4               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36527  005706  B0D8               	btfsc	status,0,c
 36528  005708  D016               	goto	i2l14944
 36529                           
 36530                           ; BSR set to: 1
 36531  00570A  0595               	decf	_StateTRIAC& (0+255),w,b
 36532  00570C  A4D8               	btfss	status,2,c
 36533  00570E  D013               	goto	i2l14944
 36534                           
 36535                           ; BSR set to: 1
 36536  005710  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36537  005712  D005               	goto	i2u1519_40
 36538  005714  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36539  005716  E10F               	bnz	i2l14944
 36540  005718  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36541  00571A  B0D8               	btfsc	status,0,c
 36542  00571C  D00C               	goto	i2l14944
 36543  00571E                     i2u1519_40:
 36544                           
 36545                           ; BSR set to: 1
 36546  00571E  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36547  005720  A4D8               	btfss	status,2,c
 36548  005722  D009               	goto	i2l14944
 36549                           
 36550                           ; BSR set to: 1
 36551                           
 36552                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36553  005724  8E86               	bsf	134,7,c	;volatile
 36554                           
 36555                           ; BSR set to: 1
 36556                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36557  005726  0EFF               	movlw	255
 36558  005728  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36559  00572A  0E38               	movlw	56
 36560  00572C                     L118:
 36561  00572C  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36562                           
 36563                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36564  00572E  0E01               	movlw	1
 36565  005730  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36566                           
 36567                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36568  005732  0E00               	movlw	0
 36569  005734  6F95               	movwf	_StateTRIAC& (0+255),b
 36570  005736                     i2l14944:
 36571                           
 36572                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36573  005736  0E15               	movlw	21
 36574  005738  0101               	movlb	1	; () banked
 36575  00573A  61A4               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36576  00573C  D002               	goto	i2u1522_40
 36577                           
 36578                           ; BSR set to: 1
 36579  00573E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36580  005740  D004               	goto	i2u1523_40
 36581  005742                     i2u1522_40:
 36582                           
 36583                           ; BSR set to: 1
 36584  005742  0100               	movlb	0	; () banked
 36585  005744  5183               	movf	_stateMotor& (0+255),w,b
 36586  005746  A4D8               	btfss	status,2,c
 36587  005748  D004               	goto	i2l2222
 36588  00574A                     i2u1523_40:
 36589                           
 36590                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36591  00574A  9E86               	bcf	134,7,c	;volatile
 36592                           
 36593                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36594  00574C  0E00               	movlw	0
 36595  00574E  0101               	movlb	1	; () banked
 36596  005750  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36597  005752                     i2l2222:
 36598                           
 36599                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36600  005752  0100               	movlb	0	; () banked
 36601  005754  5183               	movf	_stateMotor& (0+255),w,b
 36602  005756  B4D8               	btfsc	status,2,c
 36603  005758  D00C               	goto	i2l14956
 36604                           
 36605                           ; BSR set to: 0
 36606  00575A  0101               	movlb	1	; () banked
 36607  00575C  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36608  00575E  D009               	goto	i2l14956
 36609  005760  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36610  005762  E103               	bnz	i2u1525_40
 36611  005764  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36612  005766  A0D8               	btfss	status,0,c
 36613  005768  D004               	goto	i2l14956
 36614  00576A                     i2u1525_40:
 36615                           
 36616                           ; BSR set to: 1
 36617                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36618  00576A  07A5               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36619  00576C  A0D8               	btfss	status,0,c
 36620  00576E  07A6               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36621                           
 36622                           ;outputs_MC50.c: 399:     }
 36623  005770  0012               	return	
 36624  005772                     i2l14956:
 36625  005772  0100               	movlb	0	; () banked
 36626  005774  5183               	movf	_stateMotor& (0+255),w,b
 36627  005776  A4D8               	btfss	status,2,c
 36628  005778  0012               	return	
 36629                           
 36630                           ; BSR set to: 0
 36631  00577A  0101               	movlb	1	; () banked
 36632  00577C  AFA6               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36633  00577E  0012               	return	
 36634                           
 36635                           ; BSR set to: 1
 36636                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36637  005780  4BA5               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36638  005782  2BA6               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36639  005784  0012               	return		;funcret
 36640  005786                     __end_of_controlMotorForce:
 36641                           	callstack 0
 36642                           
 36643 ;; *************** function i2_VerifyElectricalBrake *****************
 36644 ;; Defined at:
 36645 ;;		line 658 in file "outputs_MC50.c"
 36646 ;; Parameters:    Size  Location     Type
 36647 ;;  actualState     1    wreg     enum E10381
 36648 ;; Auto vars:     Size  Location     Type
 36649 ;;  actualState     1    1[COMRAM] enum E10381
 36650 ;;  tempState       1    0[COMRAM] enum E10381
 36651 ;; Return value:  Size  Location     Type
 36652 ;;                  1    wreg      enum E10381
 36653 ;; Registers used:
 36654 ;;		wreg, status,2, status,0
 36655 ;; Tracked objects:
 36656 ;;		On entry : 3F/1
 36657 ;;		On exit  : 3E/0
 36658 ;;		Unchanged: 0/0
 36659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36664 ;;Total ram usage:        2 bytes
 36665 ;; Hardware stack levels used: 1
 36666 ;; This function calls:
 36667 ;;		Nothing
 36668 ;; This function is called by:
 36669 ;;		_controlMotorForce
 36670 ;; This function uses a non-reentrant model
 36671 ;;
 36672                           
 36673                           	psect	text197
 36674  00883A                     __ptext197:
 36675                           	callstack 0
 36676  00883A                     i2_VerifyElectricalBrake:
 36677                           	callstack 14
 36678                           
 36679                           ;incstack = 0
 36680                           ;i2VerifyElectricalBrake@actualState stored from wreg
 36681  00883A  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 36682                           
 36683                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 36684  00883C  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 36685                           
 36686                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 36687  008840  0100               	movlb	0	; () banked
 36688  008842  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36689  008844  A4D8               	btfss	status,2,c
 36690  008846  D02E               	goto	i2l2323
 36691                           
 36692                           ; BSR set to: 0
 36693  008848  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36694  00884A  A4D8               	btfss	status,2,c
 36695  00884C  D02B               	goto	i2l2323
 36696                           
 36697                           ; BSR set to: 0
 36698  00884E  0101               	movlb	1	; () banked
 36699  008850  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36700  008852  D005               	goto	i2u1456_40
 36701  008854  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36702  008856  E126               	bnz	i2l2323
 36703  008858  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36704  00885A  B0D8               	btfsc	status,0,c
 36705  00885C  D023               	goto	i2l2323
 36706  00885E                     i2u1456_40:
 36707                           
 36708                           ; BSR set to: 1
 36709                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 36710  00885E  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36711  008860  0100               	movlb	0	; () banked
 36712  008862  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 36713  008864  B4D8               	btfsc	status,2,c
 36714  008866  D00B               	goto	i2l14574
 36715                           
 36716                           ; BSR set to: 0
 36717  008868  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 36718  00886A  A4D8               	btfss	status,2,c
 36719  00886C  D008               	goto	i2l14574
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 36723  00886E  0E01               	movlw	1
 36724  008870  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36725                           
 36726                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 36727  008872  0E00               	movlw	0
 36728  008874  0101               	movlb	1	; () banked
 36729  008876  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 36730  008878  0E16               	movlw	22
 36731  00887A  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 36732                           
 36733                           ;outputs_MC50.c: 670:         }
 36734  00887C  D018               	goto	i2l2328
 36735  00887E                     i2l14574:
 36736                           
 36737                           ; BSR set to: 0
 36738  00887E  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 36739  008880  A4D8               	btfss	status,2,c
 36740  008882  D00B               	goto	i2l14580
 36741                           
 36742                           ; BSR set to: 0
 36743  008884  0101               	movlb	1	; () banked
 36744  008886  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36745  008888  D008               	goto	i2l14580
 36746  00888A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36747  00888C  E103               	bnz	i2u1460_40
 36748  00888E  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36749  008890  A0D8               	btfss	status,0,c
 36750  008892  D003               	goto	i2l14580
 36751  008894                     i2u1460_40:
 36752                           
 36753                           ; BSR set to: 1
 36754                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 36755  008894  0E01               	movlw	1
 36756  008896  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 36757                           
 36758                           ;outputs_MC50.c: 686:         }
 36759  008898  D00A               	goto	i2l2328
 36760  00889A                     i2l14580:
 36761                           
 36762                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 36763  00889A  0E00               	movlw	0
 36764  00889C  0100               	movlb	0	; () banked
 36765  00889E  6F78               	movwf	_brakeElectric_st& (0+255),b
 36766                           
 36767                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 36768  0088A0  0E00               	movlw	0
 36769  0088A2  D004               	goto	L119
 36770  0088A4                     i2l2323:
 36771                           
 36772                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 36773  0088A4  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 36774                           
 36775                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 36776  0088A8  0E00               	movlw	0
 36777  0088AA  0100               	movlb	0	; () banked
 36778  0088AC                     L119:
 36779  0088AC  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36780  0088AE                     i2l2328:
 36781                           
 36782                           ;outputs_MC50.c: 700:     return tempState;
 36783  0088AE  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 36784  0088B0  0012               	return		;funcret
 36785  0088B2                     __end_ofi2_VerifyElectricalBrake:
 36786                           	callstack 0
 36787                           
 36788 ;; *************** function i2_GetMotorPower *****************
 36789 ;; Defined at:
 36790 ;;		line 405 in file "outputs_MC50.c"
 36791 ;; Parameters:    Size  Location     Type
 36792 ;;		None
 36793 ;; Auto vars:     Size  Location     Type
 36794 ;;  defineatraso    1    3[COMRAM] unsigned char 
 36795 ;; Return value:  Size  Location     Type
 36796 ;;                  1    wreg      unsigned char 
 36797 ;; Registers used:
 36798 ;;		wreg, status,2, status,0, prodl, prodh
 36799 ;; Tracked objects:
 36800 ;;		On entry : 3F/E
 36801 ;;		On exit  : 3F/1
 36802 ;;		Unchanged: 0/0
 36803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36806 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36808 ;;Total ram usage:        4 bytes
 36809 ;; Hardware stack levels used: 1
 36810 ;; This function calls:
 36811 ;;		Nothing
 36812 ;; This function is called by:
 36813 ;;		_controlMotorForce
 36814 ;; This function uses a non-reentrant model
 36815 ;;
 36816                           
 36817                           	psect	text198
 36818  007B1E                     __ptext198:
 36819                           	callstack 0
 36820  007B1E                     i2_GetMotorPower:
 36821                           	callstack 14
 36822                           
 36823                           ; BSR set to: 14
 36824                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 36825                           
 36826                           ;incstack = 0
 36827  007B1E  0101               	movlb	1	; () banked
 36828  007B20  057B               	decf	_powerControl_st& (0+255),w,b
 36829  007B22  A4D8               	btfss	status,2,c
 36830  007B24  D006               	goto	i2l14524
 36831                           
 36832                           ; BSR set to: 1
 36833                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 36834  007B26  0100               	movlb	0	; () banked
 36835  007B28  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36836  007B2A  0D06               	mullw	6
 36837  007B2C  CFF3 F193          	movff	prodl,_temppower
 36838                           
 36839                           ;outputs_MC50.c: 416:     }
 36840  007B30  D043               	goto	i2l2240
 36841  007B32                     i2l14524:
 36842                           
 36843                           ; BSR set to: 1
 36844                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 36845  007B32  0100               	movlb	0	; () banked
 36846  007B34  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36847  007B36  0D06               	mullw	6
 36848  007B38  CFF3 F082          	movff	prodl,_fullmotorPower
 36849                           
 36850                           ; BSR set to: 0
 36851                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 36852  007B3C  0101               	movlb	1	; () banked
 36853  007B3E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36854  007B40  D01C               	goto	i2l14534
 36855  007B42  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36856  007B44  E103               	bnz	i2u1446_40
 36857  007B46  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36858  007B48  A0D8               	btfss	status,0,c
 36859  007B4A  D017               	goto	i2l14534
 36860  007B4C                     i2u1446_40:
 36861                           
 36862                           ; BSR set to: 1
 36863                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 36864  007B4C  0100               	movlb	0	; () banked
 36865  007B4E  5182               	movf	_fullmotorPower& (0+255),w,b
 36866  007B50  6E01               	movwf	??i2_GetMotorPower^0,c
 36867  007B52  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 36868  007B54  0101               	movlb	1	; () banked
 36869  007B56  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36870  007B58  5C01               	subwf	??i2_GetMotorPower^0,w,c
 36871  007B5A  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 36872  007B5C  0A80               	xorlw	128
 36873  007B5E  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 36874  007B60  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36875  007B62  0A80               	xorlw	128
 36876  007B64  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 36877  007B66  B0D8               	btfsc	status,0,c
 36878  007B68  D002               	goto	i2l14532
 36879                           
 36880                           ; BSR set to: 1
 36881                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 36882  007B6A  0E01               	movlw	1
 36883  007B6C  D004               	goto	L121
 36884  007B6E                     i2l14532:
 36885                           
 36886                           ; BSR set to: 1
 36887                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 36888  007B6E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36889  007B70  0100               	movlb	0	; () banked
 36890  007B72  5D82               	subwf	_fullmotorPower& (0+255),w,b
 36891  007B74  D017               	goto	L122
 36892  007B76                     L121:
 36893  007B76  6F93               	movwf	_temppower& (0+255),b
 36894  007B78  D01F               	goto	i2l2240
 36895  007B7A                     i2l14534:
 36896                           
 36897                           ; BSR set to: 1
 36898  007B7A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36899  007B7C  D005               	goto	i2u1448_40
 36900  007B7E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36901  007B80  E113               	bnz	i2l14544
 36902  007B82  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36903  007B84  B0D8               	btfsc	status,0,c
 36904  007B86  D010               	goto	i2l14544
 36905  007B88                     i2u1448_40:
 36906                           
 36907                           ; BSR set to: 1
 36908  007B88  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36909  007B8A  D005               	goto	i2u1449_40
 36910  007B8C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36911  007B8E  E10C               	bnz	i2l14544
 36912  007B90  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36913  007B92  B0D8               	btfsc	status,0,c
 36914  007B94  D009               	goto	i2l14544
 36915  007B96                     i2u1449_40:
 36916                           
 36917                           ; BSR set to: 1
 36918                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 36919  007B96  C082  F193         	movff	_fullmotorPower,_temppower
 36920                           
 36921                           ; BSR set to: 1
 36922                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 36923  007B9A  0E08               	movlw	8
 36924  007B9C  0100               	movlb	0	; () banked
 36925  007B9E  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 36926  007BA0  D00B               	goto	i2l2240
 36927                           
 36928                           ; BSR set to: 0
 36929                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 36930  007BA2  0E3A               	movlw	58
 36931  007BA4                     L122:
 36932  007BA4  0101               	movlb	1	; () banked
 36933  007BA6  D7E7               	goto	L121
 36934  007BA8                     i2l14544:
 36935                           
 36936                           ; BSR set to: 1
 36937  007BA8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36938  007BAA  D006               	goto	i2l2240
 36939  007BAC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36940  007BAE  E102               	bnz	i2u1451_40
 36941  007BB0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36942  007BB2  B0D8               	btfsc	status,0,c
 36943  007BB4                     i2u1451_40:
 36944                           
 36945                           ; BSR set to: 1
 36946                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 36947  007BB4  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 36948  007BB8                     i2l2240:
 36949                           
 36950                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 36951  007BB8  0101               	movlb	1	; () banked
 36952  007BBA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36953  007BBC  D00E               	goto	i2l14554
 36954  007BBE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36955  007BC0  E103               	bnz	i2u1452_40
 36956  007BC2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36957  007BC4  A0D8               	btfss	status,0,c
 36958  007BC6  D009               	goto	i2l14554
 36959  007BC8                     i2u1452_40:
 36960                           
 36961                           ; BSR set to: 1
 36962  007BC8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36963  007BCA  D005               	goto	i2u1453_40
 36964  007BCC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36965  007BCE  E105               	bnz	i2l14554
 36966  007BD0  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36967  007BD2  B0D8               	btfsc	status,0,c
 36968  007BD4  D002               	goto	i2l14554
 36969  007BD6                     i2u1453_40:
 36970                           
 36971                           ; BSR set to: 1
 36972                           ;outputs_MC50.c: 452:     defineatraso = 5;
 36973  007BD6  0E05               	movlw	5
 36974  007BD8  D001               	goto	L120
 36975  007BDA                     i2l14554:
 36976                           
 36977                           ; BSR set to: 1
 36978                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 36979  007BDA  0E17               	movlw	23
 36980  007BDC                     L120:
 36981  007BDC  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 36982                           
 36983                           ; BSR set to: 1
 36984                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 36985  007BDE  5193               	movf	_temppower& (0+255),w,b
 36986  007BE0  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 36987                           
 36988                           ; BSR set to: 1
 36989  007BE2  0012               	return		;funcret
 36990  007BE4                     __end_ofi2_GetMotorPower:
 36991                           	callstack 0
 36992                           
 36993 ;; *************** function _TMR1_WriteTimer *****************
 36994 ;; Defined at:
 36995 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 36996 ;; Parameters:    Size  Location     Type
 36997 ;;  timerVal        2    0[COMRAM] unsigned short 
 36998 ;; Auto vars:     Size  Location     Type
 36999 ;;		None
 37000 ;; Return value:  Size  Location     Type
 37001 ;;                  1    wreg      void 
 37002 ;; Registers used:
 37003 ;;		None
 37004 ;; Tracked objects:
 37005 ;;		On entry : 3F/1
 37006 ;;		On exit  : 3F/1
 37007 ;;		Unchanged: 3F/0
 37008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37013 ;;Total ram usage:        2 bytes
 37014 ;; Hardware stack levels used: 1
 37015 ;; This function calls:
 37016 ;;		Nothing
 37017 ;; This function is called by:
 37018 ;;		_TMR1_ISR
 37019 ;; This function uses a non-reentrant model
 37020 ;;
 37021                           
 37022                           	psect	text199
 37023  009B88                     __ptext199:
 37024                           	callstack 0
 37025  009B88                     _TMR1_WriteTimer:
 37026                           	callstack 15
 37027                           
 37028                           ; BSR set to: 1
 37029                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 37030                           
 37031                           ; BSR set to: 1
 37032                           ;incstack = 0
 37033  009B88  A4CF               	btfss	207,2,c	;volatile
 37034  009B8A  D007               	goto	i2l1147
 37035                           
 37036                           ; BSR set to: 1
 37037                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 37038  009B8C  90CF               	bcf	207,0,c	;volatile
 37039                           
 37040                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 37041  009B8E  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37042                           
 37043                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 37044  009B92  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37045                           
 37046                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 37047  009B96  80CF               	bsf	207,0,c	;volatile
 37048                           
 37049                           ;mcc_generated_files/tmr1.c: 142:     }
 37050  009B98  0012               	return	
 37051  009B9A                     i2l1147:
 37052                           
 37053                           ; BSR set to: 1
 37054                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 37055  009B9A  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37056                           
 37057                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 37058  009B9E  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37059                           
 37060                           ; BSR set to: 1
 37061  009BA2  0012               	return		;funcret
 37062  009BA4                     __end_of_TMR1_WriteTimer:
 37063                           	callstack 0
 37064                           
 37065 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 37066 ;; Defined at:
 37067 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 37068 ;; Parameters:    Size  Location     Type
 37069 ;;		None
 37070 ;; Auto vars:     Size  Location     Type
 37071 ;;		None
 37072 ;; Return value:  Size  Location     Type
 37073 ;;                  1    wreg      void 
 37074 ;; Registers used:
 37075 ;;		None
 37076 ;; Tracked objects:
 37077 ;;		On entry : 3F/2
 37078 ;;		On exit  : 3F/2
 37079 ;;		Unchanged: 3F/0
 37080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37085 ;;Total ram usage:        0 bytes
 37086 ;; Hardware stack levels used: 1
 37087 ;; This function calls:
 37088 ;;		Nothing
 37089 ;; This function is called by:
 37090 ;;		_TMR1_Initialize
 37091 ;;		_TMR1_ISR
 37092 ;; This function uses a non-reentrant model
 37093 ;;
 37094                           
 37095                           	psect	text200
 37096  009EBE                     __ptext200:
 37097                           	callstack 0
 37098  009EBE                     _TMR1_DefaultInterruptHandler:
 37099                           	callstack 15
 37100                           
 37101                           ; BSR set to: 2
 37102                           
 37103                           ; BSR set to: 1
 37104                           ;incstack = 0
 37105  009EBE  0012               	return		;funcret
 37106  009EC0                     __end_of_TMR1_DefaultInterruptHandler:
 37107                           	callstack 0
 37108                           
 37109 ;; *************** function _TMR0_ISR *****************
 37110 ;; Defined at:
 37111 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 37112 ;; Parameters:    Size  Location     Type
 37113 ;;		None
 37114 ;; Auto vars:     Size  Location     Type
 37115 ;;		None
 37116 ;; Return value:  Size  Location     Type
 37117 ;;                  1    wreg      void 
 37118 ;; Registers used:
 37119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37120 ;; Tracked objects:
 37121 ;;		On entry : 3F/E
 37122 ;;		On exit  : 0/0
 37123 ;;		Unchanged: 0/0
 37124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37129 ;;Total ram usage:        0 bytes
 37130 ;; Hardware stack levels used: 1
 37131 ;; Hardware stack levels required when called: 1
 37132 ;; This function calls:
 37133 ;;		Absolute function
 37134 ;;		_TMR0_DefaultInterruptHandler
 37135 ;;		_rxi
 37136 ;; This function is called by:
 37137 ;;		_INTERRUPT_InterruptManager
 37138 ;; This function uses a non-reentrant model
 37139 ;;
 37140                           
 37141                           	psect	text201
 37142  009A3C                     __ptext201:
 37143                           	callstack 0
 37144  009A3C                     _TMR0_ISR:
 37145                           	callstack 15
 37146                           
 37147                           ; BSR set to: 14
 37148                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 37149                           
 37150                           ; BSR set to: 2
 37151                           ;incstack = 0
 37152  009A3C  9BCA               	bcf	202,5,b	;volatile
 37153                           
 37154                           ; BSR set to: 14
 37155                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 37156  009A3E  EC28  F027         	call	_rxi	;wreg free
 37157                           
 37158                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 37159  009A42  0102               	movlb	2	; () banked
 37160  009A44  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37161  009A46  11E2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37162  009A48  B4D8               	btfsc	status,2,c
 37163  009A4A  0012               	return	
 37164                           
 37165                           ; BSR set to: 2
 37166                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 37167  009A4C  D801               	call	i2u1904_48
 37168  009A4E  0012               	return	
 37169  009A50                     i2u1904_48:
 37170  009A50  0005               	push	
 37171  009A52  6EFA               	movwf	pclath,c
 37172  009A54  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37173  009A56  6EFD               	movwf	tosl,c
 37174  009A58  51E2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37175  009A5A  6EFE               	movwf	tosh,c
 37176  009A5C  6AFF               	clrf	tosu,c
 37177  009A5E  50FA               	movf	pclath,w,c
 37178  009A60  0012               	return		;indir
 37179  009A62                     __end_of_TMR0_ISR:
 37180                           	callstack 0
 37181                           
 37182 ;; *************** function _rxi *****************
 37183 ;; Defined at:
 37184 ;;		line 41 in file "inputs_MC50.c"
 37185 ;; Parameters:    Size  Location     Type
 37186 ;;		None
 37187 ;; Auto vars:     Size  Location     Type
 37188 ;;		None
 37189 ;; Return value:  Size  Location     Type
 37190 ;;                  1    wreg      void 
 37191 ;; Registers used:
 37192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37193 ;; Tracked objects:
 37194 ;;		On entry : 3F/E
 37195 ;;		On exit  : 3C/0
 37196 ;;		Unchanged: 0/0
 37197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37202 ;;Total ram usage:        2 bytes
 37203 ;; Hardware stack levels used: 1
 37204 ;; This function calls:
 37205 ;;		Nothing
 37206 ;; This function is called by:
 37207 ;;		_TMR0_ISR
 37208 ;; This function uses a non-reentrant model
 37209 ;;
 37210                           
 37211                           	psect	text202
 37212  004E50                     __ptext202:
 37213                           	callstack 0
 37214  004E50                     _rxi:
 37215                           	callstack 15
 37216                           
 37217                           ; BSR set to: 14
 37218                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 37219                           
 37220                           ;incstack = 0
 37221  004E50  0E00               	movlw	0
 37222  004E52  B68E               	btfsc	142,3,c	;volatile
 37223  004E54  0E01               	movlw	1
 37224  004E56  0100               	movlb	0	; () banked
 37225  004E58  6F89               	movwf	_RFBit& (0+255),b	;volatile
 37226                           
 37227                           ; BSR set to: 0
 37228                           ;inputs_MC50.c: 47:     if (RFFull)
 37229  004E5A  518B               	movf	_RFFull& (0+255),w,b	;volatile
 37230  004E5C  A4D8               	btfss	status,2,c
 37231  004E5E  0012               	return	
 37232  004E60  D116               	goto	i2l14838
 37233  004E62                     i2l14728:
 37234                           
 37235                           ; BSR set to: 1
 37236                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 37237  004E62  0100               	movlb	0	; () banked
 37238  004E64  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37239  004E66  A4D8               	btfss	status,2,c
 37240  004E68  D004               	goto	i2l14732
 37241                           
 37242                           ; BSR set to: 0
 37243                           ;inputs_MC50.c: 56:                 RFstate = 3;
 37244  004E6A  0E03               	movlw	3
 37245  004E6C  0101               	movlb	1	; () banked
 37246  004E6E  6F9D               	movwf	_RFstate& (0+255),b
 37247                           
 37248                           ;inputs_MC50.c: 57:             } else {
 37249  004E70  0012               	return	
 37250  004E72                     i2l14732:
 37251                           
 37252                           ; BSR set to: 0
 37253                           ;inputs_MC50.c: 58:                 RFcount--;
 37254  004E72  077E               	decf	_RFcount& (0+255),f,b
 37255  004E74  A0D8               	btfss	status,0,c
 37256  004E76  077F               	decf	(_RFcount+1)& (0+255),f,b
 37257                           
 37258                           ; BSR set to: 0
 37259                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 37260  004E78  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37261  004E7A  0012               	return	
 37262  004E7C  0EF6               	movlw	246
 37263  004E7E  5D7E               	subwf	_RFcount& (0+255),w,b
 37264  004E80  0EFF               	movlw	255
 37265  004E82  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37266  004E84  B0D8               	btfsc	status,0,c
 37267  004E86  0012               	return	
 37268  004E88                     i2u1467_40:
 37269  004E88                     i2l14736:
 37270                           
 37271                           ; BSR set to: 0
 37272                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 37273  004E88  0E00               	movlw	0
 37274  004E8A  0101               	movlb	1	; () banked
 37275  004E8C  6F9D               	movwf	_RFstate& (0+255),b
 37276  004E8E  0012               	return	
 37277  004E90                     i2l14738:
 37278                           
 37279                           ; BSR set to: 1
 37280                           ;inputs_MC50.c: 67:             if (RFBit) {
 37281  004E90  0100               	movlb	0	; () banked
 37282  004E92  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37283  004E94  B4D8               	btfsc	status,2,c
 37284  004E96  D02C               	goto	i2l14758
 37285                           
 37286                           ; BSR set to: 0
 37287                           ;inputs_MC50.c: 71:                 RFstate = 2;
 37288  004E98  0E02               	movlw	2
 37289  004E9A  0101               	movlb	1	; () banked
 37290  004E9C  6F9D               	movwf	_RFstate& (0+255),b
 37291                           
 37292                           ; BSR set to: 1
 37293                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 37294  004E9E  0EC6               	movlw	low _BufferRF
 37295  004EA0  0100               	movlb	0	; () banked
 37296  004EA2  258D               	addwf	_Bptr& (0+255),w,b
 37297  004EA4  6ED9               	movwf	fsr2l,c
 37298  004EA6  6ADA               	clrf	fsr2h,c
 37299  004EA8  0E02               	movlw	high _BufferRF
 37300  004EAA  22DA               	addwfc	fsr2h,f,c
 37301  004EAC  90D8               	bcf	status,0,c
 37302  004EAE  32DF               	rrcf	indf2,f,c
 37303                           
 37304                           ; BSR set to: 0
 37305                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 37306  004EB0  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37307  004EB2  D008               	goto	i2l14748
 37308                           
 37309                           ; BSR set to: 0
 37310                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 37311  004EB4  0EC6               	movlw	low _BufferRF
 37312  004EB6  258D               	addwf	_Bptr& (0+255),w,b
 37313  004EB8  6ED9               	movwf	fsr2l,c
 37314  004EBA  6ADA               	clrf	fsr2h,c
 37315  004EBC  0E02               	movlw	high _BufferRF
 37316  004EBE  22DA               	addwfc	fsr2h,f,c
 37317  004EC0  0E80               	movlw	128
 37318  004EC2  26DF               	addwf	indf2,f,c
 37319  004EC4                     i2l14748:
 37320                           
 37321                           ; BSR set to: 0
 37322                           ;inputs_MC50.c: 81:                 RFcount = 0;
 37323  004EC4  0E00               	movlw	0
 37324  004EC6  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37325  004EC8  0E00               	movlw	0
 37326  004ECA  6F7E               	movwf	_RFcount& (0+255),b
 37327                           
 37328                           ; BSR set to: 0
 37329                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 37330  004ECC  2B8C               	incf	_BitCount& (0+255),f,b
 37331  004ECE  C08C  F001         	movff	_BitCount,??_rxi
 37332  004ED2  0E07               	movlw	7
 37333  004ED4  1601               	andwf	??_rxi^0,f,c
 37334  004ED6  B4D8               	btfsc	status,2,c
 37335                           
 37336                           ; BSR set to: 0
 37337                           ;inputs_MC50.c: 84:                     Bptr++;
 37338  004ED8  2B8D               	incf	_Bptr& (0+255),f,b
 37339                           
 37340                           ; BSR set to: 0
 37341                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 37342  004EDA  0E41               	movlw	65
 37343  004EDC  198C               	xorwf	_BitCount& (0+255),w,b
 37344  004EDE  A4D8               	btfss	status,2,c
 37345  004EE0  0012               	return	
 37346                           
 37347                           ; BSR set to: 0
 37348                           ;inputs_MC50.c: 86:                     RFstate = 0;
 37349  004EE2  0E00               	movlw	0
 37350  004EE4  0101               	movlb	1	; () banked
 37351  004EE6  6F9D               	movwf	_RFstate& (0+255),b
 37352                           
 37353                           ;inputs_MC50.c: 87:                     RFFull = 1;
 37354  004EE8  0E01               	movlw	1
 37355  004EEA  0100               	movlb	0	; () banked
 37356  004EEC  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37357  004EEE  0012               	return	
 37358  004EF0                     i2l14758:
 37359                           
 37360                           ; BSR set to: 0
 37361                           ;inputs_MC50.c: 92:                 RFcount++;
 37362  004EF0  4B7E               	infsnz	_RFcount& (0+255),f,b
 37363  004EF2  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37364                           
 37365                           ; BSR set to: 0
 37366                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 37367  004EF4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37368  004EF6  0012               	return	
 37369  004EF8  517F               	movf	(_RFcount+1)& (0+255),w,b
 37370  004EFA  E104               	bnz	i2u1472_40
 37371  004EFC  0E0A               	movlw	10
 37372  004EFE  5D7E               	subwf	_RFcount& (0+255),w,b
 37373  004F00  A0D8               	btfss	status,0,c
 37374  004F02  0012               	return	
 37375  004F04                     i2u1472_40:
 37376                           
 37377                           ; BSR set to: 0
 37378                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 37379  004F04  0E01               	movlw	1
 37380  004F06  0101               	movlb	1	; () banked
 37381  004F08  6F9D               	movwf	_RFstate& (0+255),b
 37382                           
 37383                           ;inputs_MC50.c: 97:                     Bptr = 0;
 37384  004F0A  0E00               	movlw	0
 37385  004F0C  0100               	movlb	0	; () banked
 37386  004F0E  6F8D               	movwf	_Bptr& (0+255),b
 37387                           
 37388                           ;inputs_MC50.c: 98:                     BitCount = 0;
 37389  004F10  0E00               	movlw	0
 37390  004F12  6F8C               	movwf	_BitCount& (0+255),b
 37391  004F14  0012               	return	
 37392  004F16                     i2l14764:
 37393                           
 37394                           ; BSR set to: 1
 37395                           ;inputs_MC50.c: 103:             if (RFBit) {
 37396  004F16  0100               	movlb	0	; () banked
 37397  004F18  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37398  004F1A  B4D8               	btfsc	status,2,c
 37399  004F1C  D030               	goto	i2l14780
 37400                           
 37401                           ; BSR set to: 0
 37402                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37403  004F1E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37404  004F20  D00E               	goto	i2u1475_40
 37405  004F22  517F               	movf	(_RFcount+1)& (0+255),w,b
 37406  004F24  E104               	bnz	i2u1474_40
 37407  004F26  0E14               	movlw	20
 37408  004F28  5D7E               	subwf	_RFcount& (0+255),w,b
 37409  004F2A  A0D8               	btfss	status,0,c
 37410  004F2C  D008               	goto	i2u1475_40
 37411  004F2E                     i2u1474_40:
 37412                           
 37413                           ; BSR set to: 0
 37414  004F2E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37415  004F30  D01E               	goto	i2l14778
 37416  004F32  517F               	movf	(_RFcount+1)& (0+255),w,b
 37417  004F34  E104               	bnz	i2u1475_40
 37418  004F36  0E2D               	movlw	45
 37419  004F38  5D7E               	subwf	_RFcount& (0+255),w,b
 37420  004F3A  A0D8               	btfss	status,0,c
 37421  004F3C  D018               	goto	i2l14778
 37422  004F3E                     i2u1475_40:
 37423                           
 37424                           ; BSR set to: 0
 37425                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37426  004F3E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37427  004F40  D7A3               	goto	i2u1467_40
 37428  004F42  517F               	movf	(_RFcount+1)& (0+255),w,b
 37429  004F44  E104               	bnz	i2u1476_40
 37430  004F46  0E50               	movlw	80
 37431  004F48  5D7E               	subwf	_RFcount& (0+255),w,b
 37432  004F4A  A0D8               	btfss	status,0,c
 37433  004F4C  D79D               	goto	i2u1467_40
 37434  004F4E                     i2u1476_40:
 37435                           
 37436                           ; BSR set to: 0
 37437  004F4E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37438  004F50  D006               	goto	i2l14776
 37439  004F52  517F               	movf	(_RFcount+1)& (0+255),w,b
 37440  004F54  E199               	bnz	i2l14736
 37441  004F56  0E64               	movlw	100
 37442  004F58  5D7E               	subwf	_RFcount& (0+255),w,b
 37443  004F5A  B0D8               	btfsc	status,0,c
 37444  004F5C  D795               	goto	i2u1467_40
 37445  004F5E                     i2l14776:
 37446                           
 37447                           ; BSR set to: 0
 37448                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37449  004F5E  0EFF               	movlw	255
 37450  004F60  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37451  004F62  0EF6               	movlw	246
 37452  004F64  6F7E               	movwf	_RFcount& (0+255),b
 37453                           
 37454                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37455  004F66  0E04               	movlw	4
 37456  004F68  0101               	movlb	1	; () banked
 37457  004F6A  6F9D               	movwf	_RFstate& (0+255),b
 37458  004F6C  0012               	return	
 37459  004F6E                     i2l14778:
 37460                           
 37461                           ; BSR set to: 0
 37462                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37463  004F6E  0E00               	movlw	0
 37464  004F70  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37465  004F72  0E00               	movlw	0
 37466  004F74  6F7E               	movwf	_RFcount& (0+255),b
 37467                           
 37468                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37469  004F76  0E02               	movlw	2
 37470  004F78  0101               	movlb	1	; () banked
 37471  004F7A  6F9D               	movwf	_RFstate& (0+255),b
 37472  004F7C  0012               	return	
 37473  004F7E                     i2l14780:
 37474                           
 37475                           ; BSR set to: 0
 37476                           ;inputs_MC50.c: 122:                 RFcount++;
 37477  004F7E  4B7E               	infsnz	_RFcount& (0+255),f,b
 37478  004F80  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37479  004F82  0012               	return	
 37480  004F84                     i2l14782:
 37481                           
 37482                           ; BSR set to: 1
 37483                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37484  004F84  0100               	movlb	0	; () banked
 37485  004F86  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37486  004F88  A4D8               	btfss	status,2,c
 37487  004F8A  D056               	goto	i2l14818
 37488                           
 37489                           ; BSR set to: 0
 37490                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37491  004F8C  0E05               	movlw	5
 37492  004F8E  0101               	movlb	1	; () banked
 37493  004F90  6F9D               	movwf	_RFstate& (0+255),b
 37494                           
 37495                           ; BSR set to: 1
 37496                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37497  004F92  0EC6               	movlw	low _BufferRF
 37498  004F94  0100               	movlb	0	; () banked
 37499  004F96  258D               	addwf	_Bptr& (0+255),w,b
 37500  004F98  6ED9               	movwf	fsr2l,c
 37501  004F9A  6ADA               	clrf	fsr2h,c
 37502  004F9C  0E02               	movlw	high _BufferRF
 37503  004F9E  22DA               	addwfc	fsr2h,f,c
 37504  004FA0  90D8               	bcf	status,0,c
 37505  004FA2  32DF               	rrcf	indf2,f,c
 37506                           
 37507                           ; BSR set to: 0
 37508                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37509  004FA4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37510  004FA6  D008               	goto	i2l14792
 37511                           
 37512                           ; BSR set to: 0
 37513                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37514  004FA8  0EC6               	movlw	low _BufferRF
 37515  004FAA  258D               	addwf	_Bptr& (0+255),w,b
 37516  004FAC  6ED9               	movwf	fsr2l,c
 37517  004FAE  6ADA               	clrf	fsr2h,c
 37518  004FB0  0E02               	movlw	high _BufferRF
 37519  004FB2  22DA               	addwfc	fsr2h,f,c
 37520  004FB4  0E80               	movlw	128
 37521  004FB6  26DF               	addwf	indf2,f,c
 37522  004FB8                     i2l14792:
 37523                           
 37524                           ; BSR set to: 0
 37525                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37526  004FB8  0E00               	movlw	0
 37527  004FBA  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37528  004FBC  0E00               	movlw	0
 37529  004FBE  6F7E               	movwf	_RFcount& (0+255),b
 37530                           
 37531                           ; BSR set to: 0
 37532                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37533  004FC0  2B8C               	incf	_BitCount& (0+255),f,b
 37534  004FC2  C08C  F001         	movff	_BitCount,??_rxi
 37535  004FC6  0E07               	movlw	7
 37536  004FC8  1601               	andwf	??_rxi^0,f,c
 37537  004FCA  A4D8               	btfss	status,2,c
 37538  004FCC  D009               	goto	i2l14800
 37539                           
 37540                           ; BSR set to: 0
 37541                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37542  004FCE  2B8D               	incf	_Bptr& (0+255),f,b
 37543                           
 37544                           ; BSR set to: 0
 37545                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37546  004FD0  0EC6               	movlw	low _BufferRF
 37547  004FD2  258D               	addwf	_Bptr& (0+255),w,b
 37548  004FD4  6ED9               	movwf	fsr2l,c
 37549  004FD6  6ADA               	clrf	fsr2h,c
 37550  004FD8  0E02               	movlw	high _BufferRF
 37551  004FDA  22DA               	addwfc	fsr2h,f,c
 37552  004FDC  0E00               	movlw	0
 37553  004FDE  6EDF               	movwf	indf2,c
 37554  004FE0                     i2l14800:
 37555                           
 37556                           ; BSR set to: 0
 37557                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37558  004FE0  0E0D               	movlw	13
 37559  004FE2  198C               	xorwf	_BitCount& (0+255),w,b
 37560  004FE4  A4D8               	btfss	status,2,c
 37561  004FE6  0012               	return	
 37562                           
 37563                           ; BSR set to: 0
 37564                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37565  004FE8  0E00               	movlw	0
 37566  004FEA  0101               	movlb	1	; () banked
 37567  004FEC  6F9D               	movwf	_RFstate& (0+255),b
 37568                           
 37569                           ; BSR set to: 1
 37570                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37571  004FEE  0100               	movlb	0	; () banked
 37572  004FF0  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37573  004FF2  A4D8               	btfss	status,2,c
 37574  004FF4  D01A               	goto	i2l14812
 37575                           
 37576                           ; BSR set to: 0
 37577                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37578  004FF6  0102               	movlb	2	; () banked
 37579  004FF8  51C6               	movf	_BufferRF& (0+255),w,b
 37580  004FFA  0101               	movlb	1	; () banked
 37581  004FFC  198B               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37582  004FFE  A4D8               	btfss	status,2,c
 37583  005000  D00F               	goto	i2l1620
 37584                           
 37585                           ; BSR set to: 1
 37586  005002  0102               	movlb	2	; () banked
 37587  005004  51C7               	movf	(_BufferRF+1)& (0+255),w,b
 37588  005006  0101               	movlb	1	; () banked
 37589  005008  198C               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37590  00500A  A4D8               	btfss	status,2,c
 37591  00500C  D009               	goto	i2l1620
 37592                           
 37593                           ; BSR set to: 1
 37594                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37595  00500E  0E01               	movlw	1
 37596  005010  0100               	movlb	0	; () banked
 37597  005012  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37598                           
 37599                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37600  005014  0E00               	movlw	0
 37601  005016  0102               	movlb	2	; () banked
 37602  005018  6FC8               	movwf	(_BufferRF+2)& (0+255),b
 37603                           
 37604                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37605  00501A  0E00               	movlw	0
 37606  00501C  6FC9               	movwf	(_BufferRF+3)& (0+255),b
 37607                           
 37608                           ;inputs_MC50.c: 152:                         }
 37609  00501E  0012               	return	
 37610  005020                     i2l1620:
 37611                           
 37612                           ; BSR set to: 1
 37613                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37614  005020  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37615                           
 37616                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37617  005024  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37618  005028  0012               	return	
 37619  00502A                     i2l14812:
 37620                           
 37621                           ; BSR set to: 0
 37622                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37623  00502A  0E01               	movlw	1
 37624  00502C  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37625                           
 37626                           ; BSR set to: 0
 37627                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37628  00502E  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37629                           
 37630                           ; BSR set to: 0
 37631                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37632  005032  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37633  005036  0012               	return	
 37634  005038                     i2l14818:
 37635                           
 37636                           ; BSR set to: 0
 37637                           ;inputs_MC50.c: 168:                 RFcount++;
 37638  005038  4B7E               	infsnz	_RFcount& (0+255),f,b
 37639  00503A  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37640                           
 37641                           ; BSR set to: 0
 37642                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37643  00503C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37644  00503E  0012               	return	
 37645  005040  517F               	movf	(_RFcount+1)& (0+255),w,b
 37646  005042  E104               	bnz	i2u1485_40
 37647  005044  0E0A               	movlw	10
 37648  005046  5D7E               	subwf	_RFcount& (0+255),w,b
 37649  005048  A0D8               	btfss	status,0,c
 37650  00504A  0012               	return	
 37651  00504C                     i2u1485_40:
 37652  00504C  D71D               	goto	i2u1467_40
 37653  00504E                     i2l14824:
 37654                           
 37655                           ; BSR set to: 1
 37656                           ;inputs_MC50.c: 177:             if (RFBit) {
 37657  00504E  0100               	movlb	0	; () banked
 37658  005050  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37659  005052  B4D8               	btfsc	status,2,c
 37660  005054  D004               	goto	i2l14828
 37661                           
 37662                           ; BSR set to: 0
 37663                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37664  005056  0E04               	movlw	4
 37665  005058  0101               	movlb	1	; () banked
 37666  00505A  6F9D               	movwf	_RFstate& (0+255),b
 37667                           
 37668                           ;inputs_MC50.c: 183:             } else {
 37669  00505C  0012               	return	
 37670  00505E                     i2l14828:
 37671                           
 37672                           ; BSR set to: 0
 37673                           ;inputs_MC50.c: 184:                 RFcount--;
 37674  00505E  077E               	decf	_RFcount& (0+255),f,b
 37675  005060  A0D8               	btfss	status,0,c
 37676  005062  077F               	decf	(_RFcount+1)& (0+255),f,b
 37677                           
 37678                           ; BSR set to: 0
 37679                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 37680  005064  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37681  005066  0012               	return	
 37682  005068  0EF6               	movlw	246
 37683  00506A  5D7E               	subwf	_RFcount& (0+255),w,b
 37684  00506C  0EFF               	movlw	255
 37685  00506E  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37686  005070  B0D8               	btfsc	status,0,c
 37687  005072  0012               	return	
 37688  005074  D747               	goto	i2u1472_40
 37689  005076                     i2l14834:
 37690                           
 37691                           ; BSR set to: 1
 37692                           ;inputs_MC50.c: 197:             RFstate = 1;
 37693  005076  0E01               	movlw	1
 37694  005078  6F9D               	movwf	_RFstate& (0+255),b
 37695                           
 37696                           ;inputs_MC50.c: 198:             RFcount = 0;
 37697  00507A  0E00               	movlw	0
 37698  00507C  0100               	movlb	0	; () banked
 37699  00507E  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37700  005080  0E00               	movlw	0
 37701  005082  6F7E               	movwf	_RFcount& (0+255),b
 37702                           
 37703                           ;inputs_MC50.c: 199:             Bptr = 0;
 37704  005084  0E00               	movlw	0
 37705  005086  6F8D               	movwf	_Bptr& (0+255),b
 37706                           
 37707                           ;inputs_MC50.c: 200:             BitCount = 0;
 37708  005088  0E00               	movlw	0
 37709  00508A  6F8C               	movwf	_BitCount& (0+255),b
 37710                           
 37711                           ;inputs_MC50.c: 201:             break;
 37712  00508C  0012               	return	
 37713  00508E                     i2l14838:
 37714                           
 37715                           ; BSR set to: 0
 37716  00508E  0101               	movlb	1	; () banked
 37717  005090  519D               	movf	_RFstate& (0+255),w,b
 37718  005092  6E01               	movwf	??_rxi^0,c
 37719  005094  6A02               	clrf	(??_rxi+1)^0,c
 37720                           
 37721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37722                           ; Switch size 1, requested type "simple"
 37723                           ; Number of cases is 1, Range of values is 0 to 0
 37724                           ; switch strategies available:
 37725                           ; Name         Instructions Cycles
 37726                           ; simple_byte            4     3 (average)
 37727                           ;	Chosen strategy is simple_byte
 37728  005096  5002               	movf	(??_rxi+1)^0,w,c
 37729  005098  0A00               	xorlw	0	; case 0
 37730  00509A  A4D8               	btfss	status,2,c
 37731  00509C  D7EC               	goto	i2l14834
 37732                           
 37733                           ; BSR set to: 1
 37734                           ; Switch size 1, requested type "simple"
 37735                           ; Number of cases is 6, Range of values is 0 to 5
 37736                           ; switch strategies available:
 37737                           ; Name         Instructions Cycles
 37738                           ; simple_byte           19    10 (average)
 37739                           ;	Chosen strategy is simple_byte
 37740  00509E  5001               	movf	??_rxi^0,w,c
 37741  0050A0  0A00               	xorlw	0	; case 0
 37742  0050A2  B4D8               	btfsc	status,2,c
 37743  0050A4  D7E8               	goto	i2l14834
 37744  0050A6  0A01               	xorlw	1	; case 1
 37745  0050A8  B4D8               	btfsc	status,2,c
 37746  0050AA  D735               	goto	i2l14764
 37747  0050AC  0A03               	xorlw	3	; case 2
 37748  0050AE  B4D8               	btfsc	status,2,c
 37749  0050B0  D6D8               	goto	i2l14728
 37750  0050B2  0A01               	xorlw	1	; case 3
 37751  0050B4  B4D8               	btfsc	status,2,c
 37752  0050B6  D6EC               	goto	i2l14738
 37753  0050B8  0A07               	xorlw	7	; case 4
 37754  0050BA  B4D8               	btfsc	status,2,c
 37755  0050BC  D763               	goto	i2l14782
 37756  0050BE  0A01               	xorlw	1	; case 5
 37757  0050C0  B4D8               	btfsc	status,2,c
 37758  0050C2  D7C5               	goto	i2l14824
 37759  0050C4  D7D8               	goto	i2l14834
 37760  0050C6                     __end_of_rxi:
 37761                           	callstack 0
 37762                           
 37763 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 37764 ;; Defined at:
 37765 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 37766 ;; Parameters:    Size  Location     Type
 37767 ;;		None
 37768 ;; Auto vars:     Size  Location     Type
 37769 ;;		None
 37770 ;; Return value:  Size  Location     Type
 37771 ;;                  1    wreg      void 
 37772 ;; Registers used:
 37773 ;;		None
 37774 ;; Tracked objects:
 37775 ;;		On entry : 3F/2
 37776 ;;		On exit  : 3F/2
 37777 ;;		Unchanged: 3F/0
 37778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37783 ;;Total ram usage:        0 bytes
 37784 ;; Hardware stack levels used: 1
 37785 ;; This function calls:
 37786 ;;		Nothing
 37787 ;; This function is called by:
 37788 ;;		_TMR0_Initialize
 37789 ;;		_TMR0_ISR
 37790 ;; This function uses a non-reentrant model
 37791 ;;
 37792                           
 37793                           	psect	text203
 37794  009EC0                     __ptext203:
 37795                           	callstack 0
 37796  009EC0                     _TMR0_DefaultInterruptHandler:
 37797                           	callstack 15
 37798                           
 37799                           ; BSR set to: 2
 37800                           
 37801                           ;incstack = 0
 37802  009EC0  0012               	return		;funcret
 37803  009EC2                     __end_of_TMR0_DefaultInterruptHandler:
 37804                           	callstack 0
 37805                           
 37806 ;; *************** function _EUSART1_Transmit_ISR *****************
 37807 ;; Defined at:
 37808 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 37809 ;; Parameters:    Size  Location     Type
 37810 ;;		None
 37811 ;; Auto vars:     Size  Location     Type
 37812 ;;		None
 37813 ;; Return value:  Size  Location     Type
 37814 ;;                  1    wreg      void 
 37815 ;; Registers used:
 37816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37817 ;; Tracked objects:
 37818 ;;		On entry : 3F/2
 37819 ;;		On exit  : 30/0
 37820 ;;		Unchanged: 0/0
 37821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37826 ;;Total ram usage:        0 bytes
 37827 ;; Hardware stack levels used: 1
 37828 ;; This function calls:
 37829 ;;		Nothing
 37830 ;; This function is called by:
 37831 ;;		_EUSART1_Initialize
 37832 ;;		_INTERRUPT_InterruptManager
 37833 ;; This function uses a non-reentrant model
 37834 ;;
 37835                           
 37836                           	psect	text204
 37837  0096AE                     __ptext204:
 37838                           	callstack 0
 37839  0096AE                     _EUSART1_Transmit_ISR:
 37840                           	callstack 16
 37841                           
 37842                           ; BSR set to: 2
 37843                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 37844                           
 37845                           ; BSR set to: 2
 37846                           ;incstack = 0
 37847  0096AE  0E08               	movlw	8
 37848  0096B0  0101               	movlb	1	; () banked
 37849  0096B2  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 37850  0096B4  D012               	goto	i2l106
 37851                           
 37852                           ; BSR set to: 1
 37853                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 37854  0096B6  0E84               	movlw	low _eusart1TxBuffer
 37855  0096B8  0100               	movlb	0	; () banked
 37856  0096BA  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 37857  0096BC  6ED9               	movwf	fsr2l,c
 37858  0096BE  6ADA               	clrf	fsr2h,c
 37859  0096C0  0E02               	movlw	high _eusart1TxBuffer
 37860  0096C2  22DA               	addwfc	fsr2h,f,c
 37861  0096C4  50DF               	movf	indf2,w,c
 37862  0096C6  6E9A               	movwf	154,c	;volatile
 37863                           
 37864                           ; BSR set to: 0
 37865  0096C8  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 37866                           
 37867                           ; BSR set to: 0
 37868                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 37869  0096CA  0E07               	movlw	7
 37870  0096CC  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 37871  0096CE  D002               	goto	i2l16868
 37872                           
 37873                           ; BSR set to: 0
 37874                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 37875  0096D0  0E00               	movlw	0
 37876  0096D2  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 37877  0096D4                     i2l16868:
 37878                           
 37879                           ; BSR set to: 0
 37880                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 37881  0096D4  0101               	movlb	1	; () banked
 37882  0096D6  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 37883                           
 37884                           ;mcc_generated_files/eusart1.c: 209:     }
 37885  0096D8  0012               	return	
 37886  0096DA                     i2l106:
 37887                           
 37888                           ; BSR set to: 1
 37889                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 37890  0096DA  010E               	movlb	14	; () banked
 37891  0096DC  99C5               	bcf	197,4,b	;volatile
 37892  0096DE  0012               	return		;funcret
 37893  0096E0                     __end_of_EUSART1_Transmit_ISR:
 37894                           	callstack 0
 37895                           
 37896 ;; *************** function _EUSART1_Receive_ISR *****************
 37897 ;; Defined at:
 37898 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 37899 ;; Parameters:    Size  Location     Type
 37900 ;;		None
 37901 ;; Auto vars:     Size  Location     Type
 37902 ;;		None
 37903 ;; Return value:  Size  Location     Type
 37904 ;;                  1    wreg      void 
 37905 ;; Registers used:
 37906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37907 ;; Tracked objects:
 37908 ;;		On entry : 3F/2
 37909 ;;		On exit  : 0/0
 37910 ;;		Unchanged: 0/0
 37911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37916 ;;Total ram usage:        0 bytes
 37917 ;; Hardware stack levels used: 1
 37918 ;; Hardware stack levels required when called: 2
 37919 ;; This function calls:
 37920 ;;		Absolute function
 37921 ;;		_EUSART1_DefaultErrorHandler
 37922 ;;		_EUSART1_DefaultFramingErrorHandler
 37923 ;;		_EUSART1_DefaultOverrunErrorHandler
 37924 ;;		_EUSART1_RxDataHandler
 37925 ;; This function is called by:
 37926 ;;		_EUSART1_Initialize
 37927 ;;		_INTERRUPT_InterruptManager
 37928 ;; This function uses a non-reentrant model
 37929 ;;
 37930                           
 37931                           	psect	text205
 37932  007F3E                     __ptext205:
 37933                           	callstack 0
 37934  007F3E                     _EUSART1_Receive_ISR:
 37935                           	callstack 14
 37936                           
 37937                           ; BSR set to: 2
 37938                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 37939                           
 37940                           ;incstack = 0
 37941  007F3E  0E74               	movlw	low _eusart1RxStatusBuffer
 37942  007F40  0100               	movlb	0	; () banked
 37943  007F42  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37944  007F44  6ED9               	movwf	fsr2l,c
 37945  007F46  6ADA               	clrf	fsr2h,c
 37946  007F48  0E02               	movlw	high _eusart1RxStatusBuffer
 37947  007F4A  22DA               	addwfc	fsr2h,f,c
 37948  007F4C  0E00               	movlw	0
 37949  007F4E  6EDF               	movwf	indf2,c
 37950                           
 37951                           ; BSR set to: 0
 37952                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 37953  007F50  A49D               	btfss	157,2,c	;volatile
 37954  007F52  D013               	goto	i2u1898_49
 37955                           
 37956                           ; BSR set to: 0
 37957                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 37958  007F54  0E74               	movlw	low _eusart1RxStatusBuffer
 37959  007F56  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37960  007F58  6ED9               	movwf	fsr2l,c
 37961  007F5A  6ADA               	clrf	fsr2h,c
 37962  007F5C  0E02               	movlw	high _eusart1RxStatusBuffer
 37963  007F5E  22DA               	addwfc	fsr2h,f,c
 37964  007F60  0102               	movlb	2	; () banked
 37965  007F62  82DF               	bsf	indf2,1,c
 37966                           
 37967                           ; BSR set to: 2
 37968                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 37969  007F64  D801               	call	i2u1898_48
 37970  007F66  D009               	goto	i2u1898_49
 37971  007F68                     i2u1898_48:
 37972  007F68  0005               	push	
 37973  007F6A  6EFA               	movwf	pclath,c
 37974  007F6C  51E7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 37975  007F6E  6EFD               	movwf	tosl,c
 37976  007F70  51E8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 37977  007F72  6EFE               	movwf	tosh,c
 37978  007F74  6AFF               	clrf	tosu,c
 37979  007F76  50FA               	movf	pclath,w,c
 37980  007F78  0012               	return		;indir
 37981  007F7A                     i2u1898_49:
 37982                           
 37983                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 37984  007F7A  A29D               	btfss	157,1,c	;volatile
 37985  007F7C  D014               	goto	i2u1900_49
 37986                           
 37987                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 37988  007F7E  0E74               	movlw	low _eusart1RxStatusBuffer
 37989  007F80  0100               	movlb	0	; () banked
 37990  007F82  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37991  007F84  6ED9               	movwf	fsr2l,c
 37992  007F86  6ADA               	clrf	fsr2h,c
 37993  007F88  0E02               	movlw	high _eusart1RxStatusBuffer
 37994  007F8A  22DA               	addwfc	fsr2h,f,c
 37995  007F8C  0102               	movlb	2	; () banked
 37996  007F8E  84DF               	bsf	indf2,2,c
 37997                           
 37998                           ; BSR set to: 2
 37999                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 38000  007F90  D801               	call	i2u1900_48
 38001  007F92  D009               	goto	i2u1900_49
 38002  007F94                     i2u1900_48:
 38003  007F94  0005               	push	
 38004  007F96  6EFA               	movwf	pclath,c
 38005  007F98  51E5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 38006  007F9A  6EFD               	movwf	tosl,c
 38007  007F9C  51E6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 38008  007F9E  6EFE               	movwf	tosh,c
 38009  007FA0  6AFF               	clrf	tosu,c
 38010  007FA2  50FA               	movf	pclath,w,c
 38011  007FA4  0012               	return		;indir
 38012  007FA6                     i2u1900_49:
 38013                           
 38014                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 38015  007FA6  0E74               	movlw	low _eusart1RxStatusBuffer
 38016  007FA8  0100               	movlb	0	; () banked
 38017  007FAA  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38018  007FAC  6ED9               	movwf	fsr2l,c
 38019  007FAE  6ADA               	clrf	fsr2h,c
 38020  007FB0  0E02               	movlw	high _eusart1RxStatusBuffer
 38021  007FB2  22DA               	addwfc	fsr2h,f,c
 38022  007FB4  50DF               	movf	indf2,w,c
 38023  007FB6  B4D8               	btfsc	status,2,c
 38024  007FB8  D00C               	goto	i2l16888
 38025                           
 38026                           ; BSR set to: 0
 38027                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 38028  007FBA  D801               	call	i2u1902_48
 38029  007FBC  0012               	return	
 38030  007FBE                     i2u1902_48:
 38031  007FBE  0005               	push	
 38032  007FC0  6EFA               	movwf	pclath,c
 38033  007FC2  0102               	movlb	2	; () banked
 38034  007FC4  51E3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 38035  007FC6  6EFD               	movwf	tosl,c
 38036  007FC8  51E4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 38037  007FCA  6EFE               	movwf	tosh,c
 38038  007FCC  6AFF               	clrf	tosu,c
 38039  007FCE  50FA               	movf	pclath,w,c
 38040  007FD0  0012               	return		;indir
 38041  007FD2                     i2l16888:
 38042                           
 38043                           ; BSR set to: 0
 38044                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 38045  007FD2  EC89  F04D         	call	_EUSART1_RxDataHandler	;wreg free
 38046  007FD6  0012               	return		;funcret
 38047  007FD8                     __end_of_EUSART1_Receive_ISR:
 38048                           	callstack 0
 38049                           
 38050 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 38051 ;; Defined at:
 38052 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 38053 ;; Parameters:    Size  Location     Type
 38054 ;;		None
 38055 ;; Auto vars:     Size  Location     Type
 38056 ;;		None
 38057 ;; Return value:  Size  Location     Type
 38058 ;;                  1    wreg      void 
 38059 ;; Registers used:
 38060 ;;		None
 38061 ;; Tracked objects:
 38062 ;;		On entry : 3F/2
 38063 ;;		On exit  : 3F/2
 38064 ;;		Unchanged: 3F/0
 38065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38070 ;;Total ram usage:        0 bytes
 38071 ;; Hardware stack levels used: 1
 38072 ;; This function calls:
 38073 ;;		Nothing
 38074 ;; This function is called by:
 38075 ;;		_EUSART1_Initialize
 38076 ;;		_EUSART1_Receive_ISR
 38077 ;; This function uses a non-reentrant model
 38078 ;;
 38079                           
 38080                           	psect	text206
 38081  009E82                     __ptext206:
 38082                           	callstack 0
 38083  009E82                     _EUSART1_DefaultOverrunErrorHandler:
 38084                           	callstack 15
 38085                           
 38086                           ; BSR set to: 2
 38087                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 38088                           
 38089                           ;incstack = 0
 38090  009E82  989D               	bcf	157,4,c	;volatile
 38091                           
 38092                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 38093  009E84  889D               	bsf	157,4,c	;volatile
 38094                           
 38095                           ; BSR set to: 2
 38096  009E86  0012               	return		;funcret
 38097  009E88                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 38098                           	callstack 0
 38099                           
 38100 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 38101 ;; Defined at:
 38102 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 38103 ;; Parameters:    Size  Location     Type
 38104 ;;		None
 38105 ;; Auto vars:     Size  Location     Type
 38106 ;;		None
 38107 ;; Return value:  Size  Location     Type
 38108 ;;                  1    wreg      void 
 38109 ;; Registers used:
 38110 ;;		None
 38111 ;; Tracked objects:
 38112 ;;		On entry : 3F/2
 38113 ;;		On exit  : 3F/2
 38114 ;;		Unchanged: 3F/0
 38115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38120 ;;Total ram usage:        0 bytes
 38121 ;; Hardware stack levels used: 1
 38122 ;; This function calls:
 38123 ;;		Nothing
 38124 ;; This function is called by:
 38125 ;;		_EUSART1_Initialize
 38126 ;;		_EUSART1_Receive_ISR
 38127 ;; This function uses a non-reentrant model
 38128 ;;
 38129                           
 38130                           	psect	text207
 38131  009EC2                     __ptext207:
 38132                           	callstack 0
 38133  009EC2                     _EUSART1_DefaultFramingErrorHandler:
 38134                           	callstack 15
 38135                           
 38136                           ; BSR set to: 2
 38137                           
 38138                           ; BSR set to: 2
 38139                           ;incstack = 0
 38140  009EC2  0012               	return		;funcret
 38141  009EC4                     __end_of_EUSART1_DefaultFramingErrorHandler:
 38142                           	callstack 0
 38143                           
 38144 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 38145 ;; Defined at:
 38146 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 38147 ;; Parameters:    Size  Location     Type
 38148 ;;		None
 38149 ;; Auto vars:     Size  Location     Type
 38150 ;;		None
 38151 ;; Return value:  Size  Location     Type
 38152 ;;                  1    wreg      void 
 38153 ;; Registers used:
 38154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38155 ;; Tracked objects:
 38156 ;;		On entry : 3F/2
 38157 ;;		On exit  : 3F/0
 38158 ;;		Unchanged: 0/0
 38159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38164 ;;Total ram usage:        0 bytes
 38165 ;; Hardware stack levels used: 1
 38166 ;; Hardware stack levels required when called: 1
 38167 ;; This function calls:
 38168 ;;		_EUSART1_RxDataHandler
 38169 ;; This function is called by:
 38170 ;;		_EUSART1_Initialize
 38171 ;;		_EUSART1_Receive_ISR
 38172 ;; This function uses a non-reentrant model
 38173 ;;
 38174                           
 38175                           	psect	text208
 38176  009E88                     __ptext208:
 38177                           	callstack 0
 38178  009E88                     _EUSART1_DefaultErrorHandler:
 38179                           	callstack 14
 38180                           
 38181                           ; BSR set to: 2
 38182                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 38183                           
 38184                           ; BSR set to: 2
 38185                           ;incstack = 0
 38186  009E88  EC89  F04D         	call	_EUSART1_RxDataHandler	;wreg free
 38187                           
 38188                           ; BSR set to: 0
 38189  009E8C  0012               	return		;funcret
 38190  009E8E                     __end_of_EUSART1_DefaultErrorHandler:
 38191                           	callstack 0
 38192                           
 38193 ;; *************** function _EUSART1_RxDataHandler *****************
 38194 ;; Defined at:
 38195 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 38196 ;; Parameters:    Size  Location     Type
 38197 ;;		None
 38198 ;; Auto vars:     Size  Location     Type
 38199 ;;		None
 38200 ;; Return value:  Size  Location     Type
 38201 ;;                  1    wreg      void 
 38202 ;; Registers used:
 38203 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38204 ;; Tracked objects:
 38205 ;;		On entry : 3D/0
 38206 ;;		On exit  : 3F/0
 38207 ;;		Unchanged: 0/0
 38208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38213 ;;Total ram usage:        0 bytes
 38214 ;; Hardware stack levels used: 1
 38215 ;; This function calls:
 38216 ;;		Nothing
 38217 ;; This function is called by:
 38218 ;;		_EUSART1_Receive_ISR
 38219 ;;		_EUSART1_DefaultErrorHandler
 38220 ;; This function uses a non-reentrant model
 38221 ;;
 38222                           
 38223                           	psect	text209
 38224  009B12                     __ptext209:
 38225                           	callstack 0
 38226  009B12                     _EUSART1_RxDataHandler:
 38227                           	callstack 15
 38228                           
 38229                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 38230                           
 38231                           ; BSR set to: 0
 38232                           ;incstack = 0
 38233  009B12  0E7C               	movlw	low _eusart1RxBuffer
 38234  009B14  0100               	movlb	0	; () banked
 38235  009B16  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38236  009B18  6ED9               	movwf	fsr2l,c
 38237  009B1A  6ADA               	clrf	fsr2h,c
 38238  009B1C  0E02               	movlw	high _eusart1RxBuffer
 38239  009B1E  22DA               	addwfc	fsr2h,f,c
 38240  009B20  CF99 FFDF          	movff	3993,indf2	;volatile
 38241                           
 38242                           ; BSR set to: 0
 38243  009B24  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 38244                           
 38245                           ; BSR set to: 0
 38246                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 38247  009B26  0E07               	movlw	7
 38248  009B28  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 38249  009B2A  D002               	goto	i2l13156
 38250                           
 38251                           ; BSR set to: 0
 38252                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 38253  009B2C  0E00               	movlw	0
 38254  009B2E  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 38255  009B30                     i2l13156:
 38256                           
 38257                           ; BSR set to: 0
 38258                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 38259  009B30  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 38260                           
 38261                           ; BSR set to: 0
 38262  009B32  0012               	return		;funcret
 38263  009B34                     __end_of_EUSART1_RxDataHandler:
 38264                           	callstack 0
 38265                           
 38266                           	psect	text210
 38267  000000                     __ptext210:
 38268                           	callstack 0
 38269                           
 38270                           	psect	rparam
 38271  0000                     
 38272                           	psect	temp
 38273  000050                     btemp:
 38274                           	callstack 0
 38275  000050                     	ds	1
 38276  0000                     int$flags	set	btemp
 38277  0000                     wtemp8	set	btemp+1
 38278  0000                     ttemp5	set	btemp+1
 38279  0000                     ttemp6	set	btemp+4
 38280  0000                     ttemp7	set	btemp+8
 38281                           
 38282                           	psect	idloc
 38283                           
 38284                           ;Config register IDLOC0 @ 0x200000
 38285                           ;	unspecified, using default values
 38286  200000                     	org	2097152
 38287  200000  0FFF               	dw	4095
 38288                           
 38289                           ;Config register IDLOC1 @ 0x200002
 38290                           ;	unspecified, using default values
 38291  200002                     	org	2097154
 38292  200002  0FFF               	dw	4095
 38293                           
 38294                           ;Config register IDLOC2 @ 0x200004
 38295                           ;	unspecified, using default values
 38296  200004                     	org	2097156
 38297  200004  0FFF               	dw	4095
 38298                           
 38299                           ;Config register IDLOC3 @ 0x200006
 38300                           ;	unspecified, using default values
 38301  200006                     	org	2097158
 38302  200006  0FFF               	dw	4095
 38303                           
 38304                           ;Config register IDLOC4 @ 0x200008
 38305                           ;	unspecified, using default values
 38306  200008                     	org	2097160
 38307  200008  0FFF               	dw	4095
 38308                           
 38309                           ;Config register IDLOC5 @ 0x20000A
 38310                           ;	unspecified, using default values
 38311  20000A                     	org	2097162
 38312  20000A  0FFF               	dw	4095
 38313                           
 38314                           ;Config register IDLOC6 @ 0x20000C
 38315                           ;	unspecified, using default values
 38316  20000C                     	org	2097164
 38317  20000C  0FFF               	dw	4095
 38318                           
 38319                           ;Config register IDLOC7 @ 0x20000E
 38320                           ;	unspecified, using default values
 38321  20000E                     	org	2097166
 38322  20000E  0FFF               	dw	4095
 38323                           
 38324                           	psect	config
 38325                           
 38326                           ;Config register CONFIG1L @ 0x300000
 38327                           ;	External Oscillator mode Selection bits
 38328                           ;	FEXTOSC = OFF, Oscillator not enabled
 38329                           ;	Power-up default value for COSC bits
 38330                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38331  300000                     	org	3145728
 38332  300000  8C                 	db	140
 38333                           
 38334                           ;Config register CONFIG1H @ 0x300001
 38335                           ;	Clock Out Enable bit
 38336                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38337                           ;	Clock Switch Enable bit
 38338                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38339                           ;	Fail-Safe Clock Monitor Enable bit
 38340                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38341  300001                     	org	3145729
 38342  300001  FF                 	db	255
 38343                           
 38344                           ;Config register CONFIG2L @ 0x300002
 38345                           ;	Master Clear Enable bit
 38346                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38347                           ;	Power-up Timer Enable bit
 38348                           ;	PWRTE = ON, Power up timer enabled
 38349                           ;	Low-power BOR enable bit
 38350                           ;	LPBOREN = OFF, ULPBOR disabled
 38351                           ;	Brown-out Reset Enable bits
 38352                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38353  300002                     	org	3145730
 38354  300002  FD                 	db	253
 38355                           
 38356                           ;Config register CONFIG2H @ 0x300003
 38357                           ;	Brown Out Reset Voltage selection bits
 38358                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 38359                           ;	ZCD Disable bit
 38360                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 38361                           ;	PPSLOCK bit One-Way Set Enable bit
 38362                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 38363                           ;	Stack Full/Underflow Reset Enable bit
 38364                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38365                           ;	Debugger Enable bit
 38366                           ;	DEBUG = OFF, Background debugger disabled
 38367                           ;	Extended Instruction Set Enable bit
 38368                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38369  300003                     	org	3145731
 38370  300003  FF                 	db	255
 38371                           
 38372                           ;Config register CONFIG3L @ 0x300004
 38373                           ;	WDT Period Select bits
 38374                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38375                           ;	WDT operating mode
 38376                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 38377  300004                     	org	3145732
 38378  300004  BF                 	db	191
 38379                           
 38380                           ;Config register CONFIG3H @ 0x300005
 38381                           ;	WDT Window Select bits
 38382                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38383                           ;	WDT input clock selector
 38384                           ;	WDTCCS = SC, Software Control
 38385  300005                     	org	3145733
 38386  300005  FF                 	db	255
 38387                           
 38388                           ;Config register CONFIG4L @ 0x300006
 38389                           ;	Write Protection Block 0
 38390                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 38391                           ;	Write Protection Block 1
 38392                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 38393                           ;	Write Protection Block 2
 38394                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 38395                           ;	Write Protection Block 3
 38396                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 38397  300006                     	org	3145734
 38398  300006  FF                 	db	255
 38399                           
 38400                           ;Config register CONFIG4H @ 0x300007
 38401                           ;	Configuration Register Write Protection bit
 38402                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38403                           ;	Boot Block Write Protection bit
 38404                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38405                           ;	Data EEPROM Write Protection bit
 38406                           ;	WRTD = OFF, Data EEPROM not write-protected
 38407                           ;	Scanner Enable bit
 38408                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38409                           ;	Low Voltage Programming Enable bit
 38410                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38411  300007                     	org	3145735
 38412  300007  DF                 	db	223
 38413                           
 38414                           ;Config register CONFIG5L @ 0x300008
 38415                           ;	UserNVM Program Memory Code Protection bit
 38416                           ;	CP = ON, UserNVM code protection enabled
 38417                           ;	DataNVM Memory Code Protection bit
 38418                           ;	CPD = ON, DataNVM code protection enabled
 38419  300008                     	org	3145736
 38420  300008  FC                 	db	252
 38421                           
 38422                           ;Config register CONFIG5H @ 0x300009
 38423                           ;	unspecified, using default values
 38424  300009                     	org	3145737
 38425  300009  FF                 	db	255
 38426                           
 38427                           ;Config register CONFIG6L @ 0x30000A
 38428                           ;	Table Read Protection Block 0
 38429                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38430                           ;	Table Read Protection Block 1
 38431                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38432                           ;	Table Read Protection Block 2
 38433                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38434                           ;	Table Read Protection Block 3
 38435                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38436  30000A                     	org	3145738
 38437  30000A  FF                 	db	255
 38438                           
 38439                           ;Config register CONFIG6H @ 0x30000B
 38440                           ;	Boot Block Table Read Protection bit
 38441                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38442  30000B                     	org	3145739
 38443  30000B  FF                 	db	255
 38444                           tosu	equ	0xFFF
 38445                           tosh	equ	0xFFE
 38446                           tosl	equ	0xFFD
 38447                           stkptr	equ	0xFFC
 38448                           pclatu	equ	0xFFB
 38449                           pclath	equ	0xFFA
 38450                           pcl	equ	0xFF9
 38451                           tblptru	equ	0xFF8
 38452                           tblptrh	equ	0xFF7
 38453                           tblptrl	equ	0xFF6
 38454                           tablat	equ	0xFF5
 38455                           prodh	equ	0xFF4
 38456                           prodl	equ	0xFF3
 38457                           indf0	equ	0xFEF
 38458                           postinc0	equ	0xFEE
 38459                           postdec0	equ	0xFED
 38460                           preinc0	equ	0xFEC
 38461                           plusw0	equ	0xFEB
 38462                           fsr0h	equ	0xFEA
 38463                           fsr0l	equ	0xFE9
 38464                           wreg	equ	0xFE8
 38465                           indf1	equ	0xFE7
 38466                           postinc1	equ	0xFE6
 38467                           postdec1	equ	0xFE5
 38468                           preinc1	equ	0xFE4
 38469                           plusw1	equ	0xFE3
 38470                           fsr1h	equ	0xFE2
 38471                           fsr1l	equ	0xFE1
 38472                           bsr	equ	0xFE0
 38473                           indf2	equ	0xFDF
 38474                           postinc2	equ	0xFDE
 38475                           postdec2	equ	0xFDD
 38476                           preinc2	equ	0xFDC
 38477                           plusw2	equ	0xFDB
 38478                           fsr2h	equ	0xFDA
 38479                           fsr2l	equ	0xFD9
 38480                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         824
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     256
    BANK2           256      7     250
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8322$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8328$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8334$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8340$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8339	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8334	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8333	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8328	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8327	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8322	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8321	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6624$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), var_sys_NVM.motorSensitivity(BANK0[1]), 
		 -> var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _saveNewSerial->_i2c_writeNBytes
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8900080
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3276122
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249934
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       7     6      1  719702
                                             57 COMRAM     1     0      1
                                              4 BANK0      6     6      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778943
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  743020
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  385615
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3969
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3541
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2137506
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1966
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    4     2      2   12559
                                             23 COMRAM     4     2      2
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    8127
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       3     0      3    7904
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     232
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350671
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    5060
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    3017
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2878
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DE      60        0.0%
DATA                 0      0     3DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jul 19 10:17:27 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9DA4  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 883A  
                                           _LoadManufCode 9AAC  
                                        ?_SetSegmentValue 001C  
                                                     l100 947E  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 830A  
                                                     l690 8770  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02DF  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4E50  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 9796  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 9E20  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 95DE  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 8D00  
                                                    l1405 6BB6  
                                       readRFButtons@key1 0088  
                                                    l3102 3CC8  
                                                    l2039 8CF4  
                                                    l2311 59A2  
                                                    l2240 7AF2  
                                                    l2323 882C  
                                                    l2403 5560  
                                                    l1372 937C  
                                                    l1436 60E8  
                                                    l1524 60B8  
                                                    l1357 75D0  
                                                    l1517 606C  
                                                    l3053 3A1C  
                                                    l1366 7752  
                                                    l2254 72BA  
                                                    l1383 62EC  
                                                    l2415 45DE  
                                                    l2328 8836  
                                                    l2353 5484  
                                                    l3233 1066  
                                                    l3065 3BA8  
                                                    l2370 547C  
                                                    l1491 8F88  
                                                    l2507 8190  
                                                    l2443 4750  
                                                    l1731 73F6  
                                                    l1388 6374  
                                                    l2516 957C  
                                                    l2380 5554  
                                                    l1740 745C  
                                                    l1732 73FE  
                                                    l1742 7478  
                                                    l1654 6634  
                                                    l2519 95A2  
                                                    l1495 5F4E  
                                                    l1743 7480  
                                                    l2376 5490  
                                                    l1736 7430  
                                                    l3088 3BEE  
                                                    l1745 749C  
                                                    l1737 7438  
                                                    l1657 66AA  
                                                    l1746 74A4  
                                                    l2810 4E4E  
                                                    l2730 5AC4  
                                                    l1739 7454  
                                                    l1667 66F2  
                                                    l2723 5318  
                                                    l3620 2EC4  
                                                    l1748 74CE  
                                                    l3444 38AA  
                                                    l3380 354A  
                                                    l3372 3510  
                                                    l2477 4866  
                                                    l2397 554C  
                                                    l1861 79DC  
                                                    l3517 8E1C  
                                                    l2653 4418  
                                                    l3630 2F00  
                                                    l3622 2ECA  
                                                    l3438 3878  
                                                    l3390 368E  
                                                    l3358 3450  
                                                    l3631 2F06  
                                                    l2727 59CE  
                                                    l3391 36AE  
                                                    l3640 2F2E  
                                                    l3624 2ED4  
                                                    l2912 2340  
                                                    l3641 2F34  
                                                    l3633 2F0C  
                                                    l3625 2EDE  
                                                    l3617 2EB0  
                                                    l2585 8A0A  
                                                    l2729 5A04  
                                                    l3634 2F12  
                                                    l3626 2EE8  
                                                    l3643 2F3A  
                                                    l3627 2EEE  
                                                    l3619 2EBA  
                                                    l1859 79CC  
                                                    l4284 9180  
                                                    l3644 2F40  
                                                    l3636 2F1C  
                                                    l3628 2EF4  
                                                    l3820 85BC  
                                                    l3645 2F46  
                                                    l3629 2EFA  
                                                    l1869 7A00  
                                                    l2773 4C6A  
                                                    l3493 7C96  
                                                    l3654 319C  
                                                    l3646 2F4C  
                                                    l3638 2F22  
                                                    l3655 31A6  
                                                    l3639 2F28  
                                                    l3649 3016  
                                                    l3499 970E  
                                                    ?_rxi 0001  
                                                    _DKEY 02CF  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02ED  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9D5C  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 9468  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 659C  
                                                    _main 68BC  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7A58  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7B1E  
                                         __end_of_ReadADC 90E4  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5F2C  
                                 __end_of_TMR0_Initialize 9AF0  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9CCA  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20210 8774  
                                                   l20220 8780  
                                                   l20214 877A  
                                                   l20302 90FC  
                                                   l21110 847E  
                                                   l21030 490E  
                                                   l21022 48F8  
                                                   l20240 8D6E  
                                                   l20312 9D48  
                                                   l21112 8486  
                                                   l21104 8468  
                                                   l21024 48FE  
                                                   l22000 371A  
                                                   l20170 82BC  
                                                   l21202 826C  
                                                   l21130 84BE  
                                                   l21122 84A6  
                                                   l21050 49AE  
                                                   l21042 4950  
                                                   l21018 48EE  
                                                   l22010 3748  
                                                   l20412 9B0E  
                                                   l20236 8D68  
                                                   l20252 8D7C  
                                                   l20180 82C8  
                                                   l20308 9D40  
                                                   l20500 88C4  
                                                   l21140 95B6  
                                                   l21060 4A54  
                                                   l21052 49CA  
                                                   l21036 4940  
                                                   l22100 384C  
                                                   l22020 375C  
                                                   l22004 3734  
                                                   l20246 8D76  
                                                   l20174 82C2  
                                                   l20166 82B6  
                                                   l21214 99AE  
                                                   l20510 890E  
                                                   l21310 5DE0  
                                                   l21126 84B0  
                                                   l21070 4AD8  
                                                   l21062 4A70  
                                                   l21054 49EE  
                                                   l22014 3750  
                                                   l22006 373E  
                                                   l20280 9286  
                                                   l20344 97EA  
                                                   l20440 7AA8  
                                                   l20432 7A6C  
                                                   l21232 7786  
                                                   l21152 95D2  
                                                   l21144 95BC  
                                                   l21304 5DDC  
                                                   l21400 5EEC  
                                                   l21080 4B5C  
                                                   l21064 4A8C  
                                                   l21056 4A0A  
                                                   l21048 4982  
                                                   l22120 38A4  
                                                   l22040 37B0  
                                                   l22032 378C  
                                                   l22016 3754  
                                                   l20338 97DE  
                                                   l20418 93F4  
                                                   l20426 9414  
                                                   l20442 7AB4  
                                                   l21226 76EE  
                                                   l21170 9970  
                                                   l21162 9958  
                                                   l21066 4AA4  
                                                   l21058 4A26  
                                                   l21074 4AEA  
                                                   l22106 386A  
                                                   l22050 37D2  
                                                   l22034 37A8  
                                                   l22026 3780  
                                                   l20188 8332  
                                                   l20276 9280  
                                                   l20452 7AE2  
                                                   l21252 67E8  
                                                   l21156 95DA  
                                                   l21316 5E04  
                                                   l20604 780C  
                                                   l21084 4B98  
                                                   l21068 4ABE  
                                                   l21076 4B4E  
                                                   l22116 3892  
                                                   l22060 37E2  
                                                   l22052 37D6  
                                                   l22044 37B4  
                                                   l22028 3784  
                                                   l20286 928C  
                                                   l20462 7B14  
                                                   l21270 68AE  
                                                   l20542 79C8  
                                                   l20534 79AE  
                                                   l21342 5E34  
                                                   l21326 5E08  
                                                   l21430 7ED6  
                                                   l22310 3F6E  
                                                   l22302 3F12  
                                                   l22134 38DA  
                                                   l22054 37DA  
                                                   l22038 37AC  
                                                   l20392 8548  
                                                   l23008 818C  
                                                   l20712 6258  
                                                   l20704 61F4  
                                                   l21256 6820  
                                                   l21248 67AC  
                                                   l20552 79D8  
                                                   l21408 5F28  
                                                   l21424 7ED2  
                                                   l23032 7D80  
                                                   l21512 7E94  
                                                   l20616 787C  
                                                   l20608 7838  
                                                   l22312 3FA6  
                                                   l22304 3F14  
                                                   l22128 38C4  
                                                   l22136 38F6  
                                                   l22080 3820  
                                                   l22072 3816  
                                                   l22056 37DE  
                                                   l20714 625C  
                                                   l21522 9678  
                                                   l21370 5E76  
                                                   l23034 7D96  
                                                   l20474 9048  
                                                   l23202 52B0  
                                                   l21098 8458  
                                                   l22314 3FAC  
                                                   l22066 380C  
                                                   l22146 391E  
                                                   l24002 11FA  
                                                   l20732 861C  
                                                   l20740 80BC  
                                                   l20652 946A  
                                                   l20724 8A48  
                                                   l21540 8384  
                                                   l20564 79F8  
                                                   l20556 79E4  
                                                   l21364 5E6E  
                                                   l21348 5E3C  
                                                   l21292 5DA2  
                                                   l21460 7F3A  
                                                   l21444 7F04  
                                                   l21700 5964  
                                                   l21604 57D6  
                                                   l23212 52CC  
                                                   l23204 52B4  
                                                   l23132 51F4  
                                                   l20644 93CC  
                                                   l22332 4028  
                                                   l22092 3848  
                                                   l22148 3970  
                                                   l20494 8982  
                                                   l20486 8946  
                                                   l21198 822A  
                                                   l20750 80FE  
                                                   l20742 80EE  
                                                   l21286 5D9E  
                                                   l20638 8E62  
                                                   l23054 7DD2  
                                                   l20478 905C  
                                                   l21710 598E  
                                                   l21702 596A  
                                                   l23206 52BA  
                                                   l23150 5230  
                                                   l23118 51B4  
                                                   l20902 7636  
                                                   l22414 41F4  
                                                   l22086 383E  
                                                   l24110 145E  
                                                   l24006 1226  
                                                   l22504 9176  
                                                   l20832 6D14  
                                                   l21536 8380  
                                                   l21384 5E9C  
                                                   l23048 7DC8  
                                                   l21800 7940  
                                                   l23224 52F6  
                                                   l20920 7680  
                                                   l22408 41DE  
                                                   l22344 4088  
                                                   l22336 4062  
                                                   l24120 147E  
                                                   l24024 12B6  
                                                   l20666 949E  
                                                   l21482 7E30  
                                                   l23330 5ADE  
                                                   l23322 5AC0  
                                                   l23306 5A98  
                                                   l23138 520C  
                                                   l23082 5100  
                                                   l20914 7666  
                                                   l20906 7642  
                                                   l22346 409C  
                                                   l24130 14F2  
                                                   l20668 94A2  
                                                   l20692 619E  
                                                   l20684 613A  
                                                   l20676 60F0  
                                                   l20852 6DFC  
                                                   l21548 83A0  
                                                   l21396 5EE8  
                                                   l21476 7E2C  
                                                   l21820 700A  
                                                   l23340 5B04  
                                                   l23316 5AAA  
                                                   l23244 59BE  
                                                   l21628 5862  
                                                   l21652 58AE  
                                                   l23084 5116  
                                                   l20932 76A6  
                                                   l20924 768E  
                                                   l20908 764C  
                                                   l22452 9708  
                                                   l22436 7C56  
                                                   l22292 3EF0  
                                                   l21900 3526  
                                                   l24204 1688  
                                                   l24028 12D8  
                                                   l22710 6296  
                                                   l20678 60F6  
                                                   l20694 61A2  
                                                   l20838 6D66  
                                                   l21726 89CE  
                                                   l21814 6FC6  
                                                   l21806 6F7A  
                                                   l23406 4C58  
                                                   l21638 5880  
                                                   l23166 5264  
                                                   l22470 856E  
                                                   l20774 9256  
                                                   l21910 353A  
                                                   l21902 352E  
                                                   l24150 1584  
                                                   l24126 14D0  
                                                   l24118 147C  
                                                   l24054 1344  
                                                   l24046 1328  
                                                   l24062 1360  
                                                   l22800 5FEE  
                                                   l21576 9646  
                                                   l21568 962E  
                                                   l22544 9348  
                                                   l21760 8B48  
                                                   l21496 7E5E  
                                                   l23504 4DC2  
                                                   l23352 5B32  
                                                   l20960 7202  
                                                   l20952 71C4  
                                                   l21672 5910  
                                                   l21680 592E  
                                                   l21592 57AA  
                                                   l23168 526A  
                                                   l21840 8D52  
                                                   l26000 433A  
                                                   l22472 857A  
                                                   l20928 769A  
                                                   l20936 76B0  
                                                   l20776 9270  
                                                   l24224 16CE  
                                                   l24208 1694  
                                                   l22730 6384  
                                                   l22706 6280  
                                                   l22650 74FE  
                                                   l20698 61B0  
                                                   l20858 6E12  
                                                   l23506 4DC6  
                                                   l23426 4CD0  
                                                   l23370 5B6E  
                                                   l23290 5A66  
                                                   l23098 5144  
                                                   l22482 85AE  
                                                   l20882 75E4  
                                                   l20778 9274  
                                                   l22386 4152  
                                                   l22378 4138  
                                                   l21930 3562  
                                                   l21922 3552  
                                                   l21850 3462  
                                                   l24250 17EE  
                                                   l24226 16D6  
                                                   l24218 16BC  
                                                   l24146 1562  
                                                   l22716 62B6  
                                                   l22492 914E  
                                                   l22556 8E80  
                                                   l22820 6034  
                                                   l22812 6018  
                                                   l22804 5FFC  
                                                   l22900 5D12  
                                                   l21764 8B50  
                                                   l23508 4DCC  
                                                   l23276 5A38  
                                                   l23188 5284  
                                                   l26012 4376  
                                                   l21940 35BC  
                                                   l21852 346A  
                                                   l24252 17F4  
                                                   l24236 1710  
                                                   l24092 1412  
                                                   l22734 63A6  
                                                   l22726 635A  
                                                   l22494 9156  
                                                   l22670 7566  
                                                   l22566 8EC8  
                                                   l21758 8B3C  
                                                   l23542 4E36  
                                                   l23526 4E04  
                                                   l23518 4DEA  
                                                   l23446 4D1C  
                                                   l23366 5B62  
                                                   l23286 5A5C  
                                                   l20966 7256  
                                                   l21694 5940  
                                                   l21598 57BC  
                                                   l21790 78CC  
                                                   l21838 8D20  
                                                   l23614 231E  
                                                   l23606 22F6  
                                                   l23550 21D2  
                                                   l20894 7618  
                                                   l21950 35CC  
                                                   l21862 3486  
                                                   l21854 3472  
                                                   l24254 17FA  
                                                   l24246 17DE  
                                                   l24190 164E  
                                                   l24166 15D0  
                                                   l24094 1416  
                                                   l24078 13CC  
                                                   l24270 1840  
                                                   l22664 7552  
                                                   l22744 8AB8  
                                                   l24440 2F56  
                                                   l22840 6080  
                                                   l22832 605E  
                                                   l22824 6042  
                                                   l22816 6026  
                                                   l22808 600A  
                                                   l22760 5F62  
                                                   l22752 5F40  
                                                   l23464 4D5A  
                                                   l23392 4BEA  
                                                   l23296 5A7A  
                                                   l23800 26E2  
                                                   l23720 257E  
                                                   l23624 2342  
                                                   l26104 456A  
                                                   l26024 43B8  
                                                   l26040 445A  
                                                   l20888 75FE  
                                                   l21960 3654  
                                                   l21952 361A  
                                                   l21936 35AA  
                                                   l21864 348E  
                                                   l21848 345A  
                                                   l24096 1422  
                                                   l22682 758C  
                                                   l22666 755A  
                                                   l24450 314E  
                                                   l24442 2FC8  
                                                   l23490 4DA8  
                                                   l23474 4D76  
                                                   l23458 4D40  
                                                   l23394 4C00  
                                                   l23298 5A82  
                                                   l23570 2258  
                                                   l23626 2382  
                                                   l26042 4470  
                                                   l20898 762A  
                                                   l21866 3496  
                                                   l24178 160A  
                                                   l25412 536E  
                                                   l25404 5352  
                                                   l24452 31B0  
                                                   l24444 301C  
                                                   l22852 60AA  
                                                   l22844 608E  
                                                   l22828 6050  
                                                   l22780 5FA8  
                                                   l22772 5F8C  
                                                   l22764 5F70  
                                                   l22916 5D3E  
                                                   l23492 4DB0  
                                                   l23468 4D62  
                                                   l23476 4D7C  
                                                   l21796 7906  
                                                   l23740 25CE  
                                                   l23708 2528  
                                                   l23652 2434  
                                                   l23644 23F6  
                                                   l23628 2398  
                                                   l26028 43DA  
                                                   l21884 34B6  
                                                   l21876 34AA  
                                                   l21868 349E  
                                                   l24196 1666  
                                                   l24526 6A90  
                                                   l25510 462A  
                                                   l25430 53C0  
                                                   l25414 5374  
                                                   l24454 3222  
                                                   l24446 308E  
                                                   l24462 3330  
                                                   l24606 6EDC  
                                                   l24702 6722  
                                                   l23486 4DA0  
                                                   l23646 2414  
                                                   l23590 22BC  
                                                   l23566 2234  
                                                   l23558 2202  
                                                   l26038 441A  
                                                   l21990 36C8  
                                                   l21894 34C2  
                                                   l23910 0F88  
                                                   l23902 0F44  
                                                   l24544 6B02  
                                                   l24560 6B50  
                                                   l24456 3270  
                                                   l24448 30DC  
                                                   l22848 609C  
                                                   l22792 5FD2  
                                                   l22784 5FB6  
                                                   l22776 5F9A  
                                                   l22768 5F7E  
                                                   l22872 5C44  
                                                   l24712 8BEC  
                                                   l23832 27BA  
                                                   l23808 2730  
                                                   l23752 2624  
                                                   l23680 24A0  
                                                   l26064 44DA  
                                                   l21992 36F2  
                                                   l22698 9370  
                                                   l24546 6B06  
                                                   l25602 47F2  
                                                   l25522 4664  
                                                   l24458 32E2  
                                                   l24634 9C52  
                                                   l24802 74C8  
                                                   l22882 5CB8  
                                                   l22890 5CCC  
                                                   l24730 8C24  
                                                   l24722 8C0E  
                                                   l24714 8BF0  
                                                   l23834 27C4  
                                                   l23586 22A2  
                                                   l23578 227C  
                                                   l26090 4550  
                                                   l21994 36F6  
                                                   l21898 351E  
                                                   l23914 0FAA  
                                                   l23906 0F66  
                                                   l25612 4828  
                                                   l25532 46A0  
                                                   l25540 46D2  
                                                   l22964 8822  
                                                   l25460 5494  
                                                   l25380 8CE2  
                                                   l25372 8CBC  
                                                   l27300 2A50  
                                                   l22796 5FE0  
                                                   l22788 5FC4  
                                                   l24740 73E0  
                                                   l22884 5CC8  
                                                   l22868 5C3A  
                                                   l24644 65C0  
                                                   l24732 8C28  
                                                   l23684 24AE  
                                                   l26084 453A  
                                                   l24558 6B3A  
                                                   l24830 70EC  
                                                   l22974 957E  
                                                   l22990 8128  
                                                   l25630 4890  
                                                   l25534 46AE  
                                                   l25526 4678  
                                                   l22958 8806  
                                                   l25454 546C  
                                                   l24742 73EA  
                                                   l23854 281C  
                                                   l23686 24B8  
                                                   l23598 22DE  
                                                   l26094 4556  
                                                   l26086 4540  
                                                   l21998 36FE  
                                                   l23950 1044  
                                                   l23942 101E  
                                                   l23934 0FFC  
                                                   l23926 0FE4  
                                                   l23918 0FCC  
                                                   l25702 3ABC  
                                                   l24816 70B8  
                                                   l22992 8130  
                                                   l25640 48C0  
                                                   l25624 486A  
                                                   l25608 4814  
                                                   l25560 4732  
                                                   l25456 5470  
                                                   l25376 8CCE  
                                                   l27320 2AAA  
                                                   l27312 2A86  
                                                   l27304 2A62  
                                                   l24680 6694  
                                                   l23872 284A  
                                                   l23792 26C4  
                                                   l26088 4544  
                                                   l23960 10C2  
                                                   l22986 8118  
                                                   l25634 48A6  
                                                   l25554 470C  
                                                   l25538 46C4  
                                                   l25482 553C  
                                                   l25458 547E  
                                                   l27410 1896  
                                                   l24754 741A  
                                                   l24674 6668  
                                                   l24666 663A  
                                                   l23866 2834  
                                                   l23778 2694  
                                                   l23882 2898  
                                                   l26098 455C  
                                                   l23970 112A  
                                                   l25810 3C46  
                                                   l25722 3AF0  
                                                   l25714 3AD2  
                                                   l25650 39A0  
                                                   l22988 8120  
                                                   l22996 8138  
                                                   l25628 4882  
                                                   l25556 471C  
                                                   l25492 45C0  
                                                   l25484 5540  
                                                   l27404 8F1A  
                                                   l27332 2AE0  
                                                   l27324 2ABC  
                                                   l27316 2A98  
                                                   l27308 2A74  
                                                   l27260 296C  
                                                   l27252 2938  
                                                   l27244 28DA  
                                                   l27412 18A6  
                                                   l24756 7424  
                                                   l23980 1190  
                                                   l23956 1068  
                                                   l25804 3C28  
                                                   l25732 3B00  
                                                   l25644 3978  
                                                   l24870 7186  
                                                   l24846 7126  
                                                   l22998 8160  
                                                   l25590 47C0  
                                                   l25486 554E  
                                                   l25398 5342  
                                                   l27342 2B68  
                                                   l27246 28FA  
                                                   l27510 1A98  
                                                   l27502 1A8A  
                                                   l27422 18E4  
                                                   l27414 18C2  
                                                   l24678 668E  
                                                   l23990 11D6  
                                                   l23958 10AC  
                                                   l25662 3A04  
                                                   l25654 39C2  
                                                   l25670 3A4A  
                                                   l24856 7152  
                                                   l25592 47CE  
                                                   l25568 475C  
                                                   l27352 2BF0  
                                                   l27336 2B02  
                                                   l27328 2ACE  
                                                   l27280 29E6  
                                                   l27272 29C2  
                                                   l27264 298E  
                                                   l27256 294A  
                                                   l27248 2916  
                                                   l27520 1AFA  
                                                   l27512 1AA2  
                                                   l27504 1A8E  
                                                   l27432 190C  
                                                   l27408 188A  
                                                   l24696 670E  
                                                   l23992 11DC  
                                                   l25920 3DC4  
                                                   l25832 3C84  
                                                   l25744 3B32  
                                                   l25672 3A60  
                                                   l25586 47A8  
                                                   l25498 45E0  
                                                   l27362 2C6C  
                                                   l27346 2B8A  
                                                   l27610 1CEE  
                                                   l27602 1CE4  
                                                   l27522 1AFE  
                                                   l27426 18F6  
                                                   l24698 6716  
                                                   l24890 91AC  
                                                   l23986 11AA  
                                                   l23898 0F24  
                                                   l25922 3DD8  
                                                   l25818 3C60  
                                                   l25770 3BAA  
                                                   l25762 3B7E  
                                                   l25738 3B18  
                                                   l25658 39E2  
                                                   l25596 47E2  
                                                   l27372 2CE8  
                                                   l27292 2A1C  
                                                   l27284 29F8  
                                                   l27276 29D4  
                                                   l27268 29B0  
                                                   l27540 1B5E  
                                                   l27460 199A  
                                                   l27436 191C  
                                                   l27444 194E  
                                                   l23988 11AC  
                                                   l25852 3CB8  
                                                   l25844 3C9A  
                                                   l25772 3BB8  
                                                   l25748 3B44  
                                                   l25692 3AAE  
                                                   l25684 3A92  
                                                   l25668 3A1E  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l27382 2D70  
                                                   l27366 2C82  
                                                   l27358 2C56  
                                                   l27438 1932  
                                                   l25942 3E38  
                                                   l25782 3BDE  
                                                   l25678 3A72  
                                                   l27296 2A2E  
                                                   l27288 2A0A  
                                                   l27704 1EB8  
                                                   l27616 1CF2  
                                                   l27552 1C12  
                                                   l27528 1B08  
                                                   l27464 19BE  
                                                   l27456 196A  
                                                   l25944 3E44  
                                                   l25768 3B9E  
                                                   l27378 2D4E  
                                                   l27810 2086  
                                                   l27722 1F28  
                                                   l27714 1F1A  
                                                   l27706 1EC2  
                                                   l27650 1D8A  
                                                   l27642 1D7C  
                                                   l27618 1CF6  
                                                   l27562 1C60  
                                                   l27554 1C22  
                                                   l27546 1BD4  
                                                   l27482 1A1A  
                                                   l27474 19CC  
                                                   l27466 19C2  
                                                   l25938 3E24  
                                                   l25874 3D00  
                                                   l27388 2D92  
                                                   l27812 208A  
                                                   l27804 2082  
                                                   l27740 1FAC  
                                                   l27716 1F1E  
                                                   l27660 1DE2  
                                                   l27580 1C88  
                                                   l27492 1A28  
                                                   l27484 1A1E  
                                                   l25972 42A6  
                                                   l25964 4276  
                                                   l25948 3E50  
                                                   l27822 20EC  
                                                   l27654 1DBA  
                                                   l27638 1D5A  
                                                   l27574 1C80  
                                                   l27558 1C3E  
                                                   l27494 1A32  
                                                   l27478 19F6  
                                                   l25894 3D56  
                                                   l25878 3D10  
                                                   l27902 69A6  
                                                   l27832 2104  
                                                   l27752 1FEC  
                                                   l27672 1E16  
                                                   l27648 1D86  
                                                   l27584 1C92  
                                                   l27568 1C7C  
                                                   l25984 42E0  
                                                   l25976 42BE  
                                                   l25968 4284  
                                                   l25888 3D32  
                                                   l27842 2132  
                                                   l27762 2018  
                                                   l27658 1DDE  
                                                   l27836 2126  
                                                   l27756 200E  
                                                   l27676 1E3A  
                                                   l27668 1DEC  
                                                   l25996 4318  
                                                   l27908 69D0  
                                                   l27774 201C  
                                                   l27686 1E48  
                                                   l27678 1E3E  
                                                   l27598 1CC2  
                                                   l27918 69EE  
                                                   l27792 2056  
                                                   l27696 1EAA  
                                                   l27688 1E52  
                                                   l27848 2136  
                                                   l27778 2026  
                                                   l27698 1EAE  
                                                   l27796 2078  
                                                   l27878 6902  
                                                   l27888 6918  
                                                   l19978 8B96  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 854C  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8A7C  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 84C8  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 95DE  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 9978  
                                            _zeroCrossing 0197  
                                         __end_of___lldiv 85CE  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   _T1CON 000FCF  
                                                   _T2CON 000FBD  
                                                   u30060 8C06  
                                                   u30500 7160  
                                                   u30340 70D4  
                                                   u32020 478A  
                                                   u30430 7118  
                                                   u30270 70A0  
                                                   u23400 7AD0  
                                                   u30360 70E0  
                                                   u32120 4824  
                                                   u31240 8CAA  
                                                   u33000 42D4  
                                                   u30601 91A2  
                                                   u23170 9D80  
                                                   u30290 70AC  
                                                   u32210 48B4  
                                                   u31410 539C  
                                                   u25010 581C  
                                                   u23228 878C  
                                                   u23420 7AEE  
                                                   u31500 53EE  
                                                   u31420 53AA  
                                                   u24140 7264  
                                                   u25020 582C  
                                                   _T2HLT 000FBE  
                                                   u23229 879E  
                                                   u23238 8D88  
                                                   u23430 7B02  
                                                   u30470 7148  
                                                   u32070 47DE  
                                                   u31430 53BA  
                                                   u25030 5834  
                                                   u33030 430C  
                                                   u24310 848A  
                                                   u23239 8D9A  
                                                   u31431 53B8  
                                                   u23248 9298  
                                                   u23440 7B10  
                                                   u30560 7196  
                                                   u32160 4850  
                                                   u31520 53F8  
                                                   u24080 71C0  
                                                   u25120 58CA  
                                                   u33200 44CA  
                                                   u32240 3994  
                                                   u23249 92AA  
                                                   u23370 7A86  
                                                   u30570 719E  
                                                   u32170 4858  
                                                   u31450 53CE  
                                                   u25210 5950  
                                                   u25130 58DA  
                                                   u33050 432E  
                                                   u30580 71A6  
                                                   u31700 54F4  
                                                   u31620 54B0  
                                                   u31540 5402  
                                                   u24180 92D2  
                                                   u25140 58E2  
                                                   u33301 2B5A  
                                                   u23198 82D4  
                                                   u23390 7AC2  
                                                   u30590 9194  
                                                   u24350 95C0  
                                                   u25310 8B16  
                                                   u25230 5978  
                                                   u25070 5890  
                                                   u32510 3BD8  
                                                   u32270 39F8  
                                                   u23199 82E6  
                                                   u33311 2BB0  
                                                   u25071 588E  
                                                   u23288 9120  
                                                   u31640 54BC  
                                                   u31560 5424  
                                                   u31480 53E2  
                                                   u24520 5D7A  
                                                   u27000 51CC  
                                                   u33160 448C  
                                                   u23289 9132  
                                                   u33321 2BE2  
                                                   u33401 18B4  
                                                   u23625 7818  
                                                   u26130 6276  
                                                   u26050 74F2  
                                                   u32450 3B54  
                                                   u34107 8992  
                                                   u33331 2C16  
                                                   u34051 69BA  
                                                   u26140 628E  
                                                   u31660 54C6  
                                                   u23660 8E08  
                                                   u27020 51E0  
                                                   u25500 38D0  
                                                   u33341 2C48  
                                                   u33421 18D6  
                                                   u23645 7888  
                                                   u24550 5DD8  
                                                   u25270 89BC  
                                                   u25510 3E9A  
                                                   u32470 3B8C  
                                                   u33351 2CA8  
                                                   u33511 1A7E  
                                                   u31840 4674  
                                                   u31680 54D0  
                                                   u27120 5298  
                                                   u28000 21F6  
                                                   u25520 3EA0  
                                                   u32560 3C06  
                                                   u33361 2CDA  
                                                   u33281 2908  
                                                   u26170 62D2  
                                                   u31930 46FC  
                                                   u31770 45F2  
                                                   u26250 5F5A  
                                                   u23930 6DF4  
                                                   u23690 8E5A  
                                                   u25290 89DE  
                                                   u27210 530E  
                                                   u27050 521A  
                                                   u33371 2D0E  
                                                   u33291 2B28  
                                                   u33451 1940  
                                                   u26180 62E4  
                                                   u31860 4690  
                                                   u31780 4600  
                                                   u25620 3FE6  
                                                   u32900 3DF0  
                                                   u32820 3D84  
                                                   u32740 3D1E  
                                                   u32580 3C16  
                                                   u33381 2D40  
                                                   u33621 1C30  
                                                   u33541 1AEE  
                                                   u31790 4610  
                                                   u28030 2228  
                                                   u25710 40C8  
                                                   u33640 1C6A  
                                                   u27400 5A56  
                                                   u27080 523E  
                                                   u25480 389E  
                                                   u34097 891E  
                                                   u33801 1E9E  
                                                   u33721 1D4C  
                                                   u33570 1B16  
                                                   u25570 3F2C  
                                                   u32930 3E08  
                                                   u32690 3CD8  
                                         __end_of___lwdiv 918A  
                                                   u24915 8FD0  
                                                   u32691 3CD6  
                                                   u26700 9578  
                                                   u26460 6078  
                                                   u28220 23D2  
                                                   u25820 41C6  
                                                   u25740 4102  
                                                   u29020 128A  
                                                   u32860 3DA2  
                                                   u33581 1B4A  
                                                   u26710 958E  
                                                   u31990 4772  
                                                   u27430 5A76  
                                                   u28310 24A8  
                                                   u25910 96F0  
                                                   u29030 12E6  
                                                   u33831 1F0E  
                                                   u29015 1274  
                                                   u26640 87E6  
                                                   u24880 83B0  
                                                   u27360 5A32  
                                                   u24960 57C8  
                                                   u28400 258E  
                                                   u29040 12EC  
                                                   u29025 1286  
                                                   u26570 5CDC  
                                                   u28410 25A8  
                                                   u28330 24CC  
                                                   u29210 14A4  
                                                   u28411 25A6  
                                                   u27700 4C1E  
                                                   u28500 264E  
                                                   u28340 24D4  
                                                   u28260 2450  
                                                   u32980 429A  
                                                   u29300 161A  
                                                   u29060 1336  
                                                   u29301 1618  
                                                   u29205 148E  
                                                   u26750 8170  
                                                   u27550 5B12  
                                                   u24990 580C  
                                                   u28510 2672  
                                                   u28430 25EC  
                                                   u28350 24EE  
                                                   u28270 2458  
                                                   u25950 857E  
                                                   u29070 133C  
                                                   u28511 2670  
                                                   u28431 25EA  
                                                   u28351 24EC  
                                                   u29215 14A0  
                                                   u26680 881C  
                                                   u26840 7DA4  
                                                   u27800 4D36  
                                                   u28600 270A  
                                                   u28440 25FA  
                                                   u28280 2472  
                                                   u29320 1630  
                                                   u29160 1430  
                                                   u29080 1352  
                                                   u28281 2470  
                                                   u29081 1350  
                                                   u27810 4D4E  
                                                   u27730 4CE4  
                                                   u27650 5B8C  
                                                   u26930 512C  
                                                   u28370 2546  
                                                   u25890 7BF4  
                                                   u29410 16E6  
                                                   u29330 1644  
                                                   u29250 1536  
                                                   u29170 1436  
                                                   u27651 5B8A  
                                                   u28371 2544  
                                                   u29411 16E4  
                                                   u25980 915A  
                                                   u28540 26A6  
                                                   u28380 2554  
                                                   _T2TMR 000FBB  
                                                   u29245 1520  
                                                   u27910 4DFA  
                                                   u27750 4CF8  
                                                   u27590 5B42  
                                                   u29350 165E  
                                                   u33991 20E0  
                                                   u29335 1640  
                                                   u29255 1532  
                                                   u27840 4D94  
                                                   u28720 2848  
                                                   u28640 274A  
                                                   u28560 26B2  
                                                   u29280 15E0  
                                                   u28730 2864  
                                                   u28650 2750  
                                                   u28490 2648  
                                                   u29290 15E6  
                                                   _T2RST 000FC0  
                                                   u28731 2862  
                                                   u27780 4D2A  
                                                   u26980 516A  
                                                   u28740 2872  
                                                   u28580 26E0  
                                                   u29710 6B72  
                                                   u29630 6ACC  
                                                   u28590 26FC  
                                                   u28591 26FA  
                                                   u29720 6B80  
                                                   u27880 4DDA  
                                                   i2l106 96DA  
                                                   u29650 6AE4  
                                                   u29570 9D3A  
                                                   u28690 282E  
                                                   u29740 6B9A  
                                                   u29900 665A  
                                                   u29910 6668  
                                                   u29680 6B1E  
                                                   u28880 105A  
                                                   u29930 668E  
                                                   u29595 9B68  
                                                   u29780 8F40  
                                                   u29596 9B6A  
                                                   u29940 66A2  
                                                   u29790 8F72  
                                                   u29990 66F2  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 99CA  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 9616  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8E1E  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 96AE  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 9A62  
                                        __end_of_TMR1_ISR 9568  
                                        __end_of_TMR2_ISR 6D06  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 0191  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 9568  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 019B  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 9468  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 77C8  
                                         __end_of_sm_init 9038  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 3E7E  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9EC4  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9EC2  
                                         _TMR1_WriteTimer 9B88  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 72BE  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7C98  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 86CC  
                                            __end_of_main 6A44  
                                              _ReadSerial 8A7C  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 821E  
                                          _refreshCurrent 9358  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 97C2  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 83BE  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9D9A  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 6268  
                              _validateRemoteSerialNumber 60CC  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 87C2  
                                      __end_of_I2C1_DO_TX 8336  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 9278  
                  __end_of_SetSegmentValueIntermitentMain 9D08  
                          _SetSegmentValueIntermitentMain 9CF4  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 9B12  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 659C  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7B1E  
                                                  i2l2024 6522  
                                                  i2l1147 9B9A  
                                                  i2l2140 8442  
                                                  i2l2133 840C  
                                                  i2l2222 5752  
                                                  i2l2240 7BB8  
                                                  i2l2128 83EE  
                                                  i2l1266 6C10  
                                                  i2l2323 88A4  
                                                  i2l1620 5020  
                                                  i2l1277 6C9A  
                                                  i2l2191 558E  
                                                  i2l2328 88AE  
                                                  i2l2195 5674  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 88B2  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 75D2  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 8102  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 964A  
                                 __end_ofi2_GetMotorPower 7BE4  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 8336  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8D64  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 9978  
                    __end_of_TMR1_DefaultInterruptHandler 9EC0  
                            _TMR1_DefaultInterruptHandler 9EBE  
                                  __end_of_refreshCurrent 939E  
                                           ?_read_package 0011  
                                                  ___lmul 9038  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9A16  
                                  __end_of_refreshSegment 8444  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 48CE  
                             __end_of_keeloqDecryptPacket 5D64  
                             setValueToEdit@posindex_6979 00E0  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 93E2  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7D08  
                                                  clear_1 7D14  
                                                  clear_2 7D20  
                                                  clear_3 7D2C  
                                                  clear_4 7D38  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 28D8  
                              _sm_execute_ControlLearning 21CA  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 91DA  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9D6A  
                                          _PMD_Initialize 9B6C  
                                              _StateTRIAC 0195  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8ED6  
                                    __end_of_ControlMotor 5564  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4E50  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9C3E  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9BA4  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9E18  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9BBE  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 9710  
                              __end_of_actionZone_Opening 531A  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7D3E  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E1  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 3444  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 99A2  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 9B34  
                                 _rdBlkRegCompleteHandler 94E8  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9C56  
                                            __pidataBANK0 9EBA  
                                            __pidataBANK1 9EC4  
                                            __pidataBANK2 9E58  
                                            __pidataBANK3 9A62  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart 9EAE  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9B88  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 9358  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 71AE  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9BBE  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7FD8  
                                   __end_of_I2C1_DO_RESET 9DF4  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9CB4  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 973E  
                                     __end_of_ShowVersion 8D02  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 3976  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9E18  
                       _EUSART1_TxDefaultInterruptHandler 02EB  
                                            _GetOpenOrder 5D64  
                                    __end_of_InitSoftStop 9310  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 98CA  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 76CE  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 989E  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8E1E  
                                   _rd1RegCompleteHandler 98CA  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 9E30  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 98F6  
                         __end_of_EUSART1_SetErrorHandler 9DEA  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9DB8  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6D06  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 922A  
                                         _I2C1_MasterOpen 9C6E  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9EA6  
                                         _I2C1_Initialize 9D08  
                                     __end_of_I2C1_Poller 9D4E  
                                __end_of_setFlashLigth_ON 95A4  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9B50  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 68BC  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BB  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018D  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9DE0  
                          _EUSART1_SetFramingErrorHandler 9DD6  
                                    _refreshADCZeroOffset 74D4  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 87C2  
                                                 i2l15002 843E  
                                                 i2l13156 9B30  
                                                 i2l17002 6CE6  
                                                 i2l14532 7B6E  
                                                 i2l14524 7B32  
                                                 i2l14534 7B7A  
                                                 i2l14800 4FE0  
                                                 i2l14544 7BA8  
                                                 i2l14554 7BDA  
                                                 i2l14812 502A  
                                                 i2l14732 4E72  
                                                 i2l14580 889A  
                                                 i2l14900 5648  
                                                 i2l14574 887E  
                                                 i2l14824 504E  
                                                 i2l14736 4E88  
                                                 i2l14728 4E62  
                                                 i2l14834 5076  
                                                 i2l14818 5038  
                                                 i2l14738 4E90  
                                                 i2l14828 505E  
                                                 i2l14780 4F7E  
                                                 i2l14764 4F16  
                                                 i2l14748 4EC4  
                                                 i2l14932 56F8  
                                                 i2l14908 5686  
                                                 i2l14782 4F84  
                                                 i2l14758 4EF0  
                                                 i2l14838 508E  
                                                 i2l14870 55C0  
                                                 i2l14792 4FB8  
                                                 i2l14776 4F5E  
                                                 i2l14944 5736  
                                                 i2l14872 55CA  
                                                 i2l14856 5584  
                                                 i2l14778 4F6E  
                                                 i2l14956 5772  
                                                 i2l14878 55E4  
                                                 i2l14888 560E  
                                                 i2l14968 909E  
                                                 i2l14992 8410  
                                                 i2l16930 6BD4  
                                                 i2l16954 6C32  
                                                 i2l16938 6BE8  
                                                 i2l16868 96D4  
                                                 i2l16964 6C5C  
                                                 i2l16974 6C7E  
                                                 i2l16888 7FD2  
                                                 i2l16996 6CCE  
                                                 i2l16988 6CB2  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9D78  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 84C8  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9D4E  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9E6A  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8C9C  
                                            _classic_data 0290  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 798C  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019D  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 9872  
          _rd1RegCompleteHandler@i2c1_master_example$F500 9846  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 9846  
          _rd2RegCompleteHandler@i2c1_master_example$F511 981A  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 994E  
          _wr2RegCompleteHandler@i2c1_master_example$F523 9922  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 981A  
                               __end_of_I2C1_DO_SEND_STOP 9E38  
          _wr1RegCompleteHandler@i2c1_master_example$F517 97EE  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 94E8  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 94A8  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 908E  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 976A  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3E7E  
                              __end_of_clearLearningValue 8748  
                                                 _NextHop 0187  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3444  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9D90  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 922A  
                                                 ___awdiv 8444  
                                                 ___lbdiv 95A4  
                                                 ___lbmod 994E  
                                                 ___lldiv 854C  
                                              _readInputs 73CC  
                                         _controlVelocity 5786  
                                                 ___lwdiv 9138  
                                           _OpenFullOrder 99F0  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 708A  
                           _setPositionInvertionInClosing 6F62  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9D2E  
                                          getHopCode@data 0016  
                                                 _difTime 0194  
                                                 __pcinit 7C98  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 9E64  
                                    __end_of_init_package 96AE  
                                                 __ptext0 68BC  
                                                 __ptext1 3976  
                                                 __ptext2 0F22  
                                                 __ptext3 3444  
                                                 __ptext4 48CE  
                                                 __ptext5 9BA4  
                                                 __ptext6 3E7E  
                                                 __ptext7 9E5E  
                                                 __ptext8 922A  
                                                 __ptext9 7BE4  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A0  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9EAA  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9D84  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 798C  
                           _setPositionInvertionInOpening 78B0  
                                                 _lastKey 0199  
                                              _readbutton 8BC8  
                                   _OSCILLATOR_Initialize 9CB4  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8C9C  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9BD8  
                               __end_of_I2C1_MasterSetIrq 9E70  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8DC2  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 8192  
                                      _EUSART1_Initialize 864E  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 76CE  
                                                 _sm_init 8FE2  
                                          _BufferRF_12BIT 018B  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 91DA  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8AEC  
                                    _zeroCrossingWaitTime 02F8  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9E50  
                                    end_of_initialization 7D3E  
                              __end_of_I2C1_MasterSendAck 9E76  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9E7C  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 9E9E  
                             _EUSART1_OverrunErrorHandler 02E5  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8928  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9D5C  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8D02  
                            __end_of_sm_get_current_state 9D2E  
                                               i2u2300_48 003E  
                                               i2u1510_40 56BA  
                                               i2u1502_40 563C  
                                               i2u1503_40 5642  
                                               i2u2303_48 0056  
                                               i2u1513_40 56D8  
                                               i2u1522_40 5742  
                                               i2u1530_45 90B6  
                                               i2u1451_40 7BB4  
                                               i2u1523_40 574A  
                                               i2u1515_40 56EE  
                                               i2u1452_40 7BC8  
                                               i2u1460_40 8894  
                                               i2u1532_40 83CE  
                                               i2u1453_40 7BD6  
                                               i2u1525_40 576A  
                                               i2u1509_40 56AC  
                                               i2u1446_40 7B4C  
                                               i2u1534_40 8420  
                                               i2u1519_40 571E  
                            __end_of_I2C1_DO_SEND_RESTART 9E40  
                                               i2u1472_40 4F04  
                                               i2u1448_40 7B88  
                                               i2u1456_40 885E  
                                               i2u1449_40 7B96  
                                               i2u1369_40 9992  
                                               i2u1474_40 4F2E  
                                               i2u1490_40 557E  
                                               i2u1538_40 6516  
                                               i2u1475_40 4F3E  
                                               i2u1467_40 4E88  
                                               i2u1539_40 658A  
                                    __end_of_eusartparser 21CA  
                                               i2u3411_47 9CD4  
                                               i2u1476_40 4F4E  
                                         _WWDT_TimerClear 9B50  
                                               i2u1900_48 7F94  
                                               i2u1485_40 504C  
                                 __end_of_I2C1_MasterOpen 9C86  
                                               i2u1900_49 7FA6  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1902_48 7FBE  
                                               i2u1920_40 6C48  
                                               i2u1904_48 9A50  
                                               i2u1497_40 55DE  
                                   __end_of_ControlLights 48CE  
                                               i2u1908_48 9556  
                                               i2u1932_48 6CF4  
                                               i2u1917_40 6C24  
                                 __end_of_I2C1_MasterStop 9EAA  
                                 __end_of_I2C1_Initialize 9D1C  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 71AE  
                   __end_of_EUSART1_SetRxInterruptHandler 9DCC  
                           _EUSART1_SetRxInterruptHandler 9DC2  
                                               i2u1898_48 7F68  
                                               i2u1898_49 7F7A  
                                             _I2C1_Poller 9D3E  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9E8E  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9EB6  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 531A  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9E76  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9C6E  
                             _I2C1_SetAddressNackCallback 9C56  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 77C8  
                                              _sm_restart 939E  
                        __end_of_ADCC_GetSingleConversion 9CE0  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D7  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9E48  
                              _I2C1_DO_SEND_RESTART_WRITE 9E40  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9DAE  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 9528  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 75D2  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9D90  
                                     _ControlCounterMoves 8F30  
                            _controlLearning_stateMachine 02B0  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7310 00F3  
                                      eusartparser@i_7312 00EA  
                                      eusartparser@i_7313 00EB  
                                      eusartparser@i_7305 00E9  
                                      eusartparser@i_7314 00EF  
                                      eusartparser@i_7306 00ED  
                                      eusartparser@i_7315 00F0  
                                      eusartparser@i_7307 00EE  
                                      eusartparser@i_7316 00F4  
                                      eusartparser@i_7308 00F1  
                                      eusartparser@i_7317 00F5  
                                      eusartparser@i_7309 00F2  
                                      eusartparser@i_7318 00F6  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 99A2  
                                 __end_of_WWDT_Initialize 9D9A  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0185  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 9310  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018F  
                       __end_of_GetSecurityStateInClosing 7E98  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 967C  
                                       _controlLearnDigit 96E0  
                                 __end_of_controlVelocity 59A4  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FD  
                                      _actionZone_Closing 4BC4  
                                    __end_of_RemoveSerial 864E  
                                          __end_of_HopCHK 83BE  
                                      __end_of_CloseOrder 99F0  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9BA4  
                               _ControlDecelarationFactor 9C26  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 028E  
                       __end_of_GetSecurityStateInOpening 7F3E  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9E96  
                                      _actionZone_Opening 50C6  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 9EBE  
                            _TMR2_DefaultInterruptHandler 9EBC  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 908E  
                                   __end_of_LoadManufCode 9ACE  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9A3C  
                                          _I2C1_DO_RX_ACK 9E28  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8C34  
                                            _InitSoftStop 92C6  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 883A  
                                          __end_of_memcpy 9426  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8A0C  
                            __end_of_getCurrentComparator 6402  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 73CC  
                                           _saveNewSerial 8A0C  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9EA6  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9E58  
                                       _read_eusartparser 28D8  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7C98  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 50C6  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 899C  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 99CA  
                                 __end_of_WWDT_TimerClear 9B6C  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 94A8  
                                 __end_of_WWDT_SoftEnable 9E92  
                                      __end_of_ReadSerial 8AEC  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 964A  
                                               _ReqResync 9C9E  
                               __end_of_controlLearnDigit 9710  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 4260  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7BE4  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 9E30  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0198  
                                          _VerifyFollowMe 9A88  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 9B12  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FF  
                                             __pdataBANK2 02F4  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 5564  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2EA0  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9CCA  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8E7A  
                                               _StopOrder 9B34  
                                    _sm_get_current_state 9D1C  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9E38  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02E9  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                           __pcstackBANK2 02ED  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 6732  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9E08  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9DFE  
                                           _GetMotorPower 7A58  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7C98  
                                            _init_package 967C  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E1  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DB  
                                   _rd2RegCompleteHandler 989E  
                                        _InitWalkAutoTime 9CE0  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9BF2  
                             __end_of_SetSegmentValueMain 9BD8  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7FD8  
                                  __end_of_VerifyFollowMe 9AAC  
                                   _wr2RegCompleteHandler 9872  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 918A  
                                          _I2C1_MasterFsm 90E4  
                              __end_of_checkNVM_VarSystem 60CC  
                        __end_of_TMR1_SetInterruptHandler 9DAE  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 7FD8  
                                               __ptext101 9CB4  
                                                ?___lbdiv 0010  
                                               __ptext110 91DA  
                                               __ptext102 9E92  
                                               __ptext111 9D2E  
                                               __ptext103 9D08  
                                               __ptext200 9EBE  
                                               __ptext120 9358  
                                               __ptext112 531A  
                                               __ptext104 864E  
                                               __ptext201 9A3C  
                                               __ptext121 76CE  
                                               __ptext113 87C2  
                                               __ptext105 9DB8  
                                               __ptext210 0000  
                                               __ptext202 4E50  
                                               __ptext130 95DE  
                                               __ptext122 821E  
                                               __ptext114 45AA  
                                               __ptext106 9DC2  
                                               __ptext203 9EC0  
                                               __ptext131 8928  
                                               __ptext123 99A2  
                                               __ptext115 8102  
                                               __ptext107 9DCC  
                                               __ptext204 96AE  
                                               __ptext140 90E4  
                                               __ptext132 93E2  
                                               __ptext124 74D4  
                                               __ptext116 9D4E  
                                               __ptext108 9DD6  
                                               __ptext205 7F3E  
                                               __ptext141 9278  
                                               __ptext133 9C56  
                                               __ptext125 9138  
                                               __ptext117 9568  
                                               __ptext109 9DE0  
                                               __ptext206 9E82  
                                               __ptext150 9DF4  
                                               __ptext142 9DEA  
                                               __ptext134 84C8  
                                               __ptext126 6268  
                                               __ptext118 708A  
                                               __ptext207 9EC2  
                                               __ptext151 8748  
                                               __ptext143 9E18  
                                               __ptext135 9C6E  
                                               __ptext127 9A16  
                                               __ptext119 6A44  
                                               __ptext208 9E88  
                                               __ptext160 9E70  
                                               __ptext152 82AA  
                                               __ptext144 9E20  
                                               __ptext136 9E08  
                                               __ptext128 7A58  
                                               __ptext209 9B12  
                                               __ptext161 9E96  
                                               __ptext153 9D5C  
                                               __ptext145 9E28  
                                               __ptext137 97C2  
                                               __ptext129 8F30  
                                               __ptext170 94E8  
                                               __ptext162 9E76  
                                               __ptext154 9D6A  
                                               __ptext146 9E30  
                                               __ptext138 9D3E  
                                               __ptext171 9872  
                                               __ptext163 9E9A  
                                               __ptext155 9DFE  
                                               __ptext147 9E38  
                                               __ptext139 9E10  
                                               __ptext180 9EAA  
                                               __ptext172 989E  
                                               __ptext164 9E9E  
                                               __ptext156 8D64  
                                               __ptext148 9E40  
                                               __ptext181 9EAE  
                                               __ptext173 98CA  
                                               __ptext165 9EA2  
                                               __ptext157 9E6A  
                                               __ptext149 9E48  
                                               __ptext190 6402  
                                               __ptext182 9AF0  
                                               __ptext174 98F6  
                                               __ptext166 94A8  
                                               __ptext158 9D78  
                                               __ptext191 9978  
                                               __ptext183 9EB2  
                                               __ptext175 9922  
                                               __ptext167 97EE  
                                               __ptext159 9E50  
                                               __ptext192 9EBC  
                                               __ptext184 9EB6  
                                               __ptext176 9C86  
                                               __ptext168 981A  
                                               __ptext193 908E  
                                               __ptext185 9E7C  
                                               __ptext177 8B5A  
                                               __ptext169 9846  
                                               __ptext194 9CCA  
                                               __ptext178 9C0C  
                                               __ptext195 9528  
                                               __ptext187 6BB8  
                                               __ptext179 9EA6  
                                               __ptext196 5564  
                                               __ptext188 83BE  
                                               __ptext197 883A  
                                               __ptext189 9D84  
                                               __ptext198 7B1E  
                                               __ptext199 9B88  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 5786  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent 9E10  
                                        _I2C1_MasterClose 9EB6  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9C0C  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9EAE  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9E08  
                                      _clearLearningValue 86CC  
                                      _write_eusartparser 2EA0  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 019A  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9E88  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9E82  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 88B2  
                                            _eusartparser 1886  
                                    _EUSART1_ErrorHandler 02E3  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9DE0  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9EA2  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 6732  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 8102  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9E92  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8B5A  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 8748  
                                              _I2C1_DO_TX 82AA  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 6268  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FF  
                                     _DecryptPacket_12BIT 8192  
                                              _I2C1_Close 9AF0  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 9138  
                            __end_of_I2C1_MasterGetRxData 9E9A  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9D84  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0189  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9E70  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 82AA  
                               _I2C1_DO_SEND_RESTART_READ 9E48  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 4BC4  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9A3C  
                                                _TMR1_ISR 9528  
                                                _TMR2_ISR 6BB8  
                                           _getKeyPressed 9C3E  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9C26  
                                               _temppower 0193  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9C9E  
                            _I2C1_SetDataCompleteCallback 9C86  
                                      _I2C1_MasterStartRx 9E9A  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9E64  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8928  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 9616  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019F  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 92C6  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7D48  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 9BF2  
                                            _RemoveSerial 85CE  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9D6A  
                                       _actionZone_Opened 59A4  
                                           _I2C1_DO_RESET 9DEA  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C6  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7CAC  
                                               copy_data1 7CCC  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0192  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6E34  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 899C  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 97EE  
                                            _NormalKeyGen 72BE  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9DC2  
                           _EUSART1_SetTxInterruptHandler 9DB8  
                                           _sm_send_event 8DC2  
                                     _keeloqDecryptPacket 5B92  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F2  
                                   _I2C1_MasterDisableIrq 9EB2  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 4260  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 6402  
                                _TMR1_SetInterruptHandler 9DA4  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7DF2  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7DF2  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DD  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9E8E  
                             _EUSART1_DefaultErrorHandler 9E88  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9D3E  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5B92  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7E98  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 994E  
                                                __ptext11 8444  
                                                __ptext20 8FE2  
                                                __ptext12 9BBE  
                                                __ptext21 939E  
                                                __ptext13 9E64  
                                                __ptext30 59A4  
                                                __ptext22 86CC  
                                                __ptext14 96E0  
                                                __ptext31 9A88  
                                                __ptext23 8D02  
                                                __ptext15 75D2  
                                                __ptext40 899C  
                                                __ptext32 99CA  
                                                __ptext24 50C6  
                                                __ptext16 854C  
                                                __ptext41 99F0  
                                                __ptext33 4BC4  
                                                __ptext25 78B0  
                                                __ptext17 4260  
                                                __ptext50 5D64  
                                                __ptext42 9BD8  
                                                __ptext34 6F62  
                                                __ptext26 5786  
                                                __ptext18 21CA  
                                                __ptext51 95A4  
                                                __ptext43 8AEC  
                                                __ptext35 77C8  
                                                __ptext27 71AE  
                                                __ptext19 8C34  
                                                __ptext60 72BE  
                                                __ptext52 9CF4  
                                                __ptext44 8DC2  
                                                __ptext36 9038  
                                                __ptext28 92C6  
                                                __ptext61 9AAC  
                                                __ptext53 8BC8  
                                                __ptext45 9D1C  
                                                __ptext37 9B34  
                                                __ptext29 9C26  
                                                __ptext70 5F2C  
                                                __ptext62 798C  
                                                __ptext54 918A  
                                                __ptext46 8E1E  
                                                __ptext38 7DF2  
                                                __ptext71 6732  
                                                __ptext63 8336  
                                                __ptext55 9310  
                                                __ptext47 9CE0  
                                                __ptext39 7D48  
                                                __ptext80 9468  
                                                __ptext72 8E7A  
                                                __ptext64 6D06  
                                                __ptext56 659C  
                                                __ptext48 7E98  
                                                __ptext81 8ED6  
                                                __ptext73 9C3E  
                                                __ptext65 9C9E  
                                                __ptext57 5B92  
                                                __ptext49 973E  
                                                __ptext90 9BF2  
                                                __ptext82 967C  
                                                __ptext74 1886  
                                                __ptext66 964A  
                                                __ptext58 9616  
                                                __ptext91 9710  
                                                __ptext83 8070  
                                                __ptext75 2EA0  
                                                __ptext67 8192  
                                                __ptext59 8F8A  
                                                __ptext92 9D90  
                                                __ptext84 85CE  
                                                __ptext76 60CC  
                                                __ptext68 73CC  
                                                __ptext93 9796  
                                                __ptext85 8A7C  
                                                __ptext77 8A0C  
                                                __ptext69 6E34  
                                                __ptext94 9D9A  
                                                __ptext86 88B2  
                                                __ptext78 28D8  
                                                __ptext95 9426  
                                                __ptext87 9B50  
                                                __ptext79 976A  
                                                __ptext96 9DA4  
                                                __ptext88 9E8E  
                                                __ptext97 9ACE  
                                                __ptext89 8C9C  
                                                __ptext98 9DAE  
                                                __ptext99 9B6C  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E7  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                ?_wr2RegCompleteHandler@pic18f46k40$F7800 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7802 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7806 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7808 001B  
                                                _learn_st 0060  
                ?_wr1RegCompleteHandler@pic18f46k40$F7780 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7790 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7782 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7794 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7796 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7788 0019  
                                      __end_of_readInputs 74D4  
                                _I2C1_CallbackReturnReset 9E9E  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9EC2  
                            _TMR0_DefaultInterruptHandler 9EC0  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9E82  
                            __end_of_I2C1_DO_RX_NACK_STOP 9E28  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6A44  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8C34  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9E6A  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 976A  
                              _SetSegmentValueIntermitent 973E  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 9E20  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6E34  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9C0C  
                           __end_of_I2C1_DO_SEND_ADR_READ 9D78  
                             _EUSART1_FramingErrorHandler 02E7  
                                            _I2C1_DO_IDLE 9DFE  
                                     _EUSART1_Receive_ISR 7F3E  
                                            _I2C1_DO_RCEN 9DF4  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9E5E  
                             __end_of_I2C1_MasterSendNack 9E7C  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 78B0  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0196  
                                __end_of_InitWalkAutoTime 9CF4  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 0190  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9E96  
                                   _I2C1_MasterSendTxData 9E50  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 45AA  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 8F8A  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9EBA  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8E7A  
                                 readRFButtons@typeRemote 019C  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 93E2  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 6BB8  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9EB2  
                                __end_of_I2C1_MasterWrite 9E10  
                                   __end_of_write_package 9796  
                                             _tempCounter 02F4  
                  __end_of_EUSART1_SetOverrunErrorHandler 9DD6  
                          _EUSART1_SetOverrunErrorHandler 9DCC  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9EA2  
                            __end_of_EUSART1_Transmit_ISR 96E0  
                                          _confirmpackage 8ED6  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 45AA  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 708A  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 9278  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6F62  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 8FE2  
                           _keeloq_classic_decrypt_packet 8F8A  
                                   __end_of_OpenFullOrder 9A16  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019E  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 8070  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8BC8  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 97C2  
                                         _TMR0_Initialize 9ACE  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5F2C  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8B5A  
                                            _sumEnergyADC 821E  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 8070  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 98F6  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8D64  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 8F30  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 9922  
                                   _TMR2_InterruptHandler 02DB  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 9426  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 3976  
