

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 17:19:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   238                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   239                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   240  0000                     
   241                           ; Version 2.36
   242                           ; Generated 28/01/2022 GMT
   243                           ; 
   244                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   245                           ; All rights reserved.
   246                           ; 
   247                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   248                           ; 
   249                           ; Redistribution and use in source and binary forms, with or without modification, are
   250                           ; permitted provided that the following conditions are met:
   251                           ; 
   252                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   253                           ;        conditions and the following disclaimer.
   254                           ; 
   255                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   256                           ;        of conditions and the following disclaimer in the documentation and/or other
   257                           ;        materials provided with the distribution. Publication is not required when
   258                           ;        this file is used in an embedded application.
   259                           ; 
   260                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   261                           ;        software without specific prior written permission.
   262                           ; 
   263                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   264                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   265                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   266                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   267                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   268                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   269                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   270                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   271                           ; 
   272                           ; 
   273                           ; Code-generator required, PIC18F46K40 Definitions
   274                           ; 
   275                           ; SFR Addresses
   276  0000                     
   277                           	psect	idataBANK0
   278  009806                     __pidataBANK0:
   279                           	callstack 0
   280                           
   281                           ;initializer for _auxCounter
   282  009806  03E8               	dw	1000
   283                           
   284                           	psect	idataBANK1
   285  0097D4                     __pidataBANK1:
   286                           	callstack 0
   287                           
   288                           ;initializer for _tempCounter
   289  0097D4  3DDD               	dw	15837
   290  0097D6  000F               	dw	15
   291                           
   292                           ;initializer for _firstselectflag
   293  0097D8  01                 	db	1
   294                           
   295                           	psect	idataBANK2
   296  009808                     __pidataBANK2:
   297                           	callstack 0
   298                           
   299                           ;initializer for _zeroCrossingWaitTime
   300  009808  19                 	db	25
   301  009809  19                 	db	25
   302                           
   303                           	psect	idataBANK3
   304  0093AC                     __pidataBANK3:
   305                           	callstack 0
   306                           
   307                           ;initializer for _DispTable
   308  0093AC  6F                 	db	111
   309  0093AD  21                 	db	33
   310  0093AE  76                 	db	118
   311  0093AF  73                 	db	115
   312  0093B0  39                 	db	57
   313  0093B1  5B                 	db	91
   314  0093B2  5F                 	db	95
   315  0093B3  61                 	db	97
   316  0093B4  7F                 	db	127
   317  0093B5  7B                 	db	123
   318  0093B6  7D                 	db	125
   319  0093B7  7F                 	db	127
   320  0093B8  4E                 	db	78
   321  0093B9  37                 	db	55
   322  0093BA  5E                 	db	94
   323  0093BB  5C                 	db	92
   324  0093BC  7C                 	db	124
   325  0093BD  3D                 	db	61
   326  0093BE  0E                 	db	14
   327  0093BF  2F                 	db	47
   328  0093C0  14                 	db	20
   329  0093C1  1E                 	db	30
   330  0093C2  07                 	db	7
   331  0093C3  45                 	db	69
   332  0093C4  10                 	db	16
   333  0093C5  0C                 	db	12
   334  0093C6  40                 	db	64
   335  0093C7  20                 	db	32
   336  0093C8  01                 	db	1
   337  0093C9  02                 	db	2
   338  0093CA  04                 	db	4
   339  0093CB  08                 	db	8
   340  0093CC  00                 	db	0
   341  0093CD  3B                 	db	59
   342  0093CE  1F                 	db	31
   343  0093CF  16                 	db	22
   344  0093D0  17                 	db	23
   345                           
   346                           	psect	smallconst
   347  000F00                     __psmallconst:
   348                           	callstack 0
   349  000F00  00                 	db	0
   350  000F01                     _i2c1_fsmStateTable:
   351                           	callstack 0
   352  000F01  4A                 	db	low _I2C1_DO_IDLE
   353  000F02  97                 	db	high _I2C1_DO_IDLE
   354  000F03  B6                 	db	low _I2C1_DO_SEND_ADR_READ
   355  000F04  96                 	db	high _I2C1_DO_SEND_ADR_READ
   356  000F05  A8                 	db	low _I2C1_DO_SEND_ADR_WRITE
   357  000F06  96                 	db	high _I2C1_DO_SEND_ADR_WRITE
   358  000F07  04                 	db	low _I2C1_DO_TX
   359  000F08  7C                 	db	high _I2C1_DO_TX
   360  000F09  A4                 	db	low _I2C1_DO_RX
   361  000F0A  80                 	db	high _I2C1_DO_RX
   362  000F0B  40                 	db	low _I2C1_DO_RCEN
   363  000F0C  97                 	db	high _I2C1_DO_RCEN
   364  000F0D  C0                 	db	low _I2C1_DO_TX_EMPTY
   365  000F0E  86                 	db	high _I2C1_DO_TX_EMPTY
   366  000F0F  94                 	db	low _I2C1_DO_SEND_RESTART_READ
   367  000F10  97                 	db	high _I2C1_DO_SEND_RESTART_READ
   368  000F11  8C                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   369  000F12  97                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   370  000F13  84                 	db	low _I2C1_DO_SEND_RESTART
   371  000F14  97                 	db	high _I2C1_DO_SEND_RESTART
   372  000F15  7C                 	db	low _I2C1_DO_SEND_STOP
   373  000F16  97                 	db	high _I2C1_DO_SEND_STOP
   374  000F17  74                 	db	low _I2C1_DO_RX_ACK
   375  000F18  97                 	db	high _I2C1_DO_RX_ACK
   376  000F19  6C                 	db	low _I2C1_DO_RX_NACK_STOP
   377  000F1A  97                 	db	high _I2C1_DO_RX_NACK_STOP
   378  000F1B  64                 	db	low _I2C1_DO_RX_NACK_RESTART
   379  000F1C  97                 	db	high _I2C1_DO_RX_NACK_RESTART
   380  000F1D  36                 	db	low _I2C1_DO_RESET
   381  000F1E  97                 	db	high _I2C1_DO_RESET
   382  000F1F  C8                 	db	low _I2C1_DO_ADDRESS_NACK
   383  000F20  8B                 	db	high _I2C1_DO_ADDRESS_NACK
   384  000F21                     __end_of_i2c1_fsmStateTable:
   385                           	callstack 0
   386  0000                     _T2CON	set	4029
   387  0000                     _T1CON	set	4047
   388  0000                     _T1CLK	set	4050
   389  0000                     _T1GATE	set	4049
   390  0000                     _T0CON0	set	4053
   391  0000                     _INLVLD	set	3874
   392  0000                     _SLRCOND	set	3875
   393  0000                     _ODCOND	set	3876
   394  0000                     _WPUD	set	3877
   395  0000                     _TRISD	set	3979
   396  0000                     _TRISC	set	3978
   397  0000                     _TRISB	set	3977
   398  0000                     _TRISA	set	3976
   399  0000                     _TRISE	set	3980
   400  0000                     _LATC	set	3973
   401  0000                     _LATB	set	3972
   402  0000                     _OSCTUNE	set	3805
   403  0000                     _OSCFRQ	set	3806
   404  0000                     _ADERRL	set	3950
   405  0000                     _ADERRH	set	3951
   406  0000                     _ADPREVL	set	3937
   407  0000                     _ADPREVH	set	3938
   408  0000                     _ADFLTRL	set	3954
   409  0000                     _ADFLTRH	set	3955
   410  0000                     _ADACCL	set	3952
   411  0000                     _ADACCH	set	3953
   412  0000                     _ADCNT	set	3943
   413  0000                     _ADRESL	set	3939
   414  0000                     _ADRESH	set	3940
   415  0000                     _ADACQ	set	3932
   416  0000                     _ADCON0	set	3936
   417  0000                     _ADCLK	set	3927
   418  0000                     _ADSTAT	set	3941
   419  0000                     _ADCON3	set	3931
   420  0000                     _ADCON2	set	3930
   421  0000                     _ADPRE	set	3934
   422  0000                     _ADSTPTH	set	3945
   423  0000                     _ADUTHH	set	3949
   424  0000                     _ADUTHL	set	3948
   425  0000                     _ADLTHH	set	3947
   426  0000                     _SP1BRGH	set	3996
   427  0000                     _TX1STA	set	3998
   428  000F21  00                 	db	0	; dummy byte at the end
   429  0000                     
   430                           	psect	nvBANK1
   431  0001FF                     __pnvBANK1:
   432                           	callstack 0
   433  0001FF                     _eusart1TxBufferRemaining:
   434                           	callstack 0
   435  0001FF                     	ds	1
   436                           
   437                           	psect	nvBANK2
   438  0002DF                     __pnvBANK2:
   439                           	callstack 0
   440  0002DF                     _TMR2_InterruptHandler:
   441                           	callstack 0
   442  0002DF                     	ds	2
   443  0002E1                     _TMR1_InterruptHandler:
   444                           	callstack 0
   445  0002E1                     	ds	2
   446  0002E3                     _timer1ReloadVal:
   447                           	callstack 0
   448  0002E3                     	ds	2
   449  0002E5                     _TMR0_InterruptHandler:
   450                           	callstack 0
   451  0002E5                     	ds	2
   452  0002E7                     _EUSART1_ErrorHandler:
   453                           	callstack 0
   454  0002E7                     	ds	2
   455  0002E9                     _EUSART1_OverrunErrorHandler:
   456                           	callstack 0
   457  0002E9                     	ds	2
   458  0002EB                     _EUSART1_FramingErrorHandler:
   459                           	callstack 0
   460  0002EB                     	ds	2
   461  0002ED                     _EUSART1_RxDefaultInterruptHandler:
   462                           	callstack 0
   463  0002ED                     	ds	2
   464  0002EF                     _EUSART1_TxDefaultInterruptHandler:
   465                           	callstack 0
   466  0002EF                     	ds	2
   467  0000                     _WDTCON0bits	set	3794
   468  0000                     _TMR0IE	set	30229
   469  0000                     _TMR0IF	set	30293
   470  0000                     _LATEbits	set	3975
   471  0000                     _LATDbits	set	3974
   472  0000                     _LATAbits	set	3971
   473  0000                     _LATCbits	set	3973
   474  0000                     _PORTB	set	3982
   475  0000                     _T1CONbits	set	4047
   476  0000                     _SSP1CON2bits	set	3991
   477  0000                     _SSP1CON1bits	set	3990
   478  0000                     _ADCON0bits	set	3936
   479  0000                     _RC1STAbits	set	3997
   480  0000                     _GIE	set	32663
   481  0000                     _RX1PPS	set	3765
   482  0000                     _SSP1CLKPPS	set	3767
   483  0000                     _PIE0bits	set	3778
   484  0000                     _PIE3bits	set	3781
   485  0000                     _PIE4bits	set	3782
   486  0000                     _PIR0bits	set	3786
   487  0000                     _PIR3bits	set	3789
   488  0000                     _ADACT	set	3926
   489  0000                     _ADREF	set	3928
   490  0000                     _ADCON1	set	3929
   491  0000                     _ADCAP	set	3933
   492  0000                     _ADPCH	set	3935
   493  0000                     _ADRPT	set	3942
   494  0000                     _ADSTPTL	set	3944
   495  0000                     _ADLTHL	set	3946
   496  0000                     _RC1REG	set	3993
   497  0000                     _TX1REG	set	3994
   498  0000                     _SP1BRGL	set	3995
   499  0000                     _RC1STA	set	3997
   500  0000                     _BAUD1CON	set	3999
   501  0000                     _T2TMR	set	4027
   502  0000                     _T2PR	set	4028
   503  0000                     _T2HLT	set	4030
   504  0000                     _T2CLKCON	set	4031
   505  0000                     _TMR1L	set	4045
   506  0000                     _TMR1H	set	4046
   507  0000                     _T1GCON	set	4048
   508  0000                     _TMR0L	set	4051
   509  0000                     _TMR0H	set	4052
   510  0000                     _T0CON1	set	4054
   511  0000                     _PCON0bits	set	4055
   512  0000                     _INTCONbits	set	4082
   513  0000                     _LATA	set	3971
   514  0000                     _LATD	set	3974
   515  0000                     _LATE	set	3975
   516  0000                     _SSP1BUF	set	3986
   517  0000                     _SSP1ADD	set	3987
   518  0000                     _SSP1STAT	set	3989
   519  0000                     _SSP1CON2	set	3991
   520  0000                     _SSP1CON1	set	3990
   521  0000                     _WDTCON0	set	3794
   522  0000                     _OSCCON1	set	3800
   523  0000                     _PIR4bits	set	3790
   524  0000                     _OSCCON3	set	3802
   525  0000                     _OSCEN	set	3804
   526  0000                     _PMD0	set	3809
   527  0000                     _RC3PPS	set	3834
   528  0000                     _INLVLA	set	3853
   529  0000                     _SLRCONA	set	3854
   530  0000                     _ODCONA	set	3855
   531  0000                     _WPUA	set	3856
   532  0000                     _ANSELA	set	3857
   533  0000                     _ANSELB	set	3865
   534  0000                     _ANSELC	set	3873
   535  0000                     _ANSELD	set	3878
   536  0000                     _PMD5	set	3814
   537  0000                     _PMD4	set	3813
   538  0000                     _PMD3	set	3812
   539  0000                     _PMD2	set	3811
   540  0000                     _PMD1	set	3810
   541  0000                     _WDTCON1	set	3795
   542  0000                     _PORTEbits	set	3985
   543  0000                     _PORTBbits	set	3982
   544  0000                     _PORTAbits	set	3981
   545  0000                     _INLVLE	set	3882
   546  0000                     _SLRCONE	set	3883
   547  0000                     _ODCONE	set	3884
   548  0000                     _WPUE	set	3885
   549  0000                     _ANSELE	set	3886
   550  0000                     _INLVLC	set	3869
   551  0000                     _SLRCONC	set	3870
   552  0000                     _ODCONC	set	3871
   553  0000                     _WPUC	set	3872
   554  0000                     _INLVLB	set	3861
   555  0000                     _SLRCONB	set	3862
   556  0000                     _ODCONB	set	3863
   557  0000                     _WPUB	set	3864
   558  0000                     _IOCBN3	set	30875
   559  0000                     _IOCBP3	set	30883
   560  0000                     _SSP1DATPPS	set	3768
   561  0000                     _RC7PPS	set	3838
   562  0000                     _RC4PPS	set	3835
   563  0000                     _T2RST	set	4032
   564                           
   565                           ; #config settings
   566                           
   567                           	psect	cinit
   568  007538                     __pcinit:
   569                           	callstack 0
   570  007538                     start_initialization:
   571                           	callstack 0
   572  007538                     __initialization:
   573                           	callstack 0
   574                           
   575                           ; Initialize objects allocated to BANK3 (37 bytes)
   576                           ; load TBLPTR registers with __pidataBANK3
   577  007538  0EAC               	movlw	low __pidataBANK3
   578  00753A  6EF6               	movwf	tblptrl,c
   579  00753C  0E93               	movlw	high __pidataBANK3
   580  00753E  6EF7               	movwf	tblptrh,c
   581  007540  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   582  007542  6EF8               	movwf	tblptru,c
   583  007544  EE03  F0D2         	lfsr	0,__pdataBANK3
   584  007548  EE10 F025          	lfsr	1,37
   585  00754C                     copy_data0:
   586  00754C  0009               	tblrd		*+
   587  00754E  CFF5 FFEE          	movff	tablat,postinc0
   588  007552  50E5               	movf	postdec1,w,c
   589  007554  50E1               	movf	fsr1l,w,c
   590  007556  E1FA               	bnz	copy_data0
   591                           
   592                           ; Initialize objects allocated to BANK2 (2 bytes)
   593                           ; load TBLPTR registers with __pidataBANK2
   594  007558  0E08               	movlw	low __pidataBANK2
   595  00755A  6EF6               	movwf	tblptrl,c
   596  00755C  0E98               	movlw	high __pidataBANK2
   597  00755E  6EF7               	movwf	tblptrh,c
   598  007560  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   599  007562  6EF8               	movwf	tblptru,c
   600  007564  0009               	tblrd		*+	;fetch initializer
   601  007566  CFF5 F2F1          	movff	tablat,__pdataBANK2
   602  00756A  0009               	tblrd		*+	;fetch initializer
   603  00756C  CFF5 F2F2          	movff	tablat,__pdataBANK2+1
   604                           
   605                           ; Initialize objects allocated to BANK1 (5 bytes)
   606                           ; load TBLPTR registers with __pidataBANK1
   607  007570  0ED4               	movlw	low __pidataBANK1
   608  007572  6EF6               	movwf	tblptrl,c
   609  007574  0E97               	movlw	high __pidataBANK1
   610  007576  6EF7               	movwf	tblptrh,c
   611  007578  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   612  00757A  6EF8               	movwf	tblptru,c
   613  00757C  EE01  F0FA         	lfsr	0,__pdataBANK1
   614  007580  EE10 F005          	lfsr	1,5
   615  007584                     copy_data1:
   616  007584  0009               	tblrd		*+
   617  007586  CFF5 FFEE          	movff	tablat,postinc0
   618  00758A  50E5               	movf	postdec1,w,c
   619  00758C  50E1               	movf	fsr1l,w,c
   620  00758E  E1FA               	bnz	copy_data1
   621                           
   622                           ; Initialize objects allocated to BANK0 (2 bytes)
   623                           ; load TBLPTR registers with __pidataBANK0
   624  007590  0E06               	movlw	low __pidataBANK0
   625  007592  6EF6               	movwf	tblptrl,c
   626  007594  0E98               	movlw	high __pidataBANK0
   627  007596  6EF7               	movwf	tblptrh,c
   628  007598  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   629  00759A  6EF8               	movwf	tblptru,c
   630  00759C  0009               	tblrd		*+	;fetch initializer
   631  00759E  CFF5 F0FB          	movff	tablat,__pdataBANK0
   632  0075A2  0009               	tblrd		*+	;fetch initializer
   633  0075A4  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   634                           
   635                           ; Clear objects allocated to BANK3 (210 bytes)
   636  0075A8  EE03  F000         	lfsr	0,__pbssBANK3
   637  0075AC  0ED2               	movlw	210
   638  0075AE                     clear_0:
   639  0075AE  6AEE               	clrf	postinc0,c
   640  0075B0  06E8               	decf	wreg,f,c
   641  0075B2  E1FD               	bnz	clear_0
   642                           
   643                           ; Clear objects allocated to BANK2 (223 bytes)
   644  0075B4  EE02  F000         	lfsr	0,__pbssBANK2
   645  0075B8  0EDF               	movlw	223
   646  0075BA                     clear_1:
   647  0075BA  6AEE               	clrf	postinc0,c
   648  0075BC  06E8               	decf	wreg,f,c
   649  0075BE  E1FD               	bnz	clear_1
   650                           
   651                           ; Clear objects allocated to BANK1 (250 bytes)
   652  0075C0  EE01  F000         	lfsr	0,__pbssBANK1
   653  0075C4  0EFA               	movlw	250
   654  0075C6                     clear_2:
   655  0075C6  6AEE               	clrf	postinc0,c
   656  0075C8  06E8               	decf	wreg,f,c
   657  0075CA  E1FD               	bnz	clear_2
   658                           
   659                           ; Clear objects allocated to BANK0 (120 bytes)
   660  0075CC  EE00  F060         	lfsr	0,__pbssBANK0
   661  0075D0  0E78               	movlw	120
   662  0075D2                     clear_3:
   663  0075D2  6AEE               	clrf	postinc0,c
   664  0075D4  06E8               	decf	wreg,f,c
   665  0075D6  E1FD               	bnz	clear_3
   666                           
   667                           ; Clear objects allocated to COMRAM (21 bytes)
   668  0075D8  EE00  F03B         	lfsr	0,__pbssCOMRAM
   669  0075DC  0E15               	movlw	21
   670  0075DE                     clear_4:
   671  0075DE  6AEE               	clrf	postinc0,c
   672  0075E0  06E8               	decf	wreg,f,c
   673  0075E2  E1FD               	bnz	clear_4
   674  0075E4                     end_of_initialization:
   675                           	callstack 0
   676  0075E4                     __end_of__initialization:
   677                           	callstack 0
   678  0075E4  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   679  0075E6  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   680  0075E8  0100               	movlb	0
   681  0075EA  EF0A  F031         	goto	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMRAM
   684  00003B                     __pbssCOMRAM:
   685                           	callstack 0
   686  00003B                     _rfCMD:
   687                           	callstack 0
   688  00003B                     	ds	11
   689  000046                     _edit_Param:
   690                           	callstack 0
   691  000046                     	ds	6
   692  00004C                     _button_struct:
   693                           	callstack 0
   694  00004C                     	ds	4
   695                           
   696                           	psect	bssBANK0
   697  000060                     __pbssBANK0:
   698                           	callstack 0
   699  000060                     _learn_st:
   700                           	callstack 0
   701  000060                     	ds	18
   702  000072                     _dispStruct:
   703                           	callstack 0
   704  000072                     	ds	6
   705  000078                     _brakeElectric_st:
   706                           	callstack 0
   707  000078                     	ds	2
   708  00007A                     _pointSync:
   709                           	callstack 0
   710  00007A                     	ds	2
   711  00007C                     _Hop:
   712                           	callstack 0
   713  00007C                     	ds	2
   714  00007E                     _RFcount:
   715                           	callstack 0
   716  00007E                     	ds	2
   717  000080                     _temp:
   718                           	callstack 0
   719  000080                     	ds	1
   720  000081                     _control_limit_switch:
   721                           	callstack 0
   722  000081                     	ds	1
   723  000082                     _fullmotorPower:
   724                           	callstack 0
   725  000082                     	ds	1
   726  000083                     _stateMotor:
   727                           	callstack 0
   728  000083                     	ds	1
   729  000084                     _zeroCrossingWaitTimeIdx:
   730                           	callstack 0
   731  000084                     	ds	1
   732  000085                     _programmer_enable:
   733                           	callstack 0
   734  000085                     	ds	1
   735  000086                     readbutton@key1:
   736                           	callstack 0
   737  000086                     	ds	1
   738  000087                     readRFButtons@keyType:
   739                           	callstack 0
   740  000087                     	ds	1
   741  000088                     readRFButtons@key1:
   742                           	callstack 0
   743  000088                     	ds	1
   744  000089                     _RFBit:
   745                           	callstack 0
   746  000089                     	ds	1
   747  00008A                     _RFFull_12BIT:
   748                           	callstack 0
   749  00008A                     	ds	1
   750  00008B                     _RFFull:
   751                           	callstack 0
   752  00008B                     	ds	1
   753  00008C                     _BitCount:
   754                           	callstack 0
   755  00008C                     	ds	1
   756  00008D                     _Bptr:
   757                           	callstack 0
   758  00008D                     	ds	1
   759  00008E                     _numberOfErrorCurrent:
   760                           	callstack 0
   761  00008E                     	ds	1
   762  00008F                     _idxAdcZeroAquisition:
   763                           	callstack 0
   764  00008F                     	ds	1
   765  000090                     _idxSaveEnergyADCHist:
   766                           	callstack 0
   767  000090                     	ds	1
   768  000091                     _idxAdcAquisition:
   769                           	callstack 0
   770  000091                     	ds	1
   771  000092                     _Counterchoose:
   772                           	callstack 0
   773  000092                     	ds	1
   774  000093                     _eusart1RxCount:
   775                           	callstack 0
   776  000093                     	ds	1
   777  000094                     _eusart1RxTail:
   778                           	callstack 0
   779  000094                     	ds	1
   780  000095                     _eusart1RxHead:
   781                           	callstack 0
   782  000095                     	ds	1
   783  000096                     _eusart1TxTail:
   784                           	callstack 0
   785  000096                     	ds	1
   786  000097                     _eusart1TxHead:
   787                           	callstack 0
   788  000097                     	ds	1
   789  000098                     _var_sys_NVM:
   790                           	callstack 0
   791  000098                     	ds	64
   792                           
   793                           	psect	dataBANK0
   794  0000FB                     __pdataBANK0:
   795                           	callstack 0
   796  0000FB                     _auxCounter:
   797                           	callstack 0
   798  0000FB                     	ds	2
   799                           
   800                           	psect	bssBANK1
   801  000100                     __pbssBANK1:
   802                           	callstack 0
   803  000100                     _var_sys:
   804                           	callstack 0
   805  000100                     	ds	81
   806  000151                     _menu_st:
   807                           	callstack 0
   808  000151                     	ds	25
   809  00016A                     _security:
   810                           	callstack 0
   811  00016A                     	ds	11
   812  000175                     _fimdecurso:
   813                           	callstack 0
   814  000175                     	ds	6
   815  00017B                     _powerControl_st:
   816                           	callstack 0
   817  00017B                     	ds	6
   818  000181                     readRFButtons@serial:
   819                           	callstack 0
   820  000181                     	ds	4
   821  000185                     readRFButtons@rollingCode:
   822                           	callstack 0
   823  000185                     	ds	2
   824  000187                     _BufferRF_12BIT:
   825                           	callstack 0
   826  000187                     	ds	2
   827  000189                     _erroranterior:
   828                           	callstack 0
   829  000189                     	ds	2
   830  00018B                     eusartparser@save_f:
   831                           	callstack 0
   832  00018B                     	ds	1
   833  00018C                     _aux_in_auto_close:
   834                           	callstack 0
   835  00018C                     	ds	1
   836  00018D                     _aux_i:
   837                           	callstack 0
   838  00018D                     	ds	1
   839  00018E                     _Abertura_pedonal:
   840                           	callstack 0
   841  00018E                     	ds	1
   842  00018F                     _temppower:
   843                           	callstack 0
   844  00018F                     	ds	1
   845  000190                     _difTime:
   846                           	callstack 0
   847  000190                     	ds	1
   848  000191                     _StateTRIAC:
   849                           	callstack 0
   850  000191                     	ds	1
   851  000192                     _waitZeroPeak:
   852                           	callstack 0
   853  000192                     	ds	1
   854  000193                     _zeroCrossing:
   855                           	callstack 0
   856  000193                     	ds	1
   857  000194                     _zeroCrossingLength:
   858                           	callstack 0
   859  000194                     	ds	1
   860  000195                     _lastKey:
   861                           	callstack 0
   862  000195                     	ds	1
   863  000196                     _F2Chance:
   864                           	callstack 0
   865  000196                     	ds	1
   866  000197                     readbutton@key2:
   867                           	callstack 0
   868  000197                     	ds	1
   869  000198                     readRFButtons@typeRemote:
   870                           	callstack 0
   871  000198                     	ds	1
   872  000199                     _RFstate:
   873                           	callstack 0
   874  000199                     	ds	1
   875  00019A                     _eusart1RxLastError:
   876                           	callstack 0
   877  00019A                     	ds	1
   878  00019B                     _ts_system:
   879                           	callstack 0
   880  00019B                     	ds	72
   881  0001E3                     _controlGate_stateMachine:
   882                           	callstack 0
   883  0001E3                     	ds	11
   884  0001EE                     _main_stateMachine:
   885                           	callstack 0
   886  0001EE                     	ds	11
   887  0001F9                     setValueToEdit@value:
   888                           	callstack 0
   889  0001F9                     	ds	1
   890                           
   891                           	psect	dataBANK1
   892  0001FA                     __pdataBANK1:
   893                           	callstack 0
   894  0001FA                     _tempCounter:
   895                           	callstack 0
   896  0001FA                     	ds	4
   897  0001FE                     _firstselectflag:
   898                           	callstack 0
   899  0001FE                     	ds	1
   900                           
   901                           	psect	bssBANK2
   902  000200                     __pbssBANK2:
   903                           	callstack 0
   904  000200                     _ADC_array:
   905                           	callstack 0
   906  000200                     	ds	60
   907  00023C                     _I2C1_Status:
   908                           	callstack 0
   909  00023C                     	ds	36
   910  000260                     _SumEnergyADCHist_array:
   911                           	callstack 0
   912  000260                     	ds	20
   913  000274                     _eusart1RxStatusBuffer:
   914                           	callstack 0
   915  000274                     	ds	8
   916  00027C                     _eusart1RxBuffer:
   917                           	callstack 0
   918  00027C                     	ds	8
   919  000284                     _eusart1TxBuffer:
   920                           	callstack 0
   921  000284                     	ds	8
   922  00028C                     eusartparser@buffer:
   923                           	callstack 0
   924  00028C                     	ds	2
   925  00028E                     _EHop:
   926                           	callstack 0
   927  00028E                     	ds	2
   928  000290                     _NextHop:
   929                           	callstack 0
   930  000290                     	ds	2
   931  000292                     _timer0ReloadVal16bit:
   932                           	callstack 0
   933  000292                     	ds	2
   934  000294                     _classic_data:
   935                           	callstack 0
   936  000294                     	ds	16
   937  0002A4                     _memoryTEMP:
   938                           	callstack 0
   939  0002A4                     	ds	16
   940  0002B4                     _controlLearning_stateMachine:
   941                           	callstack 0
   942  0002B4                     	ds	11
   943  0002BF                     _menuConfiguration_stateMachine:
   944                           	callstack 0
   945  0002BF                     	ds	11
   946  0002CA                     _BufferRF:
   947                           	callstack 0
   948  0002CA                     	ds	9
   949  0002D3                     _DKEY:
   950                           	callstack 0
   951  0002D3                     	ds	8
   952  0002DB                     NormalKeyGen@SEED:
   953                           	callstack 0
   954  0002DB                     	ds	4
   955                           
   956                           	psect	dataBANK2
   957  0002F1                     __pdataBANK2:
   958                           	callstack 0
   959  0002F1                     _zeroCrossingWaitTime:
   960                           	callstack 0
   961  0002F1                     	ds	2
   962                           
   963                           	psect	bssBANK3
   964  000300                     __pbssBANK3:
   965                           	callstack 0
   966  000300                     _listSyncValues:
   967                           	callstack 0
   968  000300                     	ds	150
   969  000396                     _ADC_zero_array:
   970                           	callstack 0
   971  000396                     	ds	60
   972                           
   973                           	psect	dataBANK3
   974  0003D2                     __pdataBANK3:
   975                           	callstack 0
   976  0003D2                     _DispTable:
   977                           	callstack 0
   978  0003D2                     	ds	37
   979                           
   980                           	psect	cstackBANK0
   981  0000D8                     __pcstackBANK0:
   982                           	callstack 0
   983  0000D8                     ??_keeloq_classic_decrypt_packet:
   984  0000D8                     ??_setPositionInvertionInClosing:
   985  0000D8                     ??_validateRemoteSerialNumber:
   986  0000D8                     ??_RemoveSerial:
   987  0000D8                     SaveNVM_VarSystem@page:
   988                           	callstack 0
   989  0000D8                     getStateOpenPosition@state:
   990                           	callstack 0
   991  0000D8                     saveNewSerial@tempSerial:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x0
   995  0000D8                     	ds	1
   996  0000D9                     getStateOpenPosition@stateMotor:
   997                           	callstack 0
   998  0000D9                     SaveNVM_VarSystem@tempAdd:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x1
  1002  0000D9                     	ds	1
  1003  0000DA                     ??_controlVelocity:
  1004  0000DA                     RemoveSerial@cmdType:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x2
  1008  0000DA                     	ds	1
  1009  0000DB                     SaveNVM_VarSystem@point:
  1010                           	callstack 0
  1011  0000DB                     RemoveSerial@tempSerial:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x3
  1015  0000DB                     	ds	1
  1016  0000DC                     ??_setValueToEdit:
  1017  0000DC                     saveNewSerial@position:
  1018                           	callstack 0
  1019  0000DC                     sm_execute_ControlLearning@psm:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x4
  1023  0000DC                     	ds	1
  1024  0000DD                     ??_saveNewSerial:
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  0000DD                     	ds	1
  1028  0000DE                     ??_sm_execute_ControlLearning:
  1029  0000DE                     setValueToEdit@menuType:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x6
  1033  0000DE                     	ds	1
  1034  0000DF                     setValueToEdit@posindex:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x7
  1038  0000DF                     	ds	1
  1039  0000E0                     ??_controlSelectRemote:
  1040  0000E0                     setValueToEdit@haveValueToEdit:
  1041                           	callstack 0
  1042  0000E0                     eusartparser@package:
  1043                           	callstack 0
  1044  0000E0                     keeloqDecryptPacket@data:
  1045                           	callstack 0
  1046  0000E0                     DecryptPacket_12BIT@data:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x8
  1050  0000E0                     	ds	1
  1051  0000E1                     ??_eusartparser:
  1052  0000E1                     controlSelectRemote@validSerial:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x9
  1056  0000E1                     	ds	1
  1057  0000E2                     controlSelectRemote@pos:
  1058                           	callstack 0
  1059  0000E2                     keeloqDecryptPacket@classic_data:
  1060                           	callstack 0
  1061  0000E2                     DecryptPacket_12BIT@classic_data:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0xA
  1065  0000E2                     	ds	1
  1066  0000E3                     controlSelectRemote@typeRemote:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0xB
  1070  0000E3                     	ds	1
  1071  0000E4                     ??_keeloqDecryptPacket:
  1072  0000E4                     DecryptPacket_12BIT@commandType:
  1073                           	callstack 0
  1074  0000E4                     actionZone_Opening@securityClosing:
  1075                           	callstack 0
  1076  0000E4                     controlSelectRemote@tempSerial:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0xC
  1080  0000E4                     	ds	1
  1081  0000E5                     actionZone_Opening@securityOpening:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0xD
  1085  0000E5                     	ds	1
  1086  0000E6                     actionZone_Opening@typeOpenOrder:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0xE
  1090  0000E6                     	ds	1
  1091  0000E7                     eusartparser@pos:
  1092                           	callstack 0
  1093  0000E7                     sm_execute_ControlGate@psm:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0xF
  1097  0000E7                     	ds	1
  1098  0000E8                     keeloqDecryptPacket@hop_error:
  1099                           	callstack 0
  1100  0000E8                     controlSelectRemote@temp:
  1101                           	callstack 0
  1102  0000E8                     eusartparser@i:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x10
  1106  0000E8                     	ds	1
  1107  0000E9                     ??_sm_execute_ControlGate:
  1108  0000E9                     keeloqDecryptPacket@commandType:
  1109                           	callstack 0
  1110  0000E9                     eusartparser@i_7280:
  1111                           	callstack 0
  1112  0000E9                     sm_execute_menuConfiguration@psm:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x11
  1116  0000E9                     	ds	1
  1117  0000EA                     eusartparser@relcounter:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x12
  1121  0000EA                     	ds	1
  1122  0000EB                     ??_sm_execute_menuConfiguration:
  1123  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1124                           	callstack 0
  1125  0000EB                     eusartparser@i_7281:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x13
  1129  0000EB                     	ds	1
  1130  0000EC                     eusartparser@i_7282:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x14
  1134  0000EC                     	ds	1
  1135  0000ED                     eusartparser@i_7283:
  1136                           	callstack 0
  1137  0000ED                     sm_execute_main@psm:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x15
  1141  0000ED                     	ds	1
  1142  0000EE                     eusartparser@i_7284:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x16
  1146  0000EE                     	ds	1
  1147  0000EF                     ??_sm_execute_main:
  1148  0000EF                     eusartparser@i_7285:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x17
  1152  0000EF                     	ds	1
  1153  0000F0                     eusartparser@serial:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x18
  1157  0000F0                     	ds	4
  1158  0000F4                     main@package:
  1159                           	callstack 0
  1160                           
  1161                           ; 7 bytes @ 0x1C
  1162  0000F4                     	ds	7
  1163                           
  1164                           	psect	cstackCOMRAM
  1165  000001                     __pcstackCOMRAM:
  1166                           	callstack 0
  1167  000001                     ??_rxi:
  1168  000001                     ??i2_GetMotorPower:
  1169  000001                     ADCC_GetSingleConversion@channel:
  1170                           	callstack 0
  1171  000001                     Segments_Set@value:
  1172                           	callstack 0
  1173  000001                     i2VerifyElectricalBrake@tempState:
  1174                           	callstack 0
  1175  000001                     TMR1_WriteTimer@timerVal:
  1176                           	callstack 0
  1177  000001                     decrementTimeslot@ts:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x0
  1181  000001                     	ds	1
  1182  000002                     ??_ReadADC:
  1183  000002                     i2VerifyElectricalBrake@actualState:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x1
  1187  000002                     	ds	1
  1188  000003                     
  1189                           ; 1 bytes @ 0x2
  1190  000003                     	ds	1
  1191  000004                     i2GetMotorPower@defineatraso:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x3
  1195  000004                     	ds	1
  1196  000005                     ??_controlMotorForce:
  1197  000005                     
  1198                           ; 1 bytes @ 0x4
  1199  000005                     	ds	5
  1200  00000A                     ??_INTERRUPT_InterruptManager:
  1201                           
  1202                           ; 1 bytes @ 0x9
  1203  00000A                     	ds	6
  1204  000010                     ??_GetMotorPower:
  1205  000010                     ??_SetSegmentValueLearn:
  1206  000010                     ?_sumEnergyADC:
  1207                           	callstack 0
  1208  000010                     ?_sm_get_current_state:
  1209                           	callstack 0
  1210  000010                     ?___wmul:
  1211                           	callstack 0
  1212  000010                     ?___lwdiv:
  1213                           	callstack 0
  1214  000010                     ?_calculateMean:
  1215                           	callstack 0
  1216  000010                     ?_sumHIST:
  1217                           	callstack 0
  1218  000010                     ?___lldiv:
  1219                           	callstack 0
  1220  000010                     EUSART1_Read@readValue:
  1221                           	callstack 0
  1222  000010                     EUSART1_Write@txData:
  1223                           	callstack 0
  1224  000010                     I2C1_Open@address:
  1225                           	callstack 0
  1226  000010                     I2C1_Close@returnValue:
  1227                           	callstack 0
  1228  000010                     I2C1_MasterSendTxData@data:
  1229                           	callstack 0
  1230  000010                     WWDT_TimerClear@state:
  1231                           	callstack 0
  1232  000010                     getKeyPressed@temp:
  1233                           	callstack 0
  1234  000010                     RGB_Set@value:
  1235                           	callstack 0
  1236  000010                     SetSegmentValueIntermitent@d2:
  1237                           	callstack 0
  1238  000010                     VerifyElectricalBrake@tempState:
  1239                           	callstack 0
  1240  000010                     VerifyFollowMe@securityClose:
  1241                           	callstack 0
  1242  000010                     init_package@package:
  1243                           	callstack 0
  1244  000010                     ___lbdiv@divisor:
  1245                           	callstack 0
  1246  000010                     ___lbmod@divisor:
  1247                           	callstack 0
  1248  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1249                           	callstack 0
  1250  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1251                           	callstack 0
  1252  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1253                           	callstack 0
  1254  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1255                           	callstack 0
  1256  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1257                           	callstack 0
  1258  000010                     I2C1_SetBuffer@buffer:
  1259                           	callstack 0
  1260  000010                     I2C1_SetCallback@cb:
  1261                           	callstack 0
  1262  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1263                           	callstack 0
  1264  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1265                           	callstack 0
  1266  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1267                           	callstack 0
  1268  000010                     saveEnergyADCHist@valueToSave:
  1269                           	callstack 0
  1270  000010                     DecCHK@data:
  1271                           	callstack 0
  1272  000010                     ReqResync@CurrentHop:
  1273                           	callstack 0
  1274  000010                     verifyProgramingMode@classic_data:
  1275                           	callstack 0
  1276  000010                     setFlashLigth_ON@Freq:
  1277                           	callstack 0
  1278  000010                     sm_restart@psm:
  1279                           	callstack 0
  1280  000010                     sm_get_current_state@psm:
  1281                           	callstack 0
  1282  000010                     ___wmul@multiplier:
  1283                           	callstack 0
  1284  000010                     ___lwdiv@dividend:
  1285                           	callstack 0
  1286  000010                     memcpy@d1:
  1287                           	callstack 0
  1288  000010                     calculateMean@meanValue:
  1289                           	callstack 0
  1290  000010                     ___lldiv@dividend:
  1291                           	callstack 0
  1292  000010                     write_eusartparser@package:
  1293                           	callstack 0
  1294                           
  1295                           ; 7 bytes @ 0xF
  1296  000010                     	ds	1
  1297  000011                     ?_read_package:
  1298                           	callstack 0
  1299  000011                     I2C1_Open@returnValue:
  1300                           	callstack 0
  1301  000011                     VerifyElectricalBrake@actualState:
  1302                           	callstack 0
  1303  000011                     confirmpackage@package:
  1304                           	callstack 0
  1305  000011                     ___lbdiv@dividend:
  1306                           	callstack 0
  1307  000011                     ___lbmod@dividend:
  1308                           	callstack 0
  1309  000011                     SetSegmentValueIntermitent@time:
  1310                           	callstack 0
  1311  000011                     setRGB_ON@Freq:
  1312                           	callstack 0
  1313  000011                     write_package@package:
  1314                           	callstack 0
  1315                           
  1316                           ; 7 bytes @ 0x10
  1317  000011                     	ds	1
  1318  000012                     ??_TMR1_Initialize:
  1319  000012                     ??_ControlMotor:
  1320  000012                     ??_sumEnergyADC:
  1321  000012                     ??_DecCHK:
  1322  000012                     SetSegmentValueLearn@direction:
  1323                           	callstack 0
  1324  000012                     confirmpackage@confirm:
  1325                           	callstack 0
  1326  000012                     ___lbdiv@counter:
  1327                           	callstack 0
  1328  000012                     ___lbmod@counter:
  1329                           	callstack 0
  1330  000012                     I2C1_SetBuffer@bufferSize:
  1331                           	callstack 0
  1332  000012                     I2C1_SetCallback@ptr:
  1333                           	callstack 0
  1334  000012                     sm_init@psm:
  1335                           	callstack 0
  1336  000012                     sm_send_event@psm:
  1337                           	callstack 0
  1338  000012                     ___wmul@multiplicand:
  1339                           	callstack 0
  1340  000012                     ___lwdiv@divisor:
  1341                           	callstack 0
  1342  000012                     memcpy@s1:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x11
  1346  000012                     	ds	1
  1347  000013                     ??_setRGB_ON:
  1348  000013                     SetSegmentValueIntermitent@d1:
  1349                           	callstack 0
  1350  000013                     GetMotorPower@defineatraso:
  1351                           	callstack 0
  1352  000013                     ___lbdiv@quotient:
  1353                           	callstack 0
  1354  000013                     ___lbmod@rem:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x12
  1358  000013                     	ds	1
  1359  000014                     ??_InitSoftStop:
  1360  000014                     ??_InitSoftStart:
  1361  000014                     ??_sumHIST:
  1362  000014                     ?___awdiv:
  1363                           	callstack 0
  1364  000014                     I2C1_SetCallback@idx:
  1365                           	callstack 0
  1366  000014                     sumEnergyADC@sumE:
  1367                           	callstack 0
  1368  000014                     sm_init@initial_state:
  1369                           	callstack 0
  1370  000014                     sm_send_event@event:
  1371                           	callstack 0
  1372  000014                     ___wmul@product:
  1373                           	callstack 0
  1374  000014                     ___awdiv@dividend:
  1375                           	callstack 0
  1376  000014                     ___lwdiv@quotient:
  1377                           	callstack 0
  1378  000014                     memcpy@n:
  1379                           	callstack 0
  1380  000014                     calculateMean@newValue:
  1381                           	callstack 0
  1382  000014                     ___lldiv@divisor:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x13
  1386  000014                     	ds	1
  1387  000015                     setRGB_ON@RGBLigth:
  1388                           	callstack 0
  1389  000015                     I2C1_SetDataCompleteCallback@cb:
  1390                           	callstack 0
  1391  000015                     I2C1_SetAddressNackCallback@cb:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x14
  1395  000015                     	ds	1
  1396  000016                     ?_getHopCode:
  1397                           	callstack 0
  1398  000016                     ?_getCurrentComparator:
  1399                           	callstack 0
  1400  000016                     sm_init@hist_mode:
  1401                           	callstack 0
  1402  000016                     ___lwdiv@counter:
  1403                           	callstack 0
  1404  000016                     memcpy@tmp:
  1405                           	callstack 0
  1406  000016                     sumEnergyADC@auxValue:
  1407                           	callstack 0
  1408  000016                     getHopCode@data:
  1409                           	callstack 0
  1410  000016                     ___awdiv@divisor:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x15
  1414  000016                     	ds	1
  1415  000017                     ??_write_eusartparser:
  1416  000017                     refreshADCZeroOffset@i:
  1417                           	callstack 0
  1418  000017                     I2C1_SetDataCompleteCallback@ptr:
  1419                           	callstack 0
  1420  000017                     I2C1_SetAddressNackCallback@ptr:
  1421                           	callstack 0
  1422  000017                     memcpy@d:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x16
  1426  000017                     	ds	1
  1427  000018                     ??_getHopCode:
  1428  000018                     ??_calculateMean:
  1429  000018                     ??_OpenWalkOrder:
  1430  000018                     sumEnergyADC@i:
  1431                           	callstack 0
  1432  000018                     ControlMotor@stateMotor:
  1433                           	callstack 0
  1434  000018                     read_eusartparser@package:
  1435                           	callstack 0
  1436  000018                     ___awdiv@counter:
  1437                           	callstack 0
  1438  000018                     refreshADCZeroOffset@media:
  1439                           	callstack 0
  1440  000018                     sumHIST@max:
  1441                           	callstack 0
  1442  000018                     ___lldiv@quotient:
  1443                           	callstack 0
  1444  000018                     read_package@package:
  1445                           	callstack 0
  1446                           
  1447                           ; 7 bytes @ 0x17
  1448  000018                     	ds	1
  1449  000019                     ??_read_eusartparser:
  1450  000019                     ___awdiv@sign:
  1451                           	callstack 0
  1452  000019                     wr1RegCompleteHandler@p:
  1453                           	callstack 0
  1454  000019                     rd1RegCompleteHandler@p:
  1455                           	callstack 0
  1456  000019                     rd2RegCompleteHandler@p:
  1457                           	callstack 0
  1458  000019                     wr2RegCompleteHandler@p:
  1459                           	callstack 0
  1460  000019                     rdBlkRegCompleteHandler@p:
  1461                           	callstack 0
  1462  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1463                           	callstack 0
  1464  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1465                           	callstack 0
  1466  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1467                           	callstack 0
  1468  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1469                           	callstack 0
  1470  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1471                           	callstack 0
  1472  000019                     I2C1_CallbackReturnReset@funPtr:
  1473                           	callstack 0
  1474  000019                     memcpy@s:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x18
  1478  000019                     	ds	1
  1479  00001A                     ??_getCurrentComparator:
  1480  00001A                     sumHIST@min:
  1481                           	callstack 0
  1482  00001A                     OpenWalkOrder@diffTime:
  1483                           	callstack 0
  1484  00001A                     ___awdiv@quotient:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x19
  1488  00001A                     	ds	1
  1489  00001B                     ??_I2C1_DO_TX:
  1490  00001B                     ??_I2C1_DO_RX:
  1491  00001B                     ??_I2C1_DO_TX_EMPTY:
  1492  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1493  00001B                     getSerialCmd@serial:
  1494                           	callstack 0
  1495  00001B                     Decrypt@packet:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x1A
  1499  00001B                     	ds	1
  1500  00001C                     getSerialCmd@temp:
  1501                           	callstack 0
  1502  00001C                     SetSegmentValueMain@d2:
  1503                           	callstack 0
  1504  00001C                     SetSegmentValue@d2:
  1505                           	callstack 0
  1506  00001C                     SetSegmentValueIntermitentMain@d2:
  1507                           	callstack 0
  1508  00001C                     ___lldiv@counter:
  1509                           	callstack 0
  1510  00001C                     sumHIST@sumH:
  1511                           	callstack 0
  1512                           
  1513                           ; 4 bytes @ 0x1B
  1514  00001C                     	ds	1
  1515  00001D                     ??_I2C1_MasterFsm:
  1516  00001D                     ?___lmul:
  1517                           	callstack 0
  1518  00001D                     Decrypt@key:
  1519                           	callstack 0
  1520  00001D                     SetSegmentValueMain@d1:
  1521                           	callstack 0
  1522  00001D                     SetSegmentValue@d1:
  1523                           	callstack 0
  1524  00001D                     SetSegmentValueIntermitentMain@time:
  1525                           	callstack 0
  1526  00001D                     ___lmul@multiplier:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x1C
  1530  00001D                     	ds	1
  1531  00001E                     Decrypt@i:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x1D
  1535  00001E                     	ds	1
  1536  00001F                     Decrypt@j:
  1537                           	callstack 0
  1538  00001F                     SetSegmentValueIntermitentMain@d1:
  1539                           	callstack 0
  1540  00001F                     write_eusartparser@debug:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x1E
  1544  00001F                     	ds	1
  1545  000020                     ??_load_New_Menu:
  1546  000020                     ??_controlSaveRemote:
  1547  000020                     I2C1_MasterOperation@read:
  1548                           	callstack 0
  1549  000020                     sumHIST@i:
  1550                           	callstack 0
  1551  000020                     Decrypt@p:
  1552                           	callstack 0
  1553  000020                     actionZone_Closed@securityOpening:
  1554                           	callstack 0
  1555  000020                     actionZone_Opened@securityClosing:
  1556                           	callstack 0
  1557  000020                     getCurrentComparator@tempOffset:
  1558                           	callstack 0
  1559  000020                     getHopCode@tempHop:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x1F
  1563  000020                     	ds	1
  1564  000021                     I2C1_MasterOperation@returnValue:
  1565                           	callstack 0
  1566  000021                     Decrypt@aux:
  1567                           	callstack 0
  1568  000021                     actionZone_Closed@typeOpenOrder:
  1569                           	callstack 0
  1570  000021                     actionZone_Opened@typeOpenOrder:
  1571                           	callstack 0
  1572  000021                     write_eusartparser@debug2:
  1573                           	callstack 0
  1574  000021                     ___lmul@multiplicand:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x20
  1578  000021                     	ds	1
  1579  000022                     I2C1_Read1ByteRegister@reg:
  1580                           	callstack 0
  1581  000022                     getCurrentComparator@x:
  1582                           	callstack 0
  1583  000022                     getHopCode@tempPos:
  1584                           	callstack 0
  1585  000022                     load_New_Menu@Menu:
  1586                           	callstack 0
  1587  000022                     i2c_writeNBytes@reg:
  1588                           	callstack 0
  1589  000022                     i2c_readDataBlock@reg:
  1590                           	callstack 0
  1591  000022                     Decrypt@Buffer:
  1592                           	callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x21
  1595  000022                     	ds	1
  1596  000023                     ??_ControlCurrent:
  1597  000023                     I2C1_Read1ByteRegister@address:
  1598                           	callstack 0
  1599  000023                     getHopCode@i:
  1600                           	callstack 0
  1601  000023                     load_New_Menu@i:
  1602                           	callstack 0
  1603                           
  1604                           ; 1 bytes @ 0x22
  1605  000023                     	ds	1
  1606  000024                     i2c_writeNBytes@data:
  1607                           	callstack 0
  1608  000024                     I2C1_Read1ByteRegister@returnValue:
  1609                           	callstack 0
  1610  000024                     i2c_readDataBlock@data:
  1611                           	callstack 0
  1612  000024                     HopCHK@data:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x23
  1616  000024                     	ds	1
  1617  000025                     i2c_writeNBytes@len:
  1618                           	callstack 0
  1619  000025                     ___lmul@product:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x24
  1623  000025                     	ds	1
  1624  000026                     i2c_readDataBlock@len:
  1625                           	callstack 0
  1626  000026                     NormalKeyGen@serial:
  1627                           	callstack 0
  1628  000026                     HopCHK@hopDiff:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x25
  1632  000026                     	ds	1
  1633  000027                     ??_i2c_writeNBytes:
  1634                           
  1635                           ; 1 bytes @ 0x26
  1636  000027                     	ds	1
  1637  000028                     ??_i2c_readDataBlock:
  1638  000028                     NormalKeyGen@HOPtemp:
  1639                           	callstack 0
  1640  000028                     i2c_writeNBytes@dat:
  1641                           	callstack 0
  1642                           
  1643                           ; 17 bytes @ 0x27
  1644  000028                     	ds	1
  1645  000029                     ?_getTimeDecelaration:
  1646                           	callstack 0
  1647  000029                     i2c_readDataBlock@address:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x28
  1651  000029                     	ds	1
  1652  00002A                     i2c_readDataBlock@d:
  1653                           	callstack 0
  1654                           
  1655                           ; 4 bytes @ 0x29
  1656  00002A                     	ds	2
  1657  00002C                     NormalKeyGen@SKEYtemp:
  1658                           	callstack 0
  1659                           
  1660                           ; 4 bytes @ 0x2B
  1661  00002C                     	ds	1
  1662  00002D                     ??_getTimeDecelaration:
  1663                           
  1664                           ; 1 bytes @ 0x2C
  1665  00002D                     	ds	1
  1666  00002E                     ReadSerial@tempSerial:
  1667                           	callstack 0
  1668  00002E                     cmdMemoryIsEmpty@position:
  1669                           	callstack 0
  1670  00002E                     validateRemoteSerialNumber@serial:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x2D
  1674  00002E                     	ds	1
  1675  00002F                     ??_cmdMemoryIsEmpty:
  1676  00002F                     ReadSerial@position:
  1677                           	callstack 0
  1678                           
  1679                           ; 1 bytes @ 0x2E
  1680  00002F                     	ds	1
  1681  000030                     ??_ReadSerial:
  1682  000030                     NormalKeyGen@Buffer:
  1683                           	callstack 0
  1684                           
  1685                           ; 8 bytes @ 0x2F
  1686  000030                     	ds	1
  1687  000031                     cmdMemoryIsEmpty@cmdType:
  1688                           	callstack 0
  1689  000031                     getTimeDecelaration@state:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x30
  1693  000031                     	ds	1
  1694  000032                     ??_setPositionInvertionInOpening:
  1695  000032                     ??_getStateOpenPosition:
  1696  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1697                           	callstack 0
  1698  000032                     ReadSerial@cmdType:
  1699                           	callstack 0
  1700  000032                     actionZone_Closing@securityClosing:
  1701                           	callstack 0
  1702  000032                     cmdMemoryIsEmpty@tempSerial:
  1703                           	callstack 0
  1704                           
  1705                           ; 4 bytes @ 0x31
  1706  000032                     	ds	1
  1707  000033                     actionZone_Closing@typeOpenOrder:
  1708                           	callstack 0
  1709  000033                     validateRemoteSerialNumber@position:
  1710                           	callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x32
  1713  000033                     	ds	2
  1714  000035                     validateRemoteSerialNumber@mask:
  1715                           	callstack 0
  1716                           
  1717                           ; 4 bytes @ 0x34
  1718  000035                     	ds	3
  1719  000038                     keeloq_classic_decrypt_packet@data:
  1720                           	callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x37
  1723  000038                     	ds	1
  1724  000039                     i2c_writeNBytes@address:
  1725                           	callstack 0
  1726  000039                     validateRemoteSerialNumber@j:
  1727                           	callstack 0
  1728                           
  1729                           ; 1 bytes @ 0x38
  1730  000039                     	ds	1
  1731  00003A                     validateRemoteSerialNumber@i:
  1732                           	callstack 0
  1733  00003A                     saveNewSerial@cmdType:
  1734                           	callstack 0
  1735  00003A                     RemoveSerial@position:
  1736                           	callstack 0
  1737  00003A                     ResetDefaultMemory@type:
  1738                           	callstack 0
  1739  00003A                     checkNVM_VarSystem@saveParam:
  1740                           	callstack 0
  1741  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1742                           	callstack 0
  1743  00003A                     setValueToEdit@ParameterSelected:
  1744                           	callstack 0
  1745                           
  1746                           ; 1 bytes @ 0x39
  1747  00003A                     	ds	1
  1748  00003B                     
  1749                           ; 1 bytes @ 0x3A
  1750 ;;
  1751 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1752 ;;
  1753 ;; *************** function _main *****************
  1754 ;; Defined at:
  1755 ;;		line 63 in file "main_MC50.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  package         7   28[BANK0 ] struct package_t
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 3F/1
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1770 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;Total ram usage:        7 bytes
  1774 ;; Hardware stack levels required when called: 17
  1775 ;; This function calls:
  1776 ;;		_ControlCounterMoves
  1777 ;;		_ControlCurrent
  1778 ;;		_ControlInputs
  1779 ;;		_ControlLights
  1780 ;;		_ControlMotor
  1781 ;;		_EUSART1_is_rx_ready
  1782 ;;		_InitReceiver
  1783 ;;		_SYSTEM_Initialize
  1784 ;;		_SetSegmentValue
  1785 ;;		_ShowVersion
  1786 ;;		_WWDT_SoftEnable
  1787 ;;		_WWDT_TimerClear
  1788 ;;		_controlVelocity
  1789 ;;		_eusartparser
  1790 ;;		_getKeyPressed
  1791 ;;		_loadNVM_VarSystem
  1792 ;;		_readInputs
  1793 ;;		_readRFButtons
  1794 ;;		_read_package
  1795 ;;		_readbutton
  1796 ;;		_sm_execute_ControlGate
  1797 ;;		_sm_execute_main
  1798 ;;		_sm_init
  1799 ;; This function is called by:
  1800 ;;		Startup code after reset
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text0
  1805  006214                     __ptext0:
  1806                           	callstack 0
  1807  006214                     _main:
  1808                           	callstack 14
  1809                           
  1810                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1811                           
  1812                           ;incstack = 0
  1813  006214  0E18               	movlw	24
  1814  006216  0100               	movlb	0	; () banked
  1815  006218  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1816                           
  1817                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1818  00621A  0E18               	movlw	24
  1819  00621C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1820                           
  1821                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1822  00621E  0E00               	movlw	0
  1823  006220  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1824  006222  0E00               	movlw	0
  1825  006224  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1826                           
  1827                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1828  006226  0E01               	movlw	1
  1829  006228  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1833  00622A  EC17  F048         	call	_SYSTEM_Initialize	;wreg free
  1834                           
  1835                           ; BSR set to: 14
  1836                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1837  00622E  ECED  F04B         	call	_WWDT_SoftEnable	;wreg free
  1838                           
  1839                           ; BSR set to: 14
  1840                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1841  006232  8EF2               	bsf	242,7,c	;volatile
  1842                           
  1843                           ; BSR set to: 14
  1844                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1845  006234  8CF2               	bsf	242,6,c	;volatile
  1846                           
  1847                           ; BSR set to: 14
  1848                           ;main_MC50.c: 86:     IOCBP3=1;
  1849  006236  010F               	movlb	15	; () banked
  1850  006238  8714               	bsf	20,3,b	;volatile
  1851                           
  1852                           ; BSR set to: 15
  1853                           ;main_MC50.c: 87:     IOCBN3=1;
  1854  00623A  8713               	bsf	19,3,b	;volatile
  1855                           
  1856                           ; BSR set to: 15
  1857                           ;main_MC50.c: 94:     InitReceiver();
  1858  00623C  EC77  F04A         	call	_InitReceiver	;wreg free
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1862  006240  ECC4  F033         	call	_loadNVM_VarSystem	;wreg free
  1863                           
  1864                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1865  006244  EC4D  F04A         	call	_WWDT_TimerClear	;wreg free
  1866                           
  1867                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1868  006248  0E18               	movlw	24
  1869  00624A  6E1C               	movwf	SetSegmentValue@d2^0,c
  1870  00624C  0E18               	movlw	24
  1871  00624E  EC9E  F04A         	call	_SetSegmentValue
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1875  006252  0E02               	movlw	2
  1876  006254  0101               	movlb	1	; () banked
  1877  006256  6F9D               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1878                           
  1879                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1880  006258  D00B               	goto	l24105
  1881  00625A                     l24095:
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1885  00625A  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1886  00625C  A4D8               	btfss	status,2,c
  1887  00625E  D008               	goto	l24105
  1888                           
  1889                           ; BSR set to: 1
  1890                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1891  006260  EC4D  F04A         	call	_WWDT_TimerClear	;wreg free
  1892                           
  1893                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1894  006264  0E32               	movlw	50
  1895  006266  0101               	movlb	1	; () banked
  1896  006268  6F9E               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1897                           
  1898                           ; BSR set to: 1
  1899                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1900  00626A  079D               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1901                           
  1902                           ; BSR set to: 1
  1903                           ;main_MC50.c: 109:             readInputs();
  1904  00626C  EC90  F036         	call	_readInputs	;wreg free
  1905  006270                     l24105:
  1906                           
  1907                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1908  006270  0101               	movlb	1	; () banked
  1909  006272  519D               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1910  006274  A4D8               	btfss	status,2,c
  1911  006276  D7F1               	goto	l24095
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1915  006278  0EBF               	movlw	low _menuConfiguration_stateMachine
  1916  00627A  6E12               	movwf	sm_init@psm^0,c
  1917  00627C  0E02               	movlw	high _menuConfiguration_stateMachine
  1918  00627E  6E13               	movwf	(sm_init@psm+1)^0,c
  1919  006280  0E00               	movlw	0
  1920  006282  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1921  006284  0E00               	movlw	0
  1922  006286  6E14               	movwf	sm_init@initial_state^0,c
  1923  006288  0E00               	movlw	0
  1924  00628A  6E16               	movwf	sm_init@hist_mode^0,c
  1925  00628C  EC72  F044         	call	_sm_init	;wreg free
  1926                           
  1927                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1928  006290  0EEE               	movlw	low _main_stateMachine
  1929  006292  6E12               	movwf	sm_init@psm^0,c
  1930  006294  0E01               	movlw	high _main_stateMachine
  1931  006296  6E13               	movwf	(sm_init@psm+1)^0,c
  1932  006298  0E00               	movlw	0
  1933  00629A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1934  00629C  0E00               	movlw	0
  1935  00629E  6E14               	movwf	sm_init@initial_state^0,c
  1936  0062A0  0E00               	movlw	0
  1937  0062A2  6E16               	movwf	sm_init@hist_mode^0,c
  1938  0062A4  EC72  F044         	call	_sm_init	;wreg free
  1939                           
  1940                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1941  0062A8  0EE3               	movlw	low _controlGate_stateMachine
  1942  0062AA  6E12               	movwf	sm_init@psm^0,c
  1943  0062AC  0E01               	movlw	high _controlGate_stateMachine
  1944  0062AE  6E13               	movwf	(sm_init@psm+1)^0,c
  1945  0062B0  0E00               	movlw	0
  1946  0062B2  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1947  0062B4  0E00               	movlw	0
  1948  0062B6  6E14               	movwf	sm_init@initial_state^0,c
  1949  0062B8  0E00               	movlw	0
  1950  0062BA  6E16               	movwf	sm_init@hist_mode^0,c
  1951  0062BC  EC72  F044         	call	_sm_init	;wreg free
  1952                           
  1953                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1954  0062C0  0EB4               	movlw	low _controlLearning_stateMachine
  1955  0062C2  6E12               	movwf	sm_init@psm^0,c
  1956  0062C4  0E02               	movlw	high _controlLearning_stateMachine
  1957  0062C6  6E13               	movwf	(sm_init@psm+1)^0,c
  1958  0062C8  0E00               	movlw	0
  1959  0062CA  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1960  0062CC  0E00               	movlw	0
  1961  0062CE  6E14               	movwf	sm_init@initial_state^0,c
  1962  0062D0  0E00               	movlw	0
  1963  0062D2  6E16               	movwf	sm_init@hist_mode^0,c
  1964  0062D4  EC72  F044         	call	_sm_init	;wreg free
  1965                           
  1966                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1967  0062D8  0E00               	movlw	0
  1968  0062DA  0101               	movlb	1	; () banked
  1969  0062DC  6FA4               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1970  0062DE  0E14               	movlw	20
  1971  0062E0  6FA3               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1975  0062E2  0E01               	movlw	1
  1976  0062E4  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1977  0062E6  0EFE               	movlw	254
  1978  0062E8  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1982  0062EA  0E00               	movlw	0
  1983  0062EC  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1984  0062EE  0E64               	movlw	100
  1985  0062F0  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1986                           
  1987                           ; BSR set to: 1
  1988                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1989  0062F2  0E00               	movlw	0
  1990  0062F4  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1991  0062F6  0E00               	movlw	0
  1992  0062F8  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1993                           
  1994                           ; BSR set to: 1
  1995                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1996  0062FA  0E00               	movlw	0
  1997  0062FC  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1998  0062FE                     l24119:
  1999                           
  2000                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2001  0062FE  EC3D  F04B         	call	_EUSART1_is_rx_ready	;wreg free
  2002  006302  0900               	iorlw	0
  2003  006304  B4D8               	btfsc	status,2,c
  2004  006306  D00E               	goto	l24125
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;main_MC50.c: 142:             package=read_package();
  2008  006308  EC46  F045         	call	_read_package	;wreg free
  2009  00630C  EE20  F0F4         	lfsr	2,main@package
  2010  006310  0E06               	movlw	6
  2011  006312                     u29771:
  2012  006312  CFEB FFDB          	movff	plusw0,plusw2
  2013  006316  06E8               	decf	wreg,f,c
  2014  006318  E2FC               	bc	u29771
  2015                           
  2016                           ; BSR set to: 14
  2017                           ;main_MC50.c: 143:             eusartparser(&package);
  2018  00631A  0EF4               	movlw	low main@package
  2019  00631C  0100               	movlb	0	; () banked
  2020  00631E  6FE0               	movwf	eusartparser@package& (0+255),b
  2021  006320  ECCA  F00F         	call	_eusartparser	;wreg free
  2022  006324                     l24125:
  2023                           
  2024                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2025  006324  0101               	movlb	1	; () banked
  2026  006326  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2027  006328  A4D8               	btfss	status,2,c
  2028  00632A  D7E9               	goto	l24119
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2032  00632C  0E32               	movlw	50
  2033  00632E  6F9E               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2037  006330  EC4D  F04A         	call	_WWDT_TimerClear	;wreg free
  2038                           
  2039                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2040  006334  0E04               	movlw	4
  2041  006336  0101               	movlb	1	; () banked
  2042  006338  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2043  00633A  D003               	goto	l24135
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2047  00633C  ECFC  F042         	call	_ShowVersion	;wreg free
  2048                           
  2049                           ;main_MC50.c: 156:             }
  2050  006340  D7DE               	goto	l24119
  2051  006342                     l24135:
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2055  006342  EC92  F042         	call	_readbutton	;wreg free
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;main_MC50.c: 162:                 readRFButtons();
  2059  006346  EC7A  F02F         	call	_readRFButtons	;wreg free
  2060                           
  2061                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2062  00634A  ECD0  F04A         	call	_getKeyPressed	;wreg free
  2063  00634E  0101               	movlb	1	; () banked
  2064  006350  6F95               	movwf	_lastKey& (0+255),b
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;main_MC50.c: 165:                 readInputs();
  2068  006352  EC90  F036         	call	_readInputs	;wreg free
  2069                           
  2070                           ;main_MC50.c: 166:                 ControlInputs();
  2071  006356  ECEF  F034         	call	_ControlInputs	;wreg free
  2072                           
  2073                           ;main_MC50.c: 167:                 ControlCurrent();
  2074  00635A  ECCC  F031         	call	_ControlCurrent	;wreg free
  2075                           
  2076                           ;main_MC50.c: 168:                 controlVelocity();
  2077  00635E  EC6F  F028         	call	_controlVelocity	;wreg free
  2078                           
  2079                           ;main_MC50.c: 169:                 ControlMotor();
  2080  006362  EC39  F026         	call	_ControlMotor	;wreg free
  2081                           
  2082                           ;main_MC50.c: 170:                 ControlLights();
  2083  006366  EC81  F01F         	call	_ControlLights	;wreg free
  2084                           
  2085                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2086  00636A  EC19  F044         	call	_ControlCounterMoves	;wreg free
  2087                           
  2088                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2089  00636E  0EEE               	movlw	low _main_stateMachine
  2090  006370  0100               	movlb	0	; () banked
  2091  006372  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2092  006374  0E01               	movlw	high _main_stateMachine
  2093  006376  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2094  006378  ECE2  F014         	call	_sm_execute_main	;wreg free
  2095                           
  2096                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2097  00637C  0EE3               	movlw	low _controlGate_stateMachine
  2098  00637E  0100               	movlb	0	; () banked
  2099  006380  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2100  006382  0E01               	movlw	high _controlGate_stateMachine
  2101  006384  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2102  006386  ECDC  F01D         	call	_sm_execute_ControlGate	;wreg free
  2103                           
  2104                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2105  00638A  0101               	movlb	1	; () banked
  2106  00638C  2995               	incf	_lastKey& (0+255),w,b
  2107  00638E  B4D8               	btfsc	status,2,c
  2108  006390  D7B6               	goto	l24119
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2112  006392  EC77  F04A         	call	_InitReceiver	;wreg free
  2113                           
  2114                           ; BSR set to: 1
  2115                           
  2116                           ;main_MC50.c: 185:         }
  2117  006396  D7B3               	goto	l24119
  2118  006398                     __end_of_main:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _sm_execute_main *****************
  2122 ;; Defined at:
  2123 ;;		line 26 in file "sm_Main_MC50.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  psm             2   21[BANK0 ] PTR struct .
  2126 ;;		 -> main_stateMachine(11), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 3F/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;Total ram usage:        4 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 16
  2145 ;; This function calls:
  2146 ;;		_SetSegmentValueIntermitentMain
  2147 ;;		_SetSegmentValueMain
  2148 ;;		_load_New_Menu
  2149 ;;		_sm_execute_menuConfiguration
  2150 ;;		_sm_send_event
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text1
  2157  0029C4                     __ptext1:
  2158                           	callstack 0
  2159  0029C4                     _sm_execute_main:
  2160                           	callstack 14
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;incstack = 0
  2167  0029C4  D053               	goto	l23621
  2168  0029C6                     l23597:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2172  0029C6  5185               	movf	_programmer_enable& (0+255),w,b
  2173  0029C8  A4D8               	btfss	status,2,c
  2174  0029CA  D066               	goto	l23623
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2178  0029CC  EE20 F004          	lfsr	2,4
  2179  0029D0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2180  0029D2  26D9               	addwf	fsr2l,f,c
  2181  0029D4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2182  0029D6  22DA               	addwfc	fsr2h,f,c
  2183  0029D8  0E06               	movlw	6
  2184  0029DA  18DE               	xorwf	postinc2,w,c
  2185  0029DC  10DE               	iorwf	postinc2,w,c
  2186  0029DE  A4D8               	btfss	status,2,c
  2187  0029E0  D006               	goto	l23603
  2188  0029E2                     u28770:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2192  0029E2  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2193  0029E6  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2194  0029EA  0E01               	movlw	1
  2195  0029EC  D01D               	goto	L2
  2196  0029EE                     l23603:
  2197                           
  2198                           ; BSR set to: 0
  2199  0029EE  EE20 F004          	lfsr	2,4
  2200  0029F2  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2201  0029F4  26D9               	addwf	fsr2l,f,c
  2202  0029F6  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2203  0029F8  22DA               	addwfc	fsr2h,f,c
  2204  0029FA  0E11               	movlw	17
  2205  0029FC  18DE               	xorwf	postinc2,w,c
  2206  0029FE  10DE               	iorwf	postinc2,w,c
  2207  002A00  A4D8               	btfss	status,2,c
  2208  002A02  D04A               	goto	l23623
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2212  002A04  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2213  002A08  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2214  002A0C  0E02               	movlw	2
  2215  002A0E  D00C               	goto	L2
  2216  002A10                     l23607:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2220  002A10  EE20 F004          	lfsr	2,4
  2221  002A14  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2222  002A16  26D9               	addwf	fsr2l,f,c
  2223  002A18  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2224  002A1A  22DA               	addwfc	fsr2h,f,c
  2225  002A1C  0E07               	movlw	7
  2226  002A1E  18DE               	xorwf	postinc2,w,c
  2227  002A20  10DE               	iorwf	postinc2,w,c
  2228  002A22  A4D8               	btfss	status,2,c
  2229  002A24  D039               	goto	l23623
  2230  002A26  D00F               	goto	u28800
  2231  002A28                     L2:
  2232  002A28  6EDE               	movwf	postinc2,c
  2233  002A2A  0E00               	movlw	0
  2234  002A2C  6EDD               	movwf	postdec2,c
  2235  002A2E  D034               	goto	l23623
  2236  002A30                     l23611:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2240  002A30  EE20 F004          	lfsr	2,4
  2241  002A34  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2242  002A36  26D9               	addwf	fsr2l,f,c
  2243  002A38  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2244  002A3A  22DA               	addwfc	fsr2h,f,c
  2245  002A3C  0E07               	movlw	7
  2246  002A3E  18DE               	xorwf	postinc2,w,c
  2247  002A40  10DE               	iorwf	postinc2,w,c
  2248  002A42  A4D8               	btfss	status,2,c
  2249  002A44  D006               	goto	l23615
  2250  002A46                     u28800:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2254  002A46  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2255  002A4A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2256  002A4E  0E00               	movlw	0
  2257  002A50  D7EB               	goto	L2
  2258  002A52                     l23615:
  2259                           
  2260                           ; BSR set to: 0
  2261  002A52  EE20 F004          	lfsr	2,4
  2262  002A56  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2263  002A58  26D9               	addwf	fsr2l,f,c
  2264  002A5A  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2265  002A5C  22DA               	addwfc	fsr2h,f,c
  2266  002A5E  0E06               	movlw	6
  2267  002A60  18DE               	xorwf	postinc2,w,c
  2268  002A62  10DE               	iorwf	postinc2,w,c
  2269  002A64  A4D8               	btfss	status,2,c
  2270  002A66  D018               	goto	l23623
  2271  002A68  D7BC               	goto	u28770
  2272  002A6A                     l3053:
  2273                           
  2274                           ; BSR set to: 0
  2275  002A6A  D7FF               	goto	l3053
  2276  002A6C                     l23621:
  2277                           
  2278                           ; BSR set to: 0
  2279  002A6C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2280  002A70  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2281  002A74  50DF               	movf	indf2,w,c
  2282  002A76  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2283  002A78  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2284                           
  2285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 1, Range of values is 0 to 0
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte            4     3 (average)
  2291                           ;	Chosen strategy is simple_byte
  2292  002A7A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2293  002A7C  0A00               	xorlw	0	; case 0
  2294  002A7E  A4D8               	btfss	status,2,c
  2295  002A80  D7F4               	goto	l3053
  2296                           
  2297                           ; BSR set to: 0
  2298                           ; Switch size 1, requested type "simple"
  2299                           ; Number of cases is 3, Range of values is 0 to 2
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte           10     6 (average)
  2303                           ;	Chosen strategy is simple_byte
  2304  002A82  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2305  002A84  0A00               	xorlw	0	; case 0
  2306  002A86  B4D8               	btfsc	status,2,c
  2307  002A88  D79E               	goto	l23597
  2308  002A8A  0A01               	xorlw	1	; case 1
  2309  002A8C  B4D8               	btfsc	status,2,c
  2310  002A8E  D7C0               	goto	l23607
  2311  002A90  0A03               	xorlw	3	; case 2
  2312  002A92  B4D8               	btfsc	status,2,c
  2313  002A94  D7CD               	goto	l23611
  2314  002A96  D7E9               	goto	l3053
  2315  002A98                     l23623:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2319  002A98  0EEE               	movlw	low _main_stateMachine
  2320  002A9A  6E12               	movwf	sm_send_event@psm^0,c
  2321  002A9C  0E01               	movlw	high _main_stateMachine
  2322  002A9E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2323  002AA0  0E00               	movlw	0
  2324  002AA2  6E15               	movwf	(sm_send_event@event+1)^0,c
  2325  002AA4  0E00               	movlw	0
  2326  002AA6  6E14               	movwf	sm_send_event@event^0,c
  2327  002AA8  EC8F  F043         	call	_sm_send_event	;wreg free
  2328                           
  2329                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2330  002AAC  D1F8               	goto	l23901
  2331  002AAE                     l23625:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2335  002AAE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2336  002AB0  A4D8               	btfss	status,2,c
  2337  002AB2  D016               	goto	l23637
  2338                           
  2339                           ; BSR set to: 0
  2340  002AB4  0E64               	movlw	100
  2341  002AB6  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2342  002AB8  D013               	goto	l23637
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2346  002ABA  0E01               	movlw	1
  2347  002ABC  EC13  F021         	call	_load_New_Menu
  2348  002AC0                     l23631:
  2349                           
  2350                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2351  002AC0  0EEE               	movlw	low _main_stateMachine
  2352  002AC2  6E12               	movwf	sm_send_event@psm^0,c
  2353  002AC4  0E01               	movlw	high _main_stateMachine
  2354  002AC6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2355  002AC8  0E00               	movlw	0
  2356  002ACA  6E15               	movwf	(sm_send_event@event+1)^0,c
  2357  002ACC  0E06               	movlw	6
  2358  002ACE  6E14               	movwf	sm_send_event@event^0,c
  2359  002AD0  EC8F  F043         	call	_sm_send_event	;wreg free
  2360                           
  2361                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2362  002AD4  0E01               	movlw	1
  2363  002AD6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2364                           
  2365                           ;sm_Main_MC50.c: 91:                 temp=0;
  2366  002AD8  0E00               	movlw	0
  2367  002ADA  0100               	movlb	0	; () banked
  2368  002ADC  6F80               	movwf	_temp& (0+255),b
  2369                           
  2370                           ;sm_Main_MC50.c: 92:             }
  2371  002ADE  0012               	return	
  2372  002AE0                     l23637:
  2373                           
  2374                           ; BSR set to: 0
  2375  002AE0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2376  002AE2  A4D8               	btfss	status,2,c
  2377  002AE4  D00B               	goto	l23645
  2378                           
  2379                           ; BSR set to: 0
  2380  002AE6  0E14               	movlw	20
  2381  002AE8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2382  002AEA  D008               	goto	l23645
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2386  002AEC  0E00               	movlw	0
  2387  002AEE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2388  002AF0  0E10               	movlw	16
  2389  002AF2  EC84  F04A         	call	_SetSegmentValueMain
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;sm_Main_MC50.c: 98:                 temp=1;
  2393  002AF6  0E01               	movlw	1
  2394  002AF8  6F80               	movwf	_temp& (0+255),b
  2395                           
  2396                           ;sm_Main_MC50.c: 99:             }
  2397  002AFA  0012               	return	
  2398  002AFC                     l23645:
  2399                           
  2400                           ; BSR set to: 0
  2401  002AFC  0580               	decf	_temp& (0+255),w,b
  2402  002AFE  A4D8               	btfss	status,2,c
  2403  002B00  D004               	goto	l23655
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2407  002B02  0E00               	movlw	0
  2408  002B04  EC13  F021         	call	_load_New_Menu
  2409  002B08  D7DB               	goto	l23631
  2410  002B0A                     l23655:
  2411                           
  2412                           ; BSR set to: 0
  2413  002B0A  0E27               	movlw	39
  2414  002B0C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2415  002B0E  A4D8               	btfss	status,2,c
  2416  002B10  D007               	goto	l23667
  2417                           
  2418                           ; BSR set to: 0
  2419  002B12  0E78               	movlw	120
  2420  002B14  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2421  002B16  D004               	goto	l23667
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2425  002B18  0E0D               	movlw	13
  2426  002B1A  EC13  F021         	call	_load_New_Menu
  2427  002B1E  D7D0               	goto	l23631
  2428  002B20                     l23667:
  2429                           
  2430                           ; BSR set to: 0
  2431  002B20  0E27               	movlw	39
  2432  002B22  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2433  002B24  A4D8               	btfss	status,2,c
  2434  002B26  D00B               	goto	l23675
  2435                           
  2436                           ; BSR set to: 0
  2437  002B28  0E14               	movlw	20
  2438  002B2A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2439  002B2C  D008               	goto	l23675
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2443  002B2E  0E13               	movlw	19
  2444  002B30  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2445  002B32  0E05               	movlw	5
  2446  002B34  EC84  F04A         	call	_SetSegmentValueMain
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;sm_Main_MC50.c: 119:                 temp=2;
  2450  002B38  0E02               	movlw	2
  2451  002B3A  6F80               	movwf	_temp& (0+255),b
  2452                           
  2453                           ;sm_Main_MC50.c: 120:             }
  2454  002B3C  0012               	return	
  2455  002B3E                     l23675:
  2456                           
  2457                           ; BSR set to: 0
  2458  002B3E  0E02               	movlw	2
  2459  002B40  1980               	xorwf	_temp& (0+255),w,b
  2460  002B42  A4D8               	btfss	status,2,c
  2461  002B44  D004               	goto	l23685
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2465  002B46  0E0C               	movlw	12
  2466  002B48  EC13  F021         	call	_load_New_Menu
  2467  002B4C  D7B9               	goto	l23631
  2468  002B4E                     l23685:
  2469                           
  2470                           ; BSR set to: 0
  2471  002B4E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2472  002B50  A4D8               	btfss	status,2,c
  2473  002B52  D009               	goto	l23691
  2474                           
  2475                           ; BSR set to: 0
  2476  002B54  0101               	movlb	1	; () banked
  2477  002B56  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2478  002B58  A4D8               	btfss	status,2,c
  2479  002B5A  D005               	goto	l23691
  2480                           
  2481                           ; BSR set to: 1
  2482                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2483  002B5C  0E01               	movlw	1
  2484  002B5E  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2485                           
  2486                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2487  002B60  0E03               	movlw	3
  2488  002B62  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2489                           
  2490                           ;sm_Main_MC50.c: 132:             }
  2491  002B64  0012               	return	
  2492  002B66                     l23691:
  2493  002B66  0E17               	movlw	23
  2494  002B68  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2495  002B6A  A4D8               	btfss	status,2,c
  2496  002B6C  D009               	goto	l23697
  2497  002B6E  0101               	movlb	1	; () banked
  2498  002B70  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2499  002B72  A4D8               	btfss	status,2,c
  2500  002B74  D005               	goto	l23697
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2504  002B76  0E01               	movlw	1
  2505  002B78  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2506                           
  2507                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2508  002B7A  0E01               	movlw	1
  2509  002B7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2510                           
  2511                           ;sm_Main_MC50.c: 137:             }
  2512  002B7E  0012               	return	
  2513  002B80                     l23697:
  2514  002B80  0101               	movlb	1	; () banked
  2515  002B82  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2516  002B84  A4D8               	btfss	status,2,c
  2517  002B86  D005               	goto	l23701
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2521  002B88  0E00               	movlw	0
  2522  002B8A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2523                           
  2524                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2525  002B8C  0E00               	movlw	0
  2526  002B8E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2527                           
  2528                           ;sm_Main_MC50.c: 142:             }
  2529  002B90  0012               	return	
  2530  002B92                     l23701:
  2531                           
  2532                           ; BSR set to: 1
  2533  002B92  0E06               	movlw	6
  2534  002B94  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2535  002B96  B4D8               	btfsc	status,2,c
  2536  002B98  D004               	goto	u28980
  2537                           
  2538                           ; BSR set to: 1
  2539  002B9A  0E05               	movlw	5
  2540  002B9C  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2541  002B9E  A4D8               	btfss	status,2,c
  2542  002BA0  D015               	goto	l23715
  2543  002BA2                     u28980:
  2544                           
  2545                           ; BSR set to: 1
  2546  002BA2  0E63               	movlw	99
  2547  002BA4  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2548  002BA6  D012               	goto	l23715
  2549                           
  2550                           ; BSR set to: 1
  2551                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2552  002BA8  0E0C               	movlw	12
  2553  002BAA  EC13  F021         	call	_load_New_Menu
  2554                           
  2555                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2556  002BAE  0EEE               	movlw	low _main_stateMachine
  2557  002BB0  6E12               	movwf	sm_send_event@psm^0,c
  2558  002BB2  0E01               	movlw	high _main_stateMachine
  2559  002BB4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2560  002BB6  0E00               	movlw	0
  2561  002BB8  6E15               	movwf	(sm_send_event@event+1)^0,c
  2562  002BBA  0E06               	movlw	6
  2563  002BBC  6E14               	movwf	sm_send_event@event^0,c
  2564  002BBE  EC8F  F043         	call	_sm_send_event	;wreg free
  2565                           
  2566                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2567  002BC2  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2568                           
  2569                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2570  002BC6  0E01               	movlw	1
  2571  002BC8  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2572                           
  2573                           ;sm_Main_MC50.c: 149:             }
  2574  002BCA  0012               	return	
  2575  002BCC                     l23715:
  2576                           
  2577                           ; BSR set to: 1
  2578  002BCC  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2579  002BCE  D005               	goto	u29000
  2580  002BD0  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2581  002BD2  E111               	bnz	l3065
  2582  002BD4  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2583  002BD6  B0D8               	btfsc	status,0,c
  2584  002BD8  0012               	return	
  2585  002BDA                     u29000:
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2589  002BDA  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2590  002BDC  A4D8               	btfss	status,2,c
  2591  002BDE  D006               	goto	l23721
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2595  002BE0  0E0C               	movlw	12
  2596  002BE2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2597  002BE4  0E0F               	movlw	15
  2598  002BE6  EC84  F04A         	call	_SetSegmentValueMain
  2599                           
  2600                           ;sm_Main_MC50.c: 157:                     }
  2601  002BEA  0012               	return	
  2602  002BEC                     l23721:
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2606  002BEC  0E18               	movlw	24
  2607  002BEE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2608  002BF0  0E18               	movlw	24
  2609  002BF2  EC84  F04A         	call	_SetSegmentValueMain
  2610  002BF6                     l3065:
  2611                           
  2612                           ; BSR set to: 1
  2613  002BF6  0012               	return	
  2614  002BF8                     l23723:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2618  002BF8  0EBF               	movlw	low _menuConfiguration_stateMachine
  2619  002BFA  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2620  002BFC  0E02               	movlw	high _menuConfiguration_stateMachine
  2621  002BFE  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2622  002C00  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2623                           
  2624                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2625  002C04  0012               	return	
  2626  002C06                     l23725:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2630  002C06  0E00               	movlw	0
  2631  002C08  0101               	movlb	1	; () banked
  2632  002C0A  6F8C               	movwf	_aux_in_auto_close& (0+255),b
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2636  002C0C  0E04               	movlw	4
  2637  002C0E  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2638  002C10  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2639  002C12  A4D8               	btfss	status,2,c
  2640  002C14  D013               	goto	l3088
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2644  002C16  0100               	movlb	0	; () banked
  2645  002C18  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2646  002C1A  A4D8               	btfss	status,2,c
  2647  002C1C  D007               	goto	l23735
  2648                           
  2649                           ; BSR set to: 0
  2650  002C1E  0101               	movlb	1	; () banked
  2651  002C20  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2652  002C22  A4D8               	btfss	status,2,c
  2653  002C24  D003               	goto	l23735
  2654  002C26                     u29040:
  2655                           
  2656                           ; BSR set to: 1
  2657                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2658  002C26  0E01               	movlw	1
  2659  002C28  6F8C               	movwf	_aux_in_auto_close& (0+255),b
  2660                           
  2661                           ;sm_Main_MC50.c: 182:                 }
  2662  002C2A  D008               	goto	l3088
  2663  002C2C                     l23735:
  2664  002C2C  0100               	movlb	0	; () banked
  2665  002C2E  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2666  002C30  B4D8               	btfsc	status,2,c
  2667  002C32  D004               	goto	l3088
  2668                           
  2669                           ; BSR set to: 0
  2670  002C34  0101               	movlb	1	; () banked
  2671  002C36  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2672  002C38  A4D8               	btfss	status,2,c
  2673  002C3A  D7F5               	goto	u29040
  2674  002C3C                     l3088:
  2675                           
  2676                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2677  002C3C  0101               	movlb	1	; () banked
  2678  002C3E  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2679  002C40  A4D8               	btfss	status,2,c
  2680  002C42  D069               	goto	l3102
  2681                           
  2682                           ; BSR set to: 1
  2683  002C44  0E04               	movlw	4
  2684  002C46  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2685  002C48  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2686  002C4A  A4D8               	btfss	status,2,c
  2687  002C4C  D003               	goto	u29090
  2688                           
  2689                           ; BSR set to: 1
  2690  002C4E  518C               	movf	_aux_in_auto_close& (0+255),w,b
  2691  002C50  B4D8               	btfsc	status,2,c
  2692  002C52  D008               	goto	u29110
  2693  002C54                     u29090:
  2694                           
  2695                           ; BSR set to: 1
  2696  002C54  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
  2697  002C56  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2698  002C58  B4D8               	btfsc	status,2,c
  2699  002C5A  D004               	goto	u29110
  2700                           
  2701                           ; BSR set to: 1
  2702  002C5C  51E3               	movf	_controlGate_stateMachine& (0+255),w,b
  2703  002C5E  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2704  002C60  A4D8               	btfss	status,2,c
  2705  002C62  D059               	goto	l3102
  2706  002C64                     u29110:
  2707                           
  2708                           ; BSR set to: 1
  2709                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2710  002C64  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2711  002C66  A4D8               	btfss	status,2,c
  2712  002C68  D015               	goto	l23763
  2713                           
  2714                           ; BSR set to: 1
  2715  002C6A  0E64               	movlw	100
  2716  002C6C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2717  002C6E  D012               	goto	l23763
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2721  002C70  0E01               	movlw	1
  2722  002C72  EC13  F021         	call	_load_New_Menu
  2723  002C76                     l23757:
  2724                           
  2725                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2726  002C76  0EEE               	movlw	low _main_stateMachine
  2727  002C78  6E12               	movwf	sm_send_event@psm^0,c
  2728  002C7A  0E01               	movlw	high _main_stateMachine
  2729  002C7C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2730  002C7E  0E00               	movlw	0
  2731  002C80  6E15               	movwf	(sm_send_event@event+1)^0,c
  2732  002C82  0E06               	movlw	6
  2733  002C84  6E14               	movwf	sm_send_event@event^0,c
  2734  002C86  EC8F  F043         	call	_sm_send_event	;wreg free
  2735                           
  2736                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2737  002C8A  0E01               	movlw	1
  2738  002C8C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2739                           
  2740                           ;sm_Main_MC50.c: 200:                     temp=0;
  2741  002C8E  0E00               	movlw	0
  2742  002C90  0100               	movlb	0	; () banked
  2743  002C92  D037               	goto	L4
  2744  002C94                     l23763:
  2745                           
  2746                           ; BSR set to: 1
  2747  002C94  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2748  002C96  A4D8               	btfss	status,2,c
  2749  002C98  D00A               	goto	l23771
  2750                           
  2751                           ; BSR set to: 1
  2752  002C9A  0E14               	movlw	20
  2753  002C9C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2754  002C9E  D007               	goto	l23771
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2758  002CA0  0E00               	movlw	0
  2759  002CA2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2760  002CA4  0E10               	movlw	16
  2761  002CA6  EC84  F04A         	call	_SetSegmentValueMain
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;sm_Main_MC50.c: 206:                     temp=1;
  2765  002CAA  0E01               	movlw	1
  2766  002CAC  D02A               	goto	L4
  2767  002CAE                     l23771:
  2768                           
  2769                           ; BSR set to: 1
  2770  002CAE  0100               	movlb	0	; () banked
  2771  002CB0  0580               	decf	_temp& (0+255),w,b
  2772  002CB2  A4D8               	btfss	status,2,c
  2773  002CB4  D00E               	goto	l23785
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2777  002CB6  0E00               	movlw	0
  2778  002CB8  EC13  F021         	call	_load_New_Menu
  2779                           
  2780                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2781  002CBC  0E01               	movlw	1
  2782  002CBE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2783                           
  2784                           ;sm_Main_MC50.c: 213:                     temp=0;
  2785  002CC0  0E00               	movlw	0
  2786  002CC2  0100               	movlb	0	; () banked
  2787  002CC4  6F80               	movwf	_temp& (0+255),b
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2791  002CC6  0E00               	movlw	0
  2792  002CC8  0101               	movlb	1	; () banked
  2793  002CCA  6FEF               	movwf	(_main_stateMachine+1)& (0+255),b
  2794  002CCC  0E01               	movlw	1
  2795  002CCE  6FEE               	movwf	_main_stateMachine& (0+255),b
  2796  002CD0  0012               	return	
  2797  002CD2                     l23785:
  2798                           
  2799                           ; BSR set to: 0
  2800  002CD2  0E27               	movlw	39
  2801  002CD4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2802  002CD6  A4D8               	btfss	status,2,c
  2803  002CD8  D007               	goto	l23797
  2804                           
  2805                           ; BSR set to: 0
  2806  002CDA  0E78               	movlw	120
  2807  002CDC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2808  002CDE  D004               	goto	l23797
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2812  002CE0  0E0D               	movlw	13
  2813  002CE2  EC13  F021         	call	_load_New_Menu
  2814  002CE6  D7C7               	goto	l23757
  2815  002CE8                     l23797:
  2816                           
  2817                           ; BSR set to: 0
  2818  002CE8  0E27               	movlw	39
  2819  002CEA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2820  002CEC  A4D8               	btfss	status,2,c
  2821  002CEE  D00B               	goto	l23805
  2822                           
  2823                           ; BSR set to: 0
  2824  002CF0  0E14               	movlw	20
  2825  002CF2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2826  002CF4  D008               	goto	l23805
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2830  002CF6  0E13               	movlw	19
  2831  002CF8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2832  002CFA  0E05               	movlw	5
  2833  002CFC  EC84  F04A         	call	_SetSegmentValueMain
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;sm_Main_MC50.c: 229:                 temp=2;
  2837  002D00  0E02               	movlw	2
  2838  002D02                     L4:
  2839  002D02  6F80               	movwf	_temp& (0+255),b
  2840                           
  2841                           ;sm_Main_MC50.c: 230:             }
  2842  002D04  D008               	goto	l3102
  2843  002D06                     l23805:
  2844                           
  2845                           ; BSR set to: 0
  2846  002D06  0E02               	movlw	2
  2847  002D08  1980               	xorwf	_temp& (0+255),w,b
  2848  002D0A  A4D8               	btfss	status,2,c
  2849  002D0C  D004               	goto	l3102
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2853  002D0E  0E0C               	movlw	12
  2854  002D10  EC13  F021         	call	_load_New_Menu
  2855  002D14  D6D5               	goto	l23631
  2856  002D16                     l3102:
  2857                           
  2858                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2859                           
  2860                           ; BSR set to: 0
  2861  002D16  0101               	movlb	1	; () banked
  2862  002D18  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2863  002D1A  D005               	goto	u29220
  2864  002D1C  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2865  002D1E  E102               	bnz	u29221
  2866  002D20  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2867  002D22  B0D8               	btfsc	status,0,c
  2868  002D24                     u29221:
  2869  002D24  0012               	return	
  2870  002D26                     u29220:
  2871                           
  2872                           ; BSR set to: 1
  2873  002D26  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2874  002D28  B4D8               	btfsc	status,2,c
  2875  002D2A  0012               	return	
  2876                           
  2877                           ; BSR set to: 1
  2878  002D2C  0E27               	movlw	39
  2879  002D2E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2880  002D30  B4D8               	btfsc	status,2,c
  2881  002D32  0012               	return	
  2882                           
  2883                           ; BSR set to: 1
  2884                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2885  002D34  0E03               	movlw	3
  2886  002D36  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2887  002D38  A4D8               	btfss	status,2,c
  2888  002D3A  D011               	goto	l23831
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2892  002D3C  0E12               	movlw	18
  2893  002D3E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2894  002D40  0E00               	movlw	0
  2895  002D42  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2896  002D44  0E0A               	movlw	10
  2897  002D46  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2898  002D48  0E0C               	movlw	12
  2899  002D4A  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  2900  002D4E                     l23827:
  2901                           
  2902                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2903  002D4E  0E00               	movlw	0
  2904  002D50  0101               	movlb	1	; () banked
  2905  002D52  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2906  002D54  0E04               	movlw	4
  2907  002D56  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2908                           
  2909                           ; BSR set to: 1
  2910                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2911  002D58  0E00               	movlw	0
  2912  002D5A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2913                           
  2914                           ;sm_Main_MC50.c: 252:                 }
  2915  002D5C  0012               	return	
  2916  002D5E                     l23831:
  2917                           
  2918                           ; BSR set to: 1
  2919  002D5E  0E02               	movlw	2
  2920  002D60  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2921  002D62  B4D8               	btfsc	status,2,c
  2922  002D64  D003               	goto	u29270
  2923                           
  2924                           ; BSR set to: 1
  2925  002D66  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2926  002D68  A4D8               	btfss	status,2,c
  2927  002D6A  D00A               	goto	l23841
  2928  002D6C                     u29270:
  2929                           
  2930                           ; BSR set to: 1
  2931                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2932  002D6C  0E10               	movlw	16
  2933  002D6E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2934  002D70  0E00               	movlw	0
  2935  002D72  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2936  002D74  0E0A               	movlw	10
  2937  002D76  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2938  002D78  0E00               	movlw	0
  2939  002D7A  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  2940  002D7E  D7E7               	goto	l23827
  2941  002D80                     l23841:
  2942                           
  2943                           ; BSR set to: 1
  2944  002D80  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2945  002D82  A4D8               	btfss	status,2,c
  2946  002D84  D00F               	goto	l23847
  2947                           
  2948                           ; BSR set to: 1
  2949  002D86  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
  2950  002D88  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2951  002D8A  A4D8               	btfss	status,2,c
  2952  002D8C  D00B               	goto	l23847
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2956  002D8E  0EEE               	movlw	low _main_stateMachine
  2957  002D90  6E12               	movwf	sm_send_event@psm^0,c
  2958  002D92  0E01               	movlw	high _main_stateMachine
  2959  002D94  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2960  002D96  0E00               	movlw	0
  2961  002D98  6E15               	movwf	(sm_send_event@event+1)^0,c
  2962  002D9A  0E07               	movlw	7
  2963  002D9C  6E14               	movwf	sm_send_event@event^0,c
  2964  002D9E  EC8F  F043         	call	_sm_send_event	;wreg free
  2965                           
  2966                           ;sm_Main_MC50.c: 264:                 }
  2967  002DA2  0012               	return	
  2968  002DA4                     l23847:
  2969                           
  2970                           ; BSR set to: 1
  2971  002DA4  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2972  002DA6  A4D8               	btfss	status,2,c
  2973  002DA8  D074               	goto	l23897
  2974                           
  2975                           ; BSR set to: 1
  2976  002DAA  0E04               	movlw	4
  2977  002DAC  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2978  002DAE  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2979  002DB0  A4D8               	btfss	status,2,c
  2980  002DB2  D06F               	goto	l23897
  2981                           
  2982                           ; BSR set to: 1
  2983                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2984  002DB4  0100               	movlb	0	; () banked
  2985  002DB6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2986  002DB8  B4D8               	btfsc	status,2,c
  2987  002DBA  D00B               	goto	u29350
  2988                           
  2989                           ; BSR set to: 0
  2990  002DBC  0101               	movlb	1	; () banked
  2991  002DBE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2992  002DC0  B4D8               	btfsc	status,2,c
  2993  002DC2  D007               	goto	u29350
  2994                           
  2995                           ; BSR set to: 1
  2996  002DC4  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2997  002DC6  B4D8               	btfsc	status,2,c
  2998  002DC8  D013               	goto	u29390
  2999                           
  3000                           ; BSR set to: 1
  3001  002DCA  0E03               	movlw	3
  3002  002DCC  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3003  002DCE  B4D8               	btfsc	status,2,c
  3004  002DD0  D00F               	goto	u29390
  3005  002DD2                     u29350:
  3006  002DD2  0100               	movlb	0	; () banked
  3007  002DD4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3008  002DD6  A4D8               	btfss	status,2,c
  3009  002DD8  D026               	goto	l23875
  3010                           
  3011                           ; BSR set to: 0
  3012  002DDA  0101               	movlb	1	; () banked
  3013  002DDC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3014  002DDE  A4D8               	btfss	status,2,c
  3015  002DE0  D022               	goto	l23875
  3016                           
  3017                           ; BSR set to: 1
  3018  002DE2  0E02               	movlw	2
  3019  002DE4  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3020  002DE6  B4D8               	btfsc	status,2,c
  3021  002DE8  D01E               	goto	l23875
  3022                           
  3023                           ; BSR set to: 1
  3024  002DEA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3025  002DEC  B4D8               	btfsc	status,2,c
  3026  002DEE  D01B               	goto	l23875
  3027  002DF0                     u29390:
  3028                           
  3029                           ; BSR set to: 1
  3030                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3031  002DF0  0E00               	movlw	0
  3032  002DF2  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3033  002DF4  0E0A               	movlw	10
  3034  002DF6  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3035                           
  3036                           ; BSR set to: 1
  3037                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3038  002DF8  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3039  002DFA  A4D8               	btfss	status,2,c
  3040  002DFC  D00A               	goto	l23873
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3044  002DFE  0E10               	movlw	16
  3045  002E00  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3046  002E02  0E00               	movlw	0
  3047  002E04  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3048  002E06  0E0A               	movlw	10
  3049  002E08  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3050  002E0A  0E0A               	movlw	10
  3051  002E0C  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  3052                           
  3053                           ;sm_Main_MC50.c: 282:                         }
  3054  002E10  0012               	return	
  3055  002E12                     l23873:
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3059  002E12  0E0F               	movlw	15
  3060  002E14  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3061  002E16  0E00               	movlw	0
  3062  002E18  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3063  002E1A  0E0A               	movlw	10
  3064  002E1C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3065  002E1E  0E0A               	movlw	10
  3066  002E20  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  3067  002E24  0012               	return	
  3068  002E26                     l23875:
  3069  002E26  0100               	movlb	0	; () banked
  3070  002E28  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3071  002E2A  B4D8               	btfsc	status,2,c
  3072  002E2C  D008               	goto	u29430
  3073                           
  3074                           ; BSR set to: 0
  3075  002E2E  0101               	movlb	1	; () banked
  3076  002E30  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3077  002E32  B4D8               	btfsc	status,2,c
  3078  002E34  D004               	goto	u29430
  3079                           
  3080                           ; BSR set to: 1
  3081  002E36  0E02               	movlw	2
  3082  002E38  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3083  002E3A  B4D8               	btfsc	status,2,c
  3084  002E3C  D00C               	goto	u29460
  3085  002E3E                     u29430:
  3086  002E3E  0100               	movlb	0	; () banked
  3087  002E40  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3088  002E42  A4D8               	btfss	status,2,c
  3089  002E44  D016               	goto	l23891
  3090                           
  3091                           ; BSR set to: 0
  3092  002E46  0101               	movlb	1	; () banked
  3093  002E48  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3094  002E4A  A4D8               	btfss	status,2,c
  3095  002E4C  D012               	goto	l23891
  3096                           
  3097                           ; BSR set to: 1
  3098  002E4E  0E02               	movlw	2
  3099  002E50  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3100  002E52  A4D8               	btfss	status,2,c
  3101  002E54  D00E               	goto	l23891
  3102  002E56                     u29460:
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3106  002E56  0E00               	movlw	0
  3107  002E58  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3108  002E5A  0E0A               	movlw	10
  3109  002E5C  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3110                           
  3111                           ; BSR set to: 1
  3112                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3113  002E5E  0E10               	movlw	16
  3114  002E60  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3115  002E62  0E00               	movlw	0
  3116  002E64  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3117  002E66  0E0A               	movlw	10
  3118  002E68  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3119  002E6A  0E0A               	movlw	10
  3120  002E6C  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  3121                           
  3122                           ;sm_Main_MC50.c: 298:                     }
  3123  002E70  0012               	return	
  3124  002E72                     l23891:
  3125  002E72  0101               	movlb	1	; () banked
  3126  002E74  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3127  002E76  A4D8               	btfss	status,2,c
  3128  002E78  D006               	goto	l23895
  3129                           
  3130                           ; BSR set to: 1
  3131                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3132  002E7A  0E00               	movlw	0
  3133  002E7C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3134  002E7E  0E0F               	movlw	15
  3135  002E80  EC84  F04A         	call	_SetSegmentValueMain
  3136                           
  3137                           ;sm_Main_MC50.c: 304:                     }
  3138  002E84  0012               	return	
  3139  002E86                     l23895:
  3140                           
  3141                           ; BSR set to: 1
  3142                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3143  002E86  0E18               	movlw	24
  3144  002E88  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3145  002E8A  0E18               	movlw	24
  3146  002E8C  EC84  F04A         	call	_SetSegmentValueMain
  3147  002E90  0012               	return	
  3148  002E92                     l23897:
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3152  002E92  0E18               	movlw	24
  3153  002E94  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3154  002E96  0E18               	movlw	24
  3155  002E98  EC84  F04A         	call	_SetSegmentValueMain
  3156  002E9C  0012               	return	
  3157  002E9E                     l23901:
  3158  002E9E  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3159  002EA2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3160  002EA6  50DF               	movf	indf2,w,c
  3161  002EA8  0100               	movlb	0	; () banked
  3162  002EAA  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3163  002EAC  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3164                           
  3165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3166                           ; Switch size 1, requested type "simple"
  3167                           ; Number of cases is 1, Range of values is 0 to 0
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte            4     3 (average)
  3171                           ;	Chosen strategy is simple_byte
  3172  002EAE  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3173  002EB0  0A00               	xorlw	0	; case 0
  3174  002EB2  A4D8               	btfss	status,2,c
  3175  002EB4  0012               	return	
  3176                           
  3177                           ; BSR set to: 0
  3178                           ; Switch size 1, requested type "simple"
  3179                           ; Number of cases is 3, Range of values is 0 to 2
  3180                           ; switch strategies available:
  3181                           ; Name         Instructions Cycles
  3182                           ; simple_byte           10     6 (average)
  3183                           ;	Chosen strategy is simple_byte
  3184  002EB6  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3185  002EB8  0A00               	xorlw	0	; case 0
  3186  002EBA  B4D8               	btfsc	status,2,c
  3187  002EBC  D5F8               	goto	l23625
  3188  002EBE  0A01               	xorlw	1	; case 1
  3189  002EC0  B4D8               	btfsc	status,2,c
  3190  002EC2  D69A               	goto	l23723
  3191  002EC4  0A03               	xorlw	3	; case 2
  3192  002EC6  A4D8               	btfss	status,2,c
  3193  002EC8  0012               	return	
  3194  002ECA  D69D               	goto	l23725
  3195  002ECC                     __end_of_sm_execute_main:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _sm_execute_menuConfiguration *****************
  3199 ;; Defined at:
  3200 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  psm             2   17[BANK0 ] PTR struct .
  3203 ;;		 -> menuConfiguration_stateMachine(11), 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 3F/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;Total ram usage:        4 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 15
  3222 ;; This function calls:
  3223 ;;		_ClearFlag_rfCMD
  3224 ;;		_ResetDefaultMemory
  3225 ;;		_SaveNVM_VarSystem
  3226 ;;		_SetSegmentValueIntermitentMain
  3227 ;;		_SetSegmentValueMain
  3228 ;;		___lbdiv
  3229 ;;		___lldiv
  3230 ;;		___lmul
  3231 ;;		___lwdiv
  3232 ;;		_controlLearnDigit
  3233 ;;		_controlSaveRemote
  3234 ;;		_controlSelectRemote
  3235 ;;		_load_New_Menu
  3236 ;;		_setValueToEdit
  3237 ;;		_sm_send_event
  3238 ;; This function is called by:
  3239 ;;		_sm_execute_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text2
  3244  000F22                     __ptext2:
  3245                           	callstack 0
  3246  000F22                     _sm_execute_menuConfiguration:
  3247                           	callstack 14
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3251                           
  3252                           ;incstack = 0
  3253  000F22  D0A2               	goto	l22829
  3254  000F24                     l22771:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3258  000F24  EE20 F004          	lfsr	2,4
  3259  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3260  000F2A  26D9               	addwf	fsr2l,f,c
  3261  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3262  000F2E  22DA               	addwfc	fsr2h,f,c
  3263  000F30  04DE               	decf	postinc2,w,c
  3264  000F32  10DE               	iorwf	postinc2,w,c
  3265  000F34  A4D8               	btfss	status,2,c
  3266  000F36  D006               	goto	l22775
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3270  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3271  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3272  000F40  0E01               	movlw	1
  3273  000F42  D04C               	goto	L9
  3274  000F44                     l22775:
  3275                           
  3276                           ; BSR set to: 0
  3277  000F44  EE20 F004          	lfsr	2,4
  3278  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3279  000F4A  26D9               	addwf	fsr2l,f,c
  3280  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3281  000F4E  22DA               	addwfc	fsr2h,f,c
  3282  000F50  0E05               	movlw	5
  3283  000F52  18DE               	xorwf	postinc2,w,c
  3284  000F54  10DE               	iorwf	postinc2,w,c
  3285  000F56  A4D8               	btfss	status,2,c
  3286  000F58  D006               	goto	l22779
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3290  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3291  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3292  000F62  0E03               	movlw	3
  3293  000F64  D03B               	goto	L9
  3294  000F66                     l22779:
  3295                           
  3296                           ; BSR set to: 0
  3297  000F66  EE20 F004          	lfsr	2,4
  3298  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3299  000F6C  26D9               	addwf	fsr2l,f,c
  3300  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3301  000F70  22DA               	addwfc	fsr2h,f,c
  3302  000F72  0E08               	movlw	8
  3303  000F74  18DE               	xorwf	postinc2,w,c
  3304  000F76  10DE               	iorwf	postinc2,w,c
  3305  000F78  A4D8               	btfss	status,2,c
  3306  000F7A  D006               	goto	l22783
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3310  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3311  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3312  000F84  0E04               	movlw	4
  3313  000F86  D02A               	goto	L9
  3314  000F88                     l22783:
  3315                           
  3316                           ; BSR set to: 0
  3317  000F88  EE20 F004          	lfsr	2,4
  3318  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3319  000F8E  26D9               	addwf	fsr2l,f,c
  3320  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3321  000F92  22DA               	addwfc	fsr2h,f,c
  3322  000F94  0E14               	movlw	20
  3323  000F96  18DE               	xorwf	postinc2,w,c
  3324  000F98  10DE               	iorwf	postinc2,w,c
  3325  000F9A  A4D8               	btfss	status,2,c
  3326  000F9C  D087               	goto	l22831
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3330  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3331  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3332  000FA6  0E06               	movlw	6
  3333  000FA8  D019               	goto	L9
  3334  000FAA                     l22787:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3338  000FAA  EE20 F004          	lfsr	2,4
  3339  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3340  000FB0  26D9               	addwf	fsr2l,f,c
  3341  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3342  000FB4  22DA               	addwfc	fsr2h,f,c
  3343  000FB6  0E02               	movlw	2
  3344  000FB8  18DE               	xorwf	postinc2,w,c
  3345  000FBA  10DE               	iorwf	postinc2,w,c
  3346  000FBC  A4D8               	btfss	status,2,c
  3347  000FBE  D006               	goto	l22791
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3351  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3352  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3353  000FC8  0E02               	movlw	2
  3354  000FCA  D008               	goto	L9
  3355  000FCC                     l22791:
  3356                           
  3357                           ; BSR set to: 0
  3358  000FCC  EE20 F004          	lfsr	2,4
  3359  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3360  000FD2  26D9               	addwf	fsr2l,f,c
  3361  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3362  000FD6  22DA               	addwfc	fsr2h,f,c
  3363  000FD8  0E03               	movlw	3
  3364  000FDA  D03B               	goto	L123
  3365  000FDC                     L9:
  3366  000FDC  6EDE               	movwf	postinc2,c
  3367  000FDE  0E00               	movlw	0
  3368  000FE0  6EDD               	movwf	postdec2,c
  3369  000FE2  D064               	goto	l22831
  3370  000FE4                     l22799:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3374  000FE4  EE20 F004          	lfsr	2,4
  3375  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3376  000FEA  26D9               	addwf	fsr2l,f,c
  3377  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3378  000FEE  22DA               	addwfc	fsr2h,f,c
  3379  000FF0  0E04               	movlw	4
  3380  000FF2  18DE               	xorwf	postinc2,w,c
  3381  000FF4  10DE               	iorwf	postinc2,w,c
  3382  000FF6  A4D8               	btfss	status,2,c
  3383  000FF8  D7E9               	goto	l22791
  3384  000FFA  D02F               	goto	u27420
  3385  000FFC                     l22807:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3389  000FFC  EE20 F004          	lfsr	2,4
  3390  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3391  001002  26D9               	addwf	fsr2l,f,c
  3392  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3393  001006  22DA               	addwfc	fsr2h,f,c
  3394  001008  0E08               	movlw	8
  3395  00100A  18DE               	xorwf	postinc2,w,c
  3396  00100C  10DE               	iorwf	postinc2,w,c
  3397  00100E  A4D8               	btfss	status,2,c
  3398  001010  D7DD               	goto	l22791
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3402  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3403  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3404  00101A  0E05               	movlw	5
  3405  00101C  D7DF               	goto	L9
  3406  00101E                     l22815:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3410  00101E  EE20 F004          	lfsr	2,4
  3411  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3412  001024  26D9               	addwf	fsr2l,f,c
  3413  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3414  001028  22DA               	addwfc	fsr2h,f,c
  3415  00102A  0E09               	movlw	9
  3416  00102C  18DE               	xorwf	postinc2,w,c
  3417  00102E  10DE               	iorwf	postinc2,w,c
  3418  001030  A4D8               	btfss	status,2,c
  3419  001032  D008               	goto	l22823
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3423  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3424  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3425  00103C  0E04               	movlw	4
  3426  00103E  6EDE               	movwf	postinc2,c
  3427  001040  0E00               	movlw	0
  3428  001042  6EDD               	movwf	postdec2,c
  3429  001044                     l22823:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3433  001044  EE20 F004          	lfsr	2,4
  3434  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3435  00104A  26D9               	addwf	fsr2l,f,c
  3436  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3437  00104E  22DA               	addwfc	fsr2h,f,c
  3438  001050  0E04               	movlw	4
  3439  001052                     L123:
  3440  001052  18DE               	xorwf	postinc2,w,c
  3441  001054  10DE               	iorwf	postinc2,w,c
  3442  001056  A4D8               	btfss	status,2,c
  3443  001058  D029               	goto	l22831
  3444  00105A                     u27420:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3448  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3449  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3450  001062  0E00               	movlw	0
  3451  001064  D7BB               	goto	L9
  3452  001066                     l3233:
  3453                           
  3454                           ; BSR set to: 0
  3455  001066  D7FF               	goto	l3233
  3456  001068                     l22829:
  3457                           
  3458                           ; BSR set to: 0
  3459  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3460  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3461  001070  50DF               	movf	indf2,w,c
  3462  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3463  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3464                           
  3465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3466                           ; Switch size 1, requested type "simple"
  3467                           ; Number of cases is 1, Range of values is 0 to 0
  3468                           ; switch strategies available:
  3469                           ; Name         Instructions Cycles
  3470                           ; simple_byte            4     3 (average)
  3471                           ;	Chosen strategy is simple_byte
  3472  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3473  001078  0A00               	xorlw	0	; case 0
  3474  00107A  A4D8               	btfss	status,2,c
  3475  00107C  D7F4               	goto	l3233
  3476                           
  3477                           ; BSR set to: 0
  3478                           ; Switch size 1, requested type "simple"
  3479                           ; Number of cases is 7, Range of values is 0 to 6
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte           22    12 (average)
  3483                           ;	Chosen strategy is simple_byte
  3484  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3485  001080  0A00               	xorlw	0	; case 0
  3486  001082  B4D8               	btfsc	status,2,c
  3487  001084  D74F               	goto	l22771
  3488  001086  0A01               	xorlw	1	; case 1
  3489  001088  B4D8               	btfsc	status,2,c
  3490  00108A  D78F               	goto	l22787
  3491  00108C  0A03               	xorlw	3	; case 2
  3492  00108E  B4D8               	btfsc	status,2,c
  3493  001090  D7D9               	goto	l22823
  3494  001092  0A01               	xorlw	1	; case 3
  3495  001094  B4D8               	btfsc	status,2,c
  3496  001096  D7A6               	goto	l22799
  3497  001098  0A07               	xorlw	7	; case 4
  3498  00109A  B4D8               	btfsc	status,2,c
  3499  00109C  D7AF               	goto	l22807
  3500  00109E  0A01               	xorlw	1	; case 5
  3501  0010A0  B4D8               	btfsc	status,2,c
  3502  0010A2  D7BD               	goto	l22815
  3503  0010A4  0A03               	xorlw	3	; case 6
  3504  0010A6  B4D8               	btfsc	status,2,c
  3505  0010A8  D7CD               	goto	l22823
  3506  0010AA  D7DD               	goto	l3233
  3507  0010AC                     l22831:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3511  0010AC  0EBF               	movlw	low _menuConfiguration_stateMachine
  3512  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3513  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3514  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3515  0010B4  0E00               	movlw	0
  3516  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3517  0010B8  0E00               	movlw	0
  3518  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3519  0010BC  EC8F  F043         	call	_sm_send_event	;wreg free
  3520                           
  3521                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3522  0010C0  D3BF               	goto	l23143
  3523  0010C2                     l22833:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3527  0010C2  0E06               	movlw	6
  3528  0010C4  0101               	movlb	1	; () banked
  3529  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3530  0010C8  A4D8               	btfss	status,2,c
  3531  0010CA  D02F               	goto	l22843
  3532                           
  3533                           ; BSR set to: 1
  3534                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3535  0010CC  0E00               	movlw	0
  3536  0010CE  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3537  0010D0  0EC8               	movlw	200
  3538  0010D2  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3539                           
  3540                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3541  0010D4  0E01               	movlw	1
  3542  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3543                           
  3544                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3545  0010D8  0E00               	movlw	0
  3546  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3550  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3551  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3552  0010E2  EC5C  F012         	call	_setValueToEdit
  3553  0010E6  0900               	iorlw	0
  3554  0010E8  B4D8               	btfsc	status,2,c
  3555  0010EA  0012               	return	
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3559  0010EC  0EBF               	movlw	low _menuConfiguration_stateMachine
  3560  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3561  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3562  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3563  0010F4  0E00               	movlw	0
  3564  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3565  0010F8  0E08               	movlw	8
  3566  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3567  0010FC  EC8F  F043         	call	_sm_send_event	;wreg free
  3568                           
  3569                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3570  001100  0E0A               	movlw	10
  3571  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3572  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3573  001106  EC7A  F047         	call	___lbdiv
  3574  00110A  0DF6               	mullw	246
  3575  00110C  50F3               	movf	243,w,c
  3576  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3577  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3578  001112  0E00               	movlw	0
  3579  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3580  001116  0E14               	movlw	20
  3581  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3582  00111A  0E0A               	movlw	10
  3583  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3584  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3585  001120  EC7A  F047         	call	___lbdiv
  3586  001124  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  3587  001128  0012               	return	
  3588  00112A                     l22843:
  3589                           
  3590                           ; BSR set to: 1
  3591  00112A  0E05               	movlw	5
  3592  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3593  00112E  A4D8               	btfss	status,2,c
  3594  001130  D02F               	goto	l22853
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3598  001132  0E00               	movlw	0
  3599  001134  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3600  001136  0EC8               	movlw	200
  3601  001138  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3602                           
  3603                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3604  00113A  0E01               	movlw	1
  3605  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3606                           
  3607                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3608  00113E  0E01               	movlw	1
  3609  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3610                           
  3611                           ; BSR set to: 1
  3612                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3613  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3614  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3615  001148  EC5C  F012         	call	_setValueToEdit
  3616  00114C  0900               	iorlw	0
  3617  00114E  B4D8               	btfsc	status,2,c
  3618  001150  0012               	return	
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3622  001152  0EBF               	movlw	low _menuConfiguration_stateMachine
  3623  001154  6E12               	movwf	sm_send_event@psm^0,c
  3624  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3625  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3626  00115A  0E00               	movlw	0
  3627  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3628  00115E  0E08               	movlw	8
  3629  001160  6E14               	movwf	sm_send_event@event^0,c
  3630  001162  EC8F  F043         	call	_sm_send_event	;wreg free
  3631                           
  3632                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3633  001166  0E0A               	movlw	10
  3634  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3635  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3636  00116C  EC7A  F047         	call	___lbdiv
  3637  001170  0DF6               	mullw	246
  3638  001172  50F3               	movf	243,w,c
  3639  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3640  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3641  001178  0E00               	movlw	0
  3642  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3643  00117C  0E14               	movlw	20
  3644  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3645  001180  0E0A               	movlw	10
  3646  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3647  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3648  001186  EC7A  F047         	call	___lbdiv
  3649  00118A  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  3650                           
  3651                           ; BSR set to: 1
  3652                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3653                           
  3654                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3655  00118E  0012               	return	
  3656  001190                     l22853:
  3657                           
  3658                           ; BSR set to: 1
  3659  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3660  001192  A4D8               	btfss	status,2,c
  3661  001194  D023               	goto	l22865
  3662                           
  3663                           ; BSR set to: 1
  3664                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3665  001196  0E00               	movlw	0
  3666  001198  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3667  00119A  0E64               	movlw	100
  3668  00119C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3669                           
  3670                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3671  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3672  0011A0  A4D8               	btfss	status,2,c
  3673  0011A2  D003               	goto	l22859
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3677  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3678  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3679                           
  3680                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3681  0011A8  D001               	goto	l22861
  3682  0011AA                     l22859:
  3683                           
  3684                           ; BSR set to: 1
  3685                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3686  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3687  0011AC                     l22861:
  3688                           
  3689                           ; BSR set to: 1
  3690                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3691  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3692  0011AE  0D02               	mullw	2
  3693  0011B0  0E52               	movlw	low (_menu_st+1)
  3694  0011B2  24F3               	addwf	243,w,c
  3695  0011B4  6ED9               	movwf	fsr2l,c
  3696  0011B6  0E01               	movlw	high (_menu_st+1)
  3697  0011B8  20F4               	addwfc	prodh,w,c
  3698  0011BA  6EDA               	movwf	fsr2h,c
  3699  0011BC  50DF               	movf	indf2,w,c
  3700  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3701  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3702  0011C2  0D02               	mullw	2
  3703  0011C4  0E51               	movlw	low _menu_st
  3704  0011C6  24F3               	addwf	243,w,c
  3705  0011C8  6ED9               	movwf	fsr2l,c
  3706  0011CA  0E01               	movlw	high _menu_st
  3707  0011CC  20F4               	addwfc	prodh,w,c
  3708  0011CE  6EDA               	movwf	fsr2h,c
  3709  0011D0  50DF               	movf	indf2,w,c
  3710  0011D2  EC84  F04A         	call	_SetSegmentValueMain
  3711  0011D6                     l22863:
  3712                           
  3713                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3714  0011D6  0E01               	movlw	1
  3715  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3716                           
  3717                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3718  0011DA  0012               	return	
  3719  0011DC                     l22865:
  3720                           
  3721                           ; BSR set to: 1
  3722  0011DC  0E17               	movlw	23
  3723  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3724  0011E0  A4D8               	btfss	status,2,c
  3725  0011E2  D021               	goto	l22879
  3726                           
  3727                           ; BSR set to: 1
  3728                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3729  0011E4  0E00               	movlw	0
  3730  0011E6  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3731  0011E8  0E64               	movlw	100
  3732  0011EA  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3736  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3740  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3741  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3742  0011F2  A0D8               	btfss	status,0,c
  3743  0011F4  D002               	goto	l22875
  3744                           
  3745                           ; BSR set to: 1
  3746                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3747  0011F6  0E00               	movlw	0
  3748  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3749  0011FA                     l22875:
  3750                           
  3751                           ; BSR set to: 1
  3752                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3753  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3754  0011FC  0D02               	mullw	2
  3755  0011FE  0E52               	movlw	low (_menu_st+1)
  3756  001200  24F3               	addwf	243,w,c
  3757  001202  6ED9               	movwf	fsr2l,c
  3758  001204  0E01               	movlw	high (_menu_st+1)
  3759  001206  20F4               	addwfc	prodh,w,c
  3760  001208  6EDA               	movwf	fsr2h,c
  3761  00120A  50DF               	movf	indf2,w,c
  3762  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3763  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3764  001210  0D02               	mullw	2
  3765  001212  0E51               	movlw	low _menu_st
  3766  001214  24F3               	addwf	243,w,c
  3767  001216  6ED9               	movwf	fsr2l,c
  3768  001218  0E01               	movlw	high _menu_st
  3769  00121A  20F4               	addwfc	prodh,w,c
  3770  00121C  6EDA               	movwf	fsr2h,c
  3771  00121E  50DF               	movf	indf2,w,c
  3772  001220  EC84  F04A         	call	_SetSegmentValueMain
  3773  001224  D7D8               	goto	l22863
  3774  001226                     l22879:
  3775                           
  3776                           ; BSR set to: 1
  3777  001226  0E0C               	movlw	12
  3778  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3779  00122A  D09A               	goto	l22935
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3783  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3784  00122E  A4D8               	btfss	status,2,c
  3785  001230  D053               	goto	l22901
  3786                           
  3787                           ; BSR set to: 1
  3788  001232  0E0A               	movlw	10
  3789  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3790  001236  D050               	goto	l22901
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3794  001238  0E00               	movlw	0
  3795  00123A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3796  00123C  0E64               	movlw	100
  3797  00123E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3798                           
  3799                           ; BSR set to: 1
  3800                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3801  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3802  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3803  001246  EC5C  F012         	call	_setValueToEdit
  3804  00124A  0900               	iorlw	0
  3805  00124C  B4D8               	btfsc	status,2,c
  3806  00124E  D7C3               	goto	l22863
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3810  001250  0EBF               	movlw	low _menuConfiguration_stateMachine
  3811  001252  6E12               	movwf	sm_send_event@psm^0,c
  3812  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3813  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3814  001258  0E00               	movlw	0
  3815  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3816  00125C  0E01               	movlw	1
  3817  00125E  6E14               	movwf	sm_send_event@event^0,c
  3818  001260  EC8F  F043         	call	_sm_send_event	;wreg free
  3819                           
  3820                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3821  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3822  001266  0F1C               	addlw	28
  3823  001268  0100               	movlb	0	; () banked
  3824  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3825  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3826  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3827  001270  E101               	bnz	u27555
  3828  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3829  001274                     u27555:
  3830  001274  B4D8               	btfsc	status,2,c
  3831  001276  D009               	goto	u27560
  3832                           
  3833                           ; BSR set to: 0
  3834  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3835  00127A  0F1B               	addlw	27
  3836  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3837  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3838  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3839  001282  E101               	bnz	u27565
  3840  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3841  001286                     u27565:
  3842  001286  A4D8               	btfss	status,2,c
  3843  001288  D016               	goto	l22897
  3844  00128A                     u27560:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3848  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3849  00128C  0D02               	mullw	2
  3850  00128E  0E52               	movlw	low (_menu_st+1)
  3851  001290  24F3               	addwf	243,w,c
  3852  001292  6ED9               	movwf	fsr2l,c
  3853  001294  0E01               	movlw	high (_menu_st+1)
  3854  001296  20F4               	addwfc	prodh,w,c
  3855  001298  6EDA               	movwf	fsr2h,c
  3856  00129A  50DF               	movf	indf2,w,c
  3857  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3858  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3859  0012A0  0D02               	mullw	2
  3860  0012A2  0E51               	movlw	low _menu_st
  3861  0012A4  24F3               	addwf	243,w,c
  3862  0012A6  6ED9               	movwf	fsr2l,c
  3863  0012A8  0E01               	movlw	high _menu_st
  3864  0012AA  20F4               	addwfc	prodh,w,c
  3865  0012AC  6EDA               	movwf	fsr2h,c
  3866  0012AE  50DF               	movf	indf2,w,c
  3867  0012B0  EC84  F04A         	call	_SetSegmentValueMain
  3868                           
  3869                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3870  0012B4  D790               	goto	l22863
  3871  0012B6                     l22897:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3875  0012B6  0E0A               	movlw	10
  3876  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3877  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3878  0012BC  EC7A  F047         	call	___lbdiv
  3879  0012C0  0DF6               	mullw	246
  3880  0012C2  50F3               	movf	243,w,c
  3881  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3882  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3883  0012C8  0E0A               	movlw	10
  3884  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3885  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3886  0012CE  EC7A  F047         	call	___lbdiv
  3887  0012D2  EC84  F04A         	call	_SetSegmentValueMain
  3888  0012D6  D77F               	goto	l22863
  3889  0012D8                     l22901:
  3890                           
  3891                           ; BSR set to: 1
  3892  0012D8  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3893  0012DA  D008               	goto	u27580
  3894  0012DC  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3895  0012DE  E103               	bnz	u27570
  3896  0012E0  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3897  0012E2  A0D8               	btfss	status,0,c
  3898  0012E4  D003               	goto	u27580
  3899  0012E6                     u27570:
  3900                           
  3901                           ; BSR set to: 1
  3902  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3903  0012E8  A4D8               	btfss	status,2,c
  3904  0012EA  D01E               	goto	l22919
  3905  0012EC                     u27580:
  3906                           
  3907                           ; BSR set to: 1
  3908  0012EC  0E02               	movlw	2
  3909  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3910  0012F0  D01B               	goto	l22919
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3914  0012F2  0E00               	movlw	0
  3915  0012F4  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3916  0012F6  0E00               	movlw	0
  3917  0012F8  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3918                           
  3919                           ; BSR set to: 1
  3920                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3921  0012FA  0EEE               	movlw	low _main_stateMachine
  3922  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3923  0012FE  0E01               	movlw	high _main_stateMachine
  3924  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3925  001302  0E00               	movlw	0
  3926  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3927  001306  0E07               	movlw	7
  3928  001308  6E14               	movwf	sm_send_event@event^0,c
  3929  00130A  EC8F  F043         	call	_sm_send_event	;wreg free
  3930                           
  3931                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3932  00130E  0E18               	movlw	24
  3933  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3934  001312  0E18               	movlw	24
  3935  001314  EC84  F04A         	call	_SetSegmentValueMain
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3939  001318  0E00               	movlw	0
  3940  00131A  0101               	movlb	1	; () banked
  3941  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3942                           
  3943                           ; BSR set to: 1
  3944                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3945  00131E  0E01               	movlw	1
  3946  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3950  001322  ECD5  F04B         	call	_ClearFlag_rfCMD	;wreg free
  3951                           
  3952                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3953  001326  0012               	return	
  3954  001328                     l22919:
  3955                           
  3956                           ; BSR set to: 1
  3957  001328  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3958  00132A  D008               	goto	u27610
  3959  00132C  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3960  00132E  E103               	bnz	u27600
  3961  001330  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3962  001332  A0D8               	btfss	status,0,c
  3963  001334  D003               	goto	u27610
  3964  001336                     u27600:
  3965                           
  3966                           ; BSR set to: 1
  3967  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3968  001338  A4D8               	btfss	status,2,c
  3969  00133A  D004               	goto	l22927
  3970  00133C                     u27610:
  3971                           
  3972                           ; BSR set to: 1
  3973                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3974  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3975  00133E  EC13  F021         	call	_load_New_Menu
  3976  001342  D749               	goto	l22863
  3977  001344                     l22927:
  3978                           
  3979                           ; BSR set to: 1
  3980  001344  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3981  001346  D005               	goto	u27620
  3982  001348  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3983  00134A  E102               	bnz	u27621
  3984  00134C  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3985  00134E  B0D8               	btfsc	status,0,c
  3986  001350                     u27621:
  3987  001350  0012               	return	
  3988  001352                     u27620:
  3989                           
  3990                           ; BSR set to: 1
  3991  001352  0E01               	movlw	1
  3992  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3993  001356  0012               	return	
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3997  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3998  00135A  EC13  F021         	call	_load_New_Menu
  3999  00135E  D73B               	goto	l22863
  4000  001360                     l22935:
  4001                           
  4002                           ; BSR set to: 1
  4003  001360  0E27               	movlw	39
  4004  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4005  001364  A4D8               	btfss	status,2,c
  4006  001366  D032               	goto	l22951
  4007                           
  4008                           ; BSR set to: 1
  4009  001368  0E0A               	movlw	10
  4010  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4011  00136C  D02F               	goto	l22951
  4012                           
  4013                           ; BSR set to: 1
  4014  00136E  0E0D               	movlw	13
  4015  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4016  001372  B4D8               	btfsc	status,2,c
  4017  001374  D02B               	goto	l22951
  4018                           
  4019                           ; BSR set to: 1
  4020                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4021  001376  0E00               	movlw	0
  4022  001378  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4023  00137A  0E64               	movlw	100
  4024  00137C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4025                           
  4026                           ; BSR set to: 1
  4027                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4028  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4029  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  4030  001384  EC5C  F012         	call	_setValueToEdit
  4031  001388  0900               	iorlw	0
  4032  00138A  B4D8               	btfsc	status,2,c
  4033  00138C  D724               	goto	l22863
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4037  00138E  0EBF               	movlw	low _menuConfiguration_stateMachine
  4038  001390  6E12               	movwf	sm_send_event@psm^0,c
  4039  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  4040  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4041  001396  0E00               	movlw	0
  4042  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  4043  00139A  0E08               	movlw	8
  4044  00139C  6E14               	movwf	sm_send_event@event^0,c
  4045  00139E  EC8F  F043         	call	_sm_send_event	;wreg free
  4046                           
  4047                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4048  0013A2  0E0A               	movlw	10
  4049  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  4050  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4051  0013A8  EC7A  F047         	call	___lbdiv
  4052  0013AC  0DF6               	mullw	246
  4053  0013AE  50F3               	movf	243,w,c
  4054  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4055  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4056  0013B4  0E00               	movlw	0
  4057  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4058  0013B8  0E14               	movlw	20
  4059  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4060  0013BC  0E0A               	movlw	10
  4061  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4062  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4063  0013C2  EC7A  F047         	call	___lbdiv
  4064  0013C6  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  4065  0013CA  D705               	goto	l22863
  4066  0013CC                     l22951:
  4067                           
  4068                           ; BSR set to: 1
  4069  0013CC  0E0D               	movlw	13
  4070  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4071  0013D0  A4D8               	btfss	status,2,c
  4072  0013D2  D027               	goto	l22969
  4073                           
  4074                           ; BSR set to: 1
  4075  0013D4  51A7               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4076  0013D6  11A8               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4077  0013D8  A4D8               	btfss	status,2,c
  4078  0013DA  D023               	goto	l22969
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4082  0013DC  0E00               	movlw	0
  4083  0013DE  0100               	movlb	0	; () banked
  4084  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4085                           
  4086                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4087  0013E2  0E00               	movlw	0
  4088  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4089                           
  4090                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4091  0013E6  0E00               	movlw	0
  4092  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4096  0013EA  0E02               	movlw	2
  4097  0013EC  EC97  F047         	call	_SaveNVM_VarSystem
  4098                           
  4099                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4100  0013F0  0EEE               	movlw	low _main_stateMachine
  4101  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4102  0013F4  0E01               	movlw	high _main_stateMachine
  4103  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4104  0013F8  0E00               	movlw	0
  4105  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4106  0013FC  0E07               	movlw	7
  4107  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4108  001400  EC8F  F043         	call	_sm_send_event	;wreg free
  4109                           
  4110                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4111  001404  0E18               	movlw	24
  4112  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4113  001408  0E18               	movlw	24
  4114  00140A  EC84  F04A         	call	_SetSegmentValueMain
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4118  00140E  0E01               	movlw	1
  4119  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4120  001412                     l22965:
  4121                           
  4122                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4123  001412  ECD5  F04B         	call	_ClearFlag_rfCMD	;wreg free
  4124  001416                     l22967:
  4125                           
  4126                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4127  001416  0E00               	movlw	0
  4128  001418  0101               	movlb	1	; () banked
  4129  00141A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4130  00141C  0E00               	movlw	0
  4131  00141E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4132                           
  4133                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4134  001420  0012               	return	
  4135  001422                     l22969:
  4136                           
  4137                           ; BSR set to: 1
  4138  001422  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4139  001424  D008               	goto	u27710
  4140  001426  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4141  001428  E103               	bnz	u27700
  4142  00142A  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4143  00142C  A0D8               	btfss	status,0,c
  4144  00142E  D003               	goto	u27710
  4145  001430                     u27700:
  4146                           
  4147                           ; BSR set to: 1
  4148  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4149  001432  A4D8               	btfss	status,2,c
  4150  001434  0012               	return	
  4151  001436                     u27710:
  4152                           
  4153                           ; BSR set to: 1
  4154                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4155  001436  0EEE               	movlw	low _main_stateMachine
  4156  001438  6E12               	movwf	sm_send_event@psm^0,c
  4157  00143A  0E01               	movlw	high _main_stateMachine
  4158  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4159  00143E  0E00               	movlw	0
  4160  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4161  001442  0E07               	movlw	7
  4162  001444  6E14               	movwf	sm_send_event@event^0,c
  4163  001446  EC8F  F043         	call	_sm_send_event	;wreg free
  4164                           
  4165                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4166  00144A  0E18               	movlw	24
  4167  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4168  00144E  0E18               	movlw	24
  4169  001450  EC84  F04A         	call	_SetSegmentValueMain
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4173  001454  ECD5  F04B         	call	_ClearFlag_rfCMD	;wreg free
  4174                           
  4175                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4176  001458  0E01               	movlw	1
  4177  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4178  00145C  D7DC               	goto	l22967
  4179  00145E                     l22983:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4183  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4184  001460  A4D8               	btfss	status,2,c
  4185  001462  D047               	goto	l23003
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4189  001464  0E00               	movlw	0
  4190  001466  0101               	movlb	1	; () banked
  4191  001468  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4192  00146A  0E64               	movlw	100
  4193  00146C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4197  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4198  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4199  001472  A0D8               	btfss	status,0,c
  4200  001474  D003               	goto	l22991
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4204  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4205                           
  4206                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4207  00147A  D001               	goto	l22993
  4208  00147C                     l22991:
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4212  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4213  00147E                     l22993:
  4214                           
  4215                           ; BSR set to: 1
  4216                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4217  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4218  001480  0F1C               	addlw	28
  4219  001482  0100               	movlb	0	; () banked
  4220  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4221  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4222  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4223  00148A  E101               	bnz	u27745
  4224  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4225  00148E                     u27745:
  4226  00148E  B4D8               	btfsc	status,2,c
  4227  001490  D009               	goto	u27750
  4228                           
  4229                           ; BSR set to: 0
  4230  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4231  001494  0F1B               	addlw	27
  4232  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4233  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4234  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4235  00149C  E101               	bnz	u27755
  4236  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4237  0014A0                     u27755:
  4238  0014A0  A4D8               	btfss	status,2,c
  4239  0014A2  D016               	goto	l22999
  4240  0014A4                     u27750:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4244  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4245  0014A6  0D02               	mullw	2
  4246  0014A8  0E52               	movlw	low (_menu_st+1)
  4247  0014AA  24F3               	addwf	243,w,c
  4248  0014AC  6ED9               	movwf	fsr2l,c
  4249  0014AE  0E01               	movlw	high (_menu_st+1)
  4250  0014B0  20F4               	addwfc	prodh,w,c
  4251  0014B2  6EDA               	movwf	fsr2h,c
  4252  0014B4  50DF               	movf	indf2,w,c
  4253  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4254  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4255  0014BA  0D02               	mullw	2
  4256  0014BC  0E51               	movlw	low _menu_st
  4257  0014BE  24F3               	addwf	243,w,c
  4258  0014C0  6ED9               	movwf	fsr2l,c
  4259  0014C2  0E01               	movlw	high _menu_st
  4260  0014C4  20F4               	addwfc	prodh,w,c
  4261  0014C6  6EDA               	movwf	fsr2h,c
  4262  0014C8  50DF               	movf	indf2,w,c
  4263  0014CA  EC84  F04A         	call	_SetSegmentValueMain
  4264                           
  4265                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4266  0014CE  D683               	goto	l22863
  4267  0014D0                     l22999:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4271  0014D0  0E0A               	movlw	10
  4272  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4273  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4274  0014D6  EC7A  F047         	call	___lbdiv
  4275  0014DA  0DF6               	mullw	246
  4276  0014DC  50F3               	movf	243,w,c
  4277  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4278  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4279  0014E2  0E0A               	movlw	10
  4280  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4281  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4282  0014E8  EC7A  F047         	call	___lbdiv
  4283  0014EC  EC84  F04A         	call	_SetSegmentValueMain
  4284  0014F0  D672               	goto	l22863
  4285  0014F2                     l23003:
  4286                           
  4287                           ; BSR set to: 0
  4288  0014F2  0E17               	movlw	23
  4289  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4290  0014F6  A4D8               	btfss	status,2,c
  4291  0014F8  D045               	goto	l23023
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4295  0014FA  0E00               	movlw	0
  4296  0014FC  0101               	movlb	1	; () banked
  4297  0014FE  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4298  001500  0E64               	movlw	100
  4299  001502  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4303  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4304                           
  4305                           ; BSR set to: 1
  4306                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4307  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4308  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4309  00150A  A0D8               	btfss	status,0,c
  4310                           
  4311                           ; BSR set to: 1
  4312                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4313  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4314                           
  4315                           ; BSR set to: 1
  4316                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4317  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4318  001512  0F1C               	addlw	28
  4319  001514  0100               	movlb	0	; () banked
  4320  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4321  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4322  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4323  00151C  E101               	bnz	u27785
  4324  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4325  001520                     u27785:
  4326  001520  B4D8               	btfsc	status,2,c
  4327  001522  D009               	goto	u27790
  4328                           
  4329                           ; BSR set to: 0
  4330  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4331  001526  0F1B               	addlw	27
  4332  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4333  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4334  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4335  00152E  E101               	bnz	u27795
  4336  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4337  001532                     u27795:
  4338  001532  A4D8               	btfss	status,2,c
  4339  001534  D016               	goto	l23019
  4340  001536                     u27790:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4344  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4345  001538  0D02               	mullw	2
  4346  00153A  0E52               	movlw	low (_menu_st+1)
  4347  00153C  24F3               	addwf	243,w,c
  4348  00153E  6ED9               	movwf	fsr2l,c
  4349  001540  0E01               	movlw	high (_menu_st+1)
  4350  001542  20F4               	addwfc	prodh,w,c
  4351  001544  6EDA               	movwf	fsr2h,c
  4352  001546  50DF               	movf	indf2,w,c
  4353  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4354  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4355  00154C  0D02               	mullw	2
  4356  00154E  0E51               	movlw	low _menu_st
  4357  001550  24F3               	addwf	243,w,c
  4358  001552  6ED9               	movwf	fsr2l,c
  4359  001554  0E01               	movlw	high _menu_st
  4360  001556  20F4               	addwfc	prodh,w,c
  4361  001558  6EDA               	movwf	fsr2h,c
  4362  00155A  50DF               	movf	indf2,w,c
  4363  00155C  EC84  F04A         	call	_SetSegmentValueMain
  4364                           
  4365                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4366  001560  D63A               	goto	l22863
  4367  001562                     l23019:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4371  001562  0E0A               	movlw	10
  4372  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4373  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4374  001568  EC7A  F047         	call	___lbdiv
  4375  00156C  0DF6               	mullw	246
  4376  00156E  50F3               	movf	243,w,c
  4377  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4378  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4379  001574  0E0A               	movlw	10
  4380  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4381  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4382  00157A  EC7A  F047         	call	___lbdiv
  4383  00157E  EC84  F04A         	call	_SetSegmentValueMain
  4384  001582  D629               	goto	l22863
  4385  001584                     l23023:
  4386                           
  4387                           ; BSR set to: 0
  4388  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4389  001586  A4D8               	btfss	status,2,c
  4390  001588  D023               	goto	l23039
  4391                           
  4392                           ; BSR set to: 0
  4393  00158A  0E09               	movlw	9
  4394  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4395  00158E  D020               	goto	l23039
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4399  001590  0E00               	movlw	0
  4400  001592  0101               	movlb	1	; () banked
  4401  001594  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4402  001596  0E64               	movlw	100
  4403  001598  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4407  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4408  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4409  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4413  0015A6  0EBF               	movlw	low _menuConfiguration_stateMachine
  4414  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4415  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4416  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4417  0015AE  0E00               	movlw	0
  4418  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4419  0015B2  0E02               	movlw	2
  4420  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4421  0015B6  EC8F  F043         	call	_sm_send_event	;wreg free
  4422                           
  4423                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4424  0015BA  0E01               	movlw	1
  4425  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4426  0015BE  0E19               	movlw	25
  4427  0015C0  EC84  F04A         	call	_SetSegmentValueMain
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4431  0015C4  0E00               	movlw	0
  4432  0015C6  0101               	movlb	1	; () banked
  4433  0015C8  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4434  0015CA  0E28               	movlw	40
  4435  0015CC  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4436  0015CE  D603               	goto	l22863
  4437  0015D0                     l23039:
  4438                           
  4439                           ; BSR set to: 0
  4440  0015D0  0101               	movlb	1	; () banked
  4441  0015D2  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4442  0015D4  D008               	goto	u27830
  4443  0015D6  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4444  0015D8  E103               	bnz	u27820
  4445  0015DA  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4446  0015DC  A0D8               	btfss	status,0,c
  4447  0015DE  D003               	goto	u27830
  4448  0015E0                     u27820:
  4449                           
  4450                           ; BSR set to: 1
  4451  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4452  0015E2  A4D8               	btfss	status,2,c
  4453  0015E4  0012               	return	
  4454  0015E6                     u27830:
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4458  0015E6  0E00               	movlw	0
  4459  0015E8  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4460  0015EA  0E64               	movlw	100
  4461  0015EC  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4465  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4466  0015F0  EC13  F021         	call	_load_New_Menu
  4467                           
  4468                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4469  0015F4  0EBF               	movlw	low _menuConfiguration_stateMachine
  4470  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4471  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4472  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4473  0015FC  0E00               	movlw	0
  4474  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4475  001600  0E03               	movlw	3
  4476  001602  6E14               	movwf	sm_send_event@event^0,c
  4477  001604  EC8F  F043         	call	_sm_send_event	;wreg free
  4478  001608  D5E6               	goto	l22863
  4479  00160A                     l23051:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4483  00160A  0101               	movlb	1	; () banked
  4484  00160C  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4485  00160E  D005               	goto	u27840
  4486  001610  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4487  001612  E102               	bnz	u27841
  4488  001614  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4489  001616  B0D8               	btfsc	status,0,c
  4490  001618                     u27841:
  4491  001618  0012               	return	
  4492  00161A                     u27840:
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4496  00161A  0E00               	movlw	0
  4497  00161C  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4498  00161E  0E64               	movlw	100
  4499  001620  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4503  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4504  001624  A4D8               	btfss	status,2,c
  4505  001626  D004               	goto	u27860
  4506                           
  4507                           ; BSR set to: 1
  4508  001628  0E08               	movlw	8
  4509  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4510  00162C  B4D8               	btfsc	status,2,c
  4511  00162E  D00A               	goto	u27870
  4512  001630                     u27860:
  4513                           
  4514                           ; BSR set to: 1
  4515  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4516  001632  0F1C               	addlw	28
  4517  001634  0100               	movlb	0	; () banked
  4518  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4519  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4520  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4521  00163C  E101               	bnz	u27875
  4522  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4523  001640                     u27875:
  4524  001640  A4D8               	btfss	status,2,c
  4525  001642  D005               	goto	l23063
  4526  001644                     u27870:
  4527                           
  4528                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4529  001644  0100               	movlb	0	; () banked
  4530  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4531  001648  EC45  F030         	call	_ResetDefaultMemory
  4532                           
  4533                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4534  00164C  D023               	goto	l23081
  4535  00164E                     l23063:
  4536                           
  4537                           ; BSR set to: 0
  4538  00164E  0101               	movlb	1	; () banked
  4539  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4540  001652  B4D8               	btfsc	status,2,c
  4541  001654  D004               	goto	u27890
  4542                           
  4543                           ; BSR set to: 1
  4544  001656  0E0A               	movlw	10
  4545  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4546  00165A  A4D8               	btfss	status,2,c
  4547  00165C  D004               	goto	l23069
  4548  00165E                     u27890:
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4552  00165E  0E01               	movlw	1
  4553  001660  EC97  F047         	call	_SaveNVM_VarSystem
  4554                           
  4555                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4556  001664  D017               	goto	l23081
  4557  001666                     l23069:
  4558                           
  4559                           ; BSR set to: 1
  4560                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4561  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4562  001668  A4D8               	btfss	status,2,c
  4563  00166A  D00E               	goto	l23077
  4564                           
  4565                           ; BSR set to: 1
  4566  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4567  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4568  001674  50DF               	movf	indf2,w,c
  4569  001676  B4D8               	btfsc	status,2,c
  4570  001678  D007               	goto	l23077
  4571                           
  4572                           ; BSR set to: 1
  4573  00167A  0E06               	movlw	6
  4574  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4575  00167E  A4D8               	btfss	status,2,c
  4576  001680  D003               	goto	l23077
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4580  001682  0E09               	movlw	9
  4581  001684  0100               	movlb	0	; () banked
  4582  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4583  001688                     l23077:
  4584                           
  4585                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4586  001688  0E01               	movlw	1
  4587  00168A  EC97  F047         	call	_SaveNVM_VarSystem
  4588                           
  4589                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4590  00168E  0E00               	movlw	0
  4591  001690  EC97  F047         	call	_SaveNVM_VarSystem
  4592  001694                     l23081:
  4593                           
  4594                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4595  001694  0EBF               	movlw	low _menuConfiguration_stateMachine
  4596  001696  6E12               	movwf	sm_send_event@psm^0,c
  4597  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4598  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4599  00169C  0E00               	movlw	0
  4600  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4601  0016A0  0E04               	movlw	4
  4602  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4603  0016A4  EC8F  F043         	call	_sm_send_event	;wreg free
  4604                           
  4605                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4606  0016A8  0101               	movlb	1	; () banked
  4607  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4608                           
  4609                           ; BSR set to: 1
  4610                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4611  0016AC  0E02               	movlw	2
  4612  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4613  0016B0  D005               	goto	l23091
  4614                           
  4615                           ; BSR set to: 1
  4616                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4617  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4621  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4622  0016B6  EC13  F021         	call	_load_New_Menu
  4623                           
  4624                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4625  0016BA  0012               	return	
  4626  0016BC                     l23091:
  4627                           
  4628                           ; BSR set to: 1
  4629  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4630  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4631  0016C0  A0D8               	btfss	status,0,c
  4632  0016C2  D005               	goto	l23097
  4633                           
  4634                           ; BSR set to: 1
  4635                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4636  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4640  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4641  0016C8  EC13  F021         	call	_load_New_Menu
  4642                           
  4643                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4644  0016CC  0012               	return	
  4645  0016CE                     l23097:
  4646                           
  4647                           ; BSR set to: 1
  4648                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4649  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4650  0016D0  EC13  F021         	call	_load_New_Menu
  4651  0016D4  0012               	return	
  4652  0016D6                     l23099:
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4656  0016D6  0101               	movlb	1	; () banked
  4657  0016D8  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4658  0016DA  D005               	goto	u27950
  4659  0016DC  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4660  0016DE  E102               	bnz	u27951
  4661  0016E0  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4662  0016E2  B0D8               	btfsc	status,0,c
  4663  0016E4                     u27951:
  4664  0016E4  0012               	return	
  4665  0016E6                     u27950:
  4666                           
  4667                           ; BSR set to: 1
  4668                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4669  0016E6  0100               	movlb	0	; () banked
  4670  0016E8  51FB               	movf	_auxCounter& (0+255),w,b
  4671  0016EA  11FC               	iorwf	(_auxCounter+1)& (0+255),w,b
  4672  0016EC  A4D8               	btfss	status,2,c
  4673  0016EE  D010               	goto	l23109
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4677  0016F0  0101               	movlb	1	; () banked
  4678  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4679                           
  4680                           ; BSR set to: 1
  4681                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4682  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4683  0016F6  EC13  F021         	call	_load_New_Menu
  4684                           
  4685                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4686  0016FA  0EBF               	movlw	low _menuConfiguration_stateMachine
  4687  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4688  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4689  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4690  001702  0E00               	movlw	0
  4691  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4692  001706  0E04               	movlw	4
  4693  001708  6E14               	movwf	sm_send_event@event^0,c
  4694  00170A  EC8F  F043         	call	_sm_send_event	;wreg free
  4695                           
  4696                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4697  00170E  0012               	return	
  4698  001710                     l23109:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4702  001710  0E00               	movlw	0
  4703  001712  0101               	movlb	1	; () banked
  4704  001714  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4705  001716  0E3C               	movlw	60
  4706  001718  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4707                           
  4708                           ; BSR set to: 1
  4709                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4710  00171A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4711  00171E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4712  001722  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4713  001726  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4714  00172A  C0FB  F014         	movff	_auxCounter,___lldiv@divisor
  4715  00172E  C0FC  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4716  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4717  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4718  001736  EC54  F03F         	call	___lldiv	;wreg free
  4719  00173A  5010               	movf	?___lldiv^0,w,c
  4720  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4721                           
  4722                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4723  00173E  C0FB  F014         	movff	_auxCounter,___lldiv@divisor
  4724  001742  C0FC  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4725  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4726  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4727  00174A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4728  00174E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4729  001752  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4730  001756  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4731  00175A  EC54  F03F         	call	___lldiv	;wreg free
  4732  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4733  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4734  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4735  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4736  00176E  C0FB  F021         	movff	_auxCounter,___lmul@multiplicand
  4737  001772  C0FC  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4738  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4739  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4740  00177A  EC9D  F044         	call	___lmul	;wreg free
  4741  00177E  501D               	movf	?___lmul^0,w,c
  4742  001780  0101               	movlb	1	; () banked
  4743  001782  5DFA               	subwf	_tempCounter& (0+255),w,b
  4744  001784  6FFA               	movwf	_tempCounter& (0+255),b
  4745  001786  501E               	movf	(?___lmul+1)^0,w,c
  4746  001788  59FB               	subwfb	(_tempCounter+1)& (0+255),w,b
  4747  00178A  6FFB               	movwf	(_tempCounter+1)& (0+255),b
  4748  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4749  00178E  59FC               	subwfb	(_tempCounter+2)& (0+255),w,b
  4750  001790  6FFC               	movwf	(_tempCounter+2)& (0+255),b
  4751  001792  5020               	movf	(?___lmul+3)^0,w,c
  4752  001794  59FD               	subwfb	(_tempCounter+3)& (0+255),w,b
  4753  001796  6FFD               	movwf	(_tempCounter+3)& (0+255),b
  4754                           
  4755                           ; BSR set to: 1
  4756                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4757  001798  C0FB  F010         	movff	_auxCounter,___lwdiv@dividend
  4758  00179C  C0FC  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4759  0017A0  0E00               	movlw	0
  4760  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4761  0017A4  0E64               	movlw	100
  4762  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4763  0017A8  EC1D  F045         	call	___lwdiv	;wreg free
  4764  0017AC  C010  F0FB         	movff	?___lwdiv,_auxCounter
  4765  0017B0  C011  F0FC         	movff	?___lwdiv+1,_auxCounter+1
  4766                           
  4767                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4768  0017B4  0E0A               	movlw	10
  4769  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4770  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4771  0017BA  EC7A  F047         	call	___lbdiv
  4772  0017BE  0DF6               	mullw	246
  4773  0017C0  50F3               	movf	243,w,c
  4774  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4775  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4776  0017C6  0E00               	movlw	0
  4777  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4778  0017CA  0E0A               	movlw	10
  4779  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4780  0017CE  0E0A               	movlw	10
  4781  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4782  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4783  0017D4  EC7A  F047         	call	___lbdiv
  4784  0017D8  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  4785  0017DC  0012               	return	
  4786  0017DE                     l23119:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4790  0017DE  0101               	movlb	1	; () banked
  4791  0017E0  05FE               	decf	_firstselectflag& (0+255),w,b
  4792  0017E2  A4D8               	btfss	status,2,c
  4793  0017E4  D004               	goto	l23123
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4797  0017E6  0E00               	movlw	0
  4798  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4799                           
  4800                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4801  0017EA  0E00               	movlw	0
  4802  0017EC  6FFE               	movwf	_firstselectflag& (0+255),b
  4803  0017EE                     l23123:
  4804                           
  4805                           ; BSR set to: 1
  4806                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4807  0017EE  ECFC  F01B         	call	_controlSelectRemote	;wreg free
  4808                           
  4809                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4810  0017F2  0012               	return	
  4811  0017F4                     l23125:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4815  0017F4  ECF7  F03A         	call	_controlSaveRemote	;wreg free
  4816                           
  4817                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4818  0017F8  0012               	return	
  4819  0017FA                     l23127:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4823  0017FA  ECFF  F047         	call	_controlLearnDigit	;wreg free
  4824                           
  4825                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4826  0017FE  0101               	movlb	1	; () banked
  4827  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4828  001802  A4D8               	btfss	status,2,c
  4829  001804  0012               	return	
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4833  001806  0EEE               	movlw	low _main_stateMachine
  4834  001808  6E12               	movwf	sm_send_event@psm^0,c
  4835  00180A  0E01               	movlw	high _main_stateMachine
  4836  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4837  00180E  0E00               	movlw	0
  4838  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4839  001812  0E07               	movlw	7
  4840  001814  6E14               	movwf	sm_send_event@event^0,c
  4841  001816  EC8F  F043         	call	_sm_send_event	;wreg free
  4842                           
  4843                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4844  00181A  0EBF               	movlw	low _menuConfiguration_stateMachine
  4845  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4846  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4847  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4848  001822  0E00               	movlw	0
  4849  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4850  001826  0E04               	movlw	4
  4851  001828  6E14               	movwf	sm_send_event@event^0,c
  4852  00182A  EC8F  F043         	call	_sm_send_event	;wreg free
  4853                           
  4854                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4855  00182E  0E18               	movlw	24
  4856  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4857  001832  0E18               	movlw	24
  4858  001834  EC84  F04A         	call	_SetSegmentValueMain
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4862  001838  0E02               	movlw	2
  4863  00183A  EC97  F047         	call	_SaveNVM_VarSystem
  4864  00183E  D5E9               	goto	l22965
  4865  001840                     l23143:
  4866  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4867  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4868  001848  50DF               	movf	indf2,w,c
  4869  00184A  0100               	movlb	0	; () banked
  4870  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4871  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4872                           
  4873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4874                           ; Switch size 1, requested type "simple"
  4875                           ; Number of cases is 1, Range of values is 0 to 0
  4876                           ; switch strategies available:
  4877                           ; Name         Instructions Cycles
  4878                           ; simple_byte            4     3 (average)
  4879                           ;	Chosen strategy is simple_byte
  4880  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4881  001852  0A00               	xorlw	0	; case 0
  4882  001854  A4D8               	btfss	status,2,c
  4883  001856  0012               	return	
  4884                           
  4885                           ; BSR set to: 0
  4886                           ; Switch size 1, requested type "simple"
  4887                           ; Number of cases is 7, Range of values is 0 to 6
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte           22    12 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4893  00185A  0A00               	xorlw	0	; case 0
  4894  00185C  B4D8               	btfsc	status,2,c
  4895  00185E  D431               	goto	l22833
  4896  001860  0A01               	xorlw	1	; case 1
  4897  001862  B4D8               	btfsc	status,2,c
  4898  001864  D5FC               	goto	l22983
  4899  001866  0A03               	xorlw	3	; case 2
  4900  001868  B4D8               	btfsc	status,2,c
  4901  00186A  D6CF               	goto	l23051
  4902  00186C  0A01               	xorlw	1	; case 3
  4903  00186E  B4D8               	btfsc	status,2,c
  4904  001870  D732               	goto	l23099
  4905  001872  0A07               	xorlw	7	; case 4
  4906  001874  B4D8               	btfsc	status,2,c
  4907  001876  D7B3               	goto	l23119
  4908  001878  0A01               	xorlw	1	; case 5
  4909  00187A  B4D8               	btfsc	status,2,c
  4910  00187C  D7BB               	goto	l23125
  4911  00187E  0A03               	xorlw	3	; case 6
  4912  001880  A4D8               	btfss	status,2,c
  4913  001882  0012               	return	
  4914  001884  D7BA               	goto	l23127
  4915  001886                     __end_of_sm_execute_menuConfiguration:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function _setValueToEdit *****************
  4919 ;; Defined at:
  4920 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  menuType        1    wreg     enum E10813
  4923 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  menuType        1    6[BANK0 ] enum E10813
  4926 ;;  posindex        1    7[BANK0 ] unsigned char 
  4927 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      unsigned char 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 3F/1
  4934 ;;		On exit  : 3F/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4937 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4938 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4940 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4941 ;;Total ram usage:        6 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 14
  4944 ;; This function calls:
  4945 ;;		_InitReceiver
  4946 ;;		_SaveNVM_VarSystem
  4947 ;;		_cmdMemoryIsEmpty
  4948 ;;		_load_New_Menu
  4949 ;;		_sm_send_event
  4950 ;; This function is called by:
  4951 ;;		_sm_execute_menuConfiguration
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text3
  4956  0024B8                     __ptext3:
  4957                           	callstack 0
  4958  0024B8                     _setValueToEdit:
  4959                           	callstack 14
  4960                           
  4961                           ;incstack = 0
  4962                           ;setValueToEdit@menuType stored from wreg
  4963  0024B8  0100               	movlb	0	; () banked
  4964  0024BA  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4965                           
  4966                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4967  0024BC  0E00               	movlw	0
  4968  0024BE  0100               	movlb	0	; () banked
  4969  0024C0  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4970                           
  4971                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4972  0024C2  D254               	goto	l21379
  4973  0024C4                     l3358:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4977  0024C4  C168  F169         	movff	_menu_st+23,_menu_st+24
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4981  0024C8  0E00               	movlw	0
  4982  0024CA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4983                           
  4984                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4985  0024CC  D034               	goto	l21135
  4986  0024CE                     l21089:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4990  0024CE  0E04               	movlw	4
  4991  0024D0  EC13  F021         	call	_load_New_Menu
  4992                           
  4993                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4994  0024D4  D274               	goto	l21381
  4995  0024D6                     l21091:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4999  0024D6  0E05               	movlw	5
  5000  0024D8  EC13  F021         	call	_load_New_Menu
  5001                           
  5002                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5003  0024DC  D270               	goto	l21381
  5004  0024DE                     l21093:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5008  0024DE  0E06               	movlw	6
  5009  0024E0  EC13  F021         	call	_load_New_Menu
  5010                           
  5011                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5012  0024E4  D26C               	goto	l21381
  5013  0024E6                     l21095:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5017  0024E6  0E63               	movlw	99
  5018  0024E8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5022  0024EA  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5026  0024EE  0E9C               	movlw	low (_var_sys_NVM+4)
  5027  0024F0                     L13:
  5028  0024F0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5029  0024F2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5033  0024F4  0E01               	movlw	1
  5034  0024F6  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5035                           
  5036                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5037  0024F8  D262               	goto	l21381
  5038  0024FA                     l21103:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5042  0024FA  0E07               	movlw	7
  5043  0024FC  EC13  F021         	call	_load_New_Menu
  5044                           
  5045                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5046  002500  D25E               	goto	l21381
  5047  002502                     l21105:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5051  002502  0E08               	movlw	8
  5052  002504  EC13  F021         	call	_load_New_Menu
  5053                           
  5054                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5055  002508  D25A               	goto	l21381
  5056  00250A                     l21107:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5060  00250A  0E09               	movlw	9
  5061  00250C  EC13  F021         	call	_load_New_Menu
  5062                           
  5063                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5064  002510  D256               	goto	l21381
  5065  002512                     l21109:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5069  002512  0E02               	movlw	2
  5070  002514  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5074  002516  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5078  00251A  0EA4               	movlw	low (_var_sys_NVM+12)
  5079  00251C  D7E9               	goto	L13
  5080  00251E                     l21117:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5084  00251E  0E03               	movlw	3
  5085  002520  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5089  002522  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5093  002526  0EA5               	movlw	low (_var_sys_NVM+13)
  5094  002528  D7E3               	goto	L13
  5095  00252A                     l21125:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5099  00252A  0E01               	movlw	1
  5100  00252C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5104  00252E  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5108  002532  0EA6               	movlw	low (_var_sys_NVM+14)
  5109  002534  D7DD               	goto	L13
  5110  002536                     l21135:
  5111                           
  5112                           ; BSR set to: 0
  5113  002536  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5114  002538  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5115  00253A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5116                           
  5117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5118                           ; Switch size 1, requested type "simple"
  5119                           ; Number of cases is 1, Range of values is 0 to 0
  5120                           ; switch strategies available:
  5121                           ; Name         Instructions Cycles
  5122                           ; simple_byte            4     3 (average)
  5123                           ;	Chosen strategy is simple_byte
  5124  00253C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5125  00253E  0A00               	xorlw	0	; case 0
  5126  002540  A4D8               	btfss	status,2,c
  5127  002542  D23D               	goto	l21381
  5128                           
  5129                           ; BSR set to: 0
  5130                           ; Switch size 1, requested type "simple"
  5131                           ; Number of cases is 10, Range of values is 0 to 9
  5132                           ; switch strategies available:
  5133                           ; Name         Instructions Cycles
  5134                           ; simple_byte           31    16 (average)
  5135                           ;	Chosen strategy is simple_byte
  5136  002544  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5137  002546  0A00               	xorlw	0	; case 0
  5138  002548  B4D8               	btfsc	status,2,c
  5139  00254A  D7C1               	goto	l21089
  5140  00254C  0A01               	xorlw	1	; case 1
  5141  00254E  B4D8               	btfsc	status,2,c
  5142  002550  D7C2               	goto	l21091
  5143  002552  0A03               	xorlw	3	; case 2
  5144  002554  B4D8               	btfsc	status,2,c
  5145  002556  D7C3               	goto	l21093
  5146  002558  0A01               	xorlw	1	; case 3
  5147  00255A  B4D8               	btfsc	status,2,c
  5148  00255C  D7C4               	goto	l21095
  5149  00255E  0A07               	xorlw	7	; case 4
  5150  002560  B4D8               	btfsc	status,2,c
  5151  002562  D7CB               	goto	l21103
  5152  002564  0A01               	xorlw	1	; case 5
  5153  002566  B4D8               	btfsc	status,2,c
  5154  002568  D7CC               	goto	l21105
  5155  00256A  0A03               	xorlw	3	; case 6
  5156  00256C  B4D8               	btfsc	status,2,c
  5157  00256E  D7CD               	goto	l21107
  5158  002570  0A01               	xorlw	1	; case 7
  5159  002572  B4D8               	btfsc	status,2,c
  5160  002574  D7CE               	goto	l21109
  5161  002576  0A0F               	xorlw	15	; case 8
  5162  002578  B4D8               	btfsc	status,2,c
  5163  00257A  D7D1               	goto	l21117
  5164  00257C  0A01               	xorlw	1	; case 9
  5165  00257E  B4D8               	btfsc	status,2,c
  5166  002580  D7D4               	goto	l21125
  5167  002582  D21D               	goto	l21381
  5168  002584                     l3372:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5172  002584  C168  F169         	movff	_menu_st+23,_menu_st+24
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5176  002588  0E01               	movlw	1
  5177  00258A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5178                           
  5179                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5180  00258C  0E00               	movlw	0
  5181  00258E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5182                           
  5183                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5184  002590  D057               	goto	l21191
  5185  002592                     l21139:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5189  002592  0E0A               	movlw	10
  5190  002594  EC13  F021         	call	_load_New_Menu
  5191                           
  5192                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5193  002598  D212               	goto	l21381
  5194  00259A                     l21141:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5198  00259A  0E0B               	movlw	11
  5199  00259C  EC13  F021         	call	_load_New_Menu
  5200                           
  5201                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5202  0025A0  D20E               	goto	l21381
  5203  0025A2                     l21143:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5207  0025A2  0E63               	movlw	99
  5208  0025A4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5212  0025A6  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5216  0025AA  0EAC               	movlw	low (_var_sys_NVM+20)
  5217  0025AC  D7A1               	goto	L13
  5218  0025AE                     l21151:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5222  0025AE  0E09               	movlw	9
  5223  0025B0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5224                           
  5225                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5226  0025B2  0E01               	movlw	1
  5227  0025B4  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5231  0025B6  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5235  0025BA  0EAD               	movlw	low (_var_sys_NVM+21)
  5236  0025BC  D799               	goto	L13
  5237  0025BE                     l3380:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5241  0025BE  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5245  0025C2  0EAF               	movlw	low (_var_sys_NVM+23)
  5246  0025C4  D795               	goto	L13
  5247  0025C6                     l21163:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5251  0025C6  0E09               	movlw	9
  5252  0025C8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5253                           
  5254                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5255  0025CA  0E01               	movlw	1
  5256  0025CC  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5260  0025CE  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5264  0025D2  0EB0               	movlw	low (_var_sys_NVM+24)
  5265  0025D4  D78D               	goto	L13
  5266  0025D6                     l21171:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5270  0025D6  0E00               	movlw	0
  5271  0025D8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5272                           
  5273                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5274  0025DA  0E00               	movlw	0
  5275  0025DC  0101               	movlb	1	; () banked
  5276  0025DE  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5277  0025E0  0E00               	movlw	0
  5278  0025E2  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5279                           
  5280                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5281  0025E4  0E27               	movlw	39
  5282  0025E6  0100               	movlb	0	; () banked
  5283  0025E8  6FFC               	movwf	(_auxCounter+1)& (0+255),b
  5284  0025EA  0E10               	movlw	16
  5285  0025EC  6FFB               	movwf	_auxCounter& (0+255),b
  5286                           
  5287                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5288  0025EE  0E00               	movlw	0
  5289  0025F0  0101               	movlb	1	; () banked
  5290  0025F2  6FC2               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5291  0025F4  0E00               	movlw	0
  5292  0025F6  6FC1               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5296  0025F8  C13C  F1FA         	movff	_var_sys+60,_tempCounter	;volatile
  5297  0025FC  C13D  F1FB         	movff	_var_sys+61,_tempCounter+1	;volatile
  5298  002600  C13E  F1FC         	movff	_var_sys+62,_tempCounter+2	;volatile
  5299  002604  C13F  F1FD         	movff	_var_sys+63,_tempCounter+3	;volatile
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5303  002608  0EBF               	movlw	low _menuConfiguration_stateMachine
  5304  00260A  6E12               	movwf	sm_send_event@psm^0,c
  5305  00260C  0E02               	movlw	high _menuConfiguration_stateMachine
  5306  00260E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5307  002610  0E00               	movlw	0
  5308  002612  6E15               	movwf	(sm_send_event@event+1)^0,c
  5309  002614  0E05               	movlw	5
  5310  002616  6E14               	movwf	sm_send_event@event^0,c
  5311  002618  EC8F  F043         	call	_sm_send_event	;wreg free
  5312                           
  5313                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5314  00261C  D1D0               	goto	l21381
  5315  00261E                     l21177:
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5319  00261E  0E00               	movlw	0
  5320  002620  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5321                           
  5322                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5323  002622  0E01               	movlw	1
  5324  002624  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5328  002626  0E00               	movlw	0
  5329  002628  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5330  00262A  0E00               	movlw	0
  5331  00262C  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5332                           
  5333                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5334  00262E  D1C7               	goto	l21381
  5335  002630                     l21181:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5339  002630  0E03               	movlw	3
  5340  002632  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5341                           
  5342                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5343  002634  0E00               	movlw	0
  5344  002636  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5348  002638  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5352  00263C  0EB1               	movlw	low (_var_sys_NVM+25)
  5353  00263E  D758               	goto	L13
  5354  002640                     l21191:
  5355                           
  5356                           ; BSR set to: 0
  5357  002640  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5358  002642  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5359  002644  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5360                           
  5361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5362                           ; Switch size 1, requested type "simple"
  5363                           ; Number of cases is 1, Range of values is 0 to 0
  5364                           ; switch strategies available:
  5365                           ; Name         Instructions Cycles
  5366                           ; simple_byte            4     3 (average)
  5367                           ;	Chosen strategy is simple_byte
  5368  002646  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5369  002648  0A00               	xorlw	0	; case 0
  5370  00264A  A4D8               	btfss	status,2,c
  5371  00264C  D1B8               	goto	l21381
  5372                           
  5373                           ; BSR set to: 0
  5374                           ; Switch size 1, requested type "simple"
  5375                           ; Number of cases is 10, Range of values is 0 to 9
  5376                           ; switch strategies available:
  5377                           ; Name         Instructions Cycles
  5378                           ; simple_byte           31    16 (average)
  5379                           ;	Chosen strategy is simple_byte
  5380  00264E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5381  002650  0A00               	xorlw	0	; case 0
  5382  002652  B4D8               	btfsc	status,2,c
  5383  002654  D79E               	goto	l21139
  5384  002656  0A01               	xorlw	1	; case 1
  5385  002658  B4D8               	btfsc	status,2,c
  5386  00265A  D79F               	goto	l21141
  5387  00265C  0A03               	xorlw	3	; case 2
  5388  00265E  B4D8               	btfsc	status,2,c
  5389  002660  D7A0               	goto	l21143
  5390  002662  0A01               	xorlw	1	; case 3
  5391  002664  B4D8               	btfsc	status,2,c
  5392  002666  D7A3               	goto	l21151
  5393  002668  0A07               	xorlw	7	; case 4
  5394  00266A  B4D8               	btfsc	status,2,c
  5395  00266C  D1A8               	goto	l21381
  5396  00266E  0A01               	xorlw	1	; case 5
  5397  002670  B4D8               	btfsc	status,2,c
  5398  002672  D7A5               	goto	l3380
  5399  002674  0A03               	xorlw	3	; case 6
  5400  002676  B4D8               	btfsc	status,2,c
  5401  002678  D7A6               	goto	l21163
  5402  00267A  0A01               	xorlw	1	; case 7
  5403  00267C  B4D8               	btfsc	status,2,c
  5404  00267E  D7AB               	goto	l21171
  5405  002680  0A0F               	xorlw	15	; case 8
  5406  002682  B4D8               	btfsc	status,2,c
  5407  002684  D7CC               	goto	l21177
  5408  002686  0A01               	xorlw	1	; case 9
  5409  002688  B4D8               	btfsc	status,2,c
  5410  00268A  D7D2               	goto	l21181
  5411  00268C  D198               	goto	l21381
  5412  00268E                     l21193:
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5416  00268E  0EBF               	movlw	low _menuConfiguration_stateMachine
  5417  002690  6E12               	movwf	sm_send_event@psm^0,c
  5418  002692  0E02               	movlw	high _menuConfiguration_stateMachine
  5419  002694  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5420  002696  0E00               	movlw	0
  5421  002698  6E15               	movwf	(sm_send_event@event+1)^0,c
  5422  00269A  0E14               	movlw	20
  5423  00269C  6E14               	movwf	sm_send_event@event^0,c
  5424  00269E  EC8F  F043         	call	_sm_send_event	;wreg free
  5425                           
  5426                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5427  0026A2  0EE3               	movlw	low _controlGate_stateMachine
  5428  0026A4  6E12               	movwf	sm_send_event@psm^0,c
  5429  0026A6  0E01               	movlw	high _controlGate_stateMachine
  5430  0026A8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5431  0026AA  0E00               	movlw	0
  5432  0026AC  6E15               	movwf	(sm_send_event@event+1)^0,c
  5433  0026AE  0E14               	movlw	20
  5434  0026B0  6E14               	movwf	sm_send_event@event^0,c
  5435  0026B2  EC8F  F043         	call	_sm_send_event	;wreg free
  5436                           
  5437                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5438  0026B6  0E01               	movlw	1
  5439  0026B8  0101               	movlb	1	; () banked
  5440  0026BA  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5441                           
  5442                           ; BSR set to: 1
  5443                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5444  0026BC  0E00               	movlw	0
  5445  0026BE  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5446                           
  5447                           ; BSR set to: 1
  5448                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5449  0026C0  0E01               	movlw	1
  5450  0026C2  EC97  F047         	call	_SaveNVM_VarSystem
  5451                           
  5452                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5453  0026C6  D17B               	goto	l21381
  5454  0026C8                     l21201:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5458  0026C8  0EBF               	movlw	low _menuConfiguration_stateMachine
  5459  0026CA  6E12               	movwf	sm_send_event@psm^0,c
  5460  0026CC  0E02               	movlw	high _menuConfiguration_stateMachine
  5461  0026CE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5462  0026D0  0E00               	movlw	0
  5463  0026D2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5464  0026D4  0E14               	movlw	20
  5465  0026D6  6E14               	movwf	sm_send_event@event^0,c
  5466  0026D8  EC8F  F043         	call	_sm_send_event	;wreg free
  5467                           
  5468                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5469  0026DC  0EE3               	movlw	low _controlGate_stateMachine
  5470  0026DE  6E12               	movwf	sm_send_event@psm^0,c
  5471  0026E0  0E01               	movlw	high _controlGate_stateMachine
  5472  0026E2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5473  0026E4  0E00               	movlw	0
  5474  0026E6  6E15               	movwf	(sm_send_event@event+1)^0,c
  5475  0026E8  0E14               	movlw	20
  5476  0026EA  6E14               	movwf	sm_send_event@event^0,c
  5477  0026EC  EC8F  F043         	call	_sm_send_event	;wreg free
  5478                           
  5479                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5480  0026F0  0E01               	movlw	1
  5481  0026F2  0101               	movlb	1	; () banked
  5482  0026F4  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5486  0026F6  0E01               	movlw	1
  5487  0026F8  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5488                           
  5489                           ; BSR set to: 1
  5490                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5491  0026FA  0E01               	movlw	1
  5492  0026FC  EC97  F047         	call	_SaveNVM_VarSystem
  5493                           
  5494                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5495  002700  D15E               	goto	l21381
  5496  002702                     l3390:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5500  002702  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5504  002706  0E03               	movlw	3
  5505  002708  EC13  F021         	call	_load_New_Menu
  5506                           
  5507                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5508  00270C  0EB4               	movlw	low (_var_sys_NVM+28)
  5509  00270E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5510  002710  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5511                           
  5512                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5513  002712  0E01               	movlw	1
  5514  002714  0100               	movlb	0	; () banked
  5515  002716  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5519  002718  0E02               	movlw	2
  5520  00271A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5524  00271C  0E00               	movlw	0
  5525  00271E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5526                           
  5527                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5528  002720  D14E               	goto	l21381
  5529  002722                     l3391:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5533  002722  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5537  002726  0E02               	movlw	2
  5538  002728  EC13  F021         	call	_load_New_Menu
  5539                           
  5540                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5541  00272C  0EB3               	movlw	low (_var_sys_NVM+27)
  5542  00272E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5543  002730  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5544                           
  5545                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5546  002732  0E01               	movlw	1
  5547  002734  0100               	movlb	0	; () banked
  5548  002736  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5552  002738  0E01               	movlw	1
  5553  00273A  D7EF               	goto	L14
  5554  00273C                     l21231:
  5555                           
  5556                           ; BSR set to: 0
  5557  00273C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5558  00273E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5559  002740  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5560                           
  5561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5562                           ; Switch size 1, requested type "simple"
  5563                           ; Number of cases is 1, Range of values is 0 to 0
  5564                           ; switch strategies available:
  5565                           ; Name         Instructions Cycles
  5566                           ; simple_byte            4     3 (average)
  5567                           ;	Chosen strategy is simple_byte
  5568  002742  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5569  002744  0A00               	xorlw	0	; case 0
  5570  002746  A4D8               	btfss	status,2,c
  5571  002748  D13A               	goto	l21381
  5572                           
  5573                           ; BSR set to: 0
  5574                           ; Switch size 1, requested type "simple"
  5575                           ; Number of cases is 4, Range of values is 0 to 3
  5576                           ; switch strategies available:
  5577                           ; Name         Instructions Cycles
  5578                           ; simple_byte           13     7 (average)
  5579                           ;	Chosen strategy is simple_byte
  5580  00274A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5581  00274C  0A00               	xorlw	0	; case 0
  5582  00274E  B4D8               	btfsc	status,2,c
  5583  002750  D79E               	goto	l21193
  5584  002752  0A01               	xorlw	1	; case 1
  5585  002754  B4D8               	btfsc	status,2,c
  5586  002756  D7B8               	goto	l21201
  5587  002758  0A03               	xorlw	3	; case 2
  5588  00275A  B4D8               	btfsc	status,2,c
  5589  00275C  D7D2               	goto	l3390
  5590  00275E  0A01               	xorlw	1	; case 3
  5591  002760  B4D8               	btfsc	status,2,c
  5592  002762  D7DF               	goto	l3391
  5593  002764  D12C               	goto	l21381
  5594  002766                     l21233:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5598  002766  0E98               	movlw	low _var_sys_NVM
  5599  002768  D001               	goto	L15
  5600  00276A                     l21235:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5604  00276A  0E99               	movlw	low (_var_sys_NVM+1)
  5605  00276C                     L15:
  5606  00276C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5607  00276E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5608                           
  5609                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5610  002770  D00E               	goto	l21241
  5611  002772                     l21239:
  5612                           
  5613                           ; BSR set to: 0
  5614  002772  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5615  002774  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5616  002776  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5617                           
  5618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5619                           ; Switch size 1, requested type "simple"
  5620                           ; Number of cases is 1, Range of values is 0 to 0
  5621                           ; switch strategies available:
  5622                           ; Name         Instructions Cycles
  5623                           ; simple_byte            4     3 (average)
  5624                           ;	Chosen strategy is simple_byte
  5625  002778  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5626  00277A  0A00               	xorlw	0	; case 0
  5627  00277C  A4D8               	btfss	status,2,c
  5628  00277E  D007               	goto	l21241
  5629                           
  5630                           ; BSR set to: 0
  5631                           ; Switch size 1, requested type "simple"
  5632                           ; Number of cases is 2, Range of values is 0 to 1
  5633                           ; switch strategies available:
  5634                           ; Name         Instructions Cycles
  5635                           ; simple_byte            7     4 (average)
  5636                           ;	Chosen strategy is simple_byte
  5637  002780  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5638  002782  0A00               	xorlw	0	; case 0
  5639  002784  B4D8               	btfsc	status,2,c
  5640  002786  D7EF               	goto	l21233
  5641  002788  0A01               	xorlw	1	; case 1
  5642  00278A  B4D8               	btfsc	status,2,c
  5643  00278C  D7EE               	goto	l21235
  5644  00278E                     l21241:
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5648  00278E  0E2D               	movlw	45
  5649  002790                     L29:
  5650  002790  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5651                           
  5652                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5653  002792  0E00               	movlw	0
  5654  002794  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5655  002796                     L19:
  5656                           
  5657                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5658  002796  0E01               	movlw	1
  5659  002798  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5663  00279A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5664  00279E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5665  0027A2  50DF               	movf	indf2,w,c
  5666  0027A4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5667                           
  5668                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5669  0027A6  D10B               	goto	l21381
  5670  0027A8                     l21245:
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5674  0027A8  0E09               	movlw	9
  5675  0027AA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5676                           
  5677                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5678  0027AC  0E00               	movlw	0
  5679  0027AE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5680                           
  5681                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5682  0027B0  D00F               	goto	l21261
  5683  0027B2                     l21247:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5687  0027B2  0E02               	movlw	2
  5688  0027B4  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5689  0027B6  D002               	goto	l21251
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5693  0027B8  0E00               	movlw	0
  5694  0027BA  D001               	goto	L16
  5695  0027BC                     l21251:
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5699  0027BC  0E09               	movlw	9
  5700  0027BE                     L16:
  5701  0027BE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5705  0027C0  0E9A               	movlw	low (_var_sys_NVM+2)
  5706  0027C2  D003               	goto	L18
  5707  0027C4                     l21255:
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5711  0027C4  0E9B               	movlw	low (_var_sys_NVM+3)
  5712  0027C6  D001               	goto	L18
  5713  0027C8                     l21257:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5717  0027C8  0EA7               	movlw	low (_var_sys_NVM+15)
  5718  0027CA                     L18:
  5719  0027CA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5720  0027CC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5721                           
  5722                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5723  0027CE  D7E3               	goto	L19
  5724  0027D0                     l21261:
  5725                           
  5726                           ; BSR set to: 0
  5727  0027D0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5728  0027D2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5729  0027D4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5730                           
  5731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5732                           ; Switch size 1, requested type "simple"
  5733                           ; Number of cases is 1, Range of values is 0 to 0
  5734                           ; switch strategies available:
  5735                           ; Name         Instructions Cycles
  5736                           ; simple_byte            4     3 (average)
  5737                           ;	Chosen strategy is simple_byte
  5738  0027D6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5739  0027D8  0A00               	xorlw	0	; case 0
  5740  0027DA  A4D8               	btfss	status,2,c
  5741  0027DC  D7DC               	goto	L19
  5742                           
  5743                           ; BSR set to: 0
  5744                           ; Switch size 1, requested type "simple"
  5745                           ; Number of cases is 3, Range of values is 0 to 2
  5746                           ; switch strategies available:
  5747                           ; Name         Instructions Cycles
  5748                           ; simple_byte           10     6 (average)
  5749                           ;	Chosen strategy is simple_byte
  5750  0027DE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5751  0027E0  0A00               	xorlw	0	; case 0
  5752  0027E2  B4D8               	btfsc	status,2,c
  5753  0027E4  D7E6               	goto	l21247
  5754  0027E6  0A01               	xorlw	1	; case 1
  5755  0027E8  B4D8               	btfsc	status,2,c
  5756  0027EA  D7EC               	goto	l21255
  5757  0027EC  0A03               	xorlw	3	; case 2
  5758  0027EE  B4D8               	btfsc	status,2,c
  5759  0027F0  D7EB               	goto	l21257
  5760  0027F2  D7D1               	goto	L19
  5761  0027F4                     l21267:
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5765  0027F4  0E9D               	movlw	low (_var_sys_NVM+5)
  5766  0027F6  D001               	goto	L20
  5767  0027F8                     l21269:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5771  0027F8  0E9E               	movlw	low (_var_sys_NVM+6)
  5772  0027FA                     L20:
  5773  0027FA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5774  0027FC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5775                           
  5776                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5777  0027FE  D00E               	goto	l21275
  5778  002800                     l21273:
  5779                           
  5780                           ; BSR set to: 0
  5781  002800  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5782  002802  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5783  002804  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5784                           
  5785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5786                           ; Switch size 1, requested type "simple"
  5787                           ; Number of cases is 1, Range of values is 0 to 0
  5788                           ; switch strategies available:
  5789                           ; Name         Instructions Cycles
  5790                           ; simple_byte            4     3 (average)
  5791                           ;	Chosen strategy is simple_byte
  5792  002806  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5793  002808  0A00               	xorlw	0	; case 0
  5794  00280A  A4D8               	btfss	status,2,c
  5795  00280C  D007               	goto	l21275
  5796                           
  5797                           ; BSR set to: 0
  5798                           ; Switch size 1, requested type "simple"
  5799                           ; Number of cases is 2, Range of values is 0 to 1
  5800                           ; switch strategies available:
  5801                           ; Name         Instructions Cycles
  5802                           ; simple_byte            7     4 (average)
  5803                           ;	Chosen strategy is simple_byte
  5804  00280E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5805  002810  0A00               	xorlw	0	; case 0
  5806  002812  B4D8               	btfsc	status,2,c
  5807  002814  D7EF               	goto	l21267
  5808  002816  0A01               	xorlw	1	; case 1
  5809  002818  B4D8               	btfsc	status,2,c
  5810  00281A  D7EE               	goto	l21269
  5811  00281C                     l21275:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5815  00281C  0E63               	movlw	99
  5816  00281E  D7B8               	goto	L29
  5817  002820                     l21279:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5821  002820  0E9F               	movlw	low (_var_sys_NVM+7)
  5822  002822  D034               	goto	L125
  5823  002824                     l21281:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5827  002824  0EA0               	movlw	low (_var_sys_NVM+8)
  5828  002826  D032               	goto	L125
  5829  002828                     l21285:
  5830                           
  5831                           ; BSR set to: 0
  5832  002828  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5833  00282A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5834  00282C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5835                           
  5836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5837                           ; Switch size 1, requested type "simple"
  5838                           ; Number of cases is 1, Range of values is 0 to 0
  5839                           ; switch strategies available:
  5840                           ; Name         Instructions Cycles
  5841                           ; simple_byte            4     3 (average)
  5842                           ;	Chosen strategy is simple_byte
  5843  00282E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5844  002830  0A00               	xorlw	0	; case 0
  5845  002832  A4D8               	btfss	status,2,c
  5846  002834  D02D               	goto	L124
  5847                           
  5848                           ; BSR set to: 0
  5849                           ; Switch size 1, requested type "simple"
  5850                           ; Number of cases is 2, Range of values is 0 to 1
  5851                           ; switch strategies available:
  5852                           ; Name         Instructions Cycles
  5853                           ; simple_byte            7     4 (average)
  5854                           ;	Chosen strategy is simple_byte
  5855  002836  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5856  002838  0A00               	xorlw	0	; case 0
  5857  00283A  B4D8               	btfsc	status,2,c
  5858  00283C  D7F1               	goto	l21279
  5859  00283E  0A01               	xorlw	1	; case 1
  5860  002840  B4D8               	btfsc	status,2,c
  5861  002842  D7F0               	goto	l21281
  5862  002844  D025               	goto	L124
  5863  002846                     l21291:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5867  002846  0EA1               	movlw	low (_var_sys_NVM+9)
  5868  002848  D021               	goto	L125
  5869  00284A                     l21293:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5873  00284A  0EA2               	movlw	low (_var_sys_NVM+10)
  5874  00284C  D01F               	goto	L125
  5875  00284E                     l21295:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5879  00284E  0EA3               	movlw	low (_var_sys_NVM+11)
  5880  002850  D01D               	goto	L125
  5881  002852                     l21297:
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5885  002852  0EAE               	movlw	low (_var_sys_NVM+22)
  5886  002854  D01B               	goto	L125
  5887  002856                     l21301:
  5888                           
  5889                           ; BSR set to: 0
  5890  002856  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5891  002858  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5892  00285A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5893                           
  5894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5895                           ; Switch size 1, requested type "simple"
  5896                           ; Number of cases is 1, Range of values is 0 to 0
  5897                           ; switch strategies available:
  5898                           ; Name         Instructions Cycles
  5899                           ; simple_byte            4     3 (average)
  5900                           ;	Chosen strategy is simple_byte
  5901  00285C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5902  00285E  0A00               	xorlw	0	; case 0
  5903  002860  A4D8               	btfss	status,2,c
  5904  002862  D016               	goto	L124
  5905                           
  5906                           ; BSR set to: 0
  5907                           ; Switch size 1, requested type "simple"
  5908                           ; Number of cases is 4, Range of values is 0 to 3
  5909                           ; switch strategies available:
  5910                           ; Name         Instructions Cycles
  5911                           ; simple_byte           13     7 (average)
  5912                           ;	Chosen strategy is simple_byte
  5913  002864  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5914  002866  0A00               	xorlw	0	; case 0
  5915  002868  B4D8               	btfsc	status,2,c
  5916  00286A  D7ED               	goto	l21291
  5917  00286C  0A01               	xorlw	1	; case 1
  5918  00286E  B4D8               	btfsc	status,2,c
  5919  002870  D7EC               	goto	l21293
  5920  002872  0A03               	xorlw	3	; case 2
  5921  002874  B4D8               	btfsc	status,2,c
  5922  002876  D7EB               	goto	l21295
  5923  002878  0A01               	xorlw	1	; case 3
  5924  00287A  B4D8               	btfsc	status,2,c
  5925  00287C  D7EA               	goto	l21297
  5926  00287E  D008               	goto	L124
  5927  002880                     l21307:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5931  002880  0EA8               	movlw	low (_var_sys_NVM+16)
  5932  002882  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5933  002884  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5937  002886  0E02               	movlw	2
  5938  002888  D783               	goto	L29
  5939  00288A                     l21313:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5943  00288A  0EA9               	movlw	low (_var_sys_NVM+17)
  5944  00288C                     L125:
  5945  00288C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5946  00288E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5947  002890                     L124:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5951  002890  0E01               	movlw	1
  5952  002892  D77E               	goto	L29
  5953  002894                     l21321:
  5954                           
  5955                           ; BSR set to: 0
  5956  002894  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5957  002896  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5958  002898  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5959                           
  5960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5961                           ; Switch size 1, requested type "simple"
  5962                           ; Number of cases is 1, Range of values is 0 to 0
  5963                           ; switch strategies available:
  5964                           ; Name         Instructions Cycles
  5965                           ; simple_byte            4     3 (average)
  5966                           ;	Chosen strategy is simple_byte
  5967  00289A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5968  00289C  0A00               	xorlw	0	; case 0
  5969  00289E  A4D8               	btfss	status,2,c
  5970  0028A0  D77A               	goto	L19
  5971                           
  5972                           ; BSR set to: 0
  5973                           ; Switch size 1, requested type "simple"
  5974                           ; Number of cases is 2, Range of values is 0 to 1
  5975                           ; switch strategies available:
  5976                           ; Name         Instructions Cycles
  5977                           ; simple_byte            7     4 (average)
  5978                           ;	Chosen strategy is simple_byte
  5979  0028A2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5980  0028A4  0A00               	xorlw	0	; case 0
  5981  0028A6  B4D8               	btfsc	status,2,c
  5982  0028A8  D7EB               	goto	l21307
  5983  0028AA  0A01               	xorlw	1	; case 1
  5984  0028AC  B4D8               	btfsc	status,2,c
  5985  0028AE  D7ED               	goto	l21313
  5986  0028B0  D772               	goto	L19
  5987  0028B2                     l21327:
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5991  0028B2  0EAA               	movlw	low (_var_sys_NVM+18)
  5992  0028B4  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5993  0028B6  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5997  0028B8  0E09               	movlw	9
  5998  0028BA  D76A               	goto	L29
  5999  0028BC                     l21333:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6003  0028BC  0EAB               	movlw	low (_var_sys_NVM+19)
  6004  0028BE  D7FA               	goto	L27
  6005  0028C0                     l21341:
  6006                           
  6007                           ; BSR set to: 0
  6008  0028C0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6009  0028C2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6010  0028C4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6011                           
  6012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6013                           ; Switch size 1, requested type "simple"
  6014                           ; Number of cases is 1, Range of values is 0 to 0
  6015                           ; switch strategies available:
  6016                           ; Name         Instructions Cycles
  6017                           ; simple_byte            4     3 (average)
  6018                           ;	Chosen strategy is simple_byte
  6019  0028C6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6020  0028C8  0A00               	xorlw	0	; case 0
  6021  0028CA  A4D8               	btfss	status,2,c
  6022  0028CC  D764               	goto	L19
  6023                           
  6024                           ; BSR set to: 0
  6025                           ; Switch size 1, requested type "simple"
  6026                           ; Number of cases is 2, Range of values is 0 to 1
  6027                           ; switch strategies available:
  6028                           ; Name         Instructions Cycles
  6029                           ; simple_byte            7     4 (average)
  6030                           ;	Chosen strategy is simple_byte
  6031  0028CE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6032  0028D0  0A00               	xorlw	0	; case 0
  6033  0028D2  B4D8               	btfsc	status,2,c
  6034  0028D4  D7EE               	goto	l21327
  6035  0028D6  0A01               	xorlw	1	; case 1
  6036  0028D8  B4D8               	btfsc	status,2,c
  6037  0028DA  D7F0               	goto	l21333
  6038  0028DC  D75C               	goto	L19
  6039  0028DE                     l21347:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6043  0028DE  0EF9               	movlw	low setValueToEdit@value
  6044  0028E0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6045  0028E2  0E01               	movlw	high setValueToEdit@value
  6046  0028E4  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6050  0028E6  0E00               	movlw	0
  6051  0028E8  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6052  0028EA  D00D               	goto	l21357
  6053  0028EC                     l3438:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6057  0028EC  C0DF  F1F9         	movff	setValueToEdit@posindex,setValueToEdit@value
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6061  0028F0  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6062  0028F4  0101               	movlb	1	; () banked
  6063  0028F6  5168               	movf	(_menu_st+23)& (0+255),w,b
  6064  0028F8  ECE5  F03C         	call	_cmdMemoryIsEmpty
  6065  0028FC  0900               	iorlw	0
  6066  0028FE  A4D8               	btfss	status,2,c
  6067  002900  D008               	goto	u24520
  6068                           
  6069                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6070  002902  0100               	movlb	0	; () banked
  6071  002904  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6072  002906                     l21357:
  6073                           
  6074                           ; BSR set to: 0
  6075  002906  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6076  00290A  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6077  00290C  5CDE               	subwf	postinc2,w,c
  6078  00290E  B0D8               	btfsc	status,0,c
  6079  002910  D7ED               	goto	l3438
  6080  002912                     u24520:
  6081                           
  6082                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6083  002912  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6084  002916  D005               	goto	L28
  6085  002918                     l21361:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6089  002918  0EB9               	movlw	low (_var_sys_NVM+33)
  6090  00291A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6091  00291C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6095  00291E  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6096  002922                     L28:
  6097  002922  50DF               	movf	indf2,w,c
  6098  002924  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6099                           
  6100                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6101  002926  D00E               	goto	l21369
  6102  002928                     l21367:
  6103                           
  6104                           ; BSR set to: 0
  6105  002928  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6106  00292A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6107  00292C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6108                           
  6109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6110                           ; Switch size 1, requested type "simple"
  6111                           ; Number of cases is 1, Range of values is 0 to 0
  6112                           ; switch strategies available:
  6113                           ; Name         Instructions Cycles
  6114                           ; simple_byte            4     3 (average)
  6115                           ;	Chosen strategy is simple_byte
  6116  00292E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6117  002930  0A00               	xorlw	0	; case 0
  6118  002932  A4D8               	btfss	status,2,c
  6119  002934  D007               	goto	l21369
  6120                           
  6121                           ; BSR set to: 0
  6122                           ; Switch size 1, requested type "simple"
  6123                           ; Number of cases is 2, Range of values is 0 to 1
  6124                           ; switch strategies available:
  6125                           ; Name         Instructions Cycles
  6126                           ; simple_byte            7     4 (average)
  6127                           ;	Chosen strategy is simple_byte
  6128  002936  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6129  002938  0A00               	xorlw	0	; case 0
  6130  00293A  B4D8               	btfsc	status,2,c
  6131  00293C  D7D0               	goto	l21347
  6132  00293E  0A01               	xorlw	1	; case 1
  6133  002940  B4D8               	btfsc	status,2,c
  6134  002942  D7EA               	goto	l21361
  6135  002944                     l21369:
  6136                           
  6137                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6138  002944  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6139  002948  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6140  00294C  50DF               	movf	indf2,w,c
  6141  00294E  6E46               	movwf	_edit_Param^0,c	;volatile
  6142                           
  6143                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6144  002950  0E00               	movlw	0
  6145  002952  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6146                           
  6147                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6148  002954  0E01               	movlw	1
  6149  002956  0100               	movlb	0	; () banked
  6150  002958  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6151                           
  6152                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6153  00295A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6154  00295E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6155  002962  50DF               	movf	indf2,w,c
  6156  002964  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6160  002966  EC77  F04A         	call	_InitReceiver	;wreg free
  6161                           
  6162                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6163  00296A  D029               	goto	l21381
  6164  00296C                     l21379:
  6165                           
  6166                           ; BSR set to: 0
  6167  00296C  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6168  00296E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6169  002970  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6170                           
  6171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6172                           ; Switch size 1, requested type "simple"
  6173                           ; Number of cases is 1, Range of values is 0 to 0
  6174                           ; switch strategies available:
  6175                           ; Name         Instructions Cycles
  6176                           ; simple_byte            4     3 (average)
  6177                           ;	Chosen strategy is simple_byte
  6178  002972  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6179  002974  0A00               	xorlw	0	; case 0
  6180  002976  A4D8               	btfss	status,2,c
  6181  002978  D022               	goto	l21381
  6182                           
  6183                           ; BSR set to: 0
  6184                           ; Switch size 1, requested type "simple"
  6185                           ; Number of cases is 11, Range of values is 0 to 12
  6186                           ; switch strategies available:
  6187                           ; Name         Instructions Cycles
  6188                           ; simple_byte           34    18 (average)
  6189                           ;	Chosen strategy is simple_byte
  6190  00297A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6191  00297C  0A00               	xorlw	0	; case 0
  6192  00297E  B4D8               	btfsc	status,2,c
  6193  002980  D5A1               	goto	l3358
  6194  002982  0A01               	xorlw	1	; case 1
  6195  002984  B4D8               	btfsc	status,2,c
  6196  002986  D5FE               	goto	l3372
  6197  002988  0A05               	xorlw	5	; case 4
  6198  00298A  B4D8               	btfsc	status,2,c
  6199  00298C  D6D7               	goto	l21231
  6200  00298E  0A01               	xorlw	1	; case 5
  6201  002990  B4D8               	btfsc	status,2,c
  6202  002992  D6EF               	goto	l21239
  6203  002994  0A03               	xorlw	3	; case 6
  6204  002996  B4D8               	btfsc	status,2,c
  6205  002998  D707               	goto	l21245
  6206  00299A  0A01               	xorlw	1	; case 7
  6207  00299C  B4D8               	btfsc	status,2,c
  6208  00299E  D730               	goto	l21273
  6209  0029A0  0A0F               	xorlw	15	; case 8
  6210  0029A2  B4D8               	btfsc	status,2,c
  6211  0029A4  D741               	goto	l21285
  6212  0029A6  0A01               	xorlw	1	; case 9
  6213  0029A8  B4D8               	btfsc	status,2,c
  6214  0029AA  D755               	goto	l21301
  6215  0029AC  0A03               	xorlw	3	; case 10
  6216  0029AE  B4D8               	btfsc	status,2,c
  6217  0029B0  D771               	goto	l21321
  6218  0029B2  0A01               	xorlw	1	; case 11
  6219  0029B4  B4D8               	btfsc	status,2,c
  6220  0029B6  D784               	goto	l21341
  6221  0029B8  0A07               	xorlw	7	; case 12
  6222  0029BA  B4D8               	btfsc	status,2,c
  6223  0029BC  D7B5               	goto	l21367
  6224  0029BE                     l21381:
  6225                           
  6226                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6227  0029BE  0100               	movlb	0	; () banked
  6228  0029C0  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6229                           
  6230                           ; BSR set to: 0
  6231  0029C2  0012               	return		;funcret
  6232  0029C4                     __end_of_setValueToEdit:
  6233                           	callstack 0
  6234                           
  6235 ;; *************** function _load_New_Menu *****************
  6236 ;; Defined at:
  6237 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  Menu            1    wreg     enum E10813
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  Menu            1   33[COMRAM] enum E10813
  6242 ;;  i               1   34[COMRAM] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;Total ram usage:        4 bytes
  6257 ;; Hardware stack levels used: 1
  6258 ;; Hardware stack levels required when called: 5
  6259 ;; This function calls:
  6260 ;;		_SetSegmentValueIntermitentMain
  6261 ;;		_SetSegmentValueMain
  6262 ;; This function is called by:
  6263 ;;		_sm_execute_main
  6264 ;;		_sm_execute_menuConfiguration
  6265 ;;		_setValueToEdit
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text4
  6270  004226                     __ptext4:
  6271                           	callstack 0
  6272  004226                     _load_New_Menu:
  6273                           	callstack 22
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;incstack = 0
  6277                           ;load_New_Menu@Menu stored from wreg
  6278  004226  6E22               	movwf	load_New_Menu@Menu^0,c
  6279                           
  6280                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6281  004228  0E00               	movlw	0
  6282  00422A  0101               	movlb	1	; () banked
  6283  00422C  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6284  00422E  0E64               	movlw	100
  6285  004230  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6286                           
  6287                           ; BSR set to: 1
  6288                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6289  004232  5022               	movf	load_New_Menu@Menu^0,w,c
  6290  004234  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6291  004236  B4D8               	btfsc	status,2,c
  6292  004238  D006               	goto	l20389
  6293                           
  6294                           ; BSR set to: 1
  6295  00423A  0E01               	movlw	1
  6296  00423C  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6297  00423E  D003               	goto	l20389
  6298                           
  6299                           ; BSR set to: 1
  6300                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6301  004240  0E00               	movlw	0
  6302  004242  6F68               	movwf	(_menu_st+23)& (0+255),b
  6303                           
  6304                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6305  004244  D005               	goto	l20393
  6306  004246                     l20389:
  6307                           
  6308                           ; BSR set to: 1
  6309  004246  0E02               	movlw	2
  6310  004248  6022               	cpfslt	load_New_Menu@Menu^0,c
  6311  00424A  D002               	goto	l20393
  6312                           
  6313                           ; BSR set to: 1
  6314                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6315  00424C  C169  F168         	movff	_menu_st+24,_menu_st+23
  6316  004250                     l20393:
  6317                           
  6318                           ; BSR set to: 1
  6319                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6320  004250  0E00               	movlw	0
  6321  004252  6F65               	movwf	(_menu_st+20)& (0+255),b
  6322                           
  6323                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6324  004254  D0F6               	goto	l20445
  6325  004256                     l20395:
  6326                           
  6327                           ; BSR set to: 1
  6328                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6329  004256  0E00               	movlw	0
  6330  004258  6F66               	movwf	(_menu_st+21)& (0+255),b
  6331                           
  6332                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6333  00425A  0E0A               	movlw	10
  6334  00425C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6335                           
  6336                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6337  00425E  0E00               	movlw	0
  6338  004260  6F69               	movwf	(_menu_st+24)& (0+255),b
  6339                           
  6340                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6341  004262  0E00               	movlw	0
  6342  004264  6E23               	movwf	load_New_Menu@i^0,c
  6343  004266                     l20401:
  6344                           
  6345                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6346  004266  5023               	movf	load_New_Menu@i^0,w,c
  6347  004268  0D02               	mullw	2
  6348  00426A  0E51               	movlw	low _menu_st
  6349  00426C  24F3               	addwf	243,w,c
  6350  00426E  6ED9               	movwf	fsr2l,c
  6351  004270  0E01               	movlw	high _menu_st
  6352  004272  20F4               	addwfc	prodh,w,c
  6353  004274  6EDA               	movwf	fsr2h,c
  6354  004276  0E10               	movlw	16
  6355  004278  6EDF               	movwf	indf2,c
  6356                           
  6357                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6358  00427A  5023               	movf	load_New_Menu@i^0,w,c
  6359  00427C  0D02               	mullw	2
  6360  00427E  0E52               	movlw	low (_menu_st+1)
  6361  004280  24F3               	addwf	243,w,c
  6362  004282  6ED9               	movwf	fsr2l,c
  6363  004284  0E01               	movlw	high (_menu_st+1)
  6364  004286  20F4               	addwfc	prodh,w,c
  6365  004288  6EDA               	movwf	fsr2h,c
  6366  00428A  C023  FFDF         	movff	load_New_Menu@i,indf2
  6367                           
  6368                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6369  00428E  2A23               	incf	load_New_Menu@i^0,f,c
  6370  004290  0E09               	movlw	9
  6371  004292  6423               	cpfsgt	load_New_Menu@i^0,c
  6372  004294  D7E8               	goto	l20401
  6373  004296  D107               	goto	l20447
  6374  004298                     l20407:
  6375                           
  6376                           ; BSR set to: 1
  6377                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6378  004298  0E01               	movlw	1
  6379  00429A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6380                           
  6381                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6382  00429C  0E0A               	movlw	10
  6383  00429E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6384                           
  6385                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6386  0042A0  0E00               	movlw	0
  6387  0042A2  6F69               	movwf	(_menu_st+24)& (0+255),b
  6388                           
  6389                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6390  0042A4  0E00               	movlw	0
  6391  0042A6  6E23               	movwf	load_New_Menu@i^0,c
  6392  0042A8                     l20413:
  6393                           
  6394                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6395  0042A8  5023               	movf	load_New_Menu@i^0,w,c
  6396  0042AA  0D02               	mullw	2
  6397  0042AC  0E51               	movlw	low _menu_st
  6398  0042AE  24F3               	addwf	243,w,c
  6399  0042B0  6ED9               	movwf	fsr2l,c
  6400  0042B2  0E01               	movlw	high _menu_st
  6401  0042B4  20F4               	addwfc	prodh,w,c
  6402  0042B6  6EDA               	movwf	fsr2h,c
  6403  0042B8  0E0E               	movlw	14
  6404  0042BA  6EDF               	movwf	indf2,c
  6405                           
  6406                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6407  0042BC  5023               	movf	load_New_Menu@i^0,w,c
  6408  0042BE  0D02               	mullw	2
  6409  0042C0  0E52               	movlw	low (_menu_st+1)
  6410  0042C2  24F3               	addwf	243,w,c
  6411  0042C4  6ED9               	movwf	fsr2l,c
  6412  0042C6  0E01               	movlw	high (_menu_st+1)
  6413  0042C8  20F4               	addwfc	prodh,w,c
  6414  0042CA  6EDA               	movwf	fsr2h,c
  6415  0042CC  C023  FFDF         	movff	load_New_Menu@i,indf2
  6416                           
  6417                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6418  0042D0  2A23               	incf	load_New_Menu@i^0,f,c
  6419  0042D2  0E09               	movlw	9
  6420  0042D4  6423               	cpfsgt	load_New_Menu@i^0,c
  6421  0042D6  D7E8               	goto	l20413
  6422  0042D8  D0E6               	goto	l20447
  6423  0042DA                     l20419:
  6424                           
  6425                           ; BSR set to: 1
  6426                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6427  0042DA  0E00               	movlw	0
  6428  0042DC  6F65               	movwf	(_menu_st+20)& (0+255),b
  6429                           
  6430                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6431  0042DE  0E04               	movlw	4
  6432  0042E0  6F66               	movwf	(_menu_st+21)& (0+255),b
  6433                           
  6434                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6435  0042E2  0E04               	movlw	4
  6436  0042E4  6F67               	movwf	(_menu_st+22)& (0+255),b
  6437                           
  6438                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6439  0042E6  0E0A               	movlw	10
  6440  0042E8  6F51               	movwf	_menu_st& (0+255),b
  6441                           
  6442                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6443  0042EA  0E13               	movlw	19
  6444  0042EC  6F52               	movwf	(_menu_st+1)& (0+255),b
  6445                           
  6446                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6447  0042EE  0E17               	movlw	23
  6448  0042F0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6449                           
  6450                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6451  0042F2  0E0A               	movlw	10
  6452  0042F4  6F54               	movwf	(_menu_st+3)& (0+255),b
  6453                           
  6454                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6455  0042F6  0E05               	movlw	5
  6456  0042F8  6F55               	movwf	(_menu_st+4)& (0+255),b
  6457                           
  6458                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6459  0042FA  0E21               	movlw	33
  6460  0042FC  6F56               	movwf	(_menu_st+5)& (0+255),b
  6461                           
  6462                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6463  0042FE  0E0D               	movlw	13
  6464  004300  6F57               	movwf	(_menu_st+6)& (0+255),b
  6465                           
  6466                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6467  004302  0E01               	movlw	1
  6468  004304  D051               	goto	L31
  6469  004306                     l20421:
  6470                           
  6471                           ; BSR set to: 1
  6472                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6473  004306  0E00               	movlw	0
  6474  004308  6F65               	movwf	(_menu_st+20)& (0+255),b
  6475                           
  6476                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6477  00430A  0E05               	movlw	5
  6478  00430C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6479                           
  6480                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6481  00430E  0E02               	movlw	2
  6482  004310  6F67               	movwf	(_menu_st+22)& (0+255),b
  6483                           
  6484                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6485  004312  0E0D               	movlw	13
  6486  004314  6F51               	movwf	_menu_st& (0+255),b
  6487                           
  6488                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6489  004316  0E0A               	movlw	10
  6490  004318  6F52               	movwf	(_menu_st+1)& (0+255),b
  6491                           
  6492                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6493  00431A  0E0D               	movlw	13
  6494  00431C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6495                           
  6496                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6497  00431E  0E0F               	movlw	15
  6498  004320  D08E               	goto	L38
  6499  004322                     l20423:
  6500                           
  6501                           ; BSR set to: 1
  6502                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6503  004322  0E00               	movlw	0
  6504  004324  6F65               	movwf	(_menu_st+20)& (0+255),b
  6505                           
  6506                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6507  004326  0E06               	movlw	6
  6508  004328  6F66               	movwf	(_menu_st+21)& (0+255),b
  6509                           
  6510                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6511  00432A  0E03               	movlw	3
  6512  00432C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6513                           
  6514                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6515  00432E  0E0F               	movlw	15
  6516  004330  6F51               	movwf	_menu_st& (0+255),b
  6517                           
  6518                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6519  004332  0E00               	movlw	0
  6520  004334  6F52               	movwf	(_menu_st+1)& (0+255),b
  6521                           
  6522                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6523  004336  0E0F               	movlw	15
  6524  004338  6F53               	movwf	(_menu_st+2)& (0+255),b
  6525                           
  6526                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6527  00433A  0E05               	movlw	5
  6528  00433C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6531  00433E  0E0F               	movlw	15
  6532  004340  6F55               	movwf	(_menu_st+4)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6535  004342  0E0D               	movlw	13
  6536  004344  D073               	goto	L33
  6537  004346                     l20425:
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6541  004346  0E00               	movlw	0
  6542  004348  6F65               	movwf	(_menu_st+20)& (0+255),b
  6543                           
  6544                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6545  00434A  0E07               	movlw	7
  6546  00434C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6547                           
  6548                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6549  00434E  0E02               	movlw	2
  6550  004350  6F67               	movwf	(_menu_st+22)& (0+255),b
  6551                           
  6552                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6553  004352  0E0A               	movlw	10
  6554  004354  6F51               	movwf	_menu_st& (0+255),b
  6555                           
  6556                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6557  004356  0E0F               	movlw	15
  6558  004358  6F52               	movwf	(_menu_st+1)& (0+255),b
  6559                           
  6560                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6561  00435A  0E0A               	movlw	10
  6562  00435C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6565  00435E  0E10               	movlw	16
  6566  004360  D06E               	goto	L38
  6567  004362                     l20427:
  6568                           
  6569                           ; BSR set to: 1
  6570                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6571  004362  0E00               	movlw	0
  6572  004364  6F65               	movwf	(_menu_st+20)& (0+255),b
  6573                           
  6574                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6575  004366  0E08               	movlw	8
  6576  004368  6F66               	movwf	(_menu_st+21)& (0+255),b
  6577                           
  6578                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6579  00436A  0E02               	movlw	2
  6580  00436C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6581                           
  6582                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6583  00436E  0E12               	movlw	18
  6584  004370  6F51               	movwf	_menu_st& (0+255),b
  6585                           
  6586                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6587  004372  0E0E               	movlw	14
  6588  004374  6F52               	movwf	(_menu_st+1)& (0+255),b
  6589                           
  6590                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6591  004376  0E11               	movlw	17
  6592  004378  6F53               	movwf	(_menu_st+2)& (0+255),b
  6593                           
  6594                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6595  00437A  0E0C               	movlw	12
  6596  00437C  D060               	goto	L38
  6597  00437E                     l20429:
  6598                           
  6599                           ; BSR set to: 1
  6600                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6601  00437E  0E00               	movlw	0
  6602  004380  6F65               	movwf	(_menu_st+20)& (0+255),b
  6603                           
  6604                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6605  004382  0E09               	movlw	9
  6606  004384  6F66               	movwf	(_menu_st+21)& (0+255),b
  6607                           
  6608                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6609  004386  0E04               	movlw	4
  6610  004388  6F67               	movwf	(_menu_st+22)& (0+255),b
  6611                           
  6612                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6613  00438A  0E12               	movlw	18
  6614  00438C  6F51               	movwf	_menu_st& (0+255),b
  6615                           
  6616                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6617  00438E  0E0A               	movlw	10
  6618  004390  6F52               	movwf	(_menu_st+1)& (0+255),b
  6619                           
  6620                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6621  004392  0E11               	movlw	17
  6622  004394  6F53               	movwf	(_menu_st+2)& (0+255),b
  6623                           
  6624                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6625  004396  0E0A               	movlw	10
  6626  004398  6F54               	movwf	(_menu_st+3)& (0+255),b
  6627                           
  6628                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6629  00439A  0E11               	movlw	17
  6630  00439C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6631                           
  6632                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6633  00439E  0E12               	movlw	18
  6634  0043A0  6F56               	movwf	(_menu_st+5)& (0+255),b
  6635                           
  6636                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6637  0043A2  0E05               	movlw	5
  6638  0043A4  6F57               	movwf	(_menu_st+6)& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6641  0043A6  0E15               	movlw	21
  6642  0043A8                     L31:
  6643  0043A8  6F58               	movwf	(_menu_st+7)& (0+255),b
  6644                           
  6645                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6646  0043AA  D07D               	goto	l20447
  6647  0043AC                     l20431:
  6648                           
  6649                           ; BSR set to: 1
  6650                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6651  0043AC  0E01               	movlw	1
  6652  0043AE  6F65               	movwf	(_menu_st+20)& (0+255),b
  6653                           
  6654                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6655  0043B0  0E0A               	movlw	10
  6656  0043B2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6657                           
  6658                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6659  0043B4  0E02               	movlw	2
  6660  0043B6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6661                           
  6662                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6663  0043B8  0E11               	movlw	17
  6664  0043BA  6F51               	movwf	_menu_st& (0+255),b
  6665                           
  6666                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6667  0043BC  0E10               	movlw	16
  6668  0043BE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6669                           
  6670                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6671  0043C0  0E10               	movlw	16
  6672  0043C2  6F53               	movwf	(_menu_st+2)& (0+255),b
  6673                           
  6674                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6675  0043C4  0E12               	movlw	18
  6676  0043C6  D03B               	goto	L38
  6677  0043C8                     l20433:
  6678                           
  6679                           ; BSR set to: 1
  6680                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6681  0043C8  0E01               	movlw	1
  6682  0043CA  6F65               	movwf	(_menu_st+20)& (0+255),b
  6683                           
  6684                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6685  0043CC  0E0B               	movlw	11
  6686  0043CE  6F66               	movwf	(_menu_st+21)& (0+255),b
  6687                           
  6688                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6689  0043D0  0E02               	movlw	2
  6690  0043D2  6F67               	movwf	(_menu_st+22)& (0+255),b
  6691                           
  6692                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6693  0043D4  0E14               	movlw	20
  6694  0043D6  6F51               	movwf	_menu_st& (0+255),b
  6695                           
  6696                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6697  0043D8  0E24               	movlw	36
  6698  0043DA  6F52               	movwf	(_menu_st+1)& (0+255),b
  6699                           
  6700                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6701  0043DC  0E14               	movlw	20
  6702  0043DE  6F53               	movwf	(_menu_st+2)& (0+255),b
  6703                           
  6704                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6705  0043E0  0E23               	movlw	35
  6706  0043E2  D02D               	goto	L38
  6707  0043E4                     l20435:
  6708                           
  6709                           ; BSR set to: 1
  6710                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6711  0043E4  0E0C               	movlw	12
  6712  0043E6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6713                           
  6714                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6715  0043E8  0E00               	movlw	0
  6716  0043EA  6F68               	movwf	(_menu_st+23)& (0+255),b
  6717                           
  6718                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6719  0043EC  0E02               	movlw	2
  6720  0043EE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6721                           
  6722                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6723  0043F0  0E05               	movlw	5
  6724  0043F2  6F51               	movwf	_menu_st& (0+255),b
  6725                           
  6726                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6727  0043F4  0E13               	movlw	19
  6728  0043F6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6729                           
  6730                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6731  0043F8  0E05               	movlw	5
  6732  0043FA  D7B0               	goto	L39
  6733  0043FC                     l20437:
  6734                           
  6735                           ; BSR set to: 1
  6736                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6737  0043FC  0E0D               	movlw	13
  6738  0043FE  6F66               	movwf	(_menu_st+21)& (0+255),b
  6739                           
  6740                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6741  004400  0E01               	movlw	1
  6742  004402  6F67               	movwf	(_menu_st+22)& (0+255),b
  6743                           
  6744                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6745  004404  0E0D               	movlw	13
  6746  004406  6F51               	movwf	_menu_st& (0+255),b
  6747                           
  6748                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6749  004408  0E12               	movlw	18
  6750  00440A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6751                           
  6752                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6753  00440C  0E00               	movlw	0
  6754  00440E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6755  004410  0E3C               	movlw	60
  6756  004412  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6757                           
  6758                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6759  004414  D048               	goto	l20447
  6760  004416                     l20439:
  6761                           
  6762                           ; BSR set to: 1
  6763                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6764  004416  0E05               	movlw	5
  6765  004418  6F51               	movwf	_menu_st& (0+255),b
  6766                           
  6767                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6768  00441A  0E0C               	movlw	12
  6769  00441C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6770                           
  6771                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6772  00441E  0E05               	movlw	5
  6773  004420  6F53               	movwf	(_menu_st+2)& (0+255),b
  6774                           
  6775                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6776  004422  0E0E               	movlw	14
  6777  004424  6F54               	movwf	(_menu_st+3)& (0+255),b
  6778                           
  6779                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6780  004426  0E22               	movlw	34
  6781  004428  6F55               	movwf	(_menu_st+4)& (0+255),b
  6782                           
  6783                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6784  00442A  0E14               	movlw	20
  6785  00442C                     L33:
  6786  00442C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6787                           
  6788                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6789  00442E  D03B               	goto	l20447
  6790  004430                     l20441:
  6791                           
  6792                           ; BSR set to: 1
  6793                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6794  004430  0E12               	movlw	18
  6795  004432  6F51               	movwf	_menu_st& (0+255),b
  6796                           
  6797                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6798  004434  0E0E               	movlw	14
  6799  004436  6F52               	movwf	(_menu_st+1)& (0+255),b
  6800                           
  6801                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6802  004438  0E14               	movlw	20
  6803  00443A  6F53               	movwf	(_menu_st+2)& (0+255),b
  6804                           
  6805                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6806  00443C  0E15               	movlw	21
  6807  00443E                     L38:
  6808  00443E  6F54               	movwf	(_menu_st+3)& (0+255),b
  6809                           
  6810                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6811  004440  D032               	goto	l20447
  6812  004442                     l20445:
  6813                           
  6814                           ; BSR set to: 1
  6815  004442  5022               	movf	load_New_Menu@Menu^0,w,c
  6816  004444  6E20               	movwf	??_load_New_Menu^0,c
  6817  004446  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6818                           
  6819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6820                           ; Switch size 1, requested type "simple"
  6821                           ; Number of cases is 1, Range of values is 0 to 0
  6822                           ; switch strategies available:
  6823                           ; Name         Instructions Cycles
  6824                           ; simple_byte            4     3 (average)
  6825                           ;	Chosen strategy is simple_byte
  6826  004448  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6827  00444A  0A00               	xorlw	0	; case 0
  6828  00444C  A4D8               	btfss	status,2,c
  6829  00444E  D02B               	goto	l20447
  6830                           
  6831                           ; BSR set to: 1
  6832                           ; Switch size 1, requested type "simple"
  6833                           ; Number of cases is 14, Range of values is 0 to 13
  6834                           ; switch strategies available:
  6835                           ; Name         Instructions Cycles
  6836                           ; simple_byte           43    22 (average)
  6837                           ;	Chosen strategy is simple_byte
  6838  004450  5020               	movf	??_load_New_Menu^0,w,c
  6839  004452  0A00               	xorlw	0	; case 0
  6840  004454  B4D8               	btfsc	status,2,c
  6841  004456  D6FF               	goto	l20395
  6842  004458  0A01               	xorlw	1	; case 1
  6843  00445A  B4D8               	btfsc	status,2,c
  6844  00445C  D71D               	goto	l20407
  6845  00445E  0A03               	xorlw	3	; case 2
  6846  004460  B4D8               	btfsc	status,2,c
  6847  004462  D7E6               	goto	l20441
  6848  004464  0A01               	xorlw	1	; case 3
  6849  004466  B4D8               	btfsc	status,2,c
  6850  004468  D7D6               	goto	l20439
  6851  00446A  0A07               	xorlw	7	; case 4
  6852  00446C  B4D8               	btfsc	status,2,c
  6853  00446E  D735               	goto	l20419
  6854  004470  0A01               	xorlw	1	; case 5
  6855  004472  B4D8               	btfsc	status,2,c
  6856  004474  D748               	goto	l20421
  6857  004476  0A03               	xorlw	3	; case 6
  6858  004478  B4D8               	btfsc	status,2,c
  6859  00447A  D753               	goto	l20423
  6860  00447C  0A01               	xorlw	1	; case 7
  6861  00447E  B4D8               	btfsc	status,2,c
  6862  004480  D762               	goto	l20425
  6863  004482  0A0F               	xorlw	15	; case 8
  6864  004484  B4D8               	btfsc	status,2,c
  6865  004486  D76D               	goto	l20427
  6866  004488  0A01               	xorlw	1	; case 9
  6867  00448A  B4D8               	btfsc	status,2,c
  6868  00448C  D778               	goto	l20429
  6869  00448E  0A03               	xorlw	3	; case 10
  6870  004490  B4D8               	btfsc	status,2,c
  6871  004492  D78C               	goto	l20431
  6872  004494  0A01               	xorlw	1	; case 11
  6873  004496  B4D8               	btfsc	status,2,c
  6874  004498  D797               	goto	l20433
  6875  00449A  0A07               	xorlw	7	; case 12
  6876  00449C  B4D8               	btfsc	status,2,c
  6877  00449E  D7A2               	goto	l20435
  6878  0044A0  0A01               	xorlw	1	; case 13
  6879  0044A2  B4D8               	btfsc	status,2,c
  6880  0044A4  D7AB               	goto	l20437
  6881  0044A6                     l20447:
  6882                           
  6883                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6884  0044A6  0101               	movlb	1	; () banked
  6885  0044A8  5167               	movf	(_menu_st+22)& (0+255),w,b
  6886  0044AA  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6887  0044AC  A0D8               	btfss	status,0,c
  6888  0044AE  D002               	goto	l20451
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6892  0044B0  0E00               	movlw	0
  6893  0044B2  6F68               	movwf	(_menu_st+23)& (0+255),b
  6894  0044B4                     l20451:
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6898  0044B4  0E0D               	movlw	13
  6899  0044B6  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6900  0044B8  A4D8               	btfss	status,2,c
  6901  0044BA  D01A               	goto	l20455
  6902                           
  6903                           ; BSR set to: 1
  6904                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6905  0044BC  5168               	movf	(_menu_st+23)& (0+255),w,b
  6906  0044BE  0D02               	mullw	2
  6907  0044C0  0E52               	movlw	low (_menu_st+1)
  6908  0044C2  24F3               	addwf	243,w,c
  6909  0044C4  6ED9               	movwf	fsr2l,c
  6910  0044C6  0E01               	movlw	high (_menu_st+1)
  6911  0044C8  20F4               	addwfc	prodh,w,c
  6912  0044CA  6EDA               	movwf	fsr2h,c
  6913  0044CC  50DF               	movf	indf2,w,c
  6914  0044CE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6915  0044D0  0E00               	movlw	0
  6916  0044D2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6917  0044D4  0E0A               	movlw	10
  6918  0044D6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6919  0044D8  5168               	movf	(_menu_st+23)& (0+255),w,b
  6920  0044DA  0D02               	mullw	2
  6921  0044DC  0E51               	movlw	low _menu_st
  6922  0044DE  24F3               	addwf	243,w,c
  6923  0044E0  6ED9               	movwf	fsr2l,c
  6924  0044E2  0E01               	movlw	high _menu_st
  6925  0044E4  20F4               	addwfc	prodh,w,c
  6926  0044E6  6EDA               	movwf	fsr2h,c
  6927  0044E8  50DF               	movf	indf2,w,c
  6928  0044EA  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  6929                           
  6930                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6931  0044EE  0012               	return	
  6932  0044F0                     l20455:
  6933                           
  6934                           ; BSR set to: 1
  6935                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6936  0044F0  5168               	movf	(_menu_st+23)& (0+255),w,b
  6937  0044F2  0D02               	mullw	2
  6938  0044F4  0E52               	movlw	low (_menu_st+1)
  6939  0044F6  24F3               	addwf	243,w,c
  6940  0044F8  6ED9               	movwf	fsr2l,c
  6941  0044FA  0E01               	movlw	high (_menu_st+1)
  6942  0044FC  20F4               	addwfc	prodh,w,c
  6943  0044FE  6EDA               	movwf	fsr2h,c
  6944  004500  50DF               	movf	indf2,w,c
  6945  004502  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6946  004504  5168               	movf	(_menu_st+23)& (0+255),w,b
  6947  004506  0D02               	mullw	2
  6948  004508  0E51               	movlw	low _menu_st
  6949  00450A  24F3               	addwf	243,w,c
  6950  00450C  6ED9               	movwf	fsr2l,c
  6951  00450E  0E01               	movlw	high _menu_st
  6952  004510  20F4               	addwfc	prodh,w,c
  6953  004512  6EDA               	movwf	fsr2h,c
  6954  004514  50DF               	movf	indf2,w,c
  6955  004516  EC84  F04A         	call	_SetSegmentValueMain
  6956  00451A  0012               	return		;funcret
  6957  00451C                     __end_of_load_New_Menu:
  6958                           	callstack 0
  6959                           
  6960 ;; *************** function _InitReceiver *****************
  6961 ;; Defined at:
  6962 ;;		line 207 in file "inputs_MC50.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;		None
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2
  6971 ;; Tracked objects:
  6972 ;;		On entry : 30/F
  6973 ;;		On exit  : 3F/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;Total ram usage:        0 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; Hardware stack levels required when called: 4
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_main
  6987 ;;		_setValueToEdit
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text5
  6992  0094EE                     __ptext5:
  6993                           	callstack 0
  6994  0094EE                     _InitReceiver:
  6995                           	callstack 23
  6996                           
  6997                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6998                           
  6999                           ;incstack = 0
  7000  0094EE  010E               	movlb	14	; () banked
  7001  0094F0  9BCA               	bcf	202,5,b	;volatile
  7002                           
  7003                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7004  0094F2  8BC2               	bsf	194,5,b	;volatile
  7005                           
  7006                           ;inputs_MC50.c: 210:     GIE = 1;
  7007  0094F4  8EF2               	bsf	4082,7,c	;volatile
  7008                           
  7009                           ; BSR set to: 14
  7010                           ;inputs_MC50.c: 211:     RFstate = 0;
  7011  0094F6  0E00               	movlw	0
  7012  0094F8  0101               	movlb	1	; () banked
  7013  0094FA  6F99               	movwf	_RFstate& (0+255),b
  7014                           
  7015                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7016  0094FC  0E00               	movlw	0
  7017  0094FE  0100               	movlb	0	; () banked
  7018  009500  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7019                           
  7020                           ;inputs_MC50.c: 213:     RFFull = 0;
  7021  009502  0E00               	movlw	0
  7022  009504  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7023                           
  7024                           ; BSR set to: 0
  7025  009506  0012               	return		;funcret
  7026  009508                     __end_of_InitReceiver:
  7027                           	callstack 0
  7028                           
  7029 ;; *************** function _controlSelectRemote *****************
  7030 ;; Defined at:
  7031 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7036 ;;  pos             1   10[BANK0 ] unsigned char 
  7037 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7038 ;;  temp            1   16[BANK0 ] unsigned char 
  7039 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 3F/1
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:        9 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 14
  7056 ;; This function calls:
  7057 ;;		_ClearFlag_rfCMD
  7058 ;;		_RemoveSerial
  7059 ;;		_SaveNVM_VarSystem
  7060 ;;		_SetSegmentValue
  7061 ;;		_SetSegmentValueIntermitentMain
  7062 ;;		_SetSegmentValueMain
  7063 ;;		___awdiv
  7064 ;;		___lbmod
  7065 ;;		_cmdMemoryIsEmpty
  7066 ;;		_getSerialCmd
  7067 ;;		_getTypeRemote
  7068 ;;		_saveNewSerial
  7069 ;;		_sm_send_event
  7070 ;;		_validateRemoteSerialNumber
  7071 ;; This function is called by:
  7072 ;;		_sm_execute_menuConfiguration
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text6
  7077  0037F8                     __ptext6:
  7078                           	callstack 0
  7079  0037F8                     _controlSelectRemote:
  7080                           	callstack 14
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;incstack = 0
  7087  0037F8  0EE4               	movlw	low controlSelectRemote@tempSerial
  7088  0037FA  6E1B               	movwf	getSerialCmd@serial^0,c
  7089  0037FC  EC96  F045         	call	_getSerialCmd	;wreg free
  7090  003800  0100               	movlb	0	; () banked
  7091  003802  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7095  003804  0101               	movlb	1	; () banked
  7096  003806  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7097  003808  D008               	goto	u24540
  7098  00380A  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7099  00380C  E103               	bnz	u24530
  7100  00380E  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7101  003810  A0D8               	btfss	status,0,c
  7102  003812  D003               	goto	u24540
  7103  003814                     u24530:
  7104                           
  7105                           ; BSR set to: 1
  7106  003814  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7107  003816  A4D8               	btfss	status,2,c
  7108  003818  D028               	goto	l21525
  7109  00381A                     u24540:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7113  00381A  0EEE               	movlw	low _main_stateMachine
  7114  00381C  6E12               	movwf	sm_send_event@psm^0,c
  7115  00381E  0E01               	movlw	high _main_stateMachine
  7116  003820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7117  003822  0E00               	movlw	0
  7118  003824  6E15               	movwf	(sm_send_event@event+1)^0,c
  7119  003826  0E07               	movlw	7
  7120  003828  6E14               	movwf	sm_send_event@event^0,c
  7121  00382A  EC8F  F043         	call	_sm_send_event	;wreg free
  7122                           
  7123                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7124  00382E  0EBF               	movlw	low _menuConfiguration_stateMachine
  7125  003830  6E12               	movwf	sm_send_event@psm^0,c
  7126  003832  0E02               	movlw	high _menuConfiguration_stateMachine
  7127  003834  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7128  003836  0E00               	movlw	0
  7129  003838  6E15               	movwf	(sm_send_event@event+1)^0,c
  7130  00383A  0E03               	movlw	3
  7131  00383C  6E14               	movwf	sm_send_event@event^0,c
  7132  00383E  EC8F  F043         	call	_sm_send_event	;wreg free
  7133                           
  7134                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7135  003842  0E00               	movlw	0
  7136  003844  0101               	movlb	1	; () banked
  7137  003846  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7141  003848  0E00               	movlw	0
  7142  00384A  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7146  00384C  0E18               	movlw	24
  7147  00384E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7148  003850  0E18               	movlw	24
  7149  003852  EC84  F04A         	call	_SetSegmentValueMain
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7153  003856  ECD5  F04B         	call	_ClearFlag_rfCMD	;wreg free
  7154                           
  7155                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7156  00385A  0E01               	movlw	1
  7157  00385C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7158                           
  7159                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7160  00385E  0E00               	movlw	0
  7161  003860  0101               	movlb	1	; () banked
  7162  003862  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7163  003864  0E00               	movlw	0
  7164  003866  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7165                           
  7166                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7167  003868  0012               	return	
  7168  00386A                     l21525:
  7169                           
  7170                           ; BSR set to: 1
  7171  00386A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7172  00386C  A4D8               	btfss	status,2,c
  7173  00386E  D05B               	goto	l21547
  7174                           
  7175                           ; BSR set to: 1
  7176  003870  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7177  003872  B4D8               	btfsc	status,2,c
  7178  003874  D058               	goto	l21547
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7182  003876  0E00               	movlw	0
  7183  003878  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7184  00387A  0E64               	movlw	100
  7185  00387C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7189  00387E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7190  003880  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7191  003882  A0D8               	btfss	status,0,c
  7192  003884  D003               	goto	l21535
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7196  003886  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7197                           
  7198                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7199  00388A  D001               	goto	l21537
  7200  00388C                     l21535:
  7201                           
  7202                           ; BSR set to: 1
  7203                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7204  00388C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7205  00388E                     l21537:
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7209  00388E  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7210  003892  5168               	movf	(_menu_st+23)& (0+255),w,b
  7211  003894  ECE5  F03C         	call	_cmdMemoryIsEmpty
  7212  003898  06E8               	decf	wreg,f,c
  7213  00389A  B4D8               	btfsc	status,2,c
  7214  00389C  D004               	goto	u24590
  7215  00389E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7216  0038A0  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7217  0038A2  A4D8               	btfss	status,2,c
  7218  0038A4  D021               	goto	l21543
  7219  0038A6                     u24590:
  7220                           
  7221                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7222  0038A6  0E0A               	movlw	10
  7223  0038A8  6E10               	movwf	___lbmod@divisor^0,c
  7224  0038AA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7225  0038AC  EC4C  F049         	call	___lbmod
  7226  0038B0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7227  0038B2  0E00               	movlw	0
  7228  0038B4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7229  0038B6  0E14               	movlw	20
  7230  0038B8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7231  0038BA  0E0A               	movlw	10
  7232  0038BC  6E10               	movwf	___lbmod@divisor^0,c
  7233  0038BE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7234  0038C0  EC4C  F049         	call	___lbmod
  7235  0038C4  0100               	movlb	0	; () banked
  7236  0038C6  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7237  0038C8  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7238  0038CA  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7239  0038CC  6E14               	movwf	___awdiv@dividend^0,c
  7240  0038CE  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7241  0038D0  A0D8               	btfss	status,0,c
  7242  0038D2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7243  0038D4  0E00               	movlw	0
  7244  0038D6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7245  0038D8  0E0A               	movlw	10
  7246  0038DA  6E16               	movwf	___awdiv@divisor^0,c
  7247  0038DC  ECD0  F03E         	call	___awdiv	;wreg free
  7248  0038E0  5014               	movf	?___awdiv^0,w,c
  7249  0038E2  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  7250                           
  7251                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7252  0038E6  D01C               	goto	l21545
  7253  0038E8                     l21543:
  7254                           
  7255                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7256  0038E8  0E0A               	movlw	10
  7257  0038EA  6E10               	movwf	___lbmod@divisor^0,c
  7258  0038EC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7259  0038EE  EC4C  F049         	call	___lbmod
  7260  0038F2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7261  0038F4  0E0A               	movlw	10
  7262  0038F6  6E10               	movwf	___lbmod@divisor^0,c
  7263  0038F8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7264  0038FA  EC4C  F049         	call	___lbmod
  7265  0038FE  0100               	movlb	0	; () banked
  7266  003900  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7267  003902  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7268  003904  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7269  003906  6E14               	movwf	___awdiv@dividend^0,c
  7270  003908  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7271  00390A  A0D8               	btfss	status,0,c
  7272  00390C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7273  00390E  0E00               	movlw	0
  7274  003910  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7275  003912  0E0A               	movlw	10
  7276  003914  6E16               	movwf	___awdiv@divisor^0,c
  7277  003916  ECD0  F03E         	call	___awdiv	;wreg free
  7278  00391A  5014               	movf	?___awdiv^0,w,c
  7279  00391C  EC84  F04A         	call	_SetSegmentValueMain
  7280  003920                     l21545:
  7281                           
  7282                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7283  003920  0E01               	movlw	1
  7284  003922  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7285                           
  7286                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7287  003924  0012               	return	
  7288  003926                     l21547:
  7289                           
  7290                           ; BSR set to: 1
  7291  003926  0E17               	movlw	23
  7292  003928  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7293  00392A  A4D8               	btfss	status,2,c
  7294  00392C  D057               	goto	l21569
  7295                           
  7296                           ; BSR set to: 1
  7297  00392E  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7298  003930  B4D8               	btfsc	status,2,c
  7299  003932  D054               	goto	l21569
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7303  003934  0E00               	movlw	0
  7304  003936  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7305  003938  0E64               	movlw	100
  7306  00393A  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7310  00393C  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7311                           
  7312                           ; BSR set to: 1
  7313                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7314  00393E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7315  003940  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7316  003942  A0D8               	btfss	status,0,c
  7317                           
  7318                           ; BSR set to: 1
  7319                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7320  003944  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7324  003948  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7325  00394C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7326  00394E  ECE5  F03C         	call	_cmdMemoryIsEmpty
  7327  003952  06E8               	decf	wreg,f,c
  7328  003954  B4D8               	btfsc	status,2,c
  7329  003956  D004               	goto	u24640
  7330  003958  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7331  00395A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7332  00395C  A4D8               	btfss	status,2,c
  7333  00395E  D021               	goto	l21565
  7334  003960                     u24640:
  7335                           
  7336                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7337  003960  0E0A               	movlw	10
  7338  003962  6E10               	movwf	___lbmod@divisor^0,c
  7339  003964  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7340  003966  EC4C  F049         	call	___lbmod
  7341  00396A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7342  00396C  0E00               	movlw	0
  7343  00396E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7344  003970  0E14               	movlw	20
  7345  003972  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7346  003974  0E0A               	movlw	10
  7347  003976  6E10               	movwf	___lbmod@divisor^0,c
  7348  003978  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7349  00397A  EC4C  F049         	call	___lbmod
  7350  00397E  0100               	movlb	0	; () banked
  7351  003980  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7352  003982  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7353  003984  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7354  003986  6E14               	movwf	___awdiv@dividend^0,c
  7355  003988  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7356  00398A  A0D8               	btfss	status,0,c
  7357  00398C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7358  00398E  0E00               	movlw	0
  7359  003990  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7360  003992  0E0A               	movlw	10
  7361  003994  6E16               	movwf	___awdiv@divisor^0,c
  7362  003996  ECD0  F03E         	call	___awdiv	;wreg free
  7363  00399A  5014               	movf	?___awdiv^0,w,c
  7364  00399C  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  7365                           
  7366                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7367  0039A0  D7BF               	goto	l21545
  7368  0039A2                     l21565:
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7371  0039A2  0E0A               	movlw	10
  7372  0039A4  6E10               	movwf	___lbmod@divisor^0,c
  7373  0039A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7374  0039A8  EC4C  F049         	call	___lbmod
  7375  0039AC  6E1C               	movwf	SetSegmentValue@d2^0,c
  7376  0039AE  0E0A               	movlw	10
  7377  0039B0  6E10               	movwf	___lbmod@divisor^0,c
  7378  0039B2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7379  0039B4  EC4C  F049         	call	___lbmod
  7380  0039B8  0100               	movlb	0	; () banked
  7381  0039BA  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7382  0039BC  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7383  0039BE  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7384  0039C0  6E14               	movwf	___awdiv@dividend^0,c
  7385  0039C2  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7386  0039C4  A0D8               	btfss	status,0,c
  7387  0039C6  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7388  0039C8  0E00               	movlw	0
  7389  0039CA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7390  0039CC  0E0A               	movlw	10
  7391  0039CE  6E16               	movwf	___awdiv@divisor^0,c
  7392  0039D0  ECD0  F03E         	call	___awdiv	;wreg free
  7393  0039D4  5014               	movf	?___awdiv^0,w,c
  7394  0039D6  EC9E  F04A         	call	_SetSegmentValue
  7395  0039DA  D7A2               	goto	l21545
  7396  0039DC                     l21569:
  7397                           
  7398                           ; BSR set to: 1
  7399  0039DC  0E63               	movlw	99
  7400  0039DE  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7401  0039E0  D01A               	goto	l21579
  7402                           
  7403                           ; BSR set to: 1
  7404  0039E2  0E63               	movlw	99
  7405  0039E4  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7406  0039E6  D017               	goto	l21579
  7407                           
  7408                           ; BSR set to: 1
  7409                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7410  0039E8  5168               	movf	(_menu_st+23)& (0+255),w,b
  7411  0039EA  A4D8               	btfss	status,2,c
  7412  0039EC  D00A               	goto	l21577
  7413                           
  7414                           ; BSR set to: 1
  7415                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7416  0039EE  0E13               	movlw	19
  7417  0039F0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7418  0039F2  0E00               	movlw	0
  7419  0039F4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7420  0039F6  0E0A               	movlw	10
  7421  0039F8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7422  0039FA  0E12               	movlw	18
  7423  0039FC  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  7424                           
  7425                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7426  003A00  0012               	return	
  7427  003A02                     l21577:
  7428                           
  7429                           ; BSR set to: 1
  7430                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7431  003A02  0E10               	movlw	16
  7432  003A04  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7433  003A06  0E00               	movlw	0
  7434  003A08  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7435  003A0A  0E0A               	movlw	10
  7436  003A0C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7437  003A0E  0E12               	movlw	18
  7438  003A10  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  7439  003A14  0012               	return	
  7440  003A16                     l21579:
  7441                           
  7442                           ; BSR set to: 1
  7443  003A16  0100               	movlb	0	; () banked
  7444  003A18  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7445  003A1A  B4D8               	btfsc	status,2,c
  7446  003A1C  D097               	goto	l21637
  7447                           
  7448                           ; BSR set to: 0
  7449  003A1E  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7450  003A20  B4D8               	btfsc	status,2,c
  7451  003A22  D00F               	goto	u24730
  7452                           
  7453                           ; BSR set to: 0
  7454  003A24  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7455  003A26  B4D8               	btfsc	status,2,c
  7456  003A28  D00C               	goto	u24730
  7457                           
  7458                           ; BSR set to: 0
  7459  003A2A  0E02               	movlw	2
  7460  003A2C  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7461  003A2E  B4D8               	btfsc	status,2,c
  7462  003A30  D008               	goto	u24730
  7463                           
  7464                           ; BSR set to: 0
  7465  003A32  0E04               	movlw	4
  7466  003A34  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7467  003A36  B4D8               	btfsc	status,2,c
  7468  003A38  D004               	goto	u24730
  7469                           
  7470                           ; BSR set to: 0
  7471  003A3A  0E08               	movlw	8
  7472  003A3C  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7473  003A3E  A4D8               	btfss	status,2,c
  7474  003A40  D085               	goto	l21637
  7475  003A42                     u24730:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7479  003A42  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7480  003A46  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7481  003A4A  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7482  003A4E  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7483  003A52  0E00               	movlw	0
  7484  003A54  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7485  003A56  0EE2               	movlw	low controlSelectRemote@pos
  7486  003A58  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7487  003A5A  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7488  003A5C  EC12  F02D         	call	_validateRemoteSerialNumber	;wreg free
  7489  003A60  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7493  003A62  ECD2  F04B         	call	_getTypeRemote	;wreg free
  7494  003A66  0100               	movlb	0	; () banked
  7495  003A68  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7499  003A6A  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7500  003A6C  A4D8               	btfss	status,2,c
  7501  003A6E  0012               	return	
  7502                           
  7503                           ; BSR set to: 0
  7504  003A70  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7505  003A72  B4D8               	btfsc	status,2,c
  7506  003A74  D003               	goto	u24760
  7507                           
  7508                           ; BSR set to: 0
  7509  003A76  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7510  003A78  A4D8               	btfss	status,2,c
  7511  003A7A  0012               	return	
  7512  003A7C                     u24760:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7516  003A7C  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7517  003A80  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7518  003A84  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7519  003A88  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7520  003A8C  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7521  003A90  0101               	movlb	1	; () banked
  7522  003A92  5168               	movf	(_menu_st+23)& (0+255),w,b
  7523  003A94  ECB4  F041         	call	_saveNewSerial
  7524                           
  7525                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7526  003A98  0100               	movlb	0	; () banked
  7527  003A9A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7528  003A9C  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7529  003A9E  A4D8               	btfss	status,2,c
  7530  003AA0  D004               	goto	l21609
  7531                           
  7532                           ; BSR set to: 0
  7533  003AA2  0E63               	movlw	99
  7534  003AA4  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7535  003AA6  D001               	goto	l21609
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7539  003AA8  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7540  003AAA                     l21609:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7544  003AAA  0EBF               	movlw	low _menuConfiguration_stateMachine
  7545  003AAC  6E12               	movwf	sm_send_event@psm^0,c
  7546  003AAE  0E02               	movlw	high _menuConfiguration_stateMachine
  7547  003AB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7548  003AB2  0E00               	movlw	0
  7549  003AB4  6E15               	movwf	(sm_send_event@event+1)^0,c
  7550  003AB6  0E08               	movlw	8
  7551  003AB8  6E14               	movwf	sm_send_event@event^0,c
  7552  003ABA  EC8F  F043         	call	_sm_send_event	;wreg free
  7553                           
  7554                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7555  003ABE  0E00               	movlw	0
  7556  003AC0  0101               	movlb	1	; () banked
  7557  003AC2  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7561  003AC4  0E00               	movlw	0
  7562  003AC6  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7563                           
  7564                           ; BSR set to: 1
  7565                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7566  003AC8  0E00               	movlw	0
  7567  003ACA  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7568  003ACC  0E28               	movlw	40
  7569  003ACE  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7570                           
  7571                           ; BSR set to: 1
  7572                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7573  003AD0  0E0A               	movlw	10
  7574  003AD2  6E10               	movwf	___lbmod@divisor^0,c
  7575  003AD4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7576  003AD6  EC4C  F049         	call	___lbmod
  7577  003ADA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7578  003ADC  0E00               	movlw	0
  7579  003ADE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7580  003AE0  0E04               	movlw	4
  7581  003AE2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7582  003AE4  0E0A               	movlw	10
  7583  003AE6  6E10               	movwf	___lbmod@divisor^0,c
  7584  003AE8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7585  003AEA  EC4C  F049         	call	___lbmod
  7586  003AEE  0100               	movlb	0	; () banked
  7587  003AF0  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7588  003AF2  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7589  003AF4  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7590  003AF6  6E14               	movwf	___awdiv@dividend^0,c
  7591  003AF8  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7592  003AFA  A0D8               	btfss	status,0,c
  7593  003AFC  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7594  003AFE  0E00               	movlw	0
  7595  003B00  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7596  003B02  0E0A               	movlw	10
  7597  003B04  6E16               	movwf	___awdiv@divisor^0,c
  7598  003B06  ECD0  F03E         	call	___awdiv	;wreg free
  7599  003B0A  5014               	movf	?___awdiv^0,w,c
  7600  003B0C  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  7601                           
  7602                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7603  003B10  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7604  003B12  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7605  003B14  B4D8               	btfsc	status,2,c
  7606  003B16  D003               	goto	u24800
  7607  003B18  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7608  003B1A  A4D8               	btfss	status,2,c
  7609  003B1C  0012               	return	
  7610  003B1E                     u24800:
  7611                           
  7612                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7613  003B1E  0100               	movlb	0	; () banked
  7614  003B20  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7615  003B22  A4D8               	btfss	status,2,c
  7616  003B24  D008               	goto	l21631
  7617                           
  7618                           ; BSR set to: 0
  7619  003B26  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7620  003B28  A4D8               	btfss	status,2,c
  7621  003B2A  D005               	goto	l21631
  7622                           
  7623                           ; BSR set to: 0
  7624  003B2C  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7625  003B2E  A4D8               	btfss	status,2,c
  7626  003B30  D002               	goto	l21631
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7630  003B32  0E01               	movlw	1
  7631  003B34  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7632  003B36                     l21631:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7636  003B36  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7640  003B38  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7641  003B3C  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7642  003B40  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7646  003B44  0E02               	movlw	2
  7647  003B46  EC97  F047         	call	_SaveNVM_VarSystem
  7648  003B4A  0012               	return	
  7649  003B4C                     l21637:
  7650                           
  7651                           ; BSR set to: 0
  7652  003B4C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7653  003B4E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7654  003B50  B4D8               	btfsc	status,2,c
  7655  003B52  0012               	return	
  7656                           
  7657                           ; BSR set to: 0
  7658  003B54  0E27               	movlw	39
  7659  003B56  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7660  003B58  A4D8               	btfss	status,2,c
  7661  003B5A  0012               	return	
  7662                           
  7663                           ; BSR set to: 0
  7664  003B5C  0E27               	movlw	39
  7665  003B5E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7666  003B60  0012               	return	
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7670  003B62  0E00               	movlw	0
  7671  003B64  0101               	movlb	1	; () banked
  7672  003B66  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7673  003B68  0E64               	movlw	100
  7674  003B6A  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7675                           
  7676                           ; BSR set to: 1
  7677                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7678  003B6C  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7679  003B70  5168               	movf	(_menu_st+23)& (0+255),w,b
  7680  003B72  EC95  F03F         	call	_RemoveSerial
  7681                           
  7682                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7683  003B76  0E0A               	movlw	10
  7684  003B78  6E10               	movwf	___lbmod@divisor^0,c
  7685  003B7A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7686  003B7C  EC4C  F049         	call	___lbmod
  7687  003B80  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7688  003B82  0E00               	movlw	0
  7689  003B84  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7690  003B86  0E14               	movlw	20
  7691  003B88  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7692  003B8A  0E0A               	movlw	10
  7693  003B8C  6E10               	movwf	___lbmod@divisor^0,c
  7694  003B8E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7695  003B90  EC4C  F049         	call	___lbmod
  7696  003B94  0100               	movlb	0	; () banked
  7697  003B96  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7698  003B98  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7699  003B9A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7700  003B9C  6E14               	movwf	___awdiv@dividend^0,c
  7701  003B9E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7702  003BA0  A0D8               	btfss	status,0,c
  7703  003BA2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7704  003BA4  0E00               	movlw	0
  7705  003BA6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7706  003BA8  0E0A               	movlw	10
  7707  003BAA  6E16               	movwf	___awdiv@divisor^0,c
  7708  003BAC  ECD0  F03E         	call	___awdiv	;wreg free
  7709  003BB0  5014               	movf	?___awdiv^0,w,c
  7710  003BB2  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  7711  003BB6  0012               	return	
  7712  003BB8                     __end_of_controlSelectRemote:
  7713                           	callstack 0
  7714                           
  7715 ;; *************** function _getTypeRemote *****************
  7716 ;; Defined at:
  7717 ;;		line 459 in file "inputs_MC50.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;		None
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      enum E10559
  7724 ;; Registers used:
  7725 ;;		wreg, status,2
  7726 ;; Tracked objects:
  7727 ;;		On entry : 3F/0
  7728 ;;		On exit  : 3F/2
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7735 ;;Total ram usage:        0 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 4
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_controlSelectRemote
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text7
  7746  0097A4                     __ptext7:
  7747                           	callstack 0
  7748  0097A4                     _getTypeRemote:
  7749                           	callstack 23
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;inputs_MC50.c: 460:     return classic_data.type;
  7753                           
  7754                           ;incstack = 0
  7755  0097A4  0102               	movlb	2	; () banked
  7756  0097A6  51A2               	movf	(_classic_data+14)& (0+255),w,b
  7757                           
  7758                           ; BSR set to: 2
  7759  0097A8  0012               	return		;funcret
  7760  0097AA                     __end_of_getTypeRemote:
  7761                           	callstack 0
  7762                           
  7763 ;; *************** function _getSerialCmd *****************
  7764 ;; Defined at:
  7765 ;;		line 442 in file "inputs_MC50.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7768 ;;		 -> controlSelectRemote@tempSerial(4), 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  temp            1   27[COMRAM] char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  1    wreg      char 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 3F/1
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7780 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;Total ram usage:        2 bytes
  7785 ;; Hardware stack levels used: 1
  7786 ;; Hardware stack levels required when called: 5
  7787 ;; This function calls:
  7788 ;;		_memcpy
  7789 ;; This function is called by:
  7790 ;;		_controlSelectRemote
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text8
  7795  008B2C                     __ptext8:
  7796                           	callstack 0
  7797  008B2C                     _getSerialCmd:
  7798                           	callstack 22
  7799                           
  7800                           ; BSR set to: 1
  7801                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7802                           
  7803                           ; BSR set to: 2
  7804                           ;incstack = 0
  7805  008B2C  681C               	setf	getSerialCmd@temp^0,c
  7806                           
  7807                           ; BSR set to: 1
  7808                           ;inputs_MC50.c: 444:     if(RFFull)
  7809  008B2E  0100               	movlb	0	; () banked
  7810  008B30  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7811  008B32  B4D8               	btfsc	status,2,c
  7812  008B34  D020               	goto	l20225
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7816  008B36  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7817  008B38  B4D8               	btfsc	status,2,c
  7818  008B3A  D00E               	goto	l20221
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7822  008B3C  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7823  008B40  6A11               	clrf	(memcpy@d1+1)^0,c
  7824  008B42  0E98               	movlw	low (_classic_data+4)
  7825  008B44  6E12               	movwf	memcpy@s1^0,c
  7826  008B46  0E02               	movlw	high (_classic_data+4)
  7827  008B48  6E13               	movwf	(memcpy@s1+1)^0,c
  7828  008B4A  0E00               	movlw	0
  7829  008B4C  6E15               	movwf	(memcpy@n+1)^0,c
  7830  008B4E  0E04               	movlw	4
  7831  008B50  6E14               	movwf	memcpy@n^0,c
  7832  008B52  EC99  F046         	call	_memcpy	;wreg free
  7833                           
  7834                           ;inputs_MC50.c: 449:         }
  7835  008B56  D00D               	goto	l20223
  7836  008B58                     l20221:
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7840  008B58  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7841  008B5C  6A11               	clrf	(memcpy@d1+1)^0,c
  7842  008B5E  0ECE               	movlw	low (_BufferRF+4)
  7843  008B60  6E12               	movwf	memcpy@s1^0,c
  7844  008B62  0E02               	movlw	high (_BufferRF+4)
  7845  008B64  6E13               	movwf	(memcpy@s1+1)^0,c
  7846  008B66  0E00               	movlw	0
  7847  008B68  6E15               	movwf	(memcpy@n+1)^0,c
  7848  008B6A  0E04               	movlw	4
  7849  008B6C  6E14               	movwf	memcpy@n^0,c
  7850  008B6E  EC99  F046         	call	_memcpy	;wreg free
  7851  008B72                     l20223:
  7852                           
  7853                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7854  008B72  C2A0  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7855  008B76                     l20225:
  7856                           
  7857                           ;inputs_MC50.c: 456:     return temp;
  7858  008B76  501C               	movf	getSerialCmd@temp^0,w,c
  7859  008B78  0012               	return		;funcret
  7860  008B7A                     __end_of_getSerialCmd:
  7861                           	callstack 0
  7862                           
  7863 ;; *************** function _controlSaveRemote *****************
  7864 ;; Defined at:
  7865 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      void 
  7872 ;; Registers used:
  7873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7874 ;; Tracked objects:
  7875 ;;		On entry : 3F/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7883 ;;Total ram usage:        1 bytes
  7884 ;; Hardware stack levels used: 1
  7885 ;; Hardware stack levels required when called: 6
  7886 ;; This function calls:
  7887 ;;		_ClearFlag_rfCMD
  7888 ;;		_SetSegmentValueIntermitentMain
  7889 ;;		_SetSegmentValueMain
  7890 ;;		___awdiv
  7891 ;;		___lbmod
  7892 ;;		_sm_send_event
  7893 ;; This function is called by:
  7894 ;;		_sm_execute_menuConfiguration
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text9
  7899  0075EE                     __ptext9:
  7900                           	callstack 0
  7901  0075EE                     _controlSaveRemote:
  7902                           	callstack 22
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  7906                           
  7907                           ;incstack = 0
  7908  0075EE  0101               	movlb	1	; () banked
  7909  0075F0  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  7910  0075F2  D005               	goto	u24870
  7911  0075F4  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  7912  0075F6  E154               	bnz	l3488
  7913  0075F8  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  7914  0075FA  B0D8               	btfsc	status,0,c
  7915  0075FC  0012               	return	
  7916  0075FE                     u24870:
  7917                           
  7918                           ; BSR set to: 1
  7919                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  7920  0075FE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7921  007600  A4D8               	btfss	status,2,c
  7922  007602  D02E               	goto	l21659
  7923                           
  7924                           ; BSR set to: 1
  7925                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  7926  007604  0E00               	movlw	0
  7927  007606  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7928  007608  0EC8               	movlw	200
  7929  00760A  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7930                           
  7931                           ; BSR set to: 1
  7932                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  7933  00760C  0EBF               	movlw	low _menuConfiguration_stateMachine
  7934  00760E  6E12               	movwf	sm_send_event@psm^0,c
  7935  007610  0E02               	movlw	high _menuConfiguration_stateMachine
  7936  007612  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7937  007614  0E00               	movlw	0
  7938  007616  6E15               	movwf	(sm_send_event@event+1)^0,c
  7939  007618  0E09               	movlw	9
  7940  00761A  6E14               	movwf	sm_send_event@event^0,c
  7941  00761C  EC8F  F043         	call	_sm_send_event	;wreg free
  7942                           
  7943                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7944  007620  0E0A               	movlw	10
  7945  007622  6E10               	movwf	___lbmod@divisor^0,c
  7946  007624  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7947  007626  EC4C  F049         	call	___lbmod
  7948  00762A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7949  00762C  0E00               	movlw	0
  7950  00762E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7951  007630  0E14               	movlw	20
  7952  007632  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7953  007634  0E0A               	movlw	10
  7954  007636  6E10               	movwf	___lbmod@divisor^0,c
  7955  007638  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7956  00763A  EC4C  F049         	call	___lbmod
  7957  00763E  6E20               	movwf	??_controlSaveRemote^0,c
  7958  007640  5020               	movf	??_controlSaveRemote^0,w,c
  7959  007642  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7960  007644  6E14               	movwf	___awdiv@dividend^0,c
  7961  007646  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7962  007648  A0D8               	btfss	status,0,c
  7963  00764A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7964  00764C  0E00               	movlw	0
  7965  00764E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7966  007650  0E0A               	movlw	10
  7967  007652  6E16               	movwf	___awdiv@divisor^0,c
  7968  007654  ECD0  F03E         	call	___awdiv	;wreg free
  7969  007658  5014               	movf	?___awdiv^0,w,c
  7970  00765A  EC20  F04B         	call	_SetSegmentValueIntermitentMain
  7971                           
  7972                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  7973  00765E  0012               	return	
  7974  007660                     l21659:
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  7978  007660  0EEE               	movlw	low _main_stateMachine
  7979  007662  6E12               	movwf	sm_send_event@psm^0,c
  7980  007664  0E01               	movlw	high _main_stateMachine
  7981  007666  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7982  007668  0E00               	movlw	0
  7983  00766A  6E15               	movwf	(sm_send_event@event+1)^0,c
  7984  00766C  0E07               	movlw	7
  7985  00766E  6E14               	movwf	sm_send_event@event^0,c
  7986  007670  EC8F  F043         	call	_sm_send_event	;wreg free
  7987                           
  7988                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  7989  007674  0EBF               	movlw	low _menuConfiguration_stateMachine
  7990  007676  6E12               	movwf	sm_send_event@psm^0,c
  7991  007678  0E02               	movlw	high _menuConfiguration_stateMachine
  7992  00767A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7993  00767C  0E00               	movlw	0
  7994  00767E  6E15               	movwf	(sm_send_event@event+1)^0,c
  7995  007680  0E04               	movlw	4
  7996  007682  6E14               	movwf	sm_send_event@event^0,c
  7997  007684  EC8F  F043         	call	_sm_send_event	;wreg free
  7998                           
  7999                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  8000  007688  0E18               	movlw	24
  8001  00768A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8002  00768C  0E18               	movlw	24
  8003  00768E  EC84  F04A         	call	_SetSegmentValueMain
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8007  007692  ECD5  F04B         	call	_ClearFlag_rfCMD	;wreg free
  8008                           
  8009                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8010  007696  0E00               	movlw	0
  8011  007698  0101               	movlb	1	; () banked
  8012  00769A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8013  00769C  0E00               	movlw	0
  8014  00769E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8015  0076A0                     l3488:
  8016  0076A0  0012               	return		;funcret
  8017  0076A2                     __end_of_controlSaveRemote:
  8018                           	callstack 0
  8019                           
  8020 ;; *************** function ___lbmod *****************
  8021 ;; Defined at:
  8022 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  dividend        1    wreg     unsigned char 
  8025 ;;  divisor         1   15[COMRAM] unsigned char 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;  dividend        1   16[COMRAM] unsigned char 
  8028 ;;  rem             1   18[COMRAM] unsigned char 
  8029 ;;  counter         1   17[COMRAM] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      unsigned char 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/1
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8039 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8040 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8043 ;;Total ram usage:        4 bytes
  8044 ;; Hardware stack levels used: 1
  8045 ;; Hardware stack levels required when called: 4
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_controlSelectRemote
  8050 ;;		_controlSaveRemote
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text10
  8055  009298                     __ptext10:
  8056                           	callstack 0
  8057  009298                     ___lbmod:
  8058                           	callstack 23
  8059                           
  8060                           ;incstack = 0
  8061                           ;___lbmod@dividend stored from wreg
  8062  009298  6E11               	movwf	___lbmod@dividend^0,c
  8063  00929A  0E08               	movlw	8
  8064  00929C  6E12               	movwf	___lbmod@counter^0,c
  8065  00929E  0E00               	movlw	0
  8066  0092A0  6E13               	movwf	___lbmod@rem^0,c
  8067  0092A2                     l12839:
  8068  0092A2  90D8               	bcf	status,0,c
  8069  0092A4  3411               	rlcf	___lbmod@dividend^0,w,c
  8070  0092A6  3413               	rlcf	___lbmod@rem^0,w,c
  8071  0092A8  6E13               	movwf	___lbmod@rem^0,c
  8072  0092AA  90D8               	bcf	status,0,c
  8073  0092AC  3611               	rlcf	___lbmod@dividend^0,f,c
  8074  0092AE  5010               	movf	___lbmod@divisor^0,w,c
  8075  0092B0  5C13               	subwf	___lbmod@rem^0,w,c
  8076  0092B2  A0D8               	btfss	status,0,c
  8077  0092B4  D002               	goto	l12847
  8078  0092B6  5010               	movf	___lbmod@divisor^0,w,c
  8079  0092B8  5E13               	subwf	___lbmod@rem^0,f,c
  8080  0092BA                     l12847:
  8081  0092BA  2E12               	decfsz	___lbmod@counter^0,f,c
  8082  0092BC  D7F2               	goto	l12839
  8083  0092BE  5013               	movf	___lbmod@rem^0,w,c
  8084  0092C0  0012               	return		;funcret
  8085  0092C2                     __end_of___lbmod:
  8086                           	callstack 0
  8087                           
  8088 ;; *************** function ___awdiv *****************
  8089 ;; Defined at:
  8090 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  dividend        2   19[COMRAM] int 
  8093 ;;  divisor         2   21[COMRAM] int 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  quotient        2   25[COMRAM] int 
  8096 ;;  sign            1   24[COMRAM] unsigned char 
  8097 ;;  counter         1   23[COMRAM] unsigned char 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  2   19[COMRAM] int 
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;Total ram usage:        8 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; Hardware stack levels required when called: 4
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_controlSelectRemote
  8118 ;;		_controlSaveRemote
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text11
  8123  007DA0                     __ptext11:
  8124                           	callstack 0
  8125  007DA0                     ___awdiv:
  8126                           	callstack 23
  8127                           
  8128                           ;incstack = 0
  8129  007DA0  0E00               	movlw	0
  8130  007DA2  6E19               	movwf	___awdiv@sign^0,c
  8131  007DA4  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8132  007DA6  D006               	goto	l12775
  8133  007DA8  6C16               	negf	___awdiv@divisor^0,c
  8134  007DAA  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8135  007DAC  B0D8               	btfsc	status,0,c
  8136  007DAE  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8137  007DB0  0E01               	movlw	1
  8138  007DB2  6E19               	movwf	___awdiv@sign^0,c
  8139  007DB4                     l12775:
  8140  007DB4  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8141  007DB6  D006               	goto	l12781
  8142  007DB8  6C14               	negf	___awdiv@dividend^0,c
  8143  007DBA  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8144  007DBC  B0D8               	btfsc	status,0,c
  8145  007DBE  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8146  007DC0  0E01               	movlw	1
  8147  007DC2  1A19               	xorwf	___awdiv@sign^0,f,c
  8148  007DC4                     l12781:
  8149  007DC4  0E00               	movlw	0
  8150  007DC6  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8151  007DC8  0E00               	movlw	0
  8152  007DCA  6E1A               	movwf	___awdiv@quotient^0,c
  8153  007DCC  5016               	movf	___awdiv@divisor^0,w,c
  8154  007DCE  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8155  007DD0  B4D8               	btfsc	status,2,c
  8156  007DD2  D01C               	goto	l12803
  8157  007DD4  0E01               	movlw	1
  8158  007DD6  6E18               	movwf	___awdiv@counter^0,c
  8159  007DD8  D004               	goto	l12789
  8160  007DDA                     l12787:
  8161  007DDA  90D8               	bcf	status,0,c
  8162  007DDC  3616               	rlcf	___awdiv@divisor^0,f,c
  8163  007DDE  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8164  007DE0  2A18               	incf	___awdiv@counter^0,f,c
  8165  007DE2                     l12789:
  8166  007DE2  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8167  007DE4  D7FA               	goto	l12787
  8168  007DE6                     u12410:
  8169  007DE6  90D8               	bcf	status,0,c
  8170  007DE8  361A               	rlcf	___awdiv@quotient^0,f,c
  8171  007DEA  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8172  007DEC  5016               	movf	___awdiv@divisor^0,w,c
  8173  007DEE  5C14               	subwf	___awdiv@dividend^0,w,c
  8174  007DF0  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8175  007DF2  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8176  007DF4  A0D8               	btfss	status,0,c
  8177  007DF6  D005               	goto	l12799
  8178  007DF8  5016               	movf	___awdiv@divisor^0,w,c
  8179  007DFA  5E14               	subwf	___awdiv@dividend^0,f,c
  8180  007DFC  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8181  007DFE  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8182  007E00  801A               	bsf	___awdiv@quotient^0,0,c
  8183  007E02                     l12799:
  8184  007E02  90D8               	bcf	status,0,c
  8185  007E04  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8186  007E06  3216               	rrcf	___awdiv@divisor^0,f,c
  8187  007E08  2E18               	decfsz	___awdiv@counter^0,f,c
  8188  007E0A  D7ED               	goto	u12410
  8189  007E0C                     l12803:
  8190  007E0C  5019               	movf	___awdiv@sign^0,w,c
  8191  007E0E  B4D8               	btfsc	status,2,c
  8192  007E10  D004               	goto	l12807
  8193  007E12  6C1A               	negf	___awdiv@quotient^0,c
  8194  007E14  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8195  007E16  B0D8               	btfsc	status,0,c
  8196  007E18  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8197  007E1A                     l12807:
  8198  007E1A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8199  007E1E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8200  007E22  0012               	return		;funcret
  8201  007E24                     __end_of___awdiv:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _SetSegmentValueMain *****************
  8205 ;; Defined at:
  8206 ;;		line 104 in file "outputs_MC50.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  d1              1    wreg     unsigned char 
  8209 ;;  d2              1   27[COMRAM] unsigned char 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  d1              1   28[COMRAM] unsigned char 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  1    wreg      void 
  8214 ;; Registers used:
  8215 ;;		wreg, status,2
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 3F/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8221 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;Total ram usage:        2 bytes
  8226 ;; Hardware stack levels used: 1
  8227 ;; Hardware stack levels required when called: 4
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_sm_execute_main
  8232 ;;		_sm_execute_menuConfiguration
  8233 ;;		_load_New_Menu
  8234 ;;		_controlSelectRemote
  8235 ;;		_controlSaveRemote
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text12
  8240  009508                     __ptext12:
  8241                           	callstack 0
  8242  009508                     _SetSegmentValueMain:
  8243                           	callstack 22
  8244                           
  8245                           ;incstack = 0
  8246                           ;SetSegmentValueMain@d1 stored from wreg
  8247  009508  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8248                           
  8249                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8250  00950A  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8251                           
  8252                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8253  00950E  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8254                           
  8255                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8256  009512  0E00               	movlw	0
  8257  009514  0100               	movlb	0	; () banked
  8258  009516  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8259  009518  0E00               	movlw	0
  8260  00951A  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8264  00951C  0E00               	movlw	0
  8265  00951E  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8266                           
  8267                           ; BSR set to: 0
  8268  009520  0012               	return		;funcret
  8269  009522                     __end_of_SetSegmentValueMain:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function _ClearFlag_rfCMD *****************
  8273 ;; Defined at:
  8274 ;;		line 463 in file "inputs_MC50.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/1
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; Hardware stack levels required when called: 4
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_sm_execute_menuConfiguration
  8299 ;;		_controlSelectRemote
  8300 ;;		_controlSaveRemote
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text13
  8305  0097AA                     __ptext13:
  8306                           	callstack 0
  8307  0097AA                     _ClearFlag_rfCMD:
  8308                           	callstack 23
  8309                           
  8310                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;incstack = 0
  8314  0097AA  0E01               	movlw	1
  8315  0097AC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8316  0097AE  0012               	return		;funcret
  8317  0097B0                     __end_of_ClearFlag_rfCMD:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _controlLearnDigit *****************
  8321 ;; Defined at:
  8322 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		wreg, status,2, status,0, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 3F/0
  8333 ;;		On exit  : 3E/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 5
  8343 ;; This function calls:
  8344 ;;		_SetSegmentValueLearn
  8345 ;; This function is called by:
  8346 ;;		_sm_execute_menuConfiguration
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text14
  8351  008FFE                     __ptext14:
  8352                           	callstack 0
  8353  008FFE                     _controlLearnDigit:
  8354                           	callstack 23
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8358                           
  8359                           ;incstack = 0
  8360  008FFE  0101               	movlb	1	; () banked
  8361  009000  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8362  009002  D005               	goto	u13970
  8363  009004  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8364  009006  E112               	bnz	l3494
  8365  009008  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8366  00900A  B0D8               	btfsc	status,0,c
  8367  00900C  0012               	return	
  8368  00900E                     u13970:
  8369                           
  8370                           ; BSR set to: 1
  8371                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8372  00900E  0E00               	movlw	0
  8373  009010  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8374  009012  0E02               	movlw	2
  8375  009014  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8376                           
  8377                           ; BSR set to: 1
  8378                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8379  009016  0E03               	movlw	3
  8380  009018  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8381  00901A  A4D8               	btfss	status,2,c
  8382  00901C  D004               	goto	l14161
  8383                           
  8384                           ; BSR set to: 1
  8385                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8386  00901E  0E00               	movlw	0
  8387  009020  EC93  F037         	call	_SetSegmentValueLearn
  8388                           
  8389                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8390  009024  0012               	return	
  8391  009026                     l14161:
  8392                           
  8393                           ; BSR set to: 1
  8394                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8395  009026  0E01               	movlw	1
  8396  009028  EC93  F037         	call	_SetSegmentValueLearn
  8397  00902C                     l3494:
  8398  00902C  0012               	return		;funcret
  8399  00902E                     __end_of_controlLearnDigit:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function _SetSegmentValueLearn *****************
  8403 ;; Defined at:
  8404 ;;		line 124 in file "outputs_MC50.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  direction       1    wreg     enum E10602
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  direction       1   17[COMRAM] enum E10602
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0
  8413 ;; Tracked objects:
  8414 ;;		On entry : 3F/1
  8415 ;;		On exit  : 3F/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8422 ;;Total ram usage:        3 bytes
  8423 ;; Hardware stack levels used: 1
  8424 ;; Hardware stack levels required when called: 4
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		_controlLearnDigit
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text15
  8433  006F26                     __ptext15:
  8434                           	callstack 0
  8435  006F26                     _SetSegmentValueLearn:
  8436                           	callstack 23
  8437                           
  8438                           ;incstack = 0
  8439                           ;SetSegmentValueLearn@direction stored from wreg
  8440  006F26  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8441                           
  8442                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8443  006F28  0E00               	movlw	0
  8444  006F2A  0100               	movlb	0	; () banked
  8445  006F2C  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8446  006F2E  0E00               	movlw	0
  8447  006F30  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8448                           
  8449                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8450  006F32  0E00               	movlw	0
  8451  006F34  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8452                           
  8453                           ;outputs_MC50.c: 128:     switch (direction)
  8454  006F36  D066               	goto	l12613
  8455  006F38                     l12559:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8459  006F38  0E1A               	movlw	26
  8460  006F3A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8461  006F3C  A4D8               	btfss	status,2,c
  8462  006F3E  D009               	goto	l12565
  8463                           
  8464                           ; BSR set to: 0
  8465  006F40  0E20               	movlw	32
  8466  006F42  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8467  006F44  A4D8               	btfss	status,2,c
  8468  006F46  D005               	goto	l12565
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8472  006F48  0E20               	movlw	32
  8473  006F4A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8474                           
  8475                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8476  006F4C  0E1A               	movlw	26
  8477  006F4E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8478                           
  8479                           ;outputs_MC50.c: 135:             }
  8480  006F50  0012               	return	
  8481  006F52                     l12565:
  8482                           
  8483                           ; BSR set to: 0
  8484  006F52  0E20               	movlw	32
  8485  006F54  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8486  006F56  A4D8               	btfss	status,2,c
  8487  006F58  D009               	goto	l12571
  8488                           
  8489                           ; BSR set to: 0
  8490  006F5A  0E1D               	movlw	29
  8491  006F5C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8492  006F5E  A4D8               	btfss	status,2,c
  8493  006F60  D005               	goto	l12571
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8497  006F62  0E1D               	movlw	29
  8498  006F64  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8499                           
  8500                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8501  006F66  0E20               	movlw	32
  8502  006F68  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8503                           
  8504                           ;outputs_MC50.c: 140:             }
  8505  006F6A  0012               	return	
  8506  006F6C                     l12571:
  8507                           
  8508                           ; BSR set to: 0
  8509  006F6C  0E1F               	movlw	31
  8510  006F6E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8511  006F70  A4D8               	btfss	status,2,c
  8512  006F72  D005               	goto	l12575
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8516  006F74  0E1A               	movlw	26
  8517  006F76  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8518                           
  8519                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8520  006F78  0E20               	movlw	32
  8521  006F7A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8522                           
  8523                           ;outputs_MC50.c: 145:             }
  8524  006F7C  0012               	return	
  8525  006F7E                     l12575:
  8526                           
  8527                           ; BSR set to: 0
  8528  006F7E  0E20               	movlw	32
  8529  006F80  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8530  006F82  A4D8               	btfss	status,2,c
  8531  006F84  D002               	goto	l12579
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8535  006F86  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8536                           
  8537                           ;outputs_MC50.c: 149:             }
  8538  006F88  0012               	return	
  8539  006F8A                     l12579:
  8540                           
  8541                           ; BSR set to: 0
  8542  006F8A  0E20               	movlw	32
  8543  006F8C  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8544  006F8E  A4D8               	btfss	status,2,c
  8545  006F90  D002               	goto	l12583
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8549  006F92  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8550                           
  8551                           ;outputs_MC50.c: 153:             }
  8552  006F94  0012               	return	
  8553  006F96                     l12583:
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8557  006F96  0E1A               	movlw	26
  8558  006F98  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8559                           
  8560                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8561  006F9A  0E20               	movlw	32
  8562  006F9C  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8563  006F9E  0012               	return	
  8564  006FA0                     l12585:
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8568  006FA0  0E1A               	movlw	26
  8569  006FA2  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8570  006FA4  A4D8               	btfss	status,2,c
  8571  006FA6  D009               	goto	l12591
  8572                           
  8573                           ; BSR set to: 0
  8574  006FA8  0E20               	movlw	32
  8575  006FAA  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8576  006FAC  A4D8               	btfss	status,2,c
  8577  006FAE  D005               	goto	l12591
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8581  006FB0  0E1A               	movlw	26
  8582  006FB2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8583                           
  8584                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8585  006FB4  0E20               	movlw	32
  8586  006FB6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8587                           
  8588                           ;outputs_MC50.c: 165:             }
  8589  006FB8  0012               	return	
  8590  006FBA                     l12591:
  8591                           
  8592                           ; BSR set to: 0
  8593  006FBA  0E20               	movlw	32
  8594  006FBC  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8595  006FBE  A4D8               	btfss	status,2,c
  8596  006FC0  D009               	goto	l12597
  8597                           
  8598                           ; BSR set to: 0
  8599  006FC2  0E1D               	movlw	29
  8600  006FC4  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8601  006FC6  A4D8               	btfss	status,2,c
  8602  006FC8  D005               	goto	l12597
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8606  006FCA  0E20               	movlw	32
  8607  006FCC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8608                           
  8609                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8610  006FCE  0E1D               	movlw	29
  8611  006FD0  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8612                           
  8613                           ;outputs_MC50.c: 170:             }
  8614  006FD2  0012               	return	
  8615  006FD4                     l12597:
  8616                           
  8617                           ; BSR set to: 0
  8618  006FD4  0E1A               	movlw	26
  8619  006FD6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8620  006FD8  A4D8               	btfss	status,2,c
  8621  006FDA  D003               	goto	l12601
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8625  006FDC  0E1F               	movlw	31
  8626  006FDE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8627                           
  8628                           ;outputs_MC50.c: 174:             }
  8629  006FE0  0012               	return	
  8630  006FE2                     l12601:
  8631                           
  8632                           ; BSR set to: 0
  8633  006FE2  0E20               	movlw	32
  8634  006FE4  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8635  006FE6  A4D8               	btfss	status,2,c
  8636  006FE8  D002               	goto	l12605
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8640  006FEA  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8641                           
  8642                           ;outputs_MC50.c: 178:             }
  8643  006FEC  0012               	return	
  8644  006FEE                     l12605:
  8645                           
  8646                           ; BSR set to: 0
  8647  006FEE  0E20               	movlw	32
  8648  006FF0  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8649  006FF2  A4D8               	btfss	status,2,c
  8650  006FF4  D002               	goto	l12609
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8654  006FF6  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8655                           
  8656                           ;outputs_MC50.c: 182:             }
  8657  006FF8  0012               	return	
  8658  006FFA                     l12609:
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8662  006FFA  0E1A               	movlw	26
  8663  006FFC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8664                           
  8665                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8666  006FFE  0E20               	movlw	32
  8667  007000  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8668  007002  0012               	return	
  8669  007004                     l12613:
  8670                           
  8671                           ; BSR set to: 0
  8672  007004  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8673  007006  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8674  007008  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8675                           
  8676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8677                           ; Switch size 1, requested type "simple"
  8678                           ; Number of cases is 1, Range of values is 0 to 0
  8679                           ; switch strategies available:
  8680                           ; Name         Instructions Cycles
  8681                           ; simple_byte            4     3 (average)
  8682                           ;	Chosen strategy is simple_byte
  8683  00700A  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8684  00700C  0A00               	xorlw	0	; case 0
  8685  00700E  A4D8               	btfss	status,2,c
  8686  007010  0012               	return	
  8687                           
  8688                           ; BSR set to: 0
  8689                           ; Switch size 1, requested type "simple"
  8690                           ; Number of cases is 2, Range of values is 0 to 1
  8691                           ; switch strategies available:
  8692                           ; Name         Instructions Cycles
  8693                           ; simple_byte            7     4 (average)
  8694                           ;	Chosen strategy is simple_byte
  8695  007012  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8696  007014  0A00               	xorlw	0	; case 0
  8697  007016  B4D8               	btfsc	status,2,c
  8698  007018  D7C3               	goto	l12585
  8699  00701A  0A01               	xorlw	1	; case 1
  8700  00701C  A4D8               	btfss	status,2,c
  8701  00701E  0012               	return	
  8702  007020  D78B               	goto	l12559
  8703  007022                     __end_of_SetSegmentValueLearn:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function ___lldiv *****************
  8707 ;; Defined at:
  8708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  dividend        4   15[COMRAM] unsigned long 
  8711 ;;  divisor         4   19[COMRAM] unsigned long 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  quotient        4   23[COMRAM] unsigned long 
  8714 ;;  counter         1   27[COMRAM] unsigned char 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  4   15[COMRAM] unsigned long 
  8717 ;; Registers used:
  8718 ;;		wreg, status,2, status,0
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/1
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8724 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8727 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;Total ram usage:       13 bytes
  8729 ;; Hardware stack levels used: 1
  8730 ;; Hardware stack levels required when called: 4
  8731 ;; This function calls:
  8732 ;;		Nothing
  8733 ;; This function is called by:
  8734 ;;		_sm_execute_menuConfiguration
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text16
  8739  007EA8                     __ptext16:
  8740                           	callstack 0
  8741  007EA8                     ___lldiv:
  8742                           	callstack 24
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;incstack = 0
  8746  007EA8  0E00               	movlw	0
  8747  007EAA  6E18               	movwf	___lldiv@quotient^0,c
  8748  007EAC  0E00               	movlw	0
  8749  007EAE  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8750  007EB0  0E00               	movlw	0
  8751  007EB2  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8752  007EB4  0E00               	movlw	0
  8753  007EB6  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8754  007EB8  5014               	movf	___lldiv@divisor^0,w,c
  8755  007EBA  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8756  007EBC  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8757  007EBE  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8758  007EC0  B4D8               	btfsc	status,2,c
  8759  007EC2  D02A               	goto	l3755
  8760  007EC4  0E01               	movlw	1
  8761  007EC6  6E1C               	movwf	___lldiv@counter^0,c
  8762  007EC8  D006               	goto	l14181
  8763  007ECA                     l14179:
  8764  007ECA  90D8               	bcf	status,0,c
  8765  007ECC  3614               	rlcf	___lldiv@divisor^0,f,c
  8766  007ECE  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8767  007ED0  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8768  007ED2  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8769  007ED4  2A1C               	incf	___lldiv@counter^0,f,c
  8770  007ED6                     l14181:
  8771  007ED6  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8772  007ED8  D7F8               	goto	l14179
  8773  007EDA                     u14010:
  8774  007EDA  90D8               	bcf	status,0,c
  8775  007EDC  3618               	rlcf	___lldiv@quotient^0,f,c
  8776  007EDE  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8777  007EE0  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8778  007EE2  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8779  007EE4  5014               	movf	___lldiv@divisor^0,w,c
  8780  007EE6  5C10               	subwf	___lldiv@dividend^0,w,c
  8781  007EE8  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8782  007EEA  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8783  007EEC  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8784  007EEE  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8785  007EF0  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8786  007EF2  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8787  007EF4  A0D8               	btfss	status,0,c
  8788  007EF6  D009               	goto	l14191
  8789  007EF8  5014               	movf	___lldiv@divisor^0,w,c
  8790  007EFA  5E10               	subwf	___lldiv@dividend^0,f,c
  8791  007EFC  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8792  007EFE  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8793  007F00  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8794  007F02  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8795  007F04  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8796  007F06  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8797  007F08  8018               	bsf	___lldiv@quotient^0,0,c
  8798  007F0A                     l14191:
  8799  007F0A  90D8               	bcf	status,0,c
  8800  007F0C  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8801  007F0E  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8802  007F10  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8803  007F12  3214               	rrcf	___lldiv@divisor^0,f,c
  8804  007F14  2E1C               	decfsz	___lldiv@counter^0,f,c
  8805  007F16  D7E1               	goto	u14010
  8806  007F18                     l3755:
  8807  007F18  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8808  007F1C  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8809  007F20  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8810  007F24  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8811  007F28  0012               	return		;funcret
  8812  007F2A                     __end_of___lldiv:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function _sm_execute_ControlGate *****************
  8816 ;; Defined at:
  8817 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  psm             2   15[BANK0 ] PTR struct .
  8820 ;;		 -> controlGate_stateMachine(11), 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1    wreg      void 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8827 ;; Tracked objects:
  8828 ;;		On entry : 3F/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;Total ram usage:        5 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 15
  8839 ;; This function calls:
  8840 ;;		_GetOpenOrder
  8841 ;;		_SetSegmentValueIntermitent
  8842 ;;		_WaitPreFlash
  8843 ;;		_actionZone_Closed
  8844 ;;		_actionZone_Closing
  8845 ;;		_actionZone_Opened
  8846 ;;		_actionZone_Opening
  8847 ;;		_sm_execute_ControlLearning
  8848 ;;		_sm_send_event
  8849 ;; This function is called by:
  8850 ;;		_main
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text17
  8855  003BB8                     __ptext17:
  8856                           	callstack 0
  8857  003BB8                     _sm_execute_ControlGate:
  8858                           	callstack 15
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8862                           
  8863                           ;incstack = 0
  8864  003BB8  0101               	movlb	1	; () banked
  8865  003BBA  05EE               	decf	_main_stateMachine& (0+255),w,b
  8866  003BBC  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8867  003BBE  A4D8               	btfss	status,2,c
  8868  003BC0  D006               	goto	l23917
  8869                           
  8870                           ; BSR set to: 1
  8871  003BC2  0E06               	movlw	6
  8872  003BC4  0102               	movlb	2	; () banked
  8873  003BC6  19BF               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8874  003BC8  11C0               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8875  003BCA  A4D8               	btfss	status,2,c
  8876  003BCC  0012               	return	
  8877  003BCE                     l23917:
  8878                           
  8879                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8880  003BCE  0101               	movlb	1	; () banked
  8881  003BD0  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8882  003BD2  A4D8               	btfss	status,2,c
  8883  003BD4  D0CE               	goto	l23991
  8884                           
  8885                           ; BSR set to: 1
  8886                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  8887  003BD6  EC7C  F041         	call	_WaitPreFlash	;wreg free
  8888  003BDA  D0CB               	goto	l23991
  8889  003BDC                     l23921:
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  8893  003BDC  EE20 F004          	lfsr	2,4
  8894  003BE0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8895  003BE2  26D9               	addwf	fsr2l,f,c
  8896  003BE4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8897  003BE6  22DA               	addwfc	fsr2h,f,c
  8898  003BE8  0E0A               	movlw	10
  8899  003BEA  18DE               	xorwf	postinc2,w,c
  8900  003BEC  10DE               	iorwf	postinc2,w,c
  8901  003BEE  A4D8               	btfss	status,2,c
  8902  003BF0  D006               	goto	l23925
  8903  003BF2                     u29510:
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  8907  003BF2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8908  003BF6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8909  003BFA  0E01               	movlw	1
  8910  003BFC  D0B5               	goto	L55
  8911  003BFE                     l23925:
  8912                           
  8913                           ; BSR set to: 0
  8914  003BFE  EE20 F004          	lfsr	2,4
  8915  003C02  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8916  003C04  26D9               	addwf	fsr2l,f,c
  8917  003C06  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8918  003C08  22DA               	addwfc	fsr2h,f,c
  8919  003C0A  0E0B               	movlw	11
  8920  003C0C  18DE               	xorwf	postinc2,w,c
  8921  003C0E  10DE               	iorwf	postinc2,w,c
  8922  003C10  A4D8               	btfss	status,2,c
  8923  003C12  D0CF               	goto	l23993
  8924  003C14  D038               	goto	u29580
  8925  003C16                     l23929:
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  8929  003C16  EE20 F004          	lfsr	2,4
  8930  003C1A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8931  003C1C  26D9               	addwf	fsr2l,f,c
  8932  003C1E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8933  003C20  22DA               	addwfc	fsr2h,f,c
  8934  003C22  0E0C               	movlw	12
  8935  003C24  18DE               	xorwf	postinc2,w,c
  8936  003C26  10DE               	iorwf	postinc2,w,c
  8937  003C28  A4D8               	btfss	status,2,c
  8938  003C2A  D072               	goto	l23977
  8939  003C2C                     u29530:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  8943  003C2C  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8944  003C30  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8945  003C34  0E02               	movlw	2
  8946  003C36  D098               	goto	L55
  8947  003C38                     l23937:
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  8951  003C38  EE20 F004          	lfsr	2,4
  8952  003C3C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8953  003C3E  26D9               	addwf	fsr2l,f,c
  8954  003C40  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8955  003C42  22DA               	addwfc	fsr2h,f,c
  8956  003C44  0E0D               	movlw	13
  8957  003C46  18DE               	xorwf	postinc2,w,c
  8958  003C48  10DE               	iorwf	postinc2,w,c
  8959  003C4A  B4D8               	btfsc	status,2,c
  8960  003C4C  D01C               	goto	u29580
  8961                           
  8962                           ; BSR set to: 0
  8963                           
  8964                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  8968  003C4E  EE20 F004          	lfsr	2,4
  8969  003C52  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8970  003C54  26D9               	addwf	fsr2l,f,c
  8971  003C56  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8972  003C58  22DA               	addwfc	fsr2h,f,c
  8973  003C5A  0E0E               	movlw	14
  8974  003C5C  18DE               	xorwf	postinc2,w,c
  8975  003C5E  10DE               	iorwf	postinc2,w,c
  8976  003C60  A4D8               	btfss	status,2,c
  8977  003C62  D02D               	goto	L129
  8978  003C64                     u29560:
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  8982  003C64  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8983  003C68  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8984  003C6C  0E03               	movlw	3
  8985  003C6E  D07C               	goto	L55
  8986  003C70                     l23949:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  8990  003C70  EE20 F004          	lfsr	2,4
  8991  003C74  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8992  003C76  26D9               	addwf	fsr2l,f,c
  8993  003C78  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8994  003C7A  22DA               	addwfc	fsr2h,f,c
  8995  003C7C  0E0D               	movlw	13
  8996  003C7E  18DE               	xorwf	postinc2,w,c
  8997  003C80  10DE               	iorwf	postinc2,w,c
  8998  003C82  A4D8               	btfss	status,2,c
  8999  003C84  D006               	goto	l23953
  9000  003C86                     u29580:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9004  003C86  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9005  003C8A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9006  003C8E  0E04               	movlw	4
  9007  003C90  D06B               	goto	L55
  9008  003C92                     l23953:
  9009                           
  9010                           ; BSR set to: 0
  9011  003C92  EE20 F004          	lfsr	2,4
  9012  003C96  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9013  003C98  26D9               	addwf	fsr2l,f,c
  9014  003C9A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9015  003C9C  22DA               	addwfc	fsr2h,f,c
  9016  003C9E  0E0F               	movlw	15
  9017  003CA0  18DE               	xorwf	postinc2,w,c
  9018  003CA2  10DE               	iorwf	postinc2,w,c
  9019  003CA4  B4D8               	btfsc	status,2,c
  9020  003CA6  D7A5               	goto	u29510
  9021                           
  9022                           ; BSR set to: 0
  9023                           
  9024                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9028  003CA8  EE20 F004          	lfsr	2,4
  9029  003CAC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9030  003CAE  26D9               	addwf	fsr2l,f,c
  9031  003CB0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9032  003CB2  22DA               	addwfc	fsr2h,f,c
  9033  003CB4  0E0C               	movlw	12
  9034  003CB6  18DE               	xorwf	postinc2,w,c
  9035  003CB8  10DE               	iorwf	postinc2,w,c
  9036  003CBA  B4D8               	btfsc	status,2,c
  9037  003CBC  D7B7               	goto	u29530
  9038  003CBE                     L129:
  9039                           
  9040                           ; BSR set to: 0
  9041                           
  9042                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9046  003CBE  EE20 F004          	lfsr	2,4
  9047  003CC2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9048  003CC4  26D9               	addwf	fsr2l,f,c
  9049  003CC6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9050  003CC8  22DA               	addwfc	fsr2h,f,c
  9051  003CCA  0E10               	movlw	16
  9052  003CCC  D044               	goto	L126
  9053  003CCE                     l23965:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9057  003CCE  EE20 F004          	lfsr	2,4
  9058  003CD2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9059  003CD4  26D9               	addwf	fsr2l,f,c
  9060  003CD6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9061  003CD8  22DA               	addwfc	fsr2h,f,c
  9062  003CDA  0E0E               	movlw	14
  9063  003CDC  18DE               	xorwf	postinc2,w,c
  9064  003CDE  10DE               	iorwf	postinc2,w,c
  9065  003CE0  B4D8               	btfsc	status,2,c
  9066  003CE2  D7C0               	goto	u29560
  9067                           
  9068                           ; BSR set to: 0
  9069                           
  9070                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9074  003CE4  EE20 F004          	lfsr	2,4
  9075  003CE8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9076  003CEA  26D9               	addwf	fsr2l,f,c
  9077  003CEC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9078  003CEE  22DA               	addwfc	fsr2h,f,c
  9079  003CF0  0E0C               	movlw	12
  9080  003CF2  18DE               	xorwf	postinc2,w,c
  9081  003CF4  10DE               	iorwf	postinc2,w,c
  9082  003CF6  B4D8               	btfsc	status,2,c
  9083  003CF8  D799               	goto	u29530
  9084                           
  9085                           ; BSR set to: 0
  9086                           
  9087                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9091  003CFA  EE20 F004          	lfsr	2,4
  9092  003CFE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9093  003D00  26D9               	addwf	fsr2l,f,c
  9094  003D02  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9095  003D04  22DA               	addwfc	fsr2h,f,c
  9096  003D06  0E10               	movlw	16
  9097  003D08  18DE               	xorwf	postinc2,w,c
  9098  003D0A  10DE               	iorwf	postinc2,w,c
  9099  003D0C  B4D8               	btfsc	status,2,c
  9100  003D0E  D027               	goto	L127
  9101  003D10                     l23977:
  9102                           
  9103                           ; BSR set to: 0
  9104  003D10  EE20 F004          	lfsr	2,4
  9105  003D14  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9106  003D16  26D9               	addwf	fsr2l,f,c
  9107  003D18  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9108  003D1A  22DA               	addwfc	fsr2h,f,c
  9109  003D1C  0E14               	movlw	20
  9110  003D1E  18DE               	xorwf	postinc2,w,c
  9111  003D20  10DE               	iorwf	postinc2,w,c
  9112  003D22  A4D8               	btfss	status,2,c
  9113  003D24  D046               	goto	l23993
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9117  003D26  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9118  003D2A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9119  003D2E  0E05               	movlw	5
  9120  003D30  D01B               	goto	L55
  9121  003D32                     l23981:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9125  003D32  EE20 F004          	lfsr	2,4
  9126  003D36  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9127  003D38  26D9               	addwf	fsr2l,f,c
  9128  003D3A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9129  003D3C  22DA               	addwfc	fsr2h,f,c
  9130  003D3E  0E13               	movlw	19
  9131  003D40  18DE               	xorwf	postinc2,w,c
  9132  003D42  10DE               	iorwf	postinc2,w,c
  9133  003D44  B4D8               	btfsc	status,2,c
  9134  003D46  D755               	goto	u29510
  9135                           
  9136                           ; BSR set to: 0
  9137                           
  9138                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9142  003D48  EE20 F004          	lfsr	2,4
  9143  003D4C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9144  003D4E  26D9               	addwf	fsr2l,f,c
  9145  003D50  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9146  003D52  22DA               	addwfc	fsr2h,f,c
  9147  003D54  0E12               	movlw	18
  9148  003D56                     L126:
  9149  003D56  18DE               	xorwf	postinc2,w,c
  9150  003D58  10DE               	iorwf	postinc2,w,c
  9151  003D5A  A4D8               	btfss	status,2,c
  9152  003D5C  D02A               	goto	l23993
  9153  003D5E                     L127:
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9157  003D5E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9158  003D62  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9159  003D66  0E00               	movlw	0
  9160  003D68                     L55:
  9161  003D68  6EDE               	movwf	postinc2,c
  9162  003D6A  0E00               	movlw	0
  9163  003D6C  6EDD               	movwf	postdec2,c
  9164  003D6E  D021               	goto	l23993
  9165  003D70                     l2653:
  9166                           
  9167                           ; BSR set to: 0
  9168  003D70  D7FF               	goto	l2653
  9169  003D72                     l23991:
  9170                           
  9171                           ; BSR set to: 1
  9172  003D72  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9173  003D76  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9174  003D7A  50DF               	movf	indf2,w,c
  9175  003D7C  0100               	movlb	0	; () banked
  9176  003D7E  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9177  003D80  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9178                           
  9179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9180                           ; Switch size 1, requested type "simple"
  9181                           ; Number of cases is 1, Range of values is 0 to 0
  9182                           ; switch strategies available:
  9183                           ; Name         Instructions Cycles
  9184                           ; simple_byte            4     3 (average)
  9185                           ;	Chosen strategy is simple_byte
  9186  003D82  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9187  003D84  0A00               	xorlw	0	; case 0
  9188  003D86  A4D8               	btfss	status,2,c
  9189  003D88  D7F3               	goto	l2653
  9190                           
  9191                           ; BSR set to: 0
  9192                           ; Switch size 1, requested type "simple"
  9193                           ; Number of cases is 6, Range of values is 0 to 5
  9194                           ; switch strategies available:
  9195                           ; Name         Instructions Cycles
  9196                           ; simple_byte           19    10 (average)
  9197                           ;	Chosen strategy is simple_byte
  9198  003D8A  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9199  003D8C  0A00               	xorlw	0	; case 0
  9200  003D8E  B4D8               	btfsc	status,2,c
  9201  003D90  D725               	goto	l23921
  9202  003D92  0A01               	xorlw	1	; case 1
  9203  003D94  B4D8               	btfsc	status,2,c
  9204  003D96  D73F               	goto	l23929
  9205  003D98  0A03               	xorlw	3	; case 2
  9206  003D9A  B4D8               	btfsc	status,2,c
  9207  003D9C  D74D               	goto	l23937
  9208  003D9E  0A01               	xorlw	1	; case 3
  9209  003DA0  B4D8               	btfsc	status,2,c
  9210  003DA2  D766               	goto	l23949
  9211  003DA4  0A07               	xorlw	7	; case 4
  9212  003DA6  B4D8               	btfsc	status,2,c
  9213  003DA8  D792               	goto	l23965
  9214  003DAA  0A01               	xorlw	1	; case 5
  9215  003DAC  B4D8               	btfsc	status,2,c
  9216  003DAE  D7C1               	goto	l23981
  9217  003DB0  D7DF               	goto	l2653
  9218  003DB2                     l23993:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9222  003DB2  0EE3               	movlw	low _controlGate_stateMachine
  9223  003DB4  6E12               	movwf	sm_send_event@psm^0,c
  9224  003DB6  0E01               	movlw	high _controlGate_stateMachine
  9225  003DB8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9226  003DBA  0E00               	movlw	0
  9227  003DBC  6E15               	movwf	(sm_send_event@event+1)^0,c
  9228  003DBE  0E00               	movlw	0
  9229  003DC0  6E14               	movwf	sm_send_event@event^0,c
  9230  003DC2  EC8F  F043         	call	_sm_send_event	;wreg free
  9231                           
  9232                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9233  003DC6  D07D               	goto	l24057
  9234  003DC8                     l23995:
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9238  003DC8  0E00               	movlw	0
  9239  003DCA  0101               	movlb	1	; () banked
  9240  003DCC  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9241  003DCE  0E64               	movlw	100
  9242  003DD0  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9243                           
  9244                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9245  003DD2  0E01               	movlw	1
  9246  003DD4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9247                           
  9248                           ; BSR set to: 1
  9249                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9250  003DD6  0E02               	movlw	2
  9251  003DD8  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9252  003DDA  B4D8               	btfsc	status,2,c
  9253  003DDC  D003               	goto	u29690
  9254                           
  9255                           ; BSR set to: 1
  9256  003DDE  0E03               	movlw	3
  9257  003DE0  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9258  003DE2  D027               	goto	l24017
  9259  003DE4                     u29690:
  9260                           
  9261                           ; BSR set to: 1
  9262                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9263  003DE4  EC5E  F02B         	call	_GetOpenOrder	;wreg free
  9264  003DE8  0100               	movlb	0	; () banked
  9265  003DEA  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9269  003DEC  0E14               	movlw	20
  9270  003DEE  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9271  003DF0  0E00               	movlw	0
  9272  003DF2  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9273  003DF4  0E14               	movlw	20
  9274  003DF6  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9275  003DF8  0E0E               	movlw	14
  9276  003DFA  EC2E  F048         	call	_SetSegmentValueIntermitent
  9277                           
  9278                           ; BSR set to: 1
  9279                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9280  003DFE  0E00               	movlw	0
  9281  003E00  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9282  003E02  0E0A               	movlw	10
  9283  003E04  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9284                           
  9285                           ; BSR set to: 1
  9286                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9287  003E06  0100               	movlb	0	; () banked
  9288  003E08  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9289  003E0A  A4D8               	btfss	status,2,c
  9290  003E0C  D00A               	goto	u29730
  9291                           
  9292                           ; BSR set to: 0
  9293  003E0E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9294  003E10  B4D8               	btfsc	status,2,c
  9295  003E12  D007               	goto	u29730
  9296                           
  9297                           ; BSR set to: 0
  9298  003E14  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9299  003E16  B4D8               	btfsc	status,2,c
  9300  003E18  D004               	goto	u29730
  9301                           
  9302                           ; BSR set to: 0
  9303  003E1A  0E17               	movlw	23
  9304  003E1C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9305  003E1E  A4D8               	btfss	status,2,c
  9306  003E20  0012               	return	
  9307  003E22                     u29730:
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9311  003E22  0E00               	movlw	0
  9312  003E24  0101               	movlb	1	; () banked
  9313  003E26  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9314                           
  9315                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9316  003E28  0E00               	movlw	0
  9317  003E2A  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9318                           
  9319                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9320  003E2C  0E01               	movlw	1
  9321  003E2E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9322  003E30  0012               	return	
  9323  003E32                     l24017:
  9324                           
  9325                           ; BSR set to: 1
  9326                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9327  003E32  0E01               	movlw	1
  9328  003E34  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9329                           
  9330                           ; BSR set to: 1
  9331                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9332  003E36  0E01               	movlw	1
  9333  003E38  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9334  003E3A  0E00               	movlw	0
  9335  003E3C  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9336  003E3E  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9337  003E40  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9338                           
  9339                           ; BSR set to: 1
  9340                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9341  003E42  0E00               	movlw	0
  9342  003E44  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9343                           
  9344                           ; BSR set to: 1
  9345                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9346  003E46  0E00               	movlw	0
  9347  003E48  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9348  003E4A  0E00               	movlw	0
  9349  003E4C  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9350  003E4E  0E00               	movlw	0
  9351  003E50  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9352  003E52  0E00               	movlw	0
  9353  003E54  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9354                           
  9355                           ; BSR set to: 1
  9356                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9357  003E56  0E00               	movlw	0
  9358  003E58  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9359                           
  9360                           ; BSR set to: 1
  9361                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9362  003E5A  0E00               	movlw	0
  9363  003E5C  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9364                           
  9365                           ; BSR set to: 1
  9366                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9367  003E5E  0E00               	movlw	0
  9368  003E60  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9369                           
  9370                           ; BSR set to: 1
  9371                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9372  003E62  0E00               	movlw	0
  9373  003E64  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9374  003E66  0E28               	movlw	40
  9375  003E68  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9376                           
  9377                           ; BSR set to: 1
  9378                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9379  003E6A  0E0C               	movlw	12
  9380  003E6C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9381  003E6E  0E00               	movlw	0
  9382  003E70  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9383  003E72  0E04               	movlw	4
  9384  003E74  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9385  003E76  0E0F               	movlw	15
  9386  003E78  EC2E  F048         	call	_SetSegmentValueIntermitent
  9387                           
  9388                           ; BSR set to: 1
  9389                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9390  003E7C  0EE3               	movlw	low _controlGate_stateMachine
  9391  003E7E  6E12               	movwf	sm_send_event@psm^0,c
  9392  003E80  0E01               	movlw	high _controlGate_stateMachine
  9393  003E82  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9394  003E84  0E00               	movlw	0
  9395  003E86  6E15               	movwf	(sm_send_event@event+1)^0,c
  9396  003E88  0E0A               	movlw	10
  9397  003E8A  6E14               	movwf	sm_send_event@event^0,c
  9398  003E8C  EC8F  F043         	call	_sm_send_event	;wreg free
  9399  003E90  0012               	return	
  9400  003E92                     l24037:
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9404  003E92  EC51  F03B         	call	_actionZone_Closed	;wreg free
  9405                           
  9406                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9407  003E96  0012               	return	
  9408  003E98                     l24039:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9412  003E98  EC0F  F025         	call	_actionZone_Opening	;wreg free
  9413  003E9C                     l24041:
  9414                           
  9415                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9416  003E9C  0E00               	movlw	0
  9417  003E9E  0101               	movlb	1	; () banked
  9418  003EA0  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9419  003EA2  0E64               	movlw	100
  9420  003EA4  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9421                           
  9422                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9423  003EA6  0012               	return	
  9424  003EA8                     l24043:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9428  003EA8  EC7E  F029         	call	_actionZone_Opened	;wreg free
  9429  003EAC  D7F7               	goto	l24041
  9430  003EAE                     l24047:
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9434  003EAE  EC8E  F022         	call	_actionZone_Closing	;wreg free
  9435  003EB2  D7F4               	goto	l24041
  9436  003EB4                     l24051:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9440  003EB4  0EB4               	movlw	low _controlLearning_stateMachine
  9441  003EB6  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9442  003EB8  0E02               	movlw	high _controlLearning_stateMachine
  9443  003EBA  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9444  003EBC  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9445  003EC0  D7ED               	goto	l24041
  9446  003EC2                     l24057:
  9447  003EC2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9448  003EC6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9449  003ECA  50DF               	movf	indf2,w,c
  9450  003ECC  0100               	movlb	0	; () banked
  9451  003ECE  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9452  003ED0  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9453                           
  9454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9455                           ; Switch size 1, requested type "simple"
  9456                           ; Number of cases is 1, Range of values is 0 to 0
  9457                           ; switch strategies available:
  9458                           ; Name         Instructions Cycles
  9459                           ; simple_byte            4     3 (average)
  9460                           ;	Chosen strategy is simple_byte
  9461  003ED2  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9462  003ED4  0A00               	xorlw	0	; case 0
  9463  003ED6  A4D8               	btfss	status,2,c
  9464  003ED8  0012               	return	
  9465                           
  9466                           ; BSR set to: 0
  9467                           ; Switch size 1, requested type "simple"
  9468                           ; Number of cases is 6, Range of values is 0 to 5
  9469                           ; switch strategies available:
  9470                           ; Name         Instructions Cycles
  9471                           ; simple_byte           19    10 (average)
  9472                           ;	Chosen strategy is simple_byte
  9473  003EDA  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9474  003EDC  0A00               	xorlw	0	; case 0
  9475  003EDE  B4D8               	btfsc	status,2,c
  9476  003EE0  D773               	goto	l23995
  9477  003EE2  0A01               	xorlw	1	; case 1
  9478  003EE4  B4D8               	btfsc	status,2,c
  9479  003EE6  D7D5               	goto	l24037
  9480  003EE8  0A03               	xorlw	3	; case 2
  9481  003EEA  B4D8               	btfsc	status,2,c
  9482  003EEC  D7D5               	goto	l24039
  9483  003EEE  0A01               	xorlw	1	; case 3
  9484  003EF0  B4D8               	btfsc	status,2,c
  9485  003EF2  D7DD               	goto	l24047
  9486  003EF4  0A07               	xorlw	7	; case 4
  9487  003EF6  B4D8               	btfsc	status,2,c
  9488  003EF8  D7D7               	goto	l24043
  9489  003EFA  0A01               	xorlw	1	; case 5
  9490  003EFC  A4D8               	btfss	status,2,c
  9491  003EFE  0012               	return	
  9492  003F00  D7D9               	goto	l24051
  9493  003F02                     __end_of_sm_execute_ControlGate:
  9494                           	callstack 0
  9495                           
  9496 ;; *************** function _sm_execute_ControlLearning *****************
  9497 ;; Defined at:
  9498 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  psm             2    4[BANK0 ] PTR struct .
  9501 ;;		 -> controlLearning_stateMachine(11), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 3F/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;Total ram usage:        5 bytes
  9518 ;; Hardware stack levels used: 1
  9519 ;; Hardware stack levels required when called: 14
  9520 ;; This function calls:
  9521 ;;		_GetOpenOrder
  9522 ;;		_SaveNVM_VarSystem
  9523 ;;		_calculateMean
  9524 ;;		_clearLearningValue
  9525 ;;		_generateErrorLearnig
  9526 ;;		_sm_send_event
  9527 ;; This function is called by:
  9528 ;;		_sm_execute_ControlGate
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text18
  9533  001886                     __ptext18:
  9534                           	callstack 0
  9535  001886                     _sm_execute_ControlLearning:
  9536                           	callstack 15
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9540                           
  9541                           ;incstack = 0
  9542  001886  EC5E  F02B         	call	_GetOpenOrder	;wreg free
  9543  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9544                           
  9545                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9546  00188C  D0B8               	goto	l22497
  9547  00188E                     l22423:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9551  00188E  EE20 F004          	lfsr	2,4
  9552  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9553  001894  26D9               	addwf	fsr2l,f,c
  9554  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9555  001898  22DA               	addwfc	fsr2h,f,c
  9556  00189A  0E0A               	movlw	10
  9557  00189C  18DE               	xorwf	postinc2,w,c
  9558  00189E  10DE               	iorwf	postinc2,w,c
  9559  0018A0  A4D8               	btfss	status,2,c
  9560  0018A2  D00D               	goto	l22431
  9561                           
  9562                           ; BSR set to: 0
  9563  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9564  0018A6  B4D8               	btfsc	status,2,c
  9565  0018A8  D00A               	goto	l22431
  9566                           
  9567                           ; BSR set to: 0
  9568  0018AA  0101               	movlb	1	; () banked
  9569  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9570  0018AE  A4D8               	btfss	status,2,c
  9571  0018B0  D006               	goto	l22431
  9572  0018B2                     u26540:
  9573                           
  9574                           ; BSR set to: 1
  9575                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9576  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9577  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9578  0018BA  0E02               	movlw	2
  9579  0018BC  D08A               	goto	L66
  9580  0018BE                     l22431:
  9581  0018BE  0100               	movlb	0	; () banked
  9582  0018C0  EE20 F004          	lfsr	2,4
  9583  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9584  0018C6  26D9               	addwf	fsr2l,f,c
  9585  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9586  0018CA  22DA               	addwfc	fsr2h,f,c
  9587  0018CC  0E0A               	movlw	10
  9588  0018CE  18DE               	xorwf	postinc2,w,c
  9589  0018D0  10DE               	iorwf	postinc2,w,c
  9590  0018D2  A4D8               	btfss	status,2,c
  9591  0018D4  D00D               	goto	l22439
  9592                           
  9593                           ; BSR set to: 0
  9594  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9595  0018D8  B4D8               	btfsc	status,2,c
  9596  0018DA  D004               	goto	u26570
  9597                           
  9598                           ; BSR set to: 0
  9599  0018DC  0101               	movlb	1	; () banked
  9600  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9601  0018E0  A4D8               	btfss	status,2,c
  9602  0018E2  D006               	goto	l22439
  9603  0018E4                     u26570:
  9604                           
  9605                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9606  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9607  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9608  0018EC  0E04               	movlw	4
  9609  0018EE  D071               	goto	L66
  9610  0018F0                     l22439:
  9611  0018F0  0100               	movlb	0	; () banked
  9612  0018F2  EE20 F004          	lfsr	2,4
  9613  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9614  0018F8  26D9               	addwf	fsr2l,f,c
  9615  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9616  0018FC  22DA               	addwfc	fsr2h,f,c
  9617  0018FE  0E0B               	movlw	11
  9618  001900  18DE               	xorwf	postinc2,w,c
  9619  001902  10DE               	iorwf	postinc2,w,c
  9620  001904  A4D8               	btfss	status,2,c
  9621  001906  D09B               	goto	l22499
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9625  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9626  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9627  001910  0E01               	movlw	1
  9628  001912  D05F               	goto	L66
  9629  001914                     l22443:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9633  001914  EE20 F004          	lfsr	2,4
  9634  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9635  00191A  26D9               	addwf	fsr2l,f,c
  9636  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9637  00191E  22DA               	addwfc	fsr2h,f,c
  9638  001920  0E0A               	movlw	10
  9639  001922  18DE               	xorwf	postinc2,w,c
  9640  001924  10DE               	iorwf	postinc2,w,c
  9641  001926  A4D8               	btfss	status,2,c
  9642  001928  D007               	goto	l22451
  9643                           
  9644                           ; BSR set to: 0
  9645  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9646  00192C  B4D8               	btfsc	status,2,c
  9647  00192E  D004               	goto	l22451
  9648                           
  9649                           ; BSR set to: 0
  9650  001930  0101               	movlb	1	; () banked
  9651  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9652  001934  B4D8               	btfsc	status,2,c
  9653  001936  D7BD               	goto	u26540
  9654  001938                     l22451:
  9655  001938  0100               	movlb	0	; () banked
  9656  00193A  EE20 F004          	lfsr	2,4
  9657  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9658  001940  26D9               	addwf	fsr2l,f,c
  9659  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9660  001944  22DA               	addwfc	fsr2h,f,c
  9661  001946  0E0A               	movlw	10
  9662  001948  18DE               	xorwf	postinc2,w,c
  9663  00194A  10DE               	iorwf	postinc2,w,c
  9664  00194C  A4D8               	btfss	status,2,c
  9665  00194E  D007               	goto	l22459
  9666                           
  9667                           ; BSR set to: 0
  9668  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9669  001952  B4D8               	btfsc	status,2,c
  9670  001954  D7C7               	goto	u26570
  9671                           
  9672                           ; BSR set to: 0
  9673  001956  0101               	movlb	1	; () banked
  9674  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9675  00195A  B4D8               	btfsc	status,2,c
  9676  00195C  D7C3               	goto	u26570
  9677  00195E                     l22459:
  9678  00195E  0100               	movlb	0	; () banked
  9679  001960                     L68:
  9680  001960  EE20 F004          	lfsr	2,4
  9681  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9682  001966  26D9               	addwf	fsr2l,f,c
  9683  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9684  00196A  22DA               	addwfc	fsr2h,f,c
  9685  00196C  0E10               	movlw	16
  9686  00196E  18DE               	xorwf	postinc2,w,c
  9687  001970  10DE               	iorwf	postinc2,w,c
  9688  001972  A4D8               	btfss	status,2,c
  9689  001974  D064               	goto	l22499
  9690  001976  D03C               	goto	L128
  9691  001978                     l22463:
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9695  001978  EE20 F004          	lfsr	2,4
  9696  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9697  00197E  26D9               	addwf	fsr2l,f,c
  9698  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9699  001982  22DA               	addwfc	fsr2h,f,c
  9700  001984  0E0B               	movlw	11
  9701  001986  18DE               	xorwf	postinc2,w,c
  9702  001988  10DE               	iorwf	postinc2,w,c
  9703  00198A  A4D8               	btfss	status,2,c
  9704  00198C  D7E9               	goto	L68
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9708  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9709  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9710  001996  0E03               	movlw	3
  9711  001998  D01C               	goto	L66
  9712  00199A                     l22471:
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9716  00199A  EE20 F004          	lfsr	2,4
  9717  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9718  0019A0  26D9               	addwf	fsr2l,f,c
  9719  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9720  0019A4  22DA               	addwfc	fsr2h,f,c
  9721  0019A6  0E0A               	movlw	10
  9722  0019A8  18DE               	xorwf	postinc2,w,c
  9723  0019AA  10DE               	iorwf	postinc2,w,c
  9724  0019AC  A4D8               	btfss	status,2,c
  9725  0019AE  D7D8               	goto	L68
  9726  0019B0  D799               	goto	u26570
  9727  0019B2                     l22479:
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9731  0019B2  EE20 F004          	lfsr	2,4
  9732  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9733  0019B8  26D9               	addwf	fsr2l,f,c
  9734  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9735  0019BC  22DA               	addwfc	fsr2h,f,c
  9736  0019BE  0E0B               	movlw	11
  9737  0019C0  18DE               	xorwf	postinc2,w,c
  9738  0019C2  10DE               	iorwf	postinc2,w,c
  9739  0019C4  A4D8               	btfss	status,2,c
  9740  0019C6  D7CC               	goto	L68
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9744  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9745  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9746  0019D0  0E05               	movlw	5
  9747  0019D2                     L66:
  9748  0019D2  6EDE               	movwf	postinc2,c
  9749  0019D4  0E00               	movlw	0
  9750  0019D6  6EDD               	movwf	postdec2,c
  9751  0019D8  D032               	goto	l22499
  9752  0019DA                     l22487:
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9756  0019DA  EE20 F004          	lfsr	2,4
  9757  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9758  0019E0  26D9               	addwf	fsr2l,f,c
  9759  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9760  0019E4  22DA               	addwfc	fsr2h,f,c
  9761  0019E6  0E0A               	movlw	10
  9762  0019E8  18DE               	xorwf	postinc2,w,c
  9763  0019EA  10DE               	iorwf	postinc2,w,c
  9764  0019EC  A4D8               	btfss	status,2,c
  9765  0019EE  D7B8               	goto	L68
  9766  0019F0                     L128:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9770  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9771  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9772  0019F8  0E00               	movlw	0
  9773  0019FA  D7EB               	goto	L66
  9774  0019FC                     l2912:
  9775                           
  9776                           ; BSR set to: 0
  9777  0019FC  D7FF               	goto	l2912
  9778  0019FE                     l22497:
  9779  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9780  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9781  001A06  50DF               	movf	indf2,w,c
  9782  001A08  0100               	movlb	0	; () banked
  9783  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9784  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9785                           
  9786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9787                           ; Switch size 1, requested type "simple"
  9788                           ; Number of cases is 1, Range of values is 0 to 0
  9789                           ; switch strategies available:
  9790                           ; Name         Instructions Cycles
  9791                           ; simple_byte            4     3 (average)
  9792                           ;	Chosen strategy is simple_byte
  9793  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9794  001A10  0A00               	xorlw	0	; case 0
  9795  001A12  A4D8               	btfss	status,2,c
  9796  001A14  D7F3               	goto	l2912
  9797                           
  9798                           ; BSR set to: 0
  9799                           ; Switch size 1, requested type "simple"
  9800                           ; Number of cases is 6, Range of values is 0 to 5
  9801                           ; switch strategies available:
  9802                           ; Name         Instructions Cycles
  9803                           ; simple_byte           19    10 (average)
  9804                           ;	Chosen strategy is simple_byte
  9805  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9806  001A18  0A00               	xorlw	0	; case 0
  9807  001A1A  B4D8               	btfsc	status,2,c
  9808  001A1C  D738               	goto	l22423
  9809  001A1E  0A01               	xorlw	1	; case 1
  9810  001A20  B4D8               	btfsc	status,2,c
  9811  001A22  D778               	goto	l22443
  9812  001A24  0A03               	xorlw	3	; case 2
  9813  001A26  B4D8               	btfsc	status,2,c
  9814  001A28  D7A7               	goto	l22463
  9815  001A2A  0A01               	xorlw	1	; case 3
  9816  001A2C  B4D8               	btfsc	status,2,c
  9817  001A2E  D7B5               	goto	l22471
  9818  001A30  0A07               	xorlw	7	; case 4
  9819  001A32  B4D8               	btfsc	status,2,c
  9820  001A34  D7BE               	goto	l22479
  9821  001A36  0A01               	xorlw	1	; case 5
  9822  001A38  B4D8               	btfsc	status,2,c
  9823  001A3A  D7CF               	goto	l22487
  9824  001A3C  D7DF               	goto	l2912
  9825  001A3E                     l22499:
  9826                           
  9827                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9828  001A3E  0EB4               	movlw	low _controlLearning_stateMachine
  9829  001A40  6E12               	movwf	sm_send_event@psm^0,c
  9830  001A42  0E02               	movlw	high _controlLearning_stateMachine
  9831  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9832  001A46  0E00               	movlw	0
  9833  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
  9834  001A4A  0E00               	movlw	0
  9835  001A4C  6E14               	movwf	sm_send_event@event^0,c
  9836  001A4E  EC8F  F043         	call	_sm_send_event	;wreg free
  9837                           
  9838                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9839  001A52  D280               	goto	l22755
  9840  001A54                     l22501:
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9844  001A54  0101               	movlb	1	; () banked
  9845  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9846  001A58  A4D8               	btfss	status,2,c
  9847  001A5A  D03A               	goto	l22519
  9848                           
  9849                           ; BSR set to: 1
  9850                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9851  001A5C  0E01               	movlw	1
  9852  001A5E  0100               	movlb	0	; () banked
  9853  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9857  001A62  0EB4               	movlw	low _controlLearning_stateMachine
  9858  001A64  6E12               	movwf	sm_send_event@psm^0,c
  9859  001A66  0E02               	movlw	high _controlLearning_stateMachine
  9860  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9861  001A6A  0E00               	movlw	0
  9862  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9863  001A6E  0E0A               	movlw	10
  9864  001A70  6E14               	movwf	sm_send_event@event^0,c
  9865  001A72  EC8F  F043         	call	_sm_send_event	;wreg free
  9866                           
  9867                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9868  001A76  0E01               	movlw	1
  9869  001A78  0101               	movlb	1	; () banked
  9870  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9871                           
  9872                           ; BSR set to: 1
  9873                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9874  001A7C  EC14  F040         	call	_clearLearningValue	;wreg free
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9878  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9879  001A82  B4D8               	btfsc	status,2,c
  9880  001A84  D016               	goto	l22517
  9881                           
  9882                           ; BSR set to: 0
  9883  001A86  0101               	movlb	1	; () banked
  9884  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9885  001A8A  A4D8               	btfss	status,2,c
  9886  001A8C  D012               	goto	l22517
  9887  001A8E                     u26760:
  9888                           
  9889                           ; BSR set to: 1
  9890                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
  9891  001A8E  0E01               	movlw	1
  9892  001A90  6FD2               	movwf	(_ts_system+55)& (0+255),b	;volatile
  9893  001A92  0E2C               	movlw	44
  9894  001A94  6FD1               	movwf	(_ts_system+54)& (0+255),b	;volatile
  9895                           
  9896                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
  9897  001A96  0E00               	movlw	0
  9898  001A98  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9899  001A9A  0E78               	movlw	120
  9900  001A9C  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9901                           
  9902                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9903  001A9E  0E00               	movlw	0
  9904  001AA0  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9905  001AA2  0E14               	movlw	20
  9906  001AA4  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9907                           
  9908                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
  9909  001AA6  0E01               	movlw	1
  9910  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9911                           
  9912                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
  9913  001AAA  0E00               	movlw	0
  9914  001AAC  0100               	movlb	0	; () banked
  9915  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
  9916                           
  9917                           ;sm_ControlLearning_MC50.c: 148:                  }
  9918  001AB0  0012               	return	
  9919  001AB2                     l22517:
  9920                           
  9921                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
  9922  001AB2  0E00               	movlw	0
  9923  001AB4  0101               	movlb	1	; () banked
  9924  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9925                           
  9926                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
  9927  001AB8  0E00               	movlw	0
  9928  001ABA  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9929  001ABC  0E50               	movlw	80
  9930  001ABE  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9931                           
  9932                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9933  001AC0  0E00               	movlw	0
  9934  001AC2  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9935  001AC4  0E14               	movlw	20
  9936  001AC6  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9937                           
  9938                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
  9939  001AC8  0E00               	movlw	0
  9940  001ACA  0100               	movlb	0	; () banked
  9941  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
  9942  001ACE  0012               	return	
  9943  001AD0                     l22519:
  9944                           
  9945                           ; BSR set to: 1
  9946                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
  9947  001AD0  0EB4               	movlw	low _controlLearning_stateMachine
  9948  001AD2  6E12               	movwf	sm_send_event@psm^0,c
  9949  001AD4  0E02               	movlw	high _controlLearning_stateMachine
  9950  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9951  001AD8  0E00               	movlw	0
  9952  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
  9953  001ADC  0E0B               	movlw	11
  9954  001ADE  6E14               	movwf	sm_send_event@event^0,c
  9955  001AE0  EC8F  F043         	call	_sm_send_event	;wreg free
  9956                           
  9957                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
  9958  001AE4  0E03               	movlw	3
  9959  001AE6  0101               	movlb	1	; () banked
  9960  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9961                           
  9962                           ; BSR set to: 1
  9963                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
  9964  001AEA  0E01               	movlw	1
  9965  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9966                           
  9967                           ; BSR set to: 1
  9968                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
  9969                           
  9970                           ;sm_ControlLearning_MC50.c: 163:             }
  9971  001AEE  0012               	return	
  9972  001AF0                     l22525:
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
  9976  001AF0  0101               	movlb	1	; () banked
  9977  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9978  001AF4  B4D8               	btfsc	status,2,c
  9979  001AF6  D00E               	goto	u26810
  9980                           
  9981                           ; BSR set to: 1
  9982  001AF8  0100               	movlb	0	; () banked
  9983  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
  9984  001AFC  B4D8               	btfsc	status,2,c
  9985  001AFE  D00A               	goto	u26810
  9986                           
  9987                           ; BSR set to: 0
  9988  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9989  001B02  B4D8               	btfsc	status,2,c
  9990  001B04  D003               	goto	u26800
  9991                           
  9992                           ; BSR set to: 0
  9993  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
  9994  001B08  A4D8               	btfss	status,2,c
  9995  001B0A  D028               	goto	l22553
  9996  001B0C                     u26800:
  9997                           
  9998                           ; BSR set to: 0
  9999  001B0C  0101               	movlb	1	; () banked
 10000  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10001  001B10  A4D8               	btfss	status,2,c
 10002  001B12  D024               	goto	l22553
 10003  001B14                     u26810:
 10004                           
 10005                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10006  001B14  0E01               	movlw	1
 10007  001B16  0100               	movlb	0	; () banked
 10008  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10009                           
 10010                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10011  001B1A  0E00               	movlw	0
 10012  001B1C  0101               	movlb	1	; () banked
 10013  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10014                           
 10015                           ; BSR set to: 1
 10016                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10017  001B20  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10018  001B22  D005               	goto	u26820
 10019  001B24  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10020  001B26  E102               	bnz	u26821
 10021  001B28  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10022  001B2A  B0D8               	btfsc	status,0,c
 10023  001B2C                     u26821:
 10024  001B2C  0012               	return	
 10025  001B2E                     u26820:
 10026                           
 10027                           ; BSR set to: 1
 10028                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10029  001B2E  0EB4               	movlw	low _controlLearning_stateMachine
 10030  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10031  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10032  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10033  001B36  0E00               	movlw	0
 10034  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10035  001B3A  0E0A               	movlw	10
 10036  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10037  001B3E  EC8F  F043         	call	_sm_send_event	;wreg free
 10038                           
 10039                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10040  001B42  0E01               	movlw	1
 10041  001B44  0101               	movlb	1	; () banked
 10042  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10043                           
 10044                           ; BSR set to: 1
 10045                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10046  001B48  EC14  F040         	call	_clearLearningValue	;wreg free
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10050  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10051  001B4E  B4D8               	btfsc	status,2,c
 10052  001B50  D7B0               	goto	l22517
 10053                           
 10054                           ; BSR set to: 0
 10055  001B52  0101               	movlb	1	; () banked
 10056  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10057  001B56  B4D8               	btfsc	status,2,c
 10058  001B58  D79A               	goto	u26760
 10059  001B5A  D7AB               	goto	l22517
 10060  001B5C                     l22553:
 10061  001B5C  0101               	movlb	1	; () banked
 10062  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10063  001B60  A4D8               	btfss	status,2,c
 10064  001B62  D003               	goto	l22557
 10065  001B64                     u26850:
 10066                           
 10067                           ; BSR set to: 1
 10068                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10069  001B64  ECC8  F042         	call	_generateErrorLearnig	;wreg free
 10070                           
 10071                           ;sm_ControlLearning_MC50.c: 198:             }
 10072  001B68  0012               	return	
 10073  001B6A                     l22557:
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10077  001B6A  0E00               	movlw	0
 10078  001B6C  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10079  001B6E  0E28               	movlw	40
 10080  001B70  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10081  001B72  0012               	return	
 10082  001B74                     l22559:
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10086  001B74  0101               	movlb	1	; () banked
 10087  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10088  001B78  A4D8               	btfss	status,2,c
 10089                           
 10090                           ; BSR set to: 1
 10091  001B7A  BFD2               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10092  001B7C  D009               	goto	u26880
 10093  001B7E  51D2               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10094  001B80  E103               	bnz	u26870
 10095  001B82  05D1               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10096  001B84  A0D8               	btfss	status,0,c
 10097  001B86  D004               	goto	u26880
 10098  001B88                     u26870:
 10099                           
 10100                           ; BSR set to: 1
 10101  001B88  0100               	movlb	0	; () banked
 10102  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10103  001B8C  A4D8               	btfss	status,2,c
 10104  001B8E  D02A               	goto	l22581
 10105  001B90                     u26880:
 10106                           
 10107                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10108  001B90  0E01               	movlw	1
 10109  001B92  0100               	movlb	0	; () banked
 10110  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10111                           
 10112                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10113  001B96  0E00               	movlw	0
 10114  001B98  0101               	movlb	1	; () banked
 10115  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10116                           
 10117                           ; BSR set to: 1
 10118                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10119  001B9C  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10120  001B9E  D005               	goto	u26890
 10121  001BA0  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10122  001BA2  E102               	bnz	u26891
 10123  001BA4  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10124  001BA6  B0D8               	btfsc	status,0,c
 10125  001BA8                     u26891:
 10126  001BA8  0012               	return	
 10127  001BAA                     u26890:
 10128                           
 10129                           ; BSR set to: 1
 10130                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10131  001BAA  0EB4               	movlw	low _controlLearning_stateMachine
 10132  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10133  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10134  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10135  001BB2  0E00               	movlw	0
 10136  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10137  001BB6  0E0B               	movlw	11
 10138  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10139  001BBA  EC8F  F043         	call	_sm_send_event	;wreg free
 10140                           
 10141                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10142  001BBE  0E03               	movlw	3
 10143  001BC0  0101               	movlb	1	; () banked
 10144  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10148  001BC4  0E00               	movlw	0
 10149  001BC6  6FD2               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10150  001BC8  0E64               	movlw	100
 10151  001BCA  6FD1               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10152                           
 10153                           ; BSR set to: 1
 10154                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10155  001BCC  0E00               	movlw	0
 10156  001BCE  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10157  001BD0  0E64               	movlw	100
 10158  001BD2                     L67:
 10159  001BD2  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10160                           
 10161                           ; BSR set to: 1
 10162                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10163  001BD4  0E00               	movlw	0
 10164  001BD6  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10165  001BD8  0E14               	movlw	20
 10166  001BDA  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10167                           
 10168                           ; BSR set to: 1
 10169                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10170  001BDC  0E00               	movlw	0
 10171  001BDE  0100               	movlb	0	; () banked
 10172  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10173  001BE2  0012               	return	
 10174  001BE4                     l22581:
 10175                           
 10176                           ; BSR set to: 0
 10177  001BE4  0101               	movlb	1	; () banked
 10178  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10179  001BE8  B4D8               	btfsc	status,2,c
 10180  001BEA  D7BC               	goto	u26850
 10181                           
 10182                           ; BSR set to: 1
 10183                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10184  001BEC  0E00               	movlw	0
 10185  001BEE  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10186  001BF0  0E28               	movlw	40
 10187  001BF2  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10188                           
 10189                           ; BSR set to: 1
 10190                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10191  001BF4  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10192  001BF6  D005               	goto	u26910
 10193  001BF8  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10194  001BFA  E102               	bnz	u26911
 10195  001BFC  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10196  001BFE  B0D8               	btfsc	status,0,c
 10197  001C00                     u26911:
 10198  001C00  0012               	return	
 10199  001C02                     u26910:
 10200                           
 10201                           ; BSR set to: 1
 10202                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10203  001C02  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10204  001C04  0012               	return	
 10205  001C06  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10206  001C08  E103               	bnz	u26920
 10207  001C0A  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10208  001C0C  A0D8               	btfss	status,0,c
 10209  001C0E  0012               	return	
 10210  001C10                     u26920:
 10211                           
 10212                           ; BSR set to: 1
 10213                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10214  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10215  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10216  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10217  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10218  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10219  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10220  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10221  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10222  001C2C  EC2F  F043         	call	_calculateMean	;wreg free
 10223  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10224  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10225  001C38  0012               	return	
 10226  001C3A                     l22593:
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10230  001C3A  0101               	movlb	1	; () banked
 10231  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10232  001C3E  B4D8               	btfsc	status,2,c
 10233  001C40  D004               	goto	u26940
 10234                           
 10235                           ; BSR set to: 1
 10236  001C42  0100               	movlb	0	; () banked
 10237  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10238  001C46  A4D8               	btfss	status,2,c
 10239  001C48  D020               	goto	l22613
 10240  001C4A                     u26940:
 10241                           
 10242                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10243  001C4A  0E01               	movlw	1
 10244  001C4C  0100               	movlb	0	; () banked
 10245  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10246                           
 10247                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10248  001C50  0E00               	movlw	0
 10249  001C52  0101               	movlb	1	; () banked
 10250  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10251                           
 10252                           ; BSR set to: 1
 10253                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10254  001C56  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10255  001C58  D005               	goto	u26950
 10256  001C5A  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10257  001C5C  E102               	bnz	u26951
 10258  001C5E  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10259  001C60  B0D8               	btfsc	status,0,c
 10260  001C62                     u26951:
 10261  001C62  0012               	return	
 10262  001C64                     u26950:
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10266  001C64  0EB4               	movlw	low _controlLearning_stateMachine
 10267  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10268  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10269  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10270  001C6C  0E00               	movlw	0
 10271  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10272  001C70  0E0A               	movlw	10
 10273  001C72  6E14               	movwf	sm_send_event@event^0,c
 10274  001C74  EC8F  F043         	call	_sm_send_event	;wreg free
 10275                           
 10276                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10277  001C78  0E01               	movlw	1
 10278  001C7A  0101               	movlb	1	; () banked
 10279  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10280                           
 10281                           ; BSR set to: 1
 10282                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10283  001C7E  0E00               	movlw	0
 10284  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10285                           
 10286                           ; BSR set to: 1
 10287                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10288  001C82  0E00               	movlw	0
 10289  001C84  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10290  001C86  0E3C               	movlw	60
 10291  001C88  D7A4               	goto	L67
 10292  001C8A                     l22613:
 10293                           
 10294                           ; BSR set to: 0
 10295  001C8A  0101               	movlb	1	; () banked
 10296  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10297  001C8E  B4D8               	btfsc	status,2,c
 10298  001C90  D769               	goto	u26850
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10302  001C92  0E00               	movlw	0
 10303  001C94  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10304  001C96  0E28               	movlw	40
 10305  001C98  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10309  001C9A  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10310  001C9C  D005               	goto	u26970
 10311  001C9E  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10312  001CA0  E102               	bnz	u26971
 10313  001CA2  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10314  001CA4  B0D8               	btfsc	status,0,c
 10315  001CA6                     u26971:
 10316  001CA6  0012               	return	
 10317  001CA8                     u26970:
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10321  001CA8  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10322  001CAA  0012               	return	
 10323  001CAC  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10324  001CAE  E103               	bnz	u26980
 10325  001CB0  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10326  001CB2  A0D8               	btfss	status,0,c
 10327  001CB4  0012               	return	
 10328  001CB6                     u26980:
 10329                           
 10330                           ; BSR set to: 1
 10331                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10332  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10333  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10334  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10335  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10336  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10337  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10338  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10339  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10340  001CD2  EC2F  F043         	call	_calculateMean	;wreg free
 10341  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10342  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10343  001CDE  0012               	return	
 10344  001CE0                     l22625:
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10348  001CE0  0101               	movlb	1	; () banked
 10349  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10350  001CE4  B4D8               	btfsc	status,2,c
 10351  001CE6  D011               	goto	u27040
 10352                           
 10353                           ; BSR set to: 1
 10354  001CE8  0100               	movlb	0	; () banked
 10355  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10356  001CEC  B4D8               	btfsc	status,2,c
 10357  001CEE  D00D               	goto	u27040
 10358                           
 10359                           ; BSR set to: 0
 10360  001CF0  0101               	movlb	1	; () banked
 10361  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10362  001CF4  A4D8               	btfss	status,2,c
 10363  001CF6  D02C               	goto	l22651
 10364                           
 10365                           ; BSR set to: 1
 10366  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10367  001CFA  B4D8               	btfsc	status,2,c
 10368  001CFC  D003               	goto	u27030
 10369                           
 10370                           ; BSR set to: 1
 10371  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10372  001D00  A4D8               	btfss	status,2,c
 10373  001D02  D026               	goto	l22651
 10374  001D04                     u27030:
 10375                           
 10376                           ; BSR set to: 1
 10377  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10378  001D06  A4D8               	btfss	status,2,c
 10379  001D08  D023               	goto	l22651
 10380  001D0A                     u27040:
 10381                           
 10382                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10383  001D0A  0E00               	movlw	0
 10384  001D0C  0101               	movlb	1	; () banked
 10385  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10386                           
 10387                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10388  001D10  0E00               	movlw	0
 10389  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10390                           
 10391                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10392  001D14  0E01               	movlw	1
 10393  001D16  0100               	movlb	0	; () banked
 10394  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10395                           
 10396                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10397  001D1A  0E00               	movlw	0
 10398  001D1C  0101               	movlb	1	; () banked
 10399  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10403  001D20  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10404  001D22  D005               	goto	u27050
 10405  001D24  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10406  001D26  E102               	bnz	u27051
 10407  001D28  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10408  001D2A  B0D8               	btfsc	status,0,c
 10409  001D2C                     u27051:
 10410  001D2C  0012               	return	
 10411  001D2E                     u27050:
 10412                           
 10413                           ; BSR set to: 1
 10414                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10415  001D2E  0EB4               	movlw	low _controlLearning_stateMachine
 10416  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10417  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10418  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10419  001D36  0E00               	movlw	0
 10420  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10421  001D3A  0E0B               	movlw	11
 10422  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10423  001D3E  EC8F  F043         	call	_sm_send_event	;wreg free
 10424                           
 10425                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10426  001D42  0E03               	movlw	3
 10427  001D44  0101               	movlb	1	; () banked
 10428  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10429                           
 10430                           ; BSR set to: 1
 10431                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10432  001D48  0E00               	movlw	0
 10433  001D4A  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10434  001D4C  0E50               	movlw	80
 10435  001D4E  D741               	goto	L67
 10436  001D50                     l22651:
 10437                           
 10438                           ; BSR set to: 1
 10439  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10440  001D52  B4D8               	btfsc	status,2,c
 10441  001D54  D707               	goto	u26850
 10442                           
 10443                           ; BSR set to: 1
 10444  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10445  001D58  B4D8               	btfsc	status,2,c
 10446  001D5A  D003               	goto	u27080
 10447                           
 10448                           ; BSR set to: 1
 10449  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10450  001D5E  A4D8               	btfss	status,2,c
 10451  001D60  D00F               	goto	l22665
 10452  001D62                     u27080:
 10453                           
 10454                           ; BSR set to: 1
 10455  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10456  001D64  A4D8               	btfss	status,2,c
 10457  001D66  D00C               	goto	l22665
 10458                           
 10459                           ; BSR set to: 1
 10460  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10461  001D6A  A4D8               	btfss	status,2,c
 10462  001D6C  D009               	goto	l22665
 10463  001D6E                     u27100:
 10464                           
 10465                           ; BSR set to: 1
 10466                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10467  001D6E  0E01               	movlw	1
 10468  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10469                           
 10470                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10471  001D72  0E01               	movlw	1
 10472  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10473                           
 10474                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10475  001D76  0E00               	movlw	0
 10476  001D78  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10477  001D7A  0E50               	movlw	80
 10478  001D7C  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10479                           
 10480                           ;sm_ControlLearning_MC50.c: 309:             }
 10481  001D7E  0012               	return	
 10482  001D80                     l22665:
 10483                           
 10484                           ; BSR set to: 1
 10485  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10486  001D82  A4D8               	btfss	status,2,c
 10487  001D84  D00C               	goto	l22673
 10488                           
 10489                           ; BSR set to: 1
 10490                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10491  001D86  0E00               	movlw	0
 10492  001D88  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10493  001D8A  0E28               	movlw	40
 10494  001D8C  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10495                           
 10496                           ; BSR set to: 1
 10497                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10498  001D8E  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10499  001D90  0012               	return	
 10500  001D92  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10501  001D94  E103               	bnz	u27120
 10502  001D96  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10503  001D98  A0D8               	btfss	status,0,c
 10504  001D9A  0012               	return	
 10505  001D9C                     u27120:
 10506  001D9C  D739               	goto	u26920
 10507  001D9E                     l22673:
 10508                           
 10509                           ; BSR set to: 1
 10510                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10511  001D9E  0E01               	movlw	1
 10512  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10513                           
 10514                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10515  001DA2  0E00               	movlw	0
 10516  001DA4  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10517  001DA6  0E28               	movlw	40
 10518  001DA8  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10519                           
 10520                           ; BSR set to: 1
 10521                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10522  001DAA  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10523  001DAC  D005               	goto	u27130
 10524  001DAE  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10525  001DB0  E102               	bnz	u27131
 10526  001DB2  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10527  001DB4  B0D8               	btfsc	status,0,c
 10528  001DB6                     u27131:
 10529  001DB6  0012               	return	
 10530  001DB8                     u27130:
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10534  001DB8  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10535  001DBA  0012               	return	
 10536  001DBC  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10537  001DBE  E103               	bnz	u27140
 10538  001DC0  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10539  001DC2  A0D8               	btfss	status,0,c
 10540  001DC4  0012               	return	
 10541  001DC6                     u27140:
 10542                           
 10543                           ; BSR set to: 1
 10544                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10545  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10546  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10547  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10548  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10549  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10550  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10551  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10552  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10553  001DDE  EC2F  F043         	call	_calculateMean	;wreg free
 10554  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10555  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10556  001DEA  0012               	return	
 10557  001DEC                     l22681:
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10561  001DEC  0101               	movlb	1	; () banked
 10562  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10563  001DF0  B4D8               	btfsc	status,2,c
 10564  001DF2  D00C               	goto	u27190
 10565                           
 10566                           ; BSR set to: 1
 10567  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10568  001DF6  A4D8               	btfss	status,2,c
 10569  001DF8  D06F               	goto	l22727
 10570                           
 10571                           ; BSR set to: 1
 10572  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10573  001DFC  B4D8               	btfsc	status,2,c
 10574  001DFE  D003               	goto	u27180
 10575                           
 10576                           ; BSR set to: 1
 10577  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10578  001E02  A4D8               	btfss	status,2,c
 10579  001E04  D069               	goto	l22727
 10580  001E06                     u27180:
 10581                           
 10582                           ; BSR set to: 1
 10583  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10584  001E08  A4D8               	btfss	status,2,c
 10585  001E0A  D066               	goto	l22727
 10586  001E0C                     u27190:
 10587                           
 10588                           ; BSR set to: 1
 10589                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10590  001E0C  0E01               	movlw	1
 10591  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10592                           
 10593                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10594  001E10  0E00               	movlw	0
 10595  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10596                           
 10597                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10598  001E14  0E00               	movlw	0
 10599  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10600                           
 10601                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10602  001E18  0E00               	movlw	0
 10603  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10604                           
 10605                           ; BSR set to: 1
 10606                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10607  001E1C  0EB4               	movlw	low _controlLearning_stateMachine
 10608  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10609  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10610  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10611  001E24  0E00               	movlw	0
 10612  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10613  001E28  0E0A               	movlw	10
 10614  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10615  001E2C  EC8F  F043         	call	_sm_send_event	;wreg free
 10616                           
 10617                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10618  001E30  0EE3               	movlw	low _controlGate_stateMachine
 10619  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10620  001E34  0E01               	movlw	high _controlGate_stateMachine
 10621  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10622  001E38  0E00               	movlw	0
 10623  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10624  001E3C  0E13               	movlw	19
 10625  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10626  001E40  EC8F  F043         	call	_sm_send_event	;wreg free
 10627                           
 10628                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10629  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10630  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10631  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10632  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10633                           
 10634                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10635  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10636  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10637  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10638  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10639                           
 10640                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10641  001E64  0101               	movlb	1	; () banked
 10642  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10643  001E68  A4D8               	btfss	status,2,c
 10644  001E6A  D005               	goto	l22705
 10645                           
 10646                           ; BSR set to: 1
 10647                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10648  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10649                           
 10650                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10651  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10652                           
 10653                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10654  001E74  D005               	goto	l22707
 10655  001E76                     l22705:
 10656                           
 10657                           ; BSR set to: 1
 10658                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10659  001E76  0E04               	movlw	4
 10660  001E78  0100               	movlb	0	; () banked
 10661  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10662                           
 10663                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10664  001E7C  0E04               	movlw	4
 10665  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10666  001E80                     l22707:
 10667                           
 10668                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10669  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10670  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10671                           
 10672                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10673  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10674  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10675                           
 10676                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10677  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10678  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10679  001E98  0100               	movlb	0	; () banked
 10680  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10681  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10685  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10686  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10687  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10688  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10692  001EAA  0E00               	movlw	0
 10693  001EAC  EC97  F047         	call	_SaveNVM_VarSystem
 10694                           
 10695                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10696  001EB0  0E03               	movlw	3
 10697  001EB2  EC97  F047         	call	_SaveNVM_VarSystem
 10698                           
 10699                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10700  001EB6  0E02               	movlw	2
 10701  001EB8  EC97  F047         	call	_SaveNVM_VarSystem
 10702                           
 10703                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10704  001EBC  0E00               	movlw	0
 10705  001EBE  0101               	movlb	1	; () banked
 10706  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10707                           
 10708                           ; BSR set to: 1
 10709                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10710  001EC2  0E00               	movlw	0
 10711  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10712  001EC6  0E00               	movlw	0
 10713  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10714  001ECA  0E00               	movlw	0
 10715  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10716  001ECE  0E00               	movlw	0
 10717  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10718                           
 10719                           ; BSR set to: 1
 10720                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10721  001ED2  0E00               	movlw	0
 10722  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10723                           
 10724                           ;sm_ControlLearning_MC50.c: 369:             }
 10725  001ED6  0012               	return	
 10726  001ED8                     l22727:
 10727                           
 10728                           ; BSR set to: 1
 10729  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10730  001EDA  B4D8               	btfsc	status,2,c
 10731  001EDC  D643               	goto	u26850
 10732                           
 10733                           ; BSR set to: 1
 10734  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10735  001EE0  B4D8               	btfsc	status,2,c
 10736  001EE2  D003               	goto	u27230
 10737                           
 10738                           ; BSR set to: 1
 10739  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10740  001EE6  A4D8               	btfss	status,2,c
 10741  001EE8  D003               	goto	l22739
 10742  001EEA                     u27230:
 10743                           
 10744                           ; BSR set to: 1
 10745  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10746  001EEC  B4D8               	btfsc	status,2,c
 10747  001EEE  D73F               	goto	u27100
 10748  001EF0                     l22739:
 10749                           
 10750                           ; BSR set to: 1
 10751  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10752  001EF2  A4D8               	btfss	status,2,c
 10753  001EF4  D008               	goto	l22745
 10754                           
 10755                           ; BSR set to: 1
 10756                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10757  001EF6  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10758  001EF8  0012               	return	
 10759  001EFA  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10760  001EFC  E103               	bnz	u27260
 10761  001EFE  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10762  001F00  A0D8               	btfss	status,0,c
 10763  001F02  0012               	return	
 10764  001F04                     u27260:
 10765  001F04  D6D8               	goto	u26980
 10766  001F06                     l22745:
 10767                           
 10768                           ; BSR set to: 1
 10769                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10770  001F06  0E01               	movlw	1
 10771  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10772                           
 10773                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10774  001F0A  0E00               	movlw	0
 10775  001F0C  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10776  001F0E  0E28               	movlw	40
 10777  001F10  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10778                           
 10779                           ; BSR set to: 1
 10780                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10781  001F12  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10782  001F14  D005               	goto	u27270
 10783  001F16  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10784  001F18  E102               	bnz	u27271
 10785  001F1A  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10786  001F1C  B0D8               	btfsc	status,0,c
 10787  001F1E                     u27271:
 10788  001F1E  0012               	return	
 10789  001F20                     u27270:
 10790                           
 10791                           ; BSR set to: 1
 10792                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10793  001F20  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10794  001F22  0012               	return	
 10795  001F24  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10796  001F26  E103               	bnz	u27280
 10797  001F28  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10798  001F2A  A0D8               	btfss	status,0,c
 10799  001F2C  0012               	return	
 10800  001F2E                     u27280:
 10801                           
 10802                           ; BSR set to: 1
 10803                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10804  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10805  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10806  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10807  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10808  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10809  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10810  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10811  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10812  001F46  EC2F  F043         	call	_calculateMean	;wreg free
 10813  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10814  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10815  001F52  0012               	return	
 10816  001F54                     l22755:
 10817  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10818  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10819  001F5C  50DF               	movf	indf2,w,c
 10820  001F5E  0100               	movlb	0	; () banked
 10821  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10822  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10823                           
 10824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10825                           ; Switch size 1, requested type "simple"
 10826                           ; Number of cases is 1, Range of values is 0 to 0
 10827                           ; switch strategies available:
 10828                           ; Name         Instructions Cycles
 10829                           ; simple_byte            4     3 (average)
 10830                           ;	Chosen strategy is simple_byte
 10831  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10832  001F66  0A00               	xorlw	0	; case 0
 10833  001F68  A4D8               	btfss	status,2,c
 10834  001F6A  0012               	return	
 10835                           
 10836                           ; BSR set to: 0
 10837                           ; Switch size 1, requested type "simple"
 10838                           ; Number of cases is 6, Range of values is 0 to 5
 10839                           ; switch strategies available:
 10840                           ; Name         Instructions Cycles
 10841                           ; simple_byte           19    10 (average)
 10842                           ;	Chosen strategy is simple_byte
 10843  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10844  001F6E  0A00               	xorlw	0	; case 0
 10845  001F70  B4D8               	btfsc	status,2,c
 10846  001F72  D570               	goto	l22501
 10847  001F74  0A01               	xorlw	1	; case 1
 10848  001F76  B4D8               	btfsc	status,2,c
 10849  001F78  D5BB               	goto	l22525
 10850  001F7A  0A03               	xorlw	3	; case 2
 10851  001F7C  B4D8               	btfsc	status,2,c
 10852  001F7E  D5FA               	goto	l22559
 10853  001F80  0A01               	xorlw	1	; case 3
 10854  001F82  B4D8               	btfsc	status,2,c
 10855  001F84  D65A               	goto	l22593
 10856  001F86  0A07               	xorlw	7	; case 4
 10857  001F88  B4D8               	btfsc	status,2,c
 10858  001F8A  D6AA               	goto	l22625
 10859  001F8C  0A01               	xorlw	1	; case 5
 10860  001F8E  A4D8               	btfss	status,2,c
 10861  001F90  0012               	return	
 10862  001F92  D72C               	goto	l22681
 10863  001F94                     __end_of_sm_execute_ControlLearning:
 10864                           	callstack 0
 10865                           
 10866 ;; *************** function _generateErrorLearnig *****************
 10867 ;; Defined at:
 10868 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 3E/1
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 6
 10889 ;; This function calls:
 10890 ;;		_sm_init
 10891 ;; This function is called by:
 10892 ;;		_sm_execute_ControlLearning
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text19
 10897  008590                     __ptext19:
 10898                           	callstack 0
 10899  008590                     _generateErrorLearnig:
 10900                           	callstack 22
 10901                           
 10902                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 10903                           
 10904                           ;incstack = 0
 10905  008590  0E00               	movlw	0
 10906  008592  0101               	movlb	1	; () banked
 10907  008594  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 10911  008596  0EBF               	movlw	low _menuConfiguration_stateMachine
 10912  008598  6E12               	movwf	sm_init@psm^0,c
 10913  00859A  0E02               	movlw	high _menuConfiguration_stateMachine
 10914  00859C  6E13               	movwf	(sm_init@psm+1)^0,c
 10915  00859E  0E00               	movlw	0
 10916  0085A0  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10917  0085A2  0E00               	movlw	0
 10918  0085A4  6E14               	movwf	sm_init@initial_state^0,c
 10919  0085A6  0E00               	movlw	0
 10920  0085A8  6E16               	movwf	sm_init@hist_mode^0,c
 10921  0085AA  EC72  F044         	call	_sm_init	;wreg free
 10922                           
 10923                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 10924  0085AE  0EEE               	movlw	low _main_stateMachine
 10925  0085B0  6E12               	movwf	sm_init@psm^0,c
 10926  0085B2  0E01               	movlw	high _main_stateMachine
 10927  0085B4  6E13               	movwf	(sm_init@psm+1)^0,c
 10928  0085B6  0E00               	movlw	0
 10929  0085B8  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10930  0085BA  0E00               	movlw	0
 10931  0085BC  6E14               	movwf	sm_init@initial_state^0,c
 10932  0085BE  0E00               	movlw	0
 10933  0085C0  6E16               	movwf	sm_init@hist_mode^0,c
 10934  0085C2  EC72  F044         	call	_sm_init	;wreg free
 10935                           
 10936                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 10937  0085C6  0EE3               	movlw	low _controlGate_stateMachine
 10938  0085C8  6E12               	movwf	sm_init@psm^0,c
 10939  0085CA  0E01               	movlw	high _controlGate_stateMachine
 10940  0085CC  6E13               	movwf	(sm_init@psm+1)^0,c
 10941  0085CE  0E00               	movlw	0
 10942  0085D0  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10943  0085D2  0E00               	movlw	0
 10944  0085D4  6E14               	movwf	sm_init@initial_state^0,c
 10945  0085D6  0E00               	movlw	0
 10946  0085D8  6E16               	movwf	sm_init@hist_mode^0,c
 10947  0085DA  EC72  F044         	call	_sm_init	;wreg free
 10948                           
 10949                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 10950  0085DE  0EB4               	movlw	low _controlLearning_stateMachine
 10951  0085E0  6E12               	movwf	sm_init@psm^0,c
 10952  0085E2  0E02               	movlw	high _controlLearning_stateMachine
 10953  0085E4  6E13               	movwf	(sm_init@psm+1)^0,c
 10954  0085E6  0E00               	movlw	0
 10955  0085E8  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10956  0085EA  0E00               	movlw	0
 10957  0085EC  6E14               	movwf	sm_init@initial_state^0,c
 10958  0085EE  0E00               	movlw	0
 10959  0085F0  6E16               	movwf	sm_init@hist_mode^0,c
 10960  0085F2  EC72  F044         	call	_sm_init	;wreg free
 10961  0085F6  0012               	return		;funcret
 10962  0085F8                     __end_of_generateErrorLearnig:
 10963                           	callstack 0
 10964                           
 10965 ;; *************** function _sm_init *****************
 10966 ;; Defined at:
 10967 ;;		line 12 in file "sm_common_MC50.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;  psm             2   17[COMRAM] PTR struct .
 10970 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 10971 ;;  initial_stat    2   19[COMRAM] int 
 10972 ;;  hist_mode       1   21[COMRAM] enum E348
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;		None
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1    wreg      void 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/1
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10984 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10988 ;;Total ram usage:        5 bytes
 10989 ;; Hardware stack levels used: 1
 10990 ;; Hardware stack levels required when called: 5
 10991 ;; This function calls:
 10992 ;;		_sm_restart
 10993 ;; This function is called by:
 10994 ;;		_main
 10995 ;;		_generateErrorLearnig
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text20
 11000  0088E4                     __ptext20:
 11001                           	callstack 0
 11002  0088E4                     _sm_init:
 11003                           	callstack 25
 11004                           
 11005                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11006                           
 11007                           ;incstack = 0
 11008  0088E4  EE20 F002          	lfsr	2,2
 11009  0088E8  5012               	movf	sm_init@psm^0,w,c
 11010  0088EA  26D9               	addwf	fsr2l,f,c
 11011  0088EC  5013               	movf	(sm_init@psm+1)^0,w,c
 11012  0088EE  22DA               	addwfc	fsr2h,f,c
 11013  0088F0  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11014  0088F4  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11015                           
 11016                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11017  0088F8  EE20 F006          	lfsr	2,6
 11018  0088FC  5012               	movf	sm_init@psm^0,w,c
 11019  0088FE  26D9               	addwf	fsr2l,f,c
 11020  008900  5013               	movf	(sm_init@psm+1)^0,w,c
 11021  008902  22DA               	addwfc	fsr2h,f,c
 11022  008904  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11023                           
 11024                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11025  008908  C012  FFD9         	movff	sm_init@psm,fsr2l
 11026  00890C  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11027  008910  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11028  008914  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11029                           
 11030                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11031  008918  EE20 F007          	lfsr	2,7
 11032  00891C  5012               	movf	sm_init@psm^0,w,c
 11033  00891E  26D9               	addwf	fsr2l,f,c
 11034  008920  5013               	movf	(sm_init@psm+1)^0,w,c
 11035  008922  22DA               	addwfc	fsr2h,f,c
 11036  008924  0E00               	movlw	0
 11037  008926  6EDE               	movwf	postinc2,c
 11038  008928  0E00               	movlw	0
 11039  00892A  6EDD               	movwf	postdec2,c
 11040                           
 11041                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11042  00892C  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11043  008930  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11044  008934  EC77  F046         	call	_sm_restart	;wreg free
 11045  008938  0012               	return		;funcret
 11046  00893A                     __end_of_sm_init:
 11047                           	callstack 0
 11048                           
 11049 ;; *************** function _sm_restart *****************
 11050 ;; Defined at:
 11051 ;;		line 23 in file "sm_common_MC50.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  psm             2   15[COMRAM] PTR struct .
 11054 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/1
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11070 ;;Total ram usage:        2 bytes
 11071 ;; Hardware stack levels used: 1
 11072 ;; Hardware stack levels required when called: 4
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_sm_init
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text21
 11081  008CEE                     __ptext21:
 11082                           	callstack 0
 11083  008CEE                     _sm_restart:
 11084                           	callstack 25
 11085                           
 11086                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11087                           
 11088                           ;incstack = 0
 11089  008CEE  EE20 F006          	lfsr	2,6
 11090  008CF2  5010               	movf	sm_restart@psm^0,w,c
 11091  008CF4  26D9               	addwf	fsr2l,f,c
 11092  008CF6  5011               	movf	(sm_restart@psm+1)^0,w,c
 11093  008CF8  22DA               	addwfc	fsr2h,f,c
 11094  008CFA  50DF               	movf	indf2,w,c
 11095  008CFC  A4D8               	btfss	status,2,c
 11096  008CFE  D00E               	goto	l20119
 11097                           
 11098                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11099  008D00  EE20 F002          	lfsr	2,2
 11100  008D04  5010               	movf	sm_restart@psm^0,w,c
 11101  008D06  26D9               	addwf	fsr2l,f,c
 11102  008D08  5011               	movf	(sm_restart@psm+1)^0,w,c
 11103  008D0A  22DA               	addwfc	fsr2h,f,c
 11104  008D0C  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11105  008D10  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11106  008D14  CFDE FFE6          	movff	postinc2,postinc1
 11107  008D18  CFDD FFE5          	movff	postdec2,postdec1
 11108  008D1C                     l20119:
 11109                           
 11110                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11111  008D1C  EE20 F004          	lfsr	2,4
 11112  008D20  5010               	movf	sm_restart@psm^0,w,c
 11113  008D22  26D9               	addwf	fsr2l,f,c
 11114  008D24  5011               	movf	(sm_restart@psm+1)^0,w,c
 11115  008D26  22DA               	addwfc	fsr2h,f,c
 11116  008D28  0E00               	movlw	0
 11117  008D2A  6EDE               	movwf	postinc2,c
 11118  008D2C  0E00               	movlw	0
 11119  008D2E  6EDD               	movwf	postdec2,c
 11120  008D30  0012               	return		;funcret
 11121  008D32                     __end_of_sm_restart:
 11122                           	callstack 0
 11123                           
 11124 ;; *************** function _clearLearningValue *****************
 11125 ;; Defined at:
 11126 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;		None
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;		None
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      void 
 11133 ;; Registers used:
 11134 ;;		wreg, status,2
 11135 ;; Tracked objects:
 11136 ;;		On entry : 3F/1
 11137 ;;		On exit  : 3F/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11144 ;;Total ram usage:        0 bytes
 11145 ;; Hardware stack levels used: 1
 11146 ;; Hardware stack levels required when called: 4
 11147 ;; This function calls:
 11148 ;;		Nothing
 11149 ;; This function is called by:
 11150 ;;		_sm_execute_ControlLearning
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text22
 11155  008028                     __ptext22:
 11156                           	callstack 0
 11157  008028                     _clearLearningValue:
 11158                           	callstack 24
 11159                           
 11160                           ; BSR set to: 1
 11161                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11162                           
 11163                           ;incstack = 0
 11164  008028  0E00               	movlw	0
 11165  00802A  0100               	movlb	0	; () banked
 11166  00802C  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11167  00802E  0E00               	movlw	0
 11168  008030  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11169  008032  0E00               	movlw	0
 11170  008034  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11171  008036  0E00               	movlw	0
 11172  008038  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11173                           
 11174                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11175  00803A  0E00               	movlw	0
 11176  00803C  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11177  00803E  0E00               	movlw	0
 11178  008040  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11179  008042  0E00               	movlw	0
 11180  008044  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11181  008046  0E00               	movlw	0
 11182  008048  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11183                           
 11184                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11185  00804A  0E00               	movlw	0
 11186  00804C  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11187                           
 11188                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11189  00804E  0E00               	movlw	0
 11190  008050  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11191                           
 11192                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11193  008052  0E00               	movlw	0
 11194  008054  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11195  008056  0E00               	movlw	0
 11196  008058  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11197                           
 11198                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11199  00805A  0E00               	movlw	0
 11200  00805C  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11201  00805E  0E00               	movlw	0
 11202  008060  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11203                           
 11204                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11205  008062  0E00               	movlw	0
 11206  008064  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11207  008066  0E00               	movlw	0
 11208  008068  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11209                           
 11210                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11211  00806A  0E00               	movlw	0
 11212  00806C  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11213  00806E  0E00               	movlw	0
 11214  008070  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11215                           
 11216                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11217  008072  0E00               	movlw	0
 11218  008074  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11219  008076  0E00               	movlw	0
 11220  008078  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11221                           
 11222                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11223  00807A  0E00               	movlw	0
 11224  00807C  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11225  00807E  0E00               	movlw	0
 11226  008080  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11227                           
 11228                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11229  008082  0E00               	movlw	0
 11230  008084  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11231  008086  0E00               	movlw	0
 11232  008088  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11233  00808A  0E00               	movlw	0
 11234  00808C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11235  00808E  0E00               	movlw	0
 11236  008090  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11237                           
 11238                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11239  008092  0E00               	movlw	0
 11240  008094  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11241  008096  0E00               	movlw	0
 11242  008098  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11243  00809A  0E00               	movlw	0
 11244  00809C  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11245  00809E  0E00               	movlw	0
 11246  0080A0  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11247                           
 11248                           ; BSR set to: 0
 11249  0080A2  0012               	return		;funcret
 11250  0080A4                     __end_of_clearLearningValue:
 11251                           	callstack 0
 11252                           
 11253 ;; *************** function _calculateMean *****************
 11254 ;; Defined at:
 11255 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  meanValue       4   15[COMRAM] unsigned long 
 11258 ;;  newValue        4   19[COMRAM] unsigned long 
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;		None
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  4   15[COMRAM] unsigned long 
 11263 ;; Registers used:
 11264 ;;		wreg, status,2, status,0
 11265 ;; Tracked objects:
 11266 ;;		On entry : 3E/1
 11267 ;;		On exit  : 3E/0
 11268 ;;		Unchanged: 3E/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11270 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11274 ;;Total ram usage:       12 bytes
 11275 ;; Hardware stack levels used: 1
 11276 ;; Hardware stack levels required when called: 4
 11277 ;; This function calls:
 11278 ;;		Nothing
 11279 ;; This function is called by:
 11280 ;;		_sm_execute_ControlLearning
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text23
 11285  00865E                     __ptext23:
 11286                           	callstack 0
 11287  00865E                     _calculateMean:
 11288                           	callstack 24
 11289                           
 11290                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;incstack = 0
 11294  00865E  5010               	movf	calculateMean@meanValue^0,w,c
 11295  008660  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11296  008662  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11297  008664  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11298  008666  A4D8               	btfss	status,2,c
 11299  008668  D009               	goto	l21079
 11300                           
 11301                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11302  00866A  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11303  00866E  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11304  008672  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11305  008676  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11306                           
 11307                           ;sm_ControlLearning_MC50.c: 416:     }
 11308  00867A  D019               	goto	l21081
 11309  00867C                     l21079:
 11310                           
 11311                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11312  00867C  5014               	movf	calculateMean@newValue^0,w,c
 11313  00867E  2410               	addwf	calculateMean@meanValue^0,w,c
 11314  008680  6E18               	movwf	??_calculateMean^0,c
 11315  008682  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11316  008684  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11317  008686  6E19               	movwf	(??_calculateMean+1)^0,c
 11318  008688  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11319  00868A  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11320  00868C  6E1A               	movwf	(??_calculateMean+2)^0,c
 11321  00868E  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11322  008690  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11323  008692  6E1B               	movwf	(??_calculateMean+3)^0,c
 11324  008694  90D8               	bcf	status,0,c
 11325  008696  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11326  008698  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11327  00869A  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11328  00869C  3218               	rrcf	??_calculateMean^0,f,c
 11329  00869E  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11330  0086A2  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11331  0086A6  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11332  0086AA  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11333  0086AE                     l21081:
 11334                           
 11335                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11336  0086AE  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11337  0086B2  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11338  0086B6  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11339  0086BA  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11340  0086BE  0012               	return		;funcret
 11341  0086C0                     __end_of_calculateMean:
 11342                           	callstack 0
 11343                           
 11344 ;; *************** function _actionZone_Opening *****************
 11345 ;; Defined at:
 11346 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11351 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11352 ;;  securityClos    1   12[BANK0 ] enum E10397
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  1    wreg      void 
 11355 ;; Registers used:
 11356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11357 ;; Tracked objects:
 11358 ;;		On entry : 3F/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;Total ram usage:        3 bytes
 11367 ;; Hardware stack levels used: 1
 11368 ;; Hardware stack levels required when called: 8
 11369 ;; This function calls:
 11370 ;;		_CloseOrder
 11371 ;;		_GetOpenOrder
 11372 ;;		_GetSecurityStateInClosing
 11373 ;;		_GetSecurityStateInOpening
 11374 ;;		_InitFullAutoTime
 11375 ;;		_InitWalkAutoTime
 11376 ;;		_SetSegmentValueIntermitent
 11377 ;;		_StopOrder
 11378 ;;		_VerifyFollowMe
 11379 ;;		_controlVelocity
 11380 ;;		_setPositionInvertionInClosing
 11381 ;;		_setPositionInvertionInOpening
 11382 ;;		_sm_send_event
 11383 ;; This function is called by:
 11384 ;;		_sm_execute_ControlGate
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text24
 11389  004A1E                     __ptext24:
 11390                           	callstack 0
 11391  004A1E                     _actionZone_Opening:
 11392                           	callstack 21
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11396                           
 11397                           ;incstack = 0
 11398  004A1E  ECA6  F03B         	call	_GetSecurityStateInClosing	;wreg free
 11399  004A22  0100               	movlb	0	; () banked
 11400  004A24  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11401                           
 11402                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11403  004A26  ECF9  F03B         	call	_GetSecurityStateInOpening	;wreg free
 11404  004A2A  0100               	movlb	0	; () banked
 11405  004A2C  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11409  004A2E  EC5E  F02B         	call	_GetOpenOrder	;wreg free
 11410  004A32  0100               	movlb	0	; () banked
 11411  004A34  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11415  004A36  EC6F  F028         	call	_controlVelocity	;wreg free
 11416                           
 11417                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11418  004A3A  EC91  F04A         	call	_InitFullAutoTime	;wreg free
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11422  004A3E  0E00               	movlw	0
 11423  004A40  0101               	movlb	1	; () banked
 11424  004A42  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11425                           
 11426                           ; BSR set to: 1
 11427                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11428  004A44  0100               	movlb	0	; () banked
 11429  004A46  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11430  004A48  ECE9  F049         	call	_VerifyFollowMe
 11431                           
 11432                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11433  004A4C  0E03               	movlw	3
 11434  004A4E  0101               	movlb	1	; () banked
 11435  004A50  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11436  004A52  D00D               	goto	l21957
 11437                           
 11438                           ; BSR set to: 1
 11439                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11440  004A54  0E00               	movlw	0
 11441  004A56  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11442  004A58                     l21955:
 11443                           
 11444                           ; BSR set to: 1
 11445                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11446  004A58  0EE3               	movlw	low _controlGate_stateMachine
 11447  004A5A  6E12               	movwf	sm_send_event@psm^0,c
 11448  004A5C  0E01               	movlw	high _controlGate_stateMachine
 11449  004A5E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11450  004A60  0E00               	movlw	0
 11451  004A62  6E15               	movwf	(sm_send_event@event+1)^0,c
 11452  004A64  0E10               	movlw	16
 11453  004A66  6E14               	movwf	sm_send_event@event^0,c
 11454  004A68  EC8F  F043         	call	_sm_send_event	;wreg free
 11455                           
 11456                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11457  004A6C  0012               	return	
 11458  004A6E                     l21957:
 11459                           
 11460                           ; BSR set to: 1
 11461  004A6E  0E02               	movlw	2
 11462  004A70  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11463  004A72  A4D8               	btfss	status,2,c
 11464  004A74  D013               	goto	l21971
 11465                           
 11466                           ; BSR set to: 1
 11467  004A76  BFAC               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11468  004A78  D005               	goto	u25470
 11469  004A7A  51AC               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11470  004A7C  E10F               	bnz	l21971
 11471  004A7E  05AB               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11472  004A80  B0D8               	btfsc	status,0,c
 11473  004A82  D00C               	goto	l21971
 11474  004A84                     u25470:
 11475                           
 11476                           ; BSR set to: 1
 11477                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11478  004A84  EC02  F039         	call	_setPositionInvertionInOpening	;wreg free
 11479                           
 11480                           ; BSR set to: 1
 11481                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11482  004A88  EC3F  F04A         	call	_StopOrder	;wreg free
 11483                           
 11484                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11485  004A8C  EC16  F04B         	call	_InitWalkAutoTime	;wreg free
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11489  004A90  0E01               	movlw	1
 11490  004A92  0101               	movlb	1	; () banked
 11491  004A94  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11492                           
 11493                           ; BSR set to: 1
 11494                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11495  004A96  0E01               	movlw	1
 11496  004A98  6F8E               	movwf	_Abertura_pedonal& (0+255),b
 11497                           
 11498                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11499  004A9A  0012               	return	
 11500  004A9C                     l21971:
 11501                           
 11502                           ; BSR set to: 1
 11503  004A9C  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11504  004A9E  B4D8               	btfsc	status,2,c
 11505  004AA0  D010               	goto	u25520
 11506                           
 11507                           ; BSR set to: 1
 11508  004AA2  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11509  004AA4  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11510  004AA6  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11511  004AA8  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11512  004AAA  A4D8               	btfss	status,2,c
 11513  004AAC  D02F               	goto	l21991
 11514                           
 11515                           ; BSR set to: 1
 11516  004AAE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11517  004AB0  A4D8               	btfss	status,2,c
 11518  004AB2  D02C               	goto	l21991
 11519                           
 11520                           ; BSR set to: 1
 11521  004AB4  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11522  004AB6  A4D8               	btfss	status,2,c
 11523  004AB8  D029               	goto	l21991
 11524                           
 11525                           ; BSR set to: 1
 11526  004ABA  0E02               	movlw	2
 11527  004ABC  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11528  004ABE  A4D8               	btfss	status,2,c
 11529  004AC0  D025               	goto	l21991
 11530  004AC2                     u25520:
 11531                           
 11532                           ; BSR set to: 1
 11533                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11534  004AC2  0E04               	movlw	4
 11535  004AC4  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11536                           
 11537                           ; BSR set to: 1
 11538                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11539  004AC6  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11540  004ACA  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11541  004ACE  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11542  004AD2  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11543                           
 11544                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11545  004AD6  0E00               	movlw	0
 11546  004AD8  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11547                           
 11548                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11549  004ADA  0E00               	movlw	0
 11550  004ADC  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11551                           
 11552                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11553  004ADE  0E01               	movlw	1
 11554  004AE0  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11555                           
 11556                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11557  004AE2  0E00               	movlw	0
 11558  004AE4  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11559                           
 11560                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11561  004AE6  0E00               	movlw	0
 11562  004AE8  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11563  004AEA  0E28               	movlw	40
 11564  004AEC  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11565                           
 11566                           ; BSR set to: 1
 11567                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11568  004AEE  0E00               	movlw	0
 11569  004AF0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11570  004AF2  0E00               	movlw	0
 11571  004AF4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11572  004AF6  0E04               	movlw	4
 11573  004AF8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11574  004AFA  0E0F               	movlw	15
 11575  004AFC  EC2E  F048         	call	_SetSegmentValueIntermitent
 11576                           
 11577                           ; BSR set to: 1
 11578                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11579  004B00  EC3F  F04A         	call	_StopOrder	;wreg free
 11580                           
 11581                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11582  004B04  0E01               	movlw	1
 11583  004B06  0101               	movlb	1	; () banked
 11584  004B08  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11585                           
 11586                           ;sm_ControlGate_MC50.c: 419:     }
 11587  004B0A  0012               	return	
 11588  004B0C                     l21991:
 11589                           
 11590                           ; BSR set to: 1
 11591  004B0C  0100               	movlb	0	; () banked
 11592  004B0E  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11593  004B10  B4D8               	btfsc	status,2,c
 11594  004B12  D012               	goto	u25560
 11595                           
 11596                           ; BSR set to: 0
 11597  004B14  0101               	movlb	1	; () banked
 11598  004B16  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11599  004B18  D025               	goto	l22011
 11600  004B1A  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11601  004B1C  E103               	bnz	u25540
 11602  004B1E  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11603  004B20  A0D8               	btfss	status,0,c
 11604  004B22  D020               	goto	l22011
 11605  004B24                     u25540:
 11606                           
 11607                           ; BSR set to: 1
 11608  004B24  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11609  004B26  A4D8               	btfss	status,2,c
 11610  004B28  D01D               	goto	l22011
 11611                           
 11612                           ; BSR set to: 1
 11613  004B2A  BFCC               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11614  004B2C  D005               	goto	u25560
 11615  004B2E  51CC               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11616  004B30  E119               	bnz	l22011
 11617  004B32  05CB               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11618  004B34  B0D8               	btfsc	status,0,c
 11619  004B36  D016               	goto	l22011
 11620  004B38                     u25560:
 11621  004B38  0101               	movlb	1	; () banked
 11622  004B3A  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11623  004B3C  A4D8               	btfss	status,2,c
 11624  004B3E  D012               	goto	l22011
 11625                           
 11626                           ; BSR set to: 1
 11627                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11628  004B40  0100               	movlb	0	; () banked
 11629  004B42  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11630  004B44  B4D8               	btfsc	status,2,c
 11631  004B46  D002               	goto	l22005
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11635  004B48  0101               	movlb	1	; () banked
 11636  004B4A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11637  004B4C                     l22005:
 11638                           
 11639                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11640  004B4C  0E01               	movlw	1
 11641  004B4E  0101               	movlb	1	; () banked
 11642  004B50  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11643                           
 11644                           ; BSR set to: 1
 11645                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11646  004B52  0E00               	movlw	0
 11647  004B54  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11648  004B56  0E0A               	movlw	10
 11649  004B58  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11650                           
 11651                           ; BSR set to: 1
 11652                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11653  004B5A  0E00               	movlw	0
 11654  004B5C  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11655  004B5E  0E1E               	movlw	30
 11656  004B60  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11657                           
 11658                           ;sm_ControlGate_MC50.c: 430:     }
 11659  004B62  0012               	return	
 11660  004B64                     l22011:
 11661                           
 11662                           ; BSR set to: 1
 11663  004B64  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11664  004B66  D02D               	goto	l22041
 11665  004B68  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11666  004B6A  E103               	bnz	u25590
 11667  004B6C  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11668  004B6E  A0D8               	btfss	status,0,c
 11669  004B70  D028               	goto	l22041
 11670  004B72                     u25590:
 11671                           
 11672                           ; BSR set to: 1
 11673  004B72  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11674  004B74  A4D8               	btfss	status,2,c
 11675  004B76  D025               	goto	l22041
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11679  004B78  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11680  004B7A  A4D8               	btfss	status,2,c
 11681  004B7C  D005               	goto	l22023
 11682                           
 11683                           ; BSR set to: 1
 11684                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11685  004B7E  0E00               	movlw	0
 11686  004B80  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11687                           
 11688                           ; BSR set to: 1
 11689                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11690  004B82  EC5B  F034         	call	_setPositionInvertionInClosing	;wreg free
 11691  004B86  D768               	goto	l21955
 11692  004B88                     l22023:
 11693                           
 11694                           ; BSR set to: 1
 11695  004B88  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11696  004B8A  D005               	goto	u25620
 11697  004B8C  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11698  004B8E  E116               	bnz	l22039
 11699  004B90  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11700  004B92  B0D8               	btfsc	status,0,c
 11701  004B94  D013               	goto	l22039
 11702  004B96                     u25620:
 11703                           
 11704                           ; BSR set to: 1
 11705                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11706  004B96  EC8A  F049         	call	_CloseOrder	;wreg free
 11707                           
 11708                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11709  004B9A  EC02  F039         	call	_setPositionInvertionInOpening	;wreg free
 11710                           
 11711                           ; BSR set to: 1
 11712                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11713  004B9E  0E00               	movlw	0
 11714  004BA0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11715                           
 11716                           ; BSR set to: 1
 11717                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11718  004BA2  0E01               	movlw	1
 11719  004BA4  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11723  004BA6  0E00               	movlw	0
 11724  004BA8  6FCC               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11725  004BAA  0E14               	movlw	20
 11726  004BAC  6FCB               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11727                           
 11728                           ; BSR set to: 1
 11729                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11730  004BAE  0E00               	movlw	0
 11731  004BB0  6FCE               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11732  004BB2  0E28               	movlw	40
 11733  004BB4  6FCD               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11734                           
 11735                           ; BSR set to: 1
 11736                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11737  004BB6  0E01               	movlw	1
 11738  004BB8  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11739                           
 11740                           ;sm_ControlGate_MC50.c: 449:         } else
 11741  004BBA  0012               	return	
 11742  004BBC                     l22039:
 11743                           
 11744                           ; BSR set to: 1
 11745                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11746  004BBC  0E00               	movlw	0
 11747  004BBE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11748  004BC0  0012               	return	
 11749  004BC2                     l22041:
 11750                           
 11751                           ; BSR set to: 1
 11752  004BC2  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11753  004BC4  A4D8               	btfss	status,2,c
 11754  004BC6  D00A               	goto	l22061
 11755                           
 11756                           ; BSR set to: 1
 11757                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11758  004BC8  0E00               	movlw	0
 11759  004BCA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11760                           
 11761                           ; BSR set to: 1
 11762                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11763  004BCC  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11764  004BCE  D7E3               	goto	u25620
 11765  004BD0  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11766  004BD2  E14E               	bnz	l2723
 11767  004BD4  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11768  004BD6  B0D8               	btfsc	status,0,c
 11769  004BD8  0012               	return	
 11770  004BDA  D7DD               	goto	u25620
 11771  004BDC                     l22061:
 11772                           
 11773                           ; BSR set to: 1
 11774  004BDC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11775  004BDE  A4D8               	btfss	status,2,c
 11776  004BE0  D018               	goto	l22079
 11777                           
 11778                           ; BSR set to: 1
 11779  004BE2  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11780  004BE4  D005               	goto	u25660
 11781  004BE6  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11782  004BE8  E114               	bnz	l22079
 11783  004BEA  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11784  004BEC  B0D8               	btfsc	status,0,c
 11785  004BEE  D011               	goto	l22079
 11786  004BF0                     u25660:
 11787                           
 11788                           ; BSR set to: 1
 11789                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11790  004BF0  0E02               	movlw	2
 11791  004BF2  0100               	movlb	0	; () banked
 11792  004BF4  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11793  004BF6  B4D8               	btfsc	status,2,c
 11794  004BF8  D007               	goto	l22075
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11798  004BFA  0101               	movlb	1	; () banked
 11799  004BFC  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11800                           
 11801                           ; BSR set to: 1
 11802                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11803  004BFE  0E00               	movlw	0
 11804  004C00  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11808  004C02  EC02  F039         	call	_setPositionInvertionInOpening	;wreg free
 11809  004C06  D728               	goto	l21955
 11810  004C08                     l22075:
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11814  004C08  EC02  F039         	call	_setPositionInvertionInOpening	;wreg free
 11815  004C0C                     l22077:
 11816                           
 11817                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11818  004C0C  EC3F  F04A         	call	_StopOrder	;wreg free
 11819  004C10  0012               	return	
 11820  004C12                     l22079:
 11821                           
 11822                           ; BSR set to: 1
 11823  004C12  0100               	movlb	0	; () banked
 11824  004C14  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11825  004C16  A4D8               	btfss	status,2,c
 11826  004C18  D005               	goto	l22085
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11830  004C1A  0E03               	movlw	3
 11831  004C1C  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11832  004C1E  B4D8               	btfsc	status,2,c
 11833  004C20  0012               	return	
 11834  004C22  D7F4               	goto	l22077
 11835  004C24                     l22085:
 11836                           
 11837                           ; BSR set to: 0
 11838  004C24  0E02               	movlw	2
 11839  004C26  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11840  004C28  A4D8               	btfss	status,2,c
 11841  004C2A  D011               	goto	l22097
 11842                           
 11843                           ; BSR set to: 0
 11844  004C2C  0E02               	movlw	2
 11845  004C2E  0101               	movlb	1	; () banked
 11846  004C30  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11847  004C32  A4D8               	btfss	status,2,c
 11848  004C34  D00C               	goto	l22097
 11849                           
 11850                           ; BSR set to: 1
 11851  004C36  0E02               	movlw	2
 11852  004C38  0100               	movlb	0	; () banked
 11853  004C3A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11854  004C3C  B4D8               	btfsc	status,2,c
 11855  004C3E  D007               	goto	l22097
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11859  004C40  EC02  F039         	call	_setPositionInvertionInOpening	;wreg free
 11860                           
 11861                           ; BSR set to: 1
 11862                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11863  004C44  EC3F  F04A         	call	_StopOrder	;wreg free
 11864                           
 11865                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11866  004C48  EC16  F04B         	call	_InitWalkAutoTime	;wreg free
 11867                           
 11868                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11869  004C4C  0012               	return	
 11870  004C4E                     l22097:
 11871  004C4E  0100               	movlb	0	; () banked
 11872  004C50  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11873  004C52  B4D8               	btfsc	status,2,c
 11874  004C54  D008               	goto	u25750
 11875                           
 11876                           ; BSR set to: 0
 11877  004C56  0E03               	movlw	3
 11878  004C58  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11879  004C5A  B4D8               	btfsc	status,2,c
 11880  004C5C  D004               	goto	u25750
 11881                           
 11882                           ; BSR set to: 0
 11883  004C5E  0E04               	movlw	4
 11884  004C60  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11885  004C62  A4D8               	btfss	status,2,c
 11886  004C64  0012               	return	
 11887  004C66                     u25750:
 11888                           
 11889                           ; BSR set to: 0
 11890  004C66  0E02               	movlw	2
 11891  004C68  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11892  004C6A  B4D8               	btfsc	status,2,c
 11893  004C6C  0012               	return	
 11894  004C6E  D7CC               	goto	l22075
 11895  004C70                     l2723:
 11896  004C70  0012               	return		;funcret
 11897  004C72                     __end_of_actionZone_Opening:
 11898                           	callstack 0
 11899                           
 11900 ;; *************** function _setPositionInvertionInOpening *****************
 11901 ;; Defined at:
 11902 ;;		line 894 in file "sm_ControlGate_MC50.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;		None
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;		None
 11907 ;; Return value:  Size  Location     Type
 11908 ;;                  1    wreg      void 
 11909 ;; Registers used:
 11910 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11911 ;; Tracked objects:
 11912 ;;		On entry : 3E/1
 11913 ;;		On exit  : 3F/1
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;Total ram usage:        8 bytes
 11921 ;; Hardware stack levels used: 1
 11922 ;; Hardware stack levels required when called: 6
 11923 ;; This function calls:
 11924 ;;		_getTimeDecelaration
 11925 ;; This function is called by:
 11926 ;;		_actionZone_Opening
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text25
 11931  007204                     __ptext25:
 11932                           	callstack 0
 11933  007204                     _setPositionInvertionInOpening:
 11934                           	callstack 22
 11935                           
 11936                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 11937                           
 11938                           ;incstack = 0
 11939  007204  0E02               	movlw	2
 11940  007206  0100               	movlb	0	; () banked
 11941  007208  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 11942  00720A  B4D8               	btfsc	status,2,c
 11943  00720C  D009               	goto	l21031
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 11947  00720E  0EFE               	movlw	254
 11948  007210  0101               	movlb	1	; () banked
 11949  007212  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 11950  007214  0EFF               	movlw	255
 11951  007216  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 11952  007218  0EFF               	movlw	255
 11953  00721A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 11954  00721C  0EFF               	movlw	255
 11955  00721E  D006               	goto	L69
 11956  007220                     l21031:
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 11960  007220  0E01               	movlw	1
 11961  007222  0101               	movlb	1	; () banked
 11962  007224  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 11963  007226  0E00               	movlw	0
 11964  007228  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 11965  00722A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 11966  00722C                     L69:
 11967  00722C  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 11968                           
 11969                           ; BSR set to: 1
 11970                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 11971  00722E  0E03               	movlw	3
 11972  007230  EC8E  F038         	call	_getTimeDecelaration
 11973  007234  5029               	movf	?_getTimeDecelaration^0,w,c
 11974  007236  0101               	movlb	1	; () banked
 11975  007238  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 11976  00723A  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 11977  00723C  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 11978  00723E  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 11979  007240  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 11980  007242  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 11981  007244  0A80               	xorlw	128
 11982  007246  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 11983  007248  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 11984  00724A  0A80               	xorlw	128
 11985  00724C  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 11986  00724E  B0D8               	btfsc	status,0,c
 11987  007250  D004               	goto	l21037
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 11991  007252  0E03               	movlw	3
 11992  007254  EC8E  F038         	call	_getTimeDecelaration
 11993  007258  D015               	goto	L70
 11994  00725A                     l21037:
 11995                           
 11996                           ; BSR set to: 1
 11997  00725A  0E01               	movlw	1
 11998  00725C  EC8E  F038         	call	_getTimeDecelaration
 11999  007260  0101               	movlb	1	; () banked
 12000  007262  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12001  007264  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12002  007266  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12003  007268  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12004  00726A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12005  00726C  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12006  00726E  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12007  007270  0A80               	xorlw	128
 12008  007272  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12009  007274  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12010  007276  0A80               	xorlw	128
 12011  007278  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12012  00727A  B0D8               	btfsc	status,0,c
 12013  00727C  D00B               	goto	l21041
 12014                           
 12015                           ; BSR set to: 1
 12016                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12017  00727E  0E01               	movlw	1
 12018  007280  EC8E  F038         	call	_getTimeDecelaration
 12019  007284                     L70:
 12020  007284  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12021  007288  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12022  00728C  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12023  007290  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12024  007294                     l21041:
 12025                           
 12026                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12027  007294  0100               	movlb	0	; () banked
 12028  007296  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12029  007298  0D0A               	mullw	10
 12030  00729A  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12031  00729E  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12032  0072A2  0E00               	movlw	0
 12033  0072A4  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12034  0072A6  0EFF               	movlw	255
 12035  0072A8  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12036  0072AA  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12037  0072AC  0101               	movlb	1	; () banked
 12038  0072AE  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12039  0072B0  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12040  0072B2  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12041  0072B4  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12042  0072B6  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12043  0072B8  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12044  0072BA  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12045  0072BC  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12046  0072BE  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12047  0072C0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12048  0072C2  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12049  0072C4  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12050  0072C6  0EC8               	movlw	200
 12051  0072C8  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12052  0072CA  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12053  0072CC  0E00               	movlw	0
 12054  0072CE  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12055  0072D0  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12056  0072D2  0E00               	movlw	0
 12057  0072D4  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12058  0072D6  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12059  0072D8  0E00               	movlw	0
 12060  0072DA  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12061  0072DC  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12062                           
 12063                           ; BSR set to: 1
 12064  0072DE  0012               	return		;funcret
 12065  0072E0                     __end_of_setPositionInvertionInOpening:
 12066                           	callstack 0
 12067                           
 12068 ;; *************** function _controlVelocity *****************
 12069 ;; Defined at:
 12070 ;;		line 527 in file "outputs_MC50.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;		None
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;		None
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12079 ;; Tracked objects:
 12080 ;;		On entry : 3E/1
 12081 ;;		On exit  : 3E/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12088 ;;Total ram usage:        1 bytes
 12089 ;; Hardware stack levels used: 1
 12090 ;; Hardware stack levels required when called: 7
 12091 ;; This function calls:
 12092 ;;		_ControlDecelarationFactor
 12093 ;;		_InitSoftStop
 12094 ;;		_getStateOpenPosition
 12095 ;;		_getTimeDecelaration
 12096 ;; This function is called by:
 12097 ;;		_main
 12098 ;;		_actionZone_Opening
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text26
 12103  0050DE                     __ptext26:
 12104                           	callstack 0
 12105  0050DE                     _controlVelocity:
 12106                           	callstack 21
 12107                           
 12108                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12109                           
 12110                           ; BSR set to: 1
 12111                           ;incstack = 0
 12112  0050DE  0101               	movlb	1	; () banked
 12113  0050E0  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12114  0050E2  A4D8               	btfss	status,2,c
 12115  0050E4  D017               	goto	l20843
 12116                           
 12117                           ; BSR set to: 1
 12118  0050E6  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12119  0050E8  A4D8               	btfss	status,2,c
 12120  0050EA  D014               	goto	l20843
 12121                           
 12122                           ; BSR set to: 1
 12123                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12124  0050EC  517B               	movf	_powerControl_st& (0+255),w,b
 12125  0050EE  A4D8               	btfss	status,2,c
 12126  0050F0  D008               	goto	l20837
 12127                           
 12128                           ; BSR set to: 1
 12129                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12130  0050F2  0E00               	movlw	0
 12131  0050F4  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12132  0050F6  0E0A               	movlw	10
 12133  0050F8  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12134                           
 12135                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12136  0050FA  0E00               	movlw	0
 12137  0050FC  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12138  0050FE  0E14               	movlw	20
 12139  005100  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12140  005102                     l20837:
 12141                           
 12142                           ; BSR set to: 1
 12143                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12144  005102  ECB8  F04A         	call	_ControlDecelarationFactor	;wreg free
 12145                           
 12146                           ; BSR set to: 1
 12147                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12148  005106  0E01               	movlw	1
 12149  005108  6F7B               	movwf	_powerControl_st& (0+255),b
 12150                           
 12151                           ; BSR set to: 1
 12152                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12153  00510A  0E00               	movlw	0
 12154  00510C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12155  00510E  0E00               	movlw	0
 12156  005110  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12157                           
 12158                           ;outputs_MC50.c: 541:     }
 12159  005112  0012               	return	
 12160  005114                     l20843:
 12161                           
 12162                           ; BSR set to: 1
 12163  005114  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12164  005116  B4D8               	btfsc	status,2,c
 12165  005118  D003               	goto	u24000
 12166                           
 12167                           ; BSR set to: 1
 12168  00511A  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12169  00511C  A4D8               	btfss	status,2,c
 12170  00511E  D007               	goto	l20849
 12171  005120                     u24000:
 12172                           
 12173                           ; BSR set to: 1
 12174                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12175  005120  0E00               	movlw	0
 12176  005122  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12177  005124  0E00               	movlw	0
 12178  005126  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12179                           
 12180                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12181  005128  0E00               	movlw	0
 12182  00512A  6F7B               	movwf	_powerControl_st& (0+255),b
 12183                           
 12184                           ;outputs_MC50.c: 547:     }
 12185  00512C  0012               	return	
 12186  00512E                     l20849:
 12187                           
 12188                           ; BSR set to: 1
 12189  00512E  0E03               	movlw	3
 12190  005130  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12191  005132  A4D8               	btfss	status,2,c
 12192  005134  D068               	goto	l20897
 12193                           
 12194                           ; BSR set to: 1
 12195  005136  0E03               	movlw	3
 12196  005138  EC8E  F038         	call	_getTimeDecelaration
 12197  00513C  5029               	movf	?_getTimeDecelaration^0,w,c
 12198  00513E  0101               	movlb	1	; () banked
 12199  005140  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12200  005142  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12201  005144  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12202  005146  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12203  005148  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12204  00514A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12205  00514C  0A80               	xorlw	128
 12206  00514E  0100               	movlb	0	; () banked
 12207  005150  6FDA               	movwf	??_controlVelocity& (0+255),b
 12208  005152  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12209  005154  0A80               	xorlw	128
 12210  005156  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12211  005158  A0D8               	btfss	status,0,c
 12212  00515A  D004               	goto	u24030
 12213                           
 12214                           ; BSR set to: 0
 12215  00515C  0101               	movlb	1	; () banked
 12216  00515E  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12217  005160  A4D8               	btfss	status,2,c
 12218  005162  D051               	goto	l20897
 12219  005164                     u24030:
 12220  005164  0100               	movlb	0	; () banked
 12221  005166  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12222  005168  B4D8               	btfsc	status,2,c
 12223  00516A  D004               	goto	u24050
 12224                           
 12225                           ; BSR set to: 0
 12226  00516C  0101               	movlb	1	; () banked
 12227  00516E  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12228  005170  B4D8               	btfsc	status,2,c
 12229  005172  D00C               	goto	u24070
 12230  005174                     u24050:
 12231  005174  0101               	movlb	1	; () banked
 12232  005176  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12233  005178  D005               	goto	u24060
 12234  00517A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12235  00517C  E144               	bnz	l20897
 12236  00517E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12237  005180  B0D8               	btfsc	status,0,c
 12238  005182  D041               	goto	l20897
 12239  005184                     u24060:
 12240                           
 12241                           ; BSR set to: 1
 12242  005184  0100               	movlb	0	; () banked
 12243  005186  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12244  005188  B4D8               	btfsc	status,2,c
 12245  00518A  D03D               	goto	l20897
 12246  00518C                     u24070:
 12247                           
 12248                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12249  00518C  0101               	movlb	1	; () banked
 12250  00518E  517B               	movf	_powerControl_st& (0+255),w,b
 12251  005190  A4D8               	btfss	status,2,c
 12252  005192  D022               	goto	l20883
 12253                           
 12254                           ; BSR set to: 1
 12255  005194  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12256  005196  A4D8               	btfss	status,2,c
 12257  005198  D01F               	goto	l20883
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12261  00519A  0E00               	movlw	0
 12262  00519C  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12263  00519E  0E14               	movlw	20
 12264  0051A0  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12265                           
 12266                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12267  0051A2  0100               	movlb	0	; () banked
 12268  0051A4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12269  0051A6  B4D8               	btfsc	status,2,c
 12270  0051A8  D008               	goto	l20873
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12274  0051AA  0E00               	movlw	0
 12275  0051AC  0101               	movlb	1	; () banked
 12276  0051AE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12277                           
 12278                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12279  0051B0  0E01               	movlw	1
 12280  0051B2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12281                           
 12282                           ; BSR set to: 1
 12283                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12284  0051B4  EC0B  F046         	call	_InitSoftStop	;wreg free
 12285                           
 12286                           ;outputs_MC50.c: 563:                     }
 12287  0051B8  D00F               	goto	l20883
 12288  0051BA                     l20873:
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12292  0051BA  0E00               	movlw	0
 12293  0051BC  0101               	movlb	1	; () banked
 12294  0051BE  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12295  0051C0  0E0A               	movlw	10
 12296  0051C2  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12297                           
 12298                           ; BSR set to: 1
 12299                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12300  0051C4  ECB8  F04A         	call	_ControlDecelarationFactor	;wreg free
 12301                           
 12302                           ; BSR set to: 1
 12303                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12304  0051C8  0E01               	movlw	1
 12305  0051CA  6F7B               	movwf	_powerControl_st& (0+255),b
 12306                           
 12307                           ; BSR set to: 1
 12308                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12309  0051CC  0E00               	movlw	0
 12310  0051CE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12311  0051D0  0E00               	movlw	0
 12312  0051D2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12313                           
 12314                           ; BSR set to: 1
 12315                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12316  0051D4  0E00               	movlw	0
 12317  0051D6  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12318  0051D8                     l20883:
 12319                           
 12320                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12321  0051D8  0101               	movlb	1	; () banked
 12322  0051DA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12323  0051DC  D005               	goto	u24110
 12324  0051DE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12325  0051E0  E102               	bnz	u24111
 12326  0051E2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12327  0051E4  B0D8               	btfsc	status,0,c
 12328  0051E6                     u24111:
 12329  0051E6  0012               	return	
 12330  0051E8                     u24110:
 12331                           
 12332                           ; BSR set to: 1
 12333  0051E8  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12334  0051EA  A4D8               	btfss	status,2,c
 12335  0051EC  0012               	return	
 12336                           
 12337                           ; BSR set to: 1
 12338  0051EE  0100               	movlb	0	; () banked
 12339  0051F0  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12340  0051F2  B4D8               	btfsc	status,2,c
 12341  0051F4  0012               	return	
 12342                           
 12343                           ; BSR set to: 0
 12344                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12345  0051F6  0E00               	movlw	0
 12346  0051F8  0101               	movlb	1	; () banked
 12347  0051FA  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12348  0051FC  0E02               	movlw	2
 12349  0051FE  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12350                           
 12351                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12352  005200  0E00               	movlw	0
 12353  005202  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12354  005204  D77E               	goto	l20837
 12355  005206                     l20897:
 12356  005206  0101               	movlb	1	; () banked
 12357  005208  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12358  00520A  EC81  F035         	call	_getStateOpenPosition
 12359  00520E  06E8               	decf	wreg,f,c
 12360  005210  A4D8               	btfss	status,2,c
 12361  005212  D042               	goto	l20939
 12362                           
 12363                           ; BSR set to: 0
 12364  005214  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12365  005216  B4D8               	btfsc	status,2,c
 12366  005218  D004               	goto	u24160
 12367                           
 12368                           ; BSR set to: 0
 12369  00521A  0101               	movlb	1	; () banked
 12370  00521C  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12371  00521E  B4D8               	btfsc	status,2,c
 12372  005220  D00C               	goto	u24180
 12373  005222                     u24160:
 12374  005222  0101               	movlb	1	; () banked
 12375  005224  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12376  005226  D005               	goto	u24170
 12377  005228  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12378  00522A  E136               	bnz	l20939
 12379  00522C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12380  00522E  B0D8               	btfsc	status,0,c
 12381  005230  D033               	goto	l20939
 12382  005232                     u24170:
 12383                           
 12384                           ; BSR set to: 1
 12385  005232  0100               	movlb	0	; () banked
 12386  005234  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12387  005236  B4D8               	btfsc	status,2,c
 12388  005238  D02F               	goto	l20939
 12389  00523A                     u24180:
 12390                           
 12391                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12392  00523A  0101               	movlb	1	; () banked
 12393  00523C  517B               	movf	_powerControl_st& (0+255),w,b
 12394  00523E  A4D8               	btfss	status,2,c
 12395  005240  D022               	goto	l20925
 12396                           
 12397                           ; BSR set to: 1
 12398  005242  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12399  005244  A4D8               	btfss	status,2,c
 12400  005246  D01F               	goto	l20925
 12401                           
 12402                           ; BSR set to: 1
 12403                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12404  005248  0E00               	movlw	0
 12405  00524A  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12406  00524C  0E14               	movlw	20
 12407  00524E  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12408                           
 12409                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12410  005250  0100               	movlb	0	; () banked
 12411  005252  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12412  005254  B4D8               	btfsc	status,2,c
 12413  005256  D008               	goto	l20917
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12417  005258  0E00               	movlw	0
 12418  00525A  0101               	movlb	1	; () banked
 12419  00525C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12420                           
 12421                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12422  00525E  0E01               	movlw	1
 12423  005260  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12427  005262  EC0B  F046         	call	_InitSoftStop	;wreg free
 12428                           
 12429                           ;outputs_MC50.c: 598:             }else{
 12430  005266  D00F               	goto	l20925
 12431  005268                     l20917:
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12435  005268  0E00               	movlw	0
 12436  00526A  0101               	movlb	1	; () banked
 12437  00526C  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12438  00526E  0E0A               	movlw	10
 12439  005270  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12440                           
 12441                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12442  005272  0E00               	movlw	0
 12443  005274  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12444                           
 12445                           ; BSR set to: 1
 12446                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12447  005276  ECB8  F04A         	call	_ControlDecelarationFactor	;wreg free
 12448                           
 12449                           ; BSR set to: 1
 12450                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12451  00527A  0E01               	movlw	1
 12452  00527C  6F7B               	movwf	_powerControl_st& (0+255),b
 12453                           
 12454                           ; BSR set to: 1
 12455                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12456  00527E  0E00               	movlw	0
 12457  005280  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12458  005282  0E00               	movlw	0
 12459  005284  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12460  005286                     l20925:
 12461                           
 12462                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12463  005286  0101               	movlb	1	; () banked
 12464  005288  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12465  00528A  D7AE               	goto	u24110
 12466  00528C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12467  00528E  E135               	bnz	l2311
 12468  005290  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12469  005292  B0D8               	btfsc	status,0,c
 12470  005294  0012               	return	
 12471  005296  D7A8               	goto	u24110
 12472  005298                     l20939:
 12473  005298  0101               	movlb	1	; () banked
 12474  00529A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12475  00529C  D012               	goto	l20947
 12476  00529E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12477  0052A0  E103               	bnz	u24250
 12478  0052A2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12479  0052A4  A0D8               	btfss	status,0,c
 12480  0052A6  D00D               	goto	l20947
 12481  0052A8                     u24250:
 12482                           
 12483                           ; BSR set to: 1
 12484  0052A8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12485  0052AA  B4D8               	btfsc	status,2,c
 12486  0052AC  D00A               	goto	l20947
 12487                           
 12488                           ; BSR set to: 1
 12489                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12490  0052AE  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12491  0052B0  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12492  0052B2  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12493  0052B4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12494  0052B6  A0D8               	btfss	status,0,c
 12495  0052B8  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12496  0052BA  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12497  0052BC                     l20945:
 12498                           
 12499                           ; BSR set to: 1
 12500                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12501  0052BC  0E00               	movlw	0
 12502  0052BE  6F7B               	movwf	_powerControl_st& (0+255),b
 12503                           
 12504                           ;outputs_MC50.c: 623:     }
 12505  0052C0  0012               	return	
 12506  0052C2                     l20947:
 12507                           
 12508                           ; BSR set to: 1
 12509  0052C2  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12510  0052C4  D010               	goto	l20955
 12511  0052C6  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12512  0052C8  E103               	bnz	u24270
 12513  0052CA  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12514  0052CC  A0D8               	btfss	status,0,c
 12515  0052CE  D00B               	goto	l20955
 12516  0052D0                     u24270:
 12517                           
 12518                           ; BSR set to: 1
 12519  0052D0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12520  0052D2  B4D8               	btfsc	status,2,c
 12521  0052D4  D008               	goto	l20955
 12522                           
 12523                           ; BSR set to: 1
 12524                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12525  0052D6  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12526  0052D8  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12527  0052DA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12528  0052DC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12529  0052DE  A0D8               	btfss	status,0,c
 12530  0052E0  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12531  0052E2  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12532  0052E4  D7EB               	goto	l20945
 12533  0052E6                     l20955:
 12534                           
 12535                           ; BSR set to: 1
 12536                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12537  0052E6  0E00               	movlw	0
 12538  0052E8  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12539  0052EA  0E00               	movlw	0
 12540  0052EC  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12541                           
 12542                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12543  0052EE  0E00               	movlw	0
 12544  0052F0  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12545  0052F2  0E00               	movlw	0
 12546  0052F4  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12547                           
 12548                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12549  0052F6  0E00               	movlw	0
 12550  0052F8  6F7B               	movwf	_powerControl_st& (0+255),b
 12551  0052FA                     l2311:
 12552  0052FA  0012               	return		;funcret
 12553  0052FC                     __end_of_controlVelocity:
 12554                           	callstack 0
 12555                           
 12556 ;; *************** function _getStateOpenPosition *****************
 12557 ;; Defined at:
 12558 ;;		line 470 in file "outputs_MC50.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;  stateMotor      1    wreg     enum E10381
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12563 ;;  state           1    0[BANK0 ] _Bool 
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      _Bool 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12568 ;; Tracked objects:
 12569 ;;		On entry : 3F/1
 12570 ;;		On exit  : 3F/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12575 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12576 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12577 ;;Total ram usage:       11 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; Hardware stack levels required when called: 6
 12580 ;; This function calls:
 12581 ;;		___lmul
 12582 ;;		_getTimeDecelaration
 12583 ;; This function is called by:
 12584 ;;		_controlVelocity
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           	psect	text27
 12589  006B02                     __ptext27:
 12590                           	callstack 0
 12591  006B02                     _getStateOpenPosition:
 12592                           	callstack 21
 12593                           
 12594                           ;incstack = 0
 12595                           ;getStateOpenPosition@stateMotor stored from wreg
 12596  006B02  0100               	movlb	0	; () banked
 12597  006B04  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12598                           
 12599                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12600  006B06  0E00               	movlw	0
 12601  006B08  0100               	movlb	0	; () banked
 12602  006B0A  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12606  006B0C  0101               	movlb	1	; () banked
 12607  006B0E  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12608  006B10  A4D8               	btfss	status,2,c
 12609  006B12  D002               	goto	l20323
 12610  006B14                     u23250:
 12611                           
 12612                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12613  006B14  0E01               	movlw	1
 12614  006B16  D046               	goto	L71
 12615  006B18                     l20323:
 12616                           
 12617                           ; BSR set to: 1
 12618  006B18  0100               	movlb	0	; () banked
 12619  006B1A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12620  006B1C  0D14               	mullw	20
 12621  006B1E  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12622  006B22  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12623  006B26  0E00               	movlw	0
 12624  006B28  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12625  006B2A  0EFF               	movlw	255
 12626  006B2C  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12627  006B2E  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12628  006B30  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12629  006B32  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12630  006B34  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12631  006B36  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12632  006B38  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12633  006B3A  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12634  006B3C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12635  006B3E  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12636  006B40  B0D8               	btfsc	status,0,c
 12637  006B42  D033               	goto	l20337
 12638                           
 12639                           ; BSR set to: 0
 12640  006B44  0E02               	movlw	2
 12641  006B46  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12642  006B48  A4D8               	btfss	status,2,c
 12643  006B4A  D02F               	goto	l20337
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12647  006B4C  90D8               	bcf	status,0,c
 12648  006B4E  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12649  006B50  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12650  006B52  D001               	goto	l20331
 12651  006B54  D7DF               	goto	u23250
 12652  006B56                     l20331:
 12653                           
 12654                           ; BSR set to: 0
 12655  006B56  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12656  006B58  0D14               	mullw	20
 12657  006B5A  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12658  006B5E  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12659  006B62  0E00               	movlw	0
 12660  006B64  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12661  006B66  0EFF               	movlw	255
 12662  006B68  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12663  006B6A  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12664  006B6C  0ED8               	movlw	216
 12665  006B6E  2432               	addwf	??_getStateOpenPosition^0,w,c
 12666  006B70  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12667  006B72  0EFF               	movlw	255
 12668  006B74  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12669  006B76  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12670  006B78  0EFF               	movlw	255
 12671  006B7A  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12672  006B7C  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12673  006B7E  0EFF               	movlw	255
 12674  006B80  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12675  006B82  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12676  006B84  0101               	movlb	1	; () banked
 12677  006B86  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12678  006B88  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12679  006B8A  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12680  006B8C  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12681  006B8E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12682  006B90  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12683  006B92  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12684  006B94  0A80               	xorlw	128
 12685  006B96  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12686  006B98  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12687  006B9A  0A80               	xorlw	128
 12688  006B9C  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12689  006B9E  A0D8               	btfss	status,0,c
 12690  006BA0  D7B9               	goto	u23250
 12691                           
 12692                           ; BSR set to: 1
 12693                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12694  006BA2  0E00               	movlw	0
 12695  006BA4                     L71:
 12696  006BA4  0100               	movlb	0	; () banked
 12697  006BA6  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12698  006BA8  D032               	goto	l2254
 12699  006BAA                     l20337:
 12700                           
 12701                           ; BSR set to: 0
 12702  006BAA  0E02               	movlw	2
 12703  006BAC  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12704  006BAE  B4D8               	btfsc	status,2,c
 12705  006BB0  D003               	goto	u23310
 12706                           
 12707                           ; BSR set to: 0
 12708  006BB2  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12709  006BB4  A4D8               	btfss	status,2,c
 12710  006BB6  D02B               	goto	l2254
 12711  006BB8                     u23310:
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12715  006BB8  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12716  006BBA  6E1D               	movwf	___lmul@multiplier^0,c
 12717  006BBC  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12718  006BBE  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12719  006BC0  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12720  006BC2  0E0A               	movlw	10
 12721  006BC4  6E21               	movwf	___lmul@multiplicand^0,c
 12722  006BC6  0E00               	movlw	0
 12723  006BC8  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12724  006BCA  0E00               	movlw	0
 12725  006BCC  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12726  006BCE  0E00               	movlw	0
 12727  006BD0  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12728  006BD2  EC9D  F044         	call	___lmul	;wreg free
 12729  006BD6  501D               	movf	?___lmul^0,w,c
 12730  006BD8  0100               	movlb	0	; () banked
 12731  006BDA  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12732  006BDC  501E               	movf	(?___lmul+1)^0,w,c
 12733  006BDE  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12734  006BE0  501F               	movf	(?___lmul+2)^0,w,c
 12735  006BE2  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12736  006BE4  5020               	movf	(?___lmul+3)^0,w,c
 12737  006BE6  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12738  006BE8  A0D8               	btfss	status,0,c
 12739  006BEA  D794               	goto	u23250
 12740                           
 12741                           ; BSR set to: 0
 12742  006BEC  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12743  006BEE  EC8E  F038         	call	_getTimeDecelaration
 12744  006BF2  0101               	movlb	1	; () banked
 12745  006BF4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12746  006BF6  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12747  006BF8  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12748  006BFA  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12749  006BFC  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12750  006BFE  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12751  006C00  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12752  006C02  0A80               	xorlw	128
 12753  006C04  6E32               	movwf	??_getStateOpenPosition^0,c
 12754  006C06  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12755  006C08  0A80               	xorlw	128
 12756  006C0A  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12757  006C0C  D7C8               	goto	L72
 12758  006C0E                     l2254:
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;outputs_MC50.c: 507:     return state;
 12762  006C0E  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12763                           
 12764                           ; BSR set to: 0
 12765  006C10  0012               	return		;funcret
 12766  006C12                     __end_of_getStateOpenPosition:
 12767                           	callstack 0
 12768                           
 12769 ;; *************** function _InitSoftStop *****************
 12770 ;; Defined at:
 12771 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;		None
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;		None
 12776 ;; Return value:  Size  Location     Type
 12777 ;;                  1    wreg      void 
 12778 ;; Registers used:
 12779 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12780 ;; Tracked objects:
 12781 ;;		On entry : 3F/1
 12782 ;;		On exit  : 3E/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12789 ;;Total ram usage:        1 bytes
 12790 ;; Hardware stack levels used: 1
 12791 ;; Hardware stack levels required when called: 5
 12792 ;; This function calls:
 12793 ;;		_GetMotorPower
 12794 ;; This function is called by:
 12795 ;;		_controlVelocity
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text28
 12800  008C16                     __ptext28:
 12801                           	callstack 0
 12802  008C16                     _InitSoftStop:
 12803                           	callstack 22
 12804                           
 12805                           ; BSR set to: 1
 12806                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;incstack = 0
 12810  008C16  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12811  008C18  B4D8               	btfsc	status,2,c
 12812  008C1A  D003               	goto	u23350
 12813                           
 12814                           ; BSR set to: 1
 12815  008C1C  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12816  008C1E  A4D8               	btfss	status,2,c
 12817  008C20  0012               	return	
 12818  008C22                     u23350:
 12819                           
 12820                           ; BSR set to: 1
 12821  008C22  0100               	movlb	0	; () banked
 12822  008C24  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12823  008C26  B4D8               	btfsc	status,2,c
 12824  008C28  0012               	return	
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12828  008C2A  0E00               	movlw	0
 12829  008C2C  0101               	movlb	1	; () banked
 12830  008C2E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12831  008C30  0E00               	movlw	0
 12832  008C32  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12833                           
 12834                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12835  008C34  0E00               	movlw	0
 12836  008C36  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12837  008C38  0E00               	movlw	0
 12838  008C3A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12839                           
 12840                           ; BSR set to: 1
 12841                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12842  008C3C  ECD6  F039         	call	_GetMotorPower	;wreg free
 12843  008C40  6E14               	movwf	??_InitSoftStop^0,c
 12844  008C42  5014               	movf	??_InitSoftStop^0,w,c
 12845  008C44  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12846  008C46  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12847                           
 12848                           ; BSR set to: 1
 12849                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12850  008C48  0E01               	movlw	1
 12851  008C4A  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12852  008C4C  6FB3               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12853  008C4E  0E00               	movlw	0
 12854  008C50  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12855  008C52  6FB4               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12856                           
 12857                           ; BSR set to: 1
 12858                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12859  008C54  0100               	movlb	0	; () banked
 12860  008C56  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12861  008C58  080A               	sublw	10
 12862  008C5A  0101               	movlb	1	; () banked
 12863  008C5C  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12864  008C5E  0012               	return		;funcret
 12865  008C60                     __end_of_InitSoftStop:
 12866                           	callstack 0
 12867                           
 12868 ;; *************** function _ControlDecelarationFactor *****************
 12869 ;; Defined at:
 12870 ;;		line 463 in file "outputs_MC50.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;		None
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  1    wreg      void 
 12877 ;; Registers used:
 12878 ;;		wreg, status,2, status,0, prodl, prodh
 12879 ;; Tracked objects:
 12880 ;;		On entry : 3E/1
 12881 ;;		On exit  : 3F/1
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12888 ;;Total ram usage:        0 bytes
 12889 ;; Hardware stack levels used: 1
 12890 ;; Hardware stack levels required when called: 4
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		_controlVelocity
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text29
 12899  009570                     __ptext29:
 12900                           	callstack 0
 12901  009570                     _ControlDecelarationFactor:
 12902                           	callstack 23
 12903                           
 12904                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 12905                           
 12906                           ;incstack = 0
 12907  009570  0E01               	movlw	1
 12908  009572  0101               	movlb	1	; () banked
 12909  009574  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 12910                           
 12911                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 12912  009576  0E02               	movlw	2
 12913  009578  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 12914                           
 12915                           ; BSR set to: 1
 12916                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 12917  00957A  0100               	movlb	0	; () banked
 12918  00957C  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 12919  00957E  0101               	movlb	1	; () banked
 12920  009580  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 12921  009582  CFF3 F17E          	movff	prodl,_powerControl_st+3
 12922                           
 12923                           ; BSR set to: 1
 12924  009586  0012               	return		;funcret
 12925  009588                     __end_of_ControlDecelarationFactor:
 12926                           	callstack 0
 12927                           
 12928 ;; *************** function _actionZone_Opened *****************
 12929 ;; Defined at:
 12930 ;;		line 514 in file "sm_ControlGate_MC50.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;		None
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 12935 ;;  securityClos    1   31[COMRAM] enum E10397
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      void 
 12938 ;; Registers used:
 12939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12940 ;; Tracked objects:
 12941 ;;		On entry : 3F/0
 12942 ;;		On exit  : 3E/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12949 ;;Total ram usage:        2 bytes
 12950 ;; Hardware stack levels used: 1
 12951 ;; Hardware stack levels required when called: 7
 12952 ;; This function calls:
 12953 ;;		_CloseOrder
 12954 ;;		_GetOpenOrder
 12955 ;;		_GetSecurityStateInClosing
 12956 ;;		_InitFullAutoTime
 12957 ;;		_InitWalkAutoTime
 12958 ;;		_OpenFullOrder
 12959 ;;		_OpenWalkOrder
 12960 ;;		_VerifyFollowMe
 12961 ;; This function is called by:
 12962 ;;		_sm_execute_ControlGate
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           	psect	text30
 12967  0052FC                     __ptext30:
 12968                           	callstack 0
 12969  0052FC                     _actionZone_Opened:
 12970                           	callstack 22
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 12974                           
 12975                           ; BSR set to: 1
 12976                           ;incstack = 0
 12977  0052FC  ECA6  F03B         	call	_GetSecurityStateInClosing	;wreg free
 12978  005300  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 12979                           
 12980                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 12981  005302  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 12982  005304  B4D8               	btfsc	status,2,c
 12983  005306  D007               	goto	l22117
 12984  005308  0101               	movlb	1	; () banked
 12985  00530A  518E               	movf	_Abertura_pedonal& (0+255),w,b
 12986  00530C  A4D8               	btfss	status,2,c
 12987  00530E  D003               	goto	l22117
 12988                           
 12989                           ; BSR set to: 1
 12990                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 12991  005310  EC91  F04A         	call	_InitFullAutoTime	;wreg free
 12992                           
 12993                           ;sm_ControlGate_MC50.c: 519:     }
 12994  005314  D008               	goto	l2727
 12995  005316                     l22117:
 12996  005316  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 12997  005318  B4D8               	btfsc	status,2,c
 12998  00531A  D005               	goto	l2727
 12999  00531C  0101               	movlb	1	; () banked
 13000  00531E  058E               	decf	_Abertura_pedonal& (0+255),w,b
 13001  005320  B4D8               	btfsc	status,2,c
 13002                           
 13003                           ; BSR set to: 1
 13004                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13005  005322  EC16  F04B         	call	_InitWalkAutoTime	;wreg free
 13006  005326                     l2727:
 13007                           
 13008                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13009  005326  EC5E  F02B         	call	_GetOpenOrder	;wreg free
 13010  00532A  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13011                           
 13012                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13013  00532C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13014  00532E  ECE9  F049         	call	_VerifyFollowMe
 13015                           
 13016                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13017  005332  B28E               	btfsc	142,1,c	;volatile
 13018  005334  D013               	goto	l2729
 13019  005336  0100               	movlb	0	; () banked
 13020  005338  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13021  00533A  B4D8               	btfsc	status,2,c
 13022  00533C  D00F               	goto	l2729
 13023                           
 13024                           ; BSR set to: 0
 13025  00533E  0101               	movlb	1	; () banked
 13026  005340  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13027  005342  B4D8               	btfsc	status,2,c
 13028  005344  D00B               	goto	l2729
 13029                           
 13030                           ; BSR set to: 1
 13031  005346  0E35               	movlw	53
 13032  005348  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13033  00534A  B4D8               	btfsc	status,2,c
 13034  00534C  D007               	goto	l2729
 13035                           
 13036                           ; BSR set to: 1
 13037  00534E  0E02               	movlw	2
 13038  005350  0100               	movlb	0	; () banked
 13039  005352  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13040  005354  A4D8               	btfss	status,2,c
 13041  005356  D002               	goto	l2729
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13045  005358  0E00               	movlw	0
 13046  00535A  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13047  00535C                     l2729:
 13048                           
 13049                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13050  00535C  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13051  00535E  B4D8               	btfsc	status,2,c
 13052  005360  D05D               	goto	l2730
 13053                           
 13054                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13055  005362  0E00               	movlw	0
 13056  005364  0101               	movlb	1	; () banked
 13057  005366  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13058  005368  0E3C               	movlw	60
 13059  00536A  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13060                           
 13061                           ; BSR set to: 1
 13062                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13063  00536C  0E02               	movlw	2
 13064  00536E  0100               	movlb	0	; () banked
 13065  005370  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13066  005372  A4D8               	btfss	status,2,c
 13067  005374  D00D               	goto	l22149
 13068                           
 13069                           ; BSR set to: 0
 13070  005376  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13071  005378  A4D8               	btfss	status,2,c
 13072  00537A  D00A               	goto	l22149
 13073                           
 13074                           ; BSR set to: 0
 13075  00537C  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13076  00537E  B4D8               	btfsc	status,2,c
 13077  005380  D004               	goto	u25900
 13078                           
 13079                           ; BSR set to: 0
 13080  005382  0E04               	movlw	4
 13081  005384  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13082  005386  A4D8               	btfss	status,2,c
 13083  005388  D003               	goto	l22149
 13084  00538A                     u25900:
 13085                           
 13086                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13087  00538A  EC8A  F049         	call	_CloseOrder	;wreg free
 13088                           
 13089                           ;sm_ControlGate_MC50.c: 546:         }
 13090  00538E  0012               	return	
 13091  005390                     l22149:
 13092                           
 13093                           ; BSR set to: 0
 13094  005390  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13095  005392  B4D8               	btfsc	status,2,c
 13096  005394  D014               	goto	l22163
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13100  005396  0E03               	movlw	3
 13101  005398  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13102  00539A  A4D8               	btfss	status,2,c
 13103  00539C  D00B               	goto	l22159
 13104                           
 13105                           ; BSR set to: 0
 13106  00539E  0101               	movlb	1	; () banked
 13107  0053A0  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13108  0053A2  A4D8               	btfss	status,2,c
 13109  0053A4  D007               	goto	l22159
 13110                           
 13111                           ; BSR set to: 1
 13112  0053A6  0E04               	movlw	4
 13113  0053A8  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13114  0053AA  B4D8               	btfsc	status,2,c
 13115  0053AC  D003               	goto	l22159
 13116  0053AE                     u25940:
 13117                           
 13118                           ; BSR set to: 1
 13119                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13120  0053AE  EC9D  F049         	call	_OpenFullOrder	;wreg free
 13121                           
 13122                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13123  0053B2  0012               	return	
 13124  0053B4                     l22159:
 13125  0053B4  0E04               	movlw	4
 13126  0053B6  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13127  0053B8  A4D8               	btfss	status,2,c
 13128  0053BA  0012               	return	
 13129  0053BC  D7E6               	goto	u25900
 13130  0053BE                     l22163:
 13131                           
 13132                           ; BSR set to: 0
 13133  0053BE  0E03               	movlw	3
 13134  0053C0  0101               	movlb	1	; () banked
 13135  0053C2  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13136  0053C4  A4D8               	btfss	status,2,c
 13137  0053C6  D009               	goto	l22171
 13138                           
 13139                           ; BSR set to: 1
 13140  0053C8  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13141  0053CA  A4D8               	btfss	status,2,c
 13142  0053CC  D006               	goto	l22171
 13143  0053CE                     u25970:
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13147  0053CE  EC9D  F049         	call	_OpenFullOrder	;wreg free
 13148  0053D2                     l22169:
 13149                           
 13150                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13151  0053D2  0E00               	movlw	0
 13152  0053D4  0101               	movlb	1	; () banked
 13153  0053D6  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13154                           
 13155                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13156  0053D8  0012               	return	
 13157  0053DA                     l22171:
 13158                           
 13159                           ; BSR set to: 1
 13160  0053DA  0E03               	movlw	3
 13161  0053DC  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13162  0053DE  A4D8               	btfss	status,2,c
 13163  0053E0  D007               	goto	l22179
 13164                           
 13165                           ; BSR set to: 1
 13166  0053E2  0E02               	movlw	2
 13167  0053E4  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13168  0053E6  A4D8               	btfss	status,2,c
 13169  0053E8  D003               	goto	l22179
 13170                           
 13171                           ; BSR set to: 1
 13172                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13173  0053EA  EC24  F042         	call	_OpenWalkOrder	;wreg free
 13174  0053EE  D7F1               	goto	l22169
 13175  0053F0                     l22179:
 13176                           
 13177                           ; BSR set to: 1
 13178  0053F0  0E03               	movlw	3
 13179  0053F2  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13180  0053F4  A4D8               	btfss	status,2,c
 13181  0053F6  D005               	goto	l22189
 13182                           
 13183                           ; BSR set to: 1
 13184                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13185  0053F8  0E04               	movlw	4
 13186  0053FA  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13187  0053FC  B4D8               	btfsc	status,2,c
 13188  0053FE  0012               	return	
 13189  005400  D7E6               	goto	u25970
 13190  005402                     l22189:
 13191                           
 13192                           ; BSR set to: 1
 13193  005402  0100               	movlb	0	; () banked
 13194  005404  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13195  005406  B4D8               	btfsc	status,2,c
 13196  005408  D007               	goto	l22195
 13197                           
 13198                           ; BSR set to: 0
 13199  00540A  0E02               	movlw	2
 13200  00540C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13201  00540E  A4D8               	btfss	status,2,c
 13202  005410  D003               	goto	l22195
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13206  005412  EC91  F04A         	call	_InitFullAutoTime	;wreg free
 13207                           
 13208                           ;sm_ControlGate_MC50.c: 586:         }
 13209  005416  0012               	return	
 13210  005418                     l22195:
 13211                           
 13212                           ; BSR set to: 0
 13213  005418  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13214  00541A  D7CE               	goto	L73
 13215  00541C                     l2730:
 13216  00541C  B28E               	btfsc	142,1,c	;volatile
 13217  00541E  D00B               	goto	l22203
 13218  005420  0100               	movlb	0	; () banked
 13219  005422  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13220  005424  B4D8               	btfsc	status,2,c
 13221  005426  D007               	goto	l22203
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13225  005428  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13226  00542A  0D14               	mullw	20
 13227  00542C  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 13228  005430  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 13229                           
 13230                           ;sm_ControlGate_MC50.c: 599:     }
 13231  005434  0012               	return	
 13232  005436                     l22203:
 13233  005436  0101               	movlb	1	; () banked
 13234  005438  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13235  00543A  A4D8               	btfss	status,2,c
 13236  00543C  D00F               	goto	l22213
 13237                           
 13238                           ; BSR set to: 1
 13239  00543E  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13240  005440  A4D8               	btfss	status,2,c
 13241  005442  D00C               	goto	l22213
 13242                           
 13243                           ; BSR set to: 1
 13244                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13245  005444  0E00               	movlw	0
 13246  005446  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13247                           
 13248                           ; BSR set to: 1
 13249                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13250  005448  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13251                           
 13252                           ; BSR set to: 1
 13253                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13254  00544C  0100               	movlb	0	; () banked
 13255  00544E  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13256  005450  0D14               	mullw	20
 13257  005452  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 13258  005456  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 13259                           
 13260                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13261  00545A  0012               	return	
 13262  00545C                     l22213:
 13263                           
 13264                           ; BSR set to: 1
 13265  00545C  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13266  00545E  D005               	goto	u26090
 13267  005460  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13268  005462  E113               	bnz	l22225
 13269  005464  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13270  005466  B0D8               	btfsc	status,0,c
 13271  005468  D010               	goto	l22225
 13272  00546A                     u26090:
 13273                           
 13274                           ; BSR set to: 1
 13275  00546A  0100               	movlb	0	; () banked
 13276  00546C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13277  00546E  A4D8               	btfss	status,2,c
 13278  005470  D00C               	goto	l22225
 13279                           
 13280                           ; BSR set to: 0
 13281  005472  0101               	movlb	1	; () banked
 13282  005474  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13283  005476  A4D8               	btfss	status,2,c
 13284  005478  D008               	goto	l22225
 13285                           
 13286                           ; BSR set to: 1
 13287  00547A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13288  00547C  B4D8               	btfsc	status,2,c
 13289  00547E  D005               	goto	l22225
 13290                           
 13291                           ; BSR set to: 1
 13292                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13293  005480  0E00               	movlw	0
 13294  005482  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13295                           
 13296                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13297  005484  0E00               	movlw	0
 13298  005486  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13299  005488  D780               	goto	u25900
 13300  00548A                     l22225:
 13301  00548A  0101               	movlb	1	; () banked
 13302  00548C  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13303  00548E  D005               	goto	u26130
 13304  005490  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13305  005492  E119               	bnz	l22243
 13306  005494  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13307  005496  B0D8               	btfsc	status,0,c
 13308  005498  D016               	goto	l22243
 13309  00549A                     u26130:
 13310                           
 13311                           ; BSR set to: 1
 13312  00549A  0100               	movlb	0	; () banked
 13313  00549C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13314  00549E  B4D8               	btfsc	status,2,c
 13315  0054A0  D012               	goto	l22243
 13316                           
 13317                           ; BSR set to: 0
 13318  0054A2  0101               	movlb	1	; () banked
 13319  0054A4  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13320  0054A6  B4D8               	btfsc	status,2,c
 13321  0054A8  D00E               	goto	l22243
 13322                           
 13323                           ; BSR set to: 1
 13324                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13325  0054AA  0E00               	movlw	0
 13326  0054AC  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13327                           
 13328                           ; BSR set to: 1
 13329                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13330  0054AE  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13331  0054B0  A4D8               	btfss	status,2,c
 13332  0054B2  D003               	goto	l22239
 13333                           
 13334                           ; BSR set to: 1
 13335                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13336  0054B4  0E00               	movlw	0
 13337  0054B6  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13338  0054B8  D77A               	goto	u25940
 13339  0054BA                     l22239:
 13340                           
 13341                           ; BSR set to: 1
 13342                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13343  0054BA  EC8A  F049         	call	_CloseOrder	;wreg free
 13344                           
 13345                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13346  0054BE  0E00               	movlw	0
 13347  0054C0  0101               	movlb	1	; () banked
 13348  0054C2  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13349  0054C4  0012               	return	
 13350  0054C6                     l22243:
 13351  0054C6  0101               	movlb	1	; () banked
 13352  0054C8  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13353  0054CA  A4D8               	btfss	status,2,c
 13354  0054CC  0012               	return	
 13355                           
 13356                           ; BSR set to: 1
 13357  0054CE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13358  0054D0  A4D8               	btfss	status,2,c
 13359  0054D2  0012               	return	
 13360                           
 13361                           ; BSR set to: 1
 13362                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13363  0054D4  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13364  0054D6  D006               	goto	u26190
 13365  0054D8  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13366  0054DA  E103               	bnz	u26191
 13367  0054DC  0E02               	movlw	2
 13368  0054DE  5DA7               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13369  0054E0  B0D8               	btfsc	status,0,c
 13370  0054E2                     u26191:
 13371  0054E2  0012               	return	
 13372  0054E4                     u26190:
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13376  0054E4  0E00               	movlw	0
 13377  0054E6  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13378  0054E8  0012               	return		;funcret
 13379  0054EA                     __end_of_actionZone_Opened:
 13380                           	callstack 0
 13381                           
 13382 ;; *************** function _VerifyFollowMe *****************
 13383 ;; Defined at:
 13384 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13385 ;; Parameters:    Size  Location     Type
 13386 ;;  securityClos    1    wreg     enum E10397
 13387 ;; Auto vars:     Size  Location     Type
 13388 ;;  securityClos    1   15[COMRAM] enum E10397
 13389 ;; Return value:  Size  Location     Type
 13390 ;;                  1    wreg      void 
 13391 ;; Registers used:
 13392 ;;		wreg, status,2, status,0
 13393 ;; Tracked objects:
 13394 ;;		On entry : 0/0
 13395 ;;		On exit  : 3E/0
 13396 ;;		Unchanged: 0/0
 13397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13402 ;;Total ram usage:        1 bytes
 13403 ;; Hardware stack levels used: 1
 13404 ;; Hardware stack levels required when called: 4
 13405 ;; This function calls:
 13406 ;;		Nothing
 13407 ;; This function is called by:
 13408 ;;		_actionZone_Opening
 13409 ;;		_actionZone_Opened
 13410 ;; This function uses a non-reentrant model
 13411 ;;
 13412                           
 13413                           	psect	text31
 13414  0093D2                     __ptext31:
 13415                           	callstack 0
 13416  0093D2                     _VerifyFollowMe:
 13417                           	callstack 24
 13418                           
 13419                           ;incstack = 0
 13420                           ;VerifyFollowMe@securityClose stored from wreg
 13421  0093D2  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13422                           
 13423                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13424  0093D4  0100               	movlb	0	; () banked
 13425  0093D6  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13426  0093D8  B4D8               	btfsc	status,2,c
 13427  0093DA  0012               	return	
 13428                           
 13429                           ; BSR set to: 0
 13430  0093DC  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13431  0093DE  A4D8               	btfss	status,2,c
 13432  0093E0  0012               	return	
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13436  0093E2  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13437  0093E4  A4D8               	btfss	status,2,c
 13438  0093E6  0012               	return	
 13439                           
 13440                           ; BSR set to: 0
 13441  0093E8  0101               	movlb	1	; () banked
 13442  0093EA  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13443  0093EC  A4D8               	btfss	status,2,c
 13444  0093EE  0012               	return	
 13445                           
 13446                           ; BSR set to: 1
 13447                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13448  0093F0  0E01               	movlw	1
 13449  0093F2  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13450  0093F4  0012               	return		;funcret
 13451  0093F6                     __end_of_VerifyFollowMe:
 13452                           	callstack 0
 13453                           
 13454 ;; *************** function _CloseOrder *****************
 13455 ;; Defined at:
 13456 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;		None
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;		None
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  1    wreg      void 
 13463 ;; Registers used:
 13464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13465 ;; Tracked objects:
 13466 ;;		On entry : 3E/1
 13467 ;;		On exit  : 3E/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13474 ;;Total ram usage:        0 bytes
 13475 ;; Hardware stack levels used: 1
 13476 ;; Hardware stack levels required when called: 6
 13477 ;; This function calls:
 13478 ;;		_InitSoftStart
 13479 ;;		_sm_send_event
 13480 ;; This function is called by:
 13481 ;;		_actionZone_Opening
 13482 ;;		_actionZone_Opened
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text32
 13487  009314                     __ptext32:
 13488                           	callstack 0
 13489  009314                     _CloseOrder:
 13490                           	callstack 22
 13491                           
 13492                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13493                           
 13494                           ;incstack = 0
 13495  009314  0E03               	movlw	3
 13496  009316  0101               	movlb	1	; () banked
 13497  009318  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13498                           
 13499                           ; BSR set to: 1
 13500                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13501  00931A  0EE3               	movlw	low _controlGate_stateMachine
 13502  00931C  6E12               	movwf	sm_send_event@psm^0,c
 13503  00931E  0E01               	movlw	high _controlGate_stateMachine
 13504  009320  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13505  009322  0E00               	movlw	0
 13506  009324  6E15               	movwf	(sm_send_event@event+1)^0,c
 13507  009326  0E0E               	movlw	14
 13508  009328  6E14               	movwf	sm_send_event@event^0,c
 13509  00932A  EC8F  F043         	call	_sm_send_event	;wreg free
 13510                           
 13511                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13512  00932E  0E03               	movlw	3
 13513  009330  0101               	movlb	1	; () banked
 13514  009332  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13515                           
 13516                           ; BSR set to: 1
 13517                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13518  009334  ECBD  F043         	call	_InitSoftStart	;wreg free
 13519  009338  0012               	return		;funcret
 13520  00933A                     __end_of_CloseOrder:
 13521                           	callstack 0
 13522                           
 13523 ;; *************** function _actionZone_Closing *****************
 13524 ;; Defined at:
 13525 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;		None
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13530 ;;  securityClos    1   49[COMRAM] enum E10397
 13531 ;; Return value:  Size  Location     Type
 13532 ;;                  1    wreg      void 
 13533 ;; Registers used:
 13534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13535 ;; Tracked objects:
 13536 ;;		On entry : 3F/0
 13537 ;;		On exit  : 0/0
 13538 ;;		Unchanged: 0/0
 13539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13544 ;;Total ram usage:        2 bytes
 13545 ;; Hardware stack levels used: 1
 13546 ;; Hardware stack levels required when called: 7
 13547 ;; This function calls:
 13548 ;;		_GetOpenOrder
 13549 ;;		_GetSecurityStateInClosing
 13550 ;;		_InitFullAutoTime
 13551 ;;		_InitWalkAutoTime
 13552 ;;		_OpenFullOrder
 13553 ;;		_OpenWalkOrder
 13554 ;;		_SetSegmentValueIntermitent
 13555 ;;		_StopOrder
 13556 ;;		___lmul
 13557 ;;		_setPositionInvertionInClosing
 13558 ;;		_sm_send_event
 13559 ;; This function is called by:
 13560 ;;		_sm_execute_ControlGate
 13561 ;; This function uses a non-reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text33
 13565  00451C                     __ptext33:
 13566                           	callstack 0
 13567  00451C                     _actionZone_Closing:
 13568                           	callstack 22
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13572                           
 13573                           ;incstack = 0
 13574  00451C  EC5E  F02B         	call	_GetOpenOrder	;wreg free
 13575  004520  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13576                           
 13577                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13578  004522  ECA6  F03B         	call	_GetSecurityStateInClosing	;wreg free
 13579  004526  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13580                           
 13581                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13582  004528  0E00               	movlw	0
 13583  00452A  0101               	movlb	1	; () banked
 13584  00452C  6F8E               	movwf	_Abertura_pedonal& (0+255),b
 13585                           
 13586                           ; BSR set to: 1
 13587                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13588  00452E  EC91  F04A         	call	_InitFullAutoTime	;wreg free
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13592  004532  0E00               	movlw	0
 13593  004534  0101               	movlb	1	; () banked
 13594  004536  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13595                           
 13596                           ; BSR set to: 1
 13597                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13598  004538  0E03               	movlw	3
 13599  00453A  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13600  00453C  D00D               	goto	l22267
 13601                           
 13602                           ; BSR set to: 1
 13603                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13604  00453E  0E00               	movlw	0
 13605  004540  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13606  004542                     l22265:
 13607                           
 13608                           ; BSR set to: 1
 13609                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13610  004542  0EE3               	movlw	low _controlGate_stateMachine
 13611  004544  6E12               	movwf	sm_send_event@psm^0,c
 13612  004546  0E01               	movlw	high _controlGate_stateMachine
 13613  004548  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13614  00454A  0E00               	movlw	0
 13615  00454C  6E15               	movwf	(sm_send_event@event+1)^0,c
 13616  00454E  0E10               	movlw	16
 13617  004550  6E14               	movwf	sm_send_event@event^0,c
 13618  004552  EC8F  F043         	call	_sm_send_event	;wreg free
 13619                           
 13620                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13621  004556  0012               	return	
 13622  004558                     l22267:
 13623                           
 13624                           ; BSR set to: 1
 13625  004558  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13626  00455A  B4D8               	btfsc	status,2,c
 13627  00455C  D00C               	goto	u26240
 13628                           
 13629                           ; BSR set to: 1
 13630  00455E  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13631  004560  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13632  004562  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13633  004564  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13634  004566  A4D8               	btfss	status,2,c
 13635  004568  D05F               	goto	l22299
 13636                           
 13637                           ; BSR set to: 1
 13638  00456A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13639  00456C  A4D8               	btfss	status,2,c
 13640  00456E  D05C               	goto	l22299
 13641                           
 13642                           ; BSR set to: 1
 13643  004570  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13644  004572  A4D8               	btfss	status,2,c
 13645  004574  D059               	goto	l22299
 13646  004576                     u26240:
 13647                           
 13648                           ; BSR set to: 1
 13649                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13650  004576  0E02               	movlw	2
 13651  004578  0100               	movlb	0	; () banked
 13652  00457A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13653  00457C  A4D8               	btfss	status,2,c
 13654  00457E  D018               	goto	l22279
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13658  004580  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13659  004582  6E1D               	movwf	___lmul@multiplier^0,c
 13660  004584  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13661  004586  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13662  004588  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13663  00458A  0EB0               	movlw	176
 13664  00458C  6E21               	movwf	___lmul@multiplicand^0,c
 13665  00458E  0E04               	movlw	4
 13666  004590  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13667  004592  0E00               	movlw	0
 13668  004594  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13669  004596  0E00               	movlw	0
 13670  004598  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13671  00459A  EC9D  F044         	call	___lmul	;wreg free
 13672  00459E  C01D  F1BB         	movff	?___lmul,_ts_system+32	;volatile
 13673  0045A2  C01E  F1BC         	movff	?___lmul+1,_ts_system+33	;volatile
 13674  0045A6  C01F  F1BD         	movff	?___lmul+2,_ts_system+34	;volatile
 13675  0045AA  C020  F1BE         	movff	?___lmul+3,_ts_system+35	;volatile
 13676                           
 13677                           ;sm_ControlGate_MC50.c: 668:         }
 13678  0045AE  D009               	goto	l2773
 13679  0045B0                     l22279:
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13683  0045B0  0E00               	movlw	0
 13684  0045B2  0101               	movlb	1	; () banked
 13685  0045B4  6FBB               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13686  0045B6  0E00               	movlw	0
 13687  0045B8  6FBC               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13688  0045BA  0E00               	movlw	0
 13689  0045BC  6FBD               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13690  0045BE  0E00               	movlw	0
 13691  0045C0  6FBE               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13692  0045C2                     l2773:
 13693                           
 13694                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13695  0045C2  0E00               	movlw	0
 13696  0045C4  0101               	movlb	1	; () banked
 13697  0045C6  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13698                           
 13699                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13700  0045C8  0E01               	movlw	1
 13701  0045CA  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13702                           
 13703                           ; BSR set to: 1
 13704                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13705  0045CC  0E01               	movlw	1
 13706  0045CE  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13707  0045D0  0E00               	movlw	0
 13708  0045D2  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13709  0045D4  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13710  0045D6  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13711                           
 13712                           ; BSR set to: 1
 13713                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13714  0045D8  0E00               	movlw	0
 13715  0045DA  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13716                           
 13717                           ; BSR set to: 1
 13718                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13719  0045DC  0E00               	movlw	0
 13720  0045DE  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13721  0045E0  0E00               	movlw	0
 13722  0045E2  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13723  0045E4  0E00               	movlw	0
 13724  0045E6  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13725  0045E8  0E00               	movlw	0
 13726  0045EA  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13727                           
 13728                           ; BSR set to: 1
 13729                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13730  0045EC  0E00               	movlw	0
 13731  0045EE  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13732                           
 13733                           ; BSR set to: 1
 13734                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13735  0045F0  0E00               	movlw	0
 13736  0045F2  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13737                           
 13738                           ; BSR set to: 1
 13739                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13740  0045F4  0E00               	movlw	0
 13741  0045F6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13742                           
 13743                           ; BSR set to: 1
 13744                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13745  0045F8  0E00               	movlw	0
 13746  0045FA  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13747  0045FC  0E28               	movlw	40
 13748  0045FE  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13749                           
 13750                           ; BSR set to: 1
 13751                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13752  004600  0E0C               	movlw	12
 13753  004602  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13754  004604  0E00               	movlw	0
 13755  004606  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13756  004608  0E04               	movlw	4
 13757  00460A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13758  00460C  0E0F               	movlw	15
 13759  00460E  EC2E  F048         	call	_SetSegmentValueIntermitent
 13760                           
 13761                           ; BSR set to: 1
 13762                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13763  004612  0EE3               	movlw	low _controlGate_stateMachine
 13764  004614  6E12               	movwf	sm_send_event@psm^0,c
 13765  004616  0E01               	movlw	high _controlGate_stateMachine
 13766  004618  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13767  00461A  0E00               	movlw	0
 13768  00461C  6E15               	movwf	(sm_send_event@event+1)^0,c
 13769  00461E  0E0F               	movlw	15
 13770  004620  6E14               	movwf	sm_send_event@event^0,c
 13771  004622  EC8F  F043         	call	_sm_send_event	;wreg free
 13772                           
 13773                           ;sm_ControlGate_MC50.c: 691:     }
 13774  004626  0012               	return	
 13775  004628                     l22299:
 13776                           
 13777                           ; BSR set to: 1
 13778  004628  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13779  00462A  B4D8               	btfsc	status,2,c
 13780  00462C  D011               	goto	u26290
 13781                           
 13782                           ; BSR set to: 1
 13783  00462E  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13784  004630  D021               	goto	l22319
 13785  004632  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13786  004634  E103               	bnz	u26270
 13787  004636  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13788  004638  A0D8               	btfss	status,0,c
 13789  00463A  D01C               	goto	l22319
 13790  00463C                     u26270:
 13791                           
 13792                           ; BSR set to: 1
 13793  00463C  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13794  00463E  A4D8               	btfss	status,2,c
 13795  004640  D019               	goto	l22319
 13796                           
 13797                           ; BSR set to: 1
 13798  004642  BFCC               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13799  004644  D005               	goto	u26290
 13800  004646  51CC               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13801  004648  E115               	bnz	l22319
 13802  00464A  05CB               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13803  00464C  B0D8               	btfsc	status,0,c
 13804  00464E  D012               	goto	l22319
 13805  004650                     u26290:
 13806                           
 13807                           ; BSR set to: 1
 13808  004650  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13809  004652  A4D8               	btfss	status,2,c
 13810  004654  D00F               	goto	l22319
 13811                           
 13812                           ; BSR set to: 1
 13813                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13814  004656  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13815  004658  A4D8               	btfss	status,2,c
 13816                           
 13817                           ; BSR set to: 1
 13818                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13819  00465A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13820                           
 13821                           ; BSR set to: 1
 13822                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13823                           
 13824                           ;sm_ControlGate_MC50.c: 696:         }
 13825  00465C  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13826                           
 13827                           ; BSR set to: 1
 13828                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13829  00465E  0E01               	movlw	1
 13830  004660  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13831                           
 13832                           ; BSR set to: 1
 13833                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13834  004662  0E00               	movlw	0
 13835  004664  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13836  004666  0E0A               	movlw	10
 13837  004668  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13838                           
 13839                           ; BSR set to: 1
 13840                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13841  00466A  0E00               	movlw	0
 13842  00466C  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13843  00466E  0E1E               	movlw	30
 13844  004670  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13845                           
 13846                           ;sm_ControlGate_MC50.c: 702:     }
 13847  004672  0012               	return	
 13848  004674                     l22319:
 13849                           
 13850                           ; BSR set to: 1
 13851  004674  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13852  004676  D02E               	goto	l22349
 13853  004678  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13854  00467A  E103               	bnz	u26320
 13855  00467C  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13856  00467E  A0D8               	btfss	status,0,c
 13857  004680  D029               	goto	l22349
 13858  004682                     u26320:
 13859                           
 13860                           ; BSR set to: 1
 13861  004682  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13862  004684  A4D8               	btfss	status,2,c
 13863  004686  D026               	goto	l22349
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13867  004688  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13868  00468A  A4D8               	btfss	status,2,c
 13869  00468C  D005               	goto	l22331
 13870  00468E                     u26340:
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13874  00468E  0E00               	movlw	0
 13875  004690  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13876                           
 13877                           ; BSR set to: 1
 13878                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 13879  004692  EC5B  F034         	call	_setPositionInvertionInClosing	;wreg free
 13880  004696  D755               	goto	l22265
 13881  004698                     l22331:
 13882                           
 13883                           ; BSR set to: 1
 13884  004698  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13885  00469A  D005               	goto	u26350
 13886  00469C  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13887  00469E  E117               	bnz	l22347
 13888  0046A0  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13889  0046A2  B0D8               	btfsc	status,0,c
 13890  0046A4  D014               	goto	l22347
 13891  0046A6                     u26350:
 13892                           
 13893                           ; BSR set to: 1
 13894                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 13895  0046A6  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13896  0046A8  A4D8               	btfss	status,2,c
 13897  0046AA  D003               	goto	l22337
 13898                           
 13899                           ; BSR set to: 1
 13900                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 13901  0046AC  EC24  F042         	call	_OpenWalkOrder	;wreg free
 13902                           
 13903                           ;sm_ControlGate_MC50.c: 713:             }
 13904  0046B0  D004               	goto	l22341
 13905  0046B2                     l22337:
 13906                           
 13907                           ; BSR set to: 1
 13908                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 13909  0046B2  EC9D  F049         	call	_OpenFullOrder	;wreg free
 13910                           
 13911                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 13912  0046B6  EC5B  F034         	call	_setPositionInvertionInClosing	;wreg free
 13913  0046BA                     l22341:
 13914                           
 13915                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 13916  0046BA  0E00               	movlw	0
 13917  0046BC  0101               	movlb	1	; () banked
 13918  0046BE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13919                           
 13920                           ; BSR set to: 1
 13921                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 13922  0046C0  0E01               	movlw	1
 13923  0046C2  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 13924                           
 13925                           ; BSR set to: 1
 13926                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 13927  0046C4  0E00               	movlw	0
 13928  0046C6  6FCC               	movwf	(_ts_system+49)& (0+255),b	;volatile
 13929  0046C8  0E14               	movlw	20
 13930  0046CA  6FCB               	movwf	(_ts_system+48)& (0+255),b	;volatile
 13931                           
 13932                           ;sm_ControlGate_MC50.c: 726:         } else
 13933  0046CC  0012               	return	
 13934  0046CE                     l22347:
 13935                           
 13936                           ; BSR set to: 1
 13937                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 13938  0046CE  0E00               	movlw	0
 13939  0046D0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13940  0046D2  0012               	return	
 13941  0046D4                     l22349:
 13942                           
 13943                           ; BSR set to: 1
 13944  0046D4  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13945  0046D6  A4D8               	btfss	status,2,c
 13946  0046D8  D017               	goto	l22365
 13947                           
 13948                           ; BSR set to: 1
 13949                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 13950  0046DA  0E00               	movlw	0
 13951  0046DC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13952                           
 13953                           ; BSR set to: 1
 13954                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 13955  0046DE  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13956  0046E0  D005               	goto	u26380
 13957  0046E2  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13958  0046E4  E160               	bnz	l2810
 13959  0046E6  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13960  0046E8  B0D8               	btfsc	status,0,c
 13961  0046EA  0012               	return	
 13962  0046EC                     u26380:
 13963                           
 13964                           ; BSR set to: 1
 13965                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 13966  0046EC  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13967  0046EE  A4D8               	btfss	status,2,c
 13968  0046F0  D003               	goto	l22359
 13969                           
 13970                           ; BSR set to: 1
 13971                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 13972  0046F2  EC24  F042         	call	_OpenWalkOrder	;wreg free
 13973                           
 13974                           ;sm_ControlGate_MC50.c: 741:             }
 13975  0046F6  D004               	goto	l22363
 13976  0046F8                     l22359:
 13977                           
 13978                           ; BSR set to: 1
 13979                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 13980  0046F8  EC9D  F049         	call	_OpenFullOrder	;wreg free
 13981                           
 13982                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 13983  0046FC  EC5B  F034         	call	_setPositionInvertionInClosing	;wreg free
 13984  004700                     l22363:
 13985                           
 13986                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 13987  004700  0E00               	movlw	0
 13988  004702  0101               	movlb	1	; () banked
 13989  004704  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13990  004706  0012               	return	
 13991  004708                     l22365:
 13992                           
 13993                           ; BSR set to: 1
 13994  004708  5100               	movf	_var_sys& (0+255),w,b	;volatile
 13995  00470A  A4D8               	btfss	status,2,c
 13996  00470C  D00B               	goto	l22381
 13997                           
 13998                           ; BSR set to: 1
 13999                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14000  00470E  0E02               	movlw	2
 14001  004710  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14002  004712  B4D8               	btfsc	status,2,c
 14003  004714  D002               	goto	l22377
 14004                           
 14005                           ; BSR set to: 1
 14006                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14007  004716  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14008  004718  D7BA               	goto	u26340
 14009  00471A                     l22377:
 14010                           
 14011                           ; BSR set to: 1
 14012                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14013  00471A  EC5B  F034         	call	_setPositionInvertionInClosing	;wreg free
 14014  00471E                     l22379:
 14015                           
 14016                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14017  00471E  EC3F  F04A         	call	_StopOrder	;wreg free
 14018  004722  0012               	return	
 14019  004724                     l22381:
 14020                           
 14021                           ; BSR set to: 1
 14022  004724  BFCE               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14023  004726  D005               	goto	u26420
 14024  004728  51CE               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14025  00472A  E10B               	bnz	l22391
 14026  00472C  05CD               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14027  00472E  B0D8               	btfsc	status,0,c
 14028  004730  D008               	goto	l22391
 14029  004732                     u26420:
 14030                           
 14031                           ; BSR set to: 1
 14032  004732  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14033  004734  A4D8               	btfss	status,2,c
 14034  004736  D005               	goto	l22391
 14035                           
 14036                           ; BSR set to: 1
 14037                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14038  004738  EC5B  F034         	call	_setPositionInvertionInClosing	;wreg free
 14039                           
 14040                           ; BSR set to: 1
 14041                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14042  00473C  0E00               	movlw	0
 14043  00473E  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14044  004740  D7EE               	goto	l22379
 14045  004742                     l22391:
 14046                           
 14047                           ; BSR set to: 1
 14048  004742  0100               	movlb	0	; () banked
 14049  004744  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14050  004746  B4D8               	btfsc	status,2,c
 14051  004748  D004               	goto	u26450
 14052                           
 14053                           ; BSR set to: 0
 14054  00474A  0E02               	movlw	2
 14055  00474C  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14056  00474E  A4D8               	btfss	status,2,c
 14057  004750  D005               	goto	l22399
 14058  004752                     u26450:
 14059                           
 14060                           ; BSR set to: 0
 14061                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14062  004752  0E04               	movlw	4
 14063  004754  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14064  004756  B4D8               	btfsc	status,2,c
 14065  004758  0012               	return	
 14066  00475A  D7E1               	goto	l22379
 14067  00475C                     l22399:
 14068                           
 14069                           ; BSR set to: 0
 14070  00475C  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14071  00475E  B4D8               	btfsc	status,2,c
 14072  004760  0012               	return	
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14076  004762  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14077  004764  A4D8               	btfss	status,2,c
 14078  004766  D013               	goto	l22415
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14082  004768  EC5B  F034         	call	_setPositionInvertionInClosing	;wreg free
 14083                           
 14084                           ; BSR set to: 1
 14085                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14086  00476C  EC3F  F04A         	call	_StopOrder	;wreg free
 14087                           
 14088                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14089  004770  0E02               	movlw	2
 14090  004772  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14091  004774  A4D8               	btfss	status,2,c
 14092  004776  0012               	return	
 14093  004778  0E02               	movlw	2
 14094  00477A  0100               	movlb	0	; () banked
 14095  00477C  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14096  00477E  B4D8               	btfsc	status,2,c
 14097  004780  0012               	return	
 14098                           
 14099                           ; BSR set to: 0
 14100                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14101  004782  EC16  F04B         	call	_InitWalkAutoTime	;wreg free
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14105  004786  0E01               	movlw	1
 14106  004788  0101               	movlb	1	; () banked
 14107  00478A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14108  00478C  0012               	return	
 14109  00478E                     l22415:
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14113  00478E  0E04               	movlw	4
 14114  004790  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14115  004792  B4D8               	btfsc	status,2,c
 14116  004794  D7C4               	goto	l22379
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14120  004796  0E01               	movlw	1
 14121  004798  0101               	movlb	1	; () banked
 14122  00479A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14123                           
 14124                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14125  00479C  0E00               	movlw	0
 14126  00479E  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14127  0047A0  0E0A               	movlw	10
 14128  0047A2  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14129                           
 14130                           ;sm_ControlGate_MC50.c: 806:             }
 14131  0047A4  0012               	return	
 14132  0047A6                     l2810:
 14133  0047A6  0012               	return		;funcret
 14134  0047A8                     __end_of_actionZone_Closing:
 14135                           	callstack 0
 14136                           
 14137 ;; *************** function _setPositionInvertionInClosing *****************
 14138 ;; Defined at:
 14139 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;		None
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;		None
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  1    wreg      void 
 14146 ;; Registers used:
 14147 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14148 ;; Tracked objects:
 14149 ;;		On entry : 3E/1
 14150 ;;		On exit  : 3F/1
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14157 ;;Total ram usage:       12 bytes
 14158 ;; Hardware stack levels used: 1
 14159 ;; Hardware stack levels required when called: 6
 14160 ;; This function calls:
 14161 ;;		_getTimeDecelaration
 14162 ;; This function is called by:
 14163 ;;		_actionZone_Opening
 14164 ;;		_actionZone_Closing
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text34
 14169  0068B6                     __ptext34:
 14170                           	callstack 0
 14171  0068B6                     _setPositionInvertionInClosing:
 14172                           	callstack 22
 14173                           
 14174                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14175                           
 14176                           ;incstack = 0
 14177  0068B6  0E02               	movlw	2
 14178  0068B8  0100               	movlb	0	; () banked
 14179  0068BA  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14180  0068BC  B4D8               	btfsc	status,2,c
 14181  0068BE  D007               	goto	l21047
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14185  0068C0  0E02               	movlw	2
 14186  0068C2  0101               	movlb	1	; () banked
 14187  0068C4  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14188  0068C6  0E00               	movlw	0
 14189  0068C8  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14190  0068CA  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14191  0068CC  D008               	goto	L74
 14192  0068CE                     l21047:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14196  0068CE  0EFF               	movlw	255
 14197  0068D0  0101               	movlb	1	; () banked
 14198  0068D2  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14199  0068D4  0EFF               	movlw	255
 14200  0068D6  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14201  0068D8  0EFF               	movlw	255
 14202  0068DA  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14203  0068DC  0EFF               	movlw	255
 14204  0068DE                     L74:
 14205  0068DE  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14206                           
 14207                           ; BSR set to: 1
 14208                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14209  0068E0  0E01               	movlw	1
 14210  0068E2  EC8E  F038         	call	_getTimeDecelaration
 14211  0068E6  0101               	movlb	1	; () banked
 14212  0068E8  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14213  0068EA  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14214  0068EC  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14215  0068EE  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14216  0068F0  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14217  0068F2  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14218  0068F4  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14219  0068F6  0A80               	xorlw	128
 14220  0068F8  0100               	movlb	0	; () banked
 14221  0068FA  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14222  0068FC  0101               	movlb	1	; () banked
 14223  0068FE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14224  006900  0A80               	xorlw	128
 14225  006902  0100               	movlb	0	; () banked
 14226  006904  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14227  006906  B0D8               	btfsc	status,0,c
 14228  006908  D008               	goto	l21055
 14229                           
 14230                           ; BSR set to: 0
 14231  00690A  0E02               	movlw	2
 14232  00690C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14233  00690E  B4D8               	btfsc	status,2,c
 14234  006910  D004               	goto	l21055
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14238  006912  0E01               	movlw	1
 14239  006914  EC8E  F038         	call	_getTimeDecelaration
 14240  006918  D01A               	goto	L75
 14241  00691A                     l21055:
 14242                           
 14243                           ; BSR set to: 0
 14244  00691A  0E03               	movlw	3
 14245  00691C  EC8E  F038         	call	_getTimeDecelaration
 14246  006920  5029               	movf	?_getTimeDecelaration^0,w,c
 14247  006922  0101               	movlb	1	; () banked
 14248  006924  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14249  006926  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14250  006928  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14251  00692A  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14252  00692C  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14253  00692E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14254  006930  0A80               	xorlw	128
 14255  006932  0100               	movlb	0	; () banked
 14256  006934  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14257  006936  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14258  006938  0A80               	xorlw	128
 14259  00693A  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14260  00693C  B0D8               	btfsc	status,0,c
 14261  00693E  D00F               	goto	l21061
 14262                           
 14263                           ; BSR set to: 0
 14264  006940  0E02               	movlw	2
 14265  006942  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14266  006944  B4D8               	btfsc	status,2,c
 14267  006946  D00B               	goto	l21061
 14268                           
 14269                           ; BSR set to: 0
 14270                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14271  006948  0E03               	movlw	3
 14272  00694A  EC8E  F038         	call	_getTimeDecelaration
 14273  00694E                     L75:
 14274  00694E  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14275  006952  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14276  006956  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14277  00695A  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14278  00695E                     l21061:
 14279                           
 14280                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14281  00695E  0100               	movlb	0	; () banked
 14282  006960  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14283  006962  0D0A               	mullw	10
 14284  006964  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14285  006968  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14286  00696C  0E00               	movlw	0
 14287  00696E  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14288  006970  0EFF               	movlw	255
 14289  006972  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14290  006974  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14291  006976  0101               	movlb	1	; () banked
 14292  006978  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14293  00697A  0100               	movlb	0	; () banked
 14294  00697C  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14295  00697E  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14296  006980  0101               	movlb	1	; () banked
 14297  006982  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14298  006984  0100               	movlb	0	; () banked
 14299  006986  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14300  006988  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14301  00698A  0101               	movlb	1	; () banked
 14302  00698C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14303  00698E  0100               	movlb	0	; () banked
 14304  006990  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14305  006992  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14306  006994  0101               	movlb	1	; () banked
 14307  006996  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14308  006998  0100               	movlb	0	; () banked
 14309  00699A  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14310  00699C  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14311  00699E  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14312  0069A0  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14313  0069A2  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14314  0069A4  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14315  0069A6  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14316  0069A8  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14317  0069AA  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14318  0069AC  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14319  0069AE  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14320  0069B0  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14321  0069B2  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14322  0069B4  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14323  0069B6  0EC8               	movlw	200
 14324  0069B8  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14325  0069BA  0101               	movlb	1	; () banked
 14326  0069BC  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14327  0069BE  0E00               	movlw	0
 14328  0069C0  0100               	movlb	0	; () banked
 14329  0069C2  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14330  0069C4  0101               	movlb	1	; () banked
 14331  0069C6  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14332  0069C8  0E00               	movlw	0
 14333  0069CA  0100               	movlb	0	; () banked
 14334  0069CC  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14335  0069CE  0101               	movlb	1	; () banked
 14336  0069D0  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14337  0069D2  0E00               	movlw	0
 14338  0069D4  0100               	movlb	0	; () banked
 14339  0069D6  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14340  0069D8  0101               	movlb	1	; () banked
 14341  0069DA  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14342                           
 14343                           ; BSR set to: 1
 14344  0069DC  0012               	return		;funcret
 14345  0069DE                     __end_of_setPositionInvertionInClosing:
 14346                           	callstack 0
 14347                           
 14348 ;; *************** function _getTimeDecelaration *****************
 14349 ;; Defined at:
 14350 ;;		line 641 in file "outputs_MC50.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;  state           1    wreg     enum E10381
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;  state           1   48[COMRAM] enum E10381
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  4   40[COMRAM] long 
 14357 ;; Registers used:
 14358 ;;		wreg, status,2, status,0, cstack
 14359 ;; Tracked objects:
 14360 ;;		On entry : 3E/1
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14367 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14368 ;;Total ram usage:        9 bytes
 14369 ;; Hardware stack levels used: 1
 14370 ;; Hardware stack levels required when called: 5
 14371 ;; This function calls:
 14372 ;;		___lmul
 14373 ;; This function is called by:
 14374 ;;		_getStateOpenPosition
 14375 ;;		_controlVelocity
 14376 ;;		_setPositionInvertionInClosing
 14377 ;;		_setPositionInvertionInOpening
 14378 ;; This function uses a non-reentrant model
 14379 ;;
 14380                           
 14381                           	psect	text35
 14382  00711C                     __ptext35:
 14383                           	callstack 0
 14384  00711C                     _getTimeDecelaration:
 14385                           	callstack 22
 14386                           
 14387                           ; BSR set to: 1
 14388                           ;incstack = 0
 14389                           ;getTimeDecelaration@state stored from wreg
 14390  00711C  6E31               	movwf	getTimeDecelaration@state^0,c
 14391                           
 14392                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14393  00711E  0E03               	movlw	3
 14394  007120  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14395  007122  A4D8               	btfss	status,2,c
 14396  007124  D033               	goto	l20083
 14397                           
 14398                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14399  007126  0E02               	movlw	2
 14400  007128  0100               	movlb	0	; () banked
 14401  00712A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14402  00712C  B4D8               	btfsc	status,2,c
 14403  00712E  D018               	goto	l20079
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14407  007130  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14408  007132  6E1D               	movwf	___lmul@multiplier^0,c
 14409  007134  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14410  007136  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14411  007138  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14412  00713A  0E0A               	movlw	10
 14413  00713C  6E21               	movwf	___lmul@multiplicand^0,c
 14414  00713E  0E00               	movlw	0
 14415  007140  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14416  007142  0E00               	movlw	0
 14417  007144  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14418  007146  0E00               	movlw	0
 14419  007148  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14420  00714A  EC9D  F044         	call	___lmul	;wreg free
 14421  00714E  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14422  007152  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14423  007156  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14424  00715A  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14425  00715E  0012               	return	
 14426  007160                     l20079:
 14427                           
 14428                           ; BSR set to: 0
 14429  007160  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14430  007164  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14431  007166  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14432  007168  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14433  00716A  0E02               	movlw	2
 14434  00716C                     u22965:
 14435  00716C  90D8               	bcf	status,0,c
 14436  00716E  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14437  007170  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14438  007172  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14439  007174  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14440  007176  2EE8               	decfsz	wreg,f,c
 14441  007178  D7F9               	goto	u22965
 14442  00717A  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14443  00717E  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14444  007182  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14445  007186  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14446  00718A  0012               	return	
 14447  00718C                     l20083:
 14448                           
 14449                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14450  00718C  0E02               	movlw	2
 14451  00718E  0100               	movlb	0	; () banked
 14452  007190  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14453  007192  B4D8               	btfsc	status,2,c
 14454  007194  D01D               	goto	l20091
 14455                           
 14456                           ; BSR set to: 0
 14457                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14458  007196  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14459  007198  6E1D               	movwf	___lmul@multiplier^0,c
 14460  00719A  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14461  00719C  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14462  00719E  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14463  0071A0  0EF6               	movlw	246
 14464  0071A2  6E21               	movwf	___lmul@multiplicand^0,c
 14465  0071A4  0EFF               	movlw	255
 14466  0071A6  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14467  0071A8  0EFF               	movlw	255
 14468  0071AA  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14469  0071AC  0EFF               	movlw	255
 14470  0071AE  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14471  0071B0  EC9D  F044         	call	___lmul	;wreg free
 14472  0071B4  0100               	movlb	0	; () banked
 14473  0071B6  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14474  0071B8  241D               	addwf	?___lmul^0,w,c
 14475  0071BA  6E29               	movwf	?_getTimeDecelaration^0,c
 14476  0071BC  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14477  0071BE  201E               	addwfc	(?___lmul+1)^0,w,c
 14478  0071C0  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14479  0071C2  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14480  0071C4  201F               	addwfc	(?___lmul+2)^0,w,c
 14481  0071C6  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14482  0071C8  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14483  0071CA  2020               	addwfc	(?___lmul+3)^0,w,c
 14484  0071CC  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14485  0071CE  0012               	return	
 14486  0071D0                     l20091:
 14487                           
 14488                           ; BSR set to: 0
 14489  0071D0  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14490  0071D4  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14491  0071D6  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14492  0071D8  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14493  0071DA  0E02               	movlw	2
 14494  0071DC                     u22985:
 14495  0071DC  90D8               	bcf	status,0,c
 14496  0071DE  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14497  0071E0  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14498  0071E2  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14499  0071E4  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14500  0071E6  2EE8               	decfsz	wreg,f,c
 14501  0071E8  D7F9               	goto	u22985
 14502  0071EA  502D               	movf	??_getTimeDecelaration^0,w,c
 14503  0071EC  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14504  0071EE  6E29               	movwf	?_getTimeDecelaration^0,c
 14505  0071F0  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14506  0071F2  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14507  0071F4  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14508  0071F6  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14509  0071F8  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14510  0071FA  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14511  0071FC  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14512  0071FE  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14513  007200  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14514  007202  0012               	return		;funcret
 14515  007204                     __end_of_getTimeDecelaration:
 14516                           	callstack 0
 14517                           
 14518 ;; *************** function ___lmul *****************
 14519 ;; Defined at:
 14520 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;  multiplier      4   28[COMRAM] unsigned long 
 14523 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14524 ;; Auto vars:     Size  Location     Type
 14525 ;;  product         4   36[COMRAM] unsigned long 
 14526 ;; Return value:  Size  Location     Type
 14527 ;;                  4   28[COMRAM] unsigned long 
 14528 ;; Registers used:
 14529 ;;		wreg, status,2, status,0
 14530 ;; Tracked objects:
 14531 ;;		On entry : 0/1
 14532 ;;		On exit  : 0/0
 14533 ;;		Unchanged: 0/0
 14534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14536 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14538 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14539 ;;Total ram usage:       12 bytes
 14540 ;; Hardware stack levels used: 1
 14541 ;; Hardware stack levels required when called: 4
 14542 ;; This function calls:
 14543 ;;		Nothing
 14544 ;; This function is called by:
 14545 ;;		_getStateOpenPosition
 14546 ;;		_getTimeDecelaration
 14547 ;;		_actionZone_Closing
 14548 ;;		_sm_execute_menuConfiguration
 14549 ;; This function uses a non-reentrant model
 14550 ;;
 14551                           
 14552                           	psect	text36
 14553  00893A                     __ptext36:
 14554                           	callstack 0
 14555  00893A                     ___lmul:
 14556                           	callstack 24
 14557                           
 14558                           ;incstack = 0
 14559  00893A  0E00               	movlw	0
 14560  00893C  6E25               	movwf	___lmul@product^0,c
 14561  00893E  0E00               	movlw	0
 14562  008940  6E26               	movwf	(___lmul@product+1)^0,c
 14563  008942  0E00               	movlw	0
 14564  008944  6E27               	movwf	(___lmul@product+2)^0,c
 14565  008946  0E00               	movlw	0
 14566  008948  6E28               	movwf	(___lmul@product+3)^0,c
 14567  00894A                     l19969:
 14568  00894A  A01D               	btfss	___lmul@multiplier^0,0,c
 14569  00894C  D008               	goto	l19973
 14570  00894E  5021               	movf	___lmul@multiplicand^0,w,c
 14571  008950  2625               	addwf	___lmul@product^0,f,c
 14572  008952  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14573  008954  2226               	addwfc	(___lmul@product+1)^0,f,c
 14574  008956  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14575  008958  2227               	addwfc	(___lmul@product+2)^0,f,c
 14576  00895A  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14577  00895C  2228               	addwfc	(___lmul@product+3)^0,f,c
 14578  00895E                     l19973:
 14579  00895E  90D8               	bcf	status,0,c
 14580  008960  3621               	rlcf	___lmul@multiplicand^0,f,c
 14581  008962  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14582  008964  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14583  008966  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14584  008968  90D8               	bcf	status,0,c
 14585  00896A  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14586  00896C  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14587  00896E  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14588  008970  321D               	rrcf	___lmul@multiplier^0,f,c
 14589  008972  501D               	movf	___lmul@multiplier^0,w,c
 14590  008974  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14591  008976  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14592  008978  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14593  00897A  A4D8               	btfss	status,2,c
 14594  00897C  D7E6               	goto	l19969
 14595  00897E  C025  F01D         	movff	___lmul@product,?___lmul
 14596  008982  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14597  008986  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14598  00898A  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14599  00898E  0012               	return		;funcret
 14600  008990                     __end_of___lmul:
 14601                           	callstack 0
 14602                           
 14603 ;; *************** function _StopOrder *****************
 14604 ;; Defined at:
 14605 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14606 ;; Parameters:    Size  Location     Type
 14607 ;;		None
 14608 ;; Auto vars:     Size  Location     Type
 14609 ;;		None
 14610 ;; Return value:  Size  Location     Type
 14611 ;;                  1    wreg      void 
 14612 ;; Registers used:
 14613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14614 ;; Tracked objects:
 14615 ;;		On entry : 3E/1
 14616 ;;		On exit  : 0/0
 14617 ;;		Unchanged: 0/0
 14618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14623 ;;Total ram usage:        0 bytes
 14624 ;; Hardware stack levels used: 1
 14625 ;; Hardware stack levels required when called: 6
 14626 ;; This function calls:
 14627 ;;		_sm_send_event
 14628 ;; This function is called by:
 14629 ;;		_actionZone_Opening
 14630 ;;		_actionZone_Closing
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           	psect	text37
 14635  00947E                     __ptext37:
 14636                           	callstack 0
 14637  00947E                     _StopOrder:
 14638                           	callstack 22
 14639                           
 14640                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14641                           
 14642                           ;incstack = 0
 14643  00947E  0E00               	movlw	0
 14644  009480  0101               	movlb	1	; () banked
 14645  009482  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14646                           
 14647                           ; BSR set to: 1
 14648                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14649  009484  0EE3               	movlw	low _controlGate_stateMachine
 14650  009486  6E12               	movwf	sm_send_event@psm^0,c
 14651  009488  0E01               	movlw	high _controlGate_stateMachine
 14652  00948A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14653  00948C  0E00               	movlw	0
 14654  00948E  6E15               	movwf	(sm_send_event@event+1)^0,c
 14655  009490  0E0D               	movlw	13
 14656  009492  6E14               	movwf	sm_send_event@event^0,c
 14657  009494  EC8F  F043         	call	_sm_send_event	;wreg free
 14658  009498  0012               	return		;funcret
 14659  00949A                     __end_of_StopOrder:
 14660                           	callstack 0
 14661                           
 14662 ;; *************** function _GetSecurityStateInClosing *****************
 14663 ;; Defined at:
 14664 ;;		line 776 in file "inputs_MC50.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;		None
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  1    wreg      enum E10564
 14671 ;; Registers used:
 14672 ;;		wreg, status,2, status,0, cstack
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/0
 14675 ;;		On exit  : 3E/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14682 ;;Total ram usage:        0 bytes
 14683 ;; Hardware stack levels used: 1
 14684 ;; Hardware stack levels required when called: 5
 14685 ;; This function calls:
 14686 ;;		_SetSegmentValueIntermitent
 14687 ;; This function is called by:
 14688 ;;		_actionZone_Opening
 14689 ;;		_actionZone_Opened
 14690 ;;		_actionZone_Closing
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text38
 14695  00774C                     __ptext38:
 14696                           	callstack 0
 14697  00774C                     _GetSecurityStateInClosing:
 14698                           	callstack 23
 14699                           
 14700                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14701                           
 14702                           ;incstack = 0
 14703  00774C  0100               	movlb	0	; () banked
 14704  00774E  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14705  007750  A4D8               	btfss	status,2,c
 14706  007752  D01B               	goto	l20727
 14707                           
 14708                           ; BSR set to: 0
 14709  007754  0101               	movlb	1	; () banked
 14710  007756  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14711  007758  A4D8               	btfss	status,2,c
 14712  00775A  D017               	goto	l20727
 14713                           
 14714                           ; BSR set to: 1
 14715  00775C  0100               	movlb	0	; () banked
 14716  00775E  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14717  007760  A4D8               	btfss	status,2,c
 14718  007762  D013               	goto	l20727
 14719                           
 14720                           ; BSR set to: 0
 14721  007764  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14722  007766  A4D8               	btfss	status,2,c
 14723  007768  D010               	goto	l20727
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14727  00776A  0E00               	movlw	0
 14728  00776C  0101               	movlb	1	; () banked
 14729  00776E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14730  007770  0E04               	movlw	4
 14731  007772  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14735  007774  0E0A               	movlw	10
 14736  007776  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14737  007778  0E00               	movlw	0
 14738  00777A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14739  00777C  0E14               	movlw	20
 14740  00777E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14741  007780  0E12               	movlw	18
 14742  007782  EC2E  F048         	call	_SetSegmentValueIntermitent
 14743  007786                     l20721:
 14744                           
 14745                           ; BSR set to: 1
 14746                           ;inputs_MC50.c: 792:         return YES;
 14747  007786  0E01               	movlw	1
 14748  007788  0012               	return	
 14749  00778A                     l20727:
 14750  00778A  0100               	movlb	0	; () banked
 14751  00778C  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14752  00778E  A4D8               	btfss	status,2,c
 14753  007790  D013               	goto	l20741
 14754                           
 14755                           ; BSR set to: 0
 14756  007792  0101               	movlb	1	; () banked
 14757  007794  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14758  007796  A4D8               	btfss	status,2,c
 14759  007798  D00F               	goto	l20741
 14760                           
 14761                           ; BSR set to: 1
 14762                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14763  00779A  0E00               	movlw	0
 14764  00779C  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14765  00779E  0E04               	movlw	4
 14766  0077A0  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14767                           
 14768                           ; BSR set to: 1
 14769                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14770  0077A2  0E15               	movlw	21
 14771  0077A4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14772  0077A6  0E00               	movlw	0
 14773  0077A8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14774  0077AA  0E14               	movlw	20
 14775  0077AC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14776  0077AE  0E05               	movlw	5
 14777  0077B0  EC2E  F048         	call	_SetSegmentValueIntermitent
 14778                           
 14779                           ; BSR set to: 1
 14780                           ;inputs_MC50.c: 799:         return ST;
 14781  0077B4  0E02               	movlw	2
 14782  0077B6  0012               	return	
 14783  0077B8                     l20741:
 14784  0077B8  0100               	movlb	0	; () banked
 14785  0077BA  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14786  0077BC  A4D8               	btfss	status,2,c
 14787  0077BE  D017               	goto	l20757
 14788                           
 14789                           ; BSR set to: 0
 14790  0077C0  0101               	movlb	1	; () banked
 14791  0077C2  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14792  0077C4  A4D8               	btfss	status,2,c
 14793  0077C6  D013               	goto	l20757
 14794                           
 14795                           ; BSR set to: 1
 14796  0077C8  0100               	movlb	0	; () banked
 14797  0077CA  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14798  0077CC  A4D8               	btfss	status,2,c
 14799  0077CE  D00F               	goto	l20757
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14803  0077D0  0E00               	movlw	0
 14804  0077D2  0101               	movlb	1	; () banked
 14805  0077D4  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14806  0077D6  0E04               	movlw	4
 14807  0077D8  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14808                           
 14809                           ; BSR set to: 1
 14810                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14811  0077DA  0E0E               	movlw	14
 14812  0077DC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14813  0077DE  0E00               	movlw	0
 14814  0077E0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14815  0077E2  0E14               	movlw	20
 14816  0077E4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14817  0077E6  0E12               	movlw	18
 14818  0077E8  EC2E  F048         	call	_SetSegmentValueIntermitent
 14819  0077EC  D7CC               	goto	l20721
 14820  0077EE                     l20757:
 14821                           
 14822                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14823  0077EE  0E00               	movlw	0
 14824  0077F0  0012               	return		;funcret
 14825  0077F2                     __end_of_GetSecurityStateInClosing:
 14826                           	callstack 0
 14827                           
 14828 ;; *************** function _actionZone_Closed *****************
 14829 ;; Defined at:
 14830 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14831 ;; Parameters:    Size  Location     Type
 14832 ;;		None
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14835 ;;  securityOpen    1   31[COMRAM] enum E10397
 14836 ;; Return value:  Size  Location     Type
 14837 ;;                  1    wreg      void 
 14838 ;; Registers used:
 14839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14840 ;; Tracked objects:
 14841 ;;		On entry : 3F/0
 14842 ;;		On exit  : 0/0
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14849 ;;Total ram usage:        2 bytes
 14850 ;; Hardware stack levels used: 1
 14851 ;; Hardware stack levels required when called: 8
 14852 ;; This function calls:
 14853 ;;		_GetOpenOrder
 14854 ;;		_GetSecurityStateInOpening
 14855 ;;		_InitFullAutoTime
 14856 ;;		_InitWalkAutoTime
 14857 ;;		_OpenFullOrder
 14858 ;;		_OpenWalkOrder
 14859 ;;		_WaitPreFlash
 14860 ;;		_sm_send_event
 14861 ;; This function is called by:
 14862 ;;		_sm_execute_ControlGate
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text39
 14867  0076A2                     __ptext39:
 14868                           	callstack 0
 14869  0076A2                     _actionZone_Closed:
 14870                           	callstack 21
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14874                           
 14875                           ;incstack = 0
 14876  0076A2  0101               	movlb	1	; () banked
 14877  0076A4  05EE               	decf	_main_stateMachine& (0+255),w,b
 14878  0076A6  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 14879  0076A8  B4D8               	btfsc	status,2,c
 14880  0076AA  0012               	return	
 14881                           
 14882                           ; BSR set to: 1
 14883                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 14884  0076AC  EC5E  F02B         	call	_GetOpenOrder	;wreg free
 14885  0076B0  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 14886                           
 14887                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 14888  0076B2  ECF9  F03B         	call	_GetSecurityStateInOpening	;wreg free
 14889  0076B6  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 14890                           
 14891                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 14892  0076B8  0100               	movlb	0	; () banked
 14893  0076BA  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14894  0076BC  A4D8               	btfss	status,2,c
 14895  0076BE  D018               	goto	l21907
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 14899  0076C0  0E03               	movlw	3
 14900  0076C2  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14901  0076C4  A4D8               	btfss	status,2,c
 14902  0076C6  0012               	return	
 14903                           
 14904                           ; BSR set to: 0
 14905  0076C8  0101               	movlb	1	; () banked
 14906  0076CA  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 14907  0076CC  A4D8               	btfss	status,2,c
 14908  0076CE  0012               	return	
 14909                           
 14910                           ; BSR set to: 1
 14911  0076D0  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14912  0076D2  A4D8               	btfss	status,2,c
 14913  0076D4  0012               	return	
 14914                           
 14915                           ; BSR set to: 1
 14916                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 14917  0076D6  EC9D  F049         	call	_OpenFullOrder	;wreg free
 14918  0076DA                     l21905:
 14919                           
 14920                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 14921  0076DA  0EEE               	movlw	low _main_stateMachine
 14922  0076DC  6E12               	movwf	sm_send_event@psm^0,c
 14923  0076DE  0E01               	movlw	high _main_stateMachine
 14924  0076E0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14925  0076E2  0E00               	movlw	0
 14926  0076E4  6E15               	movwf	(sm_send_event@event+1)^0,c
 14927  0076E6  0E11               	movlw	17
 14928  0076E8  6E14               	movwf	sm_send_event@event^0,c
 14929  0076EA  EC8F  F043         	call	_sm_send_event	;wreg free
 14930  0076EE  0012               	return	
 14931  0076F0                     l21907:
 14932                           
 14933                           ; BSR set to: 0
 14934  0076F0  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 14935  0076F2  B4D8               	btfsc	status,2,c
 14936  0076F4  D004               	goto	u25380
 14937                           
 14938                           ; BSR set to: 0
 14939  0076F6  0E03               	movlw	3
 14940  0076F8  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14941  0076FA  A4D8               	btfss	status,2,c
 14942  0076FC  D017               	goto	l21927
 14943  0076FE                     u25380:
 14944                           
 14945                           ; BSR set to: 0
 14946  0076FE  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14947  007700  A4D8               	btfss	status,2,c
 14948  007702  D014               	goto	l21927
 14949                           
 14950                           ; BSR set to: 0
 14951  007704  0101               	movlb	1	; () banked
 14952  007706  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 14953  007708  A4D8               	btfss	status,2,c
 14954  00770A  D010               	goto	l21927
 14955                           
 14956                           ; BSR set to: 1
 14957                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 14958  00770C  0E02               	movlw	2
 14959  00770E  0100               	movlb	0	; () banked
 14960  007710  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 14961  007712  A4D8               	btfss	status,2,c
 14962  007714  D006               	goto	l21921
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 14966  007716  0E01               	movlw	1
 14967  007718  0101               	movlb	1	; () banked
 14968  00771A  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 14969                           
 14970                           ; BSR set to: 1
 14971                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 14972  00771C  EC7C  F041         	call	_WaitPreFlash	;wreg free
 14973                           
 14974                           ;sm_ControlGate_MC50.c: 356:             }
 14975  007720  0012               	return	
 14976  007722                     l21921:
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 14980  007722  EC9D  F049         	call	_OpenFullOrder	;wreg free
 14981                           
 14982                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 14983  007726  EC91  F04A         	call	_InitFullAutoTime	;wreg free
 14984  00772A  D7D7               	goto	l21905
 14985  00772C                     l21927:
 14986  00772C  0E02               	movlw	2
 14987  00772E  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14988  007730  A4D8               	btfss	status,2,c
 14989  007732  0012               	return	
 14990  007734  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14991  007736  A4D8               	btfss	status,2,c
 14992  007738  0012               	return	
 14993  00773A  0100               	movlb	0	; () banked
 14994  00773C  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 14995  00773E  B4D8               	btfsc	status,2,c
 14996  007740  0012               	return	
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15000  007742  EC24  F042         	call	_OpenWalkOrder	;wreg free
 15001                           
 15002                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15003  007746  EC16  F04B         	call	_InitWalkAutoTime	;wreg free
 15004  00774A  D7C7               	goto	l21905
 15005  00774C                     __end_of_actionZone_Closed:
 15006                           	callstack 0
 15007                           
 15008 ;; *************** function _WaitPreFlash *****************
 15009 ;; Defined at:
 15010 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15011 ;; Parameters:    Size  Location     Type
 15012 ;;		None
 15013 ;; Auto vars:     Size  Location     Type
 15014 ;;		None
 15015 ;; Return value:  Size  Location     Type
 15016 ;;                  1    wreg      void 
 15017 ;; Registers used:
 15018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15019 ;; Tracked objects:
 15020 ;;		On entry : 3F/1
 15021 ;;		On exit  : 3F/1
 15022 ;;		Unchanged: 0/0
 15023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15028 ;;Total ram usage:        0 bytes
 15029 ;; Hardware stack levels used: 1
 15030 ;; Hardware stack levels required when called: 7
 15031 ;; This function calls:
 15032 ;;		_InitFullAutoTime
 15033 ;;		_OpenFullOrder
 15034 ;;		_sm_send_event
 15035 ;; This function is called by:
 15036 ;;		_sm_execute_ControlGate
 15037 ;;		_actionZone_Closed
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041                           	psect	text40
 15042  0082F8                     __ptext40:
 15043                           	callstack 0
 15044  0082F8                     _WaitPreFlash:
 15045                           	callstack 21
 15046                           
 15047                           ; BSR set to: 1
 15048                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15049                           
 15050                           ;incstack = 0
 15051  0082F8  0E02               	movlw	2
 15052  0082FA  0100               	movlb	0	; () banked
 15053  0082FC  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15054  0082FE  A4D8               	btfss	status,2,c
 15055  008300  D014               	goto	l20967
 15056                           
 15057                           ; BSR set to: 0
 15058  008302  0101               	movlb	1	; () banked
 15059  008304  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15060  008306  A4D8               	btfss	status,2,c
 15061  008308  D010               	goto	l20967
 15062                           
 15063                           ; BSR set to: 1
 15064  00830A  BFE2               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15065  00830C  D005               	goto	u24310
 15066  00830E  51E2               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15067  008310  E10C               	bnz	l20967
 15068  008312  05E1               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15069  008314  B0D8               	btfsc	status,0,c
 15070  008316  D009               	goto	l20967
 15071  008318                     u24310:
 15072                           
 15073                           ; BSR set to: 1
 15074  008318  518D               	movf	_aux_i& (0+255),w,b
 15075  00831A  A4D8               	btfss	status,2,c
 15076  00831C  D006               	goto	l20967
 15077                           
 15078                           ; BSR set to: 1
 15079                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15080  00831E  0E00               	movlw	0
 15081  008320  6FE2               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15082  008322  0E3C               	movlw	60
 15083  008324  6FE1               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15084                           
 15085                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15086  008326  0E01               	movlw	1
 15087  008328  6F8D               	movwf	_aux_i& (0+255),b
 15088  00832A                     l20967:
 15089                           
 15090                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15091  00832A  0101               	movlb	1	; () banked
 15092  00832C  BFE2               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15093  00832E  D005               	goto	u24330
 15094  008330  51E2               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15095  008332  E119               	bnz	l2585
 15096  008334  05E1               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15097  008336  B0D8               	btfsc	status,0,c
 15098  008338  0012               	return	
 15099  00833A                     u24330:
 15100                           
 15101                           ; BSR set to: 1
 15102  00833A  058D               	decf	_aux_i& (0+255),w,b
 15103  00833C  A4D8               	btfss	status,2,c
 15104  00833E  0012               	return	
 15105                           
 15106                           ; BSR set to: 1
 15107                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15108  008340  0E00               	movlw	0
 15109  008342  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15110                           
 15111                           ; BSR set to: 1
 15112                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15113  008344  EC9D  F049         	call	_OpenFullOrder	;wreg free
 15114                           
 15115                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15116  008348  EC91  F04A         	call	_InitFullAutoTime	;wreg free
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15120  00834C  0EEE               	movlw	low _main_stateMachine
 15121  00834E  6E12               	movwf	sm_send_event@psm^0,c
 15122  008350  0E01               	movlw	high _main_stateMachine
 15123  008352  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15124  008354  0E00               	movlw	0
 15125  008356  6E15               	movwf	(sm_send_event@event+1)^0,c
 15126  008358  0E11               	movlw	17
 15127  00835A  6E14               	movwf	sm_send_event@event^0,c
 15128  00835C  EC8F  F043         	call	_sm_send_event	;wreg free
 15129                           
 15130                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15131  008360  0E00               	movlw	0
 15132  008362  0101               	movlb	1	; () banked
 15133  008364  6F8D               	movwf	_aux_i& (0+255),b
 15134  008366                     l2585:
 15135                           
 15136                           ; BSR set to: 1
 15137  008366  0012               	return		;funcret
 15138  008368                     __end_of_WaitPreFlash:
 15139                           	callstack 0
 15140                           
 15141 ;; *************** function _OpenFullOrder *****************
 15142 ;; Defined at:
 15143 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;		None
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;		None
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      void 
 15150 ;; Registers used:
 15151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15152 ;; Tracked objects:
 15153 ;;		On entry : 3E/1
 15154 ;;		On exit  : 3E/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;Total ram usage:        0 bytes
 15162 ;; Hardware stack levels used: 1
 15163 ;; Hardware stack levels required when called: 6
 15164 ;; This function calls:
 15165 ;;		_InitSoftStart
 15166 ;;		_sm_send_event
 15167 ;; This function is called by:
 15168 ;;		_WaitPreFlash
 15169 ;;		_actionZone_Closed
 15170 ;;		_actionZone_Opened
 15171 ;;		_actionZone_Closing
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text41
 15176  00933A                     __ptext41:
 15177                           	callstack 0
 15178  00933A                     _OpenFullOrder:
 15179                           	callstack 22
 15180                           
 15181                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15182                           
 15183                           ; BSR set to: 1
 15184                           ;incstack = 0
 15185  00933A  0E01               	movlw	1
 15186  00933C  0101               	movlb	1	; () banked
 15187  00933E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15188                           
 15189                           ; BSR set to: 1
 15190                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15191  009340  0EE3               	movlw	low _controlGate_stateMachine
 15192  009342  6E12               	movwf	sm_send_event@psm^0,c
 15193  009344  0E01               	movlw	high _controlGate_stateMachine
 15194  009346  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15195  009348  0E00               	movlw	0
 15196  00934A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15197  00934C  0E0C               	movlw	12
 15198  00934E  6E14               	movwf	sm_send_event@event^0,c
 15199  009350  EC8F  F043         	call	_sm_send_event	;wreg free
 15200                           
 15201                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15202  009354  0E01               	movlw	1
 15203  009356  0101               	movlb	1	; () banked
 15204  009358  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15205                           
 15206                           ; BSR set to: 1
 15207                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15208  00935A  ECBD  F043         	call	_InitSoftStart	;wreg free
 15209  00935E  0012               	return		;funcret
 15210  009360                     __end_of_OpenFullOrder:
 15211                           	callstack 0
 15212                           
 15213 ;; *************** function _InitFullAutoTime *****************
 15214 ;; Defined at:
 15215 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15216 ;; Parameters:    Size  Location     Type
 15217 ;;		None
 15218 ;; Auto vars:     Size  Location     Type
 15219 ;;		None
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  1    wreg      void 
 15222 ;; Registers used:
 15223 ;;		wreg, status,2, status,0, prodl, prodh
 15224 ;; Tracked objects:
 15225 ;;		On entry : 3E/0
 15226 ;;		On exit  : 3F/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15233 ;;Total ram usage:        0 bytes
 15234 ;; Hardware stack levels used: 1
 15235 ;; Hardware stack levels required when called: 4
 15236 ;; This function calls:
 15237 ;;		Nothing
 15238 ;; This function is called by:
 15239 ;;		_WaitPreFlash
 15240 ;;		_actionZone_Closed
 15241 ;;		_actionZone_Opening
 15242 ;;		_actionZone_Opened
 15243 ;;		_actionZone_Closing
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           
 15247                           	psect	text42
 15248  009522                     __ptext42:
 15249                           	callstack 0
 15250  009522                     _InitFullAutoTime:
 15251                           	callstack 24
 15252                           
 15253                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15254                           
 15255                           ;incstack = 0
 15256  009522  0100               	movlb	0	; () banked
 15257  009524  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15258  009526  A4D8               	btfss	status,2,c
 15259  009528  0012               	return	
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15263  00952A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15264  00952C  0D14               	mullw	20
 15265  00952E  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 15266  009532  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15270  009536  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15271                           
 15272                           ; BSR set to: 0
 15273  00953A  0012               	return		;funcret
 15274  00953C                     __end_of_InitFullAutoTime:
 15275                           	callstack 0
 15276                           
 15277 ;; *************** function _OpenWalkOrder *****************
 15278 ;; Defined at:
 15279 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15280 ;; Parameters:    Size  Location     Type
 15281 ;;		None
 15282 ;; Auto vars:     Size  Location     Type
 15283 ;;  diffTime        2   25[COMRAM] int 
 15284 ;; Return value:  Size  Location     Type
 15285 ;;                  1    wreg      void 
 15286 ;; Registers used:
 15287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15288 ;; Tracked objects:
 15289 ;;		On entry : 3E/1
 15290 ;;		On exit  : 3E/0
 15291 ;;		Unchanged: 0/0
 15292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15297 ;;Total ram usage:        4 bytes
 15298 ;; Hardware stack levels used: 1
 15299 ;; Hardware stack levels required when called: 6
 15300 ;; This function calls:
 15301 ;;		_InitSoftStart
 15302 ;;		_sm_send_event
 15303 ;; This function is called by:
 15304 ;;		_actionZone_Closed
 15305 ;;		_actionZone_Opened
 15306 ;;		_actionZone_Closing
 15307 ;; This function uses a non-reentrant model
 15308 ;;
 15309                           
 15310                           	psect	text43
 15311  008448                     __ptext43:
 15312                           	callstack 0
 15313  008448                     _OpenWalkOrder:
 15314                           	callstack 22
 15315                           
 15316                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15317                           
 15318                           ; BSR set to: 0
 15319                           ;incstack = 0
 15320  008448  0100               	movlb	0	; () banked
 15321  00844A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15322  00844C  0D14               	mullw	20
 15323  00844E  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15324  008452  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15325  008456  0101               	movlb	1	; () banked
 15326  008458  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15327  00845A  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15328  00845C  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15329  00845E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15330  008460  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15331  008462  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15332                           
 15333                           ; BSR set to: 1
 15334                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15335  008464  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15336  008466  D022               	goto	l21005
 15337  008468  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15338  00846A  E103               	bnz	u24350
 15339  00846C  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15340  00846E  A0D8               	btfss	status,0,c
 15341  008470  D01D               	goto	l21005
 15342  008472                     u24350:
 15343                           
 15344                           ; BSR set to: 1
 15345                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15346  008472  0EE3               	movlw	low _controlGate_stateMachine
 15347  008474  6E12               	movwf	sm_send_event@psm^0,c
 15348  008476  0E01               	movlw	high _controlGate_stateMachine
 15349  008478  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15350  00847A  0E00               	movlw	0
 15351  00847C  6E15               	movwf	(sm_send_event@event+1)^0,c
 15352  00847E  0E0C               	movlw	12
 15353  008480  6E14               	movwf	sm_send_event@event^0,c
 15354  008482  EC8F  F043         	call	_sm_send_event	;wreg free
 15355                           
 15356                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15357  008486  0101               	movlb	1	; () banked
 15358  008488  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15359  00848A  A4D8               	btfss	status,2,c
 15360  00848C  D005               	goto	l20999
 15361                           
 15362                           ; BSR set to: 1
 15363                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15364  00848E  C01A  F1AB         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15365  008492  C01B  F1AC         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15366                           
 15367                           ;sm_ControlGate_MC50.c: 79:         }
 15368  008496  D006               	goto	l21001
 15369  008498                     l20999:
 15370                           
 15371                           ; BSR set to: 1
 15372                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15373  008498  0E14               	movlw	20
 15374  00849A  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15375  00849C  6FAB               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15376  00849E  0E00               	movlw	0
 15377  0084A0  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15378  0084A2  6FAC               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15379  0084A4                     l21001:
 15380                           
 15381                           ; BSR set to: 1
 15382                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15383  0084A4  0E02               	movlw	2
 15384  0084A6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15385                           
 15386                           ; BSR set to: 1
 15387                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15388  0084A8  0E01               	movlw	1
 15389  0084AA  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15390  0084AC                     l21005:
 15391                           
 15392                           ; BSR set to: 1
 15393                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15394  0084AC  0E02               	movlw	2
 15395  0084AE  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15396                           
 15397                           ; BSR set to: 1
 15398                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15399  0084B0  ECBD  F043         	call	_InitSoftStart	;wreg free
 15400  0084B4  0012               	return		;funcret
 15401  0084B6                     __end_of_OpenWalkOrder:
 15402                           	callstack 0
 15403                           
 15404 ;; *************** function _sm_send_event *****************
 15405 ;; Defined at:
 15406 ;;		line 34 in file "sm_common_MC50.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;  psm             2   17[COMRAM] PTR struct .
 15409 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15410 ;;  event           2   19[COMRAM] int 
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15425 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15426 ;;Total ram usage:        6 bytes
 15427 ;; Hardware stack levels used: 1
 15428 ;; Hardware stack levels required when called: 5
 15429 ;; This function calls:
 15430 ;;		_sm_get_current_state
 15431 ;; This function is called by:
 15432 ;;		_OpenFullOrder
 15433 ;;		_WaitPreFlash
 15434 ;;		_CloseOrder
 15435 ;;		_OpenWalkOrder
 15436 ;;		_StopOrder
 15437 ;;		_sm_execute_ControlGate
 15438 ;;		_actionZone_Closed
 15439 ;;		_actionZone_Opening
 15440 ;;		_actionZone_Closing
 15441 ;;		_sm_execute_ControlLearning
 15442 ;;		_sm_execute_main
 15443 ;;		_sm_execute_menuConfiguration
 15444 ;;		_setValueToEdit
 15445 ;;		_controlSelectRemote
 15446 ;;		_controlSaveRemote
 15447 ;; This function uses a non-reentrant model
 15448 ;;
 15449                           
 15450                           	psect	text44
 15451  00871E                     __ptext44:
 15452                           	callstack 0
 15453  00871E                     _sm_send_event:
 15454                           	callstack 24
 15455                           
 15456                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15457                           
 15458                           ;incstack = 0
 15459  00871E  EE20 F007          	lfsr	2,7
 15460  008722  5012               	movf	sm_send_event@psm^0,w,c
 15461  008724  26D9               	addwf	fsr2l,f,c
 15462  008726  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15463  008728  22DA               	addwfc	fsr2h,f,c
 15464  00872A  50DE               	movf	postinc2,w,c
 15465  00872C  10DE               	iorwf	postinc2,w,c
 15466  00872E  B4D8               	btfsc	status,2,c
 15467  008730  D019               	goto	u23000
 15468  008732  EE20 F007          	lfsr	2,7
 15469  008736  5012               	movf	sm_send_event@psm^0,w,c
 15470  008738  26D9               	addwf	fsr2l,f,c
 15471  00873A  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15472  00873C  22DA               	addwfc	fsr2h,f,c
 15473  00873E  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15474  008742  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15475  008746  EC34  F04B         	call	_sm_get_current_state	;wreg free
 15476  00874A  EE20 F009          	lfsr	2,9
 15477  00874E  5012               	movf	sm_send_event@psm^0,w,c
 15478  008750  26D9               	addwf	fsr2l,f,c
 15479  008752  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15480  008754  22DA               	addwfc	fsr2h,f,c
 15481  008756  50DE               	movf	postinc2,w,c
 15482  008758  1810               	xorwf	?_sm_get_current_state^0,w,c
 15483  00875A  E10E               	bnz	l3512
 15484  00875C  50DE               	movf	postinc2,w,c
 15485  00875E  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15486  008760  A4D8               	btfss	status,2,c
 15487  008762  0012               	return	
 15488  008764                     u23000:
 15489                           
 15490                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15491  008764  EE20 F004          	lfsr	2,4
 15492  008768  5012               	movf	sm_send_event@psm^0,w,c
 15493  00876A  26D9               	addwf	fsr2l,f,c
 15494  00876C  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15495  00876E  22DA               	addwfc	fsr2h,f,c
 15496  008770  C014  FFDE         	movff	sm_send_event@event,postinc2
 15497  008774  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15498  008778                     l3512:
 15499  008778  0012               	return		;funcret
 15500  00877A                     __end_of_sm_send_event:
 15501                           	callstack 0
 15502                           
 15503 ;; *************** function _sm_get_current_state *****************
 15504 ;; Defined at:
 15505 ;;		line 30 in file "sm_common_MC50.c"
 15506 ;; Parameters:    Size  Location     Type
 15507 ;;  psm             2   15[COMRAM] PTR struct .
 15508 ;;		 -> NULL(0), 
 15509 ;; Auto vars:     Size  Location     Type
 15510 ;;		None
 15511 ;; Return value:  Size  Location     Type
 15512 ;;                  2   15[COMRAM] int 
 15513 ;; Registers used:
 15514 ;;		fsr2l, fsr2h
 15515 ;; Tracked objects:
 15516 ;;		On entry : 0/0
 15517 ;;		On exit  : 0/0
 15518 ;;		Unchanged: 0/0
 15519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15524 ;;Total ram usage:        2 bytes
 15525 ;; Hardware stack levels used: 1
 15526 ;; Hardware stack levels required when called: 4
 15527 ;; This function calls:
 15528 ;;		Nothing
 15529 ;; This function is called by:
 15530 ;;		_sm_send_event
 15531 ;; This function uses a non-reentrant model
 15532 ;;
 15533                           
 15534                           	psect	text45
 15535  009668                     __ptext45:
 15536                           	callstack 0
 15537  009668                     _sm_get_current_state:
 15538                           	callstack 24
 15539                           
 15540                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15541                           
 15542                           ;incstack = 0
 15543  009668  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15544  00966C  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15545  009670  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15546  009674  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15547  009678  0012               	return		;funcret
 15548  00967A                     __end_of_sm_get_current_state:
 15549                           	callstack 0
 15550                           
 15551 ;; *************** function _InitSoftStart *****************
 15552 ;; Defined at:
 15553 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;		None
 15556 ;; Auto vars:     Size  Location     Type
 15557 ;;		None
 15558 ;; Return value:  Size  Location     Type
 15559 ;;                  1    wreg      void 
 15560 ;; Registers used:
 15561 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15562 ;; Tracked objects:
 15563 ;;		On entry : 3F/1
 15564 ;;		On exit  : 3E/0
 15565 ;;		Unchanged: 0/0
 15566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15571 ;;Total ram usage:        1 bytes
 15572 ;; Hardware stack levels used: 1
 15573 ;; Hardware stack levels required when called: 5
 15574 ;; This function calls:
 15575 ;;		_GetMotorPower
 15576 ;; This function is called by:
 15577 ;;		_OpenFullOrder
 15578 ;;		_CloseOrder
 15579 ;;		_OpenWalkOrder
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           	psect	text46
 15584  00877A                     __ptext46:
 15585                           	callstack 0
 15586  00877A                     _InitSoftStart:
 15587                           	callstack 22
 15588                           
 15589                           ; BSR set to: 1
 15590                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15591                           
 15592                           ;incstack = 0
 15593  00877A  0100               	movlb	0	; () banked
 15594  00877C  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15595  00877E  B4D8               	btfsc	status,2,c
 15596  008780  0012               	return	
 15597                           
 15598                           ; BSR set to: 0
 15599  008782  0101               	movlb	1	; () banked
 15600  008784  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15601  008786  A4D8               	btfss	status,2,c
 15602  008788  0012               	return	
 15603                           
 15604                           ; BSR set to: 1
 15605                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15606  00878A  0E00               	movlw	0
 15607  00878C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15608  00878E  0E00               	movlw	0
 15609  008790  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15610                           
 15611                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15612  008792  0E00               	movlw	0
 15613  008794  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15614  008796  0E00               	movlw	0
 15615  008798  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15616                           
 15617                           ; BSR set to: 1
 15618                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15619  00879A  ECD6  F039         	call	_GetMotorPower	;wreg free
 15620  00879E  6E14               	movwf	??_InitSoftStart^0,c
 15621  0087A0  5014               	movf	??_InitSoftStart^0,w,c
 15622  0087A2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15623  0087A4  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15624                           
 15625                           ; BSR set to: 1
 15626                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15627  0087A6  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15628  0087A8  D00A               	goto	l20113
 15629  0087AA  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15630  0087AC  E104               	bnz	u23030
 15631  0087AE  0E52               	movlw	82
 15632  0087B0  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15633  0087B2  A0D8               	btfss	status,0,c
 15634  0087B4  D004               	goto	l20113
 15635  0087B6                     u23030:
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15639  0087B6  0E00               	movlw	0
 15640  0087B8  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15641  0087BA  0E51               	movlw	81
 15642  0087BC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15643  0087BE                     l20113:
 15644                           
 15645                           ; BSR set to: 1
 15646                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15647  0087BE  0E01               	movlw	1
 15648  0087C0  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15649  0087C2  6FB1               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15650  0087C4  0E00               	movlw	0
 15651  0087C6  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15652  0087C8  6FB2               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15653                           
 15654                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15655  0087CA  0100               	movlb	0	; () banked
 15656  0087CC  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15657  0087CE  080A               	sublw	10
 15658  0087D0  0101               	movlb	1	; () banked
 15659  0087D2  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15660  0087D4  0012               	return		;funcret
 15661  0087D6                     __end_of_InitSoftStart:
 15662                           	callstack 0
 15663                           
 15664 ;; *************** function _InitWalkAutoTime *****************
 15665 ;; Defined at:
 15666 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;		None
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;		None
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  1    wreg      void 
 15673 ;; Registers used:
 15674 ;;		wreg, status,2, status,0, prodl, prodh
 15675 ;; Tracked objects:
 15676 ;;		On entry : 0/1
 15677 ;;		On exit  : 3F/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;Total ram usage:        0 bytes
 15685 ;; Hardware stack levels used: 1
 15686 ;; Hardware stack levels required when called: 4
 15687 ;; This function calls:
 15688 ;;		Nothing
 15689 ;; This function is called by:
 15690 ;;		_actionZone_Closed
 15691 ;;		_actionZone_Opening
 15692 ;;		_actionZone_Opened
 15693 ;;		_actionZone_Closing
 15694 ;; This function uses a non-reentrant model
 15695 ;;
 15696                           
 15697                           	psect	text47
 15698  00962C                     __ptext47:
 15699                           	callstack 0
 15700  00962C                     _InitWalkAutoTime:
 15701                           	callstack 24
 15702                           
 15703                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15704                           
 15705                           ;incstack = 0
 15706  00962C  0100               	movlb	0	; () banked
 15707  00962E  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15708  009630  0D14               	mullw	20
 15709  009632  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 15710  009636  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 15711                           
 15712                           ; BSR set to: 0
 15713                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15714  00963A  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15715                           
 15716                           ; BSR set to: 0
 15717  00963E  0012               	return		;funcret
 15718  009640                     __end_of_InitWalkAutoTime:
 15719                           	callstack 0
 15720                           
 15721 ;; *************** function _GetSecurityStateInOpening *****************
 15722 ;; Defined at:
 15723 ;;		line 738 in file "inputs_MC50.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;		None
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;		None
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  1    wreg      enum E10564
 15730 ;; Registers used:
 15731 ;;		wreg, status,2, status,0, cstack
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 3E/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15741 ;;Total ram usage:        0 bytes
 15742 ;; Hardware stack levels used: 1
 15743 ;; Hardware stack levels required when called: 5
 15744 ;; This function calls:
 15745 ;;		_SetSegmentValueIntermitent
 15746 ;; This function is called by:
 15747 ;;		_actionZone_Closed
 15748 ;;		_actionZone_Opening
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text48
 15753  0077F2                     __ptext48:
 15754                           	callstack 0
 15755  0077F2                     _GetSecurityStateInOpening:
 15756                           	callstack 23
 15757                           
 15758                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;incstack = 0
 15762  0077F2  0100               	movlb	0	; () banked
 15763  0077F4  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15764  0077F6  A4D8               	btfss	status,2,c
 15765  0077F8  D01B               	goto	l20675
 15766                           
 15767                           ; BSR set to: 0
 15768  0077FA  0101               	movlb	1	; () banked
 15769  0077FC  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15770  0077FE  A4D8               	btfss	status,2,c
 15771  007800  D017               	goto	l20675
 15772                           
 15773                           ; BSR set to: 1
 15774  007802  0100               	movlb	0	; () banked
 15775  007804  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15776  007806  A4D8               	btfss	status,2,c
 15777  007808  D013               	goto	l20675
 15778                           
 15779                           ; BSR set to: 0
 15780  00780A  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15781  00780C  A4D8               	btfss	status,2,c
 15782  00780E  D010               	goto	l20675
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15786  007810  0E00               	movlw	0
 15787  007812  0101               	movlb	1	; () banked
 15788  007814  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15789  007816  0E04               	movlw	4
 15790  007818  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15791                           
 15792                           ; BSR set to: 1
 15793                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15794  00781A  0E0A               	movlw	10
 15795  00781C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15796  00781E  0E00               	movlw	0
 15797  007820  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15798  007822  0E14               	movlw	20
 15799  007824  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15800  007826  0E12               	movlw	18
 15801  007828  EC2E  F048         	call	_SetSegmentValueIntermitent
 15802  00782C                     l20669:
 15803                           
 15804                           ; BSR set to: 1
 15805                           ;inputs_MC50.c: 752:         return YES;
 15806  00782C  0E01               	movlw	1
 15807  00782E  0012               	return	
 15808  007830                     l20675:
 15809  007830  0100               	movlb	0	; () banked
 15810  007832  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15811  007834  A4D8               	btfss	status,2,c
 15812  007836  D013               	goto	l20689
 15813                           
 15814                           ; BSR set to: 0
 15815  007838  0101               	movlb	1	; () banked
 15816  00783A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15817  00783C  A4D8               	btfss	status,2,c
 15818  00783E  D00F               	goto	l20689
 15819                           
 15820                           ; BSR set to: 1
 15821                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15822  007840  0E00               	movlw	0
 15823  007842  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15824  007844  0E04               	movlw	4
 15825  007846  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15826                           
 15827                           ; BSR set to: 1
 15828                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15829  007848  0E15               	movlw	21
 15830  00784A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15831  00784C  0E00               	movlw	0
 15832  00784E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15833  007850  0E14               	movlw	20
 15834  007852  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15835  007854  0E05               	movlw	5
 15836  007856  EC2E  F048         	call	_SetSegmentValueIntermitent
 15837                           
 15838                           ; BSR set to: 1
 15839                           ;inputs_MC50.c: 760:         return ST;
 15840  00785A  0E02               	movlw	2
 15841  00785C  0012               	return	
 15842  00785E                     l20689:
 15843  00785E  0100               	movlb	0	; () banked
 15844  007860  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15845  007862  A4D8               	btfss	status,2,c
 15846  007864  D017               	goto	l20705
 15847                           
 15848                           ; BSR set to: 0
 15849  007866  0101               	movlb	1	; () banked
 15850  007868  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15851  00786A  A4D8               	btfss	status,2,c
 15852  00786C  D013               	goto	l20705
 15853                           
 15854                           ; BSR set to: 1
 15855  00786E  0100               	movlb	0	; () banked
 15856  007870  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15857  007872  A4D8               	btfss	status,2,c
 15858  007874  D00F               	goto	l20705
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15862  007876  0E00               	movlw	0
 15863  007878  0101               	movlb	1	; () banked
 15864  00787A  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15865  00787C  0E04               	movlw	4
 15866  00787E  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15867                           
 15868                           ; BSR set to: 1
 15869                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15870  007880  0E0E               	movlw	14
 15871  007882  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15872  007884  0E00               	movlw	0
 15873  007886  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15874  007888  0E14               	movlw	20
 15875  00788A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15876  00788C  0E12               	movlw	18
 15877  00788E  EC2E  F048         	call	_SetSegmentValueIntermitent
 15878  007892  D7CC               	goto	l20669
 15879  007894                     l20705:
 15880                           
 15881                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 15882  007894  0E00               	movlw	0
 15883  007896  0012               	return		;funcret
 15884  007898                     __end_of_GetSecurityStateInOpening:
 15885                           	callstack 0
 15886                           
 15887 ;; *************** function _SetSegmentValueIntermitent *****************
 15888 ;; Defined at:
 15889 ;;		line 201 in file "outputs_MC50.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  d1              1    wreg     unsigned char 
 15892 ;;  d2              1   15[COMRAM] unsigned char 
 15893 ;;  time            2   16[COMRAM] int 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;  d1              1   18[COMRAM] unsigned char 
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  1    wreg      void 
 15898 ;; Registers used:
 15899 ;;		wreg, status,2, status,0
 15900 ;; Tracked objects:
 15901 ;;		On entry : 3E/0
 15902 ;;		On exit  : 3F/1
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15905 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15909 ;;Total ram usage:        4 bytes
 15910 ;; Hardware stack levels used: 1
 15911 ;; Hardware stack levels required when called: 4
 15912 ;; This function calls:
 15913 ;;		Nothing
 15914 ;; This function is called by:
 15915 ;;		_GetSecurityStateInOpening
 15916 ;;		_GetSecurityStateInClosing
 15917 ;;		_sm_execute_ControlGate
 15918 ;;		_actionZone_Opening
 15919 ;;		_actionZone_Closing
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text49
 15924  00905C                     __ptext49:
 15925                           	callstack 0
 15926  00905C                     _SetSegmentValueIntermitent:
 15927                           	callstack 24
 15928                           
 15929                           ;incstack = 0
 15930                           ;SetSegmentValueIntermitent@d1 stored from wreg
 15931  00905C  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 15932                           
 15933                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 15934  00905E  0101               	movlb	1	; () banked
 15935  009060  05EE               	decf	_main_stateMachine& (0+255),w,b
 15936  009062  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15937  009064  B4D8               	btfsc	status,2,c
 15938  009066  0012               	return	
 15939                           
 15940                           ; BSR set to: 1
 15941  009068  51A9               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 15942  00906A  11AA               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 15943  00906C  A4D8               	btfss	status,2,c
 15944  00906E  0012               	return	
 15945                           
 15946                           ; BSR set to: 1
 15947  009070  0E14               	movlw	20
 15948  009072  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 15949  009074  0012               	return	
 15950                           
 15951                           ; BSR set to: 1
 15952                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 15953  009076  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 15954                           
 15955                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 15956  00907A  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 15957                           
 15958                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 15959  00907E  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 15960  009082  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 15961                           
 15962                           ; BSR set to: 1
 15963  009086  0012               	return		;funcret
 15964  009088                     __end_of_SetSegmentValueIntermitent:
 15965                           	callstack 0
 15966                           
 15967 ;; *************** function _GetOpenOrder *****************
 15968 ;; Defined at:
 15969 ;;		line 330 in file "inputs_MC50.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;		None
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;		None
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      enum E10539
 15976 ;; Registers used:
 15977 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15978 ;; Tracked objects:
 15979 ;;		On entry : 3E/1
 15980 ;;		On exit  : 0/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15987 ;;Total ram usage:        0 bytes
 15988 ;; Hardware stack levels used: 1
 15989 ;; Hardware stack levels required when called: 5
 15990 ;; This function calls:
 15991 ;;		_SetSegmentValueIntermitentMain
 15992 ;;		___lbdiv
 15993 ;; This function is called by:
 15994 ;;		_sm_execute_ControlGate
 15995 ;;		_actionZone_Closed
 15996 ;;		_actionZone_Opening
 15997 ;;		_actionZone_Opened
 15998 ;;		_actionZone_Closing
 15999 ;;		_sm_execute_ControlLearning
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text50
 16004  0056BC                     __ptext50:
 16005                           	callstack 0
 16006  0056BC                     _GetOpenOrder:
 16007                           	callstack 23
 16008                           
 16009                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16010                           
 16011                           ; BSR set to: 1
 16012                           ;incstack = 0
 16013  0056BC  0101               	movlb	1	; () banked
 16014  0056BE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16015  0056C0  A4D8               	btfss	status,2,c
 16016  0056C2  D0C0               	goto	l20645
 16017                           
 16018                           ; BSR set to: 1
 16019                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16020  0056C4  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16021  0056C6  D019               	goto	l20537
 16022  0056C8  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16023  0056CA  E103               	bnz	u23560
 16024  0056CC  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16025  0056CE  A0D8               	btfss	status,0,c
 16026  0056D0  D014               	goto	l20537
 16027  0056D2                     u23560:
 16028                           
 16029                           ; BSR set to: 1
 16030                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16031  0056D2  0E01               	movlw	1
 16032  0056D4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16033  0056D6  0E00               	movlw	0
 16034  0056D8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16035  0056DA  0E14               	movlw	20
 16036  0056DC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16037  0056DE  0E12               	movlw	18
 16038  0056E0  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16039                           
 16040                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16041  0056E4  0E00               	movlw	0
 16042  0056E6  0101               	movlb	1	; () banked
 16043  0056E8  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16044  0056EA  0E0A               	movlw	10
 16045  0056EC  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16046                           
 16047                           ; BSR set to: 1
 16048                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16049  0056EE  0E01               	movlw	1
 16050  0056F0  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16051                           
 16052                           ; BSR set to: 1
 16053                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16054  0056F2  0E01               	movlw	1
 16055  0056F4  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16056  0056F6                     l20531:
 16057                           
 16058                           ;inputs_MC50.c: 341:             return NoCMD;
 16059  0056F6  0E00               	movlw	0
 16060  0056F8  0012               	return	
 16061  0056FA                     l20537:
 16062                           
 16063                           ; BSR set to: 1
 16064  0056FA  0100               	movlb	0	; () banked
 16065  0056FC  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16066  0056FE  B4D8               	btfsc	status,2,c
 16067  005700  D02F               	goto	l20571
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16071  005702  0E35               	movlw	53
 16072  005704  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16073  005706  A4D8               	btfss	status,2,c
 16074  005708  D017               	goto	l20555
 16075                           
 16076                           ; BSR set to: 0
 16077                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16078  00570A  0E00               	movlw	0
 16079  00570C  0101               	movlb	1	; () banked
 16080  00570E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16081  005710  0E0A               	movlw	10
 16082  005712  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16083                           
 16084                           ; BSR set to: 1
 16085                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16086  005714  0E00               	movlw	0
 16087  005716  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16088  005718  0E00               	movlw	0
 16089  00571A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16090  00571C  0E04               	movlw	4
 16091  00571E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16092  005720  0E12               	movlw	18
 16093  005722  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16094                           
 16095                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16096  005726  0E02               	movlw	2
 16097  005728  0100               	movlb	0	; () banked
 16098  00572A  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16099  00572C  A4D8               	btfss	status,2,c
 16100  00572E  D002               	goto	l20549
 16101  005730                     u23590:
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16105  005730  0E01               	movlw	1
 16106  005732  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16107  005734                     l20549:
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16111  005734  0E03               	movlw	3
 16112  005736  0012               	return	
 16113  005738                     l20555:
 16114                           
 16115                           ; BSR set to: 0
 16116  005738  0E33               	movlw	51
 16117  00573A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16118  00573C  A4D8               	btfss	status,2,c
 16119  00573E  D7DB               	goto	l20531
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16123  005740  0E00               	movlw	0
 16124  005742  0101               	movlb	1	; () banked
 16125  005744  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16126  005746  0E0A               	movlw	10
 16127  005748  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16128                           
 16129                           ; BSR set to: 1
 16130                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16131  00574A  0E05               	movlw	5
 16132  00574C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16133  00574E  0E00               	movlw	0
 16134  005750  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16135  005752  0E04               	movlw	4
 16136  005754  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16137  005756  0E12               	movlw	18
 16138  005758  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16139  00575C                     l20561:
 16140                           
 16141                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16142  00575C  0E04               	movlw	4
 16143  00575E  0012               	return	
 16144  005760                     l20571:
 16145                           
 16146                           ; BSR set to: 0
 16147  005760  0E35               	movlw	53
 16148  005762  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16149  005764  A4D8               	btfss	status,2,c
 16150  005766  D016               	goto	l20593
 16151                           
 16152                           ; BSR set to: 0
 16153                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16154  005768  0E00               	movlw	0
 16155  00576A  0101               	movlb	1	; () banked
 16156  00576C  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16157  00576E  0E28               	movlw	40
 16158  005770  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16159                           
 16160                           ; BSR set to: 1
 16161                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16162  005772  0E00               	movlw	0
 16163  005774  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16164  005776  0E00               	movlw	0
 16165  005778  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16166  00577A  0E04               	movlw	4
 16167  00577C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16168  00577E  0E12               	movlw	18
 16169  005780  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16170                           
 16171                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16172  005784  0100               	movlb	0	; () banked
 16173  005786  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16174  005788  B4D8               	btfsc	status,2,c
 16175  00578A  D7D2               	goto	u23590
 16176  00578C                     l20587:
 16177                           
 16178                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16179  00578C  0E01               	movlw	1
 16180  00578E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16181                           
 16182                           ;inputs_MC50.c: 382:                 return TypeFull;
 16183  005790  0E01               	movlw	1
 16184  005792  0012               	return	
 16185  005794                     l20593:
 16186                           
 16187                           ; BSR set to: 0
 16188  005794  0E33               	movlw	51
 16189  005796  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16190  005798  A4D8               	btfss	status,2,c
 16191  00579A  D019               	goto	l20615
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16195  00579C  0E00               	movlw	0
 16196  00579E  0101               	movlb	1	; () banked
 16197  0057A0  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16198  0057A2  0E28               	movlw	40
 16199  0057A4  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16200                           
 16201                           ; BSR set to: 1
 16202                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16203  0057A6  0E05               	movlw	5
 16204  0057A8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16205  0057AA  0E00               	movlw	0
 16206  0057AC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16207  0057AE  0E04               	movlw	4
 16208  0057B0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16209  0057B2  0E12               	movlw	18
 16210  0057B4  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16211                           
 16212                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16213  0057B8  0100               	movlb	0	; () banked
 16214  0057BA  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16215  0057BC  A4D8               	btfss	status,2,c
 16216  0057BE  D003               	goto	l20609
 16217                           
 16218                           ; BSR set to: 0
 16219                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16220  0057C0  0E01               	movlw	1
 16221  0057C2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16222  0057C4  D7CB               	goto	l20561
 16223  0057C6                     l20609:
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16227  0057C6  0E01               	movlw	1
 16228  0057C8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16232  0057CA  0E02               	movlw	2
 16233  0057CC  0012               	return	
 16234  0057CE                     l20615:
 16235                           
 16236                           ; BSR set to: 0
 16237  0057CE  0E36               	movlw	54
 16238  0057D0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16239  0057D2  A4D8               	btfss	status,2,c
 16240  0057D4  D00F               	goto	l20629
 16241                           
 16242                           ; BSR set to: 0
 16243                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16244  0057D6  0E00               	movlw	0
 16245  0057D8  0101               	movlb	1	; () banked
 16246  0057DA  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16247  0057DC  0E28               	movlw	40
 16248  0057DE  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16249                           
 16250                           ; BSR set to: 1
 16251                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16252  0057E0  0E13               	movlw	19
 16253  0057E2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16254  0057E4  0E00               	movlw	0
 16255  0057E6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16256  0057E8  0E04               	movlw	4
 16257  0057EA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16258  0057EC  0E10               	movlw	16
 16259  0057EE  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16260  0057F2  D7CC               	goto	l20587
 16261  0057F4                     l20629:
 16262                           
 16263                           ; BSR set to: 0
 16264                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16265  0057F4  503B               	movf	_rfCMD^0,w,c	;volatile
 16266  0057F6  B4D8               	btfsc	status,2,c
 16267  0057F8  D023               	goto	l20641
 16268                           
 16269                           ; BSR set to: 0
 16270  0057FA  0E06               	movlw	6
 16271  0057FC  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16272  0057FE  B4D8               	btfsc	status,2,c
 16273  005800  D01F               	goto	l20641
 16274                           
 16275                           ; BSR set to: 0
 16276  005802  0E05               	movlw	5
 16277  005804  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16278  005806  B4D8               	btfsc	status,2,c
 16279  005808  D01B               	goto	l20641
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16283  00580A  0E0A               	movlw	10
 16284  00580C  6E10               	movwf	___lbdiv@divisor^0,c
 16285  00580E  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16286  005810  EC7A  F047         	call	___lbdiv
 16287  005814  0DF6               	mullw	246
 16288  005816  50F3               	movf	243,w,c
 16289  005818  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16290  00581A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16291  00581C  0E00               	movlw	0
 16292  00581E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16293  005820  0E04               	movlw	4
 16294  005822  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16295  005824  0E0A               	movlw	10
 16296  005826  6E10               	movwf	___lbdiv@divisor^0,c
 16297  005828  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16298  00582A  EC7A  F047         	call	___lbdiv
 16299  00582E  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16300                           
 16301                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16302  005832  0E00               	movlw	0
 16303  005834  0101               	movlb	1	; () banked
 16304  005836  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16305  005838  0E28               	movlw	40
 16306  00583A  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16307                           
 16308                           ; BSR set to: 1
 16309                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16310  00583C  0E01               	movlw	1
 16311  00583E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16312  005840                     l20641:
 16313                           
 16314                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16315  005840  503B               	movf	_rfCMD^0,w,c	;volatile
 16316  005842  0012               	return	
 16317  005844                     l20645:
 16318                           
 16319                           ; BSR set to: 1
 16320                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16321  005844  503B               	movf	_rfCMD^0,w,c	;volatile
 16322  005846  B4D8               	btfsc	status,2,c
 16323  005848  D01B               	goto	l20653
 16324                           
 16325                           ; BSR set to: 1
 16326                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16327  00584A  0E0A               	movlw	10
 16328  00584C  6E10               	movwf	___lbdiv@divisor^0,c
 16329  00584E  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16330  005850  EC7A  F047         	call	___lbdiv
 16331  005854  0DF6               	mullw	246
 16332  005856  50F3               	movf	243,w,c
 16333  005858  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16334  00585A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16335  00585C  0E00               	movlw	0
 16336  00585E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16337  005860  0E04               	movlw	4
 16338  005862  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16339  005864  0E0A               	movlw	10
 16340  005866  6E10               	movwf	___lbdiv@divisor^0,c
 16341  005868  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16342  00586A  EC7A  F047         	call	___lbdiv
 16343  00586E  EC20  F04B         	call	_SetSegmentValueIntermitentMain
 16344                           
 16345                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16346  005872  0E00               	movlw	0
 16347  005874  0101               	movlb	1	; () banked
 16348  005876  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16349  005878  0E14               	movlw	20
 16350  00587A  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16351                           
 16352                           ; BSR set to: 1
 16353                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16354  00587C  0E01               	movlw	1
 16355  00587E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16356  005880                     l20653:
 16357                           
 16358                           ; BSR set to: 1
 16359                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16360  005880  503B               	movf	_rfCMD^0,w,c	;volatile
 16361  005882  0012               	return		;funcret
 16362  005884                     __end_of_GetOpenOrder:
 16363                           	callstack 0
 16364                           
 16365 ;; *************** function ___lbdiv *****************
 16366 ;; Defined at:
 16367 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;  dividend        1    wreg     unsigned char 
 16370 ;;  divisor         1   15[COMRAM] unsigned char 
 16371 ;; Auto vars:     Size  Location     Type
 16372 ;;  dividend        1   16[COMRAM] unsigned char 
 16373 ;;  quotient        1   18[COMRAM] unsigned char 
 16374 ;;  counter         1   17[COMRAM] unsigned char 
 16375 ;; Return value:  Size  Location     Type
 16376 ;;                  1    wreg      unsigned char 
 16377 ;; Registers used:
 16378 ;;		wreg, status,2, status,0
 16379 ;; Tracked objects:
 16380 ;;		On entry : 0/0
 16381 ;;		On exit  : 0/0
 16382 ;;		Unchanged: 0/0
 16383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16385 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16388 ;;Total ram usage:        4 bytes
 16389 ;; Hardware stack levels used: 1
 16390 ;; Hardware stack levels required when called: 4
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_GetOpenOrder
 16395 ;;		_sm_execute_menuConfiguration
 16396 ;; This function uses a non-reentrant model
 16397 ;;
 16398                           
 16399                           	psect	text51
 16400  008EF4                     __ptext51:
 16401                           	callstack 0
 16402  008EF4                     ___lbdiv:
 16403                           	callstack 24
 16404                           
 16405                           ;incstack = 0
 16406                           ;___lbdiv@dividend stored from wreg
 16407  008EF4  6E11               	movwf	___lbdiv@dividend^0,c
 16408  008EF6  0E00               	movlw	0
 16409  008EF8  6E13               	movwf	___lbdiv@quotient^0,c
 16410  008EFA  5010               	movf	___lbdiv@divisor^0,w,c
 16411  008EFC  B4D8               	btfsc	status,2,c
 16412  008EFE  D015               	goto	l20483
 16413  008F00  0E01               	movlw	1
 16414  008F02  6E12               	movwf	___lbdiv@counter^0,c
 16415  008F04  D003               	goto	l20471
 16416  008F06                     l20467:
 16417  008F06  90D8               	bcf	status,0,c
 16418  008F08  3610               	rlcf	___lbdiv@divisor^0,f,c
 16419  008F0A  2A12               	incf	___lbdiv@counter^0,f,c
 16420  008F0C                     l20471:
 16421  008F0C  AE10               	btfss	___lbdiv@divisor^0,7,c
 16422  008F0E  D7FB               	goto	l20467
 16423  008F10                     u23460:
 16424  008F10  90D8               	bcf	status,0,c
 16425  008F12  3613               	rlcf	___lbdiv@quotient^0,f,c
 16426  008F14  5010               	movf	___lbdiv@divisor^0,w,c
 16427  008F16  5C11               	subwf	___lbdiv@dividend^0,w,c
 16428  008F18  A0D8               	btfss	status,0,c
 16429  008F1A  D003               	goto	l20479
 16430  008F1C  5010               	movf	___lbdiv@divisor^0,w,c
 16431  008F1E  5E11               	subwf	___lbdiv@dividend^0,f,c
 16432  008F20  8013               	bsf	___lbdiv@quotient^0,0,c
 16433  008F22                     l20479:
 16434  008F22  90D8               	bcf	status,0,c
 16435  008F24  3210               	rrcf	___lbdiv@divisor^0,f,c
 16436  008F26  2E12               	decfsz	___lbdiv@counter^0,f,c
 16437  008F28  D7F3               	goto	u23460
 16438  008F2A                     l20483:
 16439  008F2A  5013               	movf	___lbdiv@quotient^0,w,c
 16440  008F2C  0012               	return		;funcret
 16441  008F2E                     __end_of___lbdiv:
 16442                           	callstack 0
 16443                           
 16444 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16445 ;; Defined at:
 16446 ;;		line 193 in file "outputs_MC50.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;  d1              1    wreg     unsigned char 
 16449 ;;  d2              1   27[COMRAM] unsigned char 
 16450 ;;  time            2   28[COMRAM] int 
 16451 ;; Auto vars:     Size  Location     Type
 16452 ;;  d1              1   30[COMRAM] unsigned char 
 16453 ;; Return value:  Size  Location     Type
 16454 ;;                  1    wreg      void 
 16455 ;; Registers used:
 16456 ;;		wreg
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/1
 16459 ;;		On exit  : 0/0
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16462 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16466 ;;Total ram usage:        4 bytes
 16467 ;; Hardware stack levels used: 1
 16468 ;; Hardware stack levels required when called: 4
 16469 ;; This function calls:
 16470 ;;		Nothing
 16471 ;; This function is called by:
 16472 ;;		_GetOpenOrder
 16473 ;;		_sm_execute_main
 16474 ;;		_sm_execute_menuConfiguration
 16475 ;;		_load_New_Menu
 16476 ;;		_controlSelectRemote
 16477 ;;		_controlSaveRemote
 16478 ;; This function uses a non-reentrant model
 16479 ;;
 16480                           
 16481                           	psect	text52
 16482  009640                     __ptext52:
 16483                           	callstack 0
 16484  009640                     _SetSegmentValueIntermitentMain:
 16485                           	callstack 22
 16486                           
 16487                           ;incstack = 0
 16488                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16489  009640  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16490                           
 16491                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16492  009642  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16493                           
 16494                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16495  009646  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16496                           
 16497                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16498  00964A  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16499  00964E  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16500  009652  0012               	return		;funcret
 16501  009654                     __end_of_SetSegmentValueIntermitentMain:
 16502                           	callstack 0
 16503                           
 16504 ;; *************** function _readbutton *****************
 16505 ;; Defined at:
 16506 ;;		line 471 in file "inputs_MC50.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;		None
 16509 ;; Auto vars:     Size  Location     Type
 16510 ;;		None
 16511 ;; Return value:  Size  Location     Type
 16512 ;;                  1    wreg      void 
 16513 ;; Registers used:
 16514 ;;		wreg, status,2, status,0
 16515 ;; Tracked objects:
 16516 ;;		On entry : 3F/1
 16517 ;;		On exit  : 3F/1
 16518 ;;		Unchanged: 0/0
 16519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16524 ;;Total ram usage:        0 bytes
 16525 ;; Hardware stack levels used: 1
 16526 ;; Hardware stack levels required when called: 4
 16527 ;; This function calls:
 16528 ;;		Nothing
 16529 ;; This function is called by:
 16530 ;;		_main
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text53
 16535  008524                     __ptext53:
 16536                           	callstack 0
 16537  008524                     _readbutton:
 16538                           	callstack 26
 16539                           
 16540                           ; BSR set to: 1
 16541                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16542                           
 16543                           ;incstack = 0
 16544  008524  508E               	movf	142,w,c	;volatile
 16545  008526  0B37               	andlw	55
 16546  008528  6F97               	movwf	readbutton@key2& (0+255),b
 16547  00852A  F000               	nop		;# 
 16548  00852C  F000               	nop		;# 
 16549  00852E  F000               	nop		;# 
 16550                           
 16551                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16552  008530  508E               	movf	142,w,c	;volatile
 16553  008532  0B37               	andlw	55
 16554  008534  0100               	movlb	0	; () banked
 16555  008536  6F86               	movwf	readbutton@key1& (0+255),b
 16556                           
 16557                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16558  008538  5186               	movf	readbutton@key1& (0+255),w,b
 16559  00853A  0101               	movlb	1	; () banked
 16560  00853C  1997               	xorwf	readbutton@key2& (0+255),w,b
 16561  00853E  A4D8               	btfss	status,2,c
 16562  008540  D003               	goto	l16923
 16563                           
 16564                           ; BSR set to: 1
 16565                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16566  008542  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16567                           
 16568                           ;inputs_MC50.c: 488:  }
 16569  008546  D002               	goto	l16925
 16570  008548                     l16923:
 16571                           
 16572                           ; BSR set to: 1
 16573                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16574  008548  0E37               	movlw	55
 16575  00854A  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16576  00854C                     l16925:
 16577                           
 16578                           ; BSR set to: 1
 16579                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16580  00854C  0E37               	movlw	55
 16581  00854E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16582  008550  B4D8               	btfsc	status,2,c
 16583  008552  D007               	goto	u19410
 16584                           
 16585                           ; BSR set to: 1
 16586  008554  504C               	movf	_button_struct^0,w,c	;volatile
 16587  008556  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16588  008558  B4D8               	btfsc	status,2,c
 16589  00855A  D007               	goto	l16933
 16590                           
 16591                           ; BSR set to: 1
 16592  00855C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16593  00855E  A4D8               	btfss	status,2,c
 16594  008560  D004               	goto	l16933
 16595  008562                     u19410:
 16596                           
 16597                           ; BSR set to: 1
 16598                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16599  008562  0E00               	movlw	0
 16600  008564  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16601                           
 16602                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16603  008566  0E00               	movlw	0
 16604  008568  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16605  00856A                     l16933:
 16606                           
 16607                           ; BSR set to: 1
 16608                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16609  00856A  0E37               	movlw	55
 16610  00856C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16611  00856E  B4D8               	btfsc	status,2,c
 16612  008570  D007               	goto	l16941
 16613                           
 16614                           ; BSR set to: 1
 16615                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16616  008572  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16620  008576  0EFA               	movlw	250
 16621  008578  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16622  00857A  D004               	goto	l16943
 16623                           
 16624                           ; BSR set to: 1
 16625                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16626  00857C  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16627  00857E  D002               	goto	l16943
 16628  008580                     l16941:
 16629                           
 16630                           ; BSR set to: 1
 16631                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16632  008580  0E00               	movlw	0
 16633  008582  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16634  008584                     l16943:
 16635                           
 16636                           ; BSR set to: 1
 16637                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16638  008584  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16639  008586  A4D8               	btfss	status,2,c
 16640  008588  0012               	return	
 16641                           
 16642                           ; BSR set to: 1
 16643                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16644  00858A  0E37               	movlw	55
 16645  00858C  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16646                           
 16647                           ; BSR set to: 1
 16648  00858E  0012               	return		;funcret
 16649  008590                     __end_of_readbutton:
 16650                           	callstack 0
 16651                           
 16652 ;; *************** function _read_package *****************
 16653 ;; Defined at:
 16654 ;;		line 21 in file "eusartpackage.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;		None
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;  package         7   23[COMRAM] struct package_t
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  7   16[COMRAM] struct package_t
 16661 ;; Registers used:
 16662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16663 ;; Tracked objects:
 16664 ;;		On entry : 3F/0
 16665 ;;		On exit  : 3F/E
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16668 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16669 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16671 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;Total ram usage:       14 bytes
 16673 ;; Hardware stack levels used: 1
 16674 ;; Hardware stack levels required when called: 5
 16675 ;; This function calls:
 16676 ;;		_EUSART1_Read
 16677 ;; This function is called by:
 16678 ;;		_main
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           	psect	text54
 16683  008A8C                     __ptext54:
 16684                           	callstack 0
 16685  008A8C                     _read_package:
 16686                           	callstack 25
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16690                           
 16691                           ; BSR set to: 1
 16692                           ;incstack = 0
 16693  008A8C  EC30  F046         	call	_EUSART1_Read	;wreg free
 16694  008A90  0A0A               	xorlw	10
 16695  008A92  B4D8               	btfsc	status,2,c
 16696  008A94  D00C               	goto	l17101
 16697  008A96                     u19940:
 16698                           
 16699                           ; BSR set to: 14
 16700                           ;eusartpackage.c: 25:             package.valid=0;
 16701  008A96  0E00               	movlw	0
 16702  008A98  6E1E               	movwf	(read_package@package+6)^0,c
 16703                           
 16704                           ; BSR set to: 14
 16705                           ;eusartpackage.c: 26:             return package;
 16706  008A9A  EE20  F018         	lfsr	2,read_package@package
 16707  008A9E  EE00  F011         	lfsr	0,?_read_package
 16708  008AA2  0E06               	movlw	6
 16709  008AA4                     u19951:
 16710  008AA4  CFDB FFEB          	movff	plusw2,plusw0
 16711  008AA8  06E8               	decf	wreg,f,c
 16712  008AAA  E2FC               	bc	u19951
 16713  008AAC  0012               	return	
 16714  008AAE                     l17101:
 16715                           
 16716                           ; BSR set to: 14
 16717                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16718  008AAE  0E0A               	movlw	10
 16719  008AB0  6E1C               	movwf	(read_package@package+4)^0,c
 16720                           
 16721                           ; BSR set to: 14
 16722                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16723  008AB2  EC30  F046         	call	_EUSART1_Read	;wreg free
 16724  008AB6  6E18               	movwf	read_package@package^0,c
 16725                           
 16726                           ; BSR set to: 14
 16727                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16728  008AB8  EC30  F046         	call	_EUSART1_Read	;wreg free
 16729  008ABC  6E19               	movwf	(read_package@package+1)^0,c
 16730                           
 16731                           ; BSR set to: 14
 16732                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16733  008ABE  EC30  F046         	call	_EUSART1_Read	;wreg free
 16734  008AC2  6E1A               	movwf	(read_package@package+2)^0,c
 16735                           
 16736                           ; BSR set to: 14
 16737                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16738  008AC4  EC30  F046         	call	_EUSART1_Read	;wreg free
 16739  008AC8  6E1B               	movwf	(read_package@package+3)^0,c
 16740                           
 16741                           ; BSR set to: 14
 16742                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16743  008ACA  EC30  F046         	call	_EUSART1_Read	;wreg free
 16744  008ACE  0A0D               	xorlw	13
 16745  008AD0  A4D8               	btfss	status,2,c
 16746  008AD2  D7E1               	goto	u19940
 16747                           
 16748                           ; BSR set to: 14
 16749                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16750  008AD4  0E0D               	movlw	13
 16751  008AD6  6E1D               	movwf	(read_package@package+5)^0,c
 16752                           
 16753                           ; BSR set to: 14
 16754                           ;eusartpackage.c: 46:         package.valid=1;
 16755  008AD8  0E01               	movlw	1
 16756  008ADA  D7DE               	goto	L76
 16757  008ADC                     __end_of_read_package:
 16758                           	callstack 0
 16759                           
 16760 ;; *************** function _EUSART1_Read *****************
 16761 ;; Defined at:
 16762 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16763 ;; Parameters:    Size  Location     Type
 16764 ;;		None
 16765 ;; Auto vars:     Size  Location     Type
 16766 ;;  readValue       1   15[COMRAM] unsigned char 
 16767 ;; Return value:  Size  Location     Type
 16768 ;;                  1    wreg      unsigned char 
 16769 ;; Registers used:
 16770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16771 ;; Tracked objects:
 16772 ;;		On entry : 31/0
 16773 ;;		On exit  : 3F/E
 16774 ;;		Unchanged: 0/0
 16775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16780 ;;Total ram usage:        1 bytes
 16781 ;; Hardware stack levels used: 1
 16782 ;; Hardware stack levels required when called: 4
 16783 ;; This function calls:
 16784 ;;		Nothing
 16785 ;; This function is called by:
 16786 ;;		_read_package
 16787 ;; This function uses a non-reentrant model
 16788 ;;
 16789                           
 16790                           	psect	text55
 16791  008C60                     __ptext55:
 16792                           	callstack 0
 16793  008C60                     _EUSART1_Read:
 16794                           	callstack 25
 16795                           
 16796                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16797                           
 16798                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16799                           
 16800                           ; BSR set to: 14
 16801                           ;incstack = 0
 16802  008C60  0100               	movlb	0	; () banked
 16803  008C62  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16804  008C64  B4D8               	btfsc	status,2,c
 16805  008C66  D7FC               	goto	__ptext55
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16809  008C68  0E74               	movlw	low _eusart1RxStatusBuffer
 16810  008C6A  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16811  008C6C  6ED9               	movwf	fsr2l,c
 16812  008C6E  6ADA               	clrf	fsr2h,c
 16813  008C70  0E02               	movlw	high _eusart1RxStatusBuffer
 16814  008C72  22DA               	addwfc	fsr2h,f,c
 16815  008C74  50DF               	movf	indf2,w,c
 16816  008C76  0101               	movlb	1	; () banked
 16817  008C78  6F9A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16818                           
 16819                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16820  008C7A  0E7C               	movlw	low _eusart1RxBuffer
 16821  008C7C  0100               	movlb	0	; () banked
 16822  008C7E  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16823  008C80  6ED9               	movwf	fsr2l,c
 16824  008C82  6ADA               	clrf	fsr2h,c
 16825  008C84  0E02               	movlw	high _eusart1RxBuffer
 16826  008C86  22DA               	addwfc	fsr2h,f,c
 16827  008C88  50DF               	movf	indf2,w,c
 16828  008C8A  6E10               	movwf	EUSART1_Read@readValue^0,c
 16829                           
 16830                           ; BSR set to: 0
 16831  008C8C  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16835  008C8E  0E07               	movlw	7
 16836  008C90  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16837  008C92  D002               	goto	l14319
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16841  008C94  0E00               	movlw	0
 16842  008C96  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16843  008C98                     l14319:
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16847  008C98  010E               	movlb	14	; () banked
 16848  008C9A  9BC5               	bcf	197,5,b	;volatile
 16849                           
 16850                           ; BSR set to: 14
 16851                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16852  008C9C  0100               	movlb	0	; () banked
 16853  008C9E  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16854                           
 16855                           ; BSR set to: 0
 16856                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16857  008CA0  010E               	movlb	14	; () banked
 16858  008CA2  8BC5               	bsf	197,5,b	;volatile
 16859                           
 16860                           ; BSR set to: 14
 16861                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16862  008CA4  5010               	movf	EUSART1_Read@readValue^0,w,c
 16863                           
 16864                           ; BSR set to: 14
 16865  008CA6  0012               	return		;funcret
 16866  008CA8                     __end_of_EUSART1_Read:
 16867                           	callstack 0
 16868                           
 16869 ;; *************** function _readRFButtons *****************
 16870 ;; Defined at:
 16871 ;;		line 231 in file "inputs_MC50.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;		None
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      void 
 16878 ;; Registers used:
 16879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16880 ;; Tracked objects:
 16881 ;;		On entry : 3F/1
 16882 ;;		On exit  : 3E/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;Total ram usage:        0 bytes
 16890 ;; Hardware stack levels used: 1
 16891 ;; Hardware stack levels required when called: 15
 16892 ;; This function calls:
 16893 ;;		_DecryptPacket_12BIT
 16894 ;;		_keeloqDecryptPacket
 16895 ;; This function is called by:
 16896 ;;		_main
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text56
 16901  005EF4                     __ptext56:
 16902                           	callstack 0
 16903  005EF4                     _readRFButtons:
 16904                           	callstack 15
 16905                           
 16906                           ; BSR set to: 1
 16907                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 16908                           
 16909                           ; BSR set to: 14
 16910                           ;incstack = 0
 16911  005EF4  0100               	movlb	0	; () banked
 16912  005EF6  518B               	movf	_RFFull& (0+255),w,b	;volatile
 16913  005EF8  B4D8               	btfsc	status,2,c
 16914  005EFA  D0B9               	goto	l23329
 16915                           
 16916                           ; BSR set to: 0
 16917                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 16918  005EFC  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 16919  005EFE  A4D8               	btfss	status,2,c
 16920  005F00  D00B               	goto	l23275
 16921                           
 16922                           ; BSR set to: 0
 16923                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 16924  005F02  0ECA               	movlw	low _BufferRF
 16925  005F04  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 16926  005F06  0E02               	movlw	high _BufferRF
 16927  005F08  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 16928  005F0A  0E94               	movlw	low _classic_data
 16929  005F0C  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 16930  005F0E  0E02               	movlw	high _classic_data
 16931  005F10  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 16932  005F12  EC75  F02A         	call	_keeloqDecryptPacket	;wreg free
 16933  005F16  D00A               	goto	L77
 16934  005F18                     l23275:
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 16938  005F18  0ECA               	movlw	low _BufferRF
 16939  005F1A  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 16940  005F1C  0E02               	movlw	high _BufferRF
 16941  005F1E  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 16942  005F20  0E94               	movlw	low _classic_data
 16943  005F22  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 16944  005F24  0E02               	movlw	high _classic_data
 16945  005F26  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 16946  005F28  EC76  F03D         	call	_DecryptPacket_12BIT	;wreg free
 16947  005F2C                     L77:
 16948  005F2C  6F87               	movwf	readRFButtons@keyType& (0+255),b
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 16952  005F2E  C2A0  F088         	movff	_classic_data+12,readRFButtons@key1
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 16956  005F32  C298  F181         	movff	_classic_data+4,readRFButtons@serial
 16957  005F36  C299  F182         	movff	_classic_data+5,readRFButtons@serial+1
 16958  005F3A  C29A  F183         	movff	_classic_data+6,readRFButtons@serial+2
 16959  005F3E  C29B  F184         	movff	_classic_data+7,readRFButtons@serial+3
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 16963  005F42  C29C  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 16964  005F46  C29D  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 16968  005F4A  C2A2  F198         	movff	_classic_data+14,readRFButtons@typeRemote
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 16972  005F4E  0101               	movlb	1	; () banked
 16973  005F50  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 16974  005F52  A4D8               	btfss	status,2,c
 16975  005F54  D01E               	goto	l23297
 16976                           
 16977                           ; BSR set to: 1
 16978                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 16979  005F56  0100               	movlb	0	; () banked
 16980  005F58  5187               	movf	readRFButtons@keyType& (0+255),w,b
 16981  005F5A  B4D8               	btfsc	status,2,c
 16982  005F5C  D044               	goto	u28310
 16983                           
 16984                           ; BSR set to: 0
 16985  005F5E  5188               	movf	readRFButtons@key1& (0+255),w,b
 16986  005F60  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 16987  005F62  A4D8               	btfss	status,2,c
 16988  005F64  D040               	goto	u28310
 16989                           
 16990                           ; BSR set to: 0
 16991  005F66  0101               	movlb	1	; () banked
 16992  005F68  5181               	movf	readRFButtons@serial& (0+255),w,b
 16993  005F6A  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 16994  005F6C  E13C               	bnz	l23309
 16995  005F6E  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 16996  005F70  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 16997  005F72  E139               	bnz	l23309
 16998  005F74  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 16999  005F76  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17000  005F78  E136               	bnz	l23309
 17001  005F7A  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17002  005F7C  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17003  005F7E  A4D8               	btfss	status,2,c
 17004  005F80  D032               	goto	u28310
 17005                           
 17006                           ; BSR set to: 1
 17007  005F82  0100               	movlb	0	; () banked
 17008  005F84  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17009  005F86  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17010  005F88  A4D8               	btfss	status,2,c
 17011  005F8A  D02D               	goto	u28310
 17012  005F8C                     l1654:
 17013                           
 17014                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17015  005F8C  0E00               	movlw	0
 17016  005F8E  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17017                           
 17018                           ;inputs_MC50.c: 275:         }
 17019  005F90  D038               	goto	l1657
 17020  005F92                     l23297:
 17021                           
 17022                           ; BSR set to: 1
 17023  005F92  0100               	movlb	0	; () banked
 17024  005F94  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17025  005F96  B4D8               	btfsc	status,2,c
 17026  005F98  D026               	goto	u28310
 17027                           
 17028                           ; BSR set to: 0
 17029  005F9A  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17030  005F9C  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17031  005F9E  B4D8               	btfsc	status,2,c
 17032  005FA0  D00F               	goto	u28290
 17033                           
 17034                           ; BSR set to: 0
 17035  005FA2  0101               	movlb	1	; () banked
 17036  005FA4  BFB0               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17037  005FA6  D005               	goto	u28280
 17038  005FA8  51B0               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17039  005FAA  E10A               	bnz	l23305
 17040  005FAC  05AF               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17041  005FAE  B0D8               	btfsc	status,0,c
 17042  005FB0  D007               	goto	u28290
 17043  005FB2                     u28280:
 17044                           
 17045                           ; BSR set to: 1
 17046  005FB2  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17047  005FB4  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17048  005FB6  E117               	bnz	l23309
 17049  005FB8  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17050  005FBA  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17051  005FBC  A4D8               	btfss	status,2,c
 17052  005FBE  D013               	goto	u28310
 17053  005FC0                     u28290:
 17054  005FC0                     l23305:
 17055  005FC0  0100               	movlb	0	; () banked
 17056  005FC2  5188               	movf	readRFButtons@key1& (0+255),w,b
 17057  005FC4  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17058  005FC6  A4D8               	btfss	status,2,c
 17059  005FC8  D00E               	goto	u28310
 17060                           
 17061                           ; BSR set to: 0
 17062  005FCA  0101               	movlb	1	; () banked
 17063  005FCC  5181               	movf	readRFButtons@serial& (0+255),w,b
 17064  005FCE  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17065  005FD0  E10A               	bnz	u28310
 17066  005FD2  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17067  005FD4  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17068  005FD6  E107               	bnz	u28310
 17069  005FD8  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17070  005FDA  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17071  005FDC  E104               	bnz	u28310
 17072  005FDE  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17073  005FE0  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17074  005FE2  B4D8               	btfsc	status,2,c
 17075  005FE4  D003               	goto	l23311
 17076  005FE6                     u28310:
 17077  005FE6                     l23309:
 17078                           
 17079                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17080  005FE6  0E00               	movlw	0
 17081  005FE8  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17082  005FEA  D7D0               	goto	l1654
 17083  005FEC                     l23311:
 17084                           
 17085                           ; BSR set to: 1
 17086  005FEC  BFB0               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17087  005FEE  D005               	goto	u28320
 17088  005FF0  51B0               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17089  005FF2  E107               	bnz	l1657
 17090  005FF4  05AF               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17091  005FF6  B0D8               	btfsc	status,0,c
 17092  005FF8  D004               	goto	l1657
 17093  005FFA                     u28320:
 17094                           
 17095                           ; BSR set to: 1
 17096  005FFA  0E02               	movlw	2
 17097  005FFC  1998               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17098  005FFE  B4D8               	btfsc	status,2,c
 17099  006000  D7F2               	goto	u28310
 17100  006002                     l1657:
 17101                           
 17102                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17103  006002  0E00               	movlw	0
 17104  006004  0101               	movlb	1	; () banked
 17105  006006  6FB0               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17106  006008  0E0A               	movlw	10
 17107  00600A  6FAF               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17108                           
 17109                           ; BSR set to: 1
 17110                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17111  00600C  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17112                           
 17113                           ;inputs_MC50.c: 292:         if
 17114  006010  503B               	movf	_rfCMD^0,w,c	;volatile
 17115  006012  B4D8               	btfsc	status,2,c
 17116  006014  D01A               	goto	u28370
 17117                           
 17118                           ; BSR set to: 1
 17119  006016  0100               	movlb	0	; () banked
 17120  006018  5188               	movf	readRFButtons@key1& (0+255),w,b
 17121  00601A  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17122  00601C  A4D8               	btfss	status,2,c
 17123  00601E  D015               	goto	u28370
 17124                           
 17125                           ; BSR set to: 0
 17126  006020  0101               	movlb	1	; () banked
 17127  006022  5181               	movf	readRFButtons@serial& (0+255),w,b
 17128  006024  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17129  006026  E111               	bnz	l1667
 17130  006028  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17131  00602A  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17132  00602C  E10E               	bnz	l1667
 17133  00602E  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17134  006030  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17135  006032  E10B               	bnz	l1667
 17136  006034  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17137  006036  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17138  006038  A4D8               	btfss	status,2,c
 17139  00603A  D007               	goto	u28370
 17140                           
 17141                           ; BSR set to: 1
 17142  00603C  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17143  00603E  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17144  006040  E104               	bnz	u28370
 17145  006042  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17146  006044  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17147  006046  B4D8               	btfsc	status,2,c
 17148  006048  D00E               	goto	l23327
 17149  00604A                     u28370:
 17150  00604A                     l1667:
 17151                           
 17152                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17153  00604A  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17154                           
 17155                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17156  00604E  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17157  006052  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17158  006056  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17159  00605A  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17160                           
 17161                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17162  00605E  C2A3  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17163                           
 17164                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17165  006062  0E00               	movlw	0
 17166  006064  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17167  006066                     l23327:
 17168                           
 17169                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17170  006066  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17171  00606A  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17172  00606E                     l23329:
 17173                           
 17174                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17175  00606E  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17176  006070  A4D8               	btfss	status,2,c
 17177  006072  D003               	goto	l23333
 17178                           
 17179                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17180  006074  0E00               	movlw	0
 17181  006076  6E3B               	movwf	_rfCMD^0,c	;volatile
 17182                           
 17183                           ;inputs_MC50.c: 313:     }
 17184  006078  0012               	return	
 17185  00607A                     l23333:
 17186  00607A  503B               	movf	_rfCMD^0,w,c	;volatile
 17187  00607C  B4D8               	btfsc	status,2,c
 17188  00607E  0012               	return	
 17189                           
 17190                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17191  006080  0EFA               	movlw	250
 17192  006082  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17193  006084  0012               	return	
 17194                           
 17195                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17196  006086  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17197  006088  0012               	return		;funcret
 17198  00608A                     __end_of_readRFButtons:
 17199                           	callstack 0
 17200                           
 17201 ;; *************** function _keeloqDecryptPacket *****************
 17202 ;; Defined at:
 17203 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17204 ;; Parameters:    Size  Location     Type
 17205 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17206 ;;		 -> BufferRF(9), 
 17207 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17208 ;;		 -> classic_data(16), 
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;  commandType     1   17[BANK0 ] enum E10539
 17211 ;;  hop_error       1   16[BANK0 ] enum E10730
 17212 ;; Return value:  Size  Location     Type
 17213 ;;                  1    wreg      enum E10539
 17214 ;; Registers used:
 17215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 3F/0
 17218 ;;		On exit  : 3F/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17223 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17224 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17225 ;;Total ram usage:       10 bytes
 17226 ;; Hardware stack levels used: 1
 17227 ;; Hardware stack levels required when called: 14
 17228 ;; This function calls:
 17229 ;;		_DecCHK
 17230 ;;		_HopCHK
 17231 ;;		_keeloq_classic_decrypt_packet
 17232 ;;		_memcpy
 17233 ;;		_validateRemoteSerialNumber
 17234 ;;		_verifyProgramingMode
 17235 ;; This function is called by:
 17236 ;;		_readRFButtons
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           	psect	text57
 17241  0054EA                     __ptext57:
 17242                           	callstack 0
 17243  0054EA                     _keeloqDecryptPacket:
 17244                           	callstack 15
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17248                           
 17249                           ;incstack = 0
 17250  0054EA  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17251  0054EE  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17252  0054F2  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17253  0054F6  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17254  0054FA  0E00               	movlw	0
 17255  0054FC  6E15               	movwf	(memcpy@n+1)^0,c
 17256  0054FE  0E08               	movlw	8
 17257  005500  6E14               	movwf	memcpy@n^0,c
 17258  005502  EC99  F046         	call	_memcpy	;wreg free
 17259                           
 17260                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17261  005506  0E08               	movlw	8
 17262  005508  0100               	movlb	0	; () banked
 17263  00550A  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17264  00550C  6E10               	movwf	memcpy@d1^0,c
 17265  00550E  0E00               	movlw	0
 17266  005510  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17267  005512  6E11               	movwf	(memcpy@d1+1)^0,c
 17268  005514  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17269  005518  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17270  00551C  0E00               	movlw	0
 17271  00551E  6E15               	movwf	(memcpy@n+1)^0,c
 17272  005520  0E04               	movlw	4
 17273  005522  6E14               	movwf	memcpy@n^0,c
 17274  005524  EC99  F046         	call	_memcpy	;wreg free
 17275                           
 17276                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17277  005528  0100               	movlb	0	; () banked
 17278  00552A  EE20 F00C          	lfsr	2,12
 17279  00552E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17280  005530  26D9               	addwf	fsr2l,f,c
 17281  005532  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17282  005534  22DA               	addwfc	fsr2h,f,c
 17283  005536  EE10 F007          	lfsr	1,7
 17284  00553A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17285  00553C  26E1               	addwf	fsr1l,f,c
 17286  00553E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17287  005540  22E2               	addwfc	fsr1h,f,c
 17288  005542  50E7               	movf	indf1,w,c
 17289  005544  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17290  005546  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17291  005548  0B0F               	andlw	15
 17292  00554A  6EDF               	movwf	indf2,c
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17296  00554C  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17297  005550  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17298  005554  ECB3  F047         	call	_verifyProgramingMode	;wreg free
 17299  005558  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17303  00555A  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17304  00555C  A4D8               	btfss	status,2,c
 17305  00555E  D019               	goto	l21813
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17309  005560  EE20 F004          	lfsr	2,4
 17310  005564  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17311  005566  26D9               	addwf	fsr2l,f,c
 17312  005568  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17313  00556A  22DA               	addwfc	fsr2h,f,c
 17314  00556C  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17315  005570  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17316  005574  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17317  005578  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17318  00557C  0E00               	movlw	0
 17319  00557E  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17320  005580  0E0F               	movlw	15
 17321  005582  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17322  005584  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17323  005586  0E00               	movlw	0
 17324  005588  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17325  00558A  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17326  00558C  EC12  F02D         	call	_validateRemoteSerialNumber	;wreg free
 17327  005590  D004               	goto	L78
 17328  005592                     l21813:
 17329                           
 17330                           ; BSR set to: 0
 17331  005592  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17332  005594  A4D8               	btfss	status,2,c
 17333  005596  D002               	goto	l21817
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17337  005598  0E00               	movlw	0
 17338  00559A                     L78:
 17339  00559A  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17340  00559C                     l21817:
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17344  00559C  EE20 F004          	lfsr	2,4
 17345  0055A0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17346  0055A2  26D9               	addwf	fsr2l,f,c
 17347  0055A4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17348  0055A6  22DA               	addwfc	fsr2h,f,c
 17349  0055A8  0EFF               	movlw	255
 17350  0055AA  14DE               	andwf	postinc2,w,c
 17351  0055AC  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17352  0055AE  0EFF               	movlw	255
 17353  0055B0  14DE               	andwf	postinc2,w,c
 17354  0055B2  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17355  0055B4  0EFF               	movlw	255
 17356  0055B6  14DE               	andwf	postinc2,w,c
 17357  0055B8  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17358  0055BA  0E0F               	movlw	15
 17359  0055BC  14DE               	andwf	postinc2,w,c
 17360  0055BE  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17361  0055C0  EE20 F004          	lfsr	2,4
 17362  0055C4  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17363  0055C6  26D9               	addwf	fsr2l,f,c
 17364  0055C8  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17365  0055CA  22DA               	addwfc	fsr2h,f,c
 17366  0055CC  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17367  0055D0  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17368  0055D4  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17369  0055D8  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17370                           
 17371                           ; BSR set to: 0
 17372                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17373  0055DC  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17374  0055E0  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17375  0055E4  EC46  F044         	call	_keeloq_classic_decrypt_packet	;wreg free
 17376                           
 17377                           ; BSR set to: 0
 17378                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17379  0055E8  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17380  0055EA  A4D8               	btfss	status,2,c
 17381  0055EC  D01B               	goto	l21835
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17385  0055EE  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17386  0055F2  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17387  0055F6  ECCD  F047         	call	_DecCHK	;wreg free
 17388  0055FA  0900               	iorlw	0
 17389  0055FC  A4D8               	btfss	status,2,c
 17390  0055FE  D008               	goto	l21827
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17394  005600  EE20 F00E          	lfsr	2,14
 17395  005604  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17396  005606  26D9               	addwf	fsr2l,f,c
 17397  005608  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17398  00560A  22DA               	addwfc	fsr2h,f,c
 17399  00560C  0E01               	movlw	1
 17400  00560E  D007               	goto	L79
 17401  005610                     l21827:
 17402                           
 17403                           ; BSR set to: 0
 17404                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17405  005610  EE20 F00E          	lfsr	2,14
 17406  005614  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17407  005616  26D9               	addwf	fsr2l,f,c
 17408  005618  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17409  00561A  22DA               	addwfc	fsr2h,f,c
 17410  00561C  0E00               	movlw	0
 17411  00561E                     L79:
 17412  00561E  6EDF               	movwf	indf2,c
 17413  005620                     l21829:
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17417  005620  0E00               	movlw	0
 17418  005622  0012               	return	
 17419  005624                     l21835:
 17420                           
 17421                           ; BSR set to: 0
 17422  005624  0E06               	movlw	6
 17423  005626  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17424  005628  B4D8               	btfsc	status,2,c
 17425  00562A  D004               	goto	u25270
 17426                           
 17427                           ; BSR set to: 0
 17428  00562C  0E05               	movlw	5
 17429  00562E  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17430  005630  A4D8               	btfss	status,2,c
 17431  005632  D01B               	goto	l21845
 17432  005634                     u25270:
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17436  005634  EE20 F004          	lfsr	2,4
 17437  005638  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17438  00563A  26D9               	addwf	fsr2l,f,c
 17439  00563C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17440  00563E  22DA               	addwfc	fsr2h,f,c
 17441  005640  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17442  005644  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17443  005648  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17444  00564C  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17445  005650  0E01               	movlw	1
 17446  005652  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17447  005654  0E0F               	movlw	15
 17448  005656  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17449  005658  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17450  00565A  0E00               	movlw	0
 17451  00565C  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17452  00565E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17453  005660  EC12  F02D         	call	_validateRemoteSerialNumber	;wreg free
 17454  005664  0900               	iorlw	0
 17455  005666  B4D8               	btfsc	status,2,c
 17456  005668  D7DB               	goto	l21829
 17457  00566A                     l21845:
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17461  00566A  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17462  00566E  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17463  005672  ECCD  F047         	call	_DecCHK	;wreg free
 17464  005676  0900               	iorlw	0
 17465  005678  A4D8               	btfss	status,2,c
 17466  00567A  D00D               	goto	l21861
 17467                           
 17468                           ; BSR set to: 0
 17469                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17470  00567C  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17471  00567E  B4D8               	btfsc	status,2,c
 17472  005680  D7CF               	goto	l21829
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17476  005682  EE20 F00E          	lfsr	2,14
 17477  005686  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17478  005688  26D9               	addwf	fsr2l,f,c
 17479  00568A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17480  00568C  22DA               	addwfc	fsr2h,f,c
 17481  00568E  0E01               	movlw	1
 17482  005690  6EDF               	movwf	indf2,c
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17486  005692  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17487  005694  0012               	return	
 17488  005696                     l21861:
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17492  005696  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17493  00569A  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17494  00569E  EC48  F03E         	call	_HopCHK	;wreg free
 17495  0056A2  0100               	movlb	0	; () banked
 17496  0056A4  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17497                           
 17498                           ; BSR set to: 0
 17499                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17500  0056A6  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17501  0056A8  A4D8               	btfss	status,2,c
 17502  0056AA  D7BA               	goto	l21829
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17506  0056AC  EE20 F00E          	lfsr	2,14
 17507  0056B0  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17508  0056B2  26D9               	addwf	fsr2l,f,c
 17509  0056B4  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17510  0056B6  22DA               	addwfc	fsr2h,f,c
 17511  0056B8  0E00               	movlw	0
 17512  0056BA  D7EA               	goto	L80
 17513  0056BC                     __end_of_keeloqDecryptPacket:
 17514                           	callstack 0
 17515                           
 17516 ;; *************** function _verifyProgramingMode *****************
 17517 ;; Defined at:
 17518 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17519 ;; Parameters:    Size  Location     Type
 17520 ;;  classic_data    2   15[COMRAM] PTR struct .
 17521 ;;		 -> classic_data(16), 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;		None
 17524 ;; Return value:  Size  Location     Type
 17525 ;;                  1    wreg      enum E10539
 17526 ;; Registers used:
 17527 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17528 ;; Tracked objects:
 17529 ;;		On entry : 3F/0
 17530 ;;		On exit  : 3F/0
 17531 ;;		Unchanged: 3F/0
 17532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17537 ;;Total ram usage:        3 bytes
 17538 ;; Hardware stack levels used: 1
 17539 ;; Hardware stack levels required when called: 4
 17540 ;; This function calls:
 17541 ;;		Nothing
 17542 ;; This function is called by:
 17543 ;;		_keeloqDecryptPacket
 17544 ;; This function uses a non-reentrant model
 17545 ;;
 17546                           
 17547                           	psect	text58
 17548  008F66                     __ptext58:
 17549                           	callstack 0
 17550  008F66                     _verifyProgramingMode:
 17551                           	callstack 24
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;incstack = 0
 17558  008F66  EE20 F00C          	lfsr	2,12
 17559  008F6A  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17560  008F6C  26D9               	addwf	fsr2l,f,c
 17561  008F6E  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17562  008F70  22DA               	addwfc	fsr2h,f,c
 17563  008F72  0E0A               	movlw	10
 17564  008F74  18DE               	xorwf	postinc2,w,c
 17565  008F76  A4D8               	btfss	status,2,c
 17566  008F78  D002               	goto	l20813
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17570  008F7A  0E06               	movlw	6
 17571  008F7C  0012               	return	
 17572  008F7E                     l20813:
 17573                           
 17574                           ; BSR set to: 0
 17575  008F7E  EE20 F00C          	lfsr	2,12
 17576  008F82  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17577  008F84  26D9               	addwf	fsr2l,f,c
 17578  008F86  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17579  008F88  22DA               	addwfc	fsr2h,f,c
 17580  008F8A  0E05               	movlw	5
 17581  008F8C  18DE               	xorwf	postinc2,w,c
 17582  008F8E  A4D8               	btfss	status,2,c
 17583  008F90  D002               	goto	l20821
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17587  008F92  0E05               	movlw	5
 17588  008F94  0012               	return	
 17589  008F96                     l20821:
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17593  008F96  0E00               	movlw	0
 17594                           
 17595                           ; BSR set to: 0
 17596  008F98  0012               	return		;funcret
 17597  008F9A                     __end_of_verifyProgramingMode:
 17598                           	callstack 0
 17599                           
 17600 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17601 ;; Defined at:
 17602 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17603 ;; Parameters:    Size  Location     Type
 17604 ;;  data            2   55[COMRAM] PTR struct .
 17605 ;;		 -> classic_data(16), 
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;		None
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  1    wreg      void 
 17610 ;; Registers used:
 17611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17612 ;; Tracked objects:
 17613 ;;		On entry : 3F/0
 17614 ;;		On exit  : 3F/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17619 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17620 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17621 ;;Total ram usage:        5 bytes
 17622 ;; Hardware stack levels used: 1
 17623 ;; Hardware stack levels required when called: 7
 17624 ;; This function calls:
 17625 ;;		_Decrypt
 17626 ;;		_NormalKeyGen
 17627 ;; This function is called by:
 17628 ;;		_keeloqDecryptPacket
 17629 ;; This function uses a non-reentrant model
 17630 ;;
 17631                           
 17632                           	psect	text59
 17633  00888C                     __ptext59:
 17634                           	callstack 0
 17635  00888C                     _keeloq_classic_decrypt_packet:
 17636                           	callstack 21
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17640                           
 17641                           ; BSR set to: 0
 17642                           ;incstack = 0
 17643  00888C  0E04               	movlw	4
 17644  00888E  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17645  008890  6E26               	movwf	NormalKeyGen@serial^0,c
 17646  008892  0E00               	movlw	0
 17647  008894  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17648  008896  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17649  008898  EC09  F036         	call	_NormalKeyGen	;wreg free
 17650                           
 17651                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17652  00889C  0E08               	movlw	8
 17653  00889E  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17654  0088A0  6E1B               	movwf	Decrypt@packet^0,c
 17655  0088A2  0E00               	movlw	0
 17656  0088A4  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17657  0088A6  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17658  0088A8  EC70  F039         	call	_Decrypt	;wreg free
 17659                           
 17660                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17661  0088AC  EE20 F00D          	lfsr	2,13
 17662  0088B0  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17663  0088B2  26D9               	addwf	fsr2l,f,c
 17664  0088B4  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17665  0088B6  22DA               	addwfc	fsr2h,f,c
 17666  0088B8  EE10 F00A          	lfsr	1,10
 17667  0088BC  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17668  0088BE  26E1               	addwf	fsr1l,f,c
 17669  0088C0  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17670  0088C2  22E2               	addwfc	fsr1h,f,c
 17671  0088C4  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17672  0088C8  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17673  0088CC  0E0C               	movlw	12
 17674  0088CE  0100               	movlb	0	; () banked
 17675  0088D0  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17676  0088D2                     u23955:
 17677  0088D2  90D8               	bcf	status,0,c
 17678  0088D4  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17679  0088D6  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17680  0088D8  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17681  0088DA  D7FB               	goto	u23955
 17682  0088DC  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17683  0088DE  0B0F               	andlw	15
 17684  0088E0  6EDF               	movwf	indf2,c
 17685                           
 17686                           ; BSR set to: 0
 17687  0088E2  0012               	return		;funcret
 17688  0088E4                     __end_of_keeloq_classic_decrypt_packet:
 17689                           	callstack 0
 17690                           
 17691 ;; *************** function _NormalKeyGen *****************
 17692 ;; Defined at:
 17693 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17694 ;; Parameters:    Size  Location     Type
 17695 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17696 ;;		 -> classic_data(16), 
 17697 ;; Auto vars:     Size  Location     Type
 17698 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17699 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17700 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17701 ;; Return value:  Size  Location     Type
 17702 ;;                  1    wreg      void 
 17703 ;; Registers used:
 17704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17705 ;; Tracked objects:
 17706 ;;		On entry : 3F/0
 17707 ;;		On exit  : 0/0
 17708 ;;		Unchanged: 0/0
 17709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17711 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17713 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17714 ;;Total ram usage:       18 bytes
 17715 ;; Hardware stack levels used: 1
 17716 ;; Hardware stack levels required when called: 6
 17717 ;; This function calls:
 17718 ;;		_Decrypt
 17719 ;;		_LoadManufCode
 17720 ;;		_memcpy
 17721 ;; This function is called by:
 17722 ;;		_keeloq_classic_decrypt_packet
 17723 ;; This function uses a non-reentrant model
 17724 ;;
 17725                           
 17726                           	psect	text60
 17727  006C12                     __ptext60:
 17728                           	callstack 0
 17729  006C12                     _NormalKeyGen:
 17730                           	callstack 21
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17734                           
 17735                           ; BSR set to: 0
 17736                           ;incstack = 0
 17737  006C12  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17738  006C14  6E10               	movwf	memcpy@d1^0,c
 17739  006C16  6A11               	clrf	(memcpy@d1+1)^0,c
 17740  006C18  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17741  006C1C  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17742  006C20  0E00               	movlw	0
 17743  006C22  6E15               	movwf	(memcpy@n+1)^0,c
 17744  006C24  0E04               	movlw	4
 17745  006C26  6E14               	movwf	memcpy@n^0,c
 17746  006C28  EC99  F046         	call	_memcpy	;wreg free
 17747                           
 17748                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17749  006C2C  0E28               	movlw	low NormalKeyGen@HOPtemp
 17750  006C2E  6E10               	movwf	memcpy@d1^0,c
 17751  006C30  6A11               	clrf	(memcpy@d1+1)^0,c
 17752  006C32  0E30               	movlw	low NormalKeyGen@Buffer
 17753  006C34  6E12               	movwf	memcpy@s1^0,c
 17754  006C36  6A13               	clrf	(memcpy@s1+1)^0,c
 17755  006C38  0E00               	movlw	0
 17756  006C3A  6E15               	movwf	(memcpy@n+1)^0,c
 17757  006C3C  0E04               	movlw	4
 17758  006C3E  6E14               	movwf	memcpy@n^0,c
 17759  006C40  EC99  F046         	call	_memcpy	;wreg free
 17760                           
 17761                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17762  006C44  0EDB               	movlw	low NormalKeyGen@SEED
 17763  006C46  6E10               	movwf	memcpy@d1^0,c
 17764  006C48  0E02               	movlw	high NormalKeyGen@SEED
 17765  006C4A  6E11               	movwf	(memcpy@d1+1)^0,c
 17766  006C4C  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17767  006C4E  6E12               	movwf	memcpy@s1^0,c
 17768  006C50  6A13               	clrf	(memcpy@s1+1)^0,c
 17769  006C52  0E00               	movlw	0
 17770  006C54  6E15               	movwf	(memcpy@n+1)^0,c
 17771  006C56  0E04               	movlw	4
 17772  006C58  6E14               	movwf	memcpy@n^0,c
 17773  006C5A  EC99  F046         	call	_memcpy	;wreg free
 17774                           
 17775                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17776  006C5E  0E0F               	movlw	15
 17777  006C60  0102               	movlb	2	; () banked
 17778  006C62  17DE               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17779                           
 17780                           ; BSR set to: 2
 17781                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17782  006C64  0E30               	movlw	low NormalKeyGen@Buffer
 17783  006C66  6E10               	movwf	memcpy@d1^0,c
 17784  006C68  6A11               	clrf	(memcpy@d1+1)^0,c
 17785  006C6A  0EDB               	movlw	low NormalKeyGen@SEED
 17786  006C6C  6E12               	movwf	memcpy@s1^0,c
 17787  006C6E  0E02               	movlw	high NormalKeyGen@SEED
 17788  006C70  6E13               	movwf	(memcpy@s1+1)^0,c
 17789  006C72  0E00               	movlw	0
 17790  006C74  6E15               	movwf	(memcpy@n+1)^0,c
 17791  006C76  0E04               	movlw	4
 17792  006C78  6E14               	movwf	memcpy@n^0,c
 17793  006C7A  EC99  F046         	call	_memcpy	;wreg free
 17794                           
 17795                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17796  006C7E  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17797                           
 17798                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17799  006C80  ECFB  F049         	call	_LoadManufCode	;wreg free
 17800                           
 17801                           ; BSR set to: 2
 17802                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17803  006C84  0E30               	movlw	low NormalKeyGen@Buffer
 17804  006C86  6E1B               	movwf	Decrypt@packet^0,c
 17805  006C88  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17806  006C8A  EC70  F039         	call	_Decrypt	;wreg free
 17807                           
 17808                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17809  006C8E  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17810  006C90  6E10               	movwf	memcpy@d1^0,c
 17811  006C92  6A11               	clrf	(memcpy@d1+1)^0,c
 17812  006C94  0E30               	movlw	low NormalKeyGen@Buffer
 17813  006C96  6E12               	movwf	memcpy@s1^0,c
 17814  006C98  6A13               	clrf	(memcpy@s1+1)^0,c
 17815  006C9A  0E00               	movlw	0
 17816  006C9C  6E15               	movwf	(memcpy@n+1)^0,c
 17817  006C9E  0E04               	movlw	4
 17818  006CA0  6E14               	movwf	memcpy@n^0,c
 17819  006CA2  EC99  F046         	call	_memcpy	;wreg free
 17820                           
 17821                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17822  006CA6  0E30               	movlw	low NormalKeyGen@Buffer
 17823  006CA8  6E10               	movwf	memcpy@d1^0,c
 17824  006CAA  6A11               	clrf	(memcpy@d1+1)^0,c
 17825  006CAC  0EDB               	movlw	low NormalKeyGen@SEED
 17826  006CAE  6E12               	movwf	memcpy@s1^0,c
 17827  006CB0  0E02               	movlw	high NormalKeyGen@SEED
 17828  006CB2  6E13               	movwf	(memcpy@s1+1)^0,c
 17829  006CB4  0E00               	movlw	0
 17830  006CB6  6E15               	movwf	(memcpy@n+1)^0,c
 17831  006CB8  0E04               	movlw	4
 17832  006CBA  6E14               	movwf	memcpy@n^0,c
 17833  006CBC  EC99  F046         	call	_memcpy	;wreg free
 17834                           
 17835                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17836  006CC0  0E60               	movlw	96
 17837  006CC2  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17838                           
 17839                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17840  006CC4  ECFB  F049         	call	_LoadManufCode	;wreg free
 17841                           
 17842                           ; BSR set to: 2
 17843                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17844  006CC8  0E30               	movlw	low NormalKeyGen@Buffer
 17845  006CCA  6E1B               	movwf	Decrypt@packet^0,c
 17846  006CCC  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17847  006CCE  EC70  F039         	call	_Decrypt	;wreg free
 17848                           
 17849                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17850  006CD2  0ED7               	movlw	low (_DKEY+4)
 17851  006CD4  6E10               	movwf	memcpy@d1^0,c
 17852  006CD6  0E02               	movlw	high (_DKEY+4)
 17853  006CD8  6E11               	movwf	(memcpy@d1+1)^0,c
 17854  006CDA  0E30               	movlw	low NormalKeyGen@Buffer
 17855  006CDC  6E12               	movwf	memcpy@s1^0,c
 17856  006CDE  6A13               	clrf	(memcpy@s1+1)^0,c
 17857  006CE0  0E00               	movlw	0
 17858  006CE2  6E15               	movwf	(memcpy@n+1)^0,c
 17859  006CE4  0E04               	movlw	4
 17860  006CE6  6E14               	movwf	memcpy@n^0,c
 17861  006CE8  EC99  F046         	call	_memcpy	;wreg free
 17862                           
 17863                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17864  006CEC  0ED3               	movlw	low _DKEY
 17865  006CEE  6E10               	movwf	memcpy@d1^0,c
 17866  006CF0  0E02               	movlw	high _DKEY
 17867  006CF2  6E11               	movwf	(memcpy@d1+1)^0,c
 17868  006CF4  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17869  006CF6  6E12               	movwf	memcpy@s1^0,c
 17870  006CF8  6A13               	clrf	(memcpy@s1+1)^0,c
 17871  006CFA  0E00               	movlw	0
 17872  006CFC  6E15               	movwf	(memcpy@n+1)^0,c
 17873  006CFE  0E04               	movlw	4
 17874  006D00  6E14               	movwf	memcpy@n^0,c
 17875  006D02  EC99  F046         	call	_memcpy	;wreg free
 17876                           
 17877                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 17878  006D06  0E30               	movlw	low NormalKeyGen@Buffer
 17879  006D08  6E10               	movwf	memcpy@d1^0,c
 17880  006D0A  6A11               	clrf	(memcpy@d1+1)^0,c
 17881  006D0C  0E28               	movlw	low NormalKeyGen@HOPtemp
 17882  006D0E  6E12               	movwf	memcpy@s1^0,c
 17883  006D10  6A13               	clrf	(memcpy@s1+1)^0,c
 17884  006D12  0E00               	movlw	0
 17885  006D14  6E15               	movwf	(memcpy@n+1)^0,c
 17886  006D16  0E04               	movlw	4
 17887  006D18  6E14               	movwf	memcpy@n^0,c
 17888  006D1A  EC99  F046         	call	_memcpy	;wreg free
 17889  006D1E  0012               	return		;funcret
 17890  006D20                     __end_of_NormalKeyGen:
 17891                           	callstack 0
 17892                           
 17893 ;; *************** function _LoadManufCode *****************
 17894 ;; Defined at:
 17895 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;		None
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;		None
 17900 ;; Return value:  Size  Location     Type
 17901 ;;                  1    wreg      void 
 17902 ;; Registers used:
 17903 ;;		wreg, status,2
 17904 ;; Tracked objects:
 17905 ;;		On entry : 0/2
 17906 ;;		On exit  : 3F/2
 17907 ;;		Unchanged: 0/0
 17908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17913 ;;Total ram usage:        0 bytes
 17914 ;; Hardware stack levels used: 1
 17915 ;; Hardware stack levels required when called: 4
 17916 ;; This function calls:
 17917 ;;		Nothing
 17918 ;; This function is called by:
 17919 ;;		_NormalKeyGen
 17920 ;; This function uses a non-reentrant model
 17921 ;;
 17922                           
 17923                           	psect	text61
 17924  0093F6                     __ptext61:
 17925                           	callstack 0
 17926  0093F6                     _LoadManufCode:
 17927                           	callstack 22
 17928                           
 17929                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 17930                           
 17931                           ;incstack = 0
 17932  0093F6  0102               	movlb	2	; () banked
 17933  0093F8  69D3               	setf	_DKEY& (0+255),b
 17934                           
 17935                           ; BSR set to: 2
 17936                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 17937  0093FA  0ECA               	movlw	202
 17938  0093FC  6FD4               	movwf	(_DKEY+1)& (0+255),b
 17939                           
 17940                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 17941  0093FE  0E76               	movlw	118
 17942  009400  6FD5               	movwf	(_DKEY+2)& (0+255),b
 17943                           
 17944                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 17945  009402  0E94               	movlw	148
 17946  009404  6FD6               	movwf	(_DKEY+3)& (0+255),b
 17947                           
 17948                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 17949  009406  0E22               	movlw	34
 17950  009408  6FD7               	movwf	(_DKEY+4)& (0+255),b
 17951                           
 17952                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 17953  00940A  0E68               	movlw	104
 17954  00940C  6FD8               	movwf	(_DKEY+5)& (0+255),b
 17955                           
 17956                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 17957  00940E  0E27               	movlw	39
 17958  009410  6FD9               	movwf	(_DKEY+6)& (0+255),b
 17959                           
 17960                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 17961  009412  0E57               	movlw	87
 17962  009414  6FDA               	movwf	(_DKEY+7)& (0+255),b
 17963                           
 17964                           ; BSR set to: 2
 17965  009416  0012               	return		;funcret
 17966  009418                     __end_of_LoadManufCode:
 17967                           	callstack 0
 17968                           
 17969 ;; *************** function _Decrypt *****************
 17970 ;; Defined at:
 17971 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  packet          2   26[COMRAM] PTR unsigned char 
 17974 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 17977 ;;  aux             1   32[COMRAM] unsigned char 
 17978 ;;  p               1   31[COMRAM] char 
 17979 ;;  j               1   30[COMRAM] unsigned char 
 17980 ;;  i               1   29[COMRAM] unsigned char 
 17981 ;;  key             1   28[COMRAM] unsigned char 
 17982 ;; Return value:  Size  Location     Type
 17983 ;;                  1    wreg      void 
 17984 ;; Registers used:
 17985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17986 ;; Tracked objects:
 17987 ;;		On entry : 0/0
 17988 ;;		On exit  : 0/0
 17989 ;;		Unchanged: 0/0
 17990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17992 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17994 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17995 ;;Total ram usage:       11 bytes
 17996 ;; Hardware stack levels used: 1
 17997 ;; Hardware stack levels required when called: 5
 17998 ;; This function calls:
 17999 ;;		_memcpy
 18000 ;; This function is called by:
 18001 ;;		_NormalKeyGen
 18002 ;;		_keeloq_classic_decrypt_packet
 18003 ;; This function uses a non-reentrant model
 18004 ;;
 18005                           
 18006                           	psect	text62
 18007  0072E0                     __ptext62:
 18008                           	callstack 0
 18009  0072E0                     _Decrypt:
 18010                           	callstack 21
 18011                           
 18012                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18013                           
 18014                           ; BSR set to: 2
 18015                           ;incstack = 0
 18016  0072E0  0E22               	movlw	low Decrypt@Buffer
 18017  0072E2  6E10               	movwf	memcpy@d1^0,c
 18018  0072E4  6A11               	clrf	(memcpy@d1+1)^0,c
 18019  0072E6  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18020  0072EA  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18021  0072EE  0E00               	movlw	0
 18022  0072F0  6E15               	movwf	(memcpy@n+1)^0,c
 18023  0072F2  0E04               	movlw	4
 18024  0072F4  6E14               	movwf	memcpy@n^0,c
 18025  0072F6  EC99  F046         	call	_memcpy	;wreg free
 18026                           
 18027                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18028  0072FA  0E01               	movlw	1
 18029  0072FC  6E20               	movwf	Decrypt@p^0,c
 18030                           
 18031                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18032  0072FE  0E42               	movlw	66
 18033  007300  6E1F               	movwf	Decrypt@j^0,c
 18034  007302                     l20025:
 18035                           
 18036                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18037  007302  0ED3               	movlw	low _DKEY
 18038  007304  2420               	addwf	Decrypt@p^0,w,c
 18039  007306  6ED9               	movwf	fsr2l,c
 18040  007308  6ADA               	clrf	fsr2h,c
 18041  00730A  0E02               	movlw	high _DKEY
 18042  00730C  22DA               	addwfc	fsr2h,f,c
 18043  00730E  50DF               	movf	indf2,w,c
 18044  007310  6E1D               	movwf	Decrypt@key^0,c
 18045  007312  0620               	decf	Decrypt@p^0,f,c
 18046                           
 18047                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18048  007314  AE20               	btfss	Decrypt@p^0,7,c
 18049  007316  D002               	goto	l20033
 18050                           
 18051                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18052  007318  0E08               	movlw	8
 18053  00731A  2620               	addwf	Decrypt@p^0,f,c
 18054  00731C                     l20033:
 18055                           
 18056                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18057  00731C  0E08               	movlw	8
 18058  00731E  6E1E               	movwf	Decrypt@i^0,c
 18059  007320                     l1859:
 18060                           
 18061                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18062  007320  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18063  007322  D006               	goto	l1861
 18064                           
 18065                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18066  007324  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18067  007326  D002               	goto	l20043
 18068                           
 18069                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18070  007328  0E3A               	movlw	58
 18071  00732A  D007               	goto	L81
 18072  00732C                     l20043:
 18073                           
 18074                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18075  00732C  0E5C               	movlw	92
 18076  00732E  D005               	goto	L81
 18077  007330                     l1861:
 18078                           
 18079                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18080  007330  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18081  007332  D002               	goto	l20047
 18082                           
 18083                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18084  007334  0E74               	movlw	116
 18085  007336  D001               	goto	L81
 18086  007338                     l20047:
 18087                           
 18088                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18089  007338  0E2E               	movlw	46
 18090  00733A                     L81:
 18091  00733A  6E21               	movwf	Decrypt@aux^0,c
 18092                           
 18093                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18094  00733C  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18095                           
 18096                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18097  00733E  3A21               	swapf	Decrypt@aux^0,f,c
 18098                           
 18099                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18100  007340  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18101  007342  D004               	goto	l20055
 18102                           
 18103                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18104  007344  90D8               	bcf	status,0,c
 18105  007346  3621               	rlcf	Decrypt@aux^0,f,c
 18106  007348  90D8               	bcf	status,0,c
 18107  00734A  3621               	rlcf	Decrypt@aux^0,f,c
 18108  00734C                     l20055:
 18109                           
 18110                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18111  00734C  A022               	btfss	Decrypt@Buffer^0,0,c
 18112  00734E  D002               	goto	l1869
 18113                           
 18114                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18115  007350  90D8               	bcf	status,0,c
 18116  007352  3621               	rlcf	Decrypt@aux^0,f,c
 18117  007354                     l1869:
 18118                           
 18119                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18120  007354  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18121  007356  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18122  007358  181D               	xorwf	Decrypt@key^0,w,c
 18123  00735A  1A21               	xorwf	Decrypt@aux^0,f,c
 18124                           
 18125                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18126  00735C  90D8               	bcf	status,0,c
 18127  00735E  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18128  007360  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18129  007362  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18130                           
 18131                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18132  007364  90D8               	bcf	status,0,c
 18133  007366  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18134  007368  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18135  00736A  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18136                           
 18137                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18138  00736C  90D8               	bcf	status,0,c
 18139  00736E  3422               	rlcf	Decrypt@Buffer^0,w,c
 18140  007370  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18141  007372  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18142                           
 18143                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18144  007374  90D8               	bcf	status,0,c
 18145  007376  3421               	rlcf	Decrypt@aux^0,w,c
 18146  007378  3422               	rlcf	Decrypt@Buffer^0,w,c
 18147  00737A  6E22               	movwf	Decrypt@Buffer^0,c
 18148                           
 18149                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18150  00737C  90D8               	bcf	status,0,c
 18151  00737E  361D               	rlcf	Decrypt@key^0,f,c
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 189:         }
 18154  007380  061E               	decf	Decrypt@i^0,f,c
 18155  007382  501E               	movf	Decrypt@i^0,w,c
 18156  007384  A4D8               	btfss	status,2,c
 18157  007386  D7CC               	goto	l1859
 18158                           
 18159                           ;keeloqDecrypt_MC50.c: 190:     }
 18160  007388  061F               	decf	Decrypt@j^0,f,c
 18161  00738A  501F               	movf	Decrypt@j^0,w,c
 18162  00738C  A4D8               	btfss	status,2,c
 18163  00738E  D7B9               	goto	l20025
 18164                           
 18165                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18166  007390  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18167  007394  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18168  007398  0E22               	movlw	low Decrypt@Buffer
 18169  00739A  6E12               	movwf	memcpy@s1^0,c
 18170  00739C  6A13               	clrf	(memcpy@s1+1)^0,c
 18171  00739E  0E00               	movlw	0
 18172  0073A0  6E15               	movwf	(memcpy@n+1)^0,c
 18173  0073A2  0E04               	movlw	4
 18174  0073A4  6E14               	movwf	memcpy@n^0,c
 18175  0073A6  EC99  F046         	call	_memcpy	;wreg free
 18176  0073AA  0012               	return		;funcret
 18177  0073AC                     __end_of_Decrypt:
 18178                           	callstack 0
 18179                           
 18180 ;; *************** function _HopCHK *****************
 18181 ;; Defined at:
 18182 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;  data            2   35[COMRAM] PTR struct .
 18185 ;;		 -> classic_data(16), 
 18186 ;; Auto vars:     Size  Location     Type
 18187 ;;  hopDiff         2   37[COMRAM] short 
 18188 ;; Return value:  Size  Location     Type
 18189 ;;                  1    wreg      enum E10730
 18190 ;; Registers used:
 18191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18192 ;; Tracked objects:
 18193 ;;		On entry : 3F/0
 18194 ;;		On exit  : 3C/0
 18195 ;;		Unchanged: 0/0
 18196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18201 ;;Total ram usage:        4 bytes
 18202 ;; Hardware stack levels used: 1
 18203 ;; Hardware stack levels required when called: 6
 18204 ;; This function calls:
 18205 ;;		_ReqResync
 18206 ;;		_getHopCode
 18207 ;; This function is called by:
 18208 ;;		_keeloqDecryptPacket
 18209 ;; This function uses a non-reentrant model
 18210 ;;
 18211                           
 18212                           	psect	text63
 18213  007C90                     __ptext63:
 18214                           	callstack 0
 18215  007C90                     _HopCHK:
 18216                           	callstack 22
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18220                           
 18221                           ;incstack = 0
 18222  007C90  EE20 F008          	lfsr	2,8
 18223  007C94  5024               	movf	HopCHK@data^0,w,c
 18224  007C96  26D9               	addwf	fsr2l,f,c
 18225  007C98  5025               	movf	(HopCHK@data+1)^0,w,c
 18226  007C9A  22DA               	addwfc	fsr2h,f,c
 18227  007C9C  CFDE F07C          	movff	postinc2,_Hop
 18228  007CA0  CFDD F07D          	movff	postdec2,_Hop+1
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18232  007CA4  C024  F016         	movff	HopCHK@data,getHopCode@data
 18233  007CA8  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18234  007CAC  EC2D  F033         	call	_getHopCode	;wreg free
 18235  007CB0  C016  F28E         	movff	?_getHopCode,_EHop
 18236  007CB4  C017  F28F         	movff	?_getHopCode+1,_EHop+1
 18237                           
 18238                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18239  007CB8  0101               	movlb	1	; () banked
 18240  007CBA  5196               	movf	_F2Chance& (0+255),w,b
 18241  007CBC  B4D8               	btfsc	status,2,c
 18242  007CBE  D010               	goto	l20785
 18243                           
 18244                           ; BSR set to: 1
 18245                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18246  007CC0  0100               	movlb	0	; () banked
 18247  007CC2  517C               	movf	_Hop& (0+255),w,b
 18248  007CC4  0102               	movlb	2	; () banked
 18249  007CC6  1990               	xorwf	_NextHop& (0+255),w,b
 18250  007CC8  E10B               	bnz	l20785
 18251  007CCA  0100               	movlb	0	; () banked
 18252  007CCC  517D               	movf	(_Hop+1)& (0+255),w,b
 18253  007CCE  0102               	movlb	2	; () banked
 18254  007CD0  1991               	xorwf	(_NextHop+1)& (0+255),w,b
 18255  007CD2  A4D8               	btfss	status,2,c
 18256  007CD4  D005               	goto	l20785
 18257                           
 18258                           ; BSR set to: 2
 18259                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18260  007CD6  0E00               	movlw	0
 18261  007CD8  0101               	movlb	1	; () banked
 18262  007CDA  6F96               	movwf	_F2Chance& (0+255),b
 18263  007CDC                     l20781:
 18264                           
 18265                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18266  007CDC  0E01               	movlw	1
 18267  007CDE  0012               	return	
 18268  007CE0                     l20785:
 18269                           
 18270                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18271  007CE0  0102               	movlb	2	; () banked
 18272  007CE2  518E               	movf	_EHop& (0+255),w,b
 18273  007CE4  0100               	movlb	0	; () banked
 18274  007CE6  5D7C               	subwf	_Hop& (0+255),w,b
 18275  007CE8  6E26               	movwf	HopCHK@hopDiff^0,c
 18276  007CEA  0102               	movlb	2	; () banked
 18277  007CEC  518F               	movf	(_EHop+1)& (0+255),w,b
 18278  007CEE  0100               	movlb	0	; () banked
 18279  007CF0  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18280  007CF2  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18281                           
 18282                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18283  007CF4  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18284  007CF6  D002               	goto	l20793
 18285                           
 18286                           ; BSR set to: 0
 18287                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18288  007CF8  0E0A               	movlw	10
 18289  007CFA  0012               	return	
 18290  007CFC                     l20793:
 18291                           
 18292                           ; BSR set to: 0
 18293  007CFC  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18294  007CFE  D7EE               	goto	l20781
 18295  007D00  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18296  007D02  E104               	bnz	u23920
 18297  007D04  0E11               	movlw	17
 18298  007D06  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18299  007D08  A0D8               	btfss	status,0,c
 18300  007D0A  D7E8               	goto	l20781
 18301  007D0C                     u23920:
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18305  007D0C  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18306  007D10  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18307  007D14  ECC4  F04A         	call	_ReqResync	;wreg free
 18308  007D18  0012               	return		;funcret
 18309  007D1A                     __end_of_HopCHK:
 18310                           	callstack 0
 18311                           
 18312 ;; *************** function _getHopCode *****************
 18313 ;; Defined at:
 18314 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18315 ;; Parameters:    Size  Location     Type
 18316 ;;  data            2   21[COMRAM] PTR struct .
 18317 ;;		 -> classic_data(16), 
 18318 ;; Auto vars:     Size  Location     Type
 18319 ;;  tempHop         2   31[COMRAM] unsigned short 
 18320 ;;  i               1   34[COMRAM] unsigned char 
 18321 ;;  tempPos         1   33[COMRAM] char 
 18322 ;; Return value:  Size  Location     Type
 18323 ;;                  2   21[COMRAM] unsigned short 
 18324 ;; Registers used:
 18325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18326 ;; Tracked objects:
 18327 ;;		On entry : 3F/0
 18328 ;;		On exit  : 3D/0
 18329 ;;		Unchanged: 0/0
 18330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18333 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;Total ram usage:       14 bytes
 18336 ;; Hardware stack levels used: 1
 18337 ;; Hardware stack levels required when called: 5
 18338 ;; This function calls:
 18339 ;;		_ReqResync
 18340 ;;		___wmul
 18341 ;; This function is called by:
 18342 ;;		_HopCHK
 18343 ;; This function uses a non-reentrant model
 18344 ;;
 18345                           
 18346                           	psect	text64
 18347  00665A                     __ptext64:
 18348                           	callstack 0
 18349  00665A                     _getHopCode:
 18350                           	callstack 22
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18354                           
 18355                           ;incstack = 0
 18356  00665A  0E00               	movlw	0
 18357  00665C  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18358  00665E  0E00               	movlw	0
 18359  006660  6E20               	movwf	getHopCode@tempHop^0,c
 18360                           
 18361                           ; BSR set to: 0
 18362                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18363  006662  6822               	setf	getHopCode@tempPos^0,c
 18364                           
 18365                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18366  006664  0E00               	movlw	0
 18367  006666  6E23               	movwf	getHopCode@i^0,c
 18368  006668                     l20273:
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18372  006668  EE20 F004          	lfsr	2,4
 18373  00666C  5016               	movf	getHopCode@data^0,w,c
 18374  00666E  26D9               	addwf	fsr2l,f,c
 18375  006670  5017               	movf	(getHopCode@data+1)^0,w,c
 18376  006672  22DA               	addwfc	fsr2h,f,c
 18377  006674  5023               	movf	getHopCode@i^0,w,c
 18378  006676  0D06               	mullw	6
 18379  006678  0E00               	movlw	low _listSyncValues
 18380  00667A  24F3               	addwf	243,w,c
 18381  00667C  6EE1               	movwf	fsr1l,c
 18382  00667E  0E03               	movlw	high _listSyncValues
 18383  006680  20F4               	addwfc	prodh,w,c
 18384  006682  6EE2               	movwf	fsr1h,c
 18385  006684  50DE               	movf	postinc2,w,c
 18386  006686  18E6               	xorwf	postinc1,w,c
 18387  006688  E118               	bnz	l20279
 18388  00668A  50DE               	movf	postinc2,w,c
 18389  00668C  18E6               	xorwf	postinc1,w,c
 18390  00668E  E115               	bnz	l20279
 18391  006690  50DE               	movf	postinc2,w,c
 18392  006692  18E6               	xorwf	postinc1,w,c
 18393  006694  E112               	bnz	l20279
 18394  006696  50DE               	movf	postinc2,w,c
 18395  006698  18E6               	xorwf	postinc1,w,c
 18396  00669A  A4D8               	btfss	status,2,c
 18397  00669C  D00E               	goto	l20279
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18401  00669E  5023               	movf	getHopCode@i^0,w,c
 18402  0066A0  0D06               	mullw	6
 18403  0066A2  0E04               	movlw	low (_listSyncValues+4)
 18404  0066A4  24F3               	addwf	243,w,c
 18405  0066A6  6ED9               	movwf	fsr2l,c
 18406  0066A8  0E03               	movlw	high (_listSyncValues+4)
 18407  0066AA  20F4               	addwfc	prodh,w,c
 18408  0066AC  6EDA               	movwf	fsr2h,c
 18409  0066AE  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18410  0066B2  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18414  0066B6  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18415  0066BA                     l20279:
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;keeloqDecrypt_MC50.c: 278:     }
 18419  0066BA  2A23               	incf	getHopCode@i^0,f,c
 18420                           
 18421                           ; BSR set to: 0
 18422  0066BC  0E18               	movlw	24
 18423  0066BE  6423               	cpfsgt	getHopCode@i^0,c
 18424  0066C0  D7D3               	goto	l20273
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18428  0066C2  AE22               	btfss	getHopCode@tempPos^0,7,c
 18429  0066C4  D050               	goto	l20299
 18430                           
 18431                           ; BSR set to: 0
 18432                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18433  0066C6  EE20 F004          	lfsr	2,4
 18434  0066CA  5016               	movf	getHopCode@data^0,w,c
 18435  0066CC  26D9               	addwf	fsr2l,f,c
 18436  0066CE  5017               	movf	(getHopCode@data+1)^0,w,c
 18437  0066D0  22DA               	addwfc	fsr2h,f,c
 18438  0066D2  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18439  0066D6  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18440  0066DA  0E00               	movlw	0
 18441  0066DC  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18442  0066DE  0E06               	movlw	6
 18443  0066E0  6E12               	movwf	___wmul@multiplicand^0,c
 18444  0066E2  ECB0  F049         	call	___wmul	;wreg free
 18445  0066E6  0E00               	movlw	low _listSyncValues
 18446  0066E8  2410               	addwf	?___wmul^0,w,c
 18447  0066EA  6EE1               	movwf	fsr1l,c
 18448  0066EC  0E03               	movlw	high _listSyncValues
 18449  0066EE  2011               	addwfc	(?___wmul+1)^0,w,c
 18450  0066F0  6EE2               	movwf	fsr1h,c
 18451  0066F2  CFDE FFE6          	movff	postinc2,postinc1
 18452  0066F6  CFDE FFE6          	movff	postinc2,postinc1
 18453  0066FA  CFDE FFE6          	movff	postinc2,postinc1
 18454  0066FE  CFDE FFE6          	movff	postinc2,postinc1
 18455                           
 18456                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18457  006702  EE20 F008          	lfsr	2,8
 18458  006706  5016               	movf	getHopCode@data^0,w,c
 18459  006708  26D9               	addwf	fsr2l,f,c
 18460  00670A  5017               	movf	(getHopCode@data+1)^0,w,c
 18461  00670C  22DA               	addwfc	fsr2h,f,c
 18462  00670E  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18463  006712  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18464  006716  0E00               	movlw	0
 18465  006718  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18466  00671A  0E06               	movlw	6
 18467  00671C  6E12               	movwf	___wmul@multiplicand^0,c
 18468  00671E  ECB0  F049         	call	___wmul	;wreg free
 18469  006722  0E04               	movlw	low (_listSyncValues+4)
 18470  006724  2410               	addwf	?___wmul^0,w,c
 18471  006726  6EE1               	movwf	fsr1l,c
 18472  006728  0E03               	movlw	high (_listSyncValues+4)
 18473  00672A  2011               	addwfc	(?___wmul+1)^0,w,c
 18474  00672C  6EE2               	movwf	fsr1h,c
 18475  00672E  CFDE FFE6          	movff	postinc2,postinc1
 18476  006732  CFDD FFE5          	movff	postdec2,postdec1
 18477                           
 18478                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18479  006736  0100               	movlb	0	; () banked
 18480  006738  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18481  00673A  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18485  00673C  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18486  00673E  E104               	bnz	u23240
 18487  006740  0E19               	movlw	25
 18488  006742  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18489  006744  A0D8               	btfss	status,0,c
 18490  006746  D004               	goto	l20293
 18491  006748                     u23240:
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18495  006748  0E00               	movlw	0
 18496  00674A  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18497  00674C  0E00               	movlw	0
 18498  00674E  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18499  006750                     l20293:
 18500                           
 18501                           ; BSR set to: 0
 18502                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18503  006750  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18504  006754  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18505  006758  ECC4  F04A         	call	_ReqResync	;wreg free
 18506  00675C  6E18               	movwf	??_getHopCode^0,c
 18507  00675E  5018               	movf	??_getHopCode^0,w,c
 18508  006760  6E16               	movwf	?_getHopCode^0,c
 18509  006762  6A17               	clrf	(?_getHopCode+1)^0,c
 18510  006764  0012               	return	
 18511  006766                     l20299:
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18515  006766  5022               	movf	getHopCode@tempPos^0,w,c
 18516  006768  0D06               	mullw	6
 18517  00676A  0E04               	movlw	low (_listSyncValues+4)
 18518  00676C  24F3               	addwf	243,w,c
 18519  00676E  6ED9               	movwf	fsr2l,c
 18520  006770  0E03               	movlw	high (_listSyncValues+4)
 18521  006772  20F4               	addwfc	prodh,w,c
 18522  006774  6EDA               	movwf	fsr2h,c
 18523  006776  C07C  FFDE         	movff	_Hop,postinc2
 18524  00677A  C07D  FFDD         	movff	_Hop+1,postdec2
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18528  00677E  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18529  006782  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18530  006786  0012               	return		;funcret
 18531  006788                     __end_of_getHopCode:
 18532                           	callstack 0
 18533                           
 18534 ;; *************** function _ReqResync *****************
 18535 ;; Defined at:
 18536 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  1    wreg      enum E10730
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0
 18545 ;; Tracked objects:
 18546 ;;		On entry : 3F/0
 18547 ;;		On exit  : 3F/2
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18554 ;;Total ram usage:        2 bytes
 18555 ;; Hardware stack levels used: 1
 18556 ;; Hardware stack levels required when called: 4
 18557 ;; This function calls:
 18558 ;;		Nothing
 18559 ;; This function is called by:
 18560 ;;		_HopCHK
 18561 ;;		_getHopCode
 18562 ;; This function uses a non-reentrant model
 18563 ;;
 18564                           
 18565                           	psect	text65
 18566  009588                     __ptext65:
 18567                           	callstack 0
 18568  009588                     _ReqResync:
 18569                           	callstack 22
 18570                           
 18571                           ; BSR set to: 0
 18572                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18573                           
 18574                           ;incstack = 0
 18575  009588  0E01               	movlw	1
 18576  00958A  0101               	movlb	1	; () banked
 18577  00958C  6F96               	movwf	_F2Chance& (0+255),b
 18578                           
 18579                           ; BSR set to: 1
 18580                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18581  00958E  0E01               	movlw	1
 18582  009590  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18583  009592  0102               	movlb	2	; () banked
 18584  009594  6F90               	movwf	_NextHop& (0+255),b
 18585  009596  0E00               	movlw	0
 18586  009598  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18587  00959A  6F91               	movwf	(_NextHop+1)& (0+255),b
 18588                           
 18589                           ; BSR set to: 2
 18590                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18591  00959C  0E09               	movlw	9
 18592                           
 18593                           ; BSR set to: 2
 18594  00959E  0012               	return		;funcret
 18595  0095A0                     __end_of_ReqResync:
 18596                           	callstack 0
 18597                           
 18598 ;; *************** function _DecCHK *****************
 18599 ;; Defined at:
 18600 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;  data            2   15[COMRAM] PTR struct .
 18603 ;;		 -> classic_data(16), 
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;		None
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  1    wreg      _Bool 
 18608 ;; Registers used:
 18609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18610 ;; Tracked objects:
 18611 ;;		On entry : 3F/0
 18612 ;;		On exit  : 3F/0
 18613 ;;		Unchanged: 3F/0
 18614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18619 ;;Total ram usage:        4 bytes
 18620 ;; Hardware stack levels used: 1
 18621 ;; Hardware stack levels required when called: 4
 18622 ;; This function calls:
 18623 ;;		Nothing
 18624 ;; This function is called by:
 18625 ;;		_keeloqDecryptPacket
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           
 18629                           	psect	text66
 18630  008F9A                     __ptext66:
 18631                           	callstack 0
 18632  008F9A                     _DecCHK:
 18633                           	callstack 24
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18637                           
 18638                           ; BSR set to: 2
 18639                           ;incstack = 0
 18640  008F9A  EE20 F00D          	lfsr	2,13
 18641  008F9E  5010               	movf	DecCHK@data^0,w,c
 18642  008FA0  26D9               	addwf	fsr2l,f,c
 18643  008FA2  5011               	movf	(DecCHK@data+1)^0,w,c
 18644  008FA4  22DA               	addwfc	fsr2h,f,c
 18645  008FA6  50DF               	movf	indf2,w,c
 18646  008FA8  6E12               	movwf	??_DecCHK^0,c
 18647  008FAA  EE20 F00C          	lfsr	2,12
 18648  008FAE  5010               	movf	DecCHK@data^0,w,c
 18649  008FB0  26D9               	addwf	fsr2l,f,c
 18650  008FB2  5011               	movf	(DecCHK@data+1)^0,w,c
 18651  008FB4  22DA               	addwfc	fsr2h,f,c
 18652  008FB6  50DF               	movf	indf2,w,c
 18653  008FB8  1812               	xorwf	??_DecCHK^0,w,c
 18654  008FBA  6E13               	movwf	(??_DecCHK+1)^0,c
 18655  008FBC  0E0F               	movlw	15
 18656  008FBE  1613               	andwf	(??_DecCHK+1)^0,f,c
 18657  008FC0  B4D8               	btfsc	status,2,c
 18658  008FC2  D002               	goto	l20767
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18662  008FC4  0E00               	movlw	0
 18663  008FC6  0012               	return	
 18664  008FC8                     l20767:
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18668  008FC8  0E01               	movlw	1
 18669                           
 18670                           ; BSR set to: 0
 18671  008FCA  0012               	return		;funcret
 18672  008FCC                     __end_of_DecCHK:
 18673                           	callstack 0
 18674                           
 18675 ;; *************** function _DecryptPacket_12BIT *****************
 18676 ;; Defined at:
 18677 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18678 ;; Parameters:    Size  Location     Type
 18679 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18680 ;;		 -> BufferRF(9), 
 18681 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18682 ;;		 -> classic_data(16), 
 18683 ;; Auto vars:     Size  Location     Type
 18684 ;;  commandType     1   12[BANK0 ] enum E10539
 18685 ;; Return value:  Size  Location     Type
 18686 ;;                  1    wreg      enum E10539
 18687 ;; Registers used:
 18688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18689 ;; Tracked objects:
 18690 ;;		On entry : 3F/0
 18691 ;;		On exit  : 3F/0
 18692 ;;		Unchanged: 0/0
 18693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18697 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18698 ;;Total ram usage:        5 bytes
 18699 ;; Hardware stack levels used: 1
 18700 ;; Hardware stack levels required when called: 14
 18701 ;; This function calls:
 18702 ;;		_memcpy
 18703 ;;		_validateRemoteSerialNumber
 18704 ;; This function is called by:
 18705 ;;		_readRFButtons
 18706 ;; This function uses a non-reentrant model
 18707 ;;
 18708                           
 18709                           	psect	text67
 18710  007AEC                     __ptext67:
 18711                           	callstack 0
 18712  007AEC                     _DecryptPacket_12BIT:
 18713                           	callstack 15
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;incstack = 0
 18720  007AEC  0E04               	movlw	4
 18721  007AEE  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18722  007AF0  6E10               	movwf	memcpy@d1^0,c
 18723  007AF2  0E00               	movlw	0
 18724  007AF4  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18725  007AF6  6E11               	movwf	(memcpy@d1+1)^0,c
 18726  007AF8  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18727  007AFC  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18728  007B00  0E00               	movlw	0
 18729  007B02  6E15               	movwf	(memcpy@n+1)^0,c
 18730  007B04  0E04               	movlw	4
 18731  007B06  6E14               	movwf	memcpy@n^0,c
 18732  007B08  EC99  F046         	call	_memcpy	;wreg free
 18733                           
 18734                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18735  007B0C  0100               	movlb	0	; () banked
 18736  007B0E  EE20 F004          	lfsr	2,4
 18737  007B12  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18738  007B14  26D9               	addwf	fsr2l,f,c
 18739  007B16  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18740  007B18  22DA               	addwfc	fsr2h,f,c
 18741  007B1A  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18742  007B1E  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18743  007B22  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18744  007B26  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18745  007B2A  0E00               	movlw	0
 18746  007B2C  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18747  007B2E  0E0F               	movlw	15
 18748  007B30  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18749  007B32  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18750  007B34  0E00               	movlw	0
 18751  007B36  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18752  007B38  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18753  007B3A  EC12  F02D         	call	_validateRemoteSerialNumber	;wreg free
 18754  007B3E  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18755                           
 18756                           ; BSR set to: 0
 18757                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18758  007B40  EE20 F00C          	lfsr	2,12
 18759  007B44  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18760  007B46  26D9               	addwf	fsr2l,f,c
 18761  007B48  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18762  007B4A  22DA               	addwfc	fsr2h,f,c
 18763  007B4C  0E00               	movlw	0
 18764  007B4E  6EDF               	movwf	indf2,c
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18768  007B50  EE20 F008          	lfsr	2,8
 18769  007B54  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18770  007B56  26D9               	addwf	fsr2l,f,c
 18771  007B58  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18772  007B5A  22DA               	addwfc	fsr2h,f,c
 18773  007B5C  0E00               	movlw	0
 18774  007B5E  6EDE               	movwf	postinc2,c
 18775  007B60  0E00               	movlw	0
 18776  007B62  6EDD               	movwf	postdec2,c
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18780  007B64  EE20 F00E          	lfsr	2,14
 18781  007B68  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18782  007B6A  26D9               	addwf	fsr2l,f,c
 18783  007B6C  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18784  007B6E  22DA               	addwfc	fsr2h,f,c
 18785  007B70  0E02               	movlw	2
 18786  007B72  6EDF               	movwf	indf2,c
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18790  007B74  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18791                           
 18792                           ; BSR set to: 0
 18793  007B76  0012               	return		;funcret
 18794  007B78                     __end_of_DecryptPacket_12BIT:
 18795                           	callstack 0
 18796                           
 18797 ;; *************** function _readInputs *****************
 18798 ;; Defined at:
 18799 ;;		line 528 in file "inputs_MC50.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, status,2, status,0
 18808 ;; Tracked objects:
 18809 ;;		On entry : 3F/1
 18810 ;;		On exit  : 3E/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18817 ;;Total ram usage:        0 bytes
 18818 ;; Hardware stack levels used: 1
 18819 ;; Hardware stack levels required when called: 4
 18820 ;; This function calls:
 18821 ;;		Nothing
 18822 ;; This function is called by:
 18823 ;;		_main
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text68
 18828  006D20                     __ptext68:
 18829                           	callstack 0
 18830  006D20                     _readInputs:
 18831                           	callstack 26
 18832                           
 18833                           ; BSR set to: 1
 18834                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18835                           
 18836                           ; BSR set to: 0
 18837                           ;incstack = 0
 18838  006D20  0100               	movlb	0	; () banked
 18839  006D22  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18840  006D24  A4D8               	btfss	status,2,c
 18841  006D26  D006               	goto	l16951
 18842                           
 18843                           ; BSR set to: 0
 18844  006D28  0E00               	movlw	0
 18845  006D2A  B28D               	btfsc	141,1,c	;volatile
 18846  006D2C  0E01               	movlw	1
 18847  006D2E  0101               	movlb	1	; () banked
 18848  006D30  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18849  006D32  D005               	goto	l16953
 18850  006D34                     l16951:
 18851                           
 18852                           ; BSR set to: 0
 18853  006D34  0E00               	movlw	0
 18854  006D36  B48D               	btfsc	141,2,c	;volatile
 18855  006D38  0E01               	movlw	1
 18856  006D3A  0101               	movlb	1	; () banked
 18857  006D3C  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18858  006D3E                     l16953:
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18862  006D3E  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18863  006D40  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18864  006D42  A4D8               	btfss	status,2,c
 18865  006D44  D002               	goto	l1731
 18866                           
 18867                           ; BSR set to: 1
 18868                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18869  006D46  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18870                           
 18871                           ;inputs_MC50.c: 544:     }
 18872  006D48  D004               	goto	l1732
 18873  006D4A                     l1731:
 18874                           
 18875                           ; BSR set to: 1
 18876                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18877  006D4A  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 18878                           
 18879                           ; BSR set to: 1
 18880                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 18881  006D4E  0E00               	movlw	0
 18882  006D50  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 18883  006D52                     l1732:
 18884                           
 18885                           ; BSR set to: 1
 18886                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 18887  006D52  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 18888  006D54  A4D8               	btfss	status,2,c
 18889                           
 18890                           ; BSR set to: 1
 18891                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 18892  006D56  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 18893                           
 18894                           ; BSR set to: 1
 18895                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 18896  006D5A  0100               	movlb	0	; () banked
 18897  006D5C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18898  006D5E  A4D8               	btfss	status,2,c
 18899  006D60  D006               	goto	l16965
 18900                           
 18901                           ; BSR set to: 0
 18902  006D62  0E00               	movlw	0
 18903  006D64  B48D               	btfsc	141,2,c	;volatile
 18904  006D66  0E01               	movlw	1
 18905  006D68  0101               	movlb	1	; () banked
 18906  006D6A  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18907  006D6C  D005               	goto	l16967
 18908  006D6E                     l16965:
 18909                           
 18910                           ; BSR set to: 0
 18911  006D6E  0E00               	movlw	0
 18912  006D70  B28D               	btfsc	141,1,c	;volatile
 18913  006D72  0E01               	movlw	1
 18914  006D74  0101               	movlb	1	; () banked
 18915  006D76  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18916  006D78                     l16967:
 18917                           
 18918                           ; BSR set to: 1
 18919                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 18920  006D78  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 18921  006D7A  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 18922  006D7C  A4D8               	btfss	status,2,c
 18923  006D7E  D002               	goto	l1736
 18924                           
 18925                           ; BSR set to: 1
 18926                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 18927  006D80  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 18928                           
 18929                           ;inputs_MC50.c: 573:     }
 18930  006D82  D004               	goto	l1737
 18931  006D84                     l1736:
 18932                           
 18933                           ; BSR set to: 1
 18934                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 18935  006D84  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 18936                           
 18937                           ; BSR set to: 1
 18938                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 18939  006D88  0E00               	movlw	0
 18940  006D8A  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 18941  006D8C                     l1737:
 18942                           
 18943                           ; BSR set to: 1
 18944                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 18945  006D8C  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 18946  006D8E  A4D8               	btfss	status,2,c
 18947                           
 18948                           ; BSR set to: 1
 18949                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 18950  006D90  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 18951                           
 18952                           ; BSR set to: 1
 18953                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 18954  006D94  0E00               	movlw	0
 18955  006D96  B88D               	btfsc	141,4,c	;volatile
 18956  006D98  0E01               	movlw	1
 18957  006D9A  6F6A               	movwf	_security& (0+255),b	;volatile
 18958                           
 18959                           ; BSR set to: 1
 18960                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 18961  006D9C  516A               	movf	_security& (0+255),w,b	;volatile
 18962  006D9E  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 18963  006DA0  A4D8               	btfss	status,2,c
 18964  006DA2  D002               	goto	l1739
 18965                           
 18966                           ; BSR set to: 1
 18967                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 18968  006DA4  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 18969                           
 18970                           ;inputs_MC50.c: 597:     }
 18971  006DA6  D004               	goto	l1740
 18972  006DA8                     l1739:
 18973                           
 18974                           ; BSR set to: 1
 18975                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 18976  006DA8  C16A  F16B         	movff	_security,_security+1	;volatile
 18977                           
 18978                           ; BSR set to: 1
 18979                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 18980  006DAC  0E00               	movlw	0
 18981  006DAE  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 18982  006DB0                     l1740:
 18983                           
 18984                           ; BSR set to: 1
 18985                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 18986  006DB0  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 18987  006DB2  A4D8               	btfss	status,2,c
 18988                           
 18989                           ; BSR set to: 1
 18990                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 18991  006DB4  C16A  F101         	movff	_security,_var_sys+1	;volatile
 18992                           
 18993                           ; BSR set to: 1
 18994                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 18995  006DB8  0E00               	movlw	0
 18996  006DBA  BA8D               	btfsc	141,5,c	;volatile
 18997  006DBC  0E01               	movlw	1
 18998  006DBE  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 18999                           
 19000                           ; BSR set to: 1
 19001                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19002  006DC0  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19003  006DC2  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19004  006DC4  A4D8               	btfss	status,2,c
 19005  006DC6  D002               	goto	l1742
 19006                           
 19007                           ; BSR set to: 1
 19008                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19009  006DC8  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19010                           
 19011                           ;inputs_MC50.c: 619:     }
 19012  006DCA  D004               	goto	l1743
 19013  006DCC                     l1742:
 19014                           
 19015                           ; BSR set to: 1
 19016                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19017  006DCC  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19018                           
 19019                           ; BSR set to: 1
 19020                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19021  006DD0  0E00               	movlw	0
 19022  006DD2  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19023  006DD4                     l1743:
 19024                           
 19025                           ; BSR set to: 1
 19026                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19027  006DD4  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19028  006DD6  A4D8               	btfss	status,2,c
 19029                           
 19030                           ; BSR set to: 1
 19031                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19032  006DD8  C16D  F170         	movff	_security+3,_security+6	;volatile
 19033                           
 19034                           ; BSR set to: 1
 19035                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19036  006DDC  0E00               	movlw	0
 19037  006DDE  BC8D               	btfsc	141,6,c	;volatile
 19038  006DE0  0E01               	movlw	1
 19039  006DE2  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19043  006DE4  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19044  006DE6  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19045  006DE8  A4D8               	btfss	status,2,c
 19046  006DEA  D002               	goto	l1745
 19047                           
 19048                           ; BSR set to: 1
 19049                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19050  006DEC  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19051                           
 19052                           ;inputs_MC50.c: 640:     }
 19053  006DEE  D004               	goto	l1746
 19054  006DF0                     l1745:
 19055                           
 19056                           ; BSR set to: 1
 19057                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19058  006DF0  C171  F172         	movff	_security+7,_security+8	;volatile
 19059                           
 19060                           ; BSR set to: 1
 19061                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19062  006DF4  0E00               	movlw	0
 19063  006DF6  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19064  006DF8                     l1746:
 19065                           
 19066                           ; BSR set to: 1
 19067                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19068  006DF8  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19069  006DFA  A4D8               	btfss	status,2,c
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19073  006DFC  C171  F174         	movff	_security+7,_security+10	;volatile
 19074                           
 19075                           ; BSR set to: 1
 19076                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19077  006E00  0100               	movlb	0	; () banked
 19078  006E02  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19079  006E04  A4D8               	btfss	status,2,c
 19080  006E06  D00D               	goto	l1748
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19084  006E08  0101               	movlb	1	; () banked
 19085  006E0A  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19086  006E0C  A4D8               	btfss	status,2,c
 19087  006E0E  D006               	goto	l17013
 19088                           
 19089                           ; BSR set to: 1
 19090  006E10  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19091  006E12  A4D8               	btfss	status,2,c
 19092  006E14  D003               	goto	l17013
 19093                           
 19094                           ; BSR set to: 1
 19095                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19096  006E16  0E00               	movlw	0
 19097  006E18  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19098                           
 19099                           ;inputs_MC50.c: 660:         }
 19100  006E1A  0012               	return	
 19101  006E1C                     l17013:
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19105  006E1C  0E01               	movlw	1
 19106  006E1E  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19107  006E20  0012               	return	
 19108  006E22                     l1748:
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19112  006E22  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19113  006E26  0012               	return		;funcret
 19114  006E28                     __end_of_readInputs:
 19115                           	callstack 0
 19116                           
 19117 ;; *************** function _loadNVM_VarSystem *****************
 19118 ;; Defined at:
 19119 ;;		line 151 in file "controlMemory_MC50.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;		None
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;		None
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  1    wreg      void 
 19126 ;; Registers used:
 19127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19128 ;; Tracked objects:
 19129 ;;		On entry : 3F/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19137 ;;Total ram usage:        0 bytes
 19138 ;; Hardware stack levels used: 1
 19139 ;; Hardware stack levels required when called: 15
 19140 ;; This function calls:
 19141 ;;		_I2C1_Read1ByteRegister
 19142 ;;		_ResetDefaultMemory
 19143 ;;		_SaveNVM_VarSystem
 19144 ;;		_checkNVM_VarSystem
 19145 ;;		_i2c_readDataBlock
 19146 ;; This function is called by:
 19147 ;;		_main
 19148 ;; This function uses a non-reentrant model
 19149 ;;
 19150                           
 19151                           	psect	text69
 19152  006788                     __ptext69:
 19153                           	callstack 0
 19154  006788                     _loadNVM_VarSystem:
 19155                           	callstack 15
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19159                           
 19160                           ;incstack = 0
 19161  006788  0E00               	movlw	0
 19162  00678A  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19163  00678C  0E50               	movlw	80
 19164  00678E  ECEB  F043         	call	_I2C1_Read1ByteRegister
 19165  006792  0AFF               	xorlw	255
 19166  006794  A4D8               	btfss	status,2,c
 19167  006796  D04C               	goto	l23247
 19168  006798  0E10               	movlw	16
 19169  00679A  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19170  00679C  0E50               	movlw	80
 19171  00679E  ECEB  F043         	call	_I2C1_Read1ByteRegister
 19172  0067A2  0AFF               	xorlw	255
 19173  0067A4  A4D8               	btfss	status,2,c
 19174  0067A6  D044               	goto	l23247
 19175                           
 19176                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19177  0067A8  0E00               	movlw	0
 19178  0067AA  EC45  F030         	call	_ResetDefaultMemory
 19179                           
 19180                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19181  0067AE  0E00               	movlw	0
 19182  0067B0  0100               	movlb	0	; () banked
 19183  0067B2  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19184  0067B4  0E00               	movlw	0
 19185  0067B6  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19186  0067B8  0E00               	movlw	0
 19187  0067BA  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19188  0067BC  0E00               	movlw	0
 19189  0067BE  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19193  0067C0  0E00               	movlw	0
 19194  0067C2  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19195  0067C4  0E00               	movlw	0
 19196  0067C6  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19197  0067C8  0E00               	movlw	0
 19198  0067CA  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19199  0067CC  0E00               	movlw	0
 19200  0067CE  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19204  0067D0  0E00               	movlw	0
 19205  0067D2  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19206  0067D4  0E00               	movlw	0
 19207  0067D6  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19208                           
 19209                           ; BSR set to: 0
 19210                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19211  0067D8  0E00               	movlw	0
 19212  0067DA  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19213  0067DC  0E00               	movlw	0
 19214  0067DE  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19215                           
 19216                           ; BSR set to: 0
 19217                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19218  0067E0  0E00               	movlw	0
 19219  0067E2  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19220  0067E4  0E00               	movlw	0
 19221  0067E6  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19222  0067E8  0E00               	movlw	0
 19223  0067EA  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19224  0067EC  0E00               	movlw	0
 19225  0067EE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19226                           
 19227                           ; BSR set to: 0
 19228                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19229  0067F0  0E00               	movlw	0
 19230  0067F2  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19231  0067F4  0E00               	movlw	0
 19232  0067F6  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19233  0067F8  0E00               	movlw	0
 19234  0067FA  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19235  0067FC  0E00               	movlw	0
 19236  0067FE  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19237                           
 19238                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19239  006800  0E03               	movlw	3
 19240  006802  EC97  F047         	call	_SaveNVM_VarSystem
 19241                           
 19242                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19243  006806  0E00               	movlw	0
 19244  006808  0100               	movlb	0	; () banked
 19245  00680A  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19246                           
 19247                           ; BSR set to: 0
 19248                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19249  00680C  0E00               	movlw	0
 19250  00680E  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19254  006810  0E00               	movlw	0
 19255  006812  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19259  006814  0E00               	movlw	0
 19260  006816  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19261  006818  0E00               	movlw	0
 19262  00681A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19263  00681C  0E00               	movlw	0
 19264  00681E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19265  006820  0E00               	movlw	0
 19266  006822  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19267                           
 19268                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19269  006824  0E02               	movlw	2
 19270  006826  EC97  F047         	call	_SaveNVM_VarSystem
 19271                           
 19272                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19273  00682A  0E00               	movlw	0
 19274  00682C  0100               	movlb	0	; () banked
 19275  00682E  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19276  006830                     l23247:
 19277                           
 19278                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19279  006830  0E00               	movlw	0
 19280  006832  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19281  006834  0E00               	movlw	0
 19282  006836  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19283  006838  0E98               	movlw	low _var_sys_NVM
 19284  00683A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19285  00683C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19286  00683E  0E00               	movlw	0
 19287  006840  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19288  006842  0E10               	movlw	16
 19289  006844  6E26               	movwf	i2c_readDataBlock@len^0,c
 19290  006846  0E50               	movlw	80
 19291  006848  EC07  F041         	call	_i2c_readDataBlock
 19292                           
 19293                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19294  00684C  0E00               	movlw	0
 19295  00684E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19296  006850  0E10               	movlw	16
 19297  006852  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19298  006854  0EA8               	movlw	low (_var_sys_NVM+16)
 19299  006856  6E24               	movwf	i2c_readDataBlock@data^0,c
 19300  006858  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19301  00685A  0E00               	movlw	0
 19302  00685C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19303  00685E  0E10               	movlw	16
 19304  006860  6E26               	movwf	i2c_readDataBlock@len^0,c
 19305  006862  0E50               	movlw	80
 19306  006864  EC07  F041         	call	_i2c_readDataBlock
 19307                           
 19308                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19309  006868  0E00               	movlw	0
 19310  00686A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19311  00686C  0E20               	movlw	32
 19312  00686E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19313  006870  0EB8               	movlw	low (_var_sys_NVM+32)
 19314  006872  6E24               	movwf	i2c_readDataBlock@data^0,c
 19315  006874  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19316  006876  0E00               	movlw	0
 19317  006878  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19318  00687A  0E10               	movlw	16
 19319  00687C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19320  00687E  0E50               	movlw	80
 19321  006880  EC07  F041         	call	_i2c_readDataBlock
 19322                           
 19323                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19324  006884  0E00               	movlw	0
 19325  006886  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19326  006888  0E30               	movlw	48
 19327  00688A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19328  00688C  0EC8               	movlw	low (_var_sys_NVM+48)
 19329  00688E  6E24               	movwf	i2c_readDataBlock@data^0,c
 19330  006890  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19331  006892  0E00               	movlw	0
 19332  006894  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19333  006896  0E10               	movlw	16
 19334  006898  6E26               	movwf	i2c_readDataBlock@len^0,c
 19335  00689A  0E50               	movlw	80
 19336  00689C  EC07  F041         	call	_i2c_readDataBlock
 19337                           
 19338                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19339  0068A0  EC42  F02C         	call	_checkNVM_VarSystem	;wreg free
 19340                           
 19341                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19342  0068A4  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19343  0068A8  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19344  0068AC  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19345  0068B0  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19346  0068B4  0012               	return		;funcret
 19347  0068B6                     __end_of_loadNVM_VarSystem:
 19348                           	callstack 0
 19349                           
 19350 ;; *************** function _checkNVM_VarSystem *****************
 19351 ;; Defined at:
 19352 ;;		line 326 in file "controlMemory_MC50.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;		None
 19355 ;; Auto vars:     Size  Location     Type
 19356 ;;  saveParam       1   57[COMRAM] unsigned char 
 19357 ;; Return value:  Size  Location     Type
 19358 ;;                  1    wreg      void 
 19359 ;; Registers used:
 19360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19361 ;; Tracked objects:
 19362 ;;		On entry : 0/2
 19363 ;;		On exit  : 0/0
 19364 ;;		Unchanged: 0/0
 19365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19370 ;;Total ram usage:        1 bytes
 19371 ;; Hardware stack levels used: 1
 19372 ;; Hardware stack levels required when called: 14
 19373 ;; This function calls:
 19374 ;;		_SaveNVM_VarSystem
 19375 ;; This function is called by:
 19376 ;;		_loadNVM_VarSystem
 19377 ;; This function uses a non-reentrant model
 19378 ;;
 19379                           
 19380                           	psect	text70
 19381  005884                     __ptext70:
 19382                           	callstack 0
 19383  005884                     _checkNVM_VarSystem:
 19384                           	callstack 15
 19385                           
 19386                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19387                           
 19388                           ;incstack = 0
 19389  005884  0E00               	movlw	0
 19390  005886  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19391                           
 19392                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19393  005888  0E2D               	movlw	45
 19394  00588A  0100               	movlb	0	; () banked
 19395  00588C  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19396  00588E  D004               	goto	l21697
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19400  005890  0E03               	movlw	3
 19401  005892  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19402                           
 19403                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19404  005894  0E01               	movlw	1
 19405  005896  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19406  005898                     l21697:
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19410  005898  0E2D               	movlw	45
 19411  00589A  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19412  00589C  D004               	goto	l1495
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19416  00589E  0E03               	movlw	3
 19417  0058A0  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19418                           
 19419                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19420  0058A2  0E01               	movlw	1
 19421  0058A4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19422  0058A6                     l1495:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19426  0058A6  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19427  0058A8  B4D8               	btfsc	status,2,c
 19428  0058AA  D003               	goto	u24950
 19429                           
 19430                           ; BSR set to: 0
 19431  0058AC  0E09               	movlw	9
 19432  0058AE  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19433  0058B0  D004               	goto	l21705
 19434  0058B2                     u24950:
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19438  0058B2  0E09               	movlw	9
 19439  0058B4  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19440                           
 19441                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19442  0058B6  0E01               	movlw	1
 19443  0058B8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19444  0058BA                     l21705:
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19448  0058BA  0E09               	movlw	9
 19449  0058BC  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19450  0058BE  D004               	goto	l21709
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19454  0058C0  0E00               	movlw	0
 19455  0058C2  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19456                           
 19457                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19458  0058C4  0E01               	movlw	1
 19459  0058C6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19460  0058C8                     l21709:
 19461                           
 19462                           ; BSR set to: 0
 19463                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19464  0058C8  0E63               	movlw	99
 19465  0058CA  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19466  0058CC  D004               	goto	l21713
 19467                           
 19468                           ; BSR set to: 0
 19469                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19470  0058CE  0E0A               	movlw	10
 19471  0058D0  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19472                           
 19473                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19474  0058D2  0E01               	movlw	1
 19475  0058D4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19476  0058D6                     l21713:
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19480  0058D6  0E63               	movlw	99
 19481  0058D8  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19482  0058DA  D004               	goto	l21717
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19486  0058DC  0E00               	movlw	0
 19487  0058DE  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19488                           
 19489                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19490  0058E0  0E01               	movlw	1
 19491  0058E2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19492  0058E4                     l21717:
 19493                           
 19494                           ; BSR set to: 0
 19495                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19496  0058E4  0E63               	movlw	99
 19497  0058E6  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19498  0058E8  D004               	goto	l21721
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19502  0058EA  0E00               	movlw	0
 19503  0058EC  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19504                           
 19505                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19506  0058EE  0E01               	movlw	1
 19507  0058F0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19508  0058F2                     l21721:
 19509                           
 19510                           ; BSR set to: 0
 19511                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19512  0058F2  0E01               	movlw	1
 19513  0058F4  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19514  0058F6  D004               	goto	l21725
 19515                           
 19516                           ; BSR set to: 0
 19517                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19518  0058F8  0E00               	movlw	0
 19519  0058FA  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19520                           
 19521                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19522  0058FC  0E01               	movlw	1
 19523  0058FE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19524  005900                     l21725:
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19528  005900  0E01               	movlw	1
 19529  005902  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19530  005904  D004               	goto	l21729
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19534  005906  0E00               	movlw	0
 19535  005908  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19536                           
 19537                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19538  00590A  0E01               	movlw	1
 19539  00590C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19540  00590E                     l21729:
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19544  00590E  0E01               	movlw	1
 19545  005910  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19546  005912  D004               	goto	l21733
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19550  005914  0E00               	movlw	0
 19551  005916  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19552                           
 19553                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19554  005918  0E01               	movlw	1
 19555  00591A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19556  00591C                     l21733:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19560  00591C  0E01               	movlw	1
 19561  00591E  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19562  005920  D004               	goto	l21737
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19566  005922  0E01               	movlw	1
 19567  005924  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19568                           
 19569                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19570  005926  0E01               	movlw	1
 19571  005928  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19572  00592A                     l21737:
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19576  00592A  0E01               	movlw	1
 19577  00592C  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19578  00592E  D004               	goto	l21741
 19579                           
 19580                           ; BSR set to: 0
 19581                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19582  005930  0E00               	movlw	0
 19583  005932  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19584                           
 19585                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19586  005934  0E01               	movlw	1
 19587  005936  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19588  005938                     l21741:
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19592  005938  0E02               	movlw	2
 19593  00593A  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19594  00593C  D004               	goto	l21745
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19598  00593E  0E00               	movlw	0
 19599  005940  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19600                           
 19601                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19602  005942  0E01               	movlw	1
 19603  005944  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19604  005946                     l21745:
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19608  005946  0E03               	movlw	3
 19609  005948  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19610  00594A  D004               	goto	l21749
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19614  00594C  0E00               	movlw	0
 19615  00594E  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19616                           
 19617                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19618  005950  0E01               	movlw	1
 19619  005952  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19620  005954                     l21749:
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19624  005954  0E01               	movlw	1
 19625  005956  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19626  005958  D004               	goto	l21753
 19627                           
 19628                           ; BSR set to: 0
 19629                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19630  00595A  0E00               	movlw	0
 19631  00595C  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19632                           
 19633                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19634  00595E  0E01               	movlw	1
 19635  005960  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19636  005962                     l21753:
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19640  005962  0E09               	movlw	9
 19641  005964  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19642  005966  D004               	goto	l21757
 19643                           
 19644                           ; BSR set to: 0
 19645                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19646  005968  0E00               	movlw	0
 19647  00596A  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19648                           
 19649                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19650  00596C  0E01               	movlw	1
 19651  00596E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19652  005970                     l21757:
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19656  005970  0E02               	movlw	2
 19657  005972  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19658  005974  D004               	goto	l21761
 19659                           
 19660                           ; BSR set to: 0
 19661                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19662  005976  0E00               	movlw	0
 19663  005978  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19664                           
 19665                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19666  00597A  0E01               	movlw	1
 19667  00597C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19668  00597E                     l21761:
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19672  00597E  0E01               	movlw	1
 19673  005980  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19674  005982  D004               	goto	l21765
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19678  005984  0E00               	movlw	0
 19679  005986  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19680                           
 19681                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19682  005988  0E01               	movlw	1
 19683  00598A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19684  00598C                     l21765:
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19688  00598C  0E09               	movlw	9
 19689  00598E  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19690  005990  D004               	goto	l21769
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19694  005992  0E00               	movlw	0
 19695  005994  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19696                           
 19697                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19698  005996  0E01               	movlw	1
 19699  005998  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19700  00599A                     l21769:
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19704  00599A  0E63               	movlw	99
 19705  00599C  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19706  00599E  D004               	goto	l21773
 19707                           
 19708                           ; BSR set to: 0
 19709                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19710  0059A0  0E03               	movlw	3
 19711  0059A2  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19712                           
 19713                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19714  0059A4  0E01               	movlw	1
 19715  0059A6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19716  0059A8                     l21773:
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19720  0059A8  0E09               	movlw	9
 19721  0059AA  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19722  0059AC  D004               	goto	l21777
 19723                           
 19724                           ; BSR set to: 0
 19725                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19726  0059AE  0E00               	movlw	0
 19727  0059B0  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19728                           
 19729                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19730  0059B2  0E01               	movlw	1
 19731  0059B4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19732  0059B6                     l21777:
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19736  0059B6  0E01               	movlw	1
 19737  0059B8  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19738  0059BA  D004               	goto	l1517
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19742  0059BC  0E00               	movlw	0
 19743  0059BE  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19744                           
 19745                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19746  0059C0  0E01               	movlw	1
 19747  0059C2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19748  0059C4                     l1517:
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19752  0059C4  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19753  0059C6  B4D8               	btfsc	status,2,c
 19754  0059C8  D003               	goto	u25160
 19755                           
 19756                           ; BSR set to: 0
 19757  0059CA  0E09               	movlw	9
 19758  0059CC  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19759  0059CE  D004               	goto	l21785
 19760  0059D0                     u25160:
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19764  0059D0  0E05               	movlw	5
 19765  0059D2  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19766                           
 19767                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19768  0059D4  0E01               	movlw	1
 19769  0059D6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19770  0059D8                     l21785:
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19774  0059D8  0E03               	movlw	3
 19775  0059DA  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19776  0059DC  D004               	goto	l21789
 19777                           
 19778                           ; BSR set to: 0
 19779                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19780  0059DE  0E03               	movlw	3
 19781  0059E0  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19782                           
 19783                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19784  0059E2  0E01               	movlw	1
 19785  0059E4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19786  0059E6                     l21789:
 19787                           
 19788                           ; BSR set to: 0
 19789                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19790  0059E6  0E01               	movlw	1
 19791  0059E8  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19792  0059EA  D004               	goto	l21793
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19796  0059EC  0E00               	movlw	0
 19797  0059EE  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19798                           
 19799                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19800  0059F0  0E01               	movlw	1
 19801  0059F2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19802  0059F4                     l21793:
 19803                           
 19804                           ; BSR set to: 0
 19805                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19806  0059F4  0E01               	movlw	1
 19807  0059F6  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19808  0059F8  D004               	goto	l21797
 19809                           
 19810                           ; BSR set to: 0
 19811                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19812  0059FA  0E01               	movlw	1
 19813  0059FC  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19814                           
 19815                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19816  0059FE  0E01               	movlw	1
 19817  005A00  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19818  005A02                     l21797:
 19819                           
 19820                           ; BSR set to: 0
 19821                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19822  005A02  0E09               	movlw	9
 19823  005A04  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19824  005A06  D004               	goto	l1524
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19828  005A08  0E00               	movlw	0
 19829  005A0A  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19830                           
 19831                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19832  005A0C  0E01               	movlw	1
 19833  005A0E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19834  005A10                     l1524:
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19838  005A10  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19839  005A12  B4D8               	btfsc	status,2,c
 19840  005A14  0012               	return	
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19844  005A16  0E00               	movlw	0
 19845  005A18  EC97  F047         	call	_SaveNVM_VarSystem
 19846                           
 19847                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19848  005A1C  0E01               	movlw	1
 19849  005A1E  EC97  F047         	call	_SaveNVM_VarSystem
 19850  005A22  0012               	return		;funcret
 19851  005A24                     __end_of_checkNVM_VarSystem:
 19852                           	callstack 0
 19853                           
 19854 ;; *************** function _ResetDefaultMemory *****************
 19855 ;; Defined at:
 19856 ;;		line 198 in file "controlMemory_MC50.c"
 19857 ;; Parameters:    Size  Location     Type
 19858 ;;  type            1    wreg     unsigned char 
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;  type            1   57[COMRAM] unsigned char 
 19861 ;; Return value:  Size  Location     Type
 19862 ;;                  1    wreg      void 
 19863 ;; Registers used:
 19864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19865 ;; Tracked objects:
 19866 ;;		On entry : 31/0
 19867 ;;		On exit  : 0/0
 19868 ;;		Unchanged: 0/0
 19869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;Total ram usage:        1 bytes
 19875 ;; Hardware stack levels used: 1
 19876 ;; Hardware stack levels required when called: 14
 19877 ;; This function calls:
 19878 ;;		_SaveNVM_VarSystem
 19879 ;; This function is called by:
 19880 ;;		_loadNVM_VarSystem
 19881 ;;		_sm_execute_menuConfiguration
 19882 ;; This function uses a non-reentrant model
 19883 ;;
 19884                           
 19885                           	psect	text71
 19886  00608A                     __ptext71:
 19887                           	callstack 0
 19888  00608A                     _ResetDefaultMemory:
 19889                           	callstack 14
 19890                           
 19891                           ;incstack = 0
 19892                           ;ResetDefaultMemory@type stored from wreg
 19893  00608A  6E3A               	movwf	ResetDefaultMemory@type^0,c
 19894                           
 19895                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 19896  00608C  0E03               	movlw	3
 19897  00608E  0100               	movlb	0	; () banked
 19898  006090  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19899                           
 19900                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 19901  006092  0E09               	movlw	9
 19902  006094  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19903                           
 19904                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 19905  006096  0E03               	movlw	3
 19906  006098  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19907                           
 19908                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 19909  00609A  0E00               	movlw	0
 19910  00609C  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19911                           
 19912                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 19913  00609E  0E00               	movlw	0
 19914  0060A0  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19915                           
 19916                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 19917  0060A2  0E00               	movlw	0
 19918  0060A4  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19919                           
 19920                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 19921  0060A6  0E01               	movlw	1
 19922  0060A8  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19923                           
 19924                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 19925  0060AA  0E00               	movlw	0
 19926  0060AC  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19927                           
 19928                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 19929  0060AE  0E00               	movlw	0
 19930  0060B0  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19931                           
 19932                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 19933  0060B2  0E00               	movlw	0
 19934  0060B4  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19935                           
 19936                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 19937  0060B6  0E00               	movlw	0
 19938  0060B8  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19939                           
 19940                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 19941  0060BA  0E00               	movlw	0
 19942  0060BC  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19943                           
 19944                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 19945  0060BE  0E00               	movlw	0
 19946  0060C0  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19947                           
 19948                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 19949  0060C2  0E03               	movlw	3
 19950  0060C4  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19951                           
 19952                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 19953  0060C6  0E00               	movlw	0
 19954  0060C8  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19955                           
 19956                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 19957  0060CA  0E00               	movlw	0
 19958  0060CC  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19959                           
 19960                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 19961  0060CE  0E00               	movlw	0
 19962  0060D0  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19963                           
 19964                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 19965  0060D2  0E01               	movlw	1
 19966  0060D4  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19967                           
 19968                           ; BSR set to: 0
 19969                           ;controlMemory_MC50.c: 222:     if (type == SC){
 19970  0060D6  503A               	movf	ResetDefaultMemory@type^0,w,c
 19971  0060D8  A4D8               	btfss	status,2,c
 19972  0060DA  D014               	goto	l20493
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 19976  0060DC  0E00               	movlw	0
 19977  0060DE  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19978                           
 19979                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 19980  0060E0  0E00               	movlw	0
 19981  0060E2  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19982                           
 19983                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 19984  0060E4  0E00               	movlw	0
 19985  0060E6  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19986                           
 19987                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 19988  0060E8  0E00               	movlw	0
 19989  0060EA  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19990                           
 19991                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 19992  0060EC  0E00               	movlw	0
 19993  0060EE  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19994                           
 19995                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 19996  0060F0  0E05               	movlw	5
 19997  0060F2  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19998                           
 19999                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20000  0060F4  0E03               	movlw	3
 20001  0060F6  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20002                           
 20003                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20004  0060F8  0E00               	movlw	0
 20005  0060FA  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20006                           
 20007                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20008  0060FC  0E00               	movlw	0
 20009  0060FE  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20010                           
 20011                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20012  006100  0E0A               	movlw	10
 20013  006102  D039               	goto	L82
 20014  006104                     l20493:
 20015                           
 20016                           ; BSR set to: 0
 20017  006104  043A               	decf	ResetDefaultMemory@type^0,w,c
 20018  006106  A4D8               	btfss	status,2,c
 20019  006108  D01B               	goto	l20497
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20023  00610A  0E04               	movlw	4
 20024  00610C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20025                           
 20026                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20027  00610E  0E04               	movlw	4
 20028  006110  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20029                           
 20030                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20031  006112  0E04               	movlw	4
 20032  006114  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20033                           
 20034                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20035  006116  0E01               	movlw	1
 20036  006118  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20037                           
 20038                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20039  00611A  0E01               	movlw	1
 20040  00611C  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20041                           
 20042                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20043  00611E  0E00               	movlw	0
 20044  006120  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20045                           
 20046                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20047  006122  0E00               	movlw	0
 20048  006124  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20049                           
 20050                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20051  006126  0E05               	movlw	5
 20052  006128  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20053                           
 20054                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20055  00612A  0E03               	movlw	3
 20056  00612C  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20057                           
 20058                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20059  00612E  0E00               	movlw	0
 20060  006130  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20061                           
 20062                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20063  006132  0E05               	movlw	5
 20064  006134  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20065                           
 20066                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20067  006136  0E00               	movlw	0
 20068  006138  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20069                           
 20070                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20071  00613A  0E00               	movlw	0
 20072  00613C  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20073                           
 20074                           ;controlMemory_MC50.c: 251:     }
 20075  00613E  D01C               	goto	l20501
 20076  006140                     l20497:
 20077                           
 20078                           ; BSR set to: 0
 20079  006140  0E02               	movlw	2
 20080  006142  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20081  006144  A4D8               	btfss	status,2,c
 20082  006146  D018               	goto	l20501
 20083                           
 20084                           ; BSR set to: 0
 20085                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20086  006148  0E06               	movlw	6
 20087  00614A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20088                           
 20089                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20090  00614C  0E02               	movlw	2
 20091  00614E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20092                           
 20093                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20094  006150  0E00               	movlw	0
 20095  006152  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20096                           
 20097                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20098  006154  0E00               	movlw	0
 20099  006156  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20100                           
 20101                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20102  006158  0E00               	movlw	0
 20103  00615A  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20104                           
 20105                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20106  00615C  0E00               	movlw	0
 20107  00615E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20108                           
 20109                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20110  006160  0E02               	movlw	2
 20111  006162  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20112                           
 20113                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20114  006164  0E05               	movlw	5
 20115  006166  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20116                           
 20117                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20118  006168  0E01               	movlw	1
 20119  00616A  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20120                           
 20121                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20122  00616C  0E05               	movlw	5
 20123  00616E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20124                           
 20125                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20126  006170  0E00               	movlw	0
 20127  006172  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20128                           
 20129                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20130  006174  0E00               	movlw	0
 20131  006176                     L82:
 20132  006176  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20133  006178                     l20501:
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20137  006178  0E01               	movlw	1
 20138  00617A  EC97  F047         	call	_SaveNVM_VarSystem
 20139                           
 20140                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20141  00617E  0E00               	movlw	0
 20142  006180  EC97  F047         	call	_SaveNVM_VarSystem
 20143                           
 20144                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20145  006184  0E00               	movlw	0
 20146  006186  0100               	movlb	0	; () banked
 20147  006188  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20148  00618A  0E00               	movlw	0
 20149  00618C  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20150  00618E  0E00               	movlw	0
 20151  006190  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20152  006192  0E00               	movlw	0
 20153  006194  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20154                           
 20155                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20156  006196  0E00               	movlw	0
 20157  006198  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20158  00619A  0E00               	movlw	0
 20159  00619C  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20160  00619E  0E00               	movlw	0
 20161  0061A0  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20162  0061A2  0E00               	movlw	0
 20163  0061A4  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20164                           
 20165                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20166  0061A6  0E00               	movlw	0
 20167  0061A8  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20168  0061AA  0E00               	movlw	0
 20169  0061AC  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20170                           
 20171                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20172  0061AE  0E00               	movlw	0
 20173  0061B0  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20174  0061B2  0E00               	movlw	0
 20175  0061B4  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20176                           
 20177                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20178  0061B6  0E00               	movlw	0
 20179  0061B8  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20180  0061BA  0E00               	movlw	0
 20181  0061BC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20182  0061BE  0E00               	movlw	0
 20183  0061C0  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20184  0061C2  0E00               	movlw	0
 20185  0061C4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20186                           
 20187                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20188  0061C6  0E00               	movlw	0
 20189  0061C8  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20190  0061CA  0E00               	movlw	0
 20191  0061CC  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20192  0061CE  0E00               	movlw	0
 20193  0061D0  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20194  0061D2  0E00               	movlw	0
 20195  0061D4  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20196                           
 20197                           ; BSR set to: 0
 20198                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20199  0061D6  A48D               	btfss	141,2,c	;volatile
 20200                           
 20201                           ; BSR set to: 0
 20202  0061D8  B28D               	btfsc	141,1,c	;volatile
 20203  0061DA  D015               	goto	l20515
 20204                           
 20205                           ; BSR set to: 0
 20206  0061DC  A08E               	btfss	142,0,c	;volatile
 20207                           
 20208                           ; BSR set to: 0
 20209  0061DE  BA8D               	btfsc	141,5,c	;volatile
 20210  0061E0  D012               	goto	l20515
 20211                           
 20212                           ; BSR set to: 0
 20213                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20214  0061E2  0E00               	movlw	0
 20215  0061E4  0101               	movlb	1	; () banked
 20216  0061E6  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20217  0061E8  0E00               	movlw	0
 20218  0061EA  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20219  0061EC  0E00               	movlw	0
 20220  0061EE  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20221  0061F0  0E00               	movlw	0
 20222  0061F2  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20223                           
 20224                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20225  0061F4  0E00               	movlw	0
 20226  0061F6  0100               	movlb	0	; () banked
 20227  0061F8  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20228  0061FA  0E00               	movlw	0
 20229  0061FC  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20230  0061FE  0E00               	movlw	0
 20231  006200  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20232  006202  0E00               	movlw	0
 20233  006204  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20234  006206                     l20515:
 20235                           
 20236                           ; BSR set to: 0
 20237                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20238  006206  0E02               	movlw	2
 20239  006208  EC97  F047         	call	_SaveNVM_VarSystem
 20240                           
 20241                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20242  00620C  0E03               	movlw	3
 20243  00620E  EC97  F047         	call	_SaveNVM_VarSystem
 20244  006212  0012               	return		;funcret
 20245  006214                     __end_of_ResetDefaultMemory:
 20246                           	callstack 0
 20247                           
 20248 ;; *************** function _I2C1_Read1ByteRegister *****************
 20249 ;; Defined at:
 20250 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  address         1    wreg     unsigned char 
 20253 ;;  reg             1   33[COMRAM] unsigned char 
 20254 ;; Auto vars:     Size  Location     Type
 20255 ;;  address         1   34[COMRAM] unsigned char 
 20256 ;;  returnValue     1   35[COMRAM] unsigned char 
 20257 ;; Return value:  Size  Location     Type
 20258 ;;                  1    wreg      unsigned char 
 20259 ;; Registers used:
 20260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20261 ;; Tracked objects:
 20262 ;;		On entry : 31/0
 20263 ;;		On exit  : 33/2
 20264 ;;		Unchanged: 0/0
 20265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20266 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20270 ;;Total ram usage:        3 bytes
 20271 ;; Hardware stack levels used: 1
 20272 ;; Hardware stack levels required when called: 12
 20273 ;; This function calls:
 20274 ;;		_I2C1_Close
 20275 ;;		_I2C1_MasterWrite
 20276 ;;		_I2C1_Open
 20277 ;;		_I2C1_SetAddressNackCallback
 20278 ;;		_I2C1_SetBuffer
 20279 ;;		_I2C1_SetDataCompleteCallback
 20280 ;; This function is called by:
 20281 ;;		_loadNVM_VarSystem
 20282 ;; This function uses a non-reentrant model
 20283 ;;
 20284                           
 20285                           	psect	text72
 20286  0087D6                     __ptext72:
 20287                           	callstack 0
 20288  0087D6                     _I2C1_Read1ByteRegister:
 20289                           	callstack 17
 20290                           
 20291                           ;incstack = 0
 20292                           ;I2C1_Read1ByteRegister@address stored from wreg
 20293  0087D6  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20294                           
 20295                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20296  0087D8  0E00               	movlw	0
 20297  0087DA  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20298  0087DC                     l21669:
 20299  0087DC  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20300  0087DE  EC12  F03F         	call	_I2C1_Open
 20301  0087E2  0900               	iorlw	0
 20302  0087E4  B4D8               	btfsc	status,2,c
 20303  0087E6  D7FA               	goto	l21669
 20304                           
 20305                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20306  0087E8  0E90               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20307  0087EA  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20308  0087EC  0E91               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20309  0087EE  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20310  0087F0  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20311  0087F2  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20312  0087F4  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20313  0087F6  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20314                           
 20315                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20316  0087FA  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20317  0087FC  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20318  0087FE  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20319  008800  0E00               	movlw	0
 20320  008802  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20321  008804  0E01               	movlw	1
 20322  008806  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20323  008808  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 20324                           
 20325                           ; BSR set to: 2
 20326                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20327  00880C  0E00               	movlw	0
 20328  00880E  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20329  008810  0E00               	movlw	0
 20330  008812  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20331  008814  0E00               	movlw	0
 20332  008816  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20333  008818  0E00               	movlw	0
 20334  00881A  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20335  00881C  ECDC  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 20336                           
 20337                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20338  008820  ECAA  F04B         	call	_I2C1_MasterWrite	;wreg free
 20339  008824                     l21679:
 20340  008824  EC1D  F04A         	call	_I2C1_Close	;wreg free
 20341  008828  06E8               	decf	wreg,f,c
 20342  00882A  B4D8               	btfsc	status,2,c
 20343  00882C  D7FB               	goto	l21679
 20344                           
 20345                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20346  00882E  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20347  008830  0012               	return		;funcret
 20348  008832                     __end_of_I2C1_Read1ByteRegister:
 20349                           	callstack 0
 20350                           
 20351 ;; *************** function _getKeyPressed *****************
 20352 ;; Defined at:
 20353 ;;		line 217 in file "inputs_MC50.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;  temp            1   15[COMRAM] char 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  1    wreg      char 
 20360 ;; Registers used:
 20361 ;;		wreg, status,2, status,0
 20362 ;; Tracked objects:
 20363 ;;		On entry : 3E/1
 20364 ;;		On exit  : 3D/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20371 ;;Total ram usage:        1 bytes
 20372 ;; Hardware stack levels used: 1
 20373 ;; Hardware stack levels required when called: 4
 20374 ;; This function calls:
 20375 ;;		Nothing
 20376 ;; This function is called by:
 20377 ;;		_main
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381                           	psect	text73
 20382  0095A0                     __ptext73:
 20383                           	callstack 0
 20384  0095A0                     _getKeyPressed:
 20385                           	callstack 26
 20386                           
 20387                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20388                           
 20389                           ;incstack = 0
 20390  0095A0  6810               	setf	getKeyPressed@temp^0,c
 20391                           
 20392                           ;inputs_MC50.c: 219:     if(RFFull)
 20393  0095A2  0100               	movlb	0	; () banked
 20394  0095A4  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20395  0095A6  B4D8               	btfsc	status,2,c
 20396  0095A8  D005               	goto	l16845
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20400  0095AA  0102               	movlb	2	; () banked
 20401  0095AC  39D1               	swapf	(_BufferRF+7)& (0+255),w,b
 20402  0095AE  0B0F               	andlw	15
 20403  0095B0  0B0F               	andlw	15
 20404  0095B2  6E10               	movwf	getKeyPressed@temp^0,c
 20405  0095B4                     l16845:
 20406                           
 20407                           ;inputs_MC50.c: 223:     return temp;
 20408  0095B4  5010               	movf	getKeyPressed@temp^0,w,c
 20409  0095B6  0012               	return		;funcret
 20410  0095B8                     __end_of_getKeyPressed:
 20411                           	callstack 0
 20412                           
 20413 ;; *************** function _eusartparser *****************
 20414 ;; Defined at:
 20415 ;;		line 458 in file "eusartparser.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;  package         1    8[BANK0 ] PTR struct package_t
 20418 ;;		 -> main@package(7), 
 20419 ;; Auto vars:     Size  Location     Type
 20420 ;;  i               1   21[BANK0 ] unsigned char 
 20421 ;;  i               1   22[BANK0 ] unsigned char 
 20422 ;;  i               1   23[BANK0 ] unsigned char 
 20423 ;;  i               1   20[BANK0 ] unsigned char 
 20424 ;;  i               1   19[BANK0 ] unsigned char 
 20425 ;;  i               1   17[BANK0 ] unsigned char 
 20426 ;;  i               1   16[BANK0 ] unsigned char 
 20427 ;;  a               7    0        struct package_t
 20428 ;;  serial          4   24[BANK0 ] unsigned long 
 20429 ;;  relcounter      1   18[BANK0 ] unsigned char 
 20430 ;;  pos             1   15[BANK0 ] unsigned char 
 20431 ;; Return value:  Size  Location     Type
 20432 ;;                  1    wreg      void 
 20433 ;; Registers used:
 20434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20435 ;; Tracked objects:
 20436 ;;		On entry : 3F/0
 20437 ;;		On exit  : 0/0
 20438 ;;		Unchanged: 0/0
 20439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20440 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20441 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20442 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20443 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20444 ;;Total ram usage:       20 bytes
 20445 ;; Hardware stack levels used: 1
 20446 ;; Hardware stack levels required when called: 14
 20447 ;; This function calls:
 20448 ;;		_ReadSerial
 20449 ;;		_RemoveSerial
 20450 ;;		_SaveNVM_VarSystem
 20451 ;;		_cmdMemoryIsEmpty
 20452 ;;		_confirmpackage
 20453 ;;		_read_eusartparser
 20454 ;;		_saveNewSerial
 20455 ;;		_validateRemoteSerialNumber
 20456 ;;		_write_eusartparser
 20457 ;;		_write_package
 20458 ;; This function is called by:
 20459 ;;		_main
 20460 ;; This function uses a non-reentrant model
 20461 ;;
 20462                           
 20463                           	psect	text74
 20464  001F94                     __ptext74:
 20465                           	callstack 0
 20466  001F94                     _eusartparser:
 20467                           	callstack 16
 20468                           
 20469                           ; BSR set to: 0
 20470                           ;eusartparser.c: 459:         struct package_t a;;eusartparser.c: 460:         uint8_t r
      +                          elcounter;;eusartparser.c: 461:         static _Bool save_f=0;;eusartparser.c: 462:     
      +                              static uint16_t buffer=0x0000;;eusartparser.c: 463:         uint32_t serial;;eusartp
      +                          arser.c: 464:         char pos;;eusartparser.c: 466:         switch(package->functioncod
      +                          e){
 20471                           
 20472                           ;incstack = 0
 20473  001F94  D264               	goto	l23587
 20474  001F96                     l23341:
 20475                           
 20476                           ; BSR set to: 0
 20477                           ;eusartparser.c: 468:                 read_eusartparser(package);
 20478  001F96  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20479  001F9A  EC66  F017         	call	_read_eusartparser	;wreg free
 20480  001F9E                     l23343:
 20481                           
 20482                           ;eusartparser.c: 469:                 confirmpackage(package, 1);
 20483  001F9E  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 20484  001FA2  0E01               	movlw	1
 20485  001FA4  6E12               	movwf	confirmpackage@confirm^0,c
 20486  001FA6  ECBD  F045         	call	_confirmpackage	;wreg free
 20487  001FAA                     l23345:
 20488                           
 20489                           ;eusartparser.c: 470:                 write_package(*package);
 20490  001FAA  0100               	movlb	0	; () banked
 20491  001FAC  51E0               	movf	eusartparser@package& (0+255),w,b
 20492  001FAE  6ED9               	movwf	fsr2l,c
 20493  001FB0  6ADA               	clrf	fsr2h,c
 20494  001FB2  EE00  F011         	lfsr	0,write_package@package
 20495  001FB6  0E06               	movlw	6
 20496  001FB8                     u28411:
 20497  001FB8  CFDB FFEB          	movff	plusw2,plusw0
 20498  001FBC  06E8               	decf	wreg,f,c
 20499  001FBE  E2FC               	bc	u28411
 20500  001FC0  EC44  F048         	call	_write_package	;wreg free
 20501                           
 20502                           ;eusartparser.c: 471:                 break;
 20503  001FC4  0012               	return	
 20504  001FC6                     l23347:
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;eusartparser.c: 474:                 if(programmer_enable){
 20508  001FC6  5185               	movf	_programmer_enable& (0+255),w,b
 20509  001FC8  B4D8               	btfsc	status,2,c
 20510  001FCA  D00D               	goto	l23355
 20511                           
 20512                           ; BSR set to: 0
 20513                           ;eusartparser.c: 475:                     write_eusartparser(*package);
 20514  001FCC  51E0               	movf	eusartparser@package& (0+255),w,b
 20515  001FCE  6ED9               	movwf	fsr2l,c
 20516  001FD0  6ADA               	clrf	fsr2h,c
 20517  001FD2  EE00  F010         	lfsr	0,write_eusartparser@package
 20518  001FD6  0E06               	movlw	6
 20519  001FD8                     u28431:
 20520  001FD8  CFDB FFEB          	movff	plusw2,plusw0
 20521  001FDC  06E8               	decf	wreg,f,c
 20522  001FDE  E2FC               	bc	u28431
 20523  001FE0  ECEA  F019         	call	_write_eusartparser	;wreg free
 20524  001FE4  D7DC               	goto	l23343
 20525  001FE6                     l23355:
 20526                           
 20527                           ; BSR set to: 0
 20528                           ;eusartparser.c: 480:                     confirmpackage(package, 0);
 20529  001FE6  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 20530  001FEA  0E00               	movlw	0
 20531  001FEC  6E12               	movwf	confirmpackage@confirm^0,c
 20532  001FEE  ECBD  F045         	call	_confirmpackage	;wreg free
 20533  001FF2  D7DB               	goto	l23345
 20534  001FF4                     l23359:
 20535                           
 20536                           ; BSR set to: 0
 20537                           ;eusartparser.c: 486:                 if(programmer_enable){
 20538  001FF4  5185               	movf	_programmer_enable& (0+255),w,b
 20539  001FF6  B4D8               	btfsc	status,2,c
 20540  001FF8  D008               	goto	l23365
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;eusartparser.c: 487:                     SaveNVM_VarSystem(pageMemoryE);
 20544  001FFA  0E01               	movlw	1
 20545  001FFC  EC97  F047         	call	_SaveNVM_VarSystem
 20546                           
 20547                           ;eusartparser.c: 488:                     SaveNVM_VarSystem(pageMemoryP);
 20548  002000  0E00               	movlw	0
 20549  002002  EC97  F047         	call	_SaveNVM_VarSystem
 20550                           
 20551                           ;eusartparser.c: 489:                     programmer_enable=0;
 20552  002006  0E00               	movlw	0
 20553  002008  D005               	goto	L83
 20554  00200A                     l23365:
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;eusartparser.c: 492:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 20558  00200A  0101               	movlb	1	; () banked
 20559  00200C  51EE               	movf	_main_stateMachine& (0+255),w,b
 20560  00200E  A4D8               	btfss	status,2,c
 20561  002010  D004               	goto	l23369
 20562                           
 20563                           ; BSR set to: 1
 20564                           ;eusartparser.c: 493:                         programmer_enable=1;
 20565  002012  0E01               	movlw	1
 20566  002014                     L83:
 20567  002014  0100               	movlb	0	; () banked
 20568  002016  6F85               	movwf	_programmer_enable& (0+255),b
 20569  002018  D017               	goto	l23377
 20570  00201A                     l23369:
 20571                           
 20572                           ; BSR set to: 1
 20573                           ;eusartparser.c: 495:                         package->data.data16=(uint16_t)2;
 20574  00201A  0100               	movlb	0	; () banked
 20575  00201C  51E0               	movf	eusartparser@package& (0+255),w,b
 20576  00201E  6ED9               	movwf	fsr2l,c
 20577  002020  6ADA               	clrf	fsr2h,c
 20578  002022  0E02               	movlw	2
 20579  002024  26D9               	addwf	fsr2l,f,c
 20580  002026  0E02               	movlw	2
 20581  002028  6EDE               	movwf	postinc2,c
 20582  00202A  0E00               	movlw	0
 20583  00202C  6EDD               	movwf	postdec2,c
 20584  00202E                     l23371:
 20585                           
 20586                           ; BSR set to: 0
 20587                           ;eusartparser.c: 496:                         write_package(*package);
 20588  00202E  51E0               	movf	eusartparser@package& (0+255),w,b
 20589  002030  6ED9               	movwf	fsr2l,c
 20590  002032  6ADA               	clrf	fsr2h,c
 20591  002034  EE00  F011         	lfsr	0,write_package@package
 20592  002038  0E06               	movlw	6
 20593  00203A                     u28461:
 20594  00203A  CFDB FFEB          	movff	plusw2,plusw0
 20595  00203E  06E8               	decf	wreg,f,c
 20596  002040  E2FC               	bc	u28461
 20597  002042  EC44  F048         	call	_write_package	;wreg free
 20598  002046  D7AB               	goto	l23343
 20599  002048                     l23377:
 20600                           
 20601                           ; BSR set to: 0
 20602                           ;eusartparser.c: 503:                 package->data.data16=(uint16_t)programmer_enable;
 20603  002048  5185               	movf	_programmer_enable& (0+255),w,b
 20604  00204A  6FE1               	movwf	??_eusartparser& (0+255),b
 20605  00204C  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20606  00204E  51E0               	movf	eusartparser@package& (0+255),w,b
 20607  002050  6ED9               	movwf	fsr2l,c
 20608  002052  6ADA               	clrf	fsr2h,c
 20609  002054  0E02               	movlw	2
 20610  002056  26D9               	addwf	fsr2l,f,c
 20611  002058  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20612  00205C  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20613  002060  D7E6               	goto	l23371
 20614  002062                     l23389:
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;eusartparser.c: 513:                     package->address=0x00;
 20618  002062  51E0               	movf	eusartparser@package& (0+255),w,b
 20619  002064  6ED9               	movwf	fsr2l,c
 20620  002066  6ADA               	clrf	fsr2h,c
 20621  002068  0E01               	movlw	1
 20622  00206A  26D9               	addwf	fsr2l,f,c
 20623  00206C  0E00               	movlw	0
 20624  00206E  6EDF               	movwf	indf2,c
 20625                           
 20626                           ;eusartparser.c: 514:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esFull;
 20627  002070  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20628  002072  6FE1               	movwf	??_eusartparser& (0+255),b
 20629  002074  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20630  002076  51E0               	movf	eusartparser@package& (0+255),w,b
 20631  002078  6ED9               	movwf	fsr2l,c
 20632  00207A  6ADA               	clrf	fsr2h,c
 20633  00207C  0E02               	movlw	2
 20634  00207E  26D9               	addwf	fsr2l,f,c
 20635  002080  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20636  002084  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20637                           
 20638                           ; BSR set to: 0
 20639                           ;eusartparser.c: 515:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesF
      +                          ull;i++)
 20640  002088  0E00               	movlw	0
 20641  00208A  6FE8               	movwf	eusartparser@i& (0+255),b
 20642  00208C  D013               	goto	l23399
 20643  00208E                     l23393:
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;eusartparser.c: 516:                     if(cmdMemoryIsEmpty(0,i)==1)
 20647  00208E  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20648  002092  0E00               	movlw	0
 20649  002094  ECE5  F03C         	call	_cmdMemoryIsEmpty
 20650  002098  06E8               	decf	wreg,f,c
 20651  00209A  A4D8               	btfss	status,2,c
 20652  00209C  D009               	goto	l23397
 20653                           
 20654                           ;eusartparser.c: 517:                         package->data.data16--;
 20655  00209E  0100               	movlb	0	; () banked
 20656  0020A0  51E0               	movf	eusartparser@package& (0+255),w,b
 20657  0020A2  6ED9               	movwf	fsr2l,c
 20658  0020A4  6ADA               	clrf	fsr2h,c
 20659  0020A6  0E02               	movlw	2
 20660  0020A8  26D9               	addwf	fsr2l,f,c
 20661  0020AA  06DE               	decf	postinc2,f,c
 20662  0020AC  0E00               	movlw	0
 20663  0020AE  5ADD               	subwfb	postdec2,f,c
 20664  0020B0                     l23397:
 20665  0020B0  0100               	movlb	0	; () banked
 20666  0020B2  2BE8               	incf	eusartparser@i& (0+255),f,b
 20667  0020B4                     l23399:
 20668                           
 20669                           ; BSR set to: 0
 20670  0020B4  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20671  0020B6  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20672  0020B8  B0D8               	btfsc	status,0,c
 20673  0020BA  D7B9               	goto	l23371
 20674  0020BC  D7E8               	goto	l23393
 20675  0020BE                     l23407:
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;eusartparser.c: 524:                 package->address=0x00;
 20679  0020BE  51E0               	movf	eusartparser@package& (0+255),w,b
 20680  0020C0  6ED9               	movwf	fsr2l,c
 20681  0020C2  6ADA               	clrf	fsr2h,c
 20682  0020C4  0E01               	movlw	1
 20683  0020C6  26D9               	addwf	fsr2l,f,c
 20684  0020C8  0E00               	movlw	0
 20685  0020CA  6EDF               	movwf	indf2,c
 20686                           
 20687                           ;eusartparser.c: 525:                 package->data.data16=0;
 20688  0020CC  51E0               	movf	eusartparser@package& (0+255),w,b
 20689  0020CE  6ED9               	movwf	fsr2l,c
 20690  0020D0  6ADA               	clrf	fsr2h,c
 20691  0020D2  0E02               	movlw	2
 20692  0020D4  26D9               	addwf	fsr2l,f,c
 20693  0020D6  0E00               	movlw	0
 20694  0020D8  6EDE               	movwf	postinc2,c
 20695  0020DA  0E00               	movlw	0
 20696  0020DC  6EDD               	movwf	postdec2,c
 20697                           
 20698                           ; BSR set to: 0
 20699                           ;eusartparser.c: 526:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20700  0020DE  0E00               	movlw	0
 20701  0020E0  6FE9               	movwf	eusartparser@i_7280& (0+255),b
 20702  0020E2  D013               	goto	l23417
 20703  0020E4                     l23411:
 20704                           
 20705                           ; BSR set to: 0
 20706                           ;eusartparser.c: 527:                 if(cmdMemoryIsEmpty(0,i)==1)
 20707  0020E4  C0E9  F02E         	movff	eusartparser@i_7280,cmdMemoryIsEmpty@position
 20708  0020E8  0E00               	movlw	0
 20709  0020EA  ECE5  F03C         	call	_cmdMemoryIsEmpty
 20710  0020EE  06E8               	decf	wreg,f,c
 20711  0020F0  A4D8               	btfss	status,2,c
 20712  0020F2  D009               	goto	l23415
 20713                           
 20714                           ;eusartparser.c: 528:                     package->data.data16++;
 20715  0020F4  0100               	movlb	0	; () banked
 20716  0020F6  51E0               	movf	eusartparser@package& (0+255),w,b
 20717  0020F8  6ED9               	movwf	fsr2l,c
 20718  0020FA  6ADA               	clrf	fsr2h,c
 20719  0020FC  0E02               	movlw	2
 20720  0020FE  26D9               	addwf	fsr2l,f,c
 20721  002100  2ADE               	incf	postinc2,f,c
 20722  002102  0E00               	movlw	0
 20723  002104  22DD               	addwfc	postdec2,f,c
 20724  002106                     l23415:
 20725  002106  0100               	movlb	0	; () banked
 20726  002108  2BE9               	incf	eusartparser@i_7280& (0+255),f,b
 20727  00210A                     l23417:
 20728                           
 20729                           ; BSR set to: 0
 20730  00210A  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20731  00210C  5DE9               	subwf	eusartparser@i_7280& (0+255),w,b
 20732  00210E  B0D8               	btfsc	status,0,c
 20733  002110  D78E               	goto	l23371
 20734  002112  D7E8               	goto	l23411
 20735  002114                     l23425:
 20736                           
 20737                           ; BSR set to: 0
 20738                           ;eusartparser.c: 534:                 relcounter=0;
 20739  002114  0E00               	movlw	0
 20740  002116  6FEA               	movwf	eusartparser@relcounter& (0+255),b
 20741                           
 20742                           ;eusartparser.c: 535:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20743  002118  0E00               	movlw	0
 20744  00211A  6FEB               	movwf	eusartparser@i_7281& (0+255),b
 20745  00211C  D02B               	goto	l23437
 20746  00211E                     l23427:
 20747                           
 20748                           ; BSR set to: 0
 20749                           ;eusartparser.c: 536:                     if(cmdMemoryIsEmpty(0,i)==0){
 20750  00211E  C0EB  F02E         	movff	eusartparser@i_7281,cmdMemoryIsEmpty@position
 20751  002122  0E00               	movlw	0
 20752  002124  ECE5  F03C         	call	_cmdMemoryIsEmpty
 20753  002128  0900               	iorlw	0
 20754  00212A  A4D8               	btfss	status,2,c
 20755  00212C  D021               	goto	l23435
 20756                           
 20757                           ;eusartparser.c: 537:                         package->data.data16=(uint16_t)i;
 20758  00212E  0100               	movlb	0	; () banked
 20759  002130  51EB               	movf	eusartparser@i_7281& (0+255),w,b
 20760  002132  6FE1               	movwf	??_eusartparser& (0+255),b
 20761  002134  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20762  002136  51E0               	movf	eusartparser@package& (0+255),w,b
 20763  002138  6ED9               	movwf	fsr2l,c
 20764  00213A  6ADA               	clrf	fsr2h,c
 20765  00213C  0E02               	movlw	2
 20766  00213E  26D9               	addwf	fsr2l,f,c
 20767  002140  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20768  002144  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20769                           
 20770                           ;eusartparser.c: 538:                         package->address=relcounter;
 20771  002148  51E0               	movf	eusartparser@package& (0+255),w,b
 20772  00214A  6ED9               	movwf	fsr2l,c
 20773  00214C  6ADA               	clrf	fsr2h,c
 20774  00214E  0E01               	movlw	1
 20775  002150  26D9               	addwf	fsr2l,f,c
 20776  002152  C0EA  FFDF         	movff	eusartparser@relcounter,indf2
 20777                           
 20778                           ; BSR set to: 0
 20779                           ;eusartparser.c: 539:                         relcounter++;
 20780  002156  2BEA               	incf	eusartparser@relcounter& (0+255),f,b
 20781                           
 20782                           ; BSR set to: 0
 20783                           ;eusartparser.c: 540:                         write_package(*package);
 20784  002158  51E0               	movf	eusartparser@package& (0+255),w,b
 20785  00215A  6ED9               	movwf	fsr2l,c
 20786  00215C  6ADA               	clrf	fsr2h,c
 20787  00215E  EE00  F011         	lfsr	0,write_package@package
 20788  002162  0E06               	movlw	6
 20789  002164                     u28521:
 20790  002164  CFDB FFEB          	movff	plusw2,plusw0
 20791  002168  06E8               	decf	wreg,f,c
 20792  00216A  E2FC               	bc	u28521
 20793  00216C  EC44  F048         	call	_write_package	;wreg free
 20794  002170                     l23435:
 20795  002170  0100               	movlb	0	; () banked
 20796  002172  2BEB               	incf	eusartparser@i_7281& (0+255),f,b
 20797  002174                     l23437:
 20798                           
 20799                           ; BSR set to: 0
 20800  002174  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20801  002176  5DEB               	subwf	eusartparser@i_7281& (0+255),w,b
 20802  002178  B0D8               	btfsc	status,0,c
 20803  00217A  D711               	goto	l23343
 20804  00217C  D7D0               	goto	l23427
 20805  00217E                     l23443:
 20806                           
 20807                           ; BSR set to: 0
 20808                           ;eusartparser.c: 546:                 relcounter=0;
 20809  00217E  0E00               	movlw	0
 20810  002180  6FEA               	movwf	eusartparser@relcounter& (0+255),b
 20811                           
 20812                           ;eusartparser.c: 547:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20813  002182  0E00               	movlw	0
 20814  002184  6FEC               	movwf	eusartparser@i_7282& (0+255),b
 20815  002186  D02B               	goto	l23455
 20816  002188                     l23445:
 20817                           
 20818                           ; BSR set to: 0
 20819                           ;eusartparser.c: 548:                     if(cmdMemoryIsEmpty(0,i)==1){
 20820  002188  C0EC  F02E         	movff	eusartparser@i_7282,cmdMemoryIsEmpty@position
 20821  00218C  0E00               	movlw	0
 20822  00218E  ECE5  F03C         	call	_cmdMemoryIsEmpty
 20823  002192  06E8               	decf	wreg,f,c
 20824  002194  A4D8               	btfss	status,2,c
 20825  002196  D021               	goto	l23453
 20826                           
 20827                           ;eusartparser.c: 549:                         package->data.data16=(uint16_t)i;
 20828  002198  0100               	movlb	0	; () banked
 20829  00219A  51EC               	movf	eusartparser@i_7282& (0+255),w,b
 20830  00219C  6FE1               	movwf	??_eusartparser& (0+255),b
 20831  00219E  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20832  0021A0  51E0               	movf	eusartparser@package& (0+255),w,b
 20833  0021A2  6ED9               	movwf	fsr2l,c
 20834  0021A4  6ADA               	clrf	fsr2h,c
 20835  0021A6  0E02               	movlw	2
 20836  0021A8  26D9               	addwf	fsr2l,f,c
 20837  0021AA  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20838  0021AE  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20839                           
 20840                           ;eusartparser.c: 550:                         package->address=relcounter;
 20841  0021B2  51E0               	movf	eusartparser@package& (0+255),w,b
 20842  0021B4  6ED9               	movwf	fsr2l,c
 20843  0021B6  6ADA               	clrf	fsr2h,c
 20844  0021B8  0E01               	movlw	1
 20845  0021BA  26D9               	addwf	fsr2l,f,c
 20846  0021BC  C0EA  FFDF         	movff	eusartparser@relcounter,indf2
 20847                           
 20848                           ; BSR set to: 0
 20849                           ;eusartparser.c: 551:                         relcounter++;
 20850  0021C0  2BEA               	incf	eusartparser@relcounter& (0+255),f,b
 20851                           
 20852                           ; BSR set to: 0
 20853                           ;eusartparser.c: 552:                         write_package(*package);
 20854  0021C2  51E0               	movf	eusartparser@package& (0+255),w,b
 20855  0021C4  6ED9               	movwf	fsr2l,c
 20856  0021C6  6ADA               	clrf	fsr2h,c
 20857  0021C8  EE00  F011         	lfsr	0,write_package@package
 20858  0021CC  0E06               	movlw	6
 20859  0021CE                     u28551:
 20860  0021CE  CFDB FFEB          	movff	plusw2,plusw0
 20861  0021D2  06E8               	decf	wreg,f,c
 20862  0021D4  E2FC               	bc	u28551
 20863  0021D6  EC44  F048         	call	_write_package	;wreg free
 20864  0021DA                     l23453:
 20865  0021DA  0100               	movlb	0	; () banked
 20866  0021DC  2BEC               	incf	eusartparser@i_7282& (0+255),f,b
 20867  0021DE                     l23455:
 20868                           
 20869                           ; BSR set to: 0
 20870  0021DE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20871  0021E0  5DEC               	subwf	eusartparser@i_7282& (0+255),w,b
 20872  0021E2  B0D8               	btfsc	status,0,c
 20873  0021E4  D6DC               	goto	l23343
 20874  0021E6  D7D0               	goto	l23445
 20875  0021E8                     l23461:
 20876                           
 20877                           ; BSR set to: 0
 20878                           ;eusartparser.c: 558:                 if(programmer_enable){
 20879  0021E8  5185               	movf	_programmer_enable& (0+255),w,b
 20880  0021EA  B4D8               	btfsc	status,2,c
 20881  0021EC  D6FC               	goto	l23355
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;eusartparser.c: 559:                     if(save_f==0){
 20885  0021EE  0101               	movlb	1	; () banked
 20886  0021F0  518B               	movf	eusartparser@save_f& (0+255),w,b
 20887  0021F2  A4D8               	btfss	status,2,c
 20888  0021F4  D021               	goto	l23473
 20889                           
 20890                           ; BSR set to: 1
 20891                           ;eusartparser.c: 560:                         buffer=package->data.data16;
 20892  0021F6  0100               	movlb	0	; () banked
 20893  0021F8  51E0               	movf	eusartparser@package& (0+255),w,b
 20894  0021FA  6ED9               	movwf	fsr2l,c
 20895  0021FC  6ADA               	clrf	fsr2h,c
 20896  0021FE  0E02               	movlw	2
 20897  002200  26D9               	addwf	fsr2l,f,c
 20898  002202  CFDE F28C          	movff	postinc2,eusartparser@buffer
 20899  002206  CFDD F28D          	movff	postdec2,eusartparser@buffer+1
 20900                           
 20901                           ; BSR set to: 0
 20902                           ;eusartparser.c: 561:                         confirmpackage(package, 1);
 20903  00220A  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 20904  00220E  0E01               	movlw	1
 20905  002210  6E12               	movwf	confirmpackage@confirm^0,c
 20906  002212  ECBD  F045         	call	_confirmpackage	;wreg free
 20907                           
 20908                           ;eusartparser.c: 562:                         write_package(*package);
 20909  002216  0100               	movlb	0	; () banked
 20910  002218  51E0               	movf	eusartparser@package& (0+255),w,b
 20911  00221A  6ED9               	movwf	fsr2l,c
 20912  00221C  6ADA               	clrf	fsr2h,c
 20913  00221E  EE00  F011         	lfsr	0,write_package@package
 20914  002222  0E06               	movlw	6
 20915  002224                     u28591:
 20916  002224  CFDB FFEB          	movff	plusw2,plusw0
 20917  002228  06E8               	decf	wreg,f,c
 20918  00222A  E2FC               	bc	u28591
 20919  00222C  EC44  F048         	call	_write_package	;wreg free
 20920                           
 20921                           ;eusartparser.c: 563:                         save_f=1;
 20922  002230  0E01               	movlw	1
 20923  002232  0101               	movlb	1	; () banked
 20924  002234  6F8B               	movwf	eusartparser@save_f& (0+255),b
 20925                           
 20926                           ;eusartparser.c: 564:                     }
 20927  002236  0012               	return	
 20928  002238                     l23473:
 20929                           
 20930                           ; BSR set to: 1
 20931                           ;eusartparser.c: 566:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 20932  002238  0100               	movlb	0	; () banked
 20933  00223A  51E0               	movf	eusartparser@package& (0+255),w,b
 20934  00223C  6ED9               	movwf	fsr2l,c
 20935  00223E  6ADA               	clrf	fsr2h,c
 20936  002240  0E02               	movlw	2
 20937  002242  26D9               	addwf	fsr2l,f,c
 20938  002244  CFDE F0E1          	movff	postinc2,??_eusartparser
 20939  002248  CFDD F0E2          	movff	postdec2,??_eusartparser+1
 20940  00224C  0102               	movlb	2	; () banked
 20941  00224E  518C               	movf	eusartparser@buffer& (0+255),w,b
 20942  002250  0100               	movlb	0	; () banked
 20943  002252  6FE3               	movwf	(??_eusartparser+2)& (0+255),b
 20944  002254  0102               	movlb	2	; () banked
 20945  002256  518D               	movf	(eusartparser@buffer+1)& (0+255),w,b
 20946  002258  0100               	movlb	0	; () banked
 20947  00225A  6FE4               	movwf	(??_eusartparser+3)& (0+255),b
 20948  00225C  6BE5               	clrf	(??_eusartparser+4)& (0+255),b
 20949  00225E  6BE6               	clrf	(??_eusartparser+5)& (0+255),b
 20950  002260  C0E4  F0E6         	movff	??_eusartparser+3,??_eusartparser+5
 20951  002264  C0E3  F0E5         	movff	??_eusartparser+2,??_eusartparser+4
 20952  002268  6BE4               	clrf	(??_eusartparser+3)& (0+255),b
 20953  00226A  6BE3               	clrf	(??_eusartparser+2)& (0+255),b
 20954  00226C  51E1               	movf	??_eusartparser& (0+255),w,b
 20955  00226E  25E3               	addwf	(??_eusartparser+2)& (0+255),w,b
 20956  002270  6FF0               	movwf	eusartparser@serial& (0+255),b
 20957  002272  51E2               	movf	(??_eusartparser+1)& (0+255),w,b
 20958  002274  21E4               	addwfc	(??_eusartparser+3)& (0+255),w,b
 20959  002276  6FF1               	movwf	(eusartparser@serial+1)& (0+255),b
 20960  002278  0E00               	movlw	0
 20961  00227A  21E5               	addwfc	(??_eusartparser+4)& (0+255),w,b
 20962  00227C  6FF2               	movwf	(eusartparser@serial+2)& (0+255),b
 20963  00227E  0E00               	movlw	0
 20964  002280  21E6               	addwfc	(??_eusartparser+5)& (0+255),w,b
 20965  002282  6FF3               	movwf	(eusartparser@serial+3)& (0+255),b
 20966                           
 20967                           ; BSR set to: 0
 20968                           ;eusartparser.c: 567:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 20969  002284  C0F0  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 20970  002288  C0F1  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 20971  00228C  C0F2  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 20972  002290  C0F3  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 20973  002294  0E00               	movlw	0
 20974  002296  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 20975  002298  0EE7               	movlw	low eusartparser@pos
 20976  00229A  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 20977  00229C  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 20978  00229E  EC12  F02D         	call	_validateRemoteSerialNumber	;wreg free
 20979  0022A2  0900               	iorlw	0
 20980  0022A4  A4D8               	btfss	status,2,c
 20981  0022A6  D049               	goto	u28650
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;eusartparser.c: 568:                             for(uint8_t i=0;;i++)
 20985  0022A8  0E00               	movlw	0
 20986  0022AA  6FED               	movwf	eusartparser@i_7283& (0+255),b
 20987  0022AC                     l23479:
 20988                           
 20989                           ; BSR set to: 0
 20990                           ;eusartparser.c: 569:                                 if(cmdMemoryIsEmpty(0,i)==1&&packa
      +                          ge->address==0){
 20991  0022AC  C0ED  F02E         	movff	eusartparser@i_7283,cmdMemoryIsEmpty@position
 20992  0022B0  0E00               	movlw	0
 20993  0022B2  ECE5  F03C         	call	_cmdMemoryIsEmpty
 20994  0022B6  06E8               	decf	wreg,f,c
 20995  0022B8  A4D8               	btfss	status,2,c
 20996  0022BA  D02A               	goto	l23491
 20997  0022BC  0100               	movlb	0	; () banked
 20998  0022BE  51E0               	movf	eusartparser@package& (0+255),w,b
 20999  0022C0  6ED9               	movwf	fsr2l,c
 21000  0022C2  6ADA               	clrf	fsr2h,c
 21001  0022C4  0E01               	movlw	1
 21002  0022C6  26D9               	addwf	fsr2l,f,c
 21003  0022C8  50DF               	movf	indf2,w,c
 21004  0022CA  A4D8               	btfss	status,2,c
 21005  0022CC  D021               	goto	l23491
 21006                           
 21007                           ; BSR set to: 0
 21008                           ;eusartparser.c: 570:                                     saveNewSerial(0,serial,i);
 21009  0022CE  C0F0  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21010  0022D2  C0F1  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21011  0022D6  C0F2  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21012  0022DA  C0F3  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21013  0022DE  C0ED  F0DC         	movff	eusartparser@i_7283,saveNewSerial@position
 21014  0022E2  0E00               	movlw	0
 21015  0022E4  ECB4  F041         	call	_saveNewSerial
 21016  0022E8                     l23485:
 21017                           
 21018                           ;eusartparser.c: 571:                                     confirmpackage(package, 1);
 21019  0022E8  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 21020  0022EC  0E01               	movlw	1
 21021  0022EE  6E12               	movwf	confirmpackage@confirm^0,c
 21022  0022F0  ECBD  F045         	call	_confirmpackage	;wreg free
 21023  0022F4                     l23487:
 21024                           
 21025                           ;eusartparser.c: 572:                                     write_package(*package);
 21026  0022F4  0100               	movlb	0	; () banked
 21027  0022F6  51E0               	movf	eusartparser@package& (0+255),w,b
 21028  0022F8  6ED9               	movwf	fsr2l,c
 21029  0022FA  6ADA               	clrf	fsr2h,c
 21030  0022FC  EE00  F011         	lfsr	0,write_package@package
 21031  002300  0E06               	movlw	6
 21032  002302                     u28631:
 21033  002302  CFDB FFEB          	movff	plusw2,plusw0
 21034  002306  06E8               	decf	wreg,f,c
 21035  002308  E2FC               	bc	u28631
 21036  00230A  EC44  F048         	call	_write_package	;wreg free
 21037                           
 21038                           ;eusartparser.c: 573:                                     break;
 21039  00230E  D01E               	goto	l23507
 21040  002310                     l23491:
 21041  002310  C0ED  F02E         	movff	eusartparser@i_7283,cmdMemoryIsEmpty@position
 21042  002314  0E00               	movlw	0
 21043  002316  ECE5  F03C         	call	_cmdMemoryIsEmpty
 21044  00231A  06E8               	decf	wreg,f,c
 21045  00231C  A4D8               	btfss	status,2,c
 21046  00231E  D008               	goto	l23495
 21047                           
 21048                           ;eusartparser.c: 576:                                     package->address--;
 21049  002320  0100               	movlb	0	; () banked
 21050  002322  51E0               	movf	eusartparser@package& (0+255),w,b
 21051  002324  6ED9               	movwf	fsr2l,c
 21052  002326  6ADA               	clrf	fsr2h,c
 21053  002328  0E01               	movlw	1
 21054  00232A  26D9               	addwf	fsr2l,f,c
 21055  00232C  06DF               	decf	indf2,f,c
 21056                           
 21057                           ;eusartparser.c: 577:                                 }
 21058  00232E  D00C               	goto	l23501
 21059  002330                     l23495:
 21060  002330  0100               	movlb	0	; () banked
 21061  002332  51ED               	movf	eusartparser@i_7283& (0+255),w,b
 21062  002334  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21063  002336  A4D8               	btfss	status,2,c
 21064  002338  D007               	goto	l23501
 21065  00233A                     u28650:
 21066                           
 21067                           ; BSR set to: 0
 21068                           ;eusartparser.c: 579:                                     confirmpackage(package, 0);
 21069  00233A  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 21070  00233E  0E00               	movlw	0
 21071  002340  6E12               	movwf	confirmpackage@confirm^0,c
 21072  002342  ECBD  F045         	call	_confirmpackage	;wreg free
 21073  002346  D7D6               	goto	l23487
 21074  002348                     l23501:
 21075                           
 21076                           ; BSR set to: 0
 21077  002348  2BED               	incf	eusartparser@i_7283& (0+255),f,b
 21078  00234A  D7B0               	goto	l23479
 21079  00234C                     l23507:
 21080                           
 21081                           ;eusartparser.c: 588:                         save_f=0;
 21082  00234C  0E00               	movlw	0
 21083  00234E  0101               	movlb	1	; () banked
 21084  002350  6F8B               	movwf	eusartparser@save_f& (0+255),b
 21085  002352  0012               	return	
 21086  002354                     l23513:
 21087                           
 21088                           ; BSR set to: 0
 21089                           ;eusartparser.c: 597:                 if(programmer_enable){
 21090  002354  5185               	movf	_programmer_enable& (0+255),w,b
 21091  002356  B4D8               	btfsc	status,2,c
 21092  002358  D646               	goto	l23355
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;eusartparser.c: 598:                     for(uint8_t i=0;;i++)
 21096  00235A  0E00               	movlw	0
 21097  00235C  6FEE               	movwf	eusartparser@i_7284& (0+255),b
 21098  00235E                     l23517:
 21099                           
 21100                           ; BSR set to: 0
 21101                           ;eusartparser.c: 599:                         if(cmdMemoryIsEmpty(0,i)==0&&package->addr
      +                          ess==0){
 21102  00235E  C0EE  F02E         	movff	eusartparser@i_7284,cmdMemoryIsEmpty@position
 21103  002362  0E00               	movlw	0
 21104  002364  ECE5  F03C         	call	_cmdMemoryIsEmpty
 21105  002368  0900               	iorlw	0
 21106  00236A  A4D8               	btfss	status,2,c
 21107  00236C  D00F               	goto	l23531
 21108  00236E  0100               	movlb	0	; () banked
 21109  002370  51E0               	movf	eusartparser@package& (0+255),w,b
 21110  002372  6ED9               	movwf	fsr2l,c
 21111  002374  6ADA               	clrf	fsr2h,c
 21112  002376  0E01               	movlw	1
 21113  002378  26D9               	addwf	fsr2l,f,c
 21114  00237A  50DF               	movf	indf2,w,c
 21115  00237C  A4D8               	btfss	status,2,c
 21116  00237E  D006               	goto	l23531
 21117                           
 21118                           ; BSR set to: 0
 21119                           ;eusartparser.c: 600:                             RemoveSerial(0, i);
 21120  002380  C0EE  F03A         	movff	eusartparser@i_7284,RemoveSerial@position
 21121  002384  0E00               	movlw	0
 21122  002386  EC95  F03F         	call	_RemoveSerial
 21123  00238A  D7AE               	goto	l23485
 21124  00238C                     l23531:
 21125  00238C  C0EE  F02E         	movff	eusartparser@i_7284,cmdMemoryIsEmpty@position
 21126  002390  0E00               	movlw	0
 21127  002392  ECE5  F03C         	call	_cmdMemoryIsEmpty
 21128  002396  0900               	iorlw	0
 21129  002398  A4D8               	btfss	status,2,c
 21130  00239A  D008               	goto	l23535
 21131                           
 21132                           ;eusartparser.c: 607:                             package->address--;
 21133  00239C  0100               	movlb	0	; () banked
 21134  00239E  51E0               	movf	eusartparser@package& (0+255),w,b
 21135  0023A0  6ED9               	movwf	fsr2l,c
 21136  0023A2  6ADA               	clrf	fsr2h,c
 21137  0023A4  0E01               	movlw	1
 21138  0023A6  26D9               	addwf	fsr2l,f,c
 21139  0023A8  06DF               	decf	indf2,f,c
 21140                           
 21141                           ;eusartparser.c: 608:                         }
 21142  0023AA  D005               	goto	l23543
 21143  0023AC                     l23535:
 21144  0023AC  0100               	movlb	0	; () banked
 21145  0023AE  51EE               	movf	eusartparser@i_7284& (0+255),w,b
 21146  0023B0  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21147  0023B2  B4D8               	btfsc	status,2,c
 21148  0023B4  D7C2               	goto	u28650
 21149  0023B6                     l23543:
 21150                           
 21151                           ; BSR set to: 0
 21152  0023B6  2BEE               	incf	eusartparser@i_7284& (0+255),f,b
 21153  0023B8  D7D2               	goto	l23517
 21154  0023BA                     l23549:
 21155                           
 21156                           ; BSR set to: 0
 21157                           ;eusartparser.c: 622:                 for(uint8_t i=0;;i++)
 21158  0023BA  0E00               	movlw	0
 21159  0023BC  6FEF               	movwf	eusartparser@i_7285& (0+255),b
 21160  0023BE                     l23551:
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;eusartparser.c: 623:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21164  0023BE  C0EF  F02E         	movff	eusartparser@i_7285,cmdMemoryIsEmpty@position
 21165  0023C2  0E00               	movlw	0
 21166  0023C4  ECE5  F03C         	call	_cmdMemoryIsEmpty
 21167  0023C8  0900               	iorlw	0
 21168  0023CA  A4D8               	btfss	status,2,c
 21169  0023CC  D031               	goto	l23571
 21170  0023CE  0100               	movlb	0	; () banked
 21171  0023D0  51E0               	movf	eusartparser@package& (0+255),w,b
 21172  0023D2  6ED9               	movwf	fsr2l,c
 21173  0023D4  6ADA               	clrf	fsr2h,c
 21174  0023D6  0E01               	movlw	1
 21175  0023D8  26D9               	addwf	fsr2l,f,c
 21176  0023DA  50DF               	movf	indf2,w,c
 21177  0023DC  A4D8               	btfss	status,2,c
 21178  0023DE  D028               	goto	l23571
 21179                           
 21180                           ; BSR set to: 0
 21181                           ;eusartparser.c: 624:                         ReadSerial(0, &serial, i);
 21182  0023E0  0EF0               	movlw	low eusartparser@serial
 21183  0023E2  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21184  0023E4  C0EF  F02F         	movff	eusartparser@i_7285,ReadSerial@position
 21185  0023E8  0E00               	movlw	0
 21186  0023EA  ECEC  F041         	call	_ReadSerial
 21187                           
 21188                           ;eusartparser.c: 625:                         package->data.data16=(uint16_t)serial;
 21189  0023EE  0100               	movlb	0	; () banked
 21190  0023F0  51E0               	movf	eusartparser@package& (0+255),w,b
 21191  0023F2  6ED9               	movwf	fsr2l,c
 21192  0023F4  6ADA               	clrf	fsr2h,c
 21193  0023F6  0E02               	movlw	2
 21194  0023F8  26D9               	addwf	fsr2l,f,c
 21195  0023FA  C0F0  FFDE         	movff	eusartparser@serial,postinc2
 21196  0023FE  C0F1  FFDD         	movff	eusartparser@serial+1,postdec2
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;eusartparser.c: 626:                         write_package(*package);
 21200  002402  51E0               	movf	eusartparser@package& (0+255),w,b
 21201  002404  6ED9               	movwf	fsr2l,c
 21202  002406  6ADA               	clrf	fsr2h,c
 21203  002408  EE00  F011         	lfsr	0,write_package@package
 21204  00240C  0E06               	movlw	6
 21205  00240E                     u28731:
 21206  00240E  CFDB FFEB          	movff	plusw2,plusw0
 21207  002412  06E8               	decf	wreg,f,c
 21208  002414  E2FC               	bc	u28731
 21209  002416  EC44  F048         	call	_write_package	;wreg free
 21210                           
 21211                           ;eusartparser.c: 627:                         package->data.data16=(uint16_t)(serial>>16
      +                          );
 21212  00241A  0100               	movlb	0	; () banked
 21213  00241C  51E0               	movf	eusartparser@package& (0+255),w,b
 21214  00241E  6ED9               	movwf	fsr2l,c
 21215  002420  6ADA               	clrf	fsr2h,c
 21216  002422  0E02               	movlw	2
 21217  002424  26D9               	addwf	fsr2l,f,c
 21218  002426  C0F2  FFDE         	movff	eusartparser@serial+2,postinc2
 21219  00242A  C0F3  FFDD         	movff	eusartparser@serial+3,postdec2
 21220  00242E  D5FF               	goto	l23371
 21221  002430                     l23571:
 21222  002430  C0EF  F02E         	movff	eusartparser@i_7285,cmdMemoryIsEmpty@position
 21223  002434  0E00               	movlw	0
 21224  002436  ECE5  F03C         	call	_cmdMemoryIsEmpty
 21225  00243A  0900               	iorlw	0
 21226  00243C  A4D8               	btfss	status,2,c
 21227  00243E  D008               	goto	l23575
 21228                           
 21229                           ;eusartparser.c: 634:                         package->address--;
 21230  002440  0100               	movlb	0	; () banked
 21231  002442  51E0               	movf	eusartparser@package& (0+255),w,b
 21232  002444  6ED9               	movwf	fsr2l,c
 21233  002446  6ADA               	clrf	fsr2h,c
 21234  002448  0E01               	movlw	1
 21235  00244A  26D9               	addwf	fsr2l,f,c
 21236  00244C  06DF               	decf	indf2,f,c
 21237                           
 21238                           ;eusartparser.c: 635:                     }
 21239  00244E  D005               	goto	l23581
 21240  002450                     l23575:
 21241  002450  0100               	movlb	0	; () banked
 21242  002452  51EF               	movf	eusartparser@i_7285& (0+255),w,b
 21243  002454  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21244  002456  B4D8               	btfsc	status,2,c
 21245  002458  D5C6               	goto	l23355
 21246  00245A                     l23581:
 21247                           
 21248                           ; BSR set to: 0
 21249  00245A  2BEF               	incf	eusartparser@i_7285& (0+255),f,b
 21250  00245C  D7B0               	goto	l23551
 21251  00245E                     l23587:
 21252                           
 21253                           ; BSR set to: 0
 21254  00245E  51E0               	movf	eusartparser@package& (0+255),w,b
 21255  002460  6ED9               	movwf	fsr2l,c
 21256  002462  6ADA               	clrf	fsr2h,c
 21257  002464  50DF               	movf	indf2,w,c
 21258  002466  6FE1               	movwf	??_eusartparser& (0+255),b
 21259  002468  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 21260                           
 21261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21262                           ; Switch size 1, requested type "simple"
 21263                           ; Number of cases is 1, Range of values is 0 to 0
 21264                           ; switch strategies available:
 21265                           ; Name         Instructions Cycles
 21266                           ; simple_byte            4     3 (average)
 21267                           ;	Chosen strategy is simple_byte
 21268  00246A  51E2               	movf	(??_eusartparser+1)& (0+255),w,b
 21269  00246C  0A00               	xorlw	0	; case 0
 21270  00246E  A4D8               	btfss	status,2,c
 21271  002470  D5BA               	goto	l23355
 21272                           
 21273                           ; BSR set to: 0
 21274                           ; Switch size 1, requested type "simple"
 21275                           ; Number of cases is 11, Range of values is 0 to 10
 21276                           ; switch strategies available:
 21277                           ; Name         Instructions Cycles
 21278                           ; simple_byte           34    18 (average)
 21279                           ;	Chosen strategy is simple_byte
 21280  002472  51E1               	movf	??_eusartparser& (0+255),w,b
 21281  002474  0A00               	xorlw	0	; case 0
 21282  002476  B4D8               	btfsc	status,2,c
 21283  002478  D58E               	goto	l23341
 21284  00247A  0A01               	xorlw	1	; case 1
 21285  00247C  B4D8               	btfsc	status,2,c
 21286  00247E  D5A3               	goto	l23347
 21287  002480  0A03               	xorlw	3	; case 2
 21288  002482  B4D8               	btfsc	status,2,c
 21289  002484  D5B7               	goto	l23359
 21290  002486  0A01               	xorlw	1	; case 3
 21291  002488  B4D8               	btfsc	status,2,c
 21292  00248A  D589               	goto	l23343
 21293  00248C  0A07               	xorlw	7	; case 4
 21294  00248E  B4D8               	btfsc	status,2,c
 21295  002490  D5E8               	goto	l23389
 21296  002492  0A01               	xorlw	1	; case 5
 21297  002494  B4D8               	btfsc	status,2,c
 21298  002496  D613               	goto	l23407
 21299  002498  0A03               	xorlw	3	; case 6
 21300  00249A  B4D8               	btfsc	status,2,c
 21301  00249C  D63B               	goto	l23425
 21302  00249E  0A01               	xorlw	1	; case 7
 21303  0024A0  B4D8               	btfsc	status,2,c
 21304  0024A2  D66D               	goto	l23443
 21305  0024A4  0A0F               	xorlw	15	; case 8
 21306  0024A6  B4D8               	btfsc	status,2,c
 21307  0024A8  D69F               	goto	l23461
 21308  0024AA  0A01               	xorlw	1	; case 9
 21309  0024AC  B4D8               	btfsc	status,2,c
 21310  0024AE  D752               	goto	l23513
 21311  0024B0  0A03               	xorlw	3	; case 10
 21312  0024B2  B4D8               	btfsc	status,2,c
 21313  0024B4  D782               	goto	l23549
 21314  0024B6  D597               	goto	l23355
 21315  0024B8                     __end_of_eusartparser:
 21316                           	callstack 0
 21317                           
 21318 ;; *************** function _write_eusartparser *****************
 21319 ;; Defined at:
 21320 ;;		line 248 in file "eusartparser.c"
 21321 ;; Parameters:    Size  Location     Type
 21322 ;;  package         7   15[COMRAM] struct package_t
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;  debug2          2   32[COMRAM] volatile int 
 21325 ;;  debug           2   30[COMRAM] volatile int 
 21326 ;; Return value:  Size  Location     Type
 21327 ;;                  1    wreg      void 
 21328 ;; Registers used:
 21329 ;;		wreg, status,2, status,0
 21330 ;; Tracked objects:
 21331 ;;		On entry : 3F/0
 21332 ;;		On exit  : 3F/0
 21333 ;;		Unchanged: 0/0
 21334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21335 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21336 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21337 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21338 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21339 ;;Total ram usage:       19 bytes
 21340 ;; Hardware stack levels used: 1
 21341 ;; Hardware stack levels required when called: 4
 21342 ;; This function calls:
 21343 ;;		Nothing
 21344 ;; This function is called by:
 21345 ;;		_eusartparser
 21346 ;; This function uses a non-reentrant model
 21347 ;;
 21348                           
 21349                           	psect	text75
 21350  0033D4                     __ptext75:
 21351                           	callstack 0
 21352  0033D4                     _write_eusartparser:
 21353                           	callstack 25
 21354                           
 21355                           ; BSR set to: 0
 21356                           ;eusartparser.c: 249:         volatile int debug=(uint8_t)package.address;
 21357                           
 21358                           ;incstack = 0
 21359  0033D4  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21360  0033D8  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21361                           
 21362                           ; BSR set to: 0
 21363                           ;eusartparser.c: 250:         volatile int debug2=0x10;
 21364  0033DA  0E00               	movlw	0
 21365  0033DC  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21366  0033DE  0E10               	movlw	16
 21367  0033E0  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21368                           
 21369                           ;eusartparser.c: 251:         switch((uint8_t)package.address){
 21370  0033E2  D180               	goto	l16525
 21371  0033E4                     l3604:
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;eusartparser.c: 256:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21375  0033E4  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21376                           
 21377                           ;eusartparser.c: 257:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21378  0033E8  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21379                           
 21380                           ;eusartparser.c: 258:                 break;
 21381  0033EC  0012               	return	
 21382  0033EE                     l3606:
 21383                           
 21384                           ; BSR set to: 0
 21385                           ;eusartparser.c: 262:                 var_sys_NVM.motorPower=package.data.data8[0];
 21386  0033EE  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21387                           
 21388                           ;eusartparser.c: 263:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21389  0033F2  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21390                           
 21391                           ;eusartparser.c: 264:                 break;
 21392  0033F6  0012               	return	
 21393  0033F8                     l3607:
 21394                           
 21395                           ; BSR set to: 0
 21396                           ;eusartparser.c: 268:                 var_sys_NVM.walkTime=package.data.data8[1];
 21397  0033F8  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21398                           
 21399                           ;eusartparser.c: 269:                 break;
 21400  0033FC  0012               	return	
 21401  0033FE                     l3609:
 21402                           
 21403                           ; BSR set to: 0
 21404                           ;eusartparser.c: 274:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21405  0033FE  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21406                           
 21407                           ;eusartparser.c: 275:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21408  003402  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21409                           
 21410                           ;eusartparser.c: 276:                 break;
 21411  003406  0012               	return	
 21412  003408                     l3611:
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;eusartparser.c: 281:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21416  003408  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21417                           
 21418                           ;eusartparser.c: 282:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21419  00340C  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21420                           
 21421                           ;eusartparser.c: 283:                 break;
 21422  003410  0012               	return	
 21423  003412                     l3612:
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;eusartparser.c: 287:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21427  003412  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21428                           
 21429                           ;eusartparser.c: 288:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21430  003416  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21431                           
 21432                           ;eusartparser.c: 289:                 break;
 21433  00341A  0012               	return	
 21434  00341C                     l3613:
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;eusartparser.c: 293:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21438  00341C  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21439                           
 21440                           ;eusartparser.c: 294:                 break;
 21441  003420  0012               	return	
 21442  003422                     l3614:
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;eusartparser.c: 298:                 var_sys_NVM.operationMode=package.data.data8[1];
 21446  003422  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21447                           
 21448                           ;eusartparser.c: 299:                 break;
 21449  003426  0012               	return	
 21450  003428                     l3615:
 21451                           
 21452                           ; BSR set to: 0
 21453                           ;eusartparser.c: 303:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21454  003428  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21455                           
 21456                           ;eusartparser.c: 304:                 break;
 21457  00342C  0012               	return	
 21458  00342E                     l3616:
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;eusartparser.c: 308:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21462  00342E  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21463                           
 21464                           ;eusartparser.c: 309:                 break;
 21465  003432  0012               	return	
 21466  003434                     l3617:
 21467                           
 21468                           ; BSR set to: 0
 21469                           ;eusartparser.c: 313:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21470  003434  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21471                           
 21472                           ;eusartparser.c: 314:                 break;
 21473  003438  0012               	return	
 21474  00343A                     l3618:
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;eusartparser.c: 319:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21478  00343A  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21479                           
 21480                           ;eusartparser.c: 320:                 break;
 21481  00343E  0012               	return	
 21482  003440                     l3620:
 21483                           
 21484                           ; BSR set to: 0
 21485                           ;eusartparser.c: 325:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21486  003440  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21487                           
 21488                           ;eusartparser.c: 326:                 break;
 21489  003444  0012               	return	
 21490  003446                     l3621:
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;eusartparser.c: 330:                 var_sys_NVM.softStart=package.data.data8[0];
 21494  003446  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21495                           
 21496                           ;eusartparser.c: 331:                 var_sys_NVM.softstop=package.data.data8[1];
 21497  00344A  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21498                           
 21499                           ;eusartparser.c: 332:                 break;
 21500  00344E  0012               	return	
 21501  003450                     l3623:
 21502                           
 21503                           ; BSR set to: 0
 21504                           ;eusartparser.c: 337:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21505  003450  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21506                           
 21507                           ;eusartparser.c: 338:                 break;
 21508  003454  0012               	return	
 21509  003456                     l3625:
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;eusartparser.c: 343:                 var_sys_NVM.folow_me=package.data.data8[1];
 21513  003456  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21514                           
 21515                           ;eusartparser.c: 344:                 break;
 21516  00345A  0012               	return	
 21517  00345C                     l3626:
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;eusartparser.c: 348:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21521  00345C  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21522                           
 21523                           ;eusartparser.c: 349:                 break;
 21524  003460  0012               	return	
 21525  003462                     l3627:
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;eusartparser.c: 353:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21529  003462  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21530                           
 21531                           ;eusartparser.c: 354:                 break;
 21532  003466  0012               	return	
 21533  003468                     l3628:
 21534                           
 21535                           ; BSR set to: 0
 21536                           ;eusartparser.c: 358:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21537  003468  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21538                           
 21539                           ;eusartparser.c: 359:                 break;
 21540  00346C  0012               	return	
 21541  00346E                     l3630:
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;eusartparser.c: 364:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21545  00346E  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21546                           
 21547                           ;eusartparser.c: 365:                 break;
 21548  003472  0012               	return	
 21549  003474                     l3631:
 21550                           
 21551                           ; BSR set to: 0
 21552                           ;eusartparser.c: 369:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21553  003474  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21554                           
 21555                           ;eusartparser.c: 370:                 break;
 21556  003478  0012               	return	
 21557  00347A                     l3632:
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;eusartparser.c: 374:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21561  00347A  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21562                           
 21563                           ;eusartparser.c: 375:                 break;
 21564  00347E  0012               	return	
 21565  003480                     l3633:
 21566                           
 21567                           ; BSR set to: 0
 21568                           ;eusartparser.c: 379:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21569  003480  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21570                           
 21571                           ;eusartparser.c: 380:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21572  003484  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21573                           
 21574                           ;eusartparser.c: 381:                 break;
 21575  003488  0012               	return	
 21576  00348A                     l16503:
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;eusartparser.c: 384:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21580  00348A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21581  00348C  6E17               	movwf	??_write_eusartparser^0,c
 21582  00348E  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21583  003490  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21584  003492  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21585  003494  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21586  003496  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21587  00349A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21588  00349E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21589  0034A0  6A17               	clrf	??_write_eusartparser^0,c
 21590  0034A2  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21591  0034A4  1017               	iorwf	??_write_eusartparser^0,w,c
 21592  0034A6  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21593  0034A8  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21594  0034AA  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21595  0034AC  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21596  0034AE  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21597  0034B0  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21598  0034B2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21599  0034B4  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21600  0034B6  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21601  0034B8  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21602                           
 21603                           ;eusartparser.c: 385:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21604  0034BA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21605  0034BC  6E17               	movwf	??_write_eusartparser^0,c
 21606  0034BE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21607  0034C0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21608  0034C2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21609  0034C4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21610  0034C6  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21611  0034CA  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21612  0034CE  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21613  0034D0  6A17               	clrf	??_write_eusartparser^0,c
 21614  0034D2  1C17               	comf	??_write_eusartparser^0,w,c
 21615  0034D4  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21616  0034D6  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21617  0034D8  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21618  0034DA  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21619  0034DC  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21620  0034DE  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21621  0034E0  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21622  0034E2  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21623  0034E4  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21624  0034E6  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21625  0034E8  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21626  0034EA  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21627  0034EC  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21628  0034EE  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21629  0034F0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21630  0034F2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21631  0034F4  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21632  0034F6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21633  0034F8  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21634                           
 21635                           ;eusartparser.c: 386:                 break;
 21636  0034FA  0012               	return	
 21637  0034FC                     l16505:
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;eusartparser.c: 388:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21641  0034FC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21642  0034FE  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21643  003500  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21644  003502  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21645  003504  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21646  003506  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21647  003508  0E00               	movlw	0
 21648  00350A  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21649  00350C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21650  00350E  0E00               	movlw	0
 21651  003510  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21652  003512  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21653                           
 21654                           ;eusartparser.c: 389:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21655  003514  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21656  003516  6E17               	movwf	??_write_eusartparser^0,c
 21657  003518  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21658  00351A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21659  00351C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21660  00351E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21661  003520  1C17               	comf	??_write_eusartparser^0,w,c
 21662  003522  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21663  003524  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21664  003526  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21665  003528  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21666  00352A  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21667  00352C  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21668  00352E  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21669  003530  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21670  003532  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21671  003534  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21672  003536  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21673  003538  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21674  00353A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21675  00353C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21676  00353E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21677  003540  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21678  003542  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21679  003544  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21680  003546  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21681                           
 21682                           ;eusartparser.c: 390:                 break;
 21683  003548  0012               	return	
 21684  00354A                     l3636:
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;eusartparser.c: 395:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21688  00354A  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21689                           
 21690                           ;eusartparser.c: 396:                 break;
 21691  00354E  0012               	return	
 21692  003550                     l16507:
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;eusartparser.c: 399:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21696  003550  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21697  003552  6E17               	movwf	??_write_eusartparser^0,c
 21698  003554  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21699  003556  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21700  003558  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21701  00355A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21702  00355C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21703  003560  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21704  003564  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21705  003566  6A17               	clrf	??_write_eusartparser^0,c
 21706  003568  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21707  00356A  1017               	iorwf	??_write_eusartparser^0,w,c
 21708  00356C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21709  00356E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21710  003570  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21711  003572  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21712  003574  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21713  003576  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21714  003578  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21715  00357A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21716  00357C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21717  00357E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21718                           
 21719                           ;eusartparser.c: 400:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21720  003580  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21721  003582  6E17               	movwf	??_write_eusartparser^0,c
 21722  003584  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21723  003586  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21724  003588  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21725  00358A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21726  00358C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21727  003590  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21728  003594  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21729  003596  6A17               	clrf	??_write_eusartparser^0,c
 21730  003598  1C17               	comf	??_write_eusartparser^0,w,c
 21731  00359A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21732  00359C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21733  00359E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21734  0035A0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21735  0035A2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21736  0035A4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21737  0035A6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21738  0035A8  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21739  0035AA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21740  0035AC  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21741  0035AE  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21742  0035B0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21743  0035B2  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21744  0035B4  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21745  0035B6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21746  0035B8  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21747  0035BA  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21748  0035BC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21749  0035BE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21750                           
 21751                           ;eusartparser.c: 401:                 break;
 21752  0035C0  0012               	return	
 21753  0035C2                     l16509:
 21754                           
 21755                           ; BSR set to: 0
 21756                           ;eusartparser.c: 403:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21757  0035C2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21758  0035C4  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21759  0035C6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21760  0035C8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21761  0035CA  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21762  0035CC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21763  0035CE  0E00               	movlw	0
 21764  0035D0  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21765  0035D2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21766  0035D4  0E00               	movlw	0
 21767  0035D6  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21768  0035D8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21769                           
 21770                           ;eusartparser.c: 404:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21771  0035DA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21772  0035DC  6E17               	movwf	??_write_eusartparser^0,c
 21773  0035DE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21774  0035E0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21775  0035E2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21776  0035E4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21777  0035E6  1C17               	comf	??_write_eusartparser^0,w,c
 21778  0035E8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21779  0035EA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21780  0035EC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21781  0035EE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21782  0035F0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21783  0035F2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21784  0035F4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21785  0035F6  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21786  0035F8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21787  0035FA  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21788  0035FC  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21789  0035FE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21790  003600  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21791  003602  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21792  003604  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21793  003606  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21794  003608  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21795  00360A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21796  00360C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21797                           
 21798                           ;eusartparser.c: 405:                 break;
 21799  00360E  0012               	return	
 21800  003610                     l16511:
 21801                           
 21802                           ; BSR set to: 0
 21803                           ;eusartparser.c: 408:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21804  003610  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21805  003612  6E17               	movwf	??_write_eusartparser^0,c
 21806  003614  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21807  003616  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21808  003618  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21809  00361A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21810  00361C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21811  003620  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21812  003624  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21813  003626  6A17               	clrf	??_write_eusartparser^0,c
 21814  003628  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21815  00362A  1017               	iorwf	??_write_eusartparser^0,w,c
 21816  00362C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21817  00362E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21818  003630  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21819  003632  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21820  003634  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21821  003636  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21822  003638  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21823  00363A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21824  00363C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21825  00363E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21826                           
 21827                           ;eusartparser.c: 409:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21828  003640  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21829  003642  6E17               	movwf	??_write_eusartparser^0,c
 21830  003644  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21831  003646  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21832  003648  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21833  00364A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21834  00364C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21835  003650  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21836  003654  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21837  003656  6A17               	clrf	??_write_eusartparser^0,c
 21838  003658  1C17               	comf	??_write_eusartparser^0,w,c
 21839  00365A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21840  00365C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21841  00365E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21842  003660  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21843  003662  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21844  003664  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21845  003666  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21846  003668  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21847  00366A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21848  00366C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21849  00366E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21850  003670  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21851  003672  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21852  003674  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21853  003676  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21854  003678  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21855  00367A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21856  00367C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21857  00367E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21858                           
 21859                           ;eusartparser.c: 410:                 break;
 21860  003680  0012               	return	
 21861  003682                     l16513:
 21862                           
 21863                           ; BSR set to: 0
 21864                           ;eusartparser.c: 412:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21865  003682  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21866  003684  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21867  003686  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21868  003688  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21869  00368A  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21870  00368C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21871  00368E  0E00               	movlw	0
 21872  003690  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21873  003692  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21874  003694  0E00               	movlw	0
 21875  003696  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21876  003698  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21877                           
 21878                           ;eusartparser.c: 413:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21879  00369A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21880  00369C  6E17               	movwf	??_write_eusartparser^0,c
 21881  00369E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21882  0036A0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21883  0036A2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21884  0036A4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21885  0036A6  1C17               	comf	??_write_eusartparser^0,w,c
 21886  0036A8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21887  0036AA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21888  0036AC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21889  0036AE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21890  0036B0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21891  0036B2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21892  0036B4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21893  0036B6  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21894  0036B8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21895  0036BA  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21896  0036BC  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21897  0036BE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21898  0036C0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21899  0036C2  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21900  0036C4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21901  0036C6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21902  0036C8  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21903  0036CA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21904  0036CC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21905                           
 21906                           ;eusartparser.c: 414:                 break;
 21907  0036CE  0012               	return	
 21908  0036D0                     l3641:
 21909                           
 21910                           ; BSR set to: 0
 21911                           ;eusartparser.c: 417:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21912  0036D0  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21913  0036D4  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21914                           
 21915                           ;eusartparser.c: 418:                 break;
 21916  0036D8  0012               	return	
 21917  0036DA                     l3642:
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;eusartparser.c: 421:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21921  0036DA  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21922  0036DE  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21923                           
 21924                           ;eusartparser.c: 422:                 break;
 21925  0036E2  0012               	return	
 21926  0036E4                     l16525:
 21927                           
 21928                           ; BSR set to: 0
 21929  0036E4  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21930  0036E6  6E17               	movwf	??_write_eusartparser^0,c
 21931  0036E8  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21932                           
 21933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21934                           ; Switch size 1, requested type "simple"
 21935                           ; Number of cases is 1, Range of values is 0 to 0
 21936                           ; switch strategies available:
 21937                           ; Name         Instructions Cycles
 21938                           ; simple_byte            4     3 (average)
 21939                           ;	Chosen strategy is simple_byte
 21940  0036EA  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21941  0036EC  0A00               	xorlw	0	; case 0
 21942  0036EE  A4D8               	btfss	status,2,c
 21943  0036F0  0012               	return	
 21944                           
 21945                           ; BSR set to: 0
 21946                           ; Switch size 1, requested type "simple"
 21947                           ; Number of cases is 43, Range of values is 0 to 51
 21948                           ; switch strategies available:
 21949                           ; Name         Instructions Cycles
 21950                           ; simple_byte          130    66 (average)
 21951                           ;	Chosen strategy is simple_byte
 21952  0036F2  5017               	movf	??_write_eusartparser^0,w,c
 21953  0036F4  0A00               	xorlw	0	; case 0
 21954  0036F6  B4D8               	btfsc	status,2,c
 21955  0036F8  D675               	goto	l3604
 21956  0036FA  0A02               	xorlw	2	; case 2
 21957  0036FC  B4D8               	btfsc	status,2,c
 21958  0036FE  D67F               	goto	l3609
 21959  003700  0A01               	xorlw	1	; case 3
 21960  003702  B4D8               	btfsc	status,2,c
 21961  003704  D6A5               	goto	l3623
 21962  003706  0A06               	xorlw	6	; case 5
 21963  003708  B4D8               	btfsc	status,2,c
 21964  00370A  D67E               	goto	l3611
 21965  00370C  0A02               	xorlw	2	; case 7
 21966  00370E  B4D8               	btfsc	status,2,c
 21967  003710  D697               	goto	l3620
 21968  003712  0A0F               	xorlw	15	; case 8
 21969  003714  B4D8               	btfsc	status,2,c
 21970  003716  D6AB               	goto	l3630
 21971  003718  0A02               	xorlw	2	; case 10
 21972  00371A  B4D8               	btfsc	status,2,c
 21973  00371C  D69C               	goto	l3625
 21974  00371E  0A1A               	xorlw	26	; case 16
 21975  003720  B4D8               	btfsc	status,2,c
 21976  003722  D660               	goto	l3604
 21977  003724  0A01               	xorlw	1	; case 17
 21978  003726  B4D8               	btfsc	status,2,c
 21979  003728  D662               	goto	l3606
 21980  00372A  0A03               	xorlw	3	; case 18
 21981  00372C  B4D8               	btfsc	status,2,c
 21982  00372E  D664               	goto	l3607
 21983  003730  0A01               	xorlw	1	; case 19
 21984  003732  B4D8               	btfsc	status,2,c
 21985  003734  D664               	goto	l3609
 21986  003736  0A07               	xorlw	7	; case 20
 21987  003738  B4D8               	btfsc	status,2,c
 21988  00373A  D666               	goto	l3611
 21989  00373C  0A01               	xorlw	1	; case 21
 21990  00373E  B4D8               	btfsc	status,2,c
 21991  003740  D668               	goto	l3612
 21992  003742  0A03               	xorlw	3	; case 22
 21993  003744  B4D8               	btfsc	status,2,c
 21994  003746  D66A               	goto	l3613
 21995  003748  0A01               	xorlw	1	; case 23
 21996  00374A  B4D8               	btfsc	status,2,c
 21997  00374C  D66A               	goto	l3614
 21998  00374E  0A0F               	xorlw	15	; case 24
 21999  003750  B4D8               	btfsc	status,2,c
 22000  003752  D66A               	goto	l3615
 22001  003754  0A01               	xorlw	1	; case 25
 22002  003756  B4D8               	btfsc	status,2,c
 22003  003758  D66A               	goto	l3616
 22004  00375A  0A03               	xorlw	3	; case 26
 22005  00375C  B4D8               	btfsc	status,2,c
 22006  00375E  D66A               	goto	l3617
 22007  003760  0A01               	xorlw	1	; case 27
 22008  003762  B4D8               	btfsc	status,2,c
 22009  003764  D66A               	goto	l3618
 22010  003766  0A07               	xorlw	7	; case 28
 22011  003768  B4D8               	btfsc	status,2,c
 22012  00376A  D66A               	goto	l3620
 22013  00376C  0A01               	xorlw	1	; case 29
 22014  00376E  B4D8               	btfsc	status,2,c
 22015  003770  D66A               	goto	l3621
 22016  003772  0A03               	xorlw	3	; case 30
 22017  003774  B4D8               	btfsc	status,2,c
 22018  003776  D66C               	goto	l3623
 22019  003778  0A01               	xorlw	1	; case 31
 22020  00377A  B4D8               	btfsc	status,2,c
 22021  00377C  D66C               	goto	l3625
 22022  00377E  0A3F               	xorlw	63	; case 32
 22023  003780  B4D8               	btfsc	status,2,c
 22024  003782  D66C               	goto	l3626
 22025  003784  0A01               	xorlw	1	; case 33
 22026  003786  B4D8               	btfsc	status,2,c
 22027  003788  D66C               	goto	l3627
 22028  00378A  0A03               	xorlw	3	; case 34
 22029  00378C  B4D8               	btfsc	status,2,c
 22030  00378E  D66C               	goto	l3628
 22031  003790  0A01               	xorlw	1	; case 35
 22032  003792  B4D8               	btfsc	status,2,c
 22033  003794  D66C               	goto	l3630
 22034  003796  0A07               	xorlw	7	; case 36
 22035  003798  B4D8               	btfsc	status,2,c
 22036  00379A  D66C               	goto	l3631
 22037  00379C  0A01               	xorlw	1	; case 37
 22038  00379E  B4D8               	btfsc	status,2,c
 22039  0037A0  D66C               	goto	l3632
 22040  0037A2  0A03               	xorlw	3	; case 38
 22041  0037A4  B4D8               	btfsc	status,2,c
 22042  0037A6  D66C               	goto	l3633
 22043  0037A8  0A01               	xorlw	1	; case 39
 22044  0037AA  B4D8               	btfsc	status,2,c
 22045  0037AC  D66E               	goto	l16503
 22046  0037AE  0A0F               	xorlw	15	; case 40
 22047  0037B0  B4D8               	btfsc	status,2,c
 22048  0037B2  D6A4               	goto	l16505
 22049  0037B4  0A01               	xorlw	1	; case 41
 22050  0037B6  B4D8               	btfsc	status,2,c
 22051  0037B8  D6C8               	goto	l3636
 22052  0037BA  0A03               	xorlw	3	; case 42
 22053  0037BC  B4D8               	btfsc	status,2,c
 22054  0037BE  D6C8               	goto	l16507
 22055  0037C0  0A01               	xorlw	1	; case 43
 22056  0037C2  B4D8               	btfsc	status,2,c
 22057  0037C4  D6FE               	goto	l16509
 22058  0037C6  0A07               	xorlw	7	; case 44
 22059  0037C8  B4D8               	btfsc	status,2,c
 22060  0037CA  D722               	goto	l16511
 22061  0037CC  0A01               	xorlw	1	; case 45
 22062  0037CE  B4D8               	btfsc	status,2,c
 22063  0037D0  D758               	goto	l16513
 22064  0037D2  0A03               	xorlw	3	; case 46
 22065  0037D4  B4D8               	btfsc	status,2,c
 22066  0037D6  D77C               	goto	l3641
 22067  0037D8  0A01               	xorlw	1	; case 47
 22068  0037DA  B4D8               	btfsc	status,2,c
 22069  0037DC  D77E               	goto	l3642
 22070  0037DE  0A1F               	xorlw	31	; case 48
 22071  0037E0  B4D8               	btfsc	status,2,c
 22072  0037E2  D716               	goto	l16511
 22073  0037E4  0A01               	xorlw	1	; case 49
 22074  0037E6  B4D8               	btfsc	status,2,c
 22075  0037E8  D74C               	goto	l16513
 22076  0037EA  0A03               	xorlw	3	; case 50
 22077  0037EC  B4D8               	btfsc	status,2,c
 22078  0037EE  D710               	goto	l16511
 22079  0037F0  0A01               	xorlw	1	; case 51
 22080  0037F2  A4D8               	btfss	status,2,c
 22081  0037F4  0012               	return	
 22082  0037F6  D745               	goto	l16513
 22083  0037F8                     __end_of_write_eusartparser:
 22084                           	callstack 0
 22085                           
 22086 ;; *************** function _validateRemoteSerialNumber *****************
 22087 ;; Defined at:
 22088 ;;		line 27 in file "controlMemory_MC50.c"
 22089 ;; Parameters:    Size  Location     Type
 22090 ;;  serial          4   45[COMRAM] unsigned long 
 22091 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 22092 ;;  position        2   50[COMRAM] PTR unsigned char 
 22093 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 22094 ;; Auto vars:     Size  Location     Type
 22095 ;;  mask            4   52[COMRAM] unsigned long 
 22096 ;;  i               1   57[COMRAM] unsigned char 
 22097 ;;  j               1   56[COMRAM] unsigned char 
 22098 ;; Return value:  Size  Location     Type
 22099 ;;                  1    wreg      enum E10539
 22100 ;; Registers used:
 22101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22102 ;; Tracked objects:
 22103 ;;		On entry : 3F/0
 22104 ;;		On exit  : 3F/0
 22105 ;;		Unchanged: 0/0
 22106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22107 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22108 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22109 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22110 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22111 ;;Total ram usage:       21 bytes
 22112 ;; Hardware stack levels used: 1
 22113 ;; Hardware stack levels required when called: 13
 22114 ;; This function calls:
 22115 ;;		_i2c_readDataBlock
 22116 ;; This function is called by:
 22117 ;;		_keeloqDecryptPacket
 22118 ;;		_DecryptPacket_12BIT
 22119 ;;		_controlSelectRemote
 22120 ;;		_eusartparser
 22121 ;; This function uses a non-reentrant model
 22122 ;;
 22123                           
 22124                           	psect	text76
 22125  005A24                     __ptext76:
 22126                           	callstack 0
 22127  005A24                     _validateRemoteSerialNumber:
 22128                           	callstack 14
 22129                           
 22130                           ; BSR set to: 0
 22131                           ;controlMemory_MC50.c: 29:     char j=0;
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;incstack = 0
 22135  005A24  0E00               	movlw	0
 22136  005A26  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 22140  005A28  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 22141  005A2A  A4D8               	btfss	status,2,c
 22142  005A2C  D009               	goto	l1436
 22143                           
 22144                           ; BSR set to: 0
 22145                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 22146  005A2E  0EFF               	movlw	255
 22147  005A30  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 22148  005A32  0EFF               	movlw	255
 22149  005A34  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 22150  005A36  0EFF               	movlw	255
 22151  005A38  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 22152  005A3A  0E0F               	movlw	15
 22153  005A3C  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 22154                           
 22155                           ;controlMemory_MC50.c: 36:     }
 22156  005A3E  D004               	goto	l20127
 22157  005A40                     l1436:
 22158                           
 22159                           ; BSR set to: 0
 22160                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 22161  005A40  6835               	setf	validateRemoteSerialNumber@mask^0,c
 22162  005A42  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 22163  005A44  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 22164  005A46  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 22165  005A48                     l20127:
 22166                           
 22167                           ; BSR set to: 0
 22168                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 22169  005A48  0E00               	movlw	0
 22170  005A4A  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22171  005A4C  D056               	goto	l20145
 22172  005A4E                     l20129:
 22173                           
 22174                           ; BSR set to: 0
 22175                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 22176  005A4E  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22177  005A52  0E03               	movlw	3
 22178  005A54  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22179  005A56  A4D8               	btfss	status,2,c
 22180  005A58  D01C               	goto	l20135
 22181                           
 22182                           ; BSR set to: 0
 22183                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 22184  005A5A  0E00               	movlw	0
 22185  005A5C  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22189  005A5E  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22190  005A60  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22191  005A62  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22192  005A64  90D8               	bcf	status,0,c
 22193  005A66  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22194  005A68  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22195  005A6A  90D8               	bcf	status,0,c
 22196  005A6C  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22197  005A6E  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22198  005A70  0E00               	movlw	0
 22199  005A72  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22200  005A74  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22201  005A76  0E02               	movlw	2
 22202  005A78  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22203  005A7A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22204  005A7C  0EA4               	movlw	low _memoryTEMP
 22205  005A7E  6E24               	movwf	i2c_readDataBlock@data^0,c
 22206  005A80  0E02               	movlw	high _memoryTEMP
 22207  005A82  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22208  005A84  0E00               	movlw	0
 22209  005A86  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22210  005A88  0E10               	movlw	16
 22211  005A8A  6E26               	movwf	i2c_readDataBlock@len^0,c
 22212  005A8C  0E50               	movlw	80
 22213  005A8E  EC07  F041         	call	_i2c_readDataBlock
 22214  005A92                     l20135:
 22215                           
 22216                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22217  005A92  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22218  005A94  0D04               	mullw	4
 22219  005A96  0EA4               	movlw	low _memoryTEMP
 22220  005A98  24F3               	addwf	243,w,c
 22221  005A9A  6ED9               	movwf	fsr2l,c
 22222  005A9C  0E02               	movlw	high _memoryTEMP
 22223  005A9E  20F4               	addwfc	prodh,w,c
 22224  005AA0  6EDA               	movwf	fsr2h,c
 22225  005AA2  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22226  005AA6  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22227  005AAA  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22228  005AAE  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22229  005AB2  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22230  005AB4  0100               	movlb	0	; () banked
 22231  005AB6  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22232  005AB8  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22233  005ABA  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22234  005ABC  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22235  005ABE  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22236  005AC0  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22237  005AC2  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22238  005AC4  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22239  005AC6  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22240  005AC8  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22241  005ACA  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22242  005ACC  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22243  005ACE  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22244  005AD0  E112               	bnz	l20143
 22245  005AD2  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22246  005AD4  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22247  005AD6  E10F               	bnz	l20143
 22248  005AD8  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22249  005ADA  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22250  005ADC  E10C               	bnz	l20143
 22251  005ADE  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22252  005AE0  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22253  005AE2  A4D8               	btfss	status,2,c
 22254  005AE4  D008               	goto	l20143
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 22258  005AE6  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22259  005AEA  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22260  005AEE  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;controlMemory_MC50.c: 54:             return TypeFull;
 22264  005AF2  0E01               	movlw	1
 22265  005AF4  0012               	return	
 22266  005AF6                     l20143:
 22267                           
 22268                           ; BSR set to: 0
 22269                           ;controlMemory_MC50.c: 57:         j++;
 22270  005AF6  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 22271                           
 22272                           ;controlMemory_MC50.c: 59:     }
 22273  005AF8  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 22274  005AFA                     l20145:
 22275                           
 22276                           ; BSR set to: 0
 22277  005AFA  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 22278  005AFC  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 22279  005AFE  A0D8               	btfss	status,0,c
 22280  005B00  D7A6               	goto	l20129
 22281                           
 22282                           ; BSR set to: 0
 22283                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 22284  005B02  0E00               	movlw	0
 22285  005B04  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22286  005B06  D056               	goto	l20165
 22287  005B08                     l20149:
 22288                           
 22289                           ; BSR set to: 0
 22290                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 22291  005B08  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22292  005B0C  0E03               	movlw	3
 22293  005B0E  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22294  005B10  A4D8               	btfss	status,2,c
 22295  005B12  D01C               	goto	l20155
 22296                           
 22297                           ; BSR set to: 0
 22298                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 22299  005B14  0E00               	movlw	0
 22300  005B16  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22304  005B18  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22305  005B1A  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22306  005B1C  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22307  005B1E  90D8               	bcf	status,0,c
 22308  005B20  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22309  005B22  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22310  005B24  90D8               	bcf	status,0,c
 22311  005B26  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22312  005B28  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22313  005B2A  0E00               	movlw	0
 22314  005B2C  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22315  005B2E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22316  005B30  0E05               	movlw	5
 22317  005B32  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22318  005B34  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22319  005B36  0EA4               	movlw	low _memoryTEMP
 22320  005B38  6E24               	movwf	i2c_readDataBlock@data^0,c
 22321  005B3A  0E02               	movlw	high _memoryTEMP
 22322  005B3C  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22323  005B3E  0E00               	movlw	0
 22324  005B40  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22325  005B42  0E10               	movlw	16
 22326  005B44  6E26               	movwf	i2c_readDataBlock@len^0,c
 22327  005B46  0E50               	movlw	80
 22328  005B48  EC07  F041         	call	_i2c_readDataBlock
 22329  005B4C                     l20155:
 22330                           
 22331                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22332  005B4C  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22333  005B4E  0D04               	mullw	4
 22334  005B50  0EA4               	movlw	low _memoryTEMP
 22335  005B52  24F3               	addwf	243,w,c
 22336  005B54  6ED9               	movwf	fsr2l,c
 22337  005B56  0E02               	movlw	high _memoryTEMP
 22338  005B58  20F4               	addwfc	prodh,w,c
 22339  005B5A  6EDA               	movwf	fsr2h,c
 22340  005B5C  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22341  005B60  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22342  005B64  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22343  005B68  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22344  005B6C  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22345  005B6E  0100               	movlb	0	; () banked
 22346  005B70  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22347  005B72  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22348  005B74  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22349  005B76  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22350  005B78  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22351  005B7A  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22352  005B7C  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22353  005B7E  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22354  005B80  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22355  005B82  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22356  005B84  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22357  005B86  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22358  005B88  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22359  005B8A  E112               	bnz	l20163
 22360  005B8C  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22361  005B8E  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22362  005B90  E10F               	bnz	l20163
 22363  005B92  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22364  005B94  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22365  005B96  E10C               	bnz	l20163
 22366  005B98  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22367  005B9A  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22368  005B9C  A4D8               	btfss	status,2,c
 22369  005B9E  D008               	goto	l20163
 22370                           
 22371                           ; BSR set to: 0
 22372                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 22373  005BA0  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22374  005BA4  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22375  005BA8  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22376                           
 22377                           ; BSR set to: 0
 22378                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 22379  005BAC  0E02               	movlw	2
 22380  005BAE  0012               	return	
 22381  005BB0                     l20163:
 22382                           
 22383                           ; BSR set to: 0
 22384                           ;controlMemory_MC50.c: 75:         j++;
 22385  005BB0  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 22386                           
 22387                           ;controlMemory_MC50.c: 76:     }
 22388  005BB2  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 22389  005BB4                     l20165:
 22390                           
 22391                           ; BSR set to: 0
 22392  005BB4  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22393  005BB6  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 22394  005BB8  A0D8               	btfss	status,0,c
 22395  005BBA  D7A6               	goto	l20149
 22396                           
 22397                           ; BSR set to: 0
 22398                           ;controlMemory_MC50.c: 78:     return NoCMD;
 22399  005BBC  0E00               	movlw	0
 22400                           
 22401                           ; BSR set to: 0
 22402  005BBE  0012               	return		;funcret
 22403  005BC0                     __end_of_validateRemoteSerialNumber:
 22404                           	callstack 0
 22405                           
 22406 ;; *************** function _saveNewSerial *****************
 22407 ;; Defined at:
 22408 ;;		line 81 in file "controlMemory_MC50.c"
 22409 ;; Parameters:    Size  Location     Type
 22410 ;;  cmdType         1    wreg     unsigned char 
 22411 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 22412 ;;  position        1    4[BANK0 ] unsigned char 
 22413 ;; Auto vars:     Size  Location     Type
 22414 ;;  cmdType         1   57[COMRAM] unsigned char 
 22415 ;; Return value:  Size  Location     Type
 22416 ;;                  1    wreg      void 
 22417 ;; Registers used:
 22418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22419 ;; Tracked objects:
 22420 ;;		On entry : 3E/1
 22421 ;;		On exit  : 0/0
 22422 ;;		Unchanged: 0/0
 22423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22424 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22426 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22427 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22428 ;;Total ram usage:        8 bytes
 22429 ;; Hardware stack levels used: 1
 22430 ;; Hardware stack levels required when called: 13
 22431 ;; This function calls:
 22432 ;;		_i2c_writeNBytes
 22433 ;; This function is called by:
 22434 ;;		_controlSelectRemote
 22435 ;;		_eusartparser
 22436 ;; This function uses a non-reentrant model
 22437 ;;
 22438                           
 22439                           	psect	text77
 22440  008368                     __ptext77:
 22441                           	callstack 0
 22442  008368                     _saveNewSerial:
 22443                           	callstack 14
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;incstack = 0
 22447                           ;saveNewSerial@cmdType stored from wreg
 22448  008368  6E3A               	movwf	saveNewSerial@cmdType^0,c
 22449                           
 22450                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 22451  00836A  503A               	movf	saveNewSerial@cmdType^0,w,c
 22452  00836C  A4D8               	btfss	status,2,c
 22453  00836E  D01A               	goto	l20175
 22454                           
 22455                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 22456  008370  0100               	movlb	0	; () banked
 22457  008372  51DC               	movf	saveNewSerial@position& (0+255),w,b
 22458  008374  6FDD               	movwf	??_saveNewSerial& (0+255),b
 22459  008376  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 22460  008378  90D8               	bcf	status,0,c
 22461  00837A  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22462  00837C  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22463  00837E  90D8               	bcf	status,0,c
 22464  008380  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22465  008382  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22466  008384  0E00               	movlw	0
 22467  008386  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 22468  008388  6E22               	movwf	i2c_writeNBytes@reg^0,c
 22469  00838A  0E02               	movlw	2
 22470  00838C  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 22471  00838E  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 22472  008390  0ED8               	movlw	low saveNewSerial@tempSerial
 22473  008392  6E24               	movwf	i2c_writeNBytes@data^0,c
 22474  008394  0E00               	movlw	0
 22475  008396  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 22476  008398  0E04               	movlw	4
 22477  00839A  6E25               	movwf	i2c_writeNBytes@len^0,c
 22478  00839C  0E50               	movlw	80
 22479  00839E  EC42  F041         	call	_i2c_writeNBytes
 22480                           
 22481                           ;controlMemory_MC50.c: 87:     }
 22482  0083A2  0012               	return	
 22483  0083A4                     l20175:
 22484                           
 22485                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 22486  0083A4  0100               	movlb	0	; () banked
 22487  0083A6  51DC               	movf	saveNewSerial@position& (0+255),w,b
 22488  0083A8  6FDD               	movwf	??_saveNewSerial& (0+255),b
 22489  0083AA  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 22490  0083AC  90D8               	bcf	status,0,c
 22491  0083AE  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22492  0083B0  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22493  0083B2  90D8               	bcf	status,0,c
 22494  0083B4  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22495  0083B6  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22496  0083B8  0E00               	movlw	0
 22497  0083BA  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 22498  0083BC  6E22               	movwf	i2c_writeNBytes@reg^0,c
 22499  0083BE  0E05               	movlw	5
 22500  0083C0  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 22501  0083C2  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 22502  0083C4  0ED8               	movlw	low saveNewSerial@tempSerial
 22503  0083C6  6E24               	movwf	i2c_writeNBytes@data^0,c
 22504  0083C8  0E00               	movlw	0
 22505  0083CA  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 22506  0083CC  0E04               	movlw	4
 22507  0083CE  6E25               	movwf	i2c_writeNBytes@len^0,c
 22508  0083D0  0E50               	movlw	80
 22509  0083D2  EC42  F041         	call	_i2c_writeNBytes
 22510  0083D6  0012               	return		;funcret
 22511  0083D8                     __end_of_saveNewSerial:
 22512                           	callstack 0
 22513                           
 22514 ;; *************** function _read_eusartparser *****************
 22515 ;; Defined at:
 22516 ;;		line 12 in file "eusartparser.c"
 22517 ;; Parameters:    Size  Location     Type
 22518 ;;  package         1   23[COMRAM] PTR struct package_t
 22519 ;;		 -> main@package(7), 
 22520 ;; Auto vars:     Size  Location     Type
 22521 ;;		None
 22522 ;; Return value:  Size  Location     Type
 22523 ;;                  1    wreg      void 
 22524 ;; Registers used:
 22525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22526 ;; Tracked objects:
 22527 ;;		On entry : 3F/0
 22528 ;;		On exit  : 0/0
 22529 ;;		Unchanged: 0/0
 22530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22531 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22534 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22535 ;;Total ram usage:        3 bytes
 22536 ;; Hardware stack levels used: 1
 22537 ;; Hardware stack levels required when called: 6
 22538 ;; This function calls:
 22539 ;;		_write_package
 22540 ;; This function is called by:
 22541 ;;		_eusartparser
 22542 ;; This function uses a non-reentrant model
 22543 ;;
 22544                           
 22545                           	psect	text78
 22546  002ECC                     __ptext78:
 22547                           	callstack 0
 22548  002ECC                     _read_eusartparser:
 22549                           	callstack 23
 22550                           
 22551                           ; BSR set to: 0
 22552                           ;eusartparser.c: 13:         switch(package->address){
 22553                           
 22554                           ;incstack = 0
 22555  002ECC  D203               	goto	l16493
 22556  002ECE                     l16357:
 22557                           
 22558                           ; BSR set to: 0
 22559                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22560  002ECE  5018               	movf	read_eusartparser@package^0,w,c
 22561  002ED0  6ED9               	movwf	fsr2l,c
 22562  002ED2  6ADA               	clrf	fsr2h,c
 22563  002ED4  0E03               	movlw	3
 22564  002ED6  26D9               	addwf	fsr2l,f,c
 22565  002ED8  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22566                           
 22567                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22568  002EDC  5018               	movf	read_eusartparser@package^0,w,c
 22569  002EDE  6ED9               	movwf	fsr2l,c
 22570  002EE0  6ADA               	clrf	fsr2h,c
 22571  002EE2  0E02               	movlw	2
 22572  002EE4  26D9               	addwf	fsr2l,f,c
 22573  002EE6  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22574  002EEA                     l16359:
 22575                           
 22576                           ; BSR set to: 0
 22577                           ;eusartparser.c: 20:                 write_package(*package);
 22578  002EEA  5018               	movf	read_eusartparser@package^0,w,c
 22579  002EEC  6ED9               	movwf	fsr2l,c
 22580  002EEE  6ADA               	clrf	fsr2h,c
 22581  002EF0  EE00  F011         	lfsr	0,write_package@package
 22582  002EF4  0E06               	movlw	6
 22583  002EF6                     u18421:
 22584  002EF6  CFDB FFEB          	movff	plusw2,plusw0
 22585  002EFA  06E8               	decf	wreg,f,c
 22586  002EFC  E2FC               	bc	u18421
 22587  002EFE  EC44  F048         	call	_write_package	;wreg free
 22588                           
 22589                           ;eusartparser.c: 21:                 break;
 22590  002F02  0012               	return	
 22591  002F04                     l16361:
 22592                           
 22593                           ; BSR set to: 0
 22594                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22595  002F04  5018               	movf	read_eusartparser@package^0,w,c
 22596  002F06  6ED9               	movwf	fsr2l,c
 22597  002F08  6ADA               	clrf	fsr2h,c
 22598  002F0A  0E03               	movlw	3
 22599  002F0C  26D9               	addwf	fsr2l,f,c
 22600  002F0E  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22601                           
 22602                           ;eusartparser.c: 26:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22603  002F12  5018               	movf	read_eusartparser@package^0,w,c
 22604  002F14  6ED9               	movwf	fsr2l,c
 22605  002F16  6ADA               	clrf	fsr2h,c
 22606  002F18  0E02               	movlw	2
 22607  002F1A  26D9               	addwf	fsr2l,f,c
 22608  002F1C  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22609  002F20  D7E4               	goto	l16359
 22610  002F22                     l16365:
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22614  002F22  5018               	movf	read_eusartparser@package^0,w,c
 22615  002F24  6ED9               	movwf	fsr2l,c
 22616  002F26  6ADA               	clrf	fsr2h,c
 22617  002F28  0E03               	movlw	3
 22618  002F2A  26D9               	addwf	fsr2l,f,c
 22619  002F2C  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22620  002F30  D0F9               	goto	L99
 22621  002F32                     l16369:
 22622                           
 22623                           ; BSR set to: 0
 22624                           ;eusartparser.c: 40:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22625  002F32  5018               	movf	read_eusartparser@package^0,w,c
 22626  002F34  6ED9               	movwf	fsr2l,c
 22627  002F36  6ADA               	clrf	fsr2h,c
 22628  002F38  0E03               	movlw	3
 22629  002F3A  26D9               	addwf	fsr2l,f,c
 22630  002F3C  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22631                           
 22632                           ;eusartparser.c: 41:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22633  002F40  5018               	movf	read_eusartparser@package^0,w,c
 22634  002F42  6ED9               	movwf	fsr2l,c
 22635  002F44  6ADA               	clrf	fsr2h,c
 22636  002F46  0E02               	movlw	2
 22637  002F48  26D9               	addwf	fsr2l,f,c
 22638  002F4A  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22639  002F4E  D7CD               	goto	l16359
 22640  002F50                     l16373:
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22644  002F50  5018               	movf	read_eusartparser@package^0,w,c
 22645  002F52  6ED9               	movwf	fsr2l,c
 22646  002F54  6ADA               	clrf	fsr2h,c
 22647  002F56  0E03               	movlw	3
 22648  002F58  26D9               	addwf	fsr2l,f,c
 22649  002F5A  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22650                           
 22651                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22652  002F5E  5018               	movf	read_eusartparser@package^0,w,c
 22653  002F60  6ED9               	movwf	fsr2l,c
 22654  002F62  6ADA               	clrf	fsr2h,c
 22655  002F64  0E02               	movlw	2
 22656  002F66  26D9               	addwf	fsr2l,f,c
 22657  002F68  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22658  002F6C  D7BE               	goto	l16359
 22659  002F6E                     l16377:
 22660                           
 22661                           ; BSR set to: 0
 22662                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22663  002F6E  5018               	movf	read_eusartparser@package^0,w,c
 22664  002F70  6ED9               	movwf	fsr2l,c
 22665  002F72  6ADA               	clrf	fsr2h,c
 22666  002F74  0E03               	movlw	3
 22667  002F76  26D9               	addwf	fsr2l,f,c
 22668  002F78  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22669                           
 22670                           ;eusartparser.c: 56:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22671  002F7C  5018               	movf	read_eusartparser@package^0,w,c
 22672  002F7E  6ED9               	movwf	fsr2l,c
 22673  002F80  6ADA               	clrf	fsr2h,c
 22674  002F82  0E02               	movlw	2
 22675  002F84  26D9               	addwf	fsr2l,f,c
 22676  002F86  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22677  002F8A  D7AF               	goto	l16359
 22678  002F8C                     l16381:
 22679                           
 22680                           ; BSR set to: 0
 22681                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22682  002F8C  5018               	movf	read_eusartparser@package^0,w,c
 22683  002F8E  6ED9               	movwf	fsr2l,c
 22684  002F90  6ADA               	clrf	fsr2h,c
 22685  002F92  0E03               	movlw	3
 22686  002F94  26D9               	addwf	fsr2l,f,c
 22687  002F96  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22688  002F9A  D0C4               	goto	L99
 22689  002F9C                     l16385:
 22690                           
 22691                           ; BSR set to: 0
 22692                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22693  002F9C  5018               	movf	read_eusartparser@package^0,w,c
 22694  002F9E  6ED9               	movwf	fsr2l,c
 22695  002FA0  6ADA               	clrf	fsr2h,c
 22696  002FA2  0E03               	movlw	3
 22697  002FA4  26D9               	addwf	fsr2l,f,c
 22698  002FA6  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22699  002FAA  D0BC               	goto	L99
 22700  002FAC                     l16389:
 22701                           
 22702                           ; BSR set to: 0
 22703                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22704  002FAC  5018               	movf	read_eusartparser@package^0,w,c
 22705  002FAE  6ED9               	movwf	fsr2l,c
 22706  002FB0  6ADA               	clrf	fsr2h,c
 22707  002FB2  0E03               	movlw	3
 22708  002FB4  26D9               	addwf	fsr2l,f,c
 22709  002FB6  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22710  002FBA  D0B4               	goto	L99
 22711  002FBC                     l16393:
 22712                           
 22713                           ; BSR set to: 0
 22714                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22715  002FBC  5018               	movf	read_eusartparser@package^0,w,c
 22716  002FBE  6ED9               	movwf	fsr2l,c
 22717  002FC0  6ADA               	clrf	fsr2h,c
 22718  002FC2  0E03               	movlw	3
 22719  002FC4  26D9               	addwf	fsr2l,f,c
 22720  002FC6  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22721  002FCA  D0AC               	goto	L99
 22722  002FCC                     l16397:
 22723                           
 22724                           ; BSR set to: 0
 22725                           ;eusartparser.c: 90:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22726  002FCC  5018               	movf	read_eusartparser@package^0,w,c
 22727  002FCE  6ED9               	movwf	fsr2l,c
 22728  002FD0  6ADA               	clrf	fsr2h,c
 22729  002FD2  0E03               	movlw	3
 22730  002FD4  26D9               	addwf	fsr2l,f,c
 22731  002FD6  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22732  002FDA  D0A4               	goto	L99
 22733  002FDC                     l16401:
 22734                           
 22735                           ; BSR set to: 0
 22736                           ;eusartparser.c: 98:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22737  002FDC  5018               	movf	read_eusartparser@package^0,w,c
 22738  002FDE  6ED9               	movwf	fsr2l,c
 22739  002FE0  6ADA               	clrf	fsr2h,c
 22740  002FE2  0E03               	movlw	3
 22741  002FE4  26D9               	addwf	fsr2l,f,c
 22742  002FE6  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22743  002FEA  D09C               	goto	L99
 22744  002FEC                     l16405:
 22745                           
 22746                           ; BSR set to: 0
 22747                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22748  002FEC  5018               	movf	read_eusartparser@package^0,w,c
 22749  002FEE  6ED9               	movwf	fsr2l,c
 22750  002FF0  6ADA               	clrf	fsr2h,c
 22751  002FF2  0E03               	movlw	3
 22752  002FF4  26D9               	addwf	fsr2l,f,c
 22753  002FF6  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22754  002FFA  D094               	goto	L99
 22755  002FFC                     l16409:
 22756                           
 22757                           ; BSR set to: 0
 22758                           ;eusartparser.c: 113:                 package->data.data8[1]=var_sys_NVM.softstop;
 22759  002FFC  5018               	movf	read_eusartparser@package^0,w,c
 22760  002FFE  6ED9               	movwf	fsr2l,c
 22761  003000  6ADA               	clrf	fsr2h,c
 22762  003002  0E03               	movlw	3
 22763  003004  26D9               	addwf	fsr2l,f,c
 22764  003006  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22765                           
 22766                           ;eusartparser.c: 114:                 package->data.data8[0]=var_sys_NVM.softStart;
 22767  00300A  5018               	movf	read_eusartparser@package^0,w,c
 22768  00300C  6ED9               	movwf	fsr2l,c
 22769  00300E  6ADA               	clrf	fsr2h,c
 22770  003010  0E02               	movlw	2
 22771  003012  26D9               	addwf	fsr2l,f,c
 22772  003014  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22773  003018  D768               	goto	l16359
 22774  00301A                     l16413:
 22775                           
 22776                           ; BSR set to: 0
 22777                           ;eusartparser.c: 121:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22778  00301A  5018               	movf	read_eusartparser@package^0,w,c
 22779  00301C  6ED9               	movwf	fsr2l,c
 22780  00301E  6ADA               	clrf	fsr2h,c
 22781  003020  0E03               	movlw	3
 22782  003022  26D9               	addwf	fsr2l,f,c
 22783  003024  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22784  003028  D07D               	goto	L99
 22785  00302A                     l16417:
 22786                           
 22787                           ; BSR set to: 0
 22788                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22789  00302A  5018               	movf	read_eusartparser@package^0,w,c
 22790  00302C  6ED9               	movwf	fsr2l,c
 22791  00302E  6ADA               	clrf	fsr2h,c
 22792  003030  0E03               	movlw	3
 22793  003032  26D9               	addwf	fsr2l,f,c
 22794  003034  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22795  003038  D075               	goto	L99
 22796  00303A                     l16421:
 22797                           
 22798                           ; BSR set to: 0
 22799                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22800  00303A  5018               	movf	read_eusartparser@package^0,w,c
 22801  00303C  6ED9               	movwf	fsr2l,c
 22802  00303E  6ADA               	clrf	fsr2h,c
 22803  003040  0E03               	movlw	3
 22804  003042  26D9               	addwf	fsr2l,f,c
 22805  003044  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22806  003048  D06D               	goto	L99
 22807  00304A                     l16425:
 22808                           
 22809                           ; BSR set to: 0
 22810                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22811  00304A  5018               	movf	read_eusartparser@package^0,w,c
 22812  00304C  6ED9               	movwf	fsr2l,c
 22813  00304E  6ADA               	clrf	fsr2h,c
 22814  003050  0E03               	movlw	3
 22815  003052  26D9               	addwf	fsr2l,f,c
 22816  003054  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22817  003058  D065               	goto	L99
 22818  00305A                     l16429:
 22819                           
 22820                           ; BSR set to: 0
 22821                           ;eusartparser.c: 150:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22822  00305A  5018               	movf	read_eusartparser@package^0,w,c
 22823  00305C  6ED9               	movwf	fsr2l,c
 22824  00305E  6ADA               	clrf	fsr2h,c
 22825  003060  0E03               	movlw	3
 22826  003062  26D9               	addwf	fsr2l,f,c
 22827  003064  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22828  003068  D05D               	goto	L99
 22829  00306A                     l16433:
 22830                           
 22831                           ; BSR set to: 0
 22832                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22833  00306A  5018               	movf	read_eusartparser@package^0,w,c
 22834  00306C  6ED9               	movwf	fsr2l,c
 22835  00306E  6ADA               	clrf	fsr2h,c
 22836  003070  0E03               	movlw	3
 22837  003072  26D9               	addwf	fsr2l,f,c
 22838  003074  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22839  003078  D055               	goto	L99
 22840  00307A                     l16437:
 22841                           
 22842                           ; BSR set to: 0
 22843                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22844  00307A  5018               	movf	read_eusartparser@package^0,w,c
 22845  00307C  6ED9               	movwf	fsr2l,c
 22846  00307E  6ADA               	clrf	fsr2h,c
 22847  003080  0E03               	movlw	3
 22848  003082  26D9               	addwf	fsr2l,f,c
 22849  003084  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22850  003088  D04D               	goto	L99
 22851  00308A                     l16441:
 22852                           
 22853                           ; BSR set to: 0
 22854                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22855  00308A  5018               	movf	read_eusartparser@package^0,w,c
 22856  00308C  6ED9               	movwf	fsr2l,c
 22857  00308E  6ADA               	clrf	fsr2h,c
 22858  003090  0E03               	movlw	3
 22859  003092  26D9               	addwf	fsr2l,f,c
 22860  003094  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22861  003098  D045               	goto	L99
 22862  00309A                     l16445:
 22863                           
 22864                           ; BSR set to: 0
 22865                           ;eusartparser.c: 179:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22866  00309A  5018               	movf	read_eusartparser@package^0,w,c
 22867  00309C  6ED9               	movwf	fsr2l,c
 22868  00309E  6ADA               	clrf	fsr2h,c
 22869  0030A0  0E03               	movlw	3
 22870  0030A2  26D9               	addwf	fsr2l,f,c
 22871  0030A4  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22872                           
 22873                           ;eusartparser.c: 180:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22874  0030A8  5018               	movf	read_eusartparser@package^0,w,c
 22875  0030AA  6ED9               	movwf	fsr2l,c
 22876  0030AC  6ADA               	clrf	fsr2h,c
 22877  0030AE  0E02               	movlw	2
 22878  0030B0  26D9               	addwf	fsr2l,f,c
 22879  0030B2  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22880  0030B6  D719               	goto	l16359
 22881  0030B8                     l16449:
 22882                           
 22883                           ; BSR set to: 0
 22884                           ;eusartparser.c: 186:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22885  0030B8  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22886  0030BC  5018               	movf	read_eusartparser@package^0,w,c
 22887  0030BE  6EE1               	movwf	fsr1l,c
 22888  0030C0  6AE2               	clrf	fsr1h,c
 22889  0030C2  0E02               	movlw	2
 22890  0030C4  26E1               	addwf	fsr1l,f,c
 22891  0030C6  CFDE FFE6          	movff	postinc2,postinc1
 22892  0030CA  CFDD FFE5          	movff	postdec2,postdec1
 22893                           
 22894                           ; BSR set to: 0
 22895                           ;eusartparser.c: 187:                 write_package(*package);
 22896  0030CE  5018               	movf	read_eusartparser@package^0,w,c
 22897  0030D0  6ED9               	movwf	fsr2l,c
 22898  0030D2  6ADA               	clrf	fsr2h,c
 22899  0030D4  EE00  F011         	lfsr	0,write_package@package
 22900  0030D8  0E06               	movlw	6
 22901  0030DA                     u18431:
 22902  0030DA  CFDB FFEB          	movff	plusw2,plusw0
 22903  0030DE  06E8               	decf	wreg,f,c
 22904  0030E0  E2FC               	bc	u18431
 22905  0030E2  EC44  F048         	call	_write_package	;wreg free
 22906                           
 22907                           ;eusartparser.c: 188:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22908  0030E6  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22909  0030EA  5018               	movf	read_eusartparser@package^0,w,c
 22910  0030EC  6EE1               	movwf	fsr1l,c
 22911  0030EE  6AE2               	clrf	fsr1h,c
 22912  0030F0  0E02               	movlw	2
 22913  0030F2  26E1               	addwf	fsr1l,f,c
 22914  0030F4  CFDE FFE6          	movff	postinc2,postinc1
 22915  0030F8  CFDD FFE5          	movff	postdec2,postdec1
 22916                           
 22917                           ;eusartparser.c: 189:                 write_package(*package);
 22918  0030FC  5018               	movf	read_eusartparser@package^0,w,c
 22919  0030FE  6ED9               	movwf	fsr2l,c
 22920  003100  6ADA               	clrf	fsr2h,c
 22921  003102  EE00  F011         	lfsr	0,write_package@package
 22922  003106  0E06               	movlw	6
 22923  003108                     u18441:
 22924  003108  CFDB FFEB          	movff	plusw2,plusw0
 22925  00310C  06E8               	decf	wreg,f,c
 22926  00310E  E2FC               	bc	u18441
 22927  003110  EC44  F048         	call	_write_package	;wreg free
 22928                           
 22929                           ;eusartparser.c: 190:                 break;
 22930  003114  0012               	return	
 22931  003116                     l16455:
 22932                           
 22933                           ; BSR set to: 0
 22934                           ;eusartparser.c: 194:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22935  003116  5018               	movf	read_eusartparser@package^0,w,c
 22936  003118  6ED9               	movwf	fsr2l,c
 22937  00311A  6ADA               	clrf	fsr2h,c
 22938  00311C  0E03               	movlw	3
 22939  00311E  26D9               	addwf	fsr2l,f,c
 22940  003120  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22941  003124                     L99:
 22942                           
 22943                           ;eusartparser.c: 195:                 package->data.data8[0]=0x00;
 22944  003124  5018               	movf	read_eusartparser@package^0,w,c
 22945  003126  6ED9               	movwf	fsr2l,c
 22946  003128  6ADA               	clrf	fsr2h,c
 22947  00312A  0E02               	movlw	2
 22948  00312C  26D9               	addwf	fsr2l,f,c
 22949  00312E  0E00               	movlw	0
 22950  003130  6EDF               	movwf	indf2,c
 22951  003132  D6DB               	goto	l16359
 22952  003134                     l16459:
 22953                           
 22954                           ; BSR set to: 0
 22955                           ;eusartparser.c: 201:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22956  003134  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22957  003138  5018               	movf	read_eusartparser@package^0,w,c
 22958  00313A  6EE1               	movwf	fsr1l,c
 22959  00313C  6AE2               	clrf	fsr1h,c
 22960  00313E  0E02               	movlw	2
 22961  003140  26E1               	addwf	fsr1l,f,c
 22962  003142  CFDE FFE6          	movff	postinc2,postinc1
 22963  003146  CFDD FFE5          	movff	postdec2,postdec1
 22964                           
 22965                           ; BSR set to: 0
 22966                           ;eusartparser.c: 202:                 write_package(*package);
 22967  00314A  5018               	movf	read_eusartparser@package^0,w,c
 22968  00314C  6ED9               	movwf	fsr2l,c
 22969  00314E  6ADA               	clrf	fsr2h,c
 22970  003150  EE00  F011         	lfsr	0,write_package@package
 22971  003154  0E06               	movlw	6
 22972  003156                     u18451:
 22973  003156  CFDB FFEB          	movff	plusw2,plusw0
 22974  00315A  06E8               	decf	wreg,f,c
 22975  00315C  E2FC               	bc	u18451
 22976  00315E  EC44  F048         	call	_write_package	;wreg free
 22977                           
 22978                           ;eusartparser.c: 203:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22979  003162  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22980  003166  5018               	movf	read_eusartparser@package^0,w,c
 22981  003168  6EE1               	movwf	fsr1l,c
 22982  00316A  6AE2               	clrf	fsr1h,c
 22983  00316C  0E02               	movlw	2
 22984  00316E  26E1               	addwf	fsr1l,f,c
 22985  003170  CFDE FFE6          	movff	postinc2,postinc1
 22986  003174  CFDD FFE5          	movff	postdec2,postdec1
 22987                           
 22988                           ;eusartparser.c: 204:                 write_package(*package);
 22989  003178  5018               	movf	read_eusartparser@package^0,w,c
 22990  00317A  6ED9               	movwf	fsr2l,c
 22991  00317C  6ADA               	clrf	fsr2h,c
 22992  00317E  EE00  F011         	lfsr	0,write_package@package
 22993  003182  0E06               	movlw	6
 22994  003184                     u18461:
 22995  003184  CFDB FFEB          	movff	plusw2,plusw0
 22996  003188  06E8               	decf	wreg,f,c
 22997  00318A  E2FC               	bc	u18461
 22998  00318C  EC44  F048         	call	_write_package	;wreg free
 22999                           
 23000                           ;eusartparser.c: 205:                 break;
 23001  003190  0012               	return	
 23002  003192                     l16465:
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;eusartparser.c: 209:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 23006  003192  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23007  003196  5018               	movf	read_eusartparser@package^0,w,c
 23008  003198  6EE1               	movwf	fsr1l,c
 23009  00319A  6AE2               	clrf	fsr1h,c
 23010  00319C  0E02               	movlw	2
 23011  00319E  26E1               	addwf	fsr1l,f,c
 23012  0031A0  CFDE FFE6          	movff	postinc2,postinc1
 23013  0031A4  CFDD FFE5          	movff	postdec2,postdec1
 23014                           
 23015                           ; BSR set to: 0
 23016                           ;eusartparser.c: 210:                 write_package(*package);
 23017  0031A8  5018               	movf	read_eusartparser@package^0,w,c
 23018  0031AA  6ED9               	movwf	fsr2l,c
 23019  0031AC  6ADA               	clrf	fsr2h,c
 23020  0031AE  EE00  F011         	lfsr	0,write_package@package
 23021  0031B2  0E06               	movlw	6
 23022  0031B4                     u18471:
 23023  0031B4  CFDB FFEB          	movff	plusw2,plusw0
 23024  0031B8  06E8               	decf	wreg,f,c
 23025  0031BA  E2FC               	bc	u18471
 23026  0031BC  EC44  F048         	call	_write_package	;wreg free
 23027                           
 23028                           ;eusartparser.c: 211:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 23029  0031C0  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23030  0031C4  5018               	movf	read_eusartparser@package^0,w,c
 23031  0031C6  6EE1               	movwf	fsr1l,c
 23032  0031C8  6AE2               	clrf	fsr1h,c
 23033  0031CA  0E02               	movlw	2
 23034  0031CC  26E1               	addwf	fsr1l,f,c
 23035  0031CE  CFDE FFE6          	movff	postinc2,postinc1
 23036  0031D2  CFDD FFE5          	movff	postdec2,postdec1
 23037                           
 23038                           ;eusartparser.c: 212:                 write_package(*package);
 23039  0031D6  5018               	movf	read_eusartparser@package^0,w,c
 23040  0031D8  6ED9               	movwf	fsr2l,c
 23041  0031DA  6ADA               	clrf	fsr2h,c
 23042  0031DC  EE00  F011         	lfsr	0,write_package@package
 23043  0031E0  0E06               	movlw	6
 23044  0031E2                     u18481:
 23045  0031E2  CFDB FFEB          	movff	plusw2,plusw0
 23046  0031E6  06E8               	decf	wreg,f,c
 23047  0031E8  E2FC               	bc	u18481
 23048  0031EA  EC44  F048         	call	_write_package	;wreg free
 23049                           
 23050                           ;eusartparser.c: 213:                 break;
 23051  0031EE  0012               	return	
 23052  0031F0                     l16471:
 23053                           
 23054                           ; BSR set to: 0
 23055                           ;eusartparser.c: 217:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 23056  0031F0  5018               	movf	read_eusartparser@package^0,w,c
 23057  0031F2  6ED9               	movwf	fsr2l,c
 23058  0031F4  6ADA               	clrf	fsr2h,c
 23059  0031F6  0E02               	movlw	2
 23060  0031F8  26D9               	addwf	fsr2l,f,c
 23061  0031FA  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 23062  0031FE  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 23063  003202  D673               	goto	l16359
 23064  003204                     l16475:
 23065                           
 23066                           ; BSR set to: 0
 23067                           ;eusartparser.c: 223:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 23068  003204  5018               	movf	read_eusartparser@package^0,w,c
 23069  003206  6ED9               	movwf	fsr2l,c
 23070  003208  6ADA               	clrf	fsr2h,c
 23071  00320A  0E02               	movlw	2
 23072  00320C  26D9               	addwf	fsr2l,f,c
 23073  00320E  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 23074  003212  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 23075  003216  D669               	goto	l16359
 23076  003218                     l16479:
 23077                           
 23078                           ; BSR set to: 0
 23079                           ;eusartparser.c: 229:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 23080  003218  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 23081  00321C  5018               	movf	read_eusartparser@package^0,w,c
 23082  00321E  6EE1               	movwf	fsr1l,c
 23083  003220  6AE2               	clrf	fsr1h,c
 23084  003222  0E02               	movlw	2
 23085  003224  26E1               	addwf	fsr1l,f,c
 23086  003226  CFDE FFE6          	movff	postinc2,postinc1
 23087  00322A  CFDD FFE5          	movff	postdec2,postdec1
 23088                           
 23089                           ; BSR set to: 0
 23090                           ;eusartparser.c: 230:                 write_package(*package);
 23091  00322E  5018               	movf	read_eusartparser@package^0,w,c
 23092  003230  6ED9               	movwf	fsr2l,c
 23093  003232  6ADA               	clrf	fsr2h,c
 23094  003234  EE00  F011         	lfsr	0,write_package@package
 23095  003238  0E06               	movlw	6
 23096  00323A                     u18491:
 23097  00323A  CFDB FFEB          	movff	plusw2,plusw0
 23098  00323E  06E8               	decf	wreg,f,c
 23099  003240  E2FC               	bc	u18491
 23100  003242  EC44  F048         	call	_write_package	;wreg free
 23101                           
 23102                           ;eusartparser.c: 231:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 23103  003246  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23104  00324A  5018               	movf	read_eusartparser@package^0,w,c
 23105  00324C  6EE1               	movwf	fsr1l,c
 23106  00324E  6AE2               	clrf	fsr1h,c
 23107  003250  0E02               	movlw	2
 23108  003252  26E1               	addwf	fsr1l,f,c
 23109  003254  CFDE FFE6          	movff	postinc2,postinc1
 23110  003258  CFDD FFE5          	movff	postdec2,postdec1
 23111                           
 23112                           ;eusartparser.c: 232:                 write_package(*package);
 23113  00325C  5018               	movf	read_eusartparser@package^0,w,c
 23114  00325E  6ED9               	movwf	fsr2l,c
 23115  003260  6ADA               	clrf	fsr2h,c
 23116  003262  EE00  F011         	lfsr	0,write_package@package
 23117  003266  0E06               	movlw	6
 23118  003268                     u18501:
 23119  003268  CFDB FFEB          	movff	plusw2,plusw0
 23120  00326C  06E8               	decf	wreg,f,c
 23121  00326E  E2FC               	bc	u18501
 23122  003270  EC44  F048         	call	_write_package	;wreg free
 23123                           
 23124                           ;eusartparser.c: 233:                 break;
 23125  003274  0012               	return	
 23126  003276                     l16485:
 23127                           
 23128                           ; BSR set to: 0
 23129                           ;eusartparser.c: 237:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 23130  003276  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 23131  00327A  5018               	movf	read_eusartparser@package^0,w,c
 23132  00327C  6EE1               	movwf	fsr1l,c
 23133  00327E  6AE2               	clrf	fsr1h,c
 23134  003280  0E02               	movlw	2
 23135  003282  26E1               	addwf	fsr1l,f,c
 23136  003284  CFDE FFE6          	movff	postinc2,postinc1
 23137  003288  CFDD FFE5          	movff	postdec2,postdec1
 23138                           
 23139                           ; BSR set to: 0
 23140                           ;eusartparser.c: 238:                 write_package(*package);
 23141  00328C  5018               	movf	read_eusartparser@package^0,w,c
 23142  00328E  6ED9               	movwf	fsr2l,c
 23143  003290  6ADA               	clrf	fsr2h,c
 23144  003292  EE00  F011         	lfsr	0,write_package@package
 23145  003296  0E06               	movlw	6
 23146  003298                     u18511:
 23147  003298  CFDB FFEB          	movff	plusw2,plusw0
 23148  00329C  06E8               	decf	wreg,f,c
 23149  00329E  E2FC               	bc	u18511
 23150  0032A0  EC44  F048         	call	_write_package	;wreg free
 23151                           
 23152                           ;eusartparser.c: 239:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 23153  0032A4  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 23154  0032A8  5018               	movf	read_eusartparser@package^0,w,c
 23155  0032AA  6EE1               	movwf	fsr1l,c
 23156  0032AC  6AE2               	clrf	fsr1h,c
 23157  0032AE  0E02               	movlw	2
 23158  0032B0  26E1               	addwf	fsr1l,f,c
 23159  0032B2  CFDE FFE6          	movff	postinc2,postinc1
 23160  0032B6  CFDD FFE5          	movff	postdec2,postdec1
 23161                           
 23162                           ;eusartparser.c: 240:                 write_package(*package);
 23163  0032BA  5018               	movf	read_eusartparser@package^0,w,c
 23164  0032BC  6ED9               	movwf	fsr2l,c
 23165  0032BE  6ADA               	clrf	fsr2h,c
 23166  0032C0  EE00  F011         	lfsr	0,write_package@package
 23167  0032C4  0E06               	movlw	6
 23168  0032C6                     u18521:
 23169  0032C6  CFDB FFEB          	movff	plusw2,plusw0
 23170  0032CA  06E8               	decf	wreg,f,c
 23171  0032CC  E2FC               	bc	u18521
 23172  0032CE  EC44  F048         	call	_write_package	;wreg free
 23173                           
 23174                           ;eusartparser.c: 241:                 break;
 23175  0032D2  0012               	return	
 23176  0032D4                     l16493:
 23177                           
 23178                           ; BSR set to: 0
 23179  0032D4  5018               	movf	read_eusartparser@package^0,w,c
 23180  0032D6  6ED9               	movwf	fsr2l,c
 23181  0032D8  6ADA               	clrf	fsr2h,c
 23182  0032DA  0E01               	movlw	1
 23183  0032DC  26D9               	addwf	fsr2l,f,c
 23184  0032DE  50DF               	movf	indf2,w,c
 23185  0032E0  6E19               	movwf	??_read_eusartparser^0,c
 23186  0032E2  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 23187                           
 23188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23189                           ; Switch size 1, requested type "simple"
 23190                           ; Number of cases is 1, Range of values is 0 to 0
 23191                           ; switch strategies available:
 23192                           ; Name         Instructions Cycles
 23193                           ; simple_byte            4     3 (average)
 23194                           ;	Chosen strategy is simple_byte
 23195  0032E4  501A               	movf	(??_read_eusartparser+1)^0,w,c
 23196  0032E6  0A00               	xorlw	0	; case 0
 23197  0032E8  A4D8               	btfss	status,2,c
 23198  0032EA  0012               	return	
 23199                           
 23200                           ; BSR set to: 0
 23201                           ; Switch size 1, requested type "simple"
 23202                           ; Number of cases is 38, Range of values is 0 to 50
 23203                           ; switch strategies available:
 23204                           ; Name         Instructions Cycles
 23205                           ; simple_byte          115    58 (average)
 23206                           ;	Chosen strategy is simple_byte
 23207  0032EC  5019               	movf	??_read_eusartparser^0,w,c
 23208  0032EE  0A00               	xorlw	0	; case 0
 23209  0032F0  B4D8               	btfsc	status,2,c
 23210  0032F2  D5ED               	goto	l16357
 23211  0032F4  0A02               	xorlw	2	; case 2
 23212  0032F6  B4D8               	btfsc	status,2,c
 23213  0032F8  D61C               	goto	l16369
 23214  0032FA  0A01               	xorlw	1	; case 3
 23215  0032FC  B4D8               	btfsc	status,2,c
 23216  0032FE  D68D               	goto	l16413
 23217  003300  0A06               	xorlw	6	; case 5
 23218  003302  B4D8               	btfsc	status,2,c
 23219  003304  D625               	goto	l16373
 23220  003306  0A02               	xorlw	2	; case 7
 23221  003308  B4D8               	btfsc	status,2,c
 23222  00330A  D670               	goto	l16405
 23223  00330C  0A0F               	xorlw	15	; case 8
 23224  00330E  B4D8               	btfsc	status,2,c
 23225  003310  D6AC               	goto	l16433
 23226  003312  0A02               	xorlw	2	; case 10
 23227  003314  B4D8               	btfsc	status,2,c
 23228  003316  D689               	goto	l16417
 23229  003318  0A1A               	xorlw	26	; case 16
 23230  00331A  B4D8               	btfsc	status,2,c
 23231  00331C  D5D8               	goto	l16357
 23232  00331E  0A01               	xorlw	1	; case 17
 23233  003320  B4D8               	btfsc	status,2,c
 23234  003322  D5F0               	goto	l16361
 23235  003324  0A03               	xorlw	3	; case 18
 23236  003326  B4D8               	btfsc	status,2,c
 23237  003328  D5FC               	goto	l16365
 23238  00332A  0A01               	xorlw	1	; case 19
 23239  00332C  B4D8               	btfsc	status,2,c
 23240  00332E  D601               	goto	l16369
 23241  003330  0A07               	xorlw	7	; case 20
 23242  003332  B4D8               	btfsc	status,2,c
 23243  003334  D60D               	goto	l16373
 23244  003336  0A01               	xorlw	1	; case 21
 23245  003338  B4D8               	btfsc	status,2,c
 23246  00333A  D619               	goto	l16377
 23247  00333C  0A03               	xorlw	3	; case 22
 23248  00333E  B4D8               	btfsc	status,2,c
 23249  003340  D625               	goto	l16381
 23250  003342  0A01               	xorlw	1	; case 23
 23251  003344  B4D8               	btfsc	status,2,c
 23252  003346  D62A               	goto	l16385
 23253  003348  0A0F               	xorlw	15	; case 24
 23254  00334A  B4D8               	btfsc	status,2,c
 23255  00334C  D62F               	goto	l16389
 23256  00334E  0A01               	xorlw	1	; case 25
 23257  003350  B4D8               	btfsc	status,2,c
 23258  003352  D634               	goto	l16393
 23259  003354  0A03               	xorlw	3	; case 26
 23260  003356  B4D8               	btfsc	status,2,c
 23261  003358  D639               	goto	l16397
 23262  00335A  0A01               	xorlw	1	; case 27
 23263  00335C  B4D8               	btfsc	status,2,c
 23264  00335E  D63E               	goto	l16401
 23265  003360  0A07               	xorlw	7	; case 28
 23266  003362  B4D8               	btfsc	status,2,c
 23267  003364  D643               	goto	l16405
 23268  003366  0A01               	xorlw	1	; case 29
 23269  003368  B4D8               	btfsc	status,2,c
 23270  00336A  D648               	goto	l16409
 23271  00336C  0A03               	xorlw	3	; case 30
 23272  00336E  B4D8               	btfsc	status,2,c
 23273  003370  D654               	goto	l16413
 23274  003372  0A01               	xorlw	1	; case 31
 23275  003374  B4D8               	btfsc	status,2,c
 23276  003376  D659               	goto	l16417
 23277  003378  0A3F               	xorlw	63	; case 32
 23278  00337A  B4D8               	btfsc	status,2,c
 23279  00337C  D65E               	goto	l16421
 23280  00337E  0A01               	xorlw	1	; case 33
 23281  003380  B4D8               	btfsc	status,2,c
 23282  003382  D663               	goto	l16425
 23283  003384  0A03               	xorlw	3	; case 34
 23284  003386  B4D8               	btfsc	status,2,c
 23285  003388  D668               	goto	l16429
 23286  00338A  0A01               	xorlw	1	; case 35
 23287  00338C  B4D8               	btfsc	status,2,c
 23288  00338E  D66D               	goto	l16433
 23289  003390  0A07               	xorlw	7	; case 36
 23290  003392  B4D8               	btfsc	status,2,c
 23291  003394  D672               	goto	l16437
 23292  003396  0A01               	xorlw	1	; case 37
 23293  003398  B4D8               	btfsc	status,2,c
 23294  00339A  D677               	goto	l16441
 23295  00339C  0A03               	xorlw	3	; case 38
 23296  00339E  B4D8               	btfsc	status,2,c
 23297  0033A0  D67C               	goto	l16445
 23298  0033A2  0A01               	xorlw	1	; case 39
 23299  0033A4  B4D8               	btfsc	status,2,c
 23300  0033A6  D688               	goto	l16449
 23301  0033A8  0A0E               	xorlw	14	; case 41
 23302  0033AA  B4D8               	btfsc	status,2,c
 23303  0033AC  D6B4               	goto	l16455
 23304  0033AE  0A03               	xorlw	3	; case 42
 23305  0033B0  B4D8               	btfsc	status,2,c
 23306  0033B2  D6C0               	goto	l16459
 23307  0033B4  0A06               	xorlw	6	; case 44
 23308  0033B6  B4D8               	btfsc	status,2,c
 23309  0033B8  D6EC               	goto	l16465
 23310  0033BA  0A02               	xorlw	2	; case 46
 23311  0033BC  B4D8               	btfsc	status,2,c
 23312  0033BE  D718               	goto	l16471
 23313  0033C0  0A01               	xorlw	1	; case 47
 23314  0033C2  B4D8               	btfsc	status,2,c
 23315  0033C4  D71F               	goto	l16475
 23316  0033C6  0A1F               	xorlw	31	; case 48
 23317  0033C8  B4D8               	btfsc	status,2,c
 23318  0033CA  D726               	goto	l16479
 23319  0033CC  0A02               	xorlw	2	; case 50
 23320  0033CE  A4D8               	btfss	status,2,c
 23321  0033D0  0012               	return	
 23322  0033D2  D751               	goto	l16485
 23323  0033D4                     __end_of_read_eusartparser:
 23324                           	callstack 0
 23325                           
 23326 ;; *************** function _write_package *****************
 23327 ;; Defined at:
 23328 ;;		line 50 in file "eusartpackage.c"
 23329 ;; Parameters:    Size  Location     Type
 23330 ;;  package         7   16[COMRAM] const struct package_t
 23331 ;; Auto vars:     Size  Location     Type
 23332 ;;		None
 23333 ;; Return value:  Size  Location     Type
 23334 ;;                  1    wreg      void 
 23335 ;; Registers used:
 23336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23337 ;; Tracked objects:
 23338 ;;		On entry : 0/0
 23339 ;;		On exit  : 0/0
 23340 ;;		Unchanged: 0/0
 23341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23342 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23345 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23346 ;;Total ram usage:        7 bytes
 23347 ;; Hardware stack levels used: 1
 23348 ;; Hardware stack levels required when called: 5
 23349 ;; This function calls:
 23350 ;;		_EUSART1_Write
 23351 ;; This function is called by:
 23352 ;;		_read_eusartparser
 23353 ;;		_eusartparser
 23354 ;; This function uses a non-reentrant model
 23355 ;;
 23356                           
 23357                           	psect	text79
 23358  009088                     __ptext79:
 23359                           	callstack 0
 23360  009088                     _write_package:
 23361                           	callstack 24
 23362                           
 23363                           ;eusartpackage.c: 52:         if(package.valid==0)
 23364                           
 23365                           ;incstack = 0
 23366  009088  5017               	movf	(write_package@package+6)^0,w,c
 23367  00908A  B4D8               	btfsc	status,2,c
 23368  00908C  0012               	return	
 23369                           
 23370                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 23371  00908E  5015               	movf	(write_package@package+4)^0,w,c
 23372  009090  ECDC  F046         	call	_EUSART1_Write
 23373                           
 23374                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 23375  009094  5011               	movf	write_package@package^0,w,c
 23376  009096  ECDC  F046         	call	_EUSART1_Write
 23377                           
 23378                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 23379  00909A  5012               	movf	(write_package@package+1)^0,w,c
 23380  00909C  ECDC  F046         	call	_EUSART1_Write
 23381                           
 23382                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 23383  0090A0  5013               	movf	(write_package@package+2)^0,w,c
 23384  0090A2  ECDC  F046         	call	_EUSART1_Write
 23385                           
 23386                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23387  0090A6  5014               	movf	(write_package@package+3)^0,w,c
 23388  0090A8  ECDC  F046         	call	_EUSART1_Write
 23389                           
 23390                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23391  0090AC  5016               	movf	(write_package@package+5)^0,w,c
 23392  0090AE  ECDC  F046         	call	_EUSART1_Write
 23393  0090B2  0012               	return		;funcret
 23394  0090B4                     __end_of_write_package:
 23395                           	callstack 0
 23396                           
 23397 ;; *************** function _EUSART1_Write *****************
 23398 ;; Defined at:
 23399 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23400 ;; Parameters:    Size  Location     Type
 23401 ;;  txData          1    wreg     unsigned char 
 23402 ;; Auto vars:     Size  Location     Type
 23403 ;;  txData          1   15[COMRAM] unsigned char 
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  1    wreg      void 
 23406 ;; Registers used:
 23407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/0
 23410 ;;		On exit  : 3F/E
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23417 ;;Total ram usage:        1 bytes
 23418 ;; Hardware stack levels used: 1
 23419 ;; Hardware stack levels required when called: 4
 23420 ;; This function calls:
 23421 ;;		Nothing
 23422 ;; This function is called by:
 23423 ;;		_write_package
 23424 ;; This function uses a non-reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text80
 23428  008DB8                     __ptext80:
 23429                           	callstack 0
 23430  008DB8                     _EUSART1_Write:
 23431                           	callstack 24
 23432                           
 23433                           ;incstack = 0
 23434                           ;EUSART1_Write@txData stored from wreg
 23435  008DB8  6E10               	movwf	EUSART1_Write@txData^0,c
 23436  008DBA                     
 23437                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23438                           
 23439                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23440  008DBA  0101               	movlb	1	; () banked
 23441  008DBC  51FF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23442  008DBE  B4D8               	btfsc	status,2,c
 23443  008DC0  D7FC               	goto	l12329
 23444                           
 23445                           ; BSR set to: 1
 23446                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23447  008DC2  010E               	movlb	14	; () banked
 23448  008DC4  B9C5               	btfsc	197,4,b	;volatile
 23449  008DC6  D003               	goto	l100
 23450                           
 23451                           ; BSR set to: 14
 23452                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23453  008DC8  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23454                           
 23455                           ;mcc_generated_files/eusart1.c: 182:     }
 23456  008DCC  D012               	goto	l12345
 23457  008DCE                     l100:
 23458                           
 23459                           ; BSR set to: 14
 23460                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23461  008DCE  99C5               	bcf	197,4,b	;volatile
 23462                           
 23463                           ; BSR set to: 14
 23464                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23465  008DD0  0E84               	movlw	low _eusart1TxBuffer
 23466  008DD2  0100               	movlb	0	; () banked
 23467  008DD4  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23468  008DD6  6ED9               	movwf	fsr2l,c
 23469  008DD8  6ADA               	clrf	fsr2h,c
 23470  008DDA  0E02               	movlw	high _eusart1TxBuffer
 23471  008DDC  22DA               	addwfc	fsr2h,f,c
 23472  008DDE  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23473                           
 23474                           ; BSR set to: 0
 23475  008DE2  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23479  008DE4  0E07               	movlw	7
 23480  008DE6  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23481  008DE8  D002               	goto	l12343
 23482                           
 23483                           ; BSR set to: 0
 23484                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23485  008DEA  0E00               	movlw	0
 23486  008DEC  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23487  008DEE                     l12343:
 23488                           
 23489                           ; BSR set to: 0
 23490                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23491  008DEE  0101               	movlb	1	; () banked
 23492  008DF0  07FF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23493  008DF2                     l12345:
 23494                           
 23495                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23496  008DF2  010E               	movlb	14	; () banked
 23497  008DF4  89C5               	bsf	197,4,b	;volatile
 23498                           
 23499                           ; BSR set to: 14
 23500  008DF6  0012               	return		;funcret
 23501  008DF8                     __end_of_EUSART1_Write:
 23502                           	callstack 0
 23503                           
 23504 ;; *************** function _confirmpackage *****************
 23505 ;; Defined at:
 23506 ;;		line 448 in file "eusartparser.c"
 23507 ;; Parameters:    Size  Location     Type
 23508 ;;  package         1   16[COMRAM] PTR struct package_t
 23509 ;;		 -> main@package(7), 
 23510 ;;  confirm         1   17[COMRAM] _Bool 
 23511 ;; Auto vars:     Size  Location     Type
 23512 ;;		None
 23513 ;; Return value:  Size  Location     Type
 23514 ;;                  1    wreg      void 
 23515 ;; Registers used:
 23516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23517 ;; Tracked objects:
 23518 ;;		On entry : 0/0
 23519 ;;		On exit  : 0/0
 23520 ;;		Unchanged: 0/0
 23521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23526 ;;Total ram usage:        2 bytes
 23527 ;; Hardware stack levels used: 1
 23528 ;; Hardware stack levels required when called: 5
 23529 ;; This function calls:
 23530 ;;		_init_package
 23531 ;; This function is called by:
 23532 ;;		_eusartparser
 23533 ;; This function uses a non-reentrant model
 23534 ;;
 23535                           
 23536                           	psect	text81
 23537  008B7A                     __ptext81:
 23538                           	callstack 0
 23539  008B7A                     _confirmpackage:
 23540                           	callstack 24
 23541                           
 23542                           ;eusartparser.c: 449:         init_package(package);
 23543                           
 23544                           ; BSR set to: 14
 23545                           ;incstack = 0
 23546  008B7A  C011  F010         	movff	confirmpackage@package,init_package@package
 23547  008B7E  EC5A  F048         	call	_init_package	;wreg free
 23548                           
 23549                           ;eusartparser.c: 450:         package->functioncode=0x03;
 23550  008B82  5011               	movf	confirmpackage@package^0,w,c
 23551  008B84  6ED9               	movwf	fsr2l,c
 23552  008B86  6ADA               	clrf	fsr2h,c
 23553  008B88  0E03               	movlw	3
 23554  008B8A  6EDF               	movwf	indf2,c
 23555                           
 23556                           ;eusartparser.c: 451:         package->address=0x00;
 23557  008B8C  5011               	movf	confirmpackage@package^0,w,c
 23558  008B8E  6ED9               	movwf	fsr2l,c
 23559  008B90  6ADA               	clrf	fsr2h,c
 23560  008B92  0E01               	movlw	1
 23561  008B94  26D9               	addwf	fsr2l,f,c
 23562  008B96  0E00               	movlw	0
 23563  008B98  6EDF               	movwf	indf2,c
 23564                           
 23565                           ;eusartparser.c: 452:         if(confirm==1)
 23566  008B9A  0412               	decf	confirmpackage@confirm^0,w,c
 23567  008B9C  A4D8               	btfss	status,2,c
 23568  008B9E  D00A               	goto	l16541
 23569                           
 23570                           ;eusartparser.c: 453:             package->data.data16=0x0001;
 23571  008BA0  5011               	movf	confirmpackage@package^0,w,c
 23572  008BA2  6ED9               	movwf	fsr2l,c
 23573  008BA4  6ADA               	clrf	fsr2h,c
 23574  008BA6  0E02               	movlw	2
 23575  008BA8  26D9               	addwf	fsr2l,f,c
 23576  008BAA  0E01               	movlw	1
 23577  008BAC  6EDE               	movwf	postinc2,c
 23578  008BAE  0E00               	movlw	0
 23579  008BB0  6EDD               	movwf	postdec2,c
 23580  008BB2  0012               	return	
 23581  008BB4                     l16541:
 23582                           
 23583                           ;eusartparser.c: 455:             package->data.data16=0x0000;
 23584  008BB4  5011               	movf	confirmpackage@package^0,w,c
 23585  008BB6  6ED9               	movwf	fsr2l,c
 23586  008BB8  6ADA               	clrf	fsr2h,c
 23587  008BBA  0E02               	movlw	2
 23588  008BBC  26D9               	addwf	fsr2l,f,c
 23589  008BBE  0E00               	movlw	0
 23590  008BC0  6EDE               	movwf	postinc2,c
 23591  008BC2  0E00               	movlw	0
 23592  008BC4  6EDD               	movwf	postdec2,c
 23593  008BC6  0012               	return		;funcret
 23594  008BC8                     __end_of_confirmpackage:
 23595                           	callstack 0
 23596                           
 23597 ;; *************** function _init_package *****************
 23598 ;; Defined at:
 23599 ;;		line 11 in file "eusartpackage.c"
 23600 ;; Parameters:    Size  Location     Type
 23601 ;;  package         1   15[COMRAM] PTR struct package_t
 23602 ;;		 -> main@package(7), 
 23603 ;; Auto vars:     Size  Location     Type
 23604 ;;		None
 23605 ;; Return value:  Size  Location     Type
 23606 ;;                  1    wreg      void 
 23607 ;; Registers used:
 23608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23609 ;; Tracked objects:
 23610 ;;		On entry : 0/0
 23611 ;;		On exit  : 0/0
 23612 ;;		Unchanged: 0/0
 23613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23614 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23618 ;;Total ram usage:        1 bytes
 23619 ;; Hardware stack levels used: 1
 23620 ;; Hardware stack levels required when called: 4
 23621 ;; This function calls:
 23622 ;;		Nothing
 23623 ;; This function is called by:
 23624 ;;		_confirmpackage
 23625 ;; This function uses a non-reentrant model
 23626 ;;
 23627                           
 23628                           	psect	text82
 23629  0090B4                     __ptext82:
 23630                           	callstack 0
 23631  0090B4                     _init_package:
 23632                           	callstack 24
 23633                           
 23634                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 23635                           
 23636                           ;incstack = 0
 23637  0090B4  5010               	movf	init_package@package^0,w,c
 23638  0090B6  6ED9               	movwf	fsr2l,c
 23639  0090B8  6ADA               	clrf	fsr2h,c
 23640  0090BA  0E04               	movlw	4
 23641  0090BC  26D9               	addwf	fsr2l,f,c
 23642  0090BE  0E0A               	movlw	10
 23643  0090C0  6EDF               	movwf	indf2,c
 23644                           
 23645                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 23646  0090C2  5010               	movf	init_package@package^0,w,c
 23647  0090C4  6ED9               	movwf	fsr2l,c
 23648  0090C6  6ADA               	clrf	fsr2h,c
 23649  0090C8  0E05               	movlw	5
 23650  0090CA  26D9               	addwf	fsr2l,f,c
 23651  0090CC  0E0D               	movlw	13
 23652  0090CE  6EDF               	movwf	indf2,c
 23653                           
 23654                           ;eusartpackage.c: 14:         package->valid=1;
 23655  0090D0  5010               	movf	init_package@package^0,w,c
 23656  0090D2  6ED9               	movwf	fsr2l,c
 23657  0090D4  6ADA               	clrf	fsr2h,c
 23658  0090D6  0E06               	movlw	6
 23659  0090D8  26D9               	addwf	fsr2l,f,c
 23660  0090DA  0E01               	movlw	1
 23661  0090DC  6EDF               	movwf	indf2,c
 23662  0090DE  0012               	return		;funcret
 23663  0090E0                     __end_of_init_package:
 23664                           	callstack 0
 23665                           
 23666 ;; *************** function _cmdMemoryIsEmpty *****************
 23667 ;; Defined at:
 23668 ;;		line 122 in file "controlMemory_MC50.c"
 23669 ;; Parameters:    Size  Location     Type
 23670 ;;  cmdType         1    wreg     unsigned char 
 23671 ;;  position        1   45[COMRAM] unsigned char 
 23672 ;; Auto vars:     Size  Location     Type
 23673 ;;  cmdType         1   48[COMRAM] unsigned char 
 23674 ;;  tempSerial      4   49[COMRAM] unsigned long 
 23675 ;; Return value:  Size  Location     Type
 23676 ;;                  1    wreg      unsigned char 
 23677 ;; Registers used:
 23678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23679 ;; Tracked objects:
 23680 ;;		On entry : 0/1
 23681 ;;		On exit  : 0/0
 23682 ;;		Unchanged: 0/0
 23683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23685 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23687 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23688 ;;Total ram usage:        8 bytes
 23689 ;; Hardware stack levels used: 1
 23690 ;; Hardware stack levels required when called: 13
 23691 ;; This function calls:
 23692 ;;		_i2c_readDataBlock
 23693 ;; This function is called by:
 23694 ;;		_setValueToEdit
 23695 ;;		_controlSelectRemote
 23696 ;;		_eusartparser
 23697 ;; This function uses a non-reentrant model
 23698 ;;
 23699                           
 23700                           	psect	text83
 23701  0079CA                     __ptext83:
 23702                           	callstack 0
 23703  0079CA                     _cmdMemoryIsEmpty:
 23704                           	callstack 14
 23705                           
 23706                           ;incstack = 0
 23707                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 23708  0079CA  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 23709                           
 23710                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 23711  0079CC  0E00               	movlw	0
 23712  0079CE  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 23713  0079D0  0E00               	movlw	0
 23714  0079D2  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 23715  0079D4  0E00               	movlw	0
 23716  0079D6  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 23717  0079D8  0E00               	movlw	0
 23718  0079DA  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 23719                           
 23720                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 23721  0079DC  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 23722  0079DE  A4D8               	btfss	status,2,c
 23723  0079E0  D01A               	goto	l20191
 23724                           
 23725                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 23726  0079E2  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23727  0079E4  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23728  0079E6  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23729  0079E8  90D8               	bcf	status,0,c
 23730  0079EA  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23731  0079EC  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23732  0079EE  90D8               	bcf	status,0,c
 23733  0079F0  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23734  0079F2  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23735  0079F4  0E00               	movlw	0
 23736  0079F6  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23737  0079F8  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23738  0079FA  0E02               	movlw	2
 23739  0079FC  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23740  0079FE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23741  007A00  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23742  007A02  6E24               	movwf	i2c_readDataBlock@data^0,c
 23743  007A04  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23744  007A06  0E00               	movlw	0
 23745  007A08  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23746  007A0A  0E04               	movlw	4
 23747  007A0C  6E26               	movwf	i2c_readDataBlock@len^0,c
 23748  007A0E  0E50               	movlw	80
 23749  007A10  EC07  F041         	call	_i2c_readDataBlock
 23750                           
 23751                           ;controlMemory_MC50.c: 130:     }
 23752  007A14  D019               	goto	l20193
 23753  007A16                     l20191:
 23754                           
 23755                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 23756  007A16  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23757  007A18  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23758  007A1A  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23759  007A1C  90D8               	bcf	status,0,c
 23760  007A1E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23761  007A20  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23762  007A22  90D8               	bcf	status,0,c
 23763  007A24  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23764  007A26  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23765  007A28  0E00               	movlw	0
 23766  007A2A  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23767  007A2C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23768  007A2E  0E05               	movlw	5
 23769  007A30  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23770  007A32  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23771  007A34  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23772  007A36  6E24               	movwf	i2c_readDataBlock@data^0,c
 23773  007A38  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23774  007A3A  0E00               	movlw	0
 23775  007A3C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23776  007A3E  0E04               	movlw	4
 23777  007A40  6E26               	movwf	i2c_readDataBlock@len^0,c
 23778  007A42  0E50               	movlw	80
 23779  007A44  EC07  F041         	call	_i2c_readDataBlock
 23780  007A48                     l20193:
 23781                           
 23782                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 23783  007A48  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 23784  007A4A  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 23785  007A4C  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 23786  007A4E  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 23787  007A50  A4D8               	btfss	status,2,c
 23788  007A52  D002               	goto	l20201
 23789                           
 23790                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 23791  007A54  0E01               	movlw	1
 23792  007A56  0012               	return	
 23793  007A58                     l20201:
 23794                           
 23795                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 23796  007A58  0E00               	movlw	0
 23797  007A5A  0012               	return		;funcret
 23798  007A5C                     __end_of_cmdMemoryIsEmpty:
 23799                           	callstack 0
 23800                           
 23801 ;; *************** function _RemoveSerial *****************
 23802 ;; Defined at:
 23803 ;;		line 95 in file "controlMemory_MC50.c"
 23804 ;; Parameters:    Size  Location     Type
 23805 ;;  cmdType         1    wreg     unsigned char 
 23806 ;;  position        1   57[COMRAM] unsigned char 
 23807 ;; Auto vars:     Size  Location     Type
 23808 ;;  cmdType         1    2[BANK0 ] unsigned char 
 23809 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 23810 ;; Return value:  Size  Location     Type
 23811 ;;                  1    wreg      void 
 23812 ;; Registers used:
 23813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23814 ;; Tracked objects:
 23815 ;;		On entry : 3E/1
 23816 ;;		On exit  : 0/0
 23817 ;;		Unchanged: 0/0
 23818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23819 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23820 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23821 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23822 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23823 ;;Total ram usage:        8 bytes
 23824 ;; Hardware stack levels used: 1
 23825 ;; Hardware stack levels required when called: 13
 23826 ;; This function calls:
 23827 ;;		_i2c_writeNBytes
 23828 ;; This function is called by:
 23829 ;;		_controlSelectRemote
 23830 ;;		_eusartparser
 23831 ;; This function uses a non-reentrant model
 23832 ;;
 23833                           
 23834                           	psect	text84
 23835  007F2A                     __ptext84:
 23836                           	callstack 0
 23837  007F2A                     _RemoveSerial:
 23838                           	callstack 14
 23839                           
 23840                           ;incstack = 0
 23841                           ;RemoveSerial@cmdType stored from wreg
 23842  007F2A  0100               	movlb	0	; () banked
 23843  007F2C  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 23844                           
 23845                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 23846  007F2E  0E00               	movlw	0
 23847  007F30  0100               	movlb	0	; () banked
 23848  007F32  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 23849  007F34  0E00               	movlw	0
 23850  007F36  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 23851  007F38  0E00               	movlw	0
 23852  007F3A  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 23853  007F3C  0E00               	movlw	0
 23854  007F3E  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 23855                           
 23856                           ; BSR set to: 0
 23857                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 23858  007F40  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 23859  007F42  A4D8               	btfss	status,2,c
 23860  007F44  D019               	goto	l20183
 23861                           
 23862                           ; BSR set to: 0
 23863                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 23864  007F46  503A               	movf	RemoveSerial@position^0,w,c
 23865  007F48  6FD8               	movwf	??_RemoveSerial& (0+255),b
 23866  007F4A  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 23867  007F4C  90D8               	bcf	status,0,c
 23868  007F4E  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23869  007F50  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23870  007F52  90D8               	bcf	status,0,c
 23871  007F54  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23872  007F56  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23873  007F58  0E00               	movlw	0
 23874  007F5A  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 23875  007F5C  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23876  007F5E  0E02               	movlw	2
 23877  007F60  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 23878  007F62  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23879  007F64  0EDB               	movlw	low RemoveSerial@tempSerial
 23880  007F66  6E24               	movwf	i2c_writeNBytes@data^0,c
 23881  007F68  0E00               	movlw	0
 23882  007F6A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23883  007F6C  0E04               	movlw	4
 23884  007F6E  6E25               	movwf	i2c_writeNBytes@len^0,c
 23885  007F70  0E50               	movlw	80
 23886  007F72  EC42  F041         	call	_i2c_writeNBytes
 23887                           
 23888                           ;controlMemory_MC50.c: 103:     }
 23889  007F76  0012               	return	
 23890  007F78                     l20183:
 23891                           
 23892                           ; BSR set to: 0
 23893                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 23894  007F78  503A               	movf	RemoveSerial@position^0,w,c
 23895  007F7A  6FD8               	movwf	??_RemoveSerial& (0+255),b
 23896  007F7C  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 23897  007F7E  90D8               	bcf	status,0,c
 23898  007F80  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23899  007F82  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23900  007F84  90D8               	bcf	status,0,c
 23901  007F86  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23902  007F88  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23903  007F8A  0E00               	movlw	0
 23904  007F8C  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 23905  007F8E  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23906  007F90  0E05               	movlw	5
 23907  007F92  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 23908  007F94  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23909  007F96  0EDB               	movlw	low RemoveSerial@tempSerial
 23910  007F98  6E24               	movwf	i2c_writeNBytes@data^0,c
 23911  007F9A  0E00               	movlw	0
 23912  007F9C  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23913  007F9E  0E04               	movlw	4
 23914  007FA0  6E25               	movwf	i2c_writeNBytes@len^0,c
 23915  007FA2  0E50               	movlw	80
 23916  007FA4  EC42  F041         	call	_i2c_writeNBytes
 23917  007FA8  0012               	return		;funcret
 23918  007FAA                     __end_of_RemoveSerial:
 23919                           	callstack 0
 23920                           
 23921 ;; *************** function _ReadSerial *****************
 23922 ;; Defined at:
 23923 ;;		line 110 in file "controlMemory_MC50.c"
 23924 ;; Parameters:    Size  Location     Type
 23925 ;;  cmdType         1    wreg     unsigned char 
 23926 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 23927 ;;		 -> eusartparser@serial(4), 
 23928 ;;  position        1   46[COMRAM] unsigned char 
 23929 ;; Auto vars:     Size  Location     Type
 23930 ;;  cmdType         1   49[COMRAM] unsigned char 
 23931 ;; Return value:  Size  Location     Type
 23932 ;;                  1    wreg      void 
 23933 ;; Registers used:
 23934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23935 ;; Tracked objects:
 23936 ;;		On entry : 3F/0
 23937 ;;		On exit  : 0/0
 23938 ;;		Unchanged: 0/0
 23939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23943 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23944 ;;Total ram usage:        5 bytes
 23945 ;; Hardware stack levels used: 1
 23946 ;; Hardware stack levels required when called: 13
 23947 ;; This function calls:
 23948 ;;		_i2c_readDataBlock
 23949 ;; This function is called by:
 23950 ;;		_eusartparser
 23951 ;; This function uses a non-reentrant model
 23952 ;;
 23953                           
 23954                           	psect	text85
 23955  0083D8                     __ptext85:
 23956                           	callstack 0
 23957  0083D8                     _ReadSerial:
 23958                           	callstack 16
 23959                           
 23960                           ;incstack = 0
 23961                           ;ReadSerial@cmdType stored from wreg
 23962  0083D8  6E32               	movwf	ReadSerial@cmdType^0,c
 23963                           
 23964                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 23965  0083DA  5032               	movf	ReadSerial@cmdType^0,w,c
 23966  0083DC  A4D8               	btfss	status,2,c
 23967  0083DE  D01A               	goto	l21689
 23968                           
 23969                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 23970  0083E0  502F               	movf	ReadSerial@position^0,w,c
 23971  0083E2  6E30               	movwf	??_ReadSerial^0,c
 23972  0083E4  6A31               	clrf	(??_ReadSerial+1)^0,c
 23973  0083E6  90D8               	bcf	status,0,c
 23974  0083E8  3630               	rlcf	??_ReadSerial^0,f,c
 23975  0083EA  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 23976  0083EC  90D8               	bcf	status,0,c
 23977  0083EE  3630               	rlcf	??_ReadSerial^0,f,c
 23978  0083F0  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 23979  0083F2  0E00               	movlw	0
 23980  0083F4  2430               	addwf	??_ReadSerial^0,w,c
 23981  0083F6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23982  0083F8  0E02               	movlw	2
 23983  0083FA  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 23984  0083FC  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23985  0083FE  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 23986  008402  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23987  008404  0E00               	movlw	0
 23988  008406  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23989  008408  0E04               	movlw	4
 23990  00840A  6E26               	movwf	i2c_readDataBlock@len^0,c
 23991  00840C  0E50               	movlw	80
 23992  00840E  EC07  F041         	call	_i2c_readDataBlock
 23993                           
 23994                           ;controlMemory_MC50.c: 115:     }
 23995  008412  0012               	return	
 23996  008414                     l21689:
 23997                           
 23998                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 23999  008414  502F               	movf	ReadSerial@position^0,w,c
 24000  008416  6E30               	movwf	??_ReadSerial^0,c
 24001  008418  6A31               	clrf	(??_ReadSerial+1)^0,c
 24002  00841A  90D8               	bcf	status,0,c
 24003  00841C  3630               	rlcf	??_ReadSerial^0,f,c
 24004  00841E  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24005  008420  90D8               	bcf	status,0,c
 24006  008422  3630               	rlcf	??_ReadSerial^0,f,c
 24007  008424  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 24008  008426  0E00               	movlw	0
 24009  008428  2430               	addwf	??_ReadSerial^0,w,c
 24010  00842A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24011  00842C  0E05               	movlw	5
 24012  00842E  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 24013  008430  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24014  008432  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 24015  008436  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24016  008438  0E00               	movlw	0
 24017  00843A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24018  00843C  0E04               	movlw	4
 24019  00843E  6E26               	movwf	i2c_readDataBlock@len^0,c
 24020  008440  0E50               	movlw	80
 24021  008442  EC07  F041         	call	_i2c_readDataBlock
 24022  008446  0012               	return		;funcret
 24023  008448                     __end_of_ReadSerial:
 24024                           	callstack 0
 24025                           
 24026 ;; *************** function _i2c_readDataBlock *****************
 24027 ;; Defined at:
 24028 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 24029 ;; Parameters:    Size  Location     Type
 24030 ;;  address         1    wreg     unsigned char 
 24031 ;;  reg             2   33[COMRAM] unsigned short 
 24032 ;;  data            2   35[COMRAM] PTR void 
 24033 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 24034 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 24035 ;;  len             2   37[COMRAM] unsigned int 
 24036 ;; Auto vars:     Size  Location     Type
 24037 ;;  address         1   40[COMRAM] unsigned char 
 24038 ;;  d               4   41[COMRAM] struct .
 24039 ;; Return value:  Size  Location     Type
 24040 ;;                  1    wreg      void 
 24041 ;; Registers used:
 24042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24043 ;; Tracked objects:
 24044 ;;		On entry : 0/2
 24045 ;;		On exit  : 0/0
 24046 ;;		Unchanged: 0/0
 24047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24048 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24049 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24051 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24052 ;;Total ram usage:       12 bytes
 24053 ;; Hardware stack levels used: 1
 24054 ;; Hardware stack levels required when called: 12
 24055 ;; This function calls:
 24056 ;;		_I2C1_Close
 24057 ;;		_I2C1_MasterWrite
 24058 ;;		_I2C1_Open
 24059 ;;		_I2C1_SetAddressNackCallback
 24060 ;;		_I2C1_SetBuffer
 24061 ;;		_I2C1_SetDataCompleteCallback
 24062 ;; This function is called by:
 24063 ;;		_validateRemoteSerialNumber
 24064 ;;		_ReadSerial
 24065 ;;		_cmdMemoryIsEmpty
 24066 ;;		_loadNVM_VarSystem
 24067 ;; This function uses a non-reentrant model
 24068 ;;
 24069                           
 24070                           	psect	text86
 24071  00820E                     __ptext86:
 24072                           	callstack 0
 24073  00820E                     _i2c_readDataBlock:
 24074                           	callstack 14
 24075                           
 24076                           ;incstack = 0
 24077                           ;i2c_readDataBlock@address stored from wreg
 24078  00820E  6E29               	movwf	i2c_readDataBlock@address^0,c
 24079                           
 24080                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 24081  008210  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 24082  008214  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 24083                           
 24084                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 24085  008218  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 24086  00821C  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 24087  008220                     l19995:
 24088  008220  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 24089  008222  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 24090  008224  EC12  F03F         	call	_I2C1_Open
 24091  008228  0900               	iorlw	0
 24092  00822A  B4D8               	btfsc	status,2,c
 24093  00822C  D7F9               	goto	l19995
 24094                           
 24095                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 24096  00822E  0E38               	movlw	low _rdBlkRegCompleteHandler
 24097  008230  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 24098  008232  0E8E               	movlw	high _rdBlkRegCompleteHandler
 24099  008234  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 24100  008236  0E2A               	movlw	low i2c_readDataBlock@d
 24101  008238  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 24102  00823A  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 24103  00823C  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 24104                           
 24105                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 24106  008240  0E22               	movlw	low i2c_readDataBlock@reg
 24107  008242  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 24108  008244  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 24109  008246  0E00               	movlw	0
 24110  008248  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 24111  00824A  0E01               	movlw	1
 24112  00824C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 24113  00824E  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 24114                           
 24115                           ; BSR set to: 2
 24116                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 24117  008252  0E00               	movlw	0
 24118  008254  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 24119  008256  0E00               	movlw	0
 24120  008258  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 24121  00825A  0E00               	movlw	0
 24122  00825C  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 24123  00825E  0E00               	movlw	0
 24124  008260  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 24125  008262  ECDC  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 24126                           
 24127                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 24128  008266  ECAA  F04B         	call	_I2C1_MasterWrite	;wreg free
 24129  00826A                     l20005:
 24130  00826A  EC1D  F04A         	call	_I2C1_Close	;wreg free
 24131  00826E  06E8               	decf	wreg,f,c
 24132  008270  B4D8               	btfsc	status,2,c
 24133  008272  D7FB               	goto	l20005
 24134                           
 24135                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 24136  008274  0ED0               	movlw	208
 24137  008276  6E28               	movwf	??_i2c_readDataBlock^0,c
 24138  008278  0ECA               	movlw	202
 24139  00827A                     u29817:
 24140  00827A  2EE8               	decfsz	wreg,f,c
 24141  00827C  D7FE               	bra	u29817
 24142  00827E  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 24143  008280  D7FC               	bra	u29817
 24144  008282  0012               	return		;funcret
 24145  008284                     __end_of_i2c_readDataBlock:
 24146                           	callstack 0
 24147                           
 24148 ;; *************** function _WWDT_TimerClear *****************
 24149 ;; Defined at:
 24150 ;;		line 128 in file "mcc_generated_files/mcc.c"
 24151 ;; Parameters:    Size  Location     Type
 24152 ;;		None
 24153 ;; Auto vars:     Size  Location     Type
 24154 ;;  state           1   15[COMRAM] _Bool 
 24155 ;;  readBack        1    0        unsigned char 
 24156 ;; Return value:  Size  Location     Type
 24157 ;;                  1    wreg      void 
 24158 ;; Registers used:
 24159 ;;		wreg, status,2
 24160 ;; Tracked objects:
 24161 ;;		On entry : 0/0
 24162 ;;		On exit  : 0/0
 24163 ;;		Unchanged: 0/0
 24164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24169 ;;Total ram usage:        1 bytes
 24170 ;; Hardware stack levels used: 1
 24171 ;; Hardware stack levels required when called: 4
 24172 ;; This function calls:
 24173 ;;		Nothing
 24174 ;; This function is called by:
 24175 ;;		_main
 24176 ;; This function uses a non-reentrant model
 24177 ;;
 24178                           
 24179                           	psect	text87
 24180  00949A                     __ptext87:
 24181                           	callstack 0
 24182  00949A                     _WWDT_TimerClear:
 24183                           	callstack 26
 24184                           
 24185                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 24186                           
 24187                           ;incstack = 0
 24188  00949A  0E00               	movlw	0
 24189  00949C  BEF2               	btfsc	4082,7,c	;volatile
 24190  00949E  0E01               	movlw	1
 24191  0094A0  6E10               	movwf	WWDT_TimerClear@state^0,c
 24192                           
 24193                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 24194  0094A2  9EF2               	bcf	4082,7,c	;volatile
 24195  0094A4  010E               	movlb	14	; () banked
 24196  0094A6  51D2               	movf	210,w,b	;volatile
 24197  0094A8  0004               	clrwdt		;# 
 24198                           
 24199                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 24200  0094AA  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 24201  0094AC  D002               	bra	u18945
 24202  0094AE  9EF2               	bcf	4082,7,c	;volatile
 24203  0094B0  D001               	bra	u18946
 24204  0094B2                     u18945:
 24205  0094B2  8EF2               	bsf	4082,7,c	;volatile
 24206  0094B4                     u18946:
 24207  0094B4  0012               	return		;funcret
 24208  0094B6                     __end_of_WWDT_TimerClear:
 24209                           	callstack 0
 24210                           
 24211 ;; *************** function _WWDT_SoftEnable *****************
 24212 ;; Defined at:
 24213 ;;		line 104 in file "mcc_generated_files/mcc.c"
 24214 ;; Parameters:    Size  Location     Type
 24215 ;;		None
 24216 ;; Auto vars:     Size  Location     Type
 24217 ;;		None
 24218 ;; Return value:  Size  Location     Type
 24219 ;;                  1    wreg      void 
 24220 ;; Registers used:
 24221 ;;		None
 24222 ;; Tracked objects:
 24223 ;;		On entry : 3F/E
 24224 ;;		On exit  : 3F/E
 24225 ;;		Unchanged: 0/0
 24226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24231 ;;Total ram usage:        0 bytes
 24232 ;; Hardware stack levels used: 1
 24233 ;; Hardware stack levels required when called: 4
 24234 ;; This function calls:
 24235 ;;		Nothing
 24236 ;; This function is called by:
 24237 ;;		_main
 24238 ;; This function uses a non-reentrant model
 24239 ;;
 24240                           
 24241                           	psect	text88
 24242  0097DA                     __ptext88:
 24243                           	callstack 0
 24244  0097DA                     _WWDT_SoftEnable:
 24245                           	callstack 26
 24246                           
 24247                           ; BSR set to: 14
 24248                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 24249                           
 24250                           ;incstack = 0
 24251  0097DA  81D2               	bsf	210,0,b	;volatile
 24252                           
 24253                           ; BSR set to: 14
 24254  0097DC  0012               	return		;funcret
 24255  0097DE                     __end_of_WWDT_SoftEnable:
 24256                           	callstack 0
 24257                           
 24258 ;; *************** function _ShowVersion *****************
 24259 ;; Defined at:
 24260 ;;		line 254 in file "main_MC50.c"
 24261 ;; Parameters:    Size  Location     Type
 24262 ;;		None
 24263 ;; Auto vars:     Size  Location     Type
 24264 ;;		None
 24265 ;; Return value:  Size  Location     Type
 24266 ;;                  1    wreg      void 
 24267 ;; Registers used:
 24268 ;;		wreg, status,2, status,0, cstack
 24269 ;; Tracked objects:
 24270 ;;		On entry : 3F/1
 24271 ;;		On exit  : 3F/1
 24272 ;;		Unchanged: 0/0
 24273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24278 ;;Total ram usage:        0 bytes
 24279 ;; Hardware stack levels used: 1
 24280 ;; Hardware stack levels required when called: 5
 24281 ;; This function calls:
 24282 ;;		_SetSegmentValue
 24283 ;; This function is called by:
 24284 ;;		_main
 24285 ;; This function uses a non-reentrant model
 24286 ;;
 24287                           
 24288                           	psect	text89
 24289  0085F8                     __ptext89:
 24290                           	callstack 0
 24291  0085F8                     _ShowVersion:
 24292                           	callstack 25
 24293                           
 24294                           ; BSR set to: 1
 24295                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 24296                           
 24297                           ; BSR set to: 14
 24298                           ;incstack = 0
 24299  0085F8  BFD8               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 24300  0085FA  D005               	goto	u20320
 24301  0085FC  51D8               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 24302  0085FE  E12E               	bnz	l2044
 24303  008600  05D7               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 24304  008602  B0D8               	btfsc	status,0,c
 24305  008604  0012               	return	
 24306  008606                     u20320:
 24307                           
 24308                           ; BSR set to: 1
 24309                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 24310  008606  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 24311  008608  A4D8               	btfss	status,2,c
 24312  00860A  D006               	goto	l17389
 24313                           
 24314                           ; BSR set to: 1
 24315                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 24316  00860C  0E01               	movlw	1
 24317  00860E  6E1C               	movwf	SetSegmentValue@d2^0,c
 24318  008610  0E00               	movlw	0
 24319  008612  EC9E  F04A         	call	_SetSegmentValue
 24320                           
 24321                           ;main_MC50.c: 262:             }
 24322  008616  D01C               	goto	l2039
 24323  008618                     l17389:
 24324                           
 24325                           ; BSR set to: 1
 24326  008618  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 24327  00861A  A4D8               	btfss	status,2,c
 24328  00861C  D006               	goto	l17393
 24329                           
 24330                           ; BSR set to: 1
 24331                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 24332  00861E  0E01               	movlw	1
 24333  008620  6E1C               	movwf	SetSegmentValue@d2^0,c
 24334  008622  0E14               	movlw	20
 24335  008624  EC9E  F04A         	call	_SetSegmentValue
 24336                           
 24337                           ;main_MC50.c: 266:             }
 24338  008628  D013               	goto	l2039
 24339  00862A                     l17393:
 24340                           
 24341                           ; BSR set to: 1
 24342  00862A  0E02               	movlw	2
 24343  00862C  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24344  00862E  A4D8               	btfss	status,2,c
 24345  008630  D006               	goto	l17397
 24346                           
 24347                           ; BSR set to: 1
 24348                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 24349  008632  0E00               	movlw	0
 24350  008634  6E1C               	movwf	SetSegmentValue@d2^0,c
 24351  008636  0E08               	movlw	8
 24352  008638  EC9E  F04A         	call	_SetSegmentValue
 24353                           
 24354                           ;main_MC50.c: 270:             }
 24355  00863C  D009               	goto	l2039
 24356  00863E                     l17397:
 24357                           
 24358                           ; BSR set to: 1
 24359  00863E  0E03               	movlw	3
 24360  008640  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24361  008642  A4D8               	btfss	status,2,c
 24362  008644  D005               	goto	l2039
 24363                           
 24364                           ; BSR set to: 1
 24365                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 24366  008646  0E02               	movlw	2
 24367  008648  6E1C               	movwf	SetSegmentValue@d2^0,c
 24368  00864A  0E14               	movlw	20
 24369  00864C  EC9E  F04A         	call	_SetSegmentValue
 24370  008650                     l2039:
 24371                           
 24372                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 24373                           
 24374                           ; BSR set to: 1
 24375  008650  0101               	movlb	1	; () banked
 24376  008652  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 24377                           
 24378                           ; BSR set to: 1
 24379                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 24380  008654  0E00               	movlw	0
 24381  008656  6FD8               	movwf	(_ts_system+61)& (0+255),b	;volatile
 24382  008658  0E14               	movlw	20
 24383  00865A  6FD7               	movwf	(_ts_system+60)& (0+255),b	;volatile
 24384  00865C                     l2044:
 24385                           
 24386                           ; BSR set to: 1
 24387  00865C  0012               	return		;funcret
 24388  00865E                     __end_of_ShowVersion:
 24389                           	callstack 0
 24390                           
 24391 ;; *************** function _SetSegmentValue *****************
 24392 ;; Defined at:
 24393 ;;		line 112 in file "outputs_MC50.c"
 24394 ;; Parameters:    Size  Location     Type
 24395 ;;  d1              1    wreg     unsigned char 
 24396 ;;  d2              1   27[COMRAM] unsigned char 
 24397 ;; Auto vars:     Size  Location     Type
 24398 ;;  d1              1   28[COMRAM] unsigned char 
 24399 ;; Return value:  Size  Location     Type
 24400 ;;                  1    wreg      void 
 24401 ;; Registers used:
 24402 ;;		wreg, status,2
 24403 ;; Tracked objects:
 24404 ;;		On entry : 0/0
 24405 ;;		On exit  : 3F/0
 24406 ;;		Unchanged: 0/0
 24407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24412 ;;Total ram usage:        2 bytes
 24413 ;; Hardware stack levels used: 1
 24414 ;; Hardware stack levels required when called: 4
 24415 ;; This function calls:
 24416 ;;		Nothing
 24417 ;; This function is called by:
 24418 ;;		_main
 24419 ;;		_ShowVersion
 24420 ;;		_controlSelectRemote
 24421 ;; This function uses a non-reentrant model
 24422 ;;
 24423                           
 24424                           	psect	text90
 24425  00953C                     __ptext90:
 24426                           	callstack 0
 24427  00953C                     _SetSegmentValue:
 24428                           	callstack 23
 24429                           
 24430                           ; BSR set to: 1
 24431                           ;incstack = 0
 24432                           ;SetSegmentValue@d1 stored from wreg
 24433  00953C  6E1D               	movwf	SetSegmentValue@d1^0,c
 24434                           
 24435                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 24436  00953E  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 24437                           
 24438                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 24439  009542  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 24440                           
 24441                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 24442  009546  0E00               	movlw	0
 24443  009548  0100               	movlb	0	; () banked
 24444  00954A  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 24445  00954C  0E00               	movlw	0
 24446  00954E  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 24447                           
 24448                           ; BSR set to: 0
 24449                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 24450  009550  0E00               	movlw	0
 24451  009552  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 24452                           
 24453                           ; BSR set to: 0
 24454  009554  0012               	return		;funcret
 24455  009556                     __end_of_SetSegmentValue:
 24456                           	callstack 0
 24457                           
 24458 ;; *************** function _SYSTEM_Initialize *****************
 24459 ;; Defined at:
 24460 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24461 ;; Parameters:    Size  Location     Type
 24462 ;;		None
 24463 ;; Auto vars:     Size  Location     Type
 24464 ;;		None
 24465 ;; Return value:  Size  Location     Type
 24466 ;;                  1    wreg      void 
 24467 ;; Registers used:
 24468 ;;		wreg, status,2, status,0, cstack
 24469 ;; Tracked objects:
 24470 ;;		On entry : 3F/0
 24471 ;;		On exit  : 3F/E
 24472 ;;		Unchanged: 0/0
 24473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24478 ;;Total ram usage:        0 bytes
 24479 ;; Hardware stack levels used: 1
 24480 ;; Hardware stack levels required when called: 6
 24481 ;; This function calls:
 24482 ;;		_ADCC_Initialize
 24483 ;;		_EUSART1_Initialize
 24484 ;;		_I2C1_Initialize
 24485 ;;		_INTERRUPT_Initialize
 24486 ;;		_OSCILLATOR_Initialize
 24487 ;;		_PIN_MANAGER_Initialize
 24488 ;;		_PMD_Initialize
 24489 ;;		_TMR0_Initialize
 24490 ;;		_TMR1_Initialize
 24491 ;;		_TMR2_Initialize
 24492 ;;		_WWDT_Initialize
 24493 ;; This function is called by:
 24494 ;;		_main
 24495 ;; This function uses a non-reentrant model
 24496 ;;
 24497                           
 24498                           	psect	text91
 24499  00902E                     __ptext91:
 24500                           	callstack 0
 24501  00902E                     _SYSTEM_Initialize:
 24502                           	callstack 24
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 24506                           
 24507                           ; BSR set to: 0
 24508                           ;incstack = 0
 24509  00902E  ECEF  F04B         	call	_INTERRUPT_Initialize	;wreg free
 24510                           
 24511                           ; BSR set to: 0
 24512                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 24513  009032  EC5B  F04A         	call	_PMD_Initialize	;wreg free
 24514                           
 24515                           ; BSR set to: 14
 24516                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 24517  009036  EC2A  F04B         	call	_I2C1_Initialize	;wreg free
 24518                           
 24519                           ; BSR set to: 14
 24520                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 24521  00903A  EC99  F03C         	call	_PIN_MANAGER_Initialize	;wreg free
 24522                           
 24523                           ; BSR set to: 14
 24524                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 24525  00903E  EC00  F04B         	call	_OSCILLATOR_Initialize	;wreg free
 24526                           
 24527                           ; BSR set to: 14
 24528                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 24529  009042  EC6E  F04B         	call	_WWDT_Initialize	;wreg free
 24530                           
 24531                           ; BSR set to: 14
 24532                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 24533  009046  EC6E  F045         	call	_ADCC_Initialize	;wreg free
 24534                           
 24535                           ; BSR set to: 15
 24536                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 24537  00904A  EC70  F048         	call	_TMR2_Initialize	;wreg free
 24538                           
 24539                           ; BSR set to: 14
 24540                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 24541  00904E  ECBB  F046         	call	_TMR1_Initialize	;wreg free
 24542                           
 24543                           ; BSR set to: 14
 24544                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 24545  009052  EC0C  F04A         	call	_TMR0_Initialize	;wreg free
 24546                           
 24547                           ; BSR set to: 14
 24548                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 24549  009056  ECD5  F03F         	call	_EUSART1_Initialize	;wreg free
 24550                           
 24551                           ; BSR set to: 14
 24552  00905A  0012               	return		;funcret
 24553  00905C                     __end_of_SYSTEM_Initialize:
 24554                           	callstack 0
 24555                           
 24556 ;; *************** function _WWDT_Initialize *****************
 24557 ;; Defined at:
 24558 ;;		line 96 in file "mcc_generated_files/mcc.c"
 24559 ;; Parameters:    Size  Location     Type
 24560 ;;		None
 24561 ;; Auto vars:     Size  Location     Type
 24562 ;;		None
 24563 ;; Return value:  Size  Location     Type
 24564 ;;                  1    wreg      void 
 24565 ;; Registers used:
 24566 ;;		wreg, status,2
 24567 ;; Tracked objects:
 24568 ;;		On entry : 3F/E
 24569 ;;		On exit  : 3F/E
 24570 ;;		Unchanged: 0/0
 24571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24576 ;;Total ram usage:        0 bytes
 24577 ;; Hardware stack levels used: 1
 24578 ;; Hardware stack levels required when called: 4
 24579 ;; This function calls:
 24580 ;;		Nothing
 24581 ;; This function is called by:
 24582 ;;		_SYSTEM_Initialize
 24583 ;; This function uses a non-reentrant model
 24584 ;;
 24585                           
 24586                           	psect	text92
 24587  0096DC                     __ptext92:
 24588                           	callstack 0
 24589  0096DC                     _WWDT_Initialize:
 24590                           	callstack 25
 24591                           
 24592                           ; BSR set to: 14
 24593                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 24594                           
 24595                           ; BSR set to: 14
 24596                           ;incstack = 0
 24597  0096DC  0E16               	movlw	22
 24598  0096DE  6FD2               	movwf	210,b	;volatile
 24599                           
 24600                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 24601  0096E0  0E27               	movlw	39
 24602  0096E2  6FD3               	movwf	211,b	;volatile
 24603                           
 24604                           ; BSR set to: 14
 24605  0096E4  0012               	return		;funcret
 24606  0096E6                     __end_of_WWDT_Initialize:
 24607                           	callstack 0
 24608                           
 24609 ;; *************** function _TMR2_Initialize *****************
 24610 ;; Defined at:
 24611 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 24612 ;; Parameters:    Size  Location     Type
 24613 ;;		None
 24614 ;; Auto vars:     Size  Location     Type
 24615 ;;		None
 24616 ;; Return value:  Size  Location     Type
 24617 ;;                  1    wreg      void 
 24618 ;; Registers used:
 24619 ;;		wreg, status,2, status,0, cstack
 24620 ;; Tracked objects:
 24621 ;;		On entry : 3F/F
 24622 ;;		On exit  : 3F/E
 24623 ;;		Unchanged: 0/0
 24624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24629 ;;Total ram usage:        0 bytes
 24630 ;; Hardware stack levels used: 1
 24631 ;; Hardware stack levels required when called: 5
 24632 ;; This function calls:
 24633 ;;		_TMR2_SetInterruptHandler
 24634 ;; This function is called by:
 24635 ;;		_SYSTEM_Initialize
 24636 ;; This function uses a non-reentrant model
 24637 ;;
 24638                           
 24639                           	psect	text93
 24640  0090E0                     __ptext93:
 24641                           	callstack 0
 24642  0090E0                     _TMR2_Initialize:
 24643                           	callstack 24
 24644                           
 24645                           ; BSR set to: 15
 24646                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 24647                           
 24648                           ; BSR set to: 14
 24649                           ;incstack = 0
 24650  0090E0  0E02               	movlw	2
 24651  0090E2  6EBF               	movwf	191,c	;volatile
 24652                           
 24653                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 24654  0090E4  0E40               	movlw	64
 24655  0090E6  6EBE               	movwf	190,c	;volatile
 24656                           
 24657                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 24658  0090E8  0E00               	movlw	0
 24659  0090EA  6EC0               	movwf	192,c	;volatile
 24660                           
 24661                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 24662  0090EC  0EC7               	movlw	199
 24663  0090EE  6EBC               	movwf	188,c	;volatile
 24664                           
 24665                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 24666  0090F0  0E00               	movlw	0
 24667  0090F2  6EBB               	movwf	187,c	;volatile
 24668                           
 24669                           ; BSR set to: 15
 24670                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 24671  0090F4  010E               	movlb	14	; () banked
 24672  0090F6  93CE               	bcf	206,1,b	;volatile
 24673                           
 24674                           ; BSR set to: 14
 24675                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 24676  0090F8  83C6               	bsf	198,1,b	;volatile
 24677                           
 24678                           ; BSR set to: 14
 24679                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 24680  0090FA  0E0A               	movlw	low _TMR2_DefaultInterruptHandler
 24681  0090FC  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 24682  0090FE  0E98               	movlw	high _TMR2_DefaultInterruptHandler
 24683  009100  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 24684  009102  EC73  F04B         	call	_TMR2_SetInterruptHandler	;wreg free
 24685                           
 24686                           ; BSR set to: 14
 24687                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 24688  009106  0ED9               	movlw	217
 24689  009108  6EBD               	movwf	189,c	;volatile
 24690                           
 24691                           ; BSR set to: 14
 24692  00910A  0012               	return		;funcret
 24693  00910C                     __end_of_TMR2_Initialize:
 24694                           	callstack 0
 24695                           
 24696 ;; *************** function _TMR2_SetInterruptHandler *****************
 24697 ;; Defined at:
 24698 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 24699 ;; Parameters:    Size  Location     Type
 24700 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24701 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 24702 ;; Auto vars:     Size  Location     Type
 24703 ;;		None
 24704 ;; Return value:  Size  Location     Type
 24705 ;;                  1    wreg      void 
 24706 ;; Registers used:
 24707 ;;		wreg, status,2, status,0
 24708 ;; Tracked objects:
 24709 ;;		On entry : 3F/E
 24710 ;;		On exit  : 3F/E
 24711 ;;		Unchanged: 3F/0
 24712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24717 ;;Total ram usage:        2 bytes
 24718 ;; Hardware stack levels used: 1
 24719 ;; Hardware stack levels required when called: 4
 24720 ;; This function calls:
 24721 ;;		Nothing
 24722 ;; This function is called by:
 24723 ;;		_TMR2_Initialize
 24724 ;; This function uses a non-reentrant model
 24725 ;;
 24726                           
 24727                           	psect	text94
 24728  0096E6                     __ptext94:
 24729                           	callstack 0
 24730  0096E6                     _TMR2_SetInterruptHandler:
 24731                           	callstack 24
 24732                           
 24733                           ; BSR set to: 14
 24734                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 24735                           
 24736                           ; BSR set to: 14
 24737                           ;incstack = 0
 24738  0096E6  C010  F2DF         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 24739  0096EA  C011  F2E0         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 24740                           
 24741                           ; BSR set to: 14
 24742  0096EE  0012               	return		;funcret
 24743  0096F0                     __end_of_TMR2_SetInterruptHandler:
 24744                           	callstack 0
 24745                           
 24746 ;; *************** function _TMR1_Initialize *****************
 24747 ;; Defined at:
 24748 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 24749 ;; Parameters:    Size  Location     Type
 24750 ;;		None
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;		None
 24753 ;; Return value:  Size  Location     Type
 24754 ;;                  1    wreg      void 
 24755 ;; Registers used:
 24756 ;;		wreg, status,2, status,0, cstack
 24757 ;; Tracked objects:
 24758 ;;		On entry : 3F/E
 24759 ;;		On exit  : 3F/E
 24760 ;;		Unchanged: 0/0
 24761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24766 ;;Total ram usage:        2 bytes
 24767 ;; Hardware stack levels used: 1
 24768 ;; Hardware stack levels required when called: 5
 24769 ;; This function calls:
 24770 ;;		_TMR1_SetInterruptHandler
 24771 ;; This function is called by:
 24772 ;;		_SYSTEM_Initialize
 24773 ;; This function uses a non-reentrant model
 24774 ;;
 24775                           
 24776                           	psect	text95
 24777  008D76                     __ptext95:
 24778                           	callstack 0
 24779  008D76                     _TMR1_Initialize:
 24780                           	callstack 24
 24781                           
 24782                           ; BSR set to: 14
 24783                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 24784                           
 24785                           ; BSR set to: 14
 24786                           ;incstack = 0
 24787  008D76  0E00               	movlw	0
 24788  008D78  6ED0               	movwf	208,c	;volatile
 24789                           
 24790                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 24791  008D7A  0E00               	movlw	0
 24792  008D7C  6ED1               	movwf	209,c	;volatile
 24793                           
 24794                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 24795  008D7E  0E01               	movlw	1
 24796  008D80  6ED2               	movwf	210,c	;volatile
 24797                           
 24798                           ; BSR set to: 14
 24799                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 24800  008D82  68CE               	setf	206,c	;volatile
 24801                           
 24802                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 24803  008D84  0E38               	movlw	56
 24804  008D86  6ECD               	movwf	205,c	;volatile
 24805                           
 24806                           ; BSR set to: 14
 24807                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 24808  008D88  91CE               	bcf	206,0,b	;volatile
 24809                           
 24810                           ; BSR set to: 14
 24811                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 24812  008D8A  50CD               	movf	205,w,c	;volatile
 24813  008D8C  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 24814  008D90  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 24815  008D92  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 24816  008D96  6A12               	clrf	??_TMR1_Initialize^0,c
 24817  008D98  1012               	iorwf	??_TMR1_Initialize^0,w,c
 24818  008D9A  0102               	movlb	2	; () banked
 24819  008D9C  6FE3               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 24820  008D9E  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 24821  008DA0  6FE4               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 24822                           
 24823                           ; BSR set to: 2
 24824                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 24825  008DA2  010E               	movlb	14	; () banked
 24826  008DA4  81C6               	bsf	198,0,b	;volatile
 24827                           
 24828                           ; BSR set to: 14
 24829                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 24830  008DA6  0E0C               	movlw	low _TMR1_DefaultInterruptHandler
 24831  008DA8  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 24832  008DAA  0E98               	movlw	high _TMR1_DefaultInterruptHandler
 24833  008DAC  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 24834  008DAE  EC78  F04B         	call	_TMR1_SetInterruptHandler	;wreg free
 24835                           
 24836                           ; BSR set to: 14
 24837                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 24838  008DB2  0E31               	movlw	49
 24839  008DB4  6ECF               	movwf	207,c	;volatile
 24840                           
 24841                           ; BSR set to: 14
 24842  008DB6  0012               	return		;funcret
 24843  008DB8                     __end_of_TMR1_Initialize:
 24844                           	callstack 0
 24845                           
 24846 ;; *************** function _TMR1_SetInterruptHandler *****************
 24847 ;; Defined at:
 24848 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 24849 ;; Parameters:    Size  Location     Type
 24850 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24851 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 24852 ;; Auto vars:     Size  Location     Type
 24853 ;;		None
 24854 ;; Return value:  Size  Location     Type
 24855 ;;                  1    wreg      void 
 24856 ;; Registers used:
 24857 ;;		wreg, status,2, status,0
 24858 ;; Tracked objects:
 24859 ;;		On entry : 3F/E
 24860 ;;		On exit  : 3F/E
 24861 ;;		Unchanged: 3F/0
 24862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24867 ;;Total ram usage:        2 bytes
 24868 ;; Hardware stack levels used: 1
 24869 ;; Hardware stack levels required when called: 4
 24870 ;; This function calls:
 24871 ;;		Nothing
 24872 ;; This function is called by:
 24873 ;;		_TMR1_Initialize
 24874 ;; This function uses a non-reentrant model
 24875 ;;
 24876                           
 24877                           	psect	text96
 24878  0096F0                     __ptext96:
 24879                           	callstack 0
 24880  0096F0                     _TMR1_SetInterruptHandler:
 24881                           	callstack 24
 24882                           
 24883                           ; BSR set to: 14
 24884                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 24885                           
 24886                           ; BSR set to: 14
 24887                           ;incstack = 0
 24888  0096F0  C010  F2E1         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 24889  0096F4  C011  F2E2         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 24890                           
 24891                           ; BSR set to: 14
 24892  0096F8  0012               	return		;funcret
 24893  0096FA                     __end_of_TMR1_SetInterruptHandler:
 24894                           	callstack 0
 24895                           
 24896 ;; *************** function _TMR0_Initialize *****************
 24897 ;; Defined at:
 24898 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 24899 ;; Parameters:    Size  Location     Type
 24900 ;;		None
 24901 ;; Auto vars:     Size  Location     Type
 24902 ;;		None
 24903 ;; Return value:  Size  Location     Type
 24904 ;;                  1    wreg      void 
 24905 ;; Registers used:
 24906 ;;		wreg, status,2, status,0, cstack
 24907 ;; Tracked objects:
 24908 ;;		On entry : 3F/E
 24909 ;;		On exit  : 3F/E
 24910 ;;		Unchanged: 0/0
 24911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24916 ;;Total ram usage:        0 bytes
 24917 ;; Hardware stack levels used: 1
 24918 ;; Hardware stack levels required when called: 5
 24919 ;; This function calls:
 24920 ;;		_TMR0_SetInterruptHandler
 24921 ;; This function is called by:
 24922 ;;		_SYSTEM_Initialize
 24923 ;; This function uses a non-reentrant model
 24924 ;;
 24925                           
 24926                           	psect	text97
 24927  009418                     __ptext97:
 24928                           	callstack 0
 24929  009418                     _TMR0_Initialize:
 24930                           	callstack 24
 24931                           
 24932                           ; BSR set to: 14
 24933                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 24934                           
 24935                           ; BSR set to: 14
 24936                           ;incstack = 0
 24937  009418  0E41               	movlw	65
 24938  00941A  6ED6               	movwf	214,c	;volatile
 24939                           
 24940                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 24941  00941C  0E84               	movlw	132
 24942  00941E  6ED4               	movwf	212,c	;volatile
 24943                           
 24944                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 24945  009420  0E00               	movlw	0
 24946  009422  6ED3               	movwf	211,c	;volatile
 24947                           
 24948                           ; BSR set to: 14
 24949                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 24950  009424  9BCA               	bcf	202,5,b	;volatile
 24951                           
 24952                           ; BSR set to: 14
 24953                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 24954  009426  8BC2               	bsf	194,5,b	;volatile
 24955                           
 24956                           ; BSR set to: 14
 24957                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 24958  009428  0E0E               	movlw	low _TMR0_DefaultInterruptHandler
 24959  00942A  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 24960  00942C  0E98               	movlw	high _TMR0_DefaultInterruptHandler
 24961  00942E  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 24962  009430  EC7D  F04B         	call	_TMR0_SetInterruptHandler	;wreg free
 24963                           
 24964                           ; BSR set to: 14
 24965                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 24966  009434  0E87               	movlw	135
 24967  009436  6ED5               	movwf	213,c	;volatile
 24968                           
 24969                           ; BSR set to: 14
 24970  009438  0012               	return		;funcret
 24971  00943A                     __end_of_TMR0_Initialize:
 24972                           	callstack 0
 24973                           
 24974 ;; *************** function _TMR0_SetInterruptHandler *****************
 24975 ;; Defined at:
 24976 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 24977 ;; Parameters:    Size  Location     Type
 24978 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24979 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 24980 ;; Auto vars:     Size  Location     Type
 24981 ;;		None
 24982 ;; Return value:  Size  Location     Type
 24983 ;;                  1    wreg      void 
 24984 ;; Registers used:
 24985 ;;		wreg, status,2, status,0
 24986 ;; Tracked objects:
 24987 ;;		On entry : 3F/E
 24988 ;;		On exit  : 3F/E
 24989 ;;		Unchanged: 3F/0
 24990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24995 ;;Total ram usage:        2 bytes
 24996 ;; Hardware stack levels used: 1
 24997 ;; Hardware stack levels required when called: 4
 24998 ;; This function calls:
 24999 ;;		Nothing
 25000 ;; This function is called by:
 25001 ;;		_TMR0_Initialize
 25002 ;; This function uses a non-reentrant model
 25003 ;;
 25004                           
 25005                           	psect	text98
 25006  0096FA                     __ptext98:
 25007                           	callstack 0
 25008  0096FA                     _TMR0_SetInterruptHandler:
 25009                           	callstack 24
 25010                           
 25011                           ; BSR set to: 14
 25012                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 25013                           
 25014                           ; BSR set to: 14
 25015                           ;incstack = 0
 25016  0096FA  C010  F2E5         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 25017  0096FE  C011  F2E6         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 25018                           
 25019                           ; BSR set to: 14
 25020  009702  0012               	return		;funcret
 25021  009704                     __end_of_TMR0_SetInterruptHandler:
 25022                           	callstack 0
 25023                           
 25024 ;; *************** function _PMD_Initialize *****************
 25025 ;; Defined at:
 25026 ;;		line 79 in file "mcc_generated_files/mcc.c"
 25027 ;; Parameters:    Size  Location     Type
 25028 ;;		None
 25029 ;; Auto vars:     Size  Location     Type
 25030 ;;		None
 25031 ;; Return value:  Size  Location     Type
 25032 ;;                  1    wreg      void 
 25033 ;; Registers used:
 25034 ;;		wreg, status,2
 25035 ;; Tracked objects:
 25036 ;;		On entry : 3F/0
 25037 ;;		On exit  : 3F/E
 25038 ;;		Unchanged: 0/0
 25039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25044 ;;Total ram usage:        0 bytes
 25045 ;; Hardware stack levels used: 1
 25046 ;; Hardware stack levels required when called: 4
 25047 ;; This function calls:
 25048 ;;		Nothing
 25049 ;; This function is called by:
 25050 ;;		_SYSTEM_Initialize
 25051 ;; This function uses a non-reentrant model
 25052 ;;
 25053                           
 25054                           	psect	text99
 25055  0094B6                     __ptext99:
 25056                           	callstack 0
 25057  0094B6                     _PMD_Initialize:
 25058                           	callstack 25
 25059                           
 25060                           ; BSR set to: 0
 25061                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 25062                           
 25063                           ; BSR set to: 14
 25064                           ;incstack = 0
 25065  0094B6  0E00               	movlw	0
 25066  0094B8  010E               	movlb	14	; () banked
 25067  0094BA  6FE1               	movwf	225,b	;volatile
 25068                           
 25069                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 25070  0094BC  0E00               	movlw	0
 25071  0094BE  6FE2               	movwf	226,b	;volatile
 25072                           
 25073                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 25074  0094C0  0E00               	movlw	0
 25075  0094C2  6FE3               	movwf	227,b	;volatile
 25076                           
 25077                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 25078  0094C4  0E00               	movlw	0
 25079  0094C6  6FE4               	movwf	228,b	;volatile
 25080                           
 25081                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 25082  0094C8  0E00               	movlw	0
 25083  0094CA  6FE5               	movwf	229,b	;volatile
 25084                           
 25085                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 25086  0094CC  0E00               	movlw	0
 25087  0094CE  6FE6               	movwf	230,b	;volatile
 25088                           
 25089                           ; BSR set to: 14
 25090  0094D0  0012               	return		;funcret
 25091  0094D2                     __end_of_PMD_Initialize:
 25092                           	callstack 0
 25093                           
 25094 ;; *************** function _PIN_MANAGER_Initialize *****************
 25095 ;; Defined at:
 25096 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 25097 ;; Parameters:    Size  Location     Type
 25098 ;;		None
 25099 ;; Auto vars:     Size  Location     Type
 25100 ;;		None
 25101 ;; Return value:  Size  Location     Type
 25102 ;;                  1    wreg      void 
 25103 ;; Registers used:
 25104 ;;		wreg, status,2
 25105 ;; Tracked objects:
 25106 ;;		On entry : 3F/E
 25107 ;;		On exit  : 3F/E
 25108 ;;		Unchanged: 0/0
 25109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25114 ;;Total ram usage:        0 bytes
 25115 ;; Hardware stack levels used: 1
 25116 ;; Hardware stack levels required when called: 4
 25117 ;; This function calls:
 25118 ;;		Nothing
 25119 ;; This function is called by:
 25120 ;;		_SYSTEM_Initialize
 25121 ;; This function uses a non-reentrant model
 25122 ;;
 25123                           
 25124                           	psect	text100
 25125  007932                     __ptext100:
 25126                           	callstack 0
 25127  007932                     _PIN_MANAGER_Initialize:
 25128                           	callstack 25
 25129                           
 25130                           ; BSR set to: 14
 25131                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 25132                           
 25133                           ; BSR set to: 14
 25134                           ;incstack = 0
 25135  007932  0E00               	movlw	0
 25136  007934  6E87               	movwf	135,c	;volatile
 25137                           
 25138                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 25139  007936  0E00               	movlw	0
 25140  007938  6E86               	movwf	134,c	;volatile
 25141                           
 25142                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 25143  00793A  0E00               	movlw	0
 25144  00793C  6E83               	movwf	131,c	;volatile
 25145                           
 25146                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 25147  00793E  0E00               	movlw	0
 25148  007940  6E84               	movwf	132,c	;volatile
 25149                           
 25150                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 25151  007942  0E00               	movlw	0
 25152  007944  6E85               	movwf	133,c	;volatile
 25153                           
 25154                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 25155  007946  0E00               	movlw	0
 25156  007948  6E8C               	movwf	140,c	;volatile
 25157                           
 25158                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 25159  00794A  0E7F               	movlw	127
 25160  00794C  6E88               	movwf	136,c	;volatile
 25161                           
 25162                           ; BSR set to: 14
 25163                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 25164  00794E  6889               	setf	137,c	;volatile
 25165                           
 25166                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 25167  007950  0E58               	movlw	88
 25168  007952  6E8A               	movwf	138,c	;volatile
 25169                           
 25170                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 25171  007954  0E00               	movlw	0
 25172  007956  6E8B               	movwf	139,c	;volatile
 25173                           
 25174                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 25175  007958  0E00               	movlw	0
 25176  00795A  010F               	movlb	15	; () banked
 25177  00795C  6F26               	movwf	38,b	;volatile
 25178                           
 25179                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 25180  00795E  0E00               	movlw	0
 25181  007960  6F21               	movwf	33,b	;volatile
 25182                           
 25183                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 25184  007962  0E00               	movlw	0
 25185  007964  6F19               	movwf	25,b	;volatile
 25186                           
 25187                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 25188  007966  0E00               	movlw	0
 25189  007968  6F2E               	movwf	46,b	;volatile
 25190                           
 25191                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 25192  00796A  0E01               	movlw	1
 25193  00796C  6F11               	movwf	17,b	;volatile
 25194                           
 25195                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 25196  00796E  0E00               	movlw	0
 25197  007970  6F25               	movwf	37,b	;volatile
 25198                           
 25199                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 25200  007972  0E00               	movlw	0
 25201  007974  6F2D               	movwf	45,b	;volatile
 25202                           
 25203                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 25204  007976  0EF7               	movlw	247
 25205  007978  6F18               	movwf	24,b	;volatile
 25206                           
 25207                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 25208  00797A  0E00               	movlw	0
 25209  00797C  6F10               	movwf	16,b	;volatile
 25210                           
 25211                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 25212  00797E  0E00               	movlw	0
 25213  007980  6F20               	movwf	32,b	;volatile
 25214                           
 25215                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 25216  007982  0E00               	movlw	0
 25217  007984  6F2C               	movwf	44,b	;volatile
 25218                           
 25219                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 25220  007986  0E00               	movlw	0
 25221  007988  6F0F               	movwf	15,b	;volatile
 25222                           
 25223                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 25224  00798A  0E00               	movlw	0
 25225  00798C  6F17               	movwf	23,b	;volatile
 25226                           
 25227                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 25228  00798E  0E00               	movlw	0
 25229  007990  6F1F               	movwf	31,b	;volatile
 25230                           
 25231                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 25232  007992  0E00               	movlw	0
 25233  007994  6F24               	movwf	36,b	;volatile
 25234                           
 25235                           ; BSR set to: 15
 25236                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 25237  007996  690E               	setf	14,b	;volatile
 25238                           
 25239                           ; BSR set to: 15
 25240                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 25241  007998  6916               	setf	22,b	;volatile
 25242                           
 25243                           ; BSR set to: 15
 25244                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 25245  00799A  691E               	setf	30,b	;volatile
 25246                           
 25247                           ; BSR set to: 15
 25248                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 25249  00799C  6923               	setf	35,b	;volatile
 25250                           
 25251                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 25252  00799E  0E07               	movlw	7
 25253  0079A0  6F2B               	movwf	43,b	;volatile
 25254                           
 25255                           ; BSR set to: 15
 25256                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 25257  0079A2  690D               	setf	13,b	;volatile
 25258                           
 25259                           ; BSR set to: 15
 25260                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 25261  0079A4  6915               	setf	21,b	;volatile
 25262                           
 25263                           ; BSR set to: 15
 25264                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 25265  0079A6  691D               	setf	29,b	;volatile
 25266                           
 25267                           ; BSR set to: 15
 25268                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 25269  0079A8  6922               	setf	34,b	;volatile
 25270                           
 25271                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 25272  0079AA  0E0F               	movlw	15
 25273  0079AC  6F2A               	movwf	42,b	;volatile
 25274                           
 25275                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 25276  0079AE  0E13               	movlw	19
 25277  0079B0  010E               	movlb	14	; () banked
 25278  0079B2  6FB7               	movwf	183,b	;volatile
 25279                           
 25280                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 25281  0079B4  0E16               	movlw	22
 25282  0079B6  6FB5               	movwf	181,b	;volatile
 25283                           
 25284                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 25285  0079B8  0E0F               	movlw	15
 25286  0079BA  6FFA               	movwf	250,b	;volatile
 25287                           
 25288                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 25289  0079BC  0E10               	movlw	16
 25290  0079BE  6FFB               	movwf	251,b	;volatile
 25291                           
 25292                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 25293  0079C0  0E09               	movlw	9
 25294  0079C2  6FFE               	movwf	254,b	;volatile
 25295                           
 25296                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 25297  0079C4  0E14               	movlw	20
 25298  0079C6  6FB8               	movwf	184,b	;volatile
 25299                           
 25300                           ; BSR set to: 14
 25301  0079C8  0012               	return		;funcret
 25302  0079CA                     __end_of_PIN_MANAGER_Initialize:
 25303                           	callstack 0
 25304                           
 25305 ;; *************** function _OSCILLATOR_Initialize *****************
 25306 ;; Defined at:
 25307 ;;		line 65 in file "mcc_generated_files/mcc.c"
 25308 ;; Parameters:    Size  Location     Type
 25309 ;;		None
 25310 ;; Auto vars:     Size  Location     Type
 25311 ;;		None
 25312 ;; Return value:  Size  Location     Type
 25313 ;;                  1    wreg      void 
 25314 ;; Registers used:
 25315 ;;		wreg, status,2
 25316 ;; Tracked objects:
 25317 ;;		On entry : 3F/E
 25318 ;;		On exit  : 3F/E
 25319 ;;		Unchanged: 0/0
 25320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25325 ;;Total ram usage:        0 bytes
 25326 ;; Hardware stack levels used: 1
 25327 ;; Hardware stack levels required when called: 4
 25328 ;; This function calls:
 25329 ;;		Nothing
 25330 ;; This function is called by:
 25331 ;;		_SYSTEM_Initialize
 25332 ;; This function uses a non-reentrant model
 25333 ;;
 25334                           
 25335                           	psect	text101
 25336  009600                     __ptext101:
 25337                           	callstack 0
 25338  009600                     _OSCILLATOR_Initialize:
 25339                           	callstack 25
 25340                           
 25341                           ; BSR set to: 14
 25342                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 25343                           
 25344                           ; BSR set to: 14
 25345                           ;incstack = 0
 25346  009600  0E60               	movlw	96
 25347  009602  6FD8               	movwf	216,b	;volatile
 25348                           
 25349                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 25350  009604  0E00               	movlw	0
 25351  009606  6FDA               	movwf	218,b	;volatile
 25352                           
 25353                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 25354  009608  0E00               	movlw	0
 25355  00960A  6FDC               	movwf	220,b	;volatile
 25356                           
 25357                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 25358  00960C  0E08               	movlw	8
 25359  00960E  6FDE               	movwf	222,b	;volatile
 25360                           
 25361                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 25362  009610  0E00               	movlw	0
 25363  009612  6FDD               	movwf	221,b	;volatile
 25364                           
 25365                           ; BSR set to: 14
 25366  009614  0012               	return		;funcret
 25367  009616                     __end_of_OSCILLATOR_Initialize:
 25368                           	callstack 0
 25369                           
 25370 ;; *************** function _INTERRUPT_Initialize *****************
 25371 ;; Defined at:
 25372 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25373 ;; Parameters:    Size  Location     Type
 25374 ;;		None
 25375 ;; Auto vars:     Size  Location     Type
 25376 ;;		None
 25377 ;; Return value:  Size  Location     Type
 25378 ;;                  1    wreg      void 
 25379 ;; Registers used:
 25380 ;;		None
 25381 ;; Tracked objects:
 25382 ;;		On entry : 3F/0
 25383 ;;		On exit  : 3F/0
 25384 ;;		Unchanged: 3F/0
 25385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25390 ;;Total ram usage:        0 bytes
 25391 ;; Hardware stack levels used: 1
 25392 ;; Hardware stack levels required when called: 4
 25393 ;; This function calls:
 25394 ;;		Nothing
 25395 ;; This function is called by:
 25396 ;;		_SYSTEM_Initialize
 25397 ;; This function uses a non-reentrant model
 25398 ;;
 25399                           
 25400                           	psect	text102
 25401  0097DE                     __ptext102:
 25402                           	callstack 0
 25403  0097DE                     _INTERRUPT_Initialize:
 25404                           	callstack 25
 25405                           
 25406                           ; BSR set to: 0
 25407                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 25408                           
 25409                           ; BSR set to: 14
 25410                           ;incstack = 0
 25411  0097DE  9AF2               	bcf	242,5,c	;volatile
 25412                           
 25413                           ; BSR set to: 0
 25414  0097E0  0012               	return		;funcret
 25415  0097E2                     __end_of_INTERRUPT_Initialize:
 25416                           	callstack 0
 25417                           
 25418 ;; *************** function _I2C1_Initialize *****************
 25419 ;; Defined at:
 25420 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;		None
 25423 ;; Auto vars:     Size  Location     Type
 25424 ;;		None
 25425 ;; Return value:  Size  Location     Type
 25426 ;;                  1    wreg      void 
 25427 ;; Registers used:
 25428 ;;		wreg, status,2
 25429 ;; Tracked objects:
 25430 ;;		On entry : 3F/E
 25431 ;;		On exit  : 3F/E
 25432 ;;		Unchanged: 3F/0
 25433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25438 ;;Total ram usage:        0 bytes
 25439 ;; Hardware stack levels used: 1
 25440 ;; Hardware stack levels required when called: 4
 25441 ;; This function calls:
 25442 ;;		Nothing
 25443 ;; This function is called by:
 25444 ;;		_SYSTEM_Initialize
 25445 ;; This function uses a non-reentrant model
 25446 ;;
 25447                           
 25448                           	psect	text103
 25449  009654                     __ptext103:
 25450                           	callstack 0
 25451  009654                     _I2C1_Initialize:
 25452                           	callstack 25
 25453                           
 25454                           ; BSR set to: 14
 25455                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 25456                           
 25457                           ; BSR set to: 0
 25458                           ;incstack = 0
 25459  009654  0E80               	movlw	128
 25460  009656  6E95               	movwf	149,c	;volatile
 25461                           
 25462                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 25463  009658  0E08               	movlw	8
 25464  00965A  6E96               	movwf	150,c	;volatile
 25465                           
 25466                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 25467  00965C  0E00               	movlw	0
 25468  00965E  6E97               	movwf	151,c	;volatile
 25469                           
 25470                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 25471  009660  0E9F               	movlw	159
 25472  009662  6E93               	movwf	147,c	;volatile
 25473                           
 25474                           ; BSR set to: 14
 25475                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 25476  009664  9A96               	bcf	150,5,c	;volatile
 25477                           
 25478                           ; BSR set to: 14
 25479  009666  0012               	return		;funcret
 25480  009668                     __end_of_I2C1_Initialize:
 25481                           	callstack 0
 25482                           
 25483 ;; *************** function _EUSART1_Initialize *****************
 25484 ;; Defined at:
 25485 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 25486 ;; Parameters:    Size  Location     Type
 25487 ;;		None
 25488 ;; Auto vars:     Size  Location     Type
 25489 ;;		None
 25490 ;; Return value:  Size  Location     Type
 25491 ;;                  1    wreg      void 
 25492 ;; Registers used:
 25493 ;;		wreg, status,2, status,0, cstack
 25494 ;; Tracked objects:
 25495 ;;		On entry : 3F/E
 25496 ;;		On exit  : 3F/E
 25497 ;;		Unchanged: 0/0
 25498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25503 ;;Total ram usage:        0 bytes
 25504 ;; Hardware stack levels used: 1
 25505 ;; Hardware stack levels required when called: 5
 25506 ;; This function calls:
 25507 ;;		_EUSART1_SetErrorHandler
 25508 ;;		_EUSART1_SetFramingErrorHandler
 25509 ;;		_EUSART1_SetOverrunErrorHandler
 25510 ;;		_EUSART1_SetRxInterruptHandler
 25511 ;;		_EUSART1_SetTxInterruptHandler
 25512 ;; This function is called by:
 25513 ;;		_SYSTEM_Initialize
 25514 ;; This function uses a non-reentrant model
 25515 ;;
 25516                           
 25517                           	psect	text104
 25518  007FAA                     __ptext104:
 25519                           	callstack 0
 25520  007FAA                     _EUSART1_Initialize:
 25521                           	callstack 24
 25522                           
 25523                           ; BSR set to: 14
 25524                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 25525                           
 25526                           ; BSR set to: 14
 25527                           ;incstack = 0
 25528  007FAA  9BC5               	bcf	197,5,b	;volatile
 25529                           
 25530                           ; BSR set to: 14
 25531                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 25532  007FAC  0E98               	movlw	low _EUSART1_Receive_ISR
 25533  007FAE  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 25534  007FB0  0E78               	movlw	high _EUSART1_Receive_ISR
 25535  007FB2  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 25536  007FB4  EC87  F04B         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 25537                           
 25538                           ; BSR set to: 14
 25539                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 25540  007FB8  99C5               	bcf	197,4,b	;volatile
 25541                           
 25542                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 25543  007FBA  0ECC               	movlw	low _EUSART1_Transmit_ISR
 25544  007FBC  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 25545  007FBE  0E8F               	movlw	high _EUSART1_Transmit_ISR
 25546  007FC0  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 25547  007FC2  EC82  F04B         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 25548                           
 25549                           ; BSR set to: 14
 25550                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 25551  007FC6  0E08               	movlw	8
 25552  007FC8  6E9F               	movwf	159,c	;volatile
 25553                           
 25554                           ; BSR set to: 14
 25555                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 25556  007FCA  0E90               	movlw	144
 25557  007FCC  6E9D               	movwf	157,c	;volatile
 25558                           
 25559                           ; BSR set to: 14
 25560                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 25561  007FCE  0E24               	movlw	36
 25562  007FD0  6E9E               	movwf	158,c	;volatile
 25563                           
 25564                           ; BSR set to: 14
 25565                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 25566  007FD2  0E82               	movlw	130
 25567  007FD4  6E9B               	movwf	155,c	;volatile
 25568                           
 25569                           ; BSR set to: 14
 25570                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 25571  007FD6  0E06               	movlw	6
 25572  007FD8  6E9C               	movwf	156,c	;volatile
 25573                           
 25574                           ; BSR set to: 14
 25575                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 25576  007FDA  0E10               	movlw	low _EUSART1_DefaultFramingErrorHandler
 25577  007FDC  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 25578  007FDE  0E98               	movlw	high _EUSART1_DefaultFramingErrorHandler
 25579  007FE0  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 25580  007FE2  EC91  F04B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 25581                           
 25582                           ; BSR set to: 14
 25583                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 25584  007FE6  0EC8               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 25585  007FE8  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 25586  007FEA  0E97               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 25587  007FEC  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 25588  007FEE  EC8C  F04B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 25589                           
 25590                           ; BSR set to: 14
 25591                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 25592  007FF2  0ECE               	movlw	low _EUSART1_DefaultErrorHandler
 25593  007FF4  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 25594  007FF6  0E97               	movlw	high _EUSART1_DefaultErrorHandler
 25595  007FF8  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 25596  007FFA  EC96  F04B         	call	_EUSART1_SetErrorHandler	;wreg free
 25597                           
 25598                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 25599  007FFE  0E00               	movlw	0
 25600  008000  0101               	movlb	1	; () banked
 25601  008002  6F9A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 25602                           
 25603                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 25604  008004  0E00               	movlw	0
 25605  008006  0100               	movlb	0	; () banked
 25606  008008  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 25607                           
 25608                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 25609  00800A  0E00               	movlw	0
 25610  00800C  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 25611                           
 25612                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 25613  00800E  0E08               	movlw	8
 25614  008010  0101               	movlb	1	; () banked
 25615  008012  6FFF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 25616                           
 25617                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 25618  008014  0E00               	movlw	0
 25619  008016  0100               	movlb	0	; () banked
 25620  008018  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 25621                           
 25622                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 25623  00801A  0E00               	movlw	0
 25624  00801C  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 25625                           
 25626                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 25627  00801E  0E00               	movlw	0
 25628  008020  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 25629                           
 25630                           ; BSR set to: 0
 25631                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 25632  008022  010E               	movlb	14	; () banked
 25633  008024  8BC5               	bsf	197,5,b	;volatile
 25634                           
 25635                           ; BSR set to: 14
 25636  008026  0012               	return		;funcret
 25637  008028                     __end_of_EUSART1_Initialize:
 25638                           	callstack 0
 25639                           
 25640 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 25641 ;; Defined at:
 25642 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 25643 ;; Parameters:    Size  Location     Type
 25644 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25645 ;;		 -> EUSART1_Transmit_ISR(1), 
 25646 ;; Auto vars:     Size  Location     Type
 25647 ;;		None
 25648 ;; Return value:  Size  Location     Type
 25649 ;;                  1    wreg      void 
 25650 ;; Registers used:
 25651 ;;		wreg, status,2, status,0
 25652 ;; Tracked objects:
 25653 ;;		On entry : 3F/E
 25654 ;;		On exit  : 3F/E
 25655 ;;		Unchanged: 3F/0
 25656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25661 ;;Total ram usage:        2 bytes
 25662 ;; Hardware stack levels used: 1
 25663 ;; Hardware stack levels required when called: 4
 25664 ;; This function calls:
 25665 ;;		Nothing
 25666 ;; This function is called by:
 25667 ;;		_EUSART1_Initialize
 25668 ;; This function uses a non-reentrant model
 25669 ;;
 25670                           
 25671                           	psect	text105
 25672  009704                     __ptext105:
 25673                           	callstack 0
 25674  009704                     _EUSART1_SetTxInterruptHandler:
 25675                           	callstack 24
 25676                           
 25677                           ; BSR set to: 14
 25678                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25679                           
 25680                           ; BSR set to: 14
 25681                           ;incstack = 0
 25682  009704  C010  F2EF         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 25683  009708  C011  F2F0         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 25684                           
 25685                           ; BSR set to: 14
 25686  00970C  0012               	return		;funcret
 25687  00970E                     __end_of_EUSART1_SetTxInterruptHandler:
 25688                           	callstack 0
 25689                           
 25690 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 25691 ;; Defined at:
 25692 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 25693 ;; Parameters:    Size  Location     Type
 25694 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25695 ;;		 -> EUSART1_Receive_ISR(1), 
 25696 ;; Auto vars:     Size  Location     Type
 25697 ;;		None
 25698 ;; Return value:  Size  Location     Type
 25699 ;;                  1    wreg      void 
 25700 ;; Registers used:
 25701 ;;		wreg, status,2, status,0
 25702 ;; Tracked objects:
 25703 ;;		On entry : 3F/E
 25704 ;;		On exit  : 3F/E
 25705 ;;		Unchanged: 3F/0
 25706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25711 ;;Total ram usage:        2 bytes
 25712 ;; Hardware stack levels used: 1
 25713 ;; Hardware stack levels required when called: 4
 25714 ;; This function calls:
 25715 ;;		Nothing
 25716 ;; This function is called by:
 25717 ;;		_EUSART1_Initialize
 25718 ;; This function uses a non-reentrant model
 25719 ;;
 25720                           
 25721                           	psect	text106
 25722  00970E                     __ptext106:
 25723                           	callstack 0
 25724  00970E                     _EUSART1_SetRxInterruptHandler:
 25725                           	callstack 24
 25726                           
 25727                           ; BSR set to: 14
 25728                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25729                           
 25730                           ; BSR set to: 14
 25731                           ;incstack = 0
 25732  00970E  C010  F2ED         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 25733  009712  C011  F2EE         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 25734                           
 25735                           ; BSR set to: 14
 25736  009716  0012               	return		;funcret
 25737  009718                     __end_of_EUSART1_SetRxInterruptHandler:
 25738                           	callstack 0
 25739                           
 25740 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 25741 ;; Defined at:
 25742 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 25743 ;; Parameters:    Size  Location     Type
 25744 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25745 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 25746 ;; Auto vars:     Size  Location     Type
 25747 ;;		None
 25748 ;; Return value:  Size  Location     Type
 25749 ;;                  1    wreg      void 
 25750 ;; Registers used:
 25751 ;;		wreg, status,2, status,0
 25752 ;; Tracked objects:
 25753 ;;		On entry : 3F/E
 25754 ;;		On exit  : 3F/E
 25755 ;;		Unchanged: 3F/0
 25756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25761 ;;Total ram usage:        2 bytes
 25762 ;; Hardware stack levels used: 1
 25763 ;; Hardware stack levels required when called: 4
 25764 ;; This function calls:
 25765 ;;		Nothing
 25766 ;; This function is called by:
 25767 ;;		_EUSART1_Initialize
 25768 ;; This function uses a non-reentrant model
 25769 ;;
 25770                           
 25771                           	psect	text107
 25772  009718                     __ptext107:
 25773                           	callstack 0
 25774  009718                     _EUSART1_SetOverrunErrorHandler:
 25775                           	callstack 24
 25776                           
 25777                           ; BSR set to: 14
 25778                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 25779                           
 25780                           ; BSR set to: 14
 25781                           ;incstack = 0
 25782  009718  C010  F2E9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 25783  00971C  C011  F2EA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 25784                           
 25785                           ; BSR set to: 14
 25786  009720  0012               	return		;funcret
 25787  009722                     __end_of_EUSART1_SetOverrunErrorHandler:
 25788                           	callstack 0
 25789                           
 25790 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 25791 ;; Defined at:
 25792 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 25793 ;; Parameters:    Size  Location     Type
 25794 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25795 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 25796 ;; Auto vars:     Size  Location     Type
 25797 ;;		None
 25798 ;; Return value:  Size  Location     Type
 25799 ;;                  1    wreg      void 
 25800 ;; Registers used:
 25801 ;;		wreg, status,2, status,0
 25802 ;; Tracked objects:
 25803 ;;		On entry : 3F/E
 25804 ;;		On exit  : 3F/E
 25805 ;;		Unchanged: 3F/0
 25806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25811 ;;Total ram usage:        2 bytes
 25812 ;; Hardware stack levels used: 1
 25813 ;; Hardware stack levels required when called: 4
 25814 ;; This function calls:
 25815 ;;		Nothing
 25816 ;; This function is called by:
 25817 ;;		_EUSART1_Initialize
 25818 ;; This function uses a non-reentrant model
 25819 ;;
 25820                           
 25821                           	psect	text108
 25822  009722                     __ptext108:
 25823                           	callstack 0
 25824  009722                     _EUSART1_SetFramingErrorHandler:
 25825                           	callstack 24
 25826                           
 25827                           ; BSR set to: 14
 25828                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 25829                           
 25830                           ; BSR set to: 14
 25831                           ;incstack = 0
 25832  009722  C010  F2EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 25833  009726  C011  F2EC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 25834                           
 25835                           ; BSR set to: 14
 25836  00972A  0012               	return		;funcret
 25837  00972C                     __end_of_EUSART1_SetFramingErrorHandler:
 25838                           	callstack 0
 25839                           
 25840 ;; *************** function _EUSART1_SetErrorHandler *****************
 25841 ;; Defined at:
 25842 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 25843 ;; Parameters:    Size  Location     Type
 25844 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25845 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 25846 ;; Auto vars:     Size  Location     Type
 25847 ;;		None
 25848 ;; Return value:  Size  Location     Type
 25849 ;;                  1    wreg      void 
 25850 ;; Registers used:
 25851 ;;		wreg, status,2, status,0
 25852 ;; Tracked objects:
 25853 ;;		On entry : 3F/E
 25854 ;;		On exit  : 3F/E
 25855 ;;		Unchanged: 3F/0
 25856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25861 ;;Total ram usage:        2 bytes
 25862 ;; Hardware stack levels used: 1
 25863 ;; Hardware stack levels required when called: 4
 25864 ;; This function calls:
 25865 ;;		Nothing
 25866 ;; This function is called by:
 25867 ;;		_EUSART1_Initialize
 25868 ;; This function uses a non-reentrant model
 25869 ;;
 25870                           
 25871                           	psect	text109
 25872  00972C                     __ptext109:
 25873                           	callstack 0
 25874  00972C                     _EUSART1_SetErrorHandler:
 25875                           	callstack 24
 25876                           
 25877                           ; BSR set to: 14
 25878                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 25879                           
 25880                           ; BSR set to: 14
 25881                           ;incstack = 0
 25882  00972C  C010  F2E7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 25883  009730  C011  F2E8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 25884                           
 25885                           ; BSR set to: 14
 25886  009734  0012               	return		;funcret
 25887  009736                     __end_of_EUSART1_SetErrorHandler:
 25888                           	callstack 0
 25889                           
 25890 ;; *************** function _ADCC_Initialize *****************
 25891 ;; Defined at:
 25892 ;;		line 62 in file "mcc_generated_files/adcc.c"
 25893 ;; Parameters:    Size  Location     Type
 25894 ;;		None
 25895 ;; Auto vars:     Size  Location     Type
 25896 ;;		None
 25897 ;; Return value:  Size  Location     Type
 25898 ;;                  1    wreg      void 
 25899 ;; Registers used:
 25900 ;;		wreg, status,2
 25901 ;; Tracked objects:
 25902 ;;		On entry : 3F/E
 25903 ;;		On exit  : 3F/F
 25904 ;;		Unchanged: 0/0
 25905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25910 ;;Total ram usage:        0 bytes
 25911 ;; Hardware stack levels used: 1
 25912 ;; Hardware stack levels required when called: 4
 25913 ;; This function calls:
 25914 ;;		Nothing
 25915 ;; This function is called by:
 25916 ;;		_SYSTEM_Initialize
 25917 ;; This function uses a non-reentrant model
 25918 ;;
 25919                           
 25920                           	psect	text110
 25921  008ADC                     __ptext110:
 25922                           	callstack 0
 25923  008ADC                     _ADCC_Initialize:
 25924                           	callstack 25
 25925                           
 25926                           ; BSR set to: 14
 25927                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 25928                           
 25929                           ; BSR set to: 14
 25930                           ;incstack = 0
 25931  008ADC  0E00               	movlw	0
 25932  008ADE  6E6A               	movwf	106,c	;volatile
 25933                           
 25934                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 25935  008AE0  0E00               	movlw	0
 25936  008AE2  6E6B               	movwf	107,c	;volatile
 25937                           
 25938                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 25939  008AE4  0E00               	movlw	0
 25940  008AE6  6E6C               	movwf	108,c	;volatile
 25941                           
 25942                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 25943  008AE8  0E00               	movlw	0
 25944  008AEA  6E6D               	movwf	109,c	;volatile
 25945                           
 25946                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 25947  008AEC  0E00               	movlw	0
 25948  008AEE  6E68               	movwf	104,c	;volatile
 25949                           
 25950                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 25951  008AF0  0E00               	movlw	0
 25952  008AF2  6E69               	movwf	105,c	;volatile
 25953                           
 25954                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 25955  008AF4  0E00               	movlw	0
 25956  008AF6  6E66               	movwf	102,c	;volatile
 25957                           
 25958                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 25959  008AF8  0E00               	movlw	0
 25960  008AFA  010F               	movlb	15	; () banked
 25961  008AFC  6F5F               	movwf	95,b	;volatile
 25962                           
 25963                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 25964  008AFE  0E00               	movlw	0
 25965  008B00  6F5D               	movwf	93,b	;volatile
 25966                           
 25967                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 25968  008B02  0E00               	movlw	0
 25969  008B04  6F5E               	movwf	94,b	;volatile
 25970                           
 25971                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 25972  008B06  0E00               	movlw	0
 25973  008B08  6F59               	movwf	89,b	;volatile
 25974                           
 25975                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 25976  008B0A  0E00               	movlw	0
 25977  008B0C  6F5A               	movwf	90,b	;volatile
 25978                           
 25979                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 25980  008B0E  0E00               	movlw	0
 25981  008B10  6F5B               	movwf	91,b	;volatile
 25982                           
 25983                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 25984  008B12  0E00               	movlw	0
 25985  008B14  6E65               	movwf	101,c	;volatile
 25986                           
 25987                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 25988  008B16  0E00               	movlw	0
 25989  008B18  6F58               	movwf	88,b	;volatile
 25990                           
 25991                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 25992  008B1A  0E00               	movlw	0
 25993  008B1C  6F56               	movwf	86,b	;volatile
 25994                           
 25995                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 25996  008B1E  0E3F               	movlw	63
 25997  008B20  6F57               	movwf	87,b	;volatile
 25998                           
 25999                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 26000  008B22  0E80               	movlw	128
 26001  008B24  6E60               	movwf	96,c	;volatile
 26002                           
 26003                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 26004  008B26  0E00               	movlw	0
 26005  008B28  6F5C               	movwf	92,b	;volatile
 26006                           
 26007                           ; BSR set to: 15
 26008  008B2A  0012               	return		;funcret
 26009  008B2C                     __end_of_ADCC_Initialize:
 26010                           	callstack 0
 26011                           
 26012 ;; *************** function _EUSART1_is_rx_ready *****************
 26013 ;; Defined at:
 26014 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 26015 ;; Parameters:    Size  Location     Type
 26016 ;;		None
 26017 ;; Auto vars:     Size  Location     Type
 26018 ;;		None
 26019 ;; Return value:  Size  Location     Type
 26020 ;;                  1    wreg      _Bool 
 26021 ;; Registers used:
 26022 ;;		wreg, status,2
 26023 ;; Tracked objects:
 26024 ;;		On entry : 0/1
 26025 ;;		On exit  : 3F/0
 26026 ;;		Unchanged: 0/0
 26027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26032 ;;Total ram usage:        0 bytes
 26033 ;; Hardware stack levels used: 1
 26034 ;; Hardware stack levels required when called: 4
 26035 ;; This function calls:
 26036 ;;		Nothing
 26037 ;; This function is called by:
 26038 ;;		_main
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042                           	psect	text111
 26043  00967A                     __ptext111:
 26044                           	callstack 0
 26045  00967A                     _EUSART1_is_rx_ready:
 26046                           	callstack 26
 26047                           
 26048                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 26049                           
 26050                           ; BSR set to: 15
 26051                           ;incstack = 0
 26052  00967A  0100               	movlb	0	; () banked
 26053  00967C  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 26054  00967E  B4D8               	btfsc	status,2,c
 26055  009680  D002               	goto	u18540
 26056  009682  0E01               	movlw	1
 26057  009684  0012               	return	
 26058  009686                     u18540:
 26059  009686  0E00               	movlw	0
 26060                           
 26061                           ; BSR set to: 0
 26062  009688  0012               	return		;funcret
 26063  00968A                     __end_of_EUSART1_is_rx_ready:
 26064                           	callstack 0
 26065                           
 26066 ;; *************** function _ControlMotor *****************
 26067 ;; Defined at:
 26068 ;;		line 703 in file "outputs_MC50.c"
 26069 ;; Parameters:    Size  Location     Type
 26070 ;;		None
 26071 ;; Auto vars:     Size  Location     Type
 26072 ;;  stateMotor      1   23[COMRAM] enum E10381
 26073 ;; Return value:  Size  Location     Type
 26074 ;;                  1    wreg      void 
 26075 ;; Registers used:
 26076 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26077 ;; Tracked objects:
 26078 ;;		On entry : 3E/1
 26079 ;;		On exit  : 3E/0
 26080 ;;		Unchanged: 0/0
 26081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26084 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26085 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26086 ;;Total ram usage:        7 bytes
 26087 ;; Hardware stack levels used: 1
 26088 ;; Hardware stack levels required when called: 5
 26089 ;; This function calls:
 26090 ;;		_VerifyElectricalBrake
 26091 ;; This function is called by:
 26092 ;;		_main
 26093 ;; This function uses a non-reentrant model
 26094 ;;
 26095                           
 26096                           	psect	text112
 26097  004C72                     __ptext112:
 26098                           	callstack 0
 26099  004C72                     _ControlMotor:
 26100                           	callstack 25
 26101                           
 26102                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 26103                           
 26104                           ; BSR set to: 0
 26105                           ;incstack = 0
 26106  004C72  0101               	movlb	1	; () banked
 26107  004C74  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 26108  004C76  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 26109  004C78  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 26110  004C7A  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 26111  004C7C  A4D8               	btfss	status,2,c
 26112  004C7E  D00D               	goto	l17415
 26113                           
 26114                           ; BSR set to: 1
 26115  004C80  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 26116  004C82  B4D8               	btfsc	status,2,c
 26117  004C84  D00A               	goto	l17415
 26118                           
 26119                           ; BSR set to: 1
 26120  004C86  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 26121  004C88  A4D8               	btfss	status,2,c
 26122  004C8A  D007               	goto	l17415
 26123                           
 26124                           ; BSR set to: 1
 26125  004C8C  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 26126  004C8E  A4D8               	btfss	status,2,c
 26127  004C90  D004               	goto	l17415
 26128                           
 26129                           ; BSR set to: 1
 26130                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 26131  004C92  0E00               	movlw	0
 26132  004C94  6F00               	movwf	_var_sys& (0+255),b	;volatile
 26133                           
 26134                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 26135  004C96  0E02               	movlw	2
 26136  004C98  D007               	goto	L100
 26137  004C9A                     l17415:
 26138                           
 26139                           ; BSR set to: 1
 26140  004C9A  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 26141  004C9C  A4D8               	btfss	status,2,c
 26142  004C9E  D005               	goto	l17421
 26143                           
 26144                           ; BSR set to: 1
 26145  004CA0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26146  004CA2  A4D8               	btfss	status,2,c
 26147  004CA4  D002               	goto	l17421
 26148                           
 26149                           ; BSR set to: 1
 26150                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 26151  004CA6  0E00               	movlw	0
 26152  004CA8                     L100:
 26153  004CA8  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 26154  004CAA                     l17421:
 26155                           
 26156                           ; BSR set to: 1
 26157                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 26158  004CAA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26159  004CAC  EC8F  F040         	call	_VerifyElectricalBrake
 26160  004CB0  6E18               	movwf	ControlMotor@stateMotor^0,c
 26161                           
 26162                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 26163  004CB2  5018               	movf	ControlMotor@stateMotor^0,w,c
 26164  004CB4  A4D8               	btfss	status,2,c
 26165  004CB6  D00A               	goto	l17431
 26166                           
 26167                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 26168  004CB8  0E01               	movlw	1
 26169  004CBA  0101               	movlb	1	; () banked
 26170  004CBC  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26171                           
 26172                           ; BSR set to: 1
 26173                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 26174  004CBE  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 26175  004CC0  0012               	return	
 26176                           
 26177                           ; BSR set to: 1
 26178                           
 26179                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 26180  004CC2  9287               	bcf	135,1,c	;volatile
 26181                           
 26182                           ; BSR set to: 1
 26183                           
 26184                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 26185  004CC4  9087               	bcf	135,0,c	;volatile
 26186  004CC6                     l17429:
 26187                           
 26188                           ; BSR set to: 1
 26189                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 26190  004CC6  0E00               	movlw	0
 26191  004CC8  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26192  004CCA  0012               	return	
 26193  004CCC                     l17431:
 26194  004CCC  0100               	movlb	0	; () banked
 26195  004CCE  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26196  004CD0  A4D8               	btfss	status,2,c
 26197  004CD2  D022               	goto	l17447
 26198                           
 26199                           ; BSR set to: 0
 26200  004CD4  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26201  004CD6  A4D8               	btfss	status,2,c
 26202  004CD8  D01F               	goto	l17447
 26203                           
 26204                           ; BSR set to: 0
 26205  004CDA  0101               	movlb	1	; () banked
 26206  004CDC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26207  004CDE  A4D8               	btfss	status,2,c
 26208  004CE0  D01B               	goto	l17447
 26209                           
 26210                           ; BSR set to: 1
 26211  004CE2  5018               	movf	ControlMotor@stateMotor^0,w,c
 26212  004CE4  A4D8               	btfss	status,2,c
 26213                           
 26214                           ; BSR set to: 1
 26215  004CE6  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26216  004CE8  D017               	goto	l17447
 26217  004CEA  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26218  004CEC  E103               	bnz	u20490
 26219  004CEE  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26220  004CF0  A0D8               	btfss	status,0,c
 26221  004CF2  D012               	goto	l17447
 26222  004CF4                     u20490:
 26223                           
 26224                           ; BSR set to: 1
 26225  004CF4  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26226  004CF6  D005               	goto	u20500
 26227  004CF8  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26228  004CFA  E10E               	bnz	l17447
 26229  004CFC  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26230  004CFE  B0D8               	btfsc	status,0,c
 26231  004D00  D00B               	goto	l17447
 26232  004D02                     u20500:
 26233                           
 26234                           ; BSR set to: 1
 26235                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 26236  004D02  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26237  004D04  D006               	goto	u20510
 26238  004D06  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26239  004D08  E103               	bnz	u20511
 26240  004D0A  0E12               	movlw	18
 26241  004D0C  5DC3               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 26242  004D0E  B0D8               	btfsc	status,0,c
 26243  004D10                     u20511:
 26244  004D10  0012               	return	
 26245  004D12                     u20510:
 26246                           
 26247                           ; BSR set to: 1
 26248                           
 26249                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 26250  004D12  8287               	bsf	135,1,c	;volatile
 26251                           
 26252                           ; BSR set to: 1
 26253                           
 26254                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 26255  004D14  8087               	bsf	135,0,c	;volatile
 26256  004D16  D7D7               	goto	l17429
 26257  004D18                     l17447:
 26258  004D18  0418               	decf	ControlMotor@stateMotor^0,w,c
 26259  004D1A  B4D8               	btfsc	status,2,c
 26260  004D1C  D004               	goto	u20530
 26261  004D1E  0E02               	movlw	2
 26262  004D20  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26263  004D22  A4D8               	btfss	status,2,c
 26264  004D24  D063               	goto	l17477
 26265  004D26                     u20530:
 26266  004D26  0101               	movlb	1	; () banked
 26267  004D28  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 26268  004D2A  A4D8               	btfss	status,2,c
 26269  004D2C  D05F               	goto	l17477
 26270                           
 26271                           ; BSR set to: 1
 26272                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 26273  004D2E  B291               	btfsc	145,1,c	;volatile
 26274  004D30  D004               	goto	u20560
 26275                           
 26276                           ; BSR set to: 1
 26277  004D32  0100               	movlb	0	; () banked
 26278  004D34  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26279  004D36  B4D8               	btfsc	status,2,c
 26280  004D38  D006               	goto	u20580
 26281  004D3A                     u20560:
 26282  004D3A  B091               	btfsc	145,0,c	;volatile
 26283  004D3C  D04F               	goto	l2353
 26284  004D3E  0100               	movlb	0	; () banked
 26285  004D40  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26286  004D42  A4D8               	btfss	status,2,c
 26287  004D44  D04B               	goto	l2353
 26288  004D46                     u20580:
 26289                           
 26290                           ; BSR set to: 0
 26291                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26292  004D46  B091               	btfsc	145,0,c	;volatile
 26293  004D48  D003               	goto	u20600
 26294                           
 26295                           ; BSR set to: 0
 26296  004D4A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26297  004D4C  B4D8               	btfsc	status,2,c
 26298  004D4E  D005               	goto	u20620
 26299  004D50                     u20600:
 26300                           
 26301                           ; BSR set to: 0
 26302  004D50  B291               	btfsc	145,1,c	;volatile
 26303  004D52  D03A               	goto	l17473
 26304                           
 26305                           ; BSR set to: 0
 26306  004D54  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26307  004D56  A4D8               	btfss	status,2,c
 26308  004D58  D037               	goto	l17473
 26309  004D5A                     u20620:
 26310                           
 26311                           ; BSR set to: 0
 26312                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 26313  004D5A  0E00               	movlw	0
 26314  004D5C  0101               	movlb	1	; () banked
 26315  004D5E  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26316                           
 26317                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 26318  004D60  0E00               	movlw	0
 26319  004D62  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26320  004D64  0EC8               	movlw	200
 26321  004D66  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26322                           
 26323                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 26324  004D68  0E00               	movlw	0
 26325  004D6A  6FB6               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26326  004D6C  0E14               	movlw	20
 26327  004D6E  6FB5               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26328                           
 26329                           ; BSR set to: 1
 26330                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 26331  004D70  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26332  004D72  B4D8               	btfsc	status,2,c
 26333  004D74  D003               	goto	u20640
 26334                           
 26335                           ; BSR set to: 1
 26336  004D76  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 26337  004D78  A4D8               	btfss	status,2,c
 26338  004D7A  D024               	goto	l17471
 26339  004D7C                     u20640:
 26340                           
 26341                           ; BSR set to: 1
 26342                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 26343  004D7C  0100               	movlb	0	; () banked
 26344  004D7E  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 26345  004D80  0D0A               	mullw	10
 26346  004D82  CFF3 F012          	movff	prodl,??_ControlMotor
 26347  004D86  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26348  004D8A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26349  004D8C  2612               	addwf	??_ControlMotor^0,f,c
 26350  004D8E  0E00               	movlw	0
 26351  004D90  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26352  004D92  5012               	movf	??_ControlMotor^0,w,c
 26353  004D94  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 26354  004D96  6E14               	movwf	(??_ControlMotor+2)^0,c
 26355  004D98  5013               	movf	(??_ControlMotor+1)^0,w,c
 26356  004D9A  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 26357  004D9C  6E15               	movwf	(??_ControlMotor+3)^0,c
 26358  004D9E  0E00               	movlw	0
 26359  004DA0  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 26360  004DA2  6E16               	movwf	(??_ControlMotor+4)^0,c
 26361  004DA4  0E00               	movlw	0
 26362  004DA6  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 26363  004DA8  6E17               	movwf	(??_ControlMotor+5)^0,c
 26364  004DAA  0E50               	movlw	80
 26365  004DAC  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26366  004DAE  0101               	movlb	1	; () banked
 26367  004DB0  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26368  004DB2  0E00               	movlw	0
 26369  004DB4  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26370  004DB6  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26371  004DB8  0E00               	movlw	0
 26372  004DBA  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26373  004DBC  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26374  004DBE  0E00               	movlw	0
 26375  004DC0  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26376  004DC2  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26377  004DC4                     l17471:
 26378                           
 26379                           ; BSR set to: 1
 26380                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 26381  004DC4  0E02               	movlw	2
 26382  004DC6  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26383  004DC8                     l17473:
 26384                           
 26385                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 26386  004DC8  0100               	movlb	0	; () banked
 26387  004DCA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26388  004DCC  A4D8               	btfss	status,2,c
 26389  004DCE  D002               	goto	l2370
 26390                           
 26391                           ; BSR set to: 0
 26392  004DD0  8087               	bsf	135,0,c	;volatile
 26393  004DD2  D001               	goto	l17475
 26394  004DD4                     l2370:
 26395                           
 26396                           ; BSR set to: 0
 26397  004DD4  8287               	bsf	135,1,c	;volatile
 26398  004DD6                     l17475:
 26399                           
 26400                           ; BSR set to: 0
 26401                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 26402  004DD6  0E01               	movlw	1
 26403  004DD8  0101               	movlb	1	; () banked
 26404  004DDA  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26405  004DDC                     l2353:
 26406                           
 26407                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 26408  004DDC  0100               	movlb	0	; () banked
 26409  004DDE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26410  004DE0  A4D8               	btfss	status,2,c
 26411  004DE2  D002               	goto	l2376
 26412                           
 26413                           ; BSR set to: 0
 26414  004DE4  9287               	bcf	135,1,c	;volatile
 26415  004DE6  0012               	return	
 26416  004DE8                     l2376:
 26417                           
 26418                           ; BSR set to: 0
 26419  004DE8  9087               	bcf	135,0,c	;volatile
 26420  004DEA  0012               	return	
 26421  004DEC                     l17477:
 26422  004DEC  0E03               	movlw	3
 26423  004DEE  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26424  004DF0  A4D8               	btfss	status,2,c
 26425  004DF2  0012               	return	
 26426  004DF4  0101               	movlb	1	; () banked
 26427  004DF6  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 26428  004DF8  A4D8               	btfss	status,2,c
 26429  004DFA  0012               	return	
 26430                           
 26431                           ; BSR set to: 1
 26432                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 26433  004DFC  B091               	btfsc	145,0,c	;volatile
 26434  004DFE  D004               	goto	u20700
 26435                           
 26436                           ; BSR set to: 1
 26437  004E00  0100               	movlb	0	; () banked
 26438  004E02  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26439  004E04  B4D8               	btfsc	status,2,c
 26440  004E06  D006               	goto	u20720
 26441  004E08                     u20700:
 26442  004E08  B291               	btfsc	145,1,c	;volatile
 26443  004E0A  D050               	goto	l2380
 26444  004E0C  0100               	movlb	0	; () banked
 26445  004E0E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26446  004E10  A4D8               	btfss	status,2,c
 26447  004E12  D04C               	goto	l2380
 26448  004E14                     u20720:
 26449                           
 26450                           ; BSR set to: 0
 26451                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26452  004E14  B291               	btfsc	145,1,c	;volatile
 26453  004E16  D003               	goto	u20740
 26454                           
 26455                           ; BSR set to: 0
 26456  004E18  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26457  004E1A  B4D8               	btfsc	status,2,c
 26458  004E1C  D005               	goto	u20760
 26459  004E1E                     u20740:
 26460                           
 26461                           ; BSR set to: 0
 26462  004E1E  B091               	btfsc	145,0,c	;volatile
 26463  004E20  D03B               	goto	l17501
 26464                           
 26465                           ; BSR set to: 0
 26466  004E22  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26467  004E24  A4D8               	btfss	status,2,c
 26468  004E26  D038               	goto	l17501
 26469  004E28                     u20760:
 26470                           
 26471                           ; BSR set to: 0
 26472                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 26473  004E28  0E00               	movlw	0
 26474  004E2A  0101               	movlb	1	; () banked
 26475  004E2C  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26476                           
 26477                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 26478  004E2E  0E00               	movlw	0
 26479  004E30  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26480  004E32  0EC8               	movlw	200
 26481  004E34  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26482                           
 26483                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 26484  004E36  0E00               	movlw	0
 26485  004E38  6FB6               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26486  004E3A  0E14               	movlw	20
 26487  004E3C  6FB5               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26488                           
 26489                           ; BSR set to: 1
 26490                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 26491  004E3E  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26492  004E40  B4D8               	btfsc	status,2,c
 26493  004E42  D004               	goto	u20780
 26494                           
 26495                           ; BSR set to: 1
 26496  004E44  0E04               	movlw	4
 26497  004E46  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 26498  004E48  A4D8               	btfss	status,2,c
 26499  004E4A  D024               	goto	l17499
 26500  004E4C                     u20780:
 26501                           
 26502                           ; BSR set to: 1
 26503                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 26504  004E4C  0100               	movlb	0	; () banked
 26505  004E4E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 26506  004E50  0D0A               	mullw	10
 26507  004E52  CFF3 F012          	movff	prodl,??_ControlMotor
 26508  004E56  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26509  004E5A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26510  004E5C  2612               	addwf	??_ControlMotor^0,f,c
 26511  004E5E  0E00               	movlw	0
 26512  004E60  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26513  004E62  5012               	movf	??_ControlMotor^0,w,c
 26514  004E64  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 26515  004E66  6E14               	movwf	(??_ControlMotor+2)^0,c
 26516  004E68  5013               	movf	(??_ControlMotor+1)^0,w,c
 26517  004E6A  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 26518  004E6C  6E15               	movwf	(??_ControlMotor+3)^0,c
 26519  004E6E  0E00               	movlw	0
 26520  004E70  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 26521  004E72  6E16               	movwf	(??_ControlMotor+4)^0,c
 26522  004E74  0E00               	movlw	0
 26523  004E76  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 26524  004E78  6E17               	movwf	(??_ControlMotor+5)^0,c
 26525  004E7A  0E50               	movlw	80
 26526  004E7C  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26527  004E7E  0101               	movlb	1	; () banked
 26528  004E80  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26529  004E82  0E00               	movlw	0
 26530  004E84  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26531  004E86  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26532  004E88  0E00               	movlw	0
 26533  004E8A  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26534  004E8C  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26535  004E8E  0E00               	movlw	0
 26536  004E90  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26537  004E92  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26538  004E94                     l17499:
 26539                           
 26540                           ; BSR set to: 1
 26541                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 26542  004E94  0E03               	movlw	3
 26543  004E96  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26544  004E98                     l17501:
 26545                           
 26546                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 26547  004E98  0100               	movlb	0	; () banked
 26548  004E9A  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26549  004E9C  A4D8               	btfss	status,2,c
 26550  004E9E  D002               	goto	l2397
 26551                           
 26552                           ; BSR set to: 0
 26553  004EA0  8287               	bsf	135,1,c	;volatile
 26554  004EA2  D001               	goto	l17503
 26555  004EA4                     l2397:
 26556                           
 26557                           ; BSR set to: 0
 26558  004EA4  8087               	bsf	135,0,c	;volatile
 26559  004EA6                     l17503:
 26560                           
 26561                           ; BSR set to: 0
 26562                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 26563  004EA6  0E02               	movlw	2
 26564  004EA8  0101               	movlb	1	; () banked
 26565  004EAA  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26566  004EAC                     l2380:
 26567                           
 26568                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 26569  004EAC  0100               	movlb	0	; () banked
 26570  004EAE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26571  004EB0  A4D8               	btfss	status,2,c
 26572  004EB2  D002               	goto	l2403
 26573                           
 26574                           ; BSR set to: 0
 26575  004EB4  9087               	bcf	135,0,c	;volatile
 26576  004EB6  0012               	return	
 26577  004EB8                     l2403:
 26578                           
 26579                           ; BSR set to: 0
 26580  004EB8  9287               	bcf	135,1,c	;volatile
 26581  004EBA  0012               	return		;funcret
 26582  004EBC                     __end_of_ControlMotor:
 26583                           	callstack 0
 26584                           
 26585 ;; *************** function _VerifyElectricalBrake *****************
 26586 ;; Defined at:
 26587 ;;		line 658 in file "outputs_MC50.c"
 26588 ;; Parameters:    Size  Location     Type
 26589 ;;  actualState     1    wreg     enum E10381
 26590 ;; Auto vars:     Size  Location     Type
 26591 ;;  actualState     1   16[COMRAM] enum E10381
 26592 ;;  tempState       1   15[COMRAM] enum E10381
 26593 ;; Return value:  Size  Location     Type
 26594 ;;                  1    wreg      enum E10381
 26595 ;; Registers used:
 26596 ;;		wreg, status,2, status,0
 26597 ;; Tracked objects:
 26598 ;;		On entry : 3F/1
 26599 ;;		On exit  : 3E/0
 26600 ;;		Unchanged: 0/0
 26601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26606 ;;Total ram usage:        2 bytes
 26607 ;; Hardware stack levels used: 1
 26608 ;; Hardware stack levels required when called: 4
 26609 ;; This function calls:
 26610 ;;		Nothing
 26611 ;; This function is called by:
 26612 ;;		_ControlMotor
 26613 ;; This function uses a non-reentrant model
 26614 ;;
 26615                           
 26616                           	psect	text113
 26617  00811E                     __ptext113:
 26618                           	callstack 0
 26619  00811E                     _VerifyElectricalBrake:
 26620                           	callstack 25
 26621                           
 26622                           ;incstack = 0
 26623                           ;VerifyElectricalBrake@actualState stored from wreg
 26624  00811E  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 26625                           
 26626                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 26627  008120  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 26628                           
 26629                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 26630  008124  0100               	movlb	0	; () banked
 26631  008126  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26632  008128  A4D8               	btfss	status,2,c
 26633  00812A  D02E               	goto	l2323
 26634                           
 26635                           ; BSR set to: 0
 26636  00812C  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26637  00812E  A4D8               	btfss	status,2,c
 26638  008130  D02B               	goto	l2323
 26639                           
 26640                           ; BSR set to: 0
 26641  008132  0101               	movlb	1	; () banked
 26642  008134  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26643  008136  D005               	goto	u15610
 26644  008138  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26645  00813A  E126               	bnz	l2323
 26646  00813C  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26647  00813E  B0D8               	btfsc	status,0,c
 26648  008140  D023               	goto	l2323
 26649  008142                     u15610:
 26650                           
 26651                           ; BSR set to: 1
 26652                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 26653  008142  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26654  008144  0100               	movlb	0	; () banked
 26655  008146  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 26656  008148  B4D8               	btfsc	status,2,c
 26657  00814A  D00B               	goto	l15031
 26658                           
 26659                           ; BSR set to: 0
 26660  00814C  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 26661  00814E  A4D8               	btfss	status,2,c
 26662  008150  D008               	goto	l15031
 26663                           
 26664                           ; BSR set to: 0
 26665                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 26666  008152  0E01               	movlw	1
 26667  008154  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26668                           
 26669                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 26670  008156  0E00               	movlw	0
 26671  008158  0101               	movlb	1	; () banked
 26672  00815A  6FC4               	movwf	(_ts_system+41)& (0+255),b	;volatile
 26673  00815C  0E16               	movlw	22
 26674  00815E  6FC3               	movwf	(_ts_system+40)& (0+255),b	;volatile
 26675                           
 26676                           ;outputs_MC50.c: 670:         }
 26677  008160  D018               	goto	l2328
 26678  008162                     l15031:
 26679                           
 26680                           ; BSR set to: 0
 26681  008162  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26682  008164  A4D8               	btfss	status,2,c
 26683  008166  D00B               	goto	l15037
 26684                           
 26685                           ; BSR set to: 0
 26686  008168  0101               	movlb	1	; () banked
 26687  00816A  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26688  00816C  D008               	goto	l15037
 26689  00816E  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26690  008170  E103               	bnz	u15650
 26691  008172  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26692  008174  A0D8               	btfss	status,0,c
 26693  008176  D003               	goto	l15037
 26694  008178                     u15650:
 26695                           
 26696                           ; BSR set to: 1
 26697                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 26698  008178  0E01               	movlw	1
 26699  00817A  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 26700                           
 26701                           ;outputs_MC50.c: 686:         }
 26702  00817C  D00A               	goto	l2328
 26703  00817E                     l15037:
 26704                           
 26705                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 26706  00817E  0E00               	movlw	0
 26707  008180  0100               	movlb	0	; () banked
 26708  008182  6F78               	movwf	_brakeElectric_st& (0+255),b
 26709                           
 26710                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 26711  008184  0E00               	movlw	0
 26712  008186  D004               	goto	L101
 26713  008188                     l2323:
 26714                           
 26715                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 26716  008188  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 26717                           
 26718                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 26719  00818C  0E00               	movlw	0
 26720  00818E  0100               	movlb	0	; () banked
 26721  008190                     L101:
 26722  008190  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26723  008192                     l2328:
 26724                           
 26725                           ;outputs_MC50.c: 700:     return tempState;
 26726  008192  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 26727  008194  0012               	return		;funcret
 26728  008196                     __end_of_VerifyElectricalBrake:
 26729                           	callstack 0
 26730                           
 26731 ;; *************** function _ControlLights *****************
 26732 ;; Defined at:
 26733 ;;		line 816 in file "outputs_MC50.c"
 26734 ;; Parameters:    Size  Location     Type
 26735 ;;		None
 26736 ;; Auto vars:     Size  Location     Type
 26737 ;;		None
 26738 ;; Return value:  Size  Location     Type
 26739 ;;                  1    wreg      void 
 26740 ;; Registers used:
 26741 ;;		wreg, status,2, status,0, cstack
 26742 ;; Tracked objects:
 26743 ;;		On entry : 3E/1
 26744 ;;		On exit  : 3E/0
 26745 ;;		Unchanged: 0/0
 26746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26751 ;;Total ram usage:        0 bytes
 26752 ;; Hardware stack levels used: 1
 26753 ;; Hardware stack levels required when called: 6
 26754 ;; This function calls:
 26755 ;;		_setFlashLigth_ON
 26756 ;;		_setRGB_ON
 26757 ;; This function is called by:
 26758 ;;		_main
 26759 ;; This function uses a non-reentrant model
 26760 ;;
 26761                           
 26762                           	psect	text114
 26763  003F02                     __ptext114:
 26764                           	callstack 0
 26765  003F02                     _ControlLights:
 26766                           	callstack 24
 26767                           
 26768                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 26769                           
 26770                           ;incstack = 0
 26771  003F02  0101               	movlb	1	; () banked
 26772  003F04  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 26773  003F06  A4D8               	btfss	status,2,c
 26774  003F08  D007               	goto	l17509
 26775                           
 26776                           ; BSR set to: 1
 26777                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 26778  003F0A  0E00               	movlw	0
 26779  003F0C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26780  003F0E  0E14               	movlw	20
 26781  003F10  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26782  003F12  EC5C  F047         	call	_setFlashLigth_ON	;wreg free
 26783                           
 26784                           ;outputs_MC50.c: 821:     }
 26785  003F16  D010               	goto	l17515
 26786  003F18                     l17509:
 26787                           
 26788                           ; BSR set to: 1
 26789  003F18  51E3               	movf	_controlGate_stateMachine& (0+255),w,b
 26790  003F1A  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26791  003F1C  A4D8               	btfss	status,2,c
 26792  003F1E  D00C               	goto	l17515
 26793                           
 26794                           ; BSR set to: 1
 26795                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26796  003F20  0E00               	movlw	0
 26797  003F22  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26798                           
 26799                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 26800  003F24  0E00               	movlw	0
 26801  003F26  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26802                           
 26803                           ; BSR set to: 1
 26804                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 26805  003F28  0E03               	movlw	3
 26806  003F2A  0100               	movlb	0	; () banked
 26807  003F2C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26808  003F2E  B4D8               	btfsc	status,2,c
 26809  003F30  D002               	goto	l2415
 26810                           
 26811                           ; BSR set to: 0
 26812                           
 26813                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 26814  003F32  9487               	bcf	135,2,c	;volatile
 26815  003F34  D001               	goto	l17515
 26816  003F36                     l2415:
 26817                           
 26818                           ; BSR set to: 0
 26819  003F36  8487               	bsf	135,2,c	;volatile
 26820  003F38                     l17515:
 26821                           
 26822                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 26823  003F38  0101               	movlb	1	; () banked
 26824  003F3A  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 26825  003F3C  B4D8               	btfsc	status,2,c
 26826  003F3E  D005               	goto	u20850
 26827                           
 26828                           ; BSR set to: 1
 26829  003F40  0E04               	movlw	4
 26830  003F42  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26831  003F44  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26832  003F46  A4D8               	btfss	status,2,c
 26833  003F48  D01C               	goto	l17527
 26834  003F4A                     u20850:
 26835                           
 26836                           ; BSR set to: 1
 26837  003F4A  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26838  003F4C  D01A               	goto	l17527
 26839  003F4E  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26840  003F50  E103               	bnz	u20860
 26841  003F52  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 26842  003F54  A0D8               	btfss	status,0,c
 26843  003F56  D015               	goto	l17527
 26844  003F58                     u20860:
 26845                           
 26846                           ; BSR set to: 1
 26847  003F58  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26848  003F5A  D006               	goto	u20870
 26849  003F5C  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26850  003F5E  E111               	bnz	l17527
 26851  003F60  0E3D               	movlw	61
 26852  003F62  5DAD               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 26853  003F64  B0D8               	btfsc	status,0,c
 26854  003F66  D00D               	goto	l17527
 26855  003F68                     u20870:
 26856                           
 26857                           ; BSR set to: 1
 26858  003F68  0E02               	movlw	2
 26859  003F6A  0100               	movlb	0	; () banked
 26860  003F6C  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26861  003F6E  A4D8               	btfss	status,2,c
 26862  003F70  D008               	goto	l17527
 26863                           
 26864                           ; BSR set to: 0
 26865                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 26866  003F72  0E00               	movlw	0
 26867  003F74  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26868  003F76  0E04               	movlw	4
 26869  003F78  6E11               	movwf	setRGB_ON@Freq^0,c
 26870  003F7A  0E01               	movlw	1
 26871  003F7C  EC2E  F03D         	call	_setRGB_ON
 26872                           
 26873                           ;outputs_MC50.c: 838:     }
 26874  003F80  0012               	return	
 26875  003F82                     l17527:
 26876  003F82  0E03               	movlw	3
 26877  003F84  0101               	movlb	1	; () banked
 26878  003F86  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26879  003F88  A4D8               	btfss	status,2,c
 26880  003F8A  D04F               	goto	l17557
 26881                           
 26882                           ; BSR set to: 1
 26883                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26884  003F8C  0E00               	movlw	0
 26885  003F8E  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26886                           
 26887                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 26888  003F90  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 26889  003F92  A4D8               	btfss	status,2,c
 26890  003F94  D013               	goto	l17539
 26891                           
 26892                           ; BSR set to: 1
 26893  003F96  0E03               	movlw	3
 26894  003F98  0100               	movlb	0	; () banked
 26895  003F9A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26896  003F9C  A4D8               	btfss	status,2,c
 26897  003F9E  D00E               	goto	l17539
 26898                           
 26899                           ; BSR set to: 0
 26900                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26901  003FA0  0E00               	movlw	0
 26902  003FA2  0101               	movlb	1	; () banked
 26903  003FA4  6FDE               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26904  003FA6  0E28               	movlw	40
 26905  003FA8  6FDD               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26906                           
 26907                           ; BSR set to: 1
 26908                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 26909  003FAA  0E00               	movlw	0
 26910  003FAC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26911  003FAE  0E00               	movlw	0
 26912  003FB0  6E11               	movwf	setRGB_ON@Freq^0,c
 26913  003FB2  0E04               	movlw	4
 26914  003FB4  EC2E  F03D         	call	_setRGB_ON
 26915                           
 26916                           ; BSR set to: 1
 26917                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 26918  003FB8  0E01               	movlw	1
 26919  003FBA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26920  003FBC                     l17539:
 26921                           
 26922                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 26923  003FBC  0101               	movlb	1	; () banked
 26924  003FBE  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26925  003FC0  D005               	goto	u20920
 26926  003FC2  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26927  003FC4  E105               	bnz	l17543
 26928  003FC6  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26929  003FC8  B0D8               	btfsc	status,0,c
 26930  003FCA  D002               	goto	l17543
 26931  003FCC                     u20920:
 26932                           
 26933                           ; BSR set to: 1
 26934  003FCC  0100               	movlb	0	; () banked
 26935  003FCE  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26936  003FD0                     l17543:
 26937                           
 26938                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 26939  003FD0  0100               	movlb	0	; () banked
 26940  003FD2  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26941  003FD4  A4D8               	btfss	status,2,c
 26942  003FD6  D010               	goto	l17549
 26943                           
 26944                           ; BSR set to: 0
 26945  003FD8  0101               	movlb	1	; () banked
 26946  003FDA  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26947  003FDC  D005               	goto	u20940
 26948  003FDE  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26949  003FE0  E10B               	bnz	l17549
 26950  003FE2  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26951  003FE4  B0D8               	btfsc	status,0,c
 26952  003FE6  D008               	goto	l17549
 26953  003FE8                     u20940:
 26954                           
 26955                           ; BSR set to: 1
 26956                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 26957  003FE8  0E00               	movlw	0
 26958  003FEA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26959  003FEC  0E05               	movlw	5
 26960  003FEE  6E11               	movwf	setRGB_ON@Freq^0,c
 26961  003FF0  0E03               	movlw	3
 26962  003FF2  EC2E  F03D         	call	_setRGB_ON
 26963                           
 26964                           ;outputs_MC50.c: 862:         }
 26965  003FF6  D007               	goto	l17551
 26966  003FF8                     l17549:
 26967                           
 26968                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 26969  003FF8  0E00               	movlw	0
 26970  003FFA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26971  003FFC  0E00               	movlw	0
 26972  003FFE  6E11               	movwf	setRGB_ON@Freq^0,c
 26973  004000  0E03               	movlw	3
 26974  004002  EC2E  F03D         	call	_setRGB_ON
 26975  004006                     l17551:
 26976                           
 26977                           ; BSR set to: 1
 26978                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 26979  004006  0100               	movlb	0	; () banked
 26980  004008  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26981  00400A  A4D8               	btfss	status,2,c
 26982  00400C  D007               	goto	l17555
 26983                           
 26984                           ; BSR set to: 0
 26985                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 26986  00400E  0E00               	movlw	0
 26987  004010  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26988  004012  0E0A               	movlw	10
 26989  004014  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26990  004016  EC5C  F047         	call	_setFlashLigth_ON	;wreg free
 26991                           
 26992                           ;outputs_MC50.c: 873:         }
 26993  00401A  0012               	return	
 26994  00401C                     l17555:
 26995                           
 26996                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 26997  00401C  0E00               	movlw	0
 26998  00401E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26999  004020  0E00               	movlw	0
 27000  004022  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27001  004024  EC5C  F047         	call	_setFlashLigth_ON	;wreg free
 27002  004028  0012               	return	
 27003  00402A                     l17557:
 27004                           
 27005                           ; BSR set to: 1
 27006  00402A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27007  00402C  A4D8               	btfss	status,2,c
 27008  00402E  D042               	goto	l17585
 27009                           
 27010                           ; BSR set to: 1
 27011  004030  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
 27012  004032  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27013  004034  A4D8               	btfss	status,2,c
 27014  004036  D03E               	goto	l17585
 27015                           
 27016                           ; BSR set to: 1
 27017                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 27018  004038  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27019  00403A  A4D8               	btfss	status,2,c
 27020                           
 27021                           ; BSR set to: 1
 27022                           
 27023                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 27024  00403C  8E83               	bsf	131,7,c	;volatile
 27025                           
 27026                           ; BSR set to: 1
 27027                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 27028  00403E  0100               	movlb	0	; () banked
 27029  004040  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27030  004042  A4D8               	btfss	status,2,c
 27031  004044  D017               	goto	l17573
 27032                           
 27033                           ; BSR set to: 0
 27034                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 27035  004046  0E02               	movlw	2
 27036  004048  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27037  00404A  B4D8               	btfsc	status,2,c
 27038  00404C  D003               	goto	u21010
 27039                           
 27040                           ; BSR set to: 0
 27041  00404E  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 27042  004050  A4D8               	btfss	status,2,c
 27043  004052  D008               	goto	l17571
 27044  004054                     u21010:
 27045                           
 27046                           ; BSR set to: 0
 27047  004054  0E00               	movlw	0
 27048  004056  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27049  004058  0E00               	movlw	0
 27050  00405A  6E11               	movwf	setRGB_ON@Freq^0,c
 27051  00405C  0E04               	movlw	4
 27052  00405E  EC2E  F03D         	call	_setRGB_ON
 27053  004062  D013               	goto	l17577
 27054  004064                     l17571:
 27055                           
 27056                           ; BSR set to: 0
 27057  004064  0E00               	movlw	0
 27058  004066  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27059  004068  0E28               	movlw	40
 27060  00406A  6E11               	movwf	setRGB_ON@Freq^0,c
 27061  00406C  0E04               	movlw	4
 27062  00406E  EC2E  F03D         	call	_setRGB_ON
 27063  004072  D00B               	goto	l17577
 27064  004074                     l17573:
 27065                           
 27066                           ; BSR set to: 0
 27067  004074  0E03               	movlw	3
 27068  004076  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27069  004078  B4D8               	btfsc	status,2,c
 27070  00407A  D007               	goto	l17577
 27071                           
 27072                           ; BSR set to: 0
 27073  00407C  0E00               	movlw	0
 27074  00407E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27075  004080  0E00               	movlw	0
 27076  004082  6E11               	movwf	setRGB_ON@Freq^0,c
 27077  004084  0E04               	movlw	4
 27078  004086  EC2E  F03D         	call	_setRGB_ON
 27079  00408A                     l17577:
 27080                           
 27081                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 27082  00408A  0E03               	movlw	3
 27083  00408C  0100               	movlb	0	; () banked
 27084  00408E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27085  004090  B4D8               	btfsc	status,2,c
 27086  004092  0012               	return	
 27087                           
 27088                           ; BSR set to: 0
 27089                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 27090  004094  0101               	movlb	1	; () banked
 27091  004096  BFBE               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 27092  004098  D007               	goto	l2443
 27093  00409A  51BE               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 27094  00409C  11BD               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 27095  00409E  11BC               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 27096  0040A0  E1BD               	bnz	l17555
 27097  0040A2  05BB               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 27098  0040A4  B0D8               	btfsc	status,0,c
 27099  0040A6  D7BA               	goto	l17555
 27100  0040A8                     l2443:
 27101                           
 27102                           ; BSR set to: 1
 27103  0040A8  9487               	bcf	135,2,c	;volatile
 27104                           
 27105                           ; BSR set to: 1
 27106                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 27107  0040AA  0E00               	movlw	0
 27108  0040AC  6FBA               	movwf	(_ts_system+31)& (0+255),b	;volatile
 27109  0040AE  0E00               	movlw	0
 27110  0040B0  6FB9               	movwf	(_ts_system+30)& (0+255),b	;volatile
 27111                           
 27112                           ; BSR set to: 0
 27113                           ;outputs_MC50.c: 907:     }
 27114                           
 27115                           ;outputs_MC50.c: 906:         }
 27116  0040B2  0012               	return	
 27117  0040B4                     l17585:
 27118                           
 27119                           ; BSR set to: 1
 27120  0040B4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27121  0040B6  A4D8               	btfss	status,2,c
 27122  0040B8  D048               	goto	l17619
 27123                           
 27124                           ; BSR set to: 1
 27125                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 27126  0040BA  0100               	movlb	0	; () banked
 27127  0040BC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27128  0040BE  A4D8               	btfss	status,2,c
 27129  0040C0  D004               	goto	u21070
 27130                           
 27131                           ; BSR set to: 0
 27132  0040C2  0101               	movlb	1	; () banked
 27133  0040C4  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27134  0040C6  B4D8               	btfsc	status,2,c
 27135  0040C8  D00C               	goto	u21100
 27136  0040CA                     u21070:
 27137  0040CA  0100               	movlb	0	; () banked
 27138  0040CC  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27139  0040CE  A4D8               	btfss	status,2,c
 27140  0040D0  D017               	goto	l17603
 27141                           
 27142                           ; BSR set to: 0
 27143  0040D2  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27144  0040D4  B4D8               	btfsc	status,2,c
 27145  0040D6  D014               	goto	l17603
 27146                           
 27147                           ; BSR set to: 0
 27148  0040D8  0E02               	movlw	2
 27149  0040DA  0101               	movlb	1	; () banked
 27150  0040DC  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27151  0040DE  A4D8               	btfss	status,2,c
 27152  0040E0  D00F               	goto	l17603
 27153  0040E2                     u21100:
 27154                           
 27155                           ; BSR set to: 1
 27156                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27157  0040E2  0E00               	movlw	0
 27158  0040E4  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27159                           
 27160                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 27161  0040E6  0E00               	movlw	0
 27162  0040E8  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27163                           
 27164                           ; BSR set to: 1
 27165                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 27166  0040EA  0E03               	movlw	3
 27167  0040EC  0100               	movlb	0	; () banked
 27168  0040EE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27169  0040F0  B4D8               	btfsc	status,2,c
 27170  0040F2  0012               	return	
 27171                           
 27172                           ; BSR set to: 0
 27173  0040F4  0E02               	movlw	2
 27174  0040F6  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27175  0040F8  B4D8               	btfsc	status,2,c
 27176  0040FA  0012               	return	
 27177                           
 27178                           ; BSR set to: 0
 27179                           
 27180                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 27181  0040FC  9487               	bcf	135,2,c	;volatile
 27182  0040FE  0012               	return	
 27183  004100                     l17603:
 27184                           
 27185                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27186  004100  0100               	movlb	0	; () banked
 27187  004102  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27188  004104  A4D8               	btfss	status,2,c
 27189  004106  D008               	goto	l17607
 27190                           
 27191                           ; BSR set to: 0
 27192                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 27193  004108  0E00               	movlw	0
 27194  00410A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27195  00410C  0E14               	movlw	20
 27196  00410E  6E11               	movwf	setRGB_ON@Freq^0,c
 27197  004110  0E01               	movlw	1
 27198  004112  EC2E  F03D         	call	_setRGB_ON
 27199                           
 27200                           ;outputs_MC50.c: 932:             }
 27201  004116  D007               	goto	l17609
 27202  004118                     l17607:
 27203                           
 27204                           ; BSR set to: 0
 27205                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 27206  004118  0E00               	movlw	0
 27207  00411A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27208  00411C  0E00               	movlw	0
 27209  00411E  6E11               	movwf	setRGB_ON@Freq^0,c
 27210  004120  0E01               	movlw	1
 27211  004122  EC2E  F03D         	call	_setRGB_ON
 27212  004126                     l17609:
 27213                           
 27214                           ; BSR set to: 1
 27215                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 27216  004126  0100               	movlb	0	; () banked
 27217  004128  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27218  00412A  B4D8               	btfsc	status,2,c
 27219  00412C  D004               	goto	u21150
 27220                           
 27221                           ; BSR set to: 0
 27222  00412E  0E03               	movlw	3
 27223  004130  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27224  004132  A4D8               	btfss	status,2,c
 27225  004134  D002               	goto	l17613
 27226  004136                     u21150:
 27227                           
 27228                           ; BSR set to: 0
 27229                           
 27230                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 27231  004136  9487               	bcf	135,2,c	;volatile
 27232  004138  0012               	return	
 27233  00413A                     l17613:
 27234                           
 27235                           ; BSR set to: 0
 27236  00413A  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27237  00413C  B4D8               	btfsc	status,2,c
 27238  00413E  D76E               	goto	l17555
 27239                           
 27240                           ; BSR set to: 0
 27241  004140  0E02               	movlw	2
 27242  004142  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27243  004144  A4D8               	btfss	status,2,c
 27244  004146  0012               	return	
 27245  004148  D769               	goto	l17555
 27246  00414A                     l17619:
 27247                           
 27248                           ; BSR set to: 1
 27249                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 27250  00414A  0E00               	movlw	0
 27251  00414C  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27252                           
 27253                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 27254  00414E  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 27255  004150  A4D8               	btfss	status,2,c
 27256  004152  D00C               	goto	l17625
 27257                           
 27258                           ; BSR set to: 1
 27259  004154  0E03               	movlw	3
 27260  004156  0100               	movlb	0	; () banked
 27261  004158  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27262  00415A  A4D8               	btfss	status,2,c
 27263  00415C  D007               	goto	l17625
 27264                           
 27265                           ; BSR set to: 0
 27266                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27267  00415E  0E00               	movlw	0
 27268  004160  0101               	movlb	1	; () banked
 27269  004162  6FDE               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27270  004164  0E28               	movlw	40
 27271  004166  6FDD               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27272                           
 27273                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 27274  004168  0E01               	movlw	1
 27275  00416A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27276  00416C                     l17625:
 27277                           
 27278                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 27279  00416C  0101               	movlb	1	; () banked
 27280  00416E  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27281  004170  D005               	goto	u21200
 27282  004172  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27283  004174  E105               	bnz	l17629
 27284  004176  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27285  004178  B0D8               	btfsc	status,0,c
 27286  00417A  D002               	goto	l17629
 27287  00417C                     u21200:
 27288                           
 27289                           ; BSR set to: 1
 27290  00417C  0100               	movlb	0	; () banked
 27291  00417E  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27292  004180                     l17629:
 27293                           
 27294                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 27295  004180  0E04               	movlw	4
 27296  004182  0101               	movlb	1	; () banked
 27297  004184  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27298  004186  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27299  004188  A4D8               	btfss	status,2,c
 27300  00418A  D01B               	goto	l17641
 27301                           
 27302                           ; BSR set to: 1
 27303                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27304  00418C  0E00               	movlw	0
 27305  00418E  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27306                           
 27307                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 27308  004190  0E00               	movlw	0
 27309  004192  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27310                           
 27311                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 27312  004194  0100               	movlb	0	; () banked
 27313  004196  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27314  004198  A4D8               	btfss	status,2,c
 27315  00419A  D00A               	goto	u21250
 27316                           
 27317                           ; BSR set to: 0
 27318  00419C  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27319  00419E  B4D8               	btfsc	status,2,c
 27320  0041A0  D003               	goto	u21240
 27321                           
 27322                           ; BSR set to: 0
 27323  0041A2  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27324  0041A4  A4D8               	btfss	status,2,c
 27325  0041A6  D004               	goto	u21250
 27326  0041A8                     u21240:
 27327                           
 27328                           ; BSR set to: 0
 27329  0041A8  0E02               	movlw	2
 27330  0041AA  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 27331  0041AC  A4D8               	btfss	status,2,c
 27332  0041AE  D007               	goto	l2477
 27333  0041B0                     u21250:
 27334                           
 27335                           ; BSR set to: 0
 27336                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 27337  0041B0  0E00               	movlw	0
 27338  0041B2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27339  0041B4  0E00               	movlw	0
 27340  0041B6  6E11               	movwf	setRGB_ON@Freq^0,c
 27341  0041B8  0E01               	movlw	1
 27342  0041BA  EC2E  F03D         	call	_setRGB_ON
 27343  0041BE                     l2477:
 27344  0041BE  9487               	bcf	135,2,c	;volatile
 27345  0041C0  0012               	return	
 27346  0041C2                     l17641:
 27347                           
 27348                           ; BSR set to: 1
 27349                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27350  0041C2  0100               	movlb	0	; () banked
 27351  0041C4  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27352  0041C6  A4D8               	btfss	status,2,c
 27353  0041C8  D008               	goto	l17645
 27354                           
 27355                           ; BSR set to: 0
 27356                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 27357  0041CA  0E00               	movlw	0
 27358  0041CC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27359  0041CE  0E0A               	movlw	10
 27360  0041D0  6E11               	movwf	setRGB_ON@Freq^0,c
 27361  0041D2  0E02               	movlw	2
 27362  0041D4  EC2E  F03D         	call	_setRGB_ON
 27363                           
 27364                           ;outputs_MC50.c: 999:             }
 27365  0041D8  D007               	goto	l17647
 27366  0041DA                     l17645:
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 27370  0041DA  0E00               	movlw	0
 27371  0041DC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27372  0041DE  0E00               	movlw	0
 27373  0041E0  6E11               	movwf	setRGB_ON@Freq^0,c
 27374  0041E2  0E02               	movlw	2
 27375  0041E4  EC2E  F03D         	call	_setRGB_ON
 27376  0041E8                     l17647:
 27377                           
 27378                           ; BSR set to: 1
 27379                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 27380  0041E8  0100               	movlb	0	; () banked
 27381  0041EA  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27382  0041EC  A4D8               	btfss	status,2,c
 27383  0041EE  D007               	goto	l17651
 27384                           
 27385                           ; BSR set to: 0
 27386                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 27387  0041F0  0E00               	movlw	0
 27388  0041F2  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27389  0041F4  0E14               	movlw	20
 27390  0041F6  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27391  0041F8  EC5C  F047         	call	_setFlashLigth_ON	;wreg free
 27392                           
 27393                           ;outputs_MC50.c: 1011:             }
 27394  0041FC  D00D               	goto	l17657
 27395  0041FE                     l17651:
 27396                           
 27397                           ; BSR set to: 0
 27398  0041FE  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27399  004200  B4D8               	btfsc	status,2,c
 27400  004202  D004               	goto	u21290
 27401                           
 27402                           ; BSR set to: 0
 27403  004204  0E02               	movlw	2
 27404  004206  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27405  004208  A4D8               	btfss	status,2,c
 27406  00420A  D006               	goto	l17657
 27407  00420C                     u21290:
 27408                           
 27409                           ; BSR set to: 0
 27410                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 27411  00420C  0E00               	movlw	0
 27412  00420E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27413  004210  0E00               	movlw	0
 27414  004212  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27415  004214  EC5C  F047         	call	_setFlashLigth_ON	;wreg free
 27416  004218                     l17657:
 27417                           
 27418                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 27419  004218  0E03               	movlw	3
 27420  00421A  0100               	movlb	0	; () banked
 27421  00421C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27422  00421E  A4D8               	btfss	status,2,c
 27423  004220  0012               	return	
 27424                           
 27425                           ; BSR set to: 0
 27426                           
 27427                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 27428  004222  9487               	bcf	135,2,c	;volatile
 27429  004224  0012               	return		;funcret
 27430  004226                     __end_of_ControlLights:
 27431                           	callstack 0
 27432                           
 27433 ;; *************** function _setRGB_ON *****************
 27434 ;; Defined at:
 27435 ;;		line 1028 in file "outputs_MC50.c"
 27436 ;; Parameters:    Size  Location     Type
 27437 ;;  RGBLigth        1    wreg     enum E10611
 27438 ;;  Freq            2   16[COMRAM] int 
 27439 ;; Auto vars:     Size  Location     Type
 27440 ;;  RGBLigth        1   20[COMRAM] enum E10611
 27441 ;; Return value:  Size  Location     Type
 27442 ;;                  1    wreg      void 
 27443 ;; Registers used:
 27444 ;;		wreg, status,2, status,0, cstack
 27445 ;; Tracked objects:
 27446 ;;		On entry : 3E/0
 27447 ;;		On exit  : 3F/1
 27448 ;;		Unchanged: 0/0
 27449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27453 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27454 ;;Total ram usage:        5 bytes
 27455 ;; Hardware stack levels used: 1
 27456 ;; Hardware stack levels required when called: 5
 27457 ;; This function calls:
 27458 ;;		_RGB_Set
 27459 ;; This function is called by:
 27460 ;;		_ControlLights
 27461 ;; This function uses a non-reentrant model
 27462 ;;
 27463                           
 27464                           	psect	text115
 27465  007A5C                     __ptext115:
 27466                           	callstack 0
 27467  007A5C                     _setRGB_ON:
 27468                           	callstack 24
 27469                           
 27470                           ;incstack = 0
 27471                           ;setRGB_ON@RGBLigth stored from wreg
 27472  007A5C  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 27473                           
 27474                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 27475  007A5E  8E83               	bsf	131,7,c	;volatile
 27476                           
 27477                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 27478  007A60  5011               	movf	setRGB_ON@Freq^0,w,c
 27479  007A62  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 27480  007A64  B4D8               	btfsc	status,2,c
 27481  007A66  D015               	goto	l15069
 27482  007A68  0101               	movlb	1	; () banked
 27483  007A6A  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 27484  007A6C  B4D8               	btfsc	status,2,c
 27485  007A6E  D011               	goto	l15069
 27486  007A70  D024               	goto	l15071
 27487  007A72                     l15059:
 27488                           
 27489                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 27490  007A72  0E20               	movlw	32
 27491  007A74  EC4D  F04B         	call	_RGB_Set
 27492                           
 27493                           ;outputs_MC50.c: 1044:             break;
 27494  007A78  D020               	goto	l15071
 27495  007A7A                     l15061:
 27496                           
 27497                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 27498  007A7A  0E04               	movlw	4
 27499  007A7C  EC4D  F04B         	call	_RGB_Set
 27500                           
 27501                           ;outputs_MC50.c: 1048:             break;
 27502  007A80  D01C               	goto	l15071
 27503  007A82                     l15063:
 27504                           
 27505                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 27506  007A82  0E00               	movlw	0
 27507  007A84  EC4D  F04B         	call	_RGB_Set
 27508                           
 27509                           ;outputs_MC50.c: 1052:             break;
 27510  007A88  D018               	goto	l15071
 27511  007A8A                     l15065:
 27512                           
 27513                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 27514  007A8A  0E24               	movlw	36
 27515  007A8C  EC4D  F04B         	call	_RGB_Set
 27516                           
 27517                           ;outputs_MC50.c: 1056:             break;
 27518  007A90  D014               	goto	l15071
 27519  007A92                     l15069:
 27520  007A92  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 27521  007A94  6E13               	movwf	??_setRGB_ON^0,c
 27522  007A96  6A14               	clrf	(??_setRGB_ON+1)^0,c
 27523                           
 27524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27525                           ; Switch size 1, requested type "simple"
 27526                           ; Number of cases is 1, Range of values is 0 to 0
 27527                           ; switch strategies available:
 27528                           ; Name         Instructions Cycles
 27529                           ; simple_byte            4     3 (average)
 27530                           ;	Chosen strategy is simple_byte
 27531  007A98  5014               	movf	(??_setRGB_ON+1)^0,w,c
 27532  007A9A  0A00               	xorlw	0	; case 0
 27533  007A9C  A4D8               	btfss	status,2,c
 27534  007A9E  D00D               	goto	l15071
 27535                           
 27536                           ; Switch size 1, requested type "simple"
 27537                           ; Number of cases is 4, Range of values is 1 to 4
 27538                           ; switch strategies available:
 27539                           ; Name         Instructions Cycles
 27540                           ; simple_byte           13     7 (average)
 27541                           ;	Chosen strategy is simple_byte
 27542  007AA0  5013               	movf	??_setRGB_ON^0,w,c
 27543  007AA2  0A01               	xorlw	1	; case 1
 27544  007AA4  B4D8               	btfsc	status,2,c
 27545  007AA6  D7ED               	goto	l15063
 27546  007AA8  0A03               	xorlw	3	; case 2
 27547  007AAA  B4D8               	btfsc	status,2,c
 27548  007AAC  D7E6               	goto	l15061
 27549  007AAE  0A01               	xorlw	1	; case 3
 27550  007AB0  B4D8               	btfsc	status,2,c
 27551  007AB2  D7DF               	goto	l15059
 27552  007AB4  0A07               	xorlw	7	; case 4
 27553  007AB6  B4D8               	btfsc	status,2,c
 27554  007AB8  D7E8               	goto	l15065
 27555  007ABA                     l15071:
 27556                           
 27557                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 27558  007ABA  0101               	movlb	1	; () banked
 27559  007ABC  BFB8               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 27560  007ABE  D005               	goto	u15720
 27561  007AC0  51B8               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 27562  007AC2  E113               	bnz	l2507
 27563  007AC4  05B7               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 27564  007AC6  B0D8               	btfsc	status,0,c
 27565  007AC8  0012               	return	
 27566  007ACA                     u15720:
 27567                           
 27568                           ; BSR set to: 1
 27569  007ACA  5011               	movf	setRGB_ON@Freq^0,w,c
 27570  007ACC  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 27571  007ACE  B4D8               	btfsc	status,2,c
 27572  007AD0  0012               	return	
 27573                           
 27574                           ; BSR set to: 1
 27575                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 27576  007AD2  C011  F1B7         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 27577  007AD6  C012  F1B8         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 27578                           
 27579                           ; BSR set to: 1
 27580                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 27581  007ADA  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 27582  007ADC  A4D8               	btfss	status,2,c
 27583  007ADE  D003               	goto	l15081
 27584                           
 27585                           ; BSR set to: 1
 27586                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 27587  007AE0  0E00               	movlw	0
 27588  007AE2  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27589                           
 27590                           ;outputs_MC50.c: 1067:         }
 27591  007AE4  0012               	return	
 27592  007AE6                     l15081:
 27593                           
 27594                           ; BSR set to: 1
 27595                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 27596  007AE6  0E01               	movlw	1
 27597  007AE8  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27598  007AEA                     l2507:
 27599                           
 27600                           ; BSR set to: 1
 27601  007AEA  0012               	return		;funcret
 27602  007AEC                     __end_of_setRGB_ON:
 27603                           	callstack 0
 27604                           
 27605 ;; *************** function _RGB_Set *****************
 27606 ;; Defined at:
 27607 ;;		line 98 in file "outputs_MC50.c"
 27608 ;; Parameters:    Size  Location     Type
 27609 ;;  value           1    wreg     unsigned char 
 27610 ;; Auto vars:     Size  Location     Type
 27611 ;;  value           1   15[COMRAM] unsigned char 
 27612 ;; Return value:  Size  Location     Type
 27613 ;;                  1    wreg      void 
 27614 ;; Registers used:
 27615 ;;		wreg, status,2, status,0
 27616 ;; Tracked objects:
 27617 ;;		On entry : 0/0
 27618 ;;		On exit  : 0/0
 27619 ;;		Unchanged: 0/0
 27620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27625 ;;Total ram usage:        1 bytes
 27626 ;; Hardware stack levels used: 1
 27627 ;; Hardware stack levels required when called: 4
 27628 ;; This function calls:
 27629 ;;		Nothing
 27630 ;; This function is called by:
 27631 ;;		_setRGB_ON
 27632 ;; This function uses a non-reentrant model
 27633 ;;
 27634                           
 27635                           	psect	text116
 27636  00969A                     __ptext116:
 27637                           	callstack 0
 27638  00969A                     _RGB_Set:
 27639                           	callstack 24
 27640                           
 27641                           ; BSR set to: 1
 27642                           ;incstack = 0
 27643                           ;RGB_Set@value stored from wreg
 27644  00969A  6E10               	movwf	RGB_Set@value^0,c
 27645                           
 27646                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 27647  00969C  0EDB               	movlw	219
 27648  00969E  1685               	andwf	133,f,c	;volatile
 27649                           
 27650                           ;outputs_MC50.c: 101:    LATC |= value;
 27651  0096A0  5010               	movf	RGB_Set@value^0,w,c	;volatile
 27652  0096A2  1285               	iorwf	133,f,c	;volatile
 27653  0096A4  9E83               	bcf	131,7,c	;volatile
 27654  0096A6  0012               	return		;funcret
 27655  0096A8                     __end_of_RGB_Set:
 27656                           	callstack 0
 27657                           
 27658 ;; *************** function _setFlashLigth_ON *****************
 27659 ;; Defined at:
 27660 ;;		line 1077 in file "outputs_MC50.c"
 27661 ;; Parameters:    Size  Location     Type
 27662 ;;  Freq            2   15[COMRAM] int 
 27663 ;; Auto vars:     Size  Location     Type
 27664 ;;		None
 27665 ;; Return value:  Size  Location     Type
 27666 ;;                  1    wreg      void 
 27667 ;; Registers used:
 27668 ;;		wreg, status,2, status,0
 27669 ;; Tracked objects:
 27670 ;;		On entry : 3E/1
 27671 ;;		On exit  : 3F/1
 27672 ;;		Unchanged: 0/0
 27673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27678 ;;Total ram usage:        2 bytes
 27679 ;; Hardware stack levels used: 1
 27680 ;; Hardware stack levels required when called: 4
 27681 ;; This function calls:
 27682 ;;		Nothing
 27683 ;; This function is called by:
 27684 ;;		_ControlLights
 27685 ;; This function uses a non-reentrant model
 27686 ;;
 27687                           
 27688                           	psect	text117
 27689  008EB8                     __ptext117:
 27690                           	callstack 0
 27691  008EB8                     _setFlashLigth_ON:
 27692                           	callstack 25
 27693                           
 27694                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 27695                           
 27696                           ;incstack = 0
 27697  008EB8  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27698  008EBA  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27699  008EBC  B4D8               	btfsc	status,2,c
 27700  008EBE  D004               	goto	u15670
 27701  008EC0  0101               	movlb	1	; () banked
 27702  008EC2  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 27703  008EC4  A4D8               	btfss	status,2,c
 27704  008EC6  D002               	goto	l2516
 27705  008EC8                     u15670:
 27706                           
 27707                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 27708  008EC8  8487               	bsf	135,2,c	;volatile
 27709  008ECA  D001               	goto	l15047
 27710  008ECC                     l2516:
 27711                           
 27712                           ; BSR set to: 1
 27713  008ECC  9487               	bcf	135,2,c	;volatile
 27714  008ECE                     l15047:
 27715                           
 27716                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 27717  008ECE  0101               	movlb	1	; () banked
 27718  008ED0  BFBA               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 27719  008ED2  D005               	goto	u15680
 27720  008ED4  51BA               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 27721  008ED6  E10D               	bnz	l2519
 27722  008ED8  05B9               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 27723  008EDA  B0D8               	btfsc	status,0,c
 27724  008EDC  0012               	return	
 27725  008EDE                     u15680:
 27726                           
 27727                           ; BSR set to: 1
 27728  008EDE  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27729  008EE0  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27730  008EE2  B4D8               	btfsc	status,2,c
 27731  008EE4  0012               	return	
 27732                           
 27733                           ; BSR set to: 1
 27734                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 27735  008EE6  C010  F1B9         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 27736  008EEA  C011  F1BA         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 27737                           
 27738                           ; BSR set to: 1
 27739                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 27740  008EEE  0E01               	movlw	1
 27741  008EF0  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 27742  008EF2                     l2519:
 27743                           
 27744                           ; BSR set to: 1
 27745  008EF2  0012               	return		;funcret
 27746  008EF4                     __end_of_setFlashLigth_ON:
 27747                           	callstack 0
 27748                           
 27749 ;; *************** function _ControlInputs *****************
 27750 ;; Defined at:
 27751 ;;		line 674 in file "inputs_MC50.c"
 27752 ;; Parameters:    Size  Location     Type
 27753 ;;		None
 27754 ;; Auto vars:     Size  Location     Type
 27755 ;;		None
 27756 ;; Return value:  Size  Location     Type
 27757 ;;                  1    wreg      void 
 27758 ;; Registers used:
 27759 ;;		wreg, status,2, status,0
 27760 ;; Tracked objects:
 27761 ;;		On entry : 3E/1
 27762 ;;		On exit  : 3E/0
 27763 ;;		Unchanged: 0/0
 27764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27769 ;;Total ram usage:        0 bytes
 27770 ;; Hardware stack levels used: 1
 27771 ;; Hardware stack levels required when called: 4
 27772 ;; This function calls:
 27773 ;;		Nothing
 27774 ;; This function is called by:
 27775 ;;		_main
 27776 ;; This function uses a non-reentrant model
 27777 ;;
 27778                           
 27779                           	psect	text118
 27780  0069DE                     __ptext118:
 27781                           	callstack 0
 27782  0069DE                     _ControlInputs:
 27783                           	callstack 26
 27784                           
 27785                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 27786                           
 27787                           ; BSR set to: 1
 27788                           ;incstack = 0
 27789  0069DE  0E03               	movlw	3
 27790  0069E0  0101               	movlb	1	; () banked
 27791  0069E2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27792  0069E4  B4D8               	btfsc	status,2,c
 27793  0069E6  D00C               	goto	u19640
 27794                           
 27795                           ; BSR set to: 1
 27796  0069E8  A291               	btfss	145,1,c	;volatile
 27797  0069EA  D004               	goto	u19620
 27798                           
 27799                           ; BSR set to: 1
 27800  0069EC  0100               	movlb	0	; () banked
 27801  0069EE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27802  0069F0  B4D8               	btfsc	status,2,c
 27803  0069F2  D006               	goto	u19640
 27804  0069F4                     u19620:
 27805  0069F4  A091               	btfss	145,0,c	;volatile
 27806  0069F6  D00A               	goto	l17027
 27807  0069F8  0100               	movlb	0	; () banked
 27808  0069FA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27809  0069FC  A4D8               	btfss	status,2,c
 27810  0069FE  D006               	goto	l17027
 27811  006A00                     u19640:
 27812  006A00  0101               	movlb	1	; () banked
 27813  006A02  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27814  006A04  A4D8               	btfss	status,2,c
 27815  006A06  D002               	goto	l17027
 27816                           
 27817                           ; BSR set to: 1
 27818                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 27819  006A08  0E00               	movlw	0
 27820  006A0A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27821  006A0C                     l17027:
 27822                           
 27823                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 27824  006A0C  0101               	movlb	1	; () banked
 27825  006A0E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27826  006A10  B4D8               	btfsc	status,2,c
 27827  006A12  D010               	goto	u19710
 27828                           
 27829                           ; BSR set to: 1
 27830  006A14  0E02               	movlw	2
 27831  006A16  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27832  006A18  B4D8               	btfsc	status,2,c
 27833  006A1A  D00C               	goto	u19710
 27834                           
 27835                           ; BSR set to: 1
 27836  006A1C  A091               	btfss	145,0,c	;volatile
 27837  006A1E  D004               	goto	u19690
 27838                           
 27839                           ; BSR set to: 1
 27840  006A20  0100               	movlb	0	; () banked
 27841  006A22  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27842  006A24  B4D8               	btfsc	status,2,c
 27843  006A26  D006               	goto	u19710
 27844  006A28                     u19690:
 27845  006A28  A291               	btfss	145,1,c	;volatile
 27846  006A2A  D00A               	goto	l17041
 27847  006A2C  0100               	movlb	0	; () banked
 27848  006A2E  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27849  006A30  A4D8               	btfss	status,2,c
 27850  006A32  D006               	goto	l17041
 27851  006A34                     u19710:
 27852  006A34  0101               	movlb	1	; () banked
 27853  006A36  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27854  006A38  A4D8               	btfss	status,2,c
 27855  006A3A  D002               	goto	l17041
 27856                           
 27857                           ; BSR set to: 1
 27858                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 27859  006A3C  0E00               	movlw	0
 27860  006A3E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27861  006A40                     l17041:
 27862                           
 27863                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 27864  006A40  0101               	movlb	1	; () banked
 27865  006A42  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 27866  006A44  B4D8               	btfsc	status,2,c
 27867  006A46  0012               	return	
 27868                           
 27869                           ; BSR set to: 1
 27870                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 27871  006A48  0100               	movlb	0	; () banked
 27872  006A4A  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 27873  006A4C  A4D8               	btfss	status,2,c
 27874  006A4E  D02B               	goto	l17067
 27875                           
 27876                           ; BSR set to: 0
 27877  006A50  0101               	movlb	1	; () banked
 27878  006A52  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 27879  006A54  A4D8               	btfss	status,2,c
 27880  006A56  D027               	goto	l17067
 27881                           
 27882                           ; BSR set to: 1
 27883  006A58  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27884  006A5A  A4D8               	btfss	status,2,c
 27885  006A5C  D024               	goto	l17067
 27886                           
 27887                           ; BSR set to: 1
 27888                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 27889  006A5E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27890  006A60  B4D8               	btfsc	status,2,c
 27891  006A62  D004               	goto	u19780
 27892                           
 27893                           ; BSR set to: 1
 27894  006A64  0E02               	movlw	2
 27895  006A66  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27896  006A68  A4D8               	btfss	status,2,c
 27897  006A6A  D007               	goto	l17057
 27898  006A6C                     u19780:
 27899                           
 27900                           ; BSR set to: 1
 27901  006A6C  0100               	movlb	0	; () banked
 27902  006A6E  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27903  006A70  A4D8               	btfss	status,2,c
 27904  006A72  D003               	goto	l17057
 27905                           
 27906                           ; BSR set to: 0
 27907                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 27908  006A74  0E00               	movlw	0
 27909  006A76  0101               	movlb	1	; () banked
 27910  006A78  D015               	goto	L102
 27911  006A7A                     l17057:
 27912  006A7A  0E03               	movlw	3
 27913  006A7C  0101               	movlb	1	; () banked
 27914  006A7E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27915  006A80  A4D8               	btfss	status,2,c
 27916  006A82  D011               	goto	l17067
 27917                           
 27918                           ; BSR set to: 1
 27919  006A84  0100               	movlb	0	; () banked
 27920  006A86  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27921  006A88  A4D8               	btfss	status,2,c
 27922  006A8A  D00D               	goto	l17067
 27923                           
 27924                           ; BSR set to: 0
 27925  006A8C  0101               	movlb	1	; () banked
 27926  006A8E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 27927  006A90  D005               	goto	u19820
 27928  006A92  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 27929  006A94  E108               	bnz	l17067
 27930  006A96  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 27931  006A98  B0D8               	btfsc	status,0,c
 27932  006A9A  D005               	goto	l17067
 27933  006A9C                     u19820:
 27934                           
 27935                           ; BSR set to: 1
 27936  006A9C  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 27937  006A9E  A4D8               	btfss	status,2,c
 27938  006AA0  D002               	goto	l17067
 27939                           
 27940                           ; BSR set to: 1
 27941                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 27942  006AA2  0E00               	movlw	0
 27943  006AA4                     L102:
 27944  006AA4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27945  006AA6                     l17067:
 27946                           
 27947                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 27948  006AA6  0100               	movlb	0	; () banked
 27949  006AA8  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 27950  006AAA  B4D8               	btfsc	status,2,c
 27951  006AAC  D003               	goto	u19850
 27952                           
 27953                           ; BSR set to: 0
 27954  006AAE  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27955  006AB0  A4D8               	btfss	status,2,c
 27956  006AB2  0012               	return	
 27957  006AB4                     u19850:
 27958                           
 27959                           ; BSR set to: 0
 27960  006AB4  0101               	movlb	1	; () banked
 27961  006AB6  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 27962  006AB8  A4D8               	btfss	status,2,c
 27963  006ABA  0012               	return	
 27964                           
 27965                           ; BSR set to: 1
 27966  006ABC  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27967  006ABE  A4D8               	btfss	status,2,c
 27968  006AC0  0012               	return	
 27969                           
 27970                           ; BSR set to: 1
 27971                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 27972  006AC2  0E03               	movlw	3
 27973  006AC4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27974  006AC6  A4D8               	btfss	status,2,c
 27975  006AC8  D008               	goto	l17081
 27976                           
 27977                           ; BSR set to: 1
 27978  006ACA  0100               	movlb	0	; () banked
 27979  006ACC  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 27980  006ACE  A4D8               	btfss	status,2,c
 27981  006AD0  D004               	goto	l17081
 27982                           
 27983                           ; BSR set to: 0
 27984                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 27985  006AD2  0E00               	movlw	0
 27986  006AD4  0101               	movlb	1	; () banked
 27987  006AD6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27988                           
 27989                           ;inputs_MC50.c: 727:             }
 27990  006AD8  0012               	return	
 27991  006ADA                     l17081:
 27992  006ADA  0101               	movlb	1	; () banked
 27993  006ADC  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27994  006ADE  B4D8               	btfsc	status,2,c
 27995  006AE0  D004               	goto	u19910
 27996                           
 27997                           ; BSR set to: 1
 27998  006AE2  0E02               	movlw	2
 27999  006AE4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28000  006AE6  A4D8               	btfss	status,2,c
 28001  006AE8  D004               	goto	u19920
 28002  006AEA                     u19910:
 28003                           
 28004                           ; BSR set to: 1
 28005  006AEA  0100               	movlb	0	; () banked
 28006  006AEC  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 28007  006AEE  B4D8               	btfsc	status,2,c
 28008  006AF0  D004               	goto	u19930
 28009  006AF2                     u19920:
 28010  006AF2  0100               	movlb	0	; () banked
 28011  006AF4  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28012  006AF6  A4D8               	btfss	status,2,c
 28013  006AF8  0012               	return	
 28014  006AFA                     u19930:
 28015                           
 28016                           ; BSR set to: 0
 28017                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 28018  006AFA  0E00               	movlw	0
 28019  006AFC  0101               	movlb	1	; () banked
 28020  006AFE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28021  006B00  0012               	return	
 28022  006B02                     __end_of_ControlInputs:
 28023                           	callstack 0
 28024                           
 28025 ;; *************** function _ControlCurrent *****************
 28026 ;; Defined at:
 28027 ;;		line 342 in file "controlCurrent_MC50.c"
 28028 ;; Parameters:    Size  Location     Type
 28029 ;;		None
 28030 ;; Auto vars:     Size  Location     Type
 28031 ;;		None
 28032 ;; Return value:  Size  Location     Type
 28033 ;;                  1    wreg      void 
 28034 ;; Registers used:
 28035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28036 ;; Tracked objects:
 28037 ;;		On entry : 3E/1
 28038 ;;		On exit  : 3E/0
 28039 ;;		Unchanged: 0/0
 28040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28045 ;;Total ram usage:        4 bytes
 28046 ;; Hardware stack levels used: 1
 28047 ;; Hardware stack levels required when called: 6
 28048 ;; This function calls:
 28049 ;;		_GetMotorPower
 28050 ;;		_getCurrentComparator
 28051 ;;		_refreshADCZeroOffset
 28052 ;;		_refreshCurrent
 28053 ;; This function is called by:
 28054 ;;		_main
 28055 ;; This function uses a non-reentrant model
 28056 ;;
 28057                           
 28058                           	psect	text119
 28059  006398                     __ptext119:
 28060                           	callstack 0
 28061  006398                     _ControlCurrent:
 28062                           	callstack 24
 28063                           
 28064                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 28065                           
 28066                           ;incstack = 0
 28067  006398  EC54  F046         	call	_refreshCurrent	;wreg free
 28068                           
 28069                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 28070  00639C  EC14  F037         	call	_refreshADCZeroOffset	;wreg free
 28071                           
 28072                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 28073  0063A0  ECD6  F039         	call	_GetMotorPower	;wreg free
 28074  0063A4  6E23               	movwf	??_ControlCurrent^0,c
 28075  0063A6  5023               	movf	??_ControlCurrent^0,w,c
 28076  0063A8  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 28077  0063AA  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 28078                           
 28079                           ; BSR set to: 1
 28080                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 28081  0063AC  ECE0  F02D         	call	_getCurrentComparator	;wreg free
 28082  0063B0  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 28083  0063B4  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 28084  0063B8  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 28085  0063BC  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 28086                           
 28087                           ; BSR set to: 1
 28088                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 28089  0063C0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28090  0063C2  A4D8               	btfss	status,2,c
 28091  0063C4  D00F               	goto	l23167
 28092                           
 28093                           ; BSR set to: 1
 28094                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 28095  0063C6  0E00               	movlw	0
 28096  0063C8  0100               	movlb	0	; () banked
 28097  0063CA  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28098                           
 28099                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 28100  0063CC  0E00               	movlw	0
 28101  0063CE  0101               	movlb	1	; () banked
 28102  0063D0  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28103                           
 28104                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 28105  0063D2  0E00               	movlw	0
 28106  0063D4  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28107                           
 28108                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 28109  0063D6  0E00               	movlw	0
 28110  0063D8  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28111                           
 28112                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 28113  0063DA  0E00               	movlw	0
 28114  0063DC  6FD4               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28115  0063DE  0E14               	movlw	20
 28116  0063E0  6FD3               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28117                           
 28118                           ;controlCurrent_MC50.c: 365:     }
 28119  0063E2  0012               	return	
 28120  0063E4                     l23167:
 28121                           
 28122                           ; BSR set to: 1
 28123  0063E4  517B               	movf	_powerControl_st& (0+255),w,b
 28124  0063E6  A4D8               	btfss	status,2,c
 28125  0063E8  D05D               	goto	l23201
 28126                           
 28127                           ; BSR set to: 1
 28128                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 28129  0063EA  0E00               	movlw	0
 28130  0063EC  6FD4               	movwf	(_ts_system+57)& (0+255),b	;volatile
 28131  0063EE  0E14               	movlw	20
 28132  0063F0  6FD3               	movwf	(_ts_system+56)& (0+255),b	;volatile
 28133                           
 28134                           ; BSR set to: 1
 28135                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 28136  0063F2  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 28137  0063F4  6E23               	movwf	??_ControlCurrent^0,c
 28138  0063F6  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 28139  0063F8  6E24               	movwf	(??_ControlCurrent+1)^0,c
 28140  0063FA  6A25               	clrf	(??_ControlCurrent+2)^0,c
 28141  0063FC  6A26               	clrf	(??_ControlCurrent+3)^0,c
 28142  0063FE  5023               	movf	??_ControlCurrent^0,w,c
 28143  006400  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28144  006402  5024               	movf	(??_ControlCurrent+1)^0,w,c
 28145  006404  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28146  006406  5025               	movf	(??_ControlCurrent+2)^0,w,c
 28147  006408  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28148  00640A  5026               	movf	(??_ControlCurrent+3)^0,w,c
 28149  00640C  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28150  00640E  B0D8               	btfsc	status,0,c
 28151  006410  D03E               	goto	l23199
 28152                           
 28153                           ; BSR set to: 1
 28154  006412  BFB6               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28155  006414  D005               	goto	u28020
 28156  006416  51B6               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28157  006418  E13A               	bnz	l23199
 28158  00641A  05B5               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28159  00641C  B0D8               	btfsc	status,0,c
 28160  00641E  D037               	goto	l23199
 28161  006420                     u28020:
 28162                           
 28163                           ; BSR set to: 1
 28164  006420  0100               	movlb	0	; () banked
 28165  006422  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 28166  006424  B4D8               	btfsc	status,2,c
 28167  006426  D033               	goto	l23199
 28168                           
 28169                           ; BSR set to: 0
 28170  006428  0101               	movlb	1	; () banked
 28171  00642A  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28172  00642C  D005               	goto	u28040
 28173  00642E  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28174  006430  E12E               	bnz	l23199
 28175  006432  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28176  006434  B0D8               	btfsc	status,0,c
 28177  006436  D02B               	goto	l23199
 28178  006438                     u28040:
 28179                           
 28180                           ; BSR set to: 1
 28181                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 28182  006438  0100               	movlb	0	; () banked
 28183  00643A  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 28184  00643C  B4D8               	btfsc	status,2,c
 28185  00643E  D00B               	goto	l23185
 28186                           
 28187                           ; BSR set to: 0
 28188                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 28189  006440  0101               	movlb	1	; () banked
 28190  006442  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 28191  006444  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 28192  006446  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 28193  006448  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 28194  00644A  B0D8               	btfsc	status,0,c
 28195  00644C  D004               	goto	l23185
 28196                           
 28197                           ; BSR set to: 1
 28198                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 28199  00644E  0E00               	movlw	0
 28200  006450  0100               	movlb	0	; () banked
 28201  006452  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28202                           
 28203                           ;controlCurrent_MC50.c: 384:                  }
 28204  006454  D002               	goto	l23187
 28205  006456                     l23185:
 28206                           
 28207                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 28208  006456  0100               	movlb	0	; () banked
 28209  006458  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28210  00645A                     l23187:
 28211                           
 28212                           ; BSR set to: 0
 28213                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 28214  00645A  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 28215  00645E  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 28219                           
 28220                           ;controlCurrent_MC50.c: 390:              }
 28221  006462  0101               	movlb	1	; () banked
 28222  006464  BFCA               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28223  006466  D005               	goto	u28070
 28224  006468  51CA               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28225  00646A  E14F               	bnz	l1405
 28226  00646C  05C9               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28227  00646E  B0D8               	btfsc	status,0,c
 28228  006470  0012               	return	
 28229  006472                     u28070:
 28230                           
 28231                           ; BSR set to: 1
 28232  006472  0E01               	movlw	1
 28233  006474  0100               	movlb	0	; () banked
 28234  006476  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28235  006478  0012               	return	
 28236                           
 28237                           ; BSR set to: 0
 28238                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 28239  00647A  0E00               	movlw	0
 28240  00647C  0101               	movlb	1	; () banked
 28241  00647E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28242                           
 28243                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28244  006480  0E00               	movlw	0
 28245  006482  6FC6               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28246  006484  0EC8               	movlw	200
 28247  006486  6FC5               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28248                           
 28249                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 28250  006488  0E01               	movlw	1
 28251  00648A  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28252  00648C  0012               	return	
 28253  00648E                     l23199:
 28254                           
 28255                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 28256  00648E  0E00               	movlw	0
 28257  006490  0100               	movlb	0	; () banked
 28258  006492  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28259                           
 28260                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 28261  006494  0E00               	movlw	0
 28262  006496  0101               	movlb	1	; () banked
 28263  006498  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28264                           
 28265                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 28266  00649A  0E00               	movlw	0
 28267  00649C  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28268                           
 28269                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 28270  00649E  0E00               	movlw	0
 28271  0064A0  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28272  0064A2  0012               	return	
 28273  0064A4                     l23201:
 28274                           
 28275                           ; BSR set to: 1
 28276                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 28277  0064A4  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28278  0064A6  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 28279  0064A8  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28280  0064AA  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 28281  0064AC  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28282  0064AE  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 28283  0064B0  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28284  0064B2  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 28285  0064B4  B0D8               	btfsc	status,0,c
 28286  0064B6  D7EB               	goto	l23199
 28287                           
 28288                           ; BSR set to: 1
 28289  0064B8  BFB6               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28290  0064BA  D005               	goto	u28100
 28291  0064BC  51B6               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28292  0064BE  E1E7               	bnz	l23199
 28293  0064C0  05B5               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28294  0064C2  B0D8               	btfsc	status,0,c
 28295  0064C4  D7E4               	goto	l23199
 28296  0064C6                     u28100:
 28297                           
 28298                           ; BSR set to: 1
 28299  0064C6  BFD4               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 28300  0064C8  D005               	goto	u28110
 28301  0064CA  51D4               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 28302  0064CC  E1E0               	bnz	l23199
 28303  0064CE  05D3               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 28304  0064D0  B0D8               	btfsc	status,0,c
 28305  0064D2  D7DD               	goto	l23199
 28306  0064D4                     u28110:
 28307                           
 28308                           ; BSR set to: 1
 28309  0064D4  0100               	movlb	0	; () banked
 28310  0064D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 28311  0064D8  B4D8               	btfsc	status,2,c
 28312  0064DA  D7D9               	goto	l23199
 28313                           
 28314                           ; BSR set to: 0
 28315                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 28316  0064DC  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28317                           
 28318                           ; BSR set to: 0
 28319                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 28320  0064DE  0101               	movlb	1	; () banked
 28321  0064E0  BFCA               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28322  0064E2  D005               	goto	u28130
 28323  0064E4  51CA               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28324  0064E6  E111               	bnz	l1405
 28325  0064E8  05C9               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28326  0064EA  B0D8               	btfsc	status,0,c
 28327  0064EC  0012               	return	
 28328  0064EE                     u28130:
 28329                           
 28330                           ; BSR set to: 1
 28331  0064EE  0E02               	movlw	2
 28332  0064F0  0100               	movlb	0	; () banked
 28333  0064F2  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28334  0064F4  0012               	return	
 28335                           
 28336                           ; BSR set to: 0
 28337                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 28338  0064F6  0E00               	movlw	0
 28339  0064F8  0101               	movlb	1	; () banked
 28340  0064FA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28341                           
 28342                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28343  0064FC  0E00               	movlw	0
 28344  0064FE  6FC6               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28345  006500  0EC8               	movlw	200
 28346  006502  6FC5               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28347                           
 28348                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 28349  006504  0E01               	movlw	1
 28350  006506  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28351  006508  0012               	return	
 28352  00650A                     l1405:
 28353  00650A  0012               	return		;funcret
 28354  00650C                     __end_of_ControlCurrent:
 28355                           	callstack 0
 28356                           
 28357 ;; *************** function _refreshCurrent *****************
 28358 ;; Defined at:
 28359 ;;		line 233 in file "controlCurrent_MC50.c"
 28360 ;; Parameters:    Size  Location     Type
 28361 ;;		None
 28362 ;; Auto vars:     Size  Location     Type
 28363 ;;		None
 28364 ;; Return value:  Size  Location     Type
 28365 ;;                  1    wreg      void 
 28366 ;; Registers used:
 28367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28368 ;; Tracked objects:
 28369 ;;		On entry : 3E/1
 28370 ;;		On exit  : 3F/0
 28371 ;;		Unchanged: 0/0
 28372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28377 ;;Total ram usage:        0 bytes
 28378 ;; Hardware stack levels used: 1
 28379 ;; Hardware stack levels required when called: 5
 28380 ;; This function calls:
 28381 ;;		_saveEnergyADCHist
 28382 ;;		_sumEnergyADC
 28383 ;;		_sumHIST
 28384 ;; This function is called by:
 28385 ;;		_ControlCurrent
 28386 ;; This function uses a non-reentrant model
 28387 ;;
 28388                           
 28389                           	psect	text120
 28390  008CA8                     __ptext120:
 28391                           	callstack 0
 28392  008CA8                     _refreshCurrent:
 28393                           	callstack 24
 28394                           
 28395                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 28396                           
 28397                           ;incstack = 0
 28398  008CA8  0100               	movlb	0	; () banked
 28399  008CAA  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 28400  008CAC  A4D8               	btfss	status,2,c
 28401  008CAE  D008               	goto	l14771
 28402                           
 28403                           ; BSR set to: 0
 28404  008CB0  0101               	movlb	1	; () banked
 28405  008CB2  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 28406  008CB4  D005               	goto	l14771
 28407  008CB6  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 28408  008CB8  E109               	bnz	l1372
 28409  008CBA  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 28410  008CBC  B0D8               	btfsc	status,0,c
 28411  008CBE  D006               	goto	l1372
 28412  008CC0                     l14771:
 28413                           
 28414                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 28415  008CC0  ECBC  F03D         	call	_sumEnergyADC	;wreg free
 28416  008CC4  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 28417  008CC8  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 28418  008CCC                     l1372:
 28419                           
 28420                           ; BSR set to: 1
 28421                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 28422  008CCC  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 28423  008CD0  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 28424  008CD4  EC76  F049         	call	_saveEnergyADCHist	;wreg free
 28425                           
 28426                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 28427  008CD8  EC11  F038         	call	_sumHIST	;wreg free
 28428  008CDC  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 28429  008CE0  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 28430  008CE4  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 28431  008CE8  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 28432                           
 28433                           ; BSR set to: 0
 28434  008CEC  0012               	return		;funcret
 28435  008CEE                     __end_of_refreshCurrent:
 28436                           	callstack 0
 28437                           
 28438 ;; *************** function _sumHIST *****************
 28439 ;; Defined at:
 28440 ;;		line 199 in file "controlCurrent_MC50.c"
 28441 ;; Parameters:    Size  Location     Type
 28442 ;;		None
 28443 ;; Auto vars:     Size  Location     Type
 28444 ;;  sumH            4   27[COMRAM] unsigned long 
 28445 ;;  min             2   25[COMRAM] unsigned int 
 28446 ;;  max             2   23[COMRAM] unsigned int 
 28447 ;;  i               1   31[COMRAM] unsigned char 
 28448 ;; Return value:  Size  Location     Type
 28449 ;;                  4   15[COMRAM] unsigned long 
 28450 ;; Registers used:
 28451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28452 ;; Tracked objects:
 28453 ;;		On entry : 3F/0
 28454 ;;		On exit  : 3F/0
 28455 ;;		Unchanged: 3F/0
 28456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28458 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28460 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28461 ;;Total ram usage:       17 bytes
 28462 ;; Hardware stack levels used: 1
 28463 ;; Hardware stack levels required when called: 4
 28464 ;; This function calls:
 28465 ;;		Nothing
 28466 ;; This function is called by:
 28467 ;;		_refreshCurrent
 28468 ;; This function uses a non-reentrant model
 28469 ;;
 28470                           
 28471                           	psect	text121
 28472  007022                     __ptext121:
 28473                           	callstack 0
 28474  007022                     _sumHIST:
 28475                           	callstack 24
 28476                           
 28477                           ; BSR set to: 0
 28478                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 28479                           
 28480                           ; BSR set to: 0
 28481                           ;incstack = 0
 28482  007022  0E00               	movlw	0
 28483  007024  6E1C               	movwf	sumHIST@sumH^0,c
 28484  007026  0E00               	movlw	0
 28485  007028  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28486  00702A  0E00               	movlw	0
 28487  00702C  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28488  00702E  0E00               	movlw	0
 28489  007030  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28490                           
 28491                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 28492  007032  0E00               	movlw	0
 28493  007034  6E19               	movwf	(sumHIST@max+1)^0,c
 28494  007036  0E00               	movlw	0
 28495  007038  6E18               	movwf	sumHIST@max^0,c
 28496                           
 28497                           ; BSR set to: 0
 28498                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 28499  00703A  681A               	setf	sumHIST@min^0,c
 28500  00703C  681B               	setf	(sumHIST@min+1)^0,c
 28501                           
 28502                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 28503  00703E  0E00               	movlw	0
 28504  007040  6E20               	movwf	sumHIST@i^0,c
 28505  007042                     l12923:
 28506                           
 28507                           ; BSR set to: 0
 28508                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 28509  007042  5020               	movf	sumHIST@i^0,w,c
 28510  007044  0D02               	mullw	2
 28511  007046  0E60               	movlw	low _SumEnergyADCHist_array
 28512  007048  24F3               	addwf	243,w,c
 28513  00704A  6ED9               	movwf	fsr2l,c
 28514  00704C  0E02               	movlw	high _SumEnergyADCHist_array
 28515  00704E  20F4               	addwfc	prodh,w,c
 28516  007050  6EDA               	movwf	fsr2h,c
 28517  007052  CFDE F014          	movff	postinc2,??_sumHIST
 28518  007056  CFDD F015          	movff	postdec2,??_sumHIST+1
 28519  00705A  5014               	movf	??_sumHIST^0,w,c
 28520  00705C  241C               	addwf	sumHIST@sumH^0,w,c
 28521  00705E  6E1C               	movwf	sumHIST@sumH^0,c
 28522  007060  5015               	movf	(??_sumHIST+1)^0,w,c
 28523  007062  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 28524  007064  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28525  007066  0E00               	movlw	0
 28526  007068  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 28527  00706A  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28528  00706C  0E00               	movlw	0
 28529  00706E  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 28530  007070  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28531                           
 28532                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 28533  007072  5020               	movf	sumHIST@i^0,w,c
 28534  007074  0D02               	mullw	2
 28535  007076  0E60               	movlw	low _SumEnergyADCHist_array
 28536  007078  24F3               	addwf	243,w,c
 28537  00707A  6ED9               	movwf	fsr2l,c
 28538  00707C  0E02               	movlw	high _SumEnergyADCHist_array
 28539  00707E  20F4               	addwfc	prodh,w,c
 28540  007080  6EDA               	movwf	fsr2h,c
 28541  007082  50DE               	movf	postinc2,w,c
 28542  007084  5C18               	subwf	sumHIST@max^0,w,c
 28543  007086  50DE               	movf	postinc2,w,c
 28544  007088  5819               	subwfb	(sumHIST@max+1)^0,w,c
 28545  00708A  B0D8               	btfsc	status,0,c
 28546  00708C  D00C               	goto	l1366
 28547                           
 28548                           ; BSR set to: 0
 28549                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 28550  00708E  5020               	movf	sumHIST@i^0,w,c
 28551  007090  0D02               	mullw	2
 28552  007092  0E60               	movlw	low _SumEnergyADCHist_array
 28553  007094  24F3               	addwf	243,w,c
 28554  007096  6ED9               	movwf	fsr2l,c
 28555  007098  0E02               	movlw	high _SumEnergyADCHist_array
 28556  00709A  20F4               	addwfc	prodh,w,c
 28557  00709C  6EDA               	movwf	fsr2h,c
 28558  00709E  CFDE F018          	movff	postinc2,sumHIST@max
 28559  0070A2  CFDD F019          	movff	postdec2,sumHIST@max+1
 28560  0070A6                     l1366:
 28561                           
 28562                           ; BSR set to: 0
 28563                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 28564  0070A6  5020               	movf	sumHIST@i^0,w,c
 28565  0070A8  0D02               	mullw	2
 28566  0070AA  0E60               	movlw	low _SumEnergyADCHist_array
 28567  0070AC  24F3               	addwf	243,w,c
 28568  0070AE  6ED9               	movwf	fsr2l,c
 28569  0070B0  0E02               	movlw	high _SumEnergyADCHist_array
 28570  0070B2  20F4               	addwfc	prodh,w,c
 28571  0070B4  6EDA               	movwf	fsr2h,c
 28572  0070B6  501A               	movf	sumHIST@min^0,w,c
 28573  0070B8  5CDE               	subwf	postinc2,w,c
 28574  0070BA  501B               	movf	(sumHIST@min+1)^0,w,c
 28575  0070BC  58DE               	subwfb	postinc2,w,c
 28576  0070BE  B0D8               	btfsc	status,0,c
 28577  0070C0  D00C               	goto	l12929
 28578                           
 28579                           ; BSR set to: 0
 28580                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 28581  0070C2  5020               	movf	sumHIST@i^0,w,c
 28582  0070C4  0D02               	mullw	2
 28583  0070C6  0E60               	movlw	low _SumEnergyADCHist_array
 28584  0070C8  24F3               	addwf	243,w,c
 28585  0070CA  6ED9               	movwf	fsr2l,c
 28586  0070CC  0E02               	movlw	high _SumEnergyADCHist_array
 28587  0070CE  20F4               	addwfc	prodh,w,c
 28588  0070D0  6EDA               	movwf	fsr2h,c
 28589  0070D2  CFDE F01A          	movff	postinc2,sumHIST@min
 28590  0070D6  CFDD F01B          	movff	postdec2,sumHIST@min+1
 28591  0070DA                     l12929:
 28592                           
 28593                           ; BSR set to: 0
 28594                           ;controlCurrent_MC50.c: 222:     }
 28595  0070DA  2A20               	incf	sumHIST@i^0,f,c
 28596                           
 28597                           ; BSR set to: 0
 28598  0070DC  0E09               	movlw	9
 28599  0070DE  6420               	cpfsgt	sumHIST@i^0,c
 28600  0070E0  D7B0               	goto	l12923
 28601                           
 28602                           ; BSR set to: 0
 28603                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 28604  0070E2  501A               	movf	sumHIST@min^0,w,c
 28605  0070E4  2418               	addwf	sumHIST@max^0,w,c
 28606  0070E6  6E14               	movwf	??_sumHIST^0,c
 28607  0070E8  501B               	movf	(sumHIST@min+1)^0,w,c
 28608  0070EA  2019               	addwfc	(sumHIST@max+1)^0,w,c
 28609  0070EC  6E15               	movwf	(??_sumHIST+1)^0,c
 28610  0070EE  6A16               	clrf	(??_sumHIST+2)^0,c
 28611  0070F0  6A17               	clrf	(??_sumHIST+3)^0,c
 28612  0070F2  5014               	movf	??_sumHIST^0,w,c
 28613  0070F4  5C1C               	subwf	sumHIST@sumH^0,w,c
 28614  0070F6  6E1C               	movwf	sumHIST@sumH^0,c
 28615  0070F8  5015               	movf	(??_sumHIST+1)^0,w,c
 28616  0070FA  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 28617  0070FC  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28618  0070FE  5016               	movf	(??_sumHIST+2)^0,w,c
 28619  007100  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 28620  007102  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28621  007104  5017               	movf	(??_sumHIST+3)^0,w,c
 28622  007106  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 28623  007108  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28624                           
 28625                           ; BSR set to: 0
 28626                           ;controlCurrent_MC50.c: 226:     return sumH;
 28627  00710A  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 28628  00710E  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 28629  007112  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 28630  007116  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 28631                           
 28632                           ; BSR set to: 0
 28633  00711A  0012               	return		;funcret
 28634  00711C                     __end_of_sumHIST:
 28635                           	callstack 0
 28636                           
 28637 ;; *************** function _sumEnergyADC *****************
 28638 ;; Defined at:
 28639 ;;		line 59 in file "controlCurrent_MC50.c"
 28640 ;; Parameters:    Size  Location     Type
 28641 ;;		None
 28642 ;; Auto vars:     Size  Location     Type
 28643 ;;  auxValue        2   21[COMRAM] unsigned int 
 28644 ;;  sumE            2   19[COMRAM] unsigned int 
 28645 ;;  i               1   23[COMRAM] unsigned char 
 28646 ;; Return value:  Size  Location     Type
 28647 ;;                  2   15[COMRAM] unsigned int 
 28648 ;; Registers used:
 28649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28650 ;; Tracked objects:
 28651 ;;		On entry : 3E/0
 28652 ;;		On exit  : 3F/1
 28653 ;;		Unchanged: 0/0
 28654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28656 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28658 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28659 ;;Total ram usage:        9 bytes
 28660 ;; Hardware stack levels used: 1
 28661 ;; Hardware stack levels required when called: 4
 28662 ;; This function calls:
 28663 ;;		Nothing
 28664 ;; This function is called by:
 28665 ;;		_refreshCurrent
 28666 ;; This function uses a non-reentrant model
 28667 ;;
 28668                           
 28669                           	psect	text122
 28670  007B78                     __ptext122:
 28671                           	callstack 0
 28672  007B78                     _sumEnergyADC:
 28673                           	callstack 24
 28674                           
 28675                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 28676                           
 28677                           ; BSR set to: 0
 28678                           ;incstack = 0
 28679  007B78  0E00               	movlw	0
 28680  007B7A  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 28681  007B7C  0E00               	movlw	0
 28682  007B7E  6E14               	movwf	sumEnergyADC@sumE^0,c
 28683                           
 28684                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 28685  007B80  0E00               	movlw	0
 28686  007B82  6E18               	movwf	sumEnergyADC@i^0,c
 28687  007B84                     l12895:
 28688                           
 28689                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 28690  007B84  5018               	movf	sumEnergyADC@i^0,w,c
 28691  007B86  0D02               	mullw	2
 28692  007B88  0E00               	movlw	low _ADC_array
 28693  007B8A  24F3               	addwf	243,w,c
 28694  007B8C  6ED9               	movwf	fsr2l,c
 28695  007B8E  0E02               	movlw	high _ADC_array
 28696  007B90  20F4               	addwfc	prodh,w,c
 28697  007B92  6EDA               	movwf	fsr2h,c
 28698  007B94  50DE               	movf	postinc2,w,c
 28699  007B96  0101               	movlb	1	; () banked
 28700  007B98  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28701  007B9A  50DE               	movf	postinc2,w,c
 28702  007B9C  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28703  007B9E  B0D8               	btfsc	status,0,c
 28704  007BA0  D012               	goto	l12899
 28705                           
 28706                           ; BSR set to: 1
 28707                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 28708  007BA2  5018               	movf	sumEnergyADC@i^0,w,c
 28709  007BA4  0D02               	mullw	2
 28710  007BA6  0E00               	movlw	low _ADC_array
 28711  007BA8  24F3               	addwf	243,w,c
 28712  007BAA  6ED9               	movwf	fsr2l,c
 28713  007BAC  0E02               	movlw	high _ADC_array
 28714  007BAE  20F4               	addwfc	prodh,w,c
 28715  007BB0  6EDA               	movwf	fsr2h,c
 28716  007BB2  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28717  007BB6  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28718  007BBA  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 28719  007BBC  5C12               	subwf	??_sumEnergyADC^0,w,c
 28720  007BBE  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28721  007BC0  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 28722  007BC2  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 28723  007BC4  D011               	goto	L103
 28724  007BC6                     l12899:
 28725                           
 28726                           ; BSR set to: 1
 28727                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 28728  007BC6  5018               	movf	sumEnergyADC@i^0,w,c
 28729  007BC8  0D02               	mullw	2
 28730  007BCA  0E00               	movlw	low _ADC_array
 28731  007BCC  24F3               	addwf	243,w,c
 28732  007BCE  6ED9               	movwf	fsr2l,c
 28733  007BD0  0E02               	movlw	high _ADC_array
 28734  007BD2  20F4               	addwfc	prodh,w,c
 28735  007BD4  6EDA               	movwf	fsr2h,c
 28736  007BD6  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28737  007BDA  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28738  007BDE  5012               	movf	??_sumEnergyADC^0,w,c
 28739  007BE0  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28740  007BE2  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28741  007BE4  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 28742  007BE6  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28743  007BE8                     L103:
 28744  007BE8  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 28745                           
 28746                           ; BSR set to: 1
 28747                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 28748  007BEA  5016               	movf	sumEnergyADC@auxValue^0,w,c
 28749  007BEC  2614               	addwf	sumEnergyADC@sumE^0,f,c
 28750  007BEE  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 28751  007BF0  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 28752                           
 28753                           ; BSR set to: 1
 28754                           ;controlCurrent_MC50.c: 94:     }
 28755  007BF2  2A18               	incf	sumEnergyADC@i^0,f,c
 28756                           
 28757                           ; BSR set to: 1
 28758  007BF4  0E1D               	movlw	29
 28759  007BF6  6418               	cpfsgt	sumEnergyADC@i^0,c
 28760  007BF8  D7C5               	goto	l12895
 28761                           
 28762                           ; BSR set to: 1
 28763                           ;controlCurrent_MC50.c: 96:     return sumE;
 28764  007BFA  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 28765  007BFE  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 28766                           
 28767                           ; BSR set to: 1
 28768  007C02  0012               	return		;funcret
 28769  007C04                     __end_of_sumEnergyADC:
 28770                           	callstack 0
 28771                           
 28772 ;; *************** function _saveEnergyADCHist *****************
 28773 ;; Defined at:
 28774 ;;		line 182 in file "controlCurrent_MC50.c"
 28775 ;; Parameters:    Size  Location     Type
 28776 ;;  valueToSave     2   15[COMRAM] unsigned int 
 28777 ;; Auto vars:     Size  Location     Type
 28778 ;;		None
 28779 ;; Return value:  Size  Location     Type
 28780 ;;                  1    wreg      void 
 28781 ;; Registers used:
 28782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28783 ;; Tracked objects:
 28784 ;;		On entry : 3F/1
 28785 ;;		On exit  : 3F/0
 28786 ;;		Unchanged: 0/0
 28787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28792 ;;Total ram usage:        2 bytes
 28793 ;; Hardware stack levels used: 1
 28794 ;; Hardware stack levels required when called: 4
 28795 ;; This function calls:
 28796 ;;		Nothing
 28797 ;; This function is called by:
 28798 ;;		_refreshCurrent
 28799 ;; This function uses a non-reentrant model
 28800 ;;
 28801                           
 28802                           	psect	text123
 28803  0092EC                     __ptext123:
 28804                           	callstack 0
 28805  0092EC                     _saveEnergyADCHist:
 28806                           	callstack 24
 28807                           
 28808                           ; BSR set to: 1
 28809                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 28810                           
 28811                           ; BSR set to: 1
 28812                           ;incstack = 0
 28813  0092EC  0E09               	movlw	9
 28814  0092EE  0100               	movlb	0	; () banked
 28815  0092F0  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28816  0092F2  D002               	goto	l12911
 28817                           
 28818                           ; BSR set to: 0
 28819                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 28820  0092F4  0E00               	movlw	0
 28821  0092F6  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28822  0092F8                     l12911:
 28823                           
 28824                           ; BSR set to: 0
 28825                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 28826  0092F8  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 28827  0092FA  0D02               	mullw	2
 28828  0092FC  0E60               	movlw	low _SumEnergyADCHist_array
 28829  0092FE  24F3               	addwf	243,w,c
 28830  009300  6ED9               	movwf	fsr2l,c
 28831  009302  0E02               	movlw	high _SumEnergyADCHist_array
 28832  009304  20F4               	addwfc	prodh,w,c
 28833  009306  6EDA               	movwf	fsr2h,c
 28834  009308  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 28835  00930C  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 28836                           
 28837                           ; BSR set to: 0
 28838                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 28839  009310  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 28840                           
 28841                           ; BSR set to: 0
 28842  009312  0012               	return		;funcret
 28843  009314                     __end_of_saveEnergyADCHist:
 28844                           	callstack 0
 28845                           
 28846 ;; *************** function _refreshADCZeroOffset *****************
 28847 ;; Defined at:
 28848 ;;		line 103 in file "controlCurrent_MC50.c"
 28849 ;; Parameters:    Size  Location     Type
 28850 ;;		None
 28851 ;; Auto vars:     Size  Location     Type
 28852 ;;  media           2   23[COMRAM] unsigned int 
 28853 ;;  i               1   22[COMRAM] unsigned char 
 28854 ;; Return value:  Size  Location     Type
 28855 ;;                  1    wreg      void 
 28856 ;; Registers used:
 28857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28858 ;; Tracked objects:
 28859 ;;		On entry : 3F/0
 28860 ;;		On exit  : 3E/0
 28861 ;;		Unchanged: 0/0
 28862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28864 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28866 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28867 ;;Total ram usage:        3 bytes
 28868 ;; Hardware stack levels used: 1
 28869 ;; Hardware stack levels required when called: 5
 28870 ;; This function calls:
 28871 ;;		___lwdiv
 28872 ;; This function is called by:
 28873 ;;		_ControlCurrent
 28874 ;; This function uses a non-reentrant model
 28875 ;;
 28876                           
 28877                           	psect	text124
 28878  006E28                     __ptext124:
 28879                           	callstack 0
 28880  006E28                     _refreshADCZeroOffset:
 28881                           	callstack 24
 28882                           
 28883                           ; BSR set to: 0
 28884                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 28885                           
 28886                           ; BSR set to: 0
 28887                           ;incstack = 0
 28888  006E28  0E00               	movlw	0
 28889  006E2A  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28890  006E2C  0E00               	movlw	0
 28891  006E2E  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28892                           
 28893                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 28894  006E30  0101               	movlb	1	; () banked
 28895  006E32  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28896  006E34  A4D8               	btfss	status,2,c
 28897  006E36  0012               	return	
 28898                           
 28899                           ; BSR set to: 1
 28900                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 28901  006E38  BFDA               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 28902  006E3A  D005               	goto	u15020
 28903  006E3C  51DA               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 28904  006E3E  E172               	bnz	l1357
 28905  006E40  05D9               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 28906  006E42  B0D8               	btfsc	status,0,c
 28907  006E44  0012               	return	
 28908  006E46                     u15020:
 28909                           
 28910                           ; BSR set to: 1
 28911                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 28912  006E46  0E00               	movlw	0
 28913  006E48  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
 28914  006E4A  0E14               	movlw	20
 28915  006E4C  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
 28916                           
 28917                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 28918  006E4E  0E00               	movlw	0
 28919  006E50  6E17               	movwf	refreshADCZeroOffset@i^0,c
 28920  006E52                     l14723:
 28921                           
 28922                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 28923  006E52  5017               	movf	refreshADCZeroOffset@i^0,w,c
 28924  006E54  0D02               	mullw	2
 28925  006E56  0E00               	movlw	low _ADC_array
 28926  006E58  24F3               	addwf	243,w,c
 28927  006E5A  6ED9               	movwf	fsr2l,c
 28928  006E5C  0E02               	movlw	high _ADC_array
 28929  006E5E  20F4               	addwfc	prodh,w,c
 28930  006E60  6EDA               	movwf	fsr2h,c
 28931  006E62  50DE               	movf	postinc2,w,c
 28932  006E64  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28933  006E66  50DD               	movf	postdec2,w,c
 28934  006E68  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28935                           
 28936                           ;controlCurrent_MC50.c: 128:             }
 28937  006E6A  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28938  006E6C  0E1D               	movlw	29
 28939  006E6E  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28940  006E70  D7F0               	goto	l14723
 28941                           
 28942                           ;controlCurrent_MC50.c: 130:             media = media/30;
 28943  006E72  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28944  006E76  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28945  006E7A  0E00               	movlw	0
 28946  006E7C  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28947  006E7E  0E1E               	movlw	30
 28948  006E80  6E12               	movwf	___lwdiv@divisor^0,c
 28949  006E82  EC1D  F045         	call	___lwdiv	;wreg free
 28950  006E86  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28951  006E8A  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28952                           
 28953                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 28954  006E8E  0EEB               	movlw	235
 28955  006E90  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28956  006E92  0E01               	movlw	1
 28957  006E94  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28958  006E96  A0D8               	btfss	status,0,c
 28959  006E98  D006               	goto	l14737
 28960  006E9A  0E12               	movlw	18
 28961  006E9C  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28962  006E9E  0E02               	movlw	2
 28963  006EA0  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28964  006EA2  A0D8               	btfss	status,0,c
 28965  006EA4  D004               	goto	l14739
 28966  006EA6                     l14737:
 28967                           
 28968                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 28969  006EA6  0E01               	movlw	1
 28970  006EA8  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28971  006EAA  0EFE               	movlw	254
 28972  006EAC  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28973  006EAE                     l14739:
 28974                           
 28975                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 28976  006EAE  0E1D               	movlw	29
 28977  006EB0  0100               	movlb	0	; () banked
 28978  006EB2  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 28979  006EB4  D002               	goto	l14743
 28980                           
 28981                           ; BSR set to: 0
 28982                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 28983  006EB6  0E00               	movlw	0
 28984  006EB8  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 28985  006EBA                     l14743:
 28986                           
 28987                           ; BSR set to: 0
 28988                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 28989  006EBA  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 28990  006EBC  0D02               	mullw	2
 28991  006EBE  0E96               	movlw	low _ADC_zero_array
 28992  006EC0  24F3               	addwf	243,w,c
 28993  006EC2  6ED9               	movwf	fsr2l,c
 28994  006EC4  0E03               	movlw	high _ADC_zero_array
 28995  006EC6  20F4               	addwfc	prodh,w,c
 28996  006EC8  6EDA               	movwf	fsr2h,c
 28997  006ECA  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 28998  006ECE  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 28999                           
 29000                           ; BSR set to: 0
 29001                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 29002  006ED2  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 29003                           
 29004                           ; BSR set to: 0
 29005                           ;controlCurrent_MC50.c: 150:             media = 0;
 29006  006ED4  0E00               	movlw	0
 29007  006ED6  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29008  006ED8  0E00               	movlw	0
 29009  006EDA  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29010                           
 29011                           ; BSR set to: 0
 29012                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 29013  006EDC  0E00               	movlw	0
 29014  006EDE  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29015  006EE0                     l14755:
 29016                           
 29017                           ; BSR set to: 0
 29018                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 29019  006EE0  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29020  006EE2  0D02               	mullw	2
 29021  006EE4  0E96               	movlw	low _ADC_zero_array
 29022  006EE6  24F3               	addwf	243,w,c
 29023  006EE8  6ED9               	movwf	fsr2l,c
 29024  006EEA  0E03               	movlw	high _ADC_zero_array
 29025  006EEC  20F4               	addwfc	prodh,w,c
 29026  006EEE  6EDA               	movwf	fsr2h,c
 29027  006EF0  50DE               	movf	postinc2,w,c
 29028  006EF2  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29029  006EF4  50DD               	movf	postdec2,w,c
 29030  006EF6  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29031                           
 29032                           ; BSR set to: 0
 29033                           ;controlCurrent_MC50.c: 159:             }
 29034  006EF8  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29035                           
 29036                           ; BSR set to: 0
 29037  006EFA  0E1D               	movlw	29
 29038  006EFC  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29039  006EFE  D7F0               	goto	l14755
 29040                           
 29041                           ; BSR set to: 0
 29042                           ;controlCurrent_MC50.c: 160:             media = media/30;
 29043  006F00  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29044  006F04  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29045  006F08  0E00               	movlw	0
 29046  006F0A  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29047  006F0C  0E1E               	movlw	30
 29048  006F0E  6E12               	movwf	___lwdiv@divisor^0,c
 29049  006F10  EC1D  F045         	call	___lwdiv	;wreg free
 29050  006F14  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29051  006F18  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29052                           
 29053                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 29054  006F1C  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 29055  006F20  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 29056  006F24                     l1357:
 29057  006F24  0012               	return		;funcret
 29058  006F26                     __end_of_refreshADCZeroOffset:
 29059                           	callstack 0
 29060                           
 29061 ;; *************** function ___lwdiv *****************
 29062 ;; Defined at:
 29063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 29064 ;; Parameters:    Size  Location     Type
 29065 ;;  dividend        2   15[COMRAM] unsigned int 
 29066 ;;  divisor         2   17[COMRAM] unsigned int 
 29067 ;; Auto vars:     Size  Location     Type
 29068 ;;  quotient        2   19[COMRAM] unsigned int 
 29069 ;;  counter         1   21[COMRAM] unsigned char 
 29070 ;; Return value:  Size  Location     Type
 29071 ;;                  2   15[COMRAM] unsigned int 
 29072 ;; Registers used:
 29073 ;;		wreg, status,2, status,0
 29074 ;; Tracked objects:
 29075 ;;		On entry : 3E/1
 29076 ;;		On exit  : 3E/0
 29077 ;;		Unchanged: 3E/0
 29078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29080 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29082 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29083 ;;Total ram usage:        7 bytes
 29084 ;; Hardware stack levels used: 1
 29085 ;; Hardware stack levels required when called: 4
 29086 ;; This function calls:
 29087 ;;		Nothing
 29088 ;; This function is called by:
 29089 ;;		_refreshADCZeroOffset
 29090 ;;		_sm_execute_menuConfiguration
 29091 ;; This function uses a non-reentrant model
 29092 ;;
 29093                           
 29094                           	psect	text125
 29095  008A3A                     __ptext125:
 29096                           	callstack 0
 29097  008A3A                     ___lwdiv:
 29098                           	callstack 24
 29099                           
 29100                           ;incstack = 0
 29101  008A3A  0E00               	movlw	0
 29102  008A3C  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 29103  008A3E  0E00               	movlw	0
 29104  008A40  6E14               	movwf	___lwdiv@quotient^0,c
 29105  008A42  5012               	movf	___lwdiv@divisor^0,w,c
 29106  008A44  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 29107  008A46  B4D8               	btfsc	status,2,c
 29108  008A48  D01C               	goto	l4219
 29109  008A4A  0E01               	movlw	1
 29110  008A4C  6E16               	movwf	___lwdiv@counter^0,c
 29111  008A4E  D004               	goto	l14203
 29112  008A50                     l14201:
 29113  008A50  90D8               	bcf	status,0,c
 29114  008A52  3612               	rlcf	___lwdiv@divisor^0,f,c
 29115  008A54  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 29116  008A56  2A16               	incf	___lwdiv@counter^0,f,c
 29117  008A58                     l14203:
 29118  008A58  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 29119  008A5A  D7FA               	goto	l14201
 29120  008A5C                     u14040:
 29121  008A5C  90D8               	bcf	status,0,c
 29122  008A5E  3614               	rlcf	___lwdiv@quotient^0,f,c
 29123  008A60  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 29124  008A62  5012               	movf	___lwdiv@divisor^0,w,c
 29125  008A64  5C10               	subwf	___lwdiv@dividend^0,w,c
 29126  008A66  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29127  008A68  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 29128  008A6A  A0D8               	btfss	status,0,c
 29129  008A6C  D005               	goto	l14213
 29130  008A6E  5012               	movf	___lwdiv@divisor^0,w,c
 29131  008A70  5E10               	subwf	___lwdiv@dividend^0,f,c
 29132  008A72  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 29133  008A74  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 29134  008A76  8014               	bsf	___lwdiv@quotient^0,0,c
 29135  008A78                     l14213:
 29136  008A78  90D8               	bcf	status,0,c
 29137  008A7A  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 29138  008A7C  3212               	rrcf	___lwdiv@divisor^0,f,c
 29139  008A7E  2E16               	decfsz	___lwdiv@counter^0,f,c
 29140  008A80  D7ED               	goto	u14040
 29141  008A82                     l4219:
 29142  008A82  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 29143  008A86  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29144  008A8A  0012               	return		;funcret
 29145  008A8C                     __end_of___lwdiv:
 29146                           	callstack 0
 29147                           
 29148 ;; *************** function _getCurrentComparator *****************
 29149 ;; Defined at:
 29150 ;;		line 264 in file "controlCurrent_MC50.c"
 29151 ;; Parameters:    Size  Location     Type
 29152 ;;		None
 29153 ;; Auto vars:     Size  Location     Type
 29154 ;;  x               1   33[COMRAM] unsigned char 
 29155 ;;  tempOffset      2   31[COMRAM] unsigned int 
 29156 ;; Return value:  Size  Location     Type
 29157 ;;                  4   21[COMRAM] unsigned long 
 29158 ;; Registers used:
 29159 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 29160 ;; Tracked objects:
 29161 ;;		On entry : 3F/1
 29162 ;;		On exit  : 3F/1
 29163 ;;		Unchanged: 0/0
 29164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29166 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29167 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29168 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29169 ;;Total ram usage:       13 bytes
 29170 ;; Hardware stack levels used: 1
 29171 ;; Hardware stack levels required when called: 5
 29172 ;; This function calls:
 29173 ;;		___wmul
 29174 ;; This function is called by:
 29175 ;;		_ControlCurrent
 29176 ;; This function uses a non-reentrant model
 29177 ;;
 29178                           
 29179                           	psect	text126
 29180  005BC0                     __ptext126:
 29181                           	callstack 0
 29182  005BC0                     _getCurrentComparator:
 29183                           	callstack 24
 29184                           
 29185                           ; BSR set to: 1
 29186                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 29187                           
 29188                           ; BSR set to: 1
 29189                           
 29190                           ;incstack = 0
 29191  005BC0  BFB2               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 29192  005BC2  D00A               	goto	l14779
 29193  005BC4  51B2               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 29194  005BC6  E103               	bnz	u15100
 29195  005BC8  05B1               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 29196  005BCA  A0D8               	btfss	status,0,c
 29197  005BCC  D005               	goto	l14779
 29198  005BCE                     u15100:
 29199                           
 29200                           ; BSR set to: 1
 29201                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 29202  005BCE  0E00               	movlw	0
 29203  005BD0  6FD6               	movwf	(_ts_system+59)& (0+255),b	;volatile
 29204  005BD2  0E14               	movlw	20
 29205  005BD4  6FD5               	movwf	(_ts_system+58)& (0+255),b	;volatile
 29206  005BD6  D007               	goto	u15110
 29207  005BD8                     l14779:
 29208                           
 29209                           ; BSR set to: 1
 29210  005BD8  BFD6               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 29211  005BDA  D009               	goto	l14783
 29212  005BDC  51D6               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 29213  005BDE  E103               	bnz	u15110
 29214  005BE0  05D5               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 29215  005BE2  A0D8               	btfss	status,0,c
 29216  005BE4  D004               	goto	l14783
 29217  005BE6                     u15110:
 29218                           
 29219                           ; BSR set to: 1
 29220                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 29221  005BE6  0E04               	movlw	4
 29222  005BE8  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29223  005BEA  0EB0               	movlw	176
 29224  005BEC  D003               	goto	L104
 29225  005BEE                     l14783:
 29226                           
 29227                           ; BSR set to: 1
 29228                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 29229  005BEE  0E00               	movlw	0
 29230  005BF0  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29231  005BF2  0E00               	movlw	0
 29232  005BF4                     L104:
 29233  005BF4  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 29234                           
 29235                           ; BSR set to: 1
 29236                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 29237  005BF6  517B               	movf	_powerControl_st& (0+255),w,b
 29238  005BF8  A4D8               	btfss	status,2,c
 29239  005BFA  D05B               	goto	l14799
 29240                           
 29241                           ; BSR set to: 1
 29242                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 29243  005BFC  0E03               	movlw	3
 29244  005BFE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29245  005C00  A4D8               	btfss	status,2,c
 29246  005C02  D005               	goto	l14789
 29247                           
 29248                           ; BSR set to: 1
 29249                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 29250  005C04  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 29251  005C08  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 29252  005C0C  D004               	goto	L105
 29253  005C0E                     l14789:
 29254                           
 29255                           ; BSR set to: 1
 29256                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 29257  005C0E  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 29258  005C12  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 29259  005C16                     L105:
 29260  005C16  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 29261  005C18  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 29262                           
 29263                           ; BSR set to: 1
 29264                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 29265  005C1A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29266  005C1C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29267  005C1E  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 29268  005C20  E104               	bnz	u15140
 29269  005C22  0E65               	movlw	101
 29270  005C24  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29271  005C26  A0D8               	btfss	status,0,c
 29272  005C28  D009               	goto	u15150
 29273  005C2A                     u15140:
 29274                           
 29275                           ; BSR set to: 1
 29276  005C2A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29277  005C2C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29278  005C2E  E106               	bnz	u15150
 29279  005C30  0EC5               	movlw	197
 29280  005C32  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29281  005C34  0E3B               	movlw	59
 29282  005C36  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29283  005C38  A0D8               	btfss	status,0,c
 29284  005C3A  D004               	goto	l1383
 29285  005C3C                     u15150:
 29286                           
 29287                           ; BSR set to: 1
 29288                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 29289  005C3C  0EC4               	movlw	196
 29290  005C3E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29291  005C40  0E3B               	movlw	59
 29292  005C42  D058               	goto	L107
 29293  005C44                     l1383:
 29294                           
 29295                           ; BSR set to: 1
 29296                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 29297  005C44  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 29298                           
 29299                           ; BSR set to: 1
 29300                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 29301  005C48  5022               	movf	getCurrentComparator@x^0,w,c
 29302  005C4A  0222               	mulwf	getCurrentComparator@x^0,c
 29303  005C4C  CFF3 F010          	movff	prodl,___wmul@multiplier
 29304  005C50  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 29305  005C54  0E00               	movlw	0
 29306  005C56  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29307  005C58  0E0A               	movlw	10
 29308  005C5A  6E12               	movwf	___wmul@multiplicand^0,c
 29309  005C5C  ECB0  F049         	call	___wmul	;wreg free
 29310  005C60  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 29311  005C64  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 29312  005C68  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 29313  005C6C  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29314  005C6E  0EFF               	movlw	255
 29315  005C70  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29316  005C72  0E38               	movlw	56
 29317  005C74  6E12               	movwf	___wmul@multiplicand^0,c
 29318  005C76  ECB0  F049         	call	___wmul	;wreg free
 29319  005C7A  5010               	movf	?___wmul^0,w,c
 29320  005C7C  261A               	addwf	??_getCurrentComparator^0,f,c
 29321  005C7E  5011               	movf	(?___wmul+1)^0,w,c
 29322  005C80  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 29323  005C82  0E14               	movlw	20
 29324  005C84  241A               	addwf	??_getCurrentComparator^0,w,c
 29325  005C86  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 29326  005C88  0E05               	movlw	5
 29327  005C8A  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 29328  005C8C  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29329  005C8E  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 29330  005C90  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 29331  005C92  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 29332  005C94  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 29333  005C96  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 29334  005C98  0101               	movlb	1	; () banked
 29335  005C9A  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29336  005C9C  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 29337  005C9E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29338  005CA0  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29339  005CA2  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 29340  005CA4  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29341  005CA6  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29342  005CA8  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 29343  005CAA  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29344  005CAC  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29345  005CAE  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 29346  005CB0  D046               	goto	L106
 29347  005CB2                     l14799:
 29348                           
 29349                           ; BSR set to: 1
 29350                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 29351  005CB2  0E03               	movlw	3
 29352  005CB4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29353  005CB6  A4D8               	btfss	status,2,c
 29354  005CB8  D009               	goto	l1388
 29355                           
 29356                           ; BSR set to: 1
 29357                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 29358  005CBA  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 29359  005CBE  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 29360  005CC2  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 29361  005CC6  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 29362                           
 29363                           ;controlCurrent_MC50.c: 315:         }
 29364  005CCA  D008               	goto	l14803
 29365  005CCC                     l1388:
 29366                           
 29367                           ; BSR set to: 1
 29368                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 29369  005CCC  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 29370  005CD0  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 29371  005CD4  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 29372  005CD8  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 29373  005CDC                     l14803:
 29374                           
 29375                           ; BSR set to: 1
 29376                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 29377  005CDC  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29378  005CDE  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29379  005CE0  E10E               	bnz	l14807
 29380  005CE2  0E89               	movlw	137
 29381  005CE4  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29382  005CE6  0E13               	movlw	19
 29383  005CE8  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29384  005CEA  B0D8               	btfsc	status,0,c
 29385  005CEC  D008               	goto	l14807
 29386                           
 29387                           ; BSR set to: 1
 29388                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 29389  005CEE  0E88               	movlw	136
 29390  005CF0  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29391  005CF2  0E13               	movlw	19
 29392  005CF4                     L107:
 29393  005CF4  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29394  005CF6  0E00               	movlw	0
 29395  005CF8  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29396  005CFA  0E00               	movlw	0
 29397  005CFC  D020               	goto	L106
 29398  005CFE                     l14807:
 29399                           
 29400                           ; BSR set to: 1
 29401                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 29402  005CFE  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 29403  005D02  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29404  005D04  0EFE               	movlw	254
 29405  005D06  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29406  005D08  0E0C               	movlw	12
 29407  005D0A  6E12               	movwf	___wmul@multiplicand^0,c
 29408  005D0C  ECB0  F049         	call	___wmul	;wreg free
 29409  005D10  0E38               	movlw	56
 29410  005D12  2410               	addwf	?___wmul^0,w,c
 29411  005D14  6E1A               	movwf	??_getCurrentComparator^0,c
 29412  005D16  0E18               	movlw	24
 29413  005D18  2011               	addwfc	(?___wmul+1)^0,w,c
 29414  005D1A  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 29415  005D1C  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 29416  005D1E  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 29417  005D20  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 29418  005D22  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 29419  005D24  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29420  005D26  501A               	movf	??_getCurrentComparator^0,w,c
 29421  005D28  0101               	movlb	1	; () banked
 29422  005D2A  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29423  005D2C  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29424  005D2E  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 29425  005D30  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29426  005D32  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29427  005D34  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 29428  005D36  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29429  005D38  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29430  005D3A  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 29431  005D3C  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29432  005D3E                     L106:
 29433  005D3E  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 29434                           
 29435                           ; BSR set to: 1
 29436                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 29437  005D40  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 29438  005D42  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 29439  005D44  6E16               	movwf	?_getCurrentComparator^0,c
 29440  005D46  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 29441  005D48  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 29442  005D4A  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 29443  005D4C  0E00               	movlw	0
 29444  005D4E  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 29445  005D50  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 29446  005D52  0E00               	movlw	0
 29447  005D54  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 29448  005D56  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 29449                           
 29450                           ; BSR set to: 1
 29451  005D58  0012               	return		;funcret
 29452  005D5A                     __end_of_getCurrentComparator:
 29453                           	callstack 0
 29454                           
 29455 ;; *************** function ___wmul *****************
 29456 ;; Defined at:
 29457 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 29458 ;; Parameters:    Size  Location     Type
 29459 ;;  multiplier      2   15[COMRAM] unsigned int 
 29460 ;;  multiplicand    2   17[COMRAM] unsigned int 
 29461 ;; Auto vars:     Size  Location     Type
 29462 ;;  product         2   19[COMRAM] unsigned int 
 29463 ;; Return value:  Size  Location     Type
 29464 ;;                  2   15[COMRAM] unsigned int 
 29465 ;; Registers used:
 29466 ;;		wreg, status,2, status,0, prodl, prodh
 29467 ;; Tracked objects:
 29468 ;;		On entry : 0/0
 29469 ;;		On exit  : 0/0
 29470 ;;		Unchanged: 0/0
 29471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29475 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29476 ;;Total ram usage:        6 bytes
 29477 ;; Hardware stack levels used: 1
 29478 ;; Hardware stack levels required when called: 4
 29479 ;; This function calls:
 29480 ;;		Nothing
 29481 ;; This function is called by:
 29482 ;;		_getCurrentComparator
 29483 ;;		_getHopCode
 29484 ;; This function uses a non-reentrant model
 29485 ;;
 29486                           
 29487                           	psect	text127
 29488  009360                     __ptext127:
 29489                           	callstack 0
 29490  009360                     ___wmul:
 29491                           	callstack 22
 29492                           
 29493                           ; BSR set to: 1
 29494                           ;incstack = 0
 29495  009360  5010               	movf	___wmul@multiplier^0,w,c
 29496  009362  0212               	mulwf	___wmul@multiplicand^0,c
 29497  009364  CFF3 F014          	movff	prodl,___wmul@product
 29498  009368  CFF4 F015          	movff	prodh,___wmul@product+1
 29499  00936C  5010               	movf	___wmul@multiplier^0,w,c
 29500  00936E  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 29501  009370  50F3               	movf	243,w,c
 29502  009372  2615               	addwf	(___wmul@product+1)^0,f,c
 29503  009374  5011               	movf	(___wmul@multiplier+1)^0,w,c
 29504  009376  0212               	mulwf	___wmul@multiplicand^0,c
 29505  009378  50F3               	movf	243,w,c
 29506  00937A  2615               	addwf	(___wmul@product+1)^0,f,c
 29507  00937C  C014  F010         	movff	___wmul@product,?___wmul
 29508  009380  C015  F011         	movff	___wmul@product+1,?___wmul+1
 29509  009384  0012               	return		;funcret
 29510  009386                     __end_of___wmul:
 29511                           	callstack 0
 29512                           
 29513 ;; *************** function _GetMotorPower *****************
 29514 ;; Defined at:
 29515 ;;		line 405 in file "outputs_MC50.c"
 29516 ;; Parameters:    Size  Location     Type
 29517 ;;		None
 29518 ;; Auto vars:     Size  Location     Type
 29519 ;;  defineatraso    1   18[COMRAM] unsigned char 
 29520 ;; Return value:  Size  Location     Type
 29521 ;;                  1    wreg      unsigned char 
 29522 ;; Registers used:
 29523 ;;		wreg, status,2, status,0, prodl, prodh
 29524 ;; Tracked objects:
 29525 ;;		On entry : 3E/1
 29526 ;;		On exit  : 3F/1
 29527 ;;		Unchanged: 0/0
 29528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29531 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29533 ;;Total ram usage:        4 bytes
 29534 ;; Hardware stack levels used: 1
 29535 ;; Hardware stack levels required when called: 4
 29536 ;; This function calls:
 29537 ;;		Nothing
 29538 ;; This function is called by:
 29539 ;;		_ControlCurrent
 29540 ;;		_InitSoftStart
 29541 ;;		_InitSoftStop
 29542 ;; This function uses a non-reentrant model
 29543 ;;
 29544                           
 29545                           	psect	text128
 29546  0073AC                     __ptext128:
 29547                           	callstack 0
 29548  0073AC                     _GetMotorPower:
 29549                           	callstack 22
 29550                           
 29551                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 29552                           
 29553                           ;incstack = 0
 29554  0073AC  0101               	movlb	1	; () banked
 29555  0073AE  057B               	decf	_powerControl_st& (0+255),w,b
 29556  0073B0  A4D8               	btfss	status,2,c
 29557  0073B2  D006               	goto	l19927
 29558                           
 29559                           ; BSR set to: 1
 29560                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 29561  0073B4  0100               	movlb	0	; () banked
 29562  0073B6  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29563  0073B8  0D06               	mullw	6
 29564  0073BA  CFF3 F18F          	movff	prodl,_temppower
 29565                           
 29566                           ;outputs_MC50.c: 416:     }
 29567  0073BE  D043               	goto	l2240
 29568  0073C0                     l19927:
 29569                           
 29570                           ; BSR set to: 1
 29571                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 29572  0073C0  0100               	movlb	0	; () banked
 29573  0073C2  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29574  0073C4  0D06               	mullw	6
 29575  0073C6  CFF3 F082          	movff	prodl,_fullmotorPower
 29576                           
 29577                           ; BSR set to: 0
 29578                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 29579  0073CA  0101               	movlb	1	; () banked
 29580  0073CC  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29581  0073CE  D01C               	goto	l19937
 29582  0073D0  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29583  0073D2  E103               	bnz	u22710
 29584  0073D4  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29585  0073D6  A0D8               	btfss	status,0,c
 29586  0073D8  D017               	goto	l19937
 29587  0073DA                     u22710:
 29588                           
 29589                           ; BSR set to: 1
 29590                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 29591  0073DA  0100               	movlb	0	; () banked
 29592  0073DC  5182               	movf	_fullmotorPower& (0+255),w,b
 29593  0073DE  6E10               	movwf	??_GetMotorPower^0,c
 29594  0073E0  6A11               	clrf	(??_GetMotorPower+1)^0,c
 29595  0073E2  0101               	movlb	1	; () banked
 29596  0073E4  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29597  0073E6  5C10               	subwf	??_GetMotorPower^0,w,c
 29598  0073E8  5011               	movf	(??_GetMotorPower+1)^0,w,c
 29599  0073EA  0A80               	xorlw	128
 29600  0073EC  6E12               	movwf	(??_GetMotorPower+2)^0,c
 29601  0073EE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29602  0073F0  0A80               	xorlw	128
 29603  0073F2  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 29604  0073F4  B0D8               	btfsc	status,0,c
 29605  0073F6  D002               	goto	l19935
 29606                           
 29607                           ; BSR set to: 1
 29608                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 29609  0073F8  0E01               	movlw	1
 29610  0073FA  D004               	goto	L109
 29611  0073FC                     l19935:
 29612                           
 29613                           ; BSR set to: 1
 29614                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 29615  0073FC  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29616  0073FE  0100               	movlb	0	; () banked
 29617  007400  5D82               	subwf	_fullmotorPower& (0+255),w,b
 29618  007402  D017               	goto	L110
 29619  007404                     L109:
 29620  007404  6F8F               	movwf	_temppower& (0+255),b
 29621  007406  D01F               	goto	l2240
 29622  007408                     l19937:
 29623                           
 29624                           ; BSR set to: 1
 29625  007408  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29626  00740A  D005               	goto	u22730
 29627  00740C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29628  00740E  E113               	bnz	l19947
 29629  007410  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29630  007412  B0D8               	btfsc	status,0,c
 29631  007414  D010               	goto	l19947
 29632  007416                     u22730:
 29633                           
 29634                           ; BSR set to: 1
 29635  007416  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29636  007418  D005               	goto	u22740
 29637  00741A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29638  00741C  E10C               	bnz	l19947
 29639  00741E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29640  007420  B0D8               	btfsc	status,0,c
 29641  007422  D009               	goto	l19947
 29642  007424                     u22740:
 29643                           
 29644                           ; BSR set to: 1
 29645                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 29646  007424  C082  F18F         	movff	_fullmotorPower,_temppower
 29647                           
 29648                           ; BSR set to: 1
 29649                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 29650  007428  0E08               	movlw	8
 29651  00742A  0100               	movlb	0	; () banked
 29652  00742C  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 29653  00742E  D00B               	goto	l2240
 29654                           
 29655                           ; BSR set to: 0
 29656                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 29657  007430  0E3A               	movlw	58
 29658  007432                     L110:
 29659  007432  0101               	movlb	1	; () banked
 29660  007434  D7E7               	goto	L109
 29661  007436                     l19947:
 29662                           
 29663                           ; BSR set to: 1
 29664  007436  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29665  007438  D006               	goto	l2240
 29666  00743A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29667  00743C  E102               	bnz	u22760
 29668  00743E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29669  007440  B0D8               	btfsc	status,0,c
 29670  007442                     u22760:
 29671                           
 29672                           ; BSR set to: 1
 29673                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 29674  007442  C110  F18F         	movff	_var_sys+16,_temppower	;volatile
 29675  007446                     l2240:
 29676                           
 29677                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 29678  007446  0101               	movlb	1	; () banked
 29679  007448  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29680  00744A  D00E               	goto	l19957
 29681  00744C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29682  00744E  E103               	bnz	u22770
 29683  007450  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29684  007452  A0D8               	btfss	status,0,c
 29685  007454  D009               	goto	l19957
 29686  007456                     u22770:
 29687                           
 29688                           ; BSR set to: 1
 29689  007456  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29690  007458  D005               	goto	u22780
 29691  00745A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29692  00745C  E105               	bnz	l19957
 29693  00745E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29694  007460  B0D8               	btfsc	status,0,c
 29695  007462  D002               	goto	l19957
 29696  007464                     u22780:
 29697                           
 29698                           ; BSR set to: 1
 29699                           ;outputs_MC50.c: 452:     defineatraso = 5;
 29700  007464  0E05               	movlw	5
 29701  007466  D001               	goto	L108
 29702  007468                     l19957:
 29703                           
 29704                           ; BSR set to: 1
 29705                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 29706  007468  0E17               	movlw	23
 29707  00746A                     L108:
 29708  00746A  6E13               	movwf	GetMotorPower@defineatraso^0,c
 29709                           
 29710                           ; BSR set to: 1
 29711                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 29712  00746C  518F               	movf	_temppower& (0+255),w,b
 29713  00746E  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 29714                           
 29715                           ; BSR set to: 1
 29716  007470  0012               	return		;funcret
 29717  007472                     __end_of_GetMotorPower:
 29718                           	callstack 0
 29719                           
 29720 ;; *************** function _ControlCounterMoves *****************
 29721 ;; Defined at:
 29722 ;;		line 305 in file "controlMemory_MC50.c"
 29723 ;; Parameters:    Size  Location     Type
 29724 ;;		None
 29725 ;; Auto vars:     Size  Location     Type
 29726 ;;		None
 29727 ;; Return value:  Size  Location     Type
 29728 ;;                  1    wreg      void 
 29729 ;; Registers used:
 29730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29731 ;; Tracked objects:
 29732 ;;		On entry : 3E/1
 29733 ;;		On exit  : 0/0
 29734 ;;		Unchanged: 0/0
 29735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29740 ;;Total ram usage:        0 bytes
 29741 ;; Hardware stack levels used: 1
 29742 ;; Hardware stack levels required when called: 14
 29743 ;; This function calls:
 29744 ;;		_SaveNVM_VarSystem
 29745 ;; This function is called by:
 29746 ;;		_main
 29747 ;; This function uses a non-reentrant model
 29748 ;;
 29749                           
 29750                           	psect	text129
 29751  008832                     __ptext129:
 29752                           	callstack 0
 29753  008832                     _ControlCounterMoves:
 29754                           	callstack 16
 29755                           
 29756                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 29757                           
 29758                           ; BSR set to: 1
 29759                           ;incstack = 0
 29760  008832  0101               	movlb	1	; () banked
 29761  008834  BFC2               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 29762  008836  D005               	goto	u28170
 29763  008838  51C2               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 29764  00883A  E127               	bnz	l1491
 29765  00883C  05C1               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 29766  00883E  B0D8               	btfsc	status,0,c
 29767  008840  0012               	return	
 29768  008842                     u28170:
 29769                           
 29770                           ; BSR set to: 1
 29771                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 29772  008842  0E17               	movlw	23
 29773  008844  6FC2               	movwf	(_ts_system+39)& (0+255),b	;volatile
 29774  008846  0E70               	movlw	112
 29775  008848  6FC1               	movwf	(_ts_system+38)& (0+255),b	;volatile
 29776                           
 29777                           ; BSR set to: 1
 29778                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 29779  00884A  0100               	movlb	0	; () banked
 29780  00884C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 29781  00884E  0101               	movlb	1	; () banked
 29782  008850  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 29783  008852  E110               	bnz	u28180
 29784  008854  0100               	movlb	0	; () banked
 29785  008856  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 29786  008858  0101               	movlb	1	; () banked
 29787  00885A  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 29788  00885C  E10B               	bnz	u28180
 29789  00885E  0100               	movlb	0	; () banked
 29790  008860  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 29791  008862  0101               	movlb	1	; () banked
 29792  008864  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 29793  008866  E106               	bnz	u28180
 29794  008868  0100               	movlb	0	; () banked
 29795  00886A  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 29796  00886C  0101               	movlb	1	; () banked
 29797  00886E  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 29798  008870  B4D8               	btfsc	status,2,c
 29799  008872  0012               	return	
 29800  008874                     u28180:
 29801                           
 29802                           ; BSR set to: 1
 29803                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 29804  008874  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 29805  008878  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 29806  00887C  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 29807  008880  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 29808                           
 29809                           ; BSR set to: 1
 29810                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 29811  008884  0E02               	movlw	2
 29812  008886  EC97  F047         	call	_SaveNVM_VarSystem
 29813  00888A                     l1491:
 29814  00888A  0012               	return		;funcret
 29815  00888C                     __end_of_ControlCounterMoves:
 29816                           	callstack 0
 29817                           
 29818 ;; *************** function _SaveNVM_VarSystem *****************
 29819 ;; Defined at:
 29820 ;;		line 187 in file "controlMemory_MC50.c"
 29821 ;; Parameters:    Size  Location     Type
 29822 ;;  page            1    wreg     unsigned char 
 29823 ;; Auto vars:     Size  Location     Type
 29824 ;;  page            1    0[BANK0 ] unsigned char 
 29825 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 29826 ;;  point           1    3[BANK0 ] PTR unsigned char 
 29827 ;;		 -> var_sys_NVM(64), 
 29828 ;; Return value:  Size  Location     Type
 29829 ;;                  1    wreg      void 
 29830 ;; Registers used:
 29831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29832 ;; Tracked objects:
 29833 ;;		On entry : 0/0
 29834 ;;		On exit  : 0/0
 29835 ;;		Unchanged: 0/0
 29836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29838 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29840 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29841 ;;Total ram usage:        4 bytes
 29842 ;; Hardware stack levels used: 1
 29843 ;; Hardware stack levels required when called: 13
 29844 ;; This function calls:
 29845 ;;		_i2c_writeNBytes
 29846 ;; This function is called by:
 29847 ;;		_loadNVM_VarSystem
 29848 ;;		_ResetDefaultMemory
 29849 ;;		_ControlCounterMoves
 29850 ;;		_checkNVM_VarSystem
 29851 ;;		_sm_execute_ControlLearning
 29852 ;;		_sm_execute_menuConfiguration
 29853 ;;		_setValueToEdit
 29854 ;;		_controlSelectRemote
 29855 ;;		_eusartparser
 29856 ;; This function uses a non-reentrant model
 29857 ;;
 29858                           
 29859                           	psect	text130
 29860  008F2E                     __ptext130:
 29861                           	callstack 0
 29862  008F2E                     _SaveNVM_VarSystem:
 29863                           	callstack 14
 29864                           
 29865                           ;incstack = 0
 29866                           ;SaveNVM_VarSystem@page stored from wreg
 29867  008F2E  0100               	movlb	0	; () banked
 29868  008F30  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 29869                           
 29870                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 29871  008F32  0100               	movlb	0	; () banked
 29872  008F34  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 29873  008F36  0D10               	mullw	16
 29874  008F38  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 29875  008F3C  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 29879  008F40  0E98               	movlw	low _var_sys_NVM
 29880  008F42  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29881                           
 29882                           ; BSR set to: 0
 29883                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 29884  008F44  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 29885  008F46  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 29886  008F48  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29887                           
 29888                           ; BSR set to: 0
 29889                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 29890  008F4A  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 29891  008F4E  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 29892  008F52  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 29893  008F56  0E00               	movlw	0
 29894  008F58  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 29895  008F5A  0E10               	movlw	16
 29896  008F5C  6E25               	movwf	i2c_writeNBytes@len^0,c
 29897  008F5E  0E50               	movlw	80
 29898  008F60  EC42  F041         	call	_i2c_writeNBytes
 29899  008F64  0012               	return		;funcret
 29900  008F66                     __end_of_SaveNVM_VarSystem:
 29901                           	callstack 0
 29902                           
 29903 ;; *************** function _i2c_writeNBytes *****************
 29904 ;; Defined at:
 29905 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29906 ;; Parameters:    Size  Location     Type
 29907 ;;  address         1    wreg     unsigned char 
 29908 ;;  reg             2   33[COMRAM] unsigned short 
 29909 ;;  data            1   35[COMRAM] PTR void 
 29910 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29911 ;;  len             2   36[COMRAM] unsigned int 
 29912 ;; Auto vars:     Size  Location     Type
 29913 ;;  address         1   56[COMRAM] unsigned char 
 29914 ;;  dat            17   39[COMRAM] unsigned char [17]
 29915 ;; Return value:  Size  Location     Type
 29916 ;;                  1    wreg      void 
 29917 ;; Registers used:
 29918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29919 ;; Tracked objects:
 29920 ;;		On entry : 3F/0
 29921 ;;		On exit  : 0/0
 29922 ;;		Unchanged: 0/0
 29923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29924 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29925 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29927 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29928 ;;Total ram usage:       24 bytes
 29929 ;; Hardware stack levels used: 1
 29930 ;; Hardware stack levels required when called: 12
 29931 ;; This function calls:
 29932 ;;		_I2C1_Close
 29933 ;;		_I2C1_MasterWrite
 29934 ;;		_I2C1_Open
 29935 ;;		_I2C1_SetAddressNackCallback
 29936 ;;		_I2C1_SetBuffer
 29937 ;;		_memcpy
 29938 ;; This function is called by:
 29939 ;;		_saveNewSerial
 29940 ;;		_RemoveSerial
 29941 ;;		_SaveNVM_VarSystem
 29942 ;; This function uses a non-reentrant model
 29943 ;;
 29944                           
 29945                           	psect	text131
 29946  008284                     __ptext131:
 29947                           	callstack 0
 29948  008284                     _i2c_writeNBytes:
 29949                           	callstack 14
 29950                           
 29951                           ;incstack = 0
 29952                           ;i2c_writeNBytes@address stored from wreg
 29953  008284  6E39               	movwf	i2c_writeNBytes@address^0,c
 29954                           
 29955                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 29956  008286  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 29957                           
 29958                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 29959  00828A  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 29960  00828C  6E10               	movwf	memcpy@d1^0,c
 29961  00828E  6A11               	clrf	(memcpy@d1+1)^0,c
 29962  008290  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 29963  008294  6A13               	clrf	(memcpy@s1+1)^0,c
 29964  008296  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 29965  00829A  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 29966  00829E  EC99  F046         	call	_memcpy	;wreg free
 29967  0082A2                     l19981:
 29968  0082A2  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 29969  0082A4  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 29970  0082A6  EC12  F03F         	call	_I2C1_Open
 29971  0082AA  0900               	iorlw	0
 29972  0082AC  B4D8               	btfsc	status,2,c
 29973  0082AE  D7F9               	goto	l19981
 29974                           
 29975                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 29976  0082B0  0E28               	movlw	low i2c_writeNBytes@dat
 29977  0082B2  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 29978  0082B4  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 29979  0082B6  0E01               	movlw	1
 29980  0082B8  2425               	addwf	i2c_writeNBytes@len^0,w,c
 29981  0082BA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 29982  0082BC  0E00               	movlw	0
 29983  0082BE  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 29984  0082C0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 29985  0082C2  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 29986                           
 29987                           ; BSR set to: 2
 29988                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 29989  0082C6  0E00               	movlw	0
 29990  0082C8  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 29991  0082CA  0E00               	movlw	0
 29992  0082CC  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 29993  0082CE  0E00               	movlw	0
 29994  0082D0  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 29995  0082D2  0E00               	movlw	0
 29996  0082D4  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 29997  0082D6  ECDC  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 29998                           
 29999                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 30000  0082DA  ECAA  F04B         	call	_I2C1_MasterWrite	;wreg free
 30001  0082DE                     l19989:
 30002  0082DE  EC1D  F04A         	call	_I2C1_Close	;wreg free
 30003  0082E2  06E8               	decf	wreg,f,c
 30004  0082E4  B4D8               	btfsc	status,2,c
 30005  0082E6  D7FB               	goto	l19989
 30006                           
 30007                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 30008  0082E8  0ED0               	movlw	208
 30009  0082EA  6E27               	movwf	??_i2c_writeNBytes^0,c
 30010  0082EC  0ECA               	movlw	202
 30011  0082EE                     u29827:
 30012  0082EE  2EE8               	decfsz	wreg,f,c
 30013  0082F0  D7FE               	bra	u29827
 30014  0082F2  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 30015  0082F4  D7FC               	bra	u29827
 30016  0082F6  0012               	return		;funcret
 30017  0082F8                     __end_of_i2c_writeNBytes:
 30018                           	callstack 0
 30019                           
 30020 ;; *************** function _memcpy *****************
 30021 ;; Defined at:
 30022 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 30023 ;; Parameters:    Size  Location     Type
 30024 ;;  d1              2   15[COMRAM] PTR void 
 30025 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30026 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30027 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30028 ;;		 -> i2c_writeNBytes@dat(17), 
 30029 ;;  s1              2   17[COMRAM] PTR const void 
 30030 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30031 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30032 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30033 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30034 ;;  n               2   19[COMRAM] unsigned int 
 30035 ;; Auto vars:     Size  Location     Type
 30036 ;;  s               2   24[COMRAM] PTR const unsigned char 
 30037 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30038 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30039 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 30040 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30041 ;;  d               2   22[COMRAM] PTR unsigned char 
 30042 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 30043 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 30044 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 30045 ;;		 -> i2c_writeNBytes@dat(17), 
 30046 ;;  tmp             1   21[COMRAM] unsigned char 
 30047 ;; Return value:  Size  Location     Type
 30048 ;;                  2   15[COMRAM] PTR void 
 30049 ;; Registers used:
 30050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30051 ;; Tracked objects:
 30052 ;;		On entry : 0/0
 30053 ;;		On exit  : 0/0
 30054 ;;		Unchanged: 0/0
 30055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30056 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30057 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30059 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30060 ;;Total ram usage:       11 bytes
 30061 ;; Hardware stack levels used: 1
 30062 ;; Hardware stack levels required when called: 4
 30063 ;; This function calls:
 30064 ;;		Nothing
 30065 ;; This function is called by:
 30066 ;;		_i2c_writeNBytes
 30067 ;;		_getSerialCmd
 30068 ;;		_NormalKeyGen
 30069 ;;		_Decrypt
 30070 ;;		_keeloqDecryptPacket
 30071 ;;		_DecryptPacket_12BIT
 30072 ;; This function uses a non-reentrant model
 30073 ;;
 30074                           
 30075                           	psect	text132
 30076  008D32                     __ptext132:
 30077                           	callstack 0
 30078  008D32                     _memcpy:
 30079                           	callstack 21
 30080                           
 30081                           ;incstack = 0
 30082  008D32  C012  F019         	movff	memcpy@s1,memcpy@s
 30083  008D36  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 30084  008D3A  C010  F017         	movff	memcpy@d1,memcpy@d
 30085  008D3E  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 30086  008D42  D010               	goto	l19921
 30087  008D44                     l19913:
 30088  008D44  C019  FFD9         	movff	memcpy@s,fsr2l
 30089  008D48  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 30090  008D4C  50DF               	movf	indf2,w,c
 30091  008D4E  6E16               	movwf	memcpy@tmp^0,c
 30092  008D50  4A19               	infsnz	memcpy@s^0,f,c
 30093  008D52  2A1A               	incf	(memcpy@s+1)^0,f,c
 30094  008D54  C017  FFD9         	movff	memcpy@d,fsr2l
 30095  008D58  C018  FFDA         	movff	memcpy@d+1,fsr2h
 30096  008D5C  C016  FFDF         	movff	memcpy@tmp,indf2
 30097  008D60  4A17               	infsnz	memcpy@d^0,f,c
 30098  008D62  2A18               	incf	(memcpy@d+1)^0,f,c
 30099  008D64                     l19921:
 30100  008D64  0614               	decf	memcpy@n^0,f,c
 30101  008D66  A0D8               	btfss	status,0,c
 30102  008D68  0615               	decf	(memcpy@n+1)^0,f,c
 30103  008D6A  2814               	incf	memcpy@n^0,w,c
 30104  008D6C  E1EB               	bnz	l19913
 30105  008D6E  2815               	incf	(memcpy@n+1)^0,w,c
 30106  008D70  B4D8               	btfsc	status,2,c
 30107  008D72  0012               	return	
 30108  008D74  D7E7               	goto	l19913
 30109  008D76                     __end_of_memcpy:
 30110                           	callstack 0
 30111                           
 30112 ;; *************** function _I2C1_SetAddressNackCallback *****************
 30113 ;; Defined at:
 30114 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 30115 ;; Parameters:    Size  Location     Type
 30116 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 30117 ;;		 -> Absolute function(1), 
 30118 ;;  ptr             2   22[COMRAM] PTR void 
 30119 ;;		 -> NULL(0), 
 30120 ;; Auto vars:     Size  Location     Type
 30121 ;;		None
 30122 ;; Return value:  Size  Location     Type
 30123 ;;                  1    wreg      void 
 30124 ;; Registers used:
 30125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30126 ;; Tracked objects:
 30127 ;;		On entry : 3F/2
 30128 ;;		On exit  : 0/0
 30129 ;;		Unchanged: 0/0
 30130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30135 ;;Total ram usage:        4 bytes
 30136 ;; Hardware stack levels used: 1
 30137 ;; Hardware stack levels required when called: 5
 30138 ;; This function calls:
 30139 ;;		_I2C1_SetCallback
 30140 ;; This function is called by:
 30141 ;;		_i2c_writeNBytes
 30142 ;;		_i2c_readDataBlock
 30143 ;;		_I2C1_Read1ByteRegister
 30144 ;; This function uses a non-reentrant model
 30145 ;;
 30146                           
 30147                           	psect	text133
 30148  0095B8                     __ptext133:
 30149                           	callstack 0
 30150  0095B8                     _I2C1_SetAddressNackCallback:
 30151                           	callstack 20
 30152                           
 30153                           ; BSR set to: 2
 30154                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 30155                           
 30156                           ;incstack = 0
 30157  0095B8  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 30158  0095BC  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 30159  0095C0  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 30160  0095C4  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 30161  0095C8  0E02               	movlw	2
 30162  0095CA  EC5B  F042         	call	_I2C1_SetCallback
 30163  0095CE  0012               	return		;funcret
 30164  0095D0                     __end_of_I2C1_SetAddressNackCallback:
 30165                           	callstack 0
 30166                           
 30167 ;; *************** function _I2C1_Open *****************
 30168 ;; Defined at:
 30169 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 30170 ;; Parameters:    Size  Location     Type
 30171 ;;  address         1    wreg     unsigned char 
 30172 ;; Auto vars:     Size  Location     Type
 30173 ;;  address         1   15[COMRAM] unsigned char 
 30174 ;;  returnValue     1   16[COMRAM] enum E355
 30175 ;; Return value:  Size  Location     Type
 30176 ;;                  1    wreg      enum E355
 30177 ;; Registers used:
 30178 ;;		wreg, status,2, status,0, cstack
 30179 ;; Tracked objects:
 30180 ;;		On entry : 0/0
 30181 ;;		On exit  : 33/2
 30182 ;;		Unchanged: 0/0
 30183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30188 ;;Total ram usage:        2 bytes
 30189 ;; Hardware stack levels used: 1
 30190 ;; Hardware stack levels required when called: 5
 30191 ;; This function calls:
 30192 ;;		_I2C1_MasterClearIrq
 30193 ;;		_I2C1_MasterOpen
 30194 ;; This function is called by:
 30195 ;;		_i2c_writeNBytes
 30196 ;;		_i2c_readDataBlock
 30197 ;;		_I2C1_Read1ByteRegister
 30198 ;; This function uses a non-reentrant model
 30199 ;;
 30200                           
 30201                           	psect	text134
 30202  007E24                     __ptext134:
 30203                           	callstack 0
 30204  007E24                     _I2C1_Open:
 30205                           	callstack 20
 30206                           
 30207                           ;incstack = 0
 30208                           ;I2C1_Open@address stored from wreg
 30209  007E24  6E10               	movwf	I2C1_Open@address^0,c
 30210                           
 30211                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 30212  007E26  0E01               	movlw	1
 30213  007E28  6E11               	movwf	I2C1_Open@returnValue^0,c
 30214                           
 30215                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 30216  007E2A  0102               	movlb	2	; () banked
 30217  007E2C  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 30218  007E2E  D03A               	goto	l19887
 30219                           
 30220                           ; BSR set to: 2
 30221                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 30222  007E30  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 30223                           
 30224                           ; BSR set to: 2
 30225                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 30226  007E34  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30227                           
 30228                           ; BSR set to: 2
 30229                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 30230  007E36  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 30231                           
 30232                           ; BSR set to: 2
 30233                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 30234  007E38  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30235                           
 30236                           ; BSR set to: 2
 30237                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 30238  007E3A  0E0E               	movlw	14
 30239  007E3C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30240                           
 30241                           ; BSR set to: 2
 30242                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 30243  007E3E  0E01               	movlw	1
 30244  007E40  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 30245  007E42  0EF4               	movlw	244
 30246  007E44  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 30247                           
 30248                           ; BSR set to: 2
 30249                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 30250  007E46  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30251                           
 30252                           ; BSR set to: 2
 30253                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 30254  007E48  0EEE               	movlw	low _I2C1_CallbackReturnStop
 30255  007E4A  6F3C               	movwf	_I2C1_Status& (0+255),b
 30256  007E4C  0E97               	movlw	high _I2C1_CallbackReturnStop
 30257  007E4E  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 30258                           
 30259                           ; BSR set to: 2
 30260                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 30261  007E50  0E00               	movlw	0
 30262  007E52  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 30263  007E54  0E00               	movlw	0
 30264  007E56  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 30265                           
 30266                           ; BSR set to: 2
 30267                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 30268  007E58  0EEE               	movlw	low _I2C1_CallbackReturnStop
 30269  007E5A  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 30270  007E5C  0E97               	movlw	high _I2C1_CallbackReturnStop
 30271  007E5E  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 30272                           
 30273                           ; BSR set to: 2
 30274                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 30275  007E60  0E00               	movlw	0
 30276  007E62  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 30277  007E64  0E00               	movlw	0
 30278  007E66  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 30279                           
 30280                           ; BSR set to: 2
 30281                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30282  007E68  0EEE               	movlw	low _I2C1_CallbackReturnStop
 30283  007E6A  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 30284  007E6C  0E97               	movlw	high _I2C1_CallbackReturnStop
 30285  007E6E  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 30286                           
 30287                           ; BSR set to: 2
 30288                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 30289  007E70  0E00               	movlw	0
 30290  007E72  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 30291  007E74  0E00               	movlw	0
 30292  007E76  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 30293                           
 30294                           ; BSR set to: 2
 30295                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30296  007E78  0EEE               	movlw	low _I2C1_CallbackReturnStop
 30297  007E7A  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 30298  007E7C  0E97               	movlw	high _I2C1_CallbackReturnStop
 30299  007E7E  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 30300                           
 30301                           ; BSR set to: 2
 30302                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 30303  007E80  0E00               	movlw	0
 30304  007E82  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 30305  007E84  0E00               	movlw	0
 30306  007E86  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 30307                           
 30308                           ; BSR set to: 2
 30309                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 30310  007E88  0EEA               	movlw	low _I2C1_CallbackReturnReset
 30311  007E8A  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 30312  007E8C  0E97               	movlw	high _I2C1_CallbackReturnReset
 30313  007E8E  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 30314                           
 30315                           ; BSR set to: 2
 30316                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 30317  007E90  0E00               	movlw	0
 30318  007E92  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 30319  007E94  0E00               	movlw	0
 30320  007E96  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 30321                           
 30322                           ; BSR set to: 2
 30323                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 30324  007E98  ECE1  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 30325                           
 30326                           ; BSR set to: 14
 30327                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 30328  007E9C  ECE8  F04A         	call	_I2C1_MasterOpen	;wreg free
 30329                           
 30330                           ; BSR set to: 14
 30331                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 30332  007EA0  0E00               	movlw	0
 30333  007EA2  6E11               	movwf	I2C1_Open@returnValue^0,c
 30334  007EA4                     l19887:
 30335                           
 30336                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 30337  007EA4  5011               	movf	I2C1_Open@returnValue^0,w,c
 30338  007EA6  0012               	return		;funcret
 30339  007EA8                     __end_of_I2C1_Open:
 30340                           	callstack 0
 30341                           
 30342 ;; *************** function _I2C1_MasterOpen *****************
 30343 ;; Defined at:
 30344 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 30345 ;; Parameters:    Size  Location     Type
 30346 ;;		None
 30347 ;; Auto vars:     Size  Location     Type
 30348 ;;		None
 30349 ;; Return value:  Size  Location     Type
 30350 ;;                  1    wreg      _Bool 
 30351 ;; Registers used:
 30352 ;;		wreg, status,2
 30353 ;; Tracked objects:
 30354 ;;		On entry : 3F/E
 30355 ;;		On exit  : 3F/E
 30356 ;;		Unchanged: 3F/0
 30357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30362 ;;Total ram usage:        0 bytes
 30363 ;; Hardware stack levels used: 1
 30364 ;; Hardware stack levels required when called: 4
 30365 ;; This function calls:
 30366 ;;		Nothing
 30367 ;; This function is called by:
 30368 ;;		_I2C1_Open
 30369 ;; This function uses a non-reentrant model
 30370 ;;
 30371                           
 30372                           	psect	text135
 30373  0095D0                     __ptext135:
 30374                           	callstack 0
 30375  0095D0                     _I2C1_MasterOpen:
 30376                           	callstack 20
 30377                           
 30378                           ; BSR set to: 14
 30379                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 30380                           
 30381                           ;incstack = 0
 30382  0095D0  BA96               	btfsc	150,5,c	;volatile
 30383  0095D2  0012               	return	
 30384                           
 30385                           ; BSR set to: 14
 30386                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 30387  0095D4  0E80               	movlw	128
 30388  0095D6  6E95               	movwf	149,c	;volatile
 30389                           
 30390                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 30391  0095D8  0E08               	movlw	8
 30392  0095DA  6E96               	movwf	150,c	;volatile
 30393                           
 30394                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 30395  0095DC  0E00               	movlw	0
 30396  0095DE  6E97               	movwf	151,c	;volatile
 30397                           
 30398                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 30399  0095E0  0E9F               	movlw	159
 30400  0095E2  6E93               	movwf	147,c	;volatile
 30401                           
 30402                           ; BSR set to: 14
 30403                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 30404  0095E4  8A96               	bsf	150,5,c	;volatile
 30405                           
 30406                           ; BSR set to: 14
 30407  0095E6  0012               	return		;funcret
 30408  0095E8                     __end_of_I2C1_MasterOpen:
 30409                           	callstack 0
 30410                           
 30411 ;; *************** function _I2C1_MasterWrite *****************
 30412 ;; Defined at:
 30413 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 30414 ;; Parameters:    Size  Location     Type
 30415 ;;		None
 30416 ;; Auto vars:     Size  Location     Type
 30417 ;;		None
 30418 ;; Return value:  Size  Location     Type
 30419 ;;                  1    wreg      enum E355
 30420 ;; Registers used:
 30421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30422 ;; Tracked objects:
 30423 ;;		On entry : 0/2
 30424 ;;		On exit  : 3F/2
 30425 ;;		Unchanged: 0/0
 30426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30431 ;;Total ram usage:        0 bytes
 30432 ;; Hardware stack levels used: 1
 30433 ;; Hardware stack levels required when called: 11
 30434 ;; This function calls:
 30435 ;;		_I2C1_MasterOperation
 30436 ;; This function is called by:
 30437 ;;		_i2c_writeNBytes
 30438 ;;		_i2c_readDataBlock
 30439 ;;		_I2C1_Read1ByteRegister
 30440 ;; This function uses a non-reentrant model
 30441 ;;
 30442                           
 30443                           	psect	text136
 30444  009754                     __ptext136:
 30445                           	callstack 0
 30446  009754                     _I2C1_MasterWrite:
 30447                           	callstack 14
 30448                           
 30449                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 30450                           
 30451                           ; BSR set to: 14
 30452                           ;incstack = 0
 30453  009754  0E00               	movlw	0
 30454  009756  EC86  F048         	call	_I2C1_MasterOperation
 30455                           
 30456                           ; BSR set to: 2
 30457  00975A  0012               	return		;funcret
 30458  00975C                     __end_of_I2C1_MasterWrite:
 30459                           	callstack 0
 30460                           
 30461 ;; *************** function _I2C1_MasterOperation *****************
 30462 ;; Defined at:
 30463 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 30464 ;; Parameters:    Size  Location     Type
 30465 ;;  read            1    wreg     _Bool 
 30466 ;; Auto vars:     Size  Location     Type
 30467 ;;  read            1   31[COMRAM] _Bool 
 30468 ;;  returnValue     1   32[COMRAM] enum E355
 30469 ;; Return value:  Size  Location     Type
 30470 ;;                  1    wreg      enum E355
 30471 ;; Registers used:
 30472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30473 ;; Tracked objects:
 30474 ;;		On entry : 0/2
 30475 ;;		On exit  : 3F/2
 30476 ;;		Unchanged: 0/0
 30477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30482 ;;Total ram usage:        2 bytes
 30483 ;; Hardware stack levels used: 1
 30484 ;; Hardware stack levels required when called: 10
 30485 ;; This function calls:
 30486 ;;		_I2C1_MasterStart
 30487 ;;		_I2C1_Poller
 30488 ;; This function is called by:
 30489 ;;		_I2C1_MasterWrite
 30490 ;; This function uses a non-reentrant model
 30491 ;;
 30492                           
 30493                           	psect	text137
 30494  00910C                     __ptext137:
 30495                           	callstack 0
 30496  00910C                     _I2C1_MasterOperation:
 30497                           	callstack 14
 30498                           
 30499                           ; BSR set to: 2
 30500                           ;incstack = 0
 30501                           ;I2C1_MasterOperation@read stored from wreg
 30502  00910C  6E20               	movwf	I2C1_MasterOperation@read^0,c
 30503                           
 30504                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 30505  00910E  0E01               	movlw	1
 30506  009110  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 30507                           
 30508                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 30509  009112  0102               	movlb	2	; () banked
 30510  009114  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 30511  009116  D00E               	goto	l19839
 30512                           
 30513                           ; BSR set to: 2
 30514                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 30515  009118  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 30516                           
 30517                           ; BSR set to: 2
 30518                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 30519  00911A  0E00               	movlw	0
 30520  00911C  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 30521                           
 30522                           ; BSR set to: 2
 30523                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 30524  00911E  5020               	movf	I2C1_MasterOperation@read^0,w,c
 30525  009120  B4D8               	btfsc	status,2,c
 30526  009122  D002               	goto	l19833
 30527                           
 30528                           ; BSR set to: 2
 30529                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 30530  009124  0E01               	movlw	1
 30531  009126  D001               	goto	L111
 30532  009128                     l19833:
 30533                           
 30534                           ; BSR set to: 2
 30535                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 30536  009128  0E02               	movlw	2
 30537  00912A                     L111:
 30538  00912A  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30539                           
 30540                           ; BSR set to: 2
 30541                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 30542  00912C  ECFD  F04B         	call	_I2C1_MasterStart	;wreg free
 30543                           
 30544                           ; BSR set to: 2
 30545                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 30546  009130  EC45  F04B         	call	_I2C1_Poller	;wreg free
 30547  009134                     l19839:
 30548                           
 30549                           ; BSR set to: 2
 30550                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 30551  009134  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 30552                           
 30553                           ; BSR set to: 2
 30554  009136  0012               	return		;funcret
 30555  009138                     __end_of_I2C1_MasterOperation:
 30556                           	callstack 0
 30557                           
 30558 ;; *************** function _I2C1_Poller *****************
 30559 ;; Defined at:
 30560 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 30561 ;; Parameters:    Size  Location     Type
 30562 ;;		None
 30563 ;; Auto vars:     Size  Location     Type
 30564 ;;		None
 30565 ;; Return value:  Size  Location     Type
 30566 ;;                  1    wreg      void 
 30567 ;; Registers used:
 30568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30569 ;; Tracked objects:
 30570 ;;		On entry : 3F/2
 30571 ;;		On exit  : 3F/2
 30572 ;;		Unchanged: 0/0
 30573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30578 ;;Total ram usage:        0 bytes
 30579 ;; Hardware stack levels used: 1
 30580 ;; Hardware stack levels required when called: 9
 30581 ;; This function calls:
 30582 ;;		_I2C1_MasterFsm
 30583 ;;		_I2C1_MasterWaitForEvent
 30584 ;; This function is called by:
 30585 ;;		_I2C1_MasterOperation
 30586 ;; This function uses a non-reentrant model
 30587 ;;
 30588                           
 30589                           	psect	text138
 30590  00968A                     __ptext138:
 30591                           	callstack 0
 30592  00968A                     _I2C1_Poller:
 30593                           	callstack 14
 30594                           
 30595                           ; BSR set to: 2
 30596                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30597                           
 30598                           ; BSR set to: 2
 30599                           ;incstack = 0
 30600  00968A  D004               	goto	l19807
 30601  00968C                     l19803:
 30602                           
 30603                           ; BSR set to: 2
 30604                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 30605  00968C  ECAE  F04B         	call	_I2C1_MasterWaitForEvent	;wreg free
 30606                           
 30607                           ; BSR set to: 14
 30608                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 30609  009690  ECF3  F044         	call	_I2C1_MasterFsm	;wreg free
 30610  009694                     l19807:
 30611                           
 30612                           ; BSR set to: 2
 30613                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30614  009694  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 30615  009696  0012               	return	
 30616  009698  D7F9               	goto	l19803
 30617  00969A                     __end_of_I2C1_Poller:
 30618                           	callstack 0
 30619                           
 30620 ;; *************** function _I2C1_MasterWaitForEvent *****************
 30621 ;; Defined at:
 30622 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 30623 ;; Parameters:    Size  Location     Type
 30624 ;;		None
 30625 ;; Auto vars:     Size  Location     Type
 30626 ;;		None
 30627 ;; Return value:  Size  Location     Type
 30628 ;;                  1    wreg      void 
 30629 ;; Registers used:
 30630 ;;		None
 30631 ;; Tracked objects:
 30632 ;;		On entry : 3F/2
 30633 ;;		On exit  : 3F/E
 30634 ;;		Unchanged: 0/0
 30635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30640 ;;Total ram usage:        0 bytes
 30641 ;; Hardware stack levels used: 1
 30642 ;; Hardware stack levels required when called: 4
 30643 ;; This function calls:
 30644 ;;		Nothing
 30645 ;; This function is called by:
 30646 ;;		_I2C1_Poller
 30647 ;; This function uses a non-reentrant model
 30648 ;;
 30649                           
 30650                           	psect	text139
 30651  00975C                     __ptext139:
 30652                           	callstack 0
 30653  00975C                     _I2C1_MasterWaitForEvent:
 30654                           	callstack 18
 30655                           
 30656                           ; BSR set to: 2
 30657                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 30658                           
 30659                           ; BSR set to: 2
 30660                           ;incstack = 0
 30661                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 30662  00975C  010E               	movlb	14	; () banked
 30663  00975E  B1CD               	btfsc	205,0,b	;volatile
 30664  009760  0012               	return	
 30665  009762  D7FC               	goto	__ptext139
 30666  009764                     __end_of_I2C1_MasterWaitForEvent:
 30667                           	callstack 0
 30668                           
 30669 ;; *************** function _I2C1_MasterFsm *****************
 30670 ;; Defined at:
 30671 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 30672 ;; Parameters:    Size  Location     Type
 30673 ;;		None
 30674 ;; Auto vars:     Size  Location     Type
 30675 ;;		None
 30676 ;; Return value:  Size  Location     Type
 30677 ;;                  1    wreg      void 
 30678 ;; Registers used:
 30679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30680 ;; Tracked objects:
 30681 ;;		On entry : 3F/E
 30682 ;;		On exit  : 3F/2
 30683 ;;		Unchanged: 0/0
 30684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30687 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30688 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30689 ;;Total ram usage:        3 bytes
 30690 ;; Hardware stack levels used: 1
 30691 ;; Hardware stack levels required when called: 8
 30692 ;; This function calls:
 30693 ;;		_I2C1_DO_ADDRESS_NACK
 30694 ;;		_I2C1_DO_IDLE
 30695 ;;		_I2C1_DO_RCEN
 30696 ;;		_I2C1_DO_RESET
 30697 ;;		_I2C1_DO_RX
 30698 ;;		_I2C1_DO_RX_ACK
 30699 ;;		_I2C1_DO_RX_NACK_RESTART
 30700 ;;		_I2C1_DO_RX_NACK_STOP
 30701 ;;		_I2C1_DO_SEND_ADR_READ
 30702 ;;		_I2C1_DO_SEND_ADR_WRITE
 30703 ;;		_I2C1_DO_SEND_RESTART
 30704 ;;		_I2C1_DO_SEND_RESTART_READ
 30705 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30706 ;;		_I2C1_DO_SEND_STOP
 30707 ;;		_I2C1_DO_TX
 30708 ;;		_I2C1_DO_TX_EMPTY
 30709 ;;		_I2C1_MasterClearIrq
 30710 ;;		_I2C1_MasterIsNack
 30711 ;; This function is called by:
 30712 ;;		_I2C1_Poller
 30713 ;; This function uses a non-reentrant model
 30714 ;;
 30715                           
 30716                           	psect	text140
 30717  0089E6                     __ptext140:
 30718                           	callstack 0
 30719  0089E6                     _I2C1_MasterFsm:
 30720                           	callstack 14
 30721                           
 30722                           ; BSR set to: 14
 30723                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 30724                           
 30725                           ; BSR set to: 14
 30726                           ;incstack = 0
 30727  0089E6  ECE1  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 30728                           
 30729                           ; BSR set to: 14
 30730                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 30731  0089EA  0102               	movlb	2	; () banked
 30732  0089EC  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 30733  0089EE  D007               	goto	l19797
 30734                           
 30735                           ; BSR set to: 2
 30736  0089F0  EC62  F04B         	call	_I2C1_MasterIsNack	;wreg free
 30737  0089F4  0900               	iorlw	0
 30738  0089F6  B4D8               	btfsc	status,2,c
 30739  0089F8  D002               	goto	l19797
 30740                           
 30741                           ; BSR set to: 2
 30742                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 30743  0089FA  0E0F               	movlw	15
 30744  0089FC  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30745  0089FE                     l19797:
 30746                           
 30747                           ; BSR set to: 2
 30748                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 30749  0089FE  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 30750  008A00  0D02               	mullw	2
 30751  008A02  50F3               	movf	243,w,c
 30752  008A04  0F01               	addlw	low _i2c1_fsmStateTable
 30753  008A06  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 30754  008A08  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 30755  008A0C                     	if	1	;There is more than 1 active tblptr byte
 30756  008A0C  0E0F               	movlw	high __smallconst
 30757  008A0E  6EF7               	movwf	tblptrh,c
 30758  008A10                     	endif
 30759  008A10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30760  008A10  6AF8               	clrf	tblptru,c
 30761  008A12                     	endif
 30762  008A12                     	if	0	;tblptru may be non-zero
 30763  008A12                     	endif
 30764  008A12  0009               	tblrd		*+
 30765  008A14  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 30766  008A18  0009               	tblrd		*+
 30767  008A1A  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 30768  008A1E  D801               	call	u22628
 30769  008A20  D009               	goto	u22629
 30770  008A22                     u22628:
 30771  008A22  0005               	push	
 30772  008A24  6EFA               	movwf	pclath,c
 30773  008A26  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 30774  008A28  6EFD               	movwf	tosl,c
 30775  008A2A  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 30776  008A2C  6EFE               	movwf	tosh,c
 30777  008A2E  6AFF               	clrf	tosu,c
 30778  008A30  50FA               	movf	pclath,w,c
 30779  008A32  0012               	return		;indir
 30780  008A34                     u22629:
 30781  008A34  0102               	movlb	2	; () banked
 30782  008A36  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30783                           
 30784                           ; BSR set to: 2
 30785  008A38  0012               	return		;funcret
 30786  008A3A                     __end_of_I2C1_MasterFsm:
 30787                           	callstack 0
 30788                           
 30789 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 30790 ;; Defined at:
 30791 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 30792 ;; Parameters:    Size  Location     Type
 30793 ;;		None
 30794 ;; Auto vars:     Size  Location     Type
 30795 ;;		None
 30796 ;; Return value:  Size  Location     Type
 30797 ;;                  1    wreg      enum E10442
 30798 ;; Registers used:
 30799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30800 ;; Tracked objects:
 30801 ;;		On entry : 3F/2
 30802 ;;		On exit  : 0/0
 30803 ;;		Unchanged: 0/0
 30804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30809 ;;Total ram usage:        2 bytes
 30810 ;; Hardware stack levels used: 1
 30811 ;; Hardware stack levels required when called: 7
 30812 ;; This function calls:
 30813 ;;		Absolute function
 30814 ;;		_I2C1_CallbackReturnReset
 30815 ;;		_I2C1_CallbackReturnStop
 30816 ;;		_I2C1_DO_SEND_RESTART
 30817 ;;		_I2C1_DO_SEND_STOP
 30818 ;;		_rd1RegCompleteHandler
 30819 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30820 ;;		_rd2RegCompleteHandler
 30821 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30822 ;;		_rdBlkRegCompleteHandler
 30823 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30824 ;;		_wr1RegCompleteHandler
 30825 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30826 ;;		_wr2RegCompleteHandler
 30827 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30828 ;; This function is called by:
 30829 ;;		_I2C1_MasterFsm
 30830 ;; This function uses a non-reentrant model
 30831 ;;
 30832                           
 30833                           	psect	text141
 30834  008BC8                     __ptext141:
 30835                           	callstack 0
 30836  008BC8                     _I2C1_DO_ADDRESS_NACK:
 30837                           	callstack 14
 30838                           
 30839                           ; BSR set to: 2
 30840                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 30841                           
 30842                           ; BSR set to: 2
 30843                           ;incstack = 0
 30844  008BC8  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30845                           
 30846                           ; BSR set to: 2
 30847                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 30848  008BCA  0E02               	movlw	2
 30849  008BCC  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30850                           
 30851                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 30852  008BCE  D006               	goto	l19781
 30853  008BD0                     l19771:
 30854                           
 30855                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 30856  008BD0  ECC2  F04B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30857  008BD4  0012               	return	
 30858  008BD6                     l19775:
 30859                           
 30860                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 30861  008BD6  ECBE  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 30862  008BDA  0012               	return	
 30863  008BDC                     l19781:
 30864                           
 30865                           ; BSR set to: 2
 30866  008BDC  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 30867  008BE0  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 30868  008BE4  D801               	call	u22588
 30869  008BE6  D009               	goto	u22589
 30870  008BE8                     u22588:
 30871  008BE8  0005               	push	
 30872  008BEA  6EFA               	movwf	pclath,c
 30873  008BEC  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 30874  008BEE  6EFD               	movwf	tosl,c
 30875  008BF0  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 30876  008BF2  6EFE               	movwf	tosh,c
 30877  008BF4  6AFF               	clrf	tosu,c
 30878  008BF6  50FA               	movf	pclath,w,c
 30879  008BF8  0012               	return		;indir
 30880  008BFA                     u22589:
 30881  008BFA  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 30882  008BFC  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 30883                           
 30884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30885                           ; Switch size 1, requested type "simple"
 30886                           ; Number of cases is 1, Range of values is 0 to 0
 30887                           ; switch strategies available:
 30888                           ; Name         Instructions Cycles
 30889                           ; simple_byte            4     3 (average)
 30890                           ;	Chosen strategy is simple_byte
 30891  008BFE  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 30892  008C00  0A00               	xorlw	0	; case 0
 30893  008C02  A4D8               	btfss	status,2,c
 30894  008C04  D7E8               	goto	l19775
 30895                           
 30896                           ; Switch size 1, requested type "simple"
 30897                           ; Number of cases is 2, Range of values is 2 to 3
 30898                           ; switch strategies available:
 30899                           ; Name         Instructions Cycles
 30900                           ; simple_byte            7     4 (average)
 30901                           ;	Chosen strategy is simple_byte
 30902  008C06  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 30903  008C08  0A02               	xorlw	2	; case 2
 30904  008C0A  B4D8               	btfsc	status,2,c
 30905  008C0C  D7E1               	goto	l19771
 30906  008C0E  0A01               	xorlw	1	; case 3
 30907  008C10  B4D8               	btfsc	status,2,c
 30908  008C12  D7DE               	goto	l19771
 30909  008C14  D7E0               	goto	l19775
 30910  008C16                     __end_of_I2C1_DO_ADDRESS_NACK:
 30911                           	callstack 0
 30912                           
 30913 ;; *************** function _I2C1_DO_RESET *****************
 30914 ;; Defined at:
 30915 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 30916 ;; Parameters:    Size  Location     Type
 30917 ;;		None
 30918 ;; Auto vars:     Size  Location     Type
 30919 ;;		None
 30920 ;; Return value:  Size  Location     Type
 30921 ;;                  1    wreg      enum E10442
 30922 ;; Registers used:
 30923 ;;		wreg, status,2
 30924 ;; Tracked objects:
 30925 ;;		On entry : 3F/2
 30926 ;;		On exit  : 3F/2
 30927 ;;		Unchanged: 0/0
 30928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30933 ;;Total ram usage:        0 bytes
 30934 ;; Hardware stack levels used: 1
 30935 ;; Hardware stack levels required when called: 4
 30936 ;; This function calls:
 30937 ;;		Nothing
 30938 ;; This function is called by:
 30939 ;;		_I2C1_MasterFsm
 30940 ;; This function uses a non-reentrant model
 30941 ;;
 30942                           
 30943                           	psect	text142
 30944  009736                     __ptext142:
 30945                           	callstack 0
 30946  009736                     _I2C1_DO_RESET:
 30947                           	callstack 17
 30948                           
 30949                           ; BSR set to: 2
 30950                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 30951                           
 30952                           ;incstack = 0
 30953  009736  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30954                           
 30955                           ; BSR set to: 2
 30956                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 30957  009738  0E00               	movlw	0
 30958  00973A  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30959                           
 30960                           ; BSR set to: 2
 30961                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 30962  00973C  0E0E               	movlw	14
 30963                           
 30964                           ; BSR set to: 2
 30965  00973E  0012               	return		;funcret
 30966  009740                     __end_of_I2C1_DO_RESET:
 30967                           	callstack 0
 30968                           
 30969 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 30970 ;; Defined at:
 30971 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 30972 ;; Parameters:    Size  Location     Type
 30973 ;;		None
 30974 ;; Auto vars:     Size  Location     Type
 30975 ;;		None
 30976 ;; Return value:  Size  Location     Type
 30977 ;;                  1    wreg      enum E10442
 30978 ;; Registers used:
 30979 ;;		wreg, cstack
 30980 ;; Tracked objects:
 30981 ;;		On entry : 0/2
 30982 ;;		On exit  : 0/0
 30983 ;;		Unchanged: 0/0
 30984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30989 ;;Total ram usage:        0 bytes
 30990 ;; Hardware stack levels used: 1
 30991 ;; Hardware stack levels required when called: 5
 30992 ;; This function calls:
 30993 ;;		_I2C1_MasterSendNack
 30994 ;; This function is called by:
 30995 ;;		_I2C1_DO_RX
 30996 ;;		_I2C1_MasterFsm
 30997 ;; This function uses a non-reentrant model
 30998 ;;
 30999                           
 31000                           	psect	text143
 31001  009764                     __ptext143:
 31002                           	callstack 0
 31003  009764                     _I2C1_DO_RX_NACK_RESTART:
 31004                           	callstack 16
 31005                           
 31006                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 31007                           
 31008                           ; BSR set to: 2
 31009                           ;incstack = 0
 31010  009764  ECDE  F04B         	call	_I2C1_MasterSendNack	;wreg free
 31011                           
 31012                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 31013  009768  0E09               	movlw	9
 31014  00976A  0012               	return		;funcret
 31015  00976C                     __end_of_I2C1_DO_RX_NACK_RESTART:
 31016                           	callstack 0
 31017                           
 31018 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 31019 ;; Defined at:
 31020 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 31021 ;; Parameters:    Size  Location     Type
 31022 ;;		None
 31023 ;; Auto vars:     Size  Location     Type
 31024 ;;		None
 31025 ;; Return value:  Size  Location     Type
 31026 ;;                  1    wreg      enum E10442
 31027 ;; Registers used:
 31028 ;;		wreg, cstack
 31029 ;; Tracked objects:
 31030 ;;		On entry : 0/2
 31031 ;;		On exit  : 0/0
 31032 ;;		Unchanged: 0/0
 31033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31038 ;;Total ram usage:        0 bytes
 31039 ;; Hardware stack levels used: 1
 31040 ;; Hardware stack levels required when called: 5
 31041 ;; This function calls:
 31042 ;;		_I2C1_MasterSendNack
 31043 ;; This function is called by:
 31044 ;;		_I2C1_DO_RX
 31045 ;;		_I2C1_MasterFsm
 31046 ;; This function uses a non-reentrant model
 31047 ;;
 31048                           
 31049                           	psect	text144
 31050  00976C                     __ptext144:
 31051                           	callstack 0
 31052  00976C                     _I2C1_DO_RX_NACK_STOP:
 31053                           	callstack 16
 31054                           
 31055                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 31056                           
 31057                           ;incstack = 0
 31058  00976C  ECDE  F04B         	call	_I2C1_MasterSendNack	;wreg free
 31059                           
 31060                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 31061  009770  0E0A               	movlw	10
 31062  009772  0012               	return		;funcret
 31063  009774                     __end_of_I2C1_DO_RX_NACK_STOP:
 31064                           	callstack 0
 31065                           
 31066 ;; *************** function _I2C1_DO_RX_ACK *****************
 31067 ;; Defined at:
 31068 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 31069 ;; Parameters:    Size  Location     Type
 31070 ;;		None
 31071 ;; Auto vars:     Size  Location     Type
 31072 ;;		None
 31073 ;; Return value:  Size  Location     Type
 31074 ;;                  1    wreg      enum E10442
 31075 ;; Registers used:
 31076 ;;		wreg, cstack
 31077 ;; Tracked objects:
 31078 ;;		On entry : 3F/2
 31079 ;;		On exit  : 3F/2
 31080 ;;		Unchanged: 3F/0
 31081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31086 ;;Total ram usage:        0 bytes
 31087 ;; Hardware stack levels used: 1
 31088 ;; Hardware stack levels required when called: 5
 31089 ;; This function calls:
 31090 ;;		_I2C1_MasterSendAck
 31091 ;; This function is called by:
 31092 ;;		_I2C1_MasterFsm
 31093 ;; This function uses a non-reentrant model
 31094 ;;
 31095                           
 31096                           	psect	text145
 31097  009774                     __ptext145:
 31098                           	callstack 0
 31099  009774                     _I2C1_DO_RX_ACK:
 31100                           	callstack 16
 31101                           
 31102                           ; BSR set to: 2
 31103                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 31104                           
 31105                           ;incstack = 0
 31106  009774  ECDB  F04B         	call	_I2C1_MasterSendAck	;wreg free
 31107                           
 31108                           ; BSR set to: 2
 31109                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 31110  009778  0E05               	movlw	5
 31111                           
 31112                           ; BSR set to: 2
 31113  00977A  0012               	return		;funcret
 31114  00977C                     __end_of_I2C1_DO_RX_ACK:
 31115                           	callstack 0
 31116                           
 31117 ;; *************** function _I2C1_DO_SEND_STOP *****************
 31118 ;; Defined at:
 31119 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 31120 ;; Parameters:    Size  Location     Type
 31121 ;;		None
 31122 ;; Auto vars:     Size  Location     Type
 31123 ;;		None
 31124 ;; Return value:  Size  Location     Type
 31125 ;;                  1    wreg      enum E10442
 31126 ;; Registers used:
 31127 ;;		wreg, cstack
 31128 ;; Tracked objects:
 31129 ;;		On entry : 0/2
 31130 ;;		On exit  : 0/0
 31131 ;;		Unchanged: 0/0
 31132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31137 ;;Total ram usage:        0 bytes
 31138 ;; Hardware stack levels used: 1
 31139 ;; Hardware stack levels required when called: 5
 31140 ;; This function calls:
 31141 ;;		_I2C1_MasterStop
 31142 ;; This function is called by:
 31143 ;;		_I2C1_DO_TX
 31144 ;;		_I2C1_DO_TX_EMPTY
 31145 ;;		_I2C1_DO_ADDRESS_NACK
 31146 ;;		_I2C1_MasterFsm
 31147 ;; This function uses a non-reentrant model
 31148 ;;
 31149                           
 31150                           	psect	text146
 31151  00977C                     __ptext146:
 31152                           	callstack 0
 31153  00977C                     _I2C1_DO_SEND_STOP:
 31154                           	callstack 15
 31155                           
 31156                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 31157                           
 31158                           ; BSR set to: 2
 31159                           ;incstack = 0
 31160  00977C  ECF9  F04B         	call	_I2C1_MasterStop	;wreg free
 31161                           
 31162                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 31163  009780  0E00               	movlw	0
 31164  009782  0012               	return		;funcret
 31165  009784                     __end_of_I2C1_DO_SEND_STOP:
 31166                           	callstack 0
 31167                           
 31168 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 31169 ;; Defined at:
 31170 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 31171 ;; Parameters:    Size  Location     Type
 31172 ;;		None
 31173 ;; Auto vars:     Size  Location     Type
 31174 ;;		None
 31175 ;; Return value:  Size  Location     Type
 31176 ;;                  1    wreg      enum E10442
 31177 ;; Registers used:
 31178 ;;		wreg, cstack
 31179 ;; Tracked objects:
 31180 ;;		On entry : 0/2
 31181 ;;		On exit  : 0/0
 31182 ;;		Unchanged: 0/0
 31183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31188 ;;Total ram usage:        0 bytes
 31189 ;; Hardware stack levels used: 1
 31190 ;; Hardware stack levels required when called: 5
 31191 ;; This function calls:
 31192 ;;		_I2C1_MasterEnableRestart
 31193 ;; This function is called by:
 31194 ;;		_I2C1_DO_TX_EMPTY
 31195 ;;		_I2C1_DO_ADDRESS_NACK
 31196 ;;		_I2C1_MasterFsm
 31197 ;; This function uses a non-reentrant model
 31198 ;;
 31199                           
 31200                           	psect	text147
 31201  009784                     __ptext147:
 31202                           	callstack 0
 31203  009784                     _I2C1_DO_SEND_RESTART:
 31204                           	callstack 15
 31205                           
 31206                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 31207                           
 31208                           ;incstack = 0
 31209  009784  ECFB  F04B         	call	_I2C1_MasterEnableRestart	;wreg free
 31210                           
 31211                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 31212  009788  0E01               	movlw	1
 31213  00978A  0012               	return		;funcret
 31214  00978C                     __end_of_I2C1_DO_SEND_RESTART:
 31215                           	callstack 0
 31216                           
 31217 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 31218 ;; Defined at:
 31219 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 31220 ;; Parameters:    Size  Location     Type
 31221 ;;		None
 31222 ;; Auto vars:     Size  Location     Type
 31223 ;;		None
 31224 ;; Return value:  Size  Location     Type
 31225 ;;                  1    wreg      enum E10442
 31226 ;; Registers used:
 31227 ;;		wreg, cstack
 31228 ;; Tracked objects:
 31229 ;;		On entry : 0/2
 31230 ;;		On exit  : 0/0
 31231 ;;		Unchanged: 0/0
 31232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31237 ;;Total ram usage:        0 bytes
 31238 ;; Hardware stack levels used: 1
 31239 ;; Hardware stack levels required when called: 5
 31240 ;; This function calls:
 31241 ;;		_I2C1_MasterEnableRestart
 31242 ;; This function is called by:
 31243 ;;		_I2C1_DO_TX
 31244 ;;		_I2C1_MasterFsm
 31245 ;; This function uses a non-reentrant model
 31246 ;;
 31247                           
 31248                           	psect	text148
 31249  00978C                     __ptext148:
 31250                           	callstack 0
 31251  00978C                     _I2C1_DO_SEND_RESTART_WRITE:
 31252                           	callstack 15
 31253                           
 31254                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 31255                           
 31256                           ;incstack = 0
 31257  00978C  ECFB  F04B         	call	_I2C1_MasterEnableRestart	;wreg free
 31258                           
 31259                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 31260  009790  0E02               	movlw	2
 31261  009792  0012               	return		;funcret
 31262  009794                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 31263                           	callstack 0
 31264                           
 31265 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 31266 ;; Defined at:
 31267 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 31268 ;; Parameters:    Size  Location     Type
 31269 ;;		None
 31270 ;; Auto vars:     Size  Location     Type
 31271 ;;		None
 31272 ;; Return value:  Size  Location     Type
 31273 ;;                  1    wreg      enum E10442
 31274 ;; Registers used:
 31275 ;;		wreg, cstack
 31276 ;; Tracked objects:
 31277 ;;		On entry : 0/2
 31278 ;;		On exit  : 0/0
 31279 ;;		Unchanged: 0/0
 31280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31285 ;;Total ram usage:        0 bytes
 31286 ;; Hardware stack levels used: 1
 31287 ;; Hardware stack levels required when called: 5
 31288 ;; This function calls:
 31289 ;;		_I2C1_MasterEnableRestart
 31290 ;; This function is called by:
 31291 ;;		_I2C1_DO_TX
 31292 ;;		_I2C1_MasterFsm
 31293 ;; This function uses a non-reentrant model
 31294 ;;
 31295                           
 31296                           	psect	text149
 31297  009794                     __ptext149:
 31298                           	callstack 0
 31299  009794                     _I2C1_DO_SEND_RESTART_READ:
 31300                           	callstack 15
 31301                           
 31302                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 31303                           
 31304                           ;incstack = 0
 31305  009794  ECFB  F04B         	call	_I2C1_MasterEnableRestart	;wreg free
 31306                           
 31307                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 31308  009798  0E01               	movlw	1
 31309  00979A  0012               	return		;funcret
 31310  00979C                     __end_of_I2C1_DO_SEND_RESTART_READ:
 31311                           	callstack 0
 31312                           
 31313 ;; *************** function _I2C1_DO_RCEN *****************
 31314 ;; Defined at:
 31315 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 31316 ;; Parameters:    Size  Location     Type
 31317 ;;		None
 31318 ;; Auto vars:     Size  Location     Type
 31319 ;;		None
 31320 ;; Return value:  Size  Location     Type
 31321 ;;                  1    wreg      enum E10442
 31322 ;; Registers used:
 31323 ;;		wreg, cstack
 31324 ;; Tracked objects:
 31325 ;;		On entry : 3F/2
 31326 ;;		On exit  : 3F/2
 31327 ;;		Unchanged: 0/0
 31328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31333 ;;Total ram usage:        0 bytes
 31334 ;; Hardware stack levels used: 1
 31335 ;; Hardware stack levels required when called: 5
 31336 ;; This function calls:
 31337 ;;		_I2C1_MasterStartRx
 31338 ;; This function is called by:
 31339 ;;		_I2C1_MasterFsm
 31340 ;; This function uses a non-reentrant model
 31341 ;;
 31342                           
 31343                           	psect	text150
 31344  009740                     __ptext150:
 31345                           	callstack 0
 31346  009740                     _I2C1_DO_RCEN:
 31347                           	callstack 16
 31348                           
 31349                           ; BSR set to: 2
 31350                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 31351                           
 31352                           ;incstack = 0
 31353  009740  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31354                           
 31355                           ; BSR set to: 2
 31356                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 31357  009742  ECF3  F04B         	call	_I2C1_MasterStartRx	;wreg free
 31358                           
 31359                           ; BSR set to: 2
 31360                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 31361  009746  0E04               	movlw	4
 31362                           
 31363                           ; BSR set to: 2
 31364  009748  0012               	return		;funcret
 31365  00974A                     __end_of_I2C1_DO_RCEN:
 31366                           	callstack 0
 31367                           
 31368 ;; *************** function _I2C1_DO_RX *****************
 31369 ;; Defined at:
 31370 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 31371 ;; Parameters:    Size  Location     Type
 31372 ;;		None
 31373 ;; Auto vars:     Size  Location     Type
 31374 ;;		None
 31375 ;; Return value:  Size  Location     Type
 31376 ;;                  1    wreg      enum E10442
 31377 ;; Registers used:
 31378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31379 ;; Tracked objects:
 31380 ;;		On entry : 3F/2
 31381 ;;		On exit  : 0/0
 31382 ;;		Unchanged: 0/0
 31383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31388 ;;Total ram usage:        2 bytes
 31389 ;; Hardware stack levels used: 1
 31390 ;; Hardware stack levels required when called: 7
 31391 ;; This function calls:
 31392 ;;		Absolute function
 31393 ;;		_I2C1_CallbackReturnReset
 31394 ;;		_I2C1_CallbackReturnStop
 31395 ;;		_I2C1_DO_RX_NACK_RESTART
 31396 ;;		_I2C1_DO_RX_NACK_STOP
 31397 ;;		_I2C1_MasterGetRxData
 31398 ;;		_I2C1_MasterSendAck
 31399 ;;		_rd1RegCompleteHandler
 31400 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31401 ;;		_rd2RegCompleteHandler
 31402 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31403 ;;		_rdBlkRegCompleteHandler
 31404 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31405 ;;		_wr1RegCompleteHandler
 31406 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31407 ;;		_wr2RegCompleteHandler
 31408 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31409 ;; This function is called by:
 31410 ;;		_I2C1_MasterFsm
 31411 ;; This function uses a non-reentrant model
 31412 ;;
 31413                           
 31414                           	psect	text151
 31415  0080A4                     __ptext151:
 31416                           	callstack 0
 31417  0080A4                     _I2C1_DO_RX:
 31418                           	callstack 14
 31419                           
 31420                           ; BSR set to: 2
 31421                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 31422                           
 31423                           ; BSR set to: 2
 31424                           ;incstack = 0
 31425  0080A4  ECF1  F04B         	call	_I2C1_MasterGetRxData	;wreg free
 31426  0080A8  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 31427  0080AC  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 31428  0080B0  6EDF               	movwf	indf2,c
 31429                           
 31430                           ; BSR set to: 2
 31431  0080B2  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 31432  0080B4  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 31433                           
 31434                           ; BSR set to: 2
 31435                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 31436  0080B6  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 31437  0080B8  A0D8               	btfss	status,0,c
 31438  0080BA  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 31439  0080BC  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 31440  0080BE  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 31441  0080C0  B4D8               	btfsc	status,2,c
 31442  0080C2  D004               	goto	l690
 31443                           
 31444                           ; BSR set to: 2
 31445                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 31446  0080C4  ECDB  F04B         	call	_I2C1_MasterSendAck	;wreg free
 31447                           
 31448                           ; BSR set to: 2
 31449                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 31450  0080C8  0E05               	movlw	5
 31451  0080CA  0012               	return	
 31452  0080CC                     l690:
 31453                           
 31454                           ; BSR set to: 2
 31455                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 31456  0080CC  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31457                           
 31458                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 31459  0080CE  D006               	goto	l19715
 31460  0080D0                     l19705:
 31461                           
 31462                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 31463  0080D0  ECB2  F04B         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 31464  0080D4  0012               	return	
 31465  0080D6                     l19709:
 31466                           
 31467                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 31468  0080D6  ECB6  F04B         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 31469  0080DA  0012               	return	
 31470  0080DC                     l19715:
 31471                           
 31472                           ; BSR set to: 2
 31473  0080DC  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 31474  0080E0  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 31475  0080E4  D801               	call	u22568
 31476  0080E6  D009               	goto	u22569
 31477  0080E8                     u22568:
 31478  0080E8  0005               	push	
 31479  0080EA  6EFA               	movwf	pclath,c
 31480  0080EC  513C               	movf	_I2C1_Status& (0+255),w,b
 31481  0080EE  6EFD               	movwf	tosl,c
 31482  0080F0  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31483  0080F2  6EFE               	movwf	tosh,c
 31484  0080F4  6AFF               	clrf	tosu,c
 31485  0080F6  50FA               	movf	pclath,w,c
 31486  0080F8  0012               	return		;indir
 31487  0080FA                     u22569:
 31488  0080FA  6E1B               	movwf	??_I2C1_DO_RX^0,c
 31489  0080FC  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 31490                           
 31491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31492                           ; Switch size 1, requested type "simple"
 31493                           ; Number of cases is 1, Range of values is 0 to 0
 31494                           ; switch strategies available:
 31495                           ; Name         Instructions Cycles
 31496                           ; simple_byte            4     3 (average)
 31497                           ;	Chosen strategy is simple_byte
 31498  0080FE  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 31499  008100  0A00               	xorlw	0	; case 0
 31500  008102  A4D8               	btfss	status,2,c
 31501  008104  D7E8               	goto	l19709
 31502                           
 31503                           ; Switch size 1, requested type "simple"
 31504                           ; Number of cases is 4, Range of values is 1 to 4
 31505                           ; switch strategies available:
 31506                           ; Name         Instructions Cycles
 31507                           ; simple_byte           13     7 (average)
 31508                           ;	Chosen strategy is simple_byte
 31509  008106  501B               	movf	??_I2C1_DO_RX^0,w,c
 31510  008108  0A01               	xorlw	1	; case 1
 31511  00810A  B4D8               	btfsc	status,2,c
 31512  00810C  D7E4               	goto	l19709
 31513  00810E  0A03               	xorlw	3	; case 2
 31514  008110  B4D8               	btfsc	status,2,c
 31515  008112  D7DE               	goto	l19705
 31516  008114  0A01               	xorlw	1	; case 3
 31517  008116  B4D8               	btfsc	status,2,c
 31518  008118  D7DB               	goto	l19705
 31519  00811A  0A07               	xorlw	7	; case 4
 31520  00811C  D7DC               	goto	l19709
 31521  00811E                     __end_of_I2C1_DO_RX:
 31522                           	callstack 0
 31523                           
 31524 ;; *************** function _I2C1_DO_TX *****************
 31525 ;; Defined at:
 31526 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 31527 ;; Parameters:    Size  Location     Type
 31528 ;;		None
 31529 ;; Auto vars:     Size  Location     Type
 31530 ;;		None
 31531 ;; Return value:  Size  Location     Type
 31532 ;;                  1    wreg      enum E10442
 31533 ;; Registers used:
 31534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31535 ;; Tracked objects:
 31536 ;;		On entry : 3F/2
 31537 ;;		On exit  : 0/0
 31538 ;;		Unchanged: 0/0
 31539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31544 ;;Total ram usage:        2 bytes
 31545 ;; Hardware stack levels used: 1
 31546 ;; Hardware stack levels required when called: 7
 31547 ;; This function calls:
 31548 ;;		Absolute function
 31549 ;;		_I2C1_CallbackReturnReset
 31550 ;;		_I2C1_CallbackReturnStop
 31551 ;;		_I2C1_DO_SEND_RESTART_READ
 31552 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31553 ;;		_I2C1_DO_SEND_STOP
 31554 ;;		_I2C1_MasterIsNack
 31555 ;;		_I2C1_MasterSendTxData
 31556 ;;		_rd1RegCompleteHandler
 31557 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31558 ;;		_rd2RegCompleteHandler
 31559 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31560 ;;		_rdBlkRegCompleteHandler
 31561 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31562 ;;		_wr1RegCompleteHandler
 31563 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31564 ;;		_wr2RegCompleteHandler
 31565 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31566 ;; This function is called by:
 31567 ;;		_I2C1_MasterFsm
 31568 ;; This function uses a non-reentrant model
 31569 ;;
 31570                           
 31571                           	psect	text152
 31572  007C04                     __ptext152:
 31573                           	callstack 0
 31574  007C04                     _I2C1_DO_TX:
 31575                           	callstack 14
 31576                           
 31577                           ; BSR set to: 2
 31578                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 31579                           
 31580                           ;incstack = 0
 31581  007C04  EC62  F04B         	call	_I2C1_MasterIsNack	;wreg free
 31582  007C08  0900               	iorlw	0
 31583  007C0A  A4D8               	btfss	status,2,c
 31584  007C0C  D00A               	goto	l19675
 31585  007C0E  D02A               	goto	l674
 31586  007C10                     l19661:
 31587                           
 31588                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 31589  007C10  ECCA  F04B         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 31590  007C14  0012               	return	
 31591  007C16                     l19665:
 31592                           
 31593                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 31594  007C16  ECC6  F04B         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 31595  007C1A  0012               	return	
 31596  007C1C                     l19669:
 31597                           
 31598                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 31599  007C1C  ECBE  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 31600  007C20  0012               	return	
 31601  007C22                     l19675:
 31602                           
 31603                           ; BSR set to: 2
 31604  007C22  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 31605  007C26  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 31606  007C2A  D801               	call	u22538
 31607  007C2C  D009               	goto	u22539
 31608  007C2E                     u22538:
 31609  007C2E  0005               	push	
 31610  007C30  6EFA               	movwf	pclath,c
 31611  007C32  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 31612  007C34  6EFD               	movwf	tosl,c
 31613  007C36  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 31614  007C38  6EFE               	movwf	tosh,c
 31615  007C3A  6AFF               	clrf	tosu,c
 31616  007C3C  50FA               	movf	pclath,w,c
 31617  007C3E  0012               	return		;indir
 31618  007C40                     u22539:
 31619  007C40  6E1B               	movwf	??_I2C1_DO_TX^0,c
 31620  007C42  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 31621                           
 31622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31623                           ; Switch size 1, requested type "simple"
 31624                           ; Number of cases is 1, Range of values is 0 to 0
 31625                           ; switch strategies available:
 31626                           ; Name         Instructions Cycles
 31627                           ; simple_byte            4     3 (average)
 31628                           ;	Chosen strategy is simple_byte
 31629  007C44  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 31630  007C46  0A00               	xorlw	0	; case 0
 31631  007C48  A4D8               	btfss	status,2,c
 31632  007C4A  D7E8               	goto	l19669
 31633                           
 31634                           ; Switch size 1, requested type "simple"
 31635                           ; Number of cases is 4, Range of values is 1 to 4
 31636                           ; switch strategies available:
 31637                           ; Name         Instructions Cycles
 31638                           ; simple_byte           13     7 (average)
 31639                           ;	Chosen strategy is simple_byte
 31640  007C4C  501B               	movf	??_I2C1_DO_TX^0,w,c
 31641  007C4E  0A01               	xorlw	1	; case 1
 31642  007C50  B4D8               	btfsc	status,2,c
 31643  007C52  D7E4               	goto	l19669
 31644  007C54  0A03               	xorlw	3	; case 2
 31645  007C56  B4D8               	btfsc	status,2,c
 31646  007C58  D7DB               	goto	l19661
 31647  007C5A  0A01               	xorlw	1	; case 3
 31648  007C5C  B4D8               	btfsc	status,2,c
 31649  007C5E  D7DB               	goto	l19665
 31650  007C60  0A07               	xorlw	7	; case 4
 31651  007C62  D7DC               	goto	l19669
 31652  007C64                     l674:
 31653                           
 31654                           ; BSR set to: 2
 31655                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 31656  007C64  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31657                           
 31658                           ; BSR set to: 2
 31659                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 31660  007C66  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 31661  007C6A  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 31662  007C6E  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 31663  007C70  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 31664  007C72  50DF               	movf	indf2,w,c
 31665  007C74  ECCE  F04B         	call	_I2C1_MasterSendTxData
 31666                           
 31667                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 31668  007C78  0102               	movlb	2	; () banked
 31669  007C7A  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 31670  007C7C  A0D8               	btfss	status,0,c
 31671  007C7E  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 31672  007C80  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 31673  007C82  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 31674  007C84  A4D8               	btfss	status,2,c
 31675  007C86  D002               	goto	l19683
 31676                           
 31677                           ; BSR set to: 2
 31678  007C88  0E06               	movlw	6
 31679  007C8A  0012               	return	
 31680  007C8C                     l19683:
 31681                           
 31682                           ; BSR set to: 2
 31683  007C8C  0E03               	movlw	3
 31684  007C8E  0012               	return		;funcret
 31685  007C90                     __end_of_I2C1_DO_TX:
 31686                           	callstack 0
 31687                           
 31688 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 31689 ;; Defined at:
 31690 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 31691 ;; Parameters:    Size  Location     Type
 31692 ;;		None
 31693 ;; Auto vars:     Size  Location     Type
 31694 ;;		None
 31695 ;; Return value:  Size  Location     Type
 31696 ;;                  1    wreg      enum E10442
 31697 ;; Registers used:
 31698 ;;		wreg, status,2, status,0, cstack
 31699 ;; Tracked objects:
 31700 ;;		On entry : 3F/2
 31701 ;;		On exit  : 0/0
 31702 ;;		Unchanged: 0/0
 31703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31708 ;;Total ram usage:        0 bytes
 31709 ;; Hardware stack levels used: 1
 31710 ;; Hardware stack levels required when called: 5
 31711 ;; This function calls:
 31712 ;;		_I2C1_MasterSendTxData
 31713 ;; This function is called by:
 31714 ;;		_I2C1_MasterFsm
 31715 ;; This function uses a non-reentrant model
 31716 ;;
 31717                           
 31718                           	psect	text153
 31719  0096A8                     __ptext153:
 31720                           	callstack 0
 31721  0096A8                     _I2C1_DO_SEND_ADR_WRITE:
 31722                           	callstack 16
 31723                           
 31724                           ; BSR set to: 2
 31725                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 31726                           
 31727                           ;incstack = 0
 31728  0096A8  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31729                           
 31730                           ; BSR set to: 2
 31731                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 31732  0096AA  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 31733  0096AC  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 31734  0096AE  ECCE  F04B         	call	_I2C1_MasterSendTxData
 31735                           
 31736                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 31737  0096B2  0E03               	movlw	3
 31738  0096B4  0012               	return		;funcret
 31739  0096B6                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 31740                           	callstack 0
 31741                           
 31742 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 31743 ;; Defined at:
 31744 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 31745 ;; Parameters:    Size  Location     Type
 31746 ;;		None
 31747 ;; Auto vars:     Size  Location     Type
 31748 ;;		None
 31749 ;; Return value:  Size  Location     Type
 31750 ;;                  1    wreg      enum E10442
 31751 ;; Registers used:
 31752 ;;		wreg, status,0, cstack
 31753 ;; Tracked objects:
 31754 ;;		On entry : 3F/2
 31755 ;;		On exit  : 0/0
 31756 ;;		Unchanged: 0/0
 31757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31762 ;;Total ram usage:        0 bytes
 31763 ;; Hardware stack levels used: 1
 31764 ;; Hardware stack levels required when called: 5
 31765 ;; This function calls:
 31766 ;;		_I2C1_MasterSendTxData
 31767 ;; This function is called by:
 31768 ;;		_I2C1_MasterFsm
 31769 ;; This function uses a non-reentrant model
 31770 ;;
 31771                           
 31772                           	psect	text154
 31773  0096B6                     __ptext154:
 31774                           	callstack 0
 31775  0096B6                     _I2C1_DO_SEND_ADR_READ:
 31776                           	callstack 16
 31777                           
 31778                           ; BSR set to: 2
 31779                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 31780                           
 31781                           ;incstack = 0
 31782  0096B6  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31783                           
 31784                           ; BSR set to: 2
 31785                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 31786  0096B8  80D8               	bsf	status,0,c
 31787  0096BA  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 31788  0096BC  ECCE  F04B         	call	_I2C1_MasterSendTxData
 31789                           
 31790                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 31791  0096C0  0E05               	movlw	5
 31792  0096C2  0012               	return		;funcret
 31793  0096C4                     __end_of_I2C1_DO_SEND_ADR_READ:
 31794                           	callstack 0
 31795                           
 31796 ;; *************** function _I2C1_DO_IDLE *****************
 31797 ;; Defined at:
 31798 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 31799 ;; Parameters:    Size  Location     Type
 31800 ;;		None
 31801 ;; Auto vars:     Size  Location     Type
 31802 ;;		None
 31803 ;; Return value:  Size  Location     Type
 31804 ;;                  1    wreg      enum E10442
 31805 ;; Registers used:
 31806 ;;		wreg, status,2
 31807 ;; Tracked objects:
 31808 ;;		On entry : 3F/2
 31809 ;;		On exit  : 3F/2
 31810 ;;		Unchanged: 0/0
 31811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31816 ;;Total ram usage:        0 bytes
 31817 ;; Hardware stack levels used: 1
 31818 ;; Hardware stack levels required when called: 4
 31819 ;; This function calls:
 31820 ;;		Nothing
 31821 ;; This function is called by:
 31822 ;;		_I2C1_MasterFsm
 31823 ;; This function uses a non-reentrant model
 31824 ;;
 31825                           
 31826                           	psect	text155
 31827  00974A                     __ptext155:
 31828                           	callstack 0
 31829  00974A                     _I2C1_DO_IDLE:
 31830                           	callstack 17
 31831                           
 31832                           ; BSR set to: 2
 31833                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 31834                           
 31835                           ;incstack = 0
 31836  00974A  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31837                           
 31838                           ; BSR set to: 2
 31839                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 31840  00974C  0E00               	movlw	0
 31841  00974E  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31842                           
 31843                           ; BSR set to: 2
 31844                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 31845  009750  0E0E               	movlw	14
 31846                           
 31847                           ; BSR set to: 2
 31848  009752  0012               	return		;funcret
 31849  009754                     __end_of_I2C1_DO_IDLE:
 31850                           	callstack 0
 31851                           
 31852 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 31853 ;; Defined at:
 31854 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 31855 ;; Parameters:    Size  Location     Type
 31856 ;;		None
 31857 ;; Auto vars:     Size  Location     Type
 31858 ;;		None
 31859 ;; Return value:  Size  Location     Type
 31860 ;;                  1    wreg      enum E10442
 31861 ;; Registers used:
 31862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31863 ;; Tracked objects:
 31864 ;;		On entry : 3F/2
 31865 ;;		On exit  : 0/0
 31866 ;;		Unchanged: 0/0
 31867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31872 ;;Total ram usage:        2 bytes
 31873 ;; Hardware stack levels used: 1
 31874 ;; Hardware stack levels required when called: 7
 31875 ;; This function calls:
 31876 ;;		Absolute function
 31877 ;;		_I2C1_CallbackReturnReset
 31878 ;;		_I2C1_CallbackReturnStop
 31879 ;;		_I2C1_DO_SEND_RESTART
 31880 ;;		_I2C1_DO_SEND_STOP
 31881 ;;		_I2C1_MasterSetIrq
 31882 ;;		_rd1RegCompleteHandler
 31883 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31884 ;;		_rd2RegCompleteHandler
 31885 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31886 ;;		_rdBlkRegCompleteHandler
 31887 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31888 ;;		_wr1RegCompleteHandler
 31889 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31890 ;;		_wr2RegCompleteHandler
 31891 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31892 ;; This function is called by:
 31893 ;;		_I2C1_MasterFsm
 31894 ;; This function uses a non-reentrant model
 31895 ;;
 31896                           
 31897                           	psect	text156
 31898  0086C0                     __ptext156:
 31899                           	callstack 0
 31900  0086C0                     _I2C1_DO_TX_EMPTY:
 31901                           	callstack 14
 31902                           
 31903                           ; BSR set to: 2
 31904                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 31905                           
 31906                           ; BSR set to: 2
 31907                           ;incstack = 0
 31908  0086C0  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31909                           
 31910                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 31911  0086C2  D00A               	goto	l19747
 31912  0086C4                     l19731:
 31913                           
 31914                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 31915  0086C4  ECC2  F04B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31916  0086C8  0012               	return	
 31917  0086CA                     l19735:
 31918                           
 31919                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 31920  0086CA  ECD8  F04B         	call	_I2C1_MasterSetIrq	;wreg free
 31921                           
 31922                           ; BSR set to: 14
 31923                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 31924  0086CE  0E03               	movlw	3
 31925  0086D0  0012               	return	
 31926  0086D2                     l19741:
 31927                           
 31928                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 31929  0086D2  ECBE  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 31930  0086D6  0012               	return	
 31931  0086D8                     l19747:
 31932                           
 31933                           ; BSR set to: 2
 31934  0086D8  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 31935  0086DC  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 31936  0086E0  D801               	call	u22578
 31937  0086E2  D009               	goto	u22579
 31938  0086E4                     u22578:
 31939  0086E4  0005               	push	
 31940  0086E6  6EFA               	movwf	pclath,c
 31941  0086E8  513C               	movf	_I2C1_Status& (0+255),w,b
 31942  0086EA  6EFD               	movwf	tosl,c
 31943  0086EC  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31944  0086EE  6EFE               	movwf	tosh,c
 31945  0086F0  6AFF               	clrf	tosu,c
 31946  0086F2  50FA               	movf	pclath,w,c
 31947  0086F4  0012               	return		;indir
 31948  0086F6                     u22579:
 31949  0086F6  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 31950  0086F8  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 31951                           
 31952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31953                           ; Switch size 1, requested type "simple"
 31954                           ; Number of cases is 1, Range of values is 0 to 0
 31955                           ; switch strategies available:
 31956                           ; Name         Instructions Cycles
 31957                           ; simple_byte            4     3 (average)
 31958                           ;	Chosen strategy is simple_byte
 31959  0086FA  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 31960  0086FC  0A00               	xorlw	0	; case 0
 31961  0086FE  A4D8               	btfss	status,2,c
 31962  008700  D7E8               	goto	l19741
 31963                           
 31964                           ; Switch size 1, requested type "simple"
 31965                           ; Number of cases is 4, Range of values is 1 to 4
 31966                           ; switch strategies available:
 31967                           ; Name         Instructions Cycles
 31968                           ; simple_byte           13     7 (average)
 31969                           ;	Chosen strategy is simple_byte
 31970  008702  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 31971  008704  0A01               	xorlw	1	; case 1
 31972  008706  B4D8               	btfsc	status,2,c
 31973  008708  D7E4               	goto	l19741
 31974  00870A  0A03               	xorlw	3	; case 2
 31975  00870C  B4D8               	btfsc	status,2,c
 31976  00870E  D7DA               	goto	l19731
 31977  008710  0A01               	xorlw	1	; case 3
 31978  008712  B4D8               	btfsc	status,2,c
 31979  008714  D7D7               	goto	l19731
 31980  008716  0A07               	xorlw	7	; case 4
 31981  008718  B4D8               	btfsc	status,2,c
 31982  00871A  D7D7               	goto	l19735
 31983  00871C  D7DA               	goto	l19741
 31984  00871E                     __end_of_I2C1_DO_TX_EMPTY:
 31985                           	callstack 0
 31986                           
 31987 ;; *************** function _I2C1_MasterSetIrq *****************
 31988 ;; Defined at:
 31989 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 31990 ;; Parameters:    Size  Location     Type
 31991 ;;		None
 31992 ;; Auto vars:     Size  Location     Type
 31993 ;;		None
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1    wreg      void 
 31996 ;; Registers used:
 31997 ;;		None
 31998 ;; Tracked objects:
 31999 ;;		On entry : 0/2
 32000 ;;		On exit  : 3F/E
 32001 ;;		Unchanged: 0/0
 32002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32007 ;;Total ram usage:        0 bytes
 32008 ;; Hardware stack levels used: 1
 32009 ;; Hardware stack levels required when called: 4
 32010 ;; This function calls:
 32011 ;;		Nothing
 32012 ;; This function is called by:
 32013 ;;		_I2C1_DO_TX_EMPTY
 32014 ;; This function uses a non-reentrant model
 32015 ;;
 32016                           
 32017                           	psect	text157
 32018  0097B0                     __ptext157:
 32019                           	callstack 0
 32020  0097B0                     _I2C1_MasterSetIrq:
 32021                           	callstack 16
 32022                           
 32023                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 32024                           
 32025                           ;incstack = 0
 32026  0097B0  010E               	movlb	14	; () banked
 32027  0097B2  81CD               	bsf	205,0,b	;volatile
 32028                           
 32029                           ; BSR set to: 14
 32030  0097B4  0012               	return		;funcret
 32031  0097B6                     __end_of_I2C1_MasterSetIrq:
 32032                           	callstack 0
 32033                           
 32034 ;; *************** function _I2C1_MasterIsNack *****************
 32035 ;; Defined at:
 32036 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 32037 ;; Parameters:    Size  Location     Type
 32038 ;;		None
 32039 ;; Auto vars:     Size  Location     Type
 32040 ;;		None
 32041 ;; Return value:  Size  Location     Type
 32042 ;;                  1    wreg      _Bool 
 32043 ;; Registers used:
 32044 ;;		wreg
 32045 ;; Tracked objects:
 32046 ;;		On entry : 3F/2
 32047 ;;		On exit  : 3F/2
 32048 ;;		Unchanged: 3F/0
 32049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32054 ;;Total ram usage:        0 bytes
 32055 ;; Hardware stack levels used: 1
 32056 ;; Hardware stack levels required when called: 4
 32057 ;; This function calls:
 32058 ;;		Nothing
 32059 ;; This function is called by:
 32060 ;;		_I2C1_MasterFsm
 32061 ;;		_I2C1_DO_TX
 32062 ;; This function uses a non-reentrant model
 32063 ;;
 32064                           
 32065                           	psect	text158
 32066  0096C4                     __ptext158:
 32067                           	callstack 0
 32068  0096C4                     _I2C1_MasterIsNack:
 32069                           	callstack 17
 32070                           
 32071                           ; BSR set to: 2
 32072                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 32073                           
 32074                           ; BSR set to: 14
 32075                           ;incstack = 0
 32076  0096C4  AC97               	btfss	151,6,c	;volatile
 32077  0096C6  D002               	goto	u22510
 32078  0096C8  0E01               	movlw	1
 32079  0096CA  0012               	return	
 32080  0096CC                     u22510:
 32081  0096CC  0E00               	movlw	0
 32082                           
 32083                           ; BSR set to: 2
 32084  0096CE  0012               	return		;funcret
 32085  0096D0                     __end_of_I2C1_MasterIsNack:
 32086                           	callstack 0
 32087                           
 32088 ;; *************** function _I2C1_MasterSendTxData *****************
 32089 ;; Defined at:
 32090 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 32091 ;; Parameters:    Size  Location     Type
 32092 ;;  data            1    wreg     unsigned char 
 32093 ;; Auto vars:     Size  Location     Type
 32094 ;;  data            1   15[COMRAM] unsigned char 
 32095 ;; Return value:  Size  Location     Type
 32096 ;;                  1    wreg      void 
 32097 ;; Registers used:
 32098 ;;		wreg
 32099 ;; Tracked objects:
 32100 ;;		On entry : 3F/2
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32108 ;;Total ram usage:        1 bytes
 32109 ;; Hardware stack levels used: 1
 32110 ;; Hardware stack levels required when called: 4
 32111 ;; This function calls:
 32112 ;;		Nothing
 32113 ;; This function is called by:
 32114 ;;		_I2C1_DO_SEND_ADR_READ
 32115 ;;		_I2C1_DO_SEND_ADR_WRITE
 32116 ;;		_I2C1_DO_TX
 32117 ;; This function uses a non-reentrant model
 32118 ;;
 32119                           
 32120                           	psect	text159
 32121  00979C                     __ptext159:
 32122                           	callstack 0
 32123  00979C                     _I2C1_MasterSendTxData:
 32124                           	callstack 16
 32125                           
 32126                           ; BSR set to: 2
 32127                           ;incstack = 0
 32128                           ;I2C1_MasterSendTxData@data stored from wreg
 32129  00979C  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 32130                           
 32131                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 32132  00979E  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 32133  0097A2  0012               	return		;funcret
 32134  0097A4                     __end_of_I2C1_MasterSendTxData:
 32135                           	callstack 0
 32136                           
 32137 ;; *************** function _I2C1_MasterSendAck *****************
 32138 ;; Defined at:
 32139 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 32140 ;; Parameters:    Size  Location     Type
 32141 ;;		None
 32142 ;; Auto vars:     Size  Location     Type
 32143 ;;		None
 32144 ;; Return value:  Size  Location     Type
 32145 ;;                  1    wreg      void 
 32146 ;; Registers used:
 32147 ;;		None
 32148 ;; Tracked objects:
 32149 ;;		On entry : 3F/2
 32150 ;;		On exit  : 3F/2
 32151 ;;		Unchanged: 3F/0
 32152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32157 ;;Total ram usage:        0 bytes
 32158 ;; Hardware stack levels used: 1
 32159 ;; Hardware stack levels required when called: 4
 32160 ;; This function calls:
 32161 ;;		Nothing
 32162 ;; This function is called by:
 32163 ;;		_I2C1_DO_RX
 32164 ;;		_I2C1_DO_RX_ACK
 32165 ;; This function uses a non-reentrant model
 32166 ;;
 32167                           
 32168                           	psect	text160
 32169  0097B6                     __ptext160:
 32170                           	callstack 0
 32171  0097B6                     _I2C1_MasterSendAck:
 32172                           	callstack 16
 32173                           
 32174                           ; BSR set to: 2
 32175                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 32176                           
 32177                           ;incstack = 0
 32178  0097B6  9A97               	bcf	151,5,c	;volatile
 32179                           
 32180                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 32181  0097B8  8897               	bsf	151,4,c	;volatile
 32182                           
 32183                           ; BSR set to: 2
 32184  0097BA  0012               	return		;funcret
 32185  0097BC                     __end_of_I2C1_MasterSendAck:
 32186                           	callstack 0
 32187                           
 32188 ;; *************** function _I2C1_MasterGetRxData *****************
 32189 ;; Defined at:
 32190 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 32191 ;; Parameters:    Size  Location     Type
 32192 ;;		None
 32193 ;; Auto vars:     Size  Location     Type
 32194 ;;		None
 32195 ;; Return value:  Size  Location     Type
 32196 ;;                  1    wreg      unsigned char 
 32197 ;; Registers used:
 32198 ;;		wreg, status,2
 32199 ;; Tracked objects:
 32200 ;;		On entry : 3F/2
 32201 ;;		On exit  : 3F/2
 32202 ;;		Unchanged: 3F/0
 32203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32208 ;;Total ram usage:        0 bytes
 32209 ;; Hardware stack levels used: 1
 32210 ;; Hardware stack levels required when called: 4
 32211 ;; This function calls:
 32212 ;;		Nothing
 32213 ;; This function is called by:
 32214 ;;		_I2C1_DO_RX
 32215 ;; This function uses a non-reentrant model
 32216 ;;
 32217                           
 32218                           	psect	text161
 32219  0097E2                     __ptext161:
 32220                           	callstack 0
 32221  0097E2                     _I2C1_MasterGetRxData:
 32222                           	callstack 16
 32223                           
 32224                           ; BSR set to: 2
 32225                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 32226                           
 32227                           ; BSR set to: 2
 32228                           ;incstack = 0
 32229  0097E2  5092               	movf	146,w,c	;volatile
 32230                           
 32231                           ; BSR set to: 2
 32232  0097E4  0012               	return		;funcret
 32233  0097E6                     __end_of_I2C1_MasterGetRxData:
 32234                           	callstack 0
 32235                           
 32236 ;; *************** function _I2C1_MasterSendNack *****************
 32237 ;; Defined at:
 32238 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 32239 ;; Parameters:    Size  Location     Type
 32240 ;;		None
 32241 ;; Auto vars:     Size  Location     Type
 32242 ;;		None
 32243 ;; Return value:  Size  Location     Type
 32244 ;;                  1    wreg      void 
 32245 ;; Registers used:
 32246 ;;		None
 32247 ;; Tracked objects:
 32248 ;;		On entry : 0/2
 32249 ;;		On exit  : 0/0
 32250 ;;		Unchanged: 0/0
 32251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32256 ;;Total ram usage:        0 bytes
 32257 ;; Hardware stack levels used: 1
 32258 ;; Hardware stack levels required when called: 4
 32259 ;; This function calls:
 32260 ;;		Nothing
 32261 ;; This function is called by:
 32262 ;;		_I2C1_DO_RX_NACK_STOP
 32263 ;;		_I2C1_DO_RX_NACK_RESTART
 32264 ;; This function uses a non-reentrant model
 32265 ;;
 32266                           
 32267                           	psect	text162
 32268  0097BC                     __ptext162:
 32269                           	callstack 0
 32270  0097BC                     _I2C1_MasterSendNack:
 32271                           	callstack 16
 32272                           
 32273                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 32274                           
 32275                           ; BSR set to: 2
 32276                           ;incstack = 0
 32277  0097BC  8A97               	bsf	151,5,c	;volatile
 32278                           
 32279                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 32280  0097BE  8897               	bsf	151,4,c	;volatile
 32281  0097C0  0012               	return		;funcret
 32282  0097C2                     __end_of_I2C1_MasterSendNack:
 32283                           	callstack 0
 32284                           
 32285 ;; *************** function _I2C1_MasterStartRx *****************
 32286 ;; Defined at:
 32287 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 32288 ;; Parameters:    Size  Location     Type
 32289 ;;		None
 32290 ;; Auto vars:     Size  Location     Type
 32291 ;;		None
 32292 ;; Return value:  Size  Location     Type
 32293 ;;                  1    wreg      void 
 32294 ;; Registers used:
 32295 ;;		None
 32296 ;; Tracked objects:
 32297 ;;		On entry : 3F/2
 32298 ;;		On exit  : 3F/2
 32299 ;;		Unchanged: 3F/0
 32300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32305 ;;Total ram usage:        0 bytes
 32306 ;; Hardware stack levels used: 1
 32307 ;; Hardware stack levels required when called: 4
 32308 ;; This function calls:
 32309 ;;		Nothing
 32310 ;; This function is called by:
 32311 ;;		_I2C1_DO_RCEN
 32312 ;; This function uses a non-reentrant model
 32313 ;;
 32314                           
 32315                           	psect	text163
 32316  0097E6                     __ptext163:
 32317                           	callstack 0
 32318  0097E6                     _I2C1_MasterStartRx:
 32319                           	callstack 16
 32320                           
 32321                           ; BSR set to: 2
 32322                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 32323                           
 32324                           ;incstack = 0
 32325  0097E6  8697               	bsf	151,3,c	;volatile
 32326                           
 32327                           ; BSR set to: 2
 32328  0097E8  0012               	return		;funcret
 32329  0097EA                     __end_of_I2C1_MasterStartRx:
 32330                           	callstack 0
 32331                           
 32332 ;; *************** function _I2C1_CallbackReturnReset *****************
 32333 ;; Defined at:
 32334 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 32335 ;; Parameters:    Size  Location     Type
 32336 ;;  funPtr          2   24[COMRAM] PTR void 
 32337 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32338 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32339 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32340 ;; Auto vars:     Size  Location     Type
 32341 ;;		None
 32342 ;; Return value:  Size  Location     Type
 32343 ;;                  1    wreg      enum E360
 32344 ;; Registers used:
 32345 ;;		wreg
 32346 ;; Tracked objects:
 32347 ;;		On entry : 3F/2
 32348 ;;		On exit  : 3F/2
 32349 ;;		Unchanged: 3F/0
 32350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32355 ;;Total ram usage:        2 bytes
 32356 ;; Hardware stack levels used: 1
 32357 ;; Hardware stack levels required when called: 4
 32358 ;; This function calls:
 32359 ;;		Nothing
 32360 ;; This function is called by:
 32361 ;;		_I2C1_Open
 32362 ;;		_I2C1_DO_TX
 32363 ;;		_I2C1_DO_RX
 32364 ;;		_I2C1_DO_TX_EMPTY
 32365 ;;		_I2C1_DO_ADDRESS_NACK
 32366 ;; This function uses a non-reentrant model
 32367 ;;
 32368                           
 32369                           	psect	text164
 32370  0097EA                     __ptext164:
 32371                           	callstack 0
 32372  0097EA                     _I2C1_CallbackReturnReset:
 32373                           	callstack 16
 32374                           
 32375                           ; BSR set to: 2
 32376                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 32377                           
 32378                           ; BSR set to: 2
 32379                           ;incstack = 0
 32380  0097EA  0E05               	movlw	5
 32381                           
 32382                           ; BSR set to: 2
 32383  0097EC  0012               	return		;funcret
 32384  0097EE                     __end_of_I2C1_CallbackReturnReset:
 32385                           	callstack 0
 32386                           
 32387 ;; *************** function _I2C1_CallbackReturnStop *****************
 32388 ;; Defined at:
 32389 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 32390 ;; Parameters:    Size  Location     Type
 32391 ;;  funPtr          2   24[COMRAM] PTR void 
 32392 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32393 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32394 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32395 ;; Auto vars:     Size  Location     Type
 32396 ;;		None
 32397 ;; Return value:  Size  Location     Type
 32398 ;;                  1    wreg      enum E360
 32399 ;; Registers used:
 32400 ;;		wreg
 32401 ;; Tracked objects:
 32402 ;;		On entry : 3F/2
 32403 ;;		On exit  : 3F/2
 32404 ;;		Unchanged: 3F/0
 32405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32410 ;;Total ram usage:        2 bytes
 32411 ;; Hardware stack levels used: 1
 32412 ;; Hardware stack levels required when called: 4
 32413 ;; This function calls:
 32414 ;;		Nothing
 32415 ;; This function is called by:
 32416 ;;		_I2C1_Open
 32417 ;;		_I2C1_SetCallback
 32418 ;;		_I2C1_DO_TX
 32419 ;;		_I2C1_DO_RX
 32420 ;;		_I2C1_DO_TX_EMPTY
 32421 ;;		_I2C1_DO_ADDRESS_NACK
 32422 ;; This function uses a non-reentrant model
 32423 ;;
 32424                           
 32425                           	psect	text165
 32426  0097EE                     __ptext165:
 32427                           	callstack 0
 32428  0097EE                     _I2C1_CallbackReturnStop:
 32429                           	callstack 16
 32430                           
 32431                           ; BSR set to: 2
 32432                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 32433                           
 32434                           ; BSR set to: 2
 32435                           ;incstack = 0
 32436  0097EE  0E01               	movlw	1
 32437                           
 32438                           ; BSR set to: 2
 32439  0097F0  0012               	return		;funcret
 32440  0097F2                     __end_of_I2C1_CallbackReturnStop:
 32441                           	callstack 0
 32442                           
 32443 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 32444 ;; Defined at:
 32445 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32446 ;; Parameters:    Size  Location     Type
 32447 ;;  ptr             2   24[COMRAM] PTR void 
 32448 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32449 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32450 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32451 ;; Auto vars:     Size  Location     Type
 32452 ;;		None
 32453 ;; Return value:  Size  Location     Type
 32454 ;;                  1    wreg      enum E527
 32455 ;; Registers used:
 32456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32457 ;; Tracked objects:
 32458 ;;		On entry : 3F/2
 32459 ;;		On exit  : 0/0
 32460 ;;		Unchanged: 0/0
 32461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32466 ;;Total ram usage:        2 bytes
 32467 ;; Hardware stack levels used: 1
 32468 ;; Hardware stack levels required when called: 6
 32469 ;; This function calls:
 32470 ;;		_I2C1_SetBuffer
 32471 ;;		_I2C1_SetDataCompleteCallback
 32472 ;; This function is called by:
 32473 ;;		_I2C1_DO_TX
 32474 ;;		_I2C1_DO_RX
 32475 ;;		_I2C1_DO_TX_EMPTY
 32476 ;;		_I2C1_DO_ADDRESS_NACK
 32477 ;; This function uses a non-reentrant model
 32478 ;;
 32479                           
 32480                           	psect	text166
 32481  008DF8                     __ptext166:
 32482                           	callstack 0
 32483  008DF8                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 32484                           	callstack 14
 32485                           
 32486                           ; BSR set to: 2
 32487                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 32488                           
 32489                           ; BSR set to: 2
 32490                           ;incstack = 0
 32491  008DF8  EE20 F002          	lfsr	2,2
 32492  008DFC  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 32493  008DFE  26D9               	addwf	fsr2l,f,c
 32494  008E00  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 32495  008E02  22DA               	addwfc	fsr2h,f,c
 32496  008E04  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 32497  008E08  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 32498  008E0C  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 32499  008E10  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 32500  008E14  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 32501  008E18  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 32502  008E1C  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 32503                           
 32504                           ; BSR set to: 2
 32505                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32506  008E20  0E00               	movlw	0
 32507  008E22  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32508  008E24  0E00               	movlw	0
 32509  008E26  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32510  008E28  0E00               	movlw	0
 32511  008E2A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32512  008E2C  0E00               	movlw	0
 32513  008E2E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32514  008E30  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32515                           
 32516                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 32517  008E34  0E02               	movlw	2
 32518  008E36  0012               	return		;funcret
 32519  008E38                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 32520                           	callstack 0
 32521                           
 32522 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 32523 ;; Defined at:
 32524 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32525 ;; Parameters:    Size  Location     Type
 32526 ;;  ptr             2   24[COMRAM] PTR void 
 32527 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32528 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32529 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32530 ;; Auto vars:     Size  Location     Type
 32531 ;;		None
 32532 ;; Return value:  Size  Location     Type
 32533 ;;                  1    wreg      enum E527
 32534 ;; Registers used:
 32535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32536 ;; Tracked objects:
 32537 ;;		On entry : 3F/2
 32538 ;;		On exit  : 0/0
 32539 ;;		Unchanged: 0/0
 32540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32545 ;;Total ram usage:        2 bytes
 32546 ;; Hardware stack levels used: 1
 32547 ;; Hardware stack levels required when called: 6
 32548 ;; This function calls:
 32549 ;;		_I2C1_SetBuffer
 32550 ;;		_I2C1_SetDataCompleteCallback
 32551 ;; This function is called by:
 32552 ;;		_I2C1_DO_TX
 32553 ;;		_I2C1_DO_RX
 32554 ;;		_I2C1_DO_TX_EMPTY
 32555 ;;		_I2C1_DO_ADDRESS_NACK
 32556 ;; This function uses a non-reentrant model
 32557 ;;
 32558                           
 32559                           	psect	text167
 32560  009138                     __ptext167:
 32561                           	callstack 0
 32562  009138                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 32563                           	callstack 14
 32564                           
 32565                           ; BSR set to: 2
 32566                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 32567                           
 32568                           ;incstack = 0
 32569  009138  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 32570  00913C  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 32571  009140  0E00               	movlw	0
 32572  009142  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32573  009144  0E01               	movlw	1
 32574  009146  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32575  009148  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 32576                           
 32577                           ; BSR set to: 2
 32578                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32579  00914C  0E00               	movlw	0
 32580  00914E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32581  009150  0E00               	movlw	0
 32582  009152  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32583  009154  0E00               	movlw	0
 32584  009156  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32585  009158  0E00               	movlw	0
 32586  00915A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32587  00915C  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32588                           
 32589                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 32590  009160  0E04               	movlw	4
 32591  009162  0012               	return		;funcret
 32592  009164                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 32593                           	callstack 0
 32594                           
 32595 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 32596 ;; Defined at:
 32597 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32598 ;; Parameters:    Size  Location     Type
 32599 ;;  ptr             2   24[COMRAM] PTR void 
 32600 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32601 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32602 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32603 ;; Auto vars:     Size  Location     Type
 32604 ;;		None
 32605 ;; Return value:  Size  Location     Type
 32606 ;;                  1    wreg      enum E527
 32607 ;; Registers used:
 32608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32609 ;; Tracked objects:
 32610 ;;		On entry : 3F/2
 32611 ;;		On exit  : 0/0
 32612 ;;		Unchanged: 0/0
 32613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32618 ;;Total ram usage:        2 bytes
 32619 ;; Hardware stack levels used: 1
 32620 ;; Hardware stack levels required when called: 6
 32621 ;; This function calls:
 32622 ;;		_I2C1_SetBuffer
 32623 ;;		_I2C1_SetDataCompleteCallback
 32624 ;; This function is called by:
 32625 ;;		_I2C1_DO_TX
 32626 ;;		_I2C1_DO_RX
 32627 ;;		_I2C1_DO_TX_EMPTY
 32628 ;;		_I2C1_DO_ADDRESS_NACK
 32629 ;; This function uses a non-reentrant model
 32630 ;;
 32631                           
 32632                           	psect	text168
 32633  009164                     __ptext168:
 32634                           	callstack 0
 32635  009164                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 32636                           	callstack 14
 32637                           
 32638                           ; BSR set to: 2
 32639                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 32640                           
 32641                           ;incstack = 0
 32642  009164  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 32643  009168  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 32644  00916C  0E00               	movlw	0
 32645  00916E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32646  009170  0E02               	movlw	2
 32647  009172  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32648  009174  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 32649                           
 32650                           ; BSR set to: 2
 32651                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32652  009178  0E00               	movlw	0
 32653  00917A  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32654  00917C  0E00               	movlw	0
 32655  00917E  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32656  009180  0E00               	movlw	0
 32657  009182  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32658  009184  0E00               	movlw	0
 32659  009186  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32660  009188  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32661                           
 32662                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 32663  00918C  0E02               	movlw	2
 32664  00918E  0012               	return		;funcret
 32665  009190                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 32666                           	callstack 0
 32667                           
 32668 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 32669 ;; Defined at:
 32670 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32671 ;; Parameters:    Size  Location     Type
 32672 ;;  ptr             2   24[COMRAM] PTR void 
 32673 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32674 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32675 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32676 ;; Auto vars:     Size  Location     Type
 32677 ;;		None
 32678 ;; Return value:  Size  Location     Type
 32679 ;;                  1    wreg      enum E527
 32680 ;; Registers used:
 32681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32682 ;; Tracked objects:
 32683 ;;		On entry : 3F/2
 32684 ;;		On exit  : 0/0
 32685 ;;		Unchanged: 0/0
 32686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32691 ;;Total ram usage:        2 bytes
 32692 ;; Hardware stack levels used: 1
 32693 ;; Hardware stack levels required when called: 6
 32694 ;; This function calls:
 32695 ;;		_I2C1_SetBuffer
 32696 ;;		_I2C1_SetDataCompleteCallback
 32697 ;; This function is called by:
 32698 ;;		_I2C1_Read1ByteRegister
 32699 ;;		_I2C1_DO_TX
 32700 ;;		_I2C1_DO_RX
 32701 ;;		_I2C1_DO_TX_EMPTY
 32702 ;;		_I2C1_DO_ADDRESS_NACK
 32703 ;; This function uses a non-reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text169
 32707  009190                     __ptext169:
 32708                           	callstack 0
 32709  009190                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 32710                           	callstack 14
 32711                           
 32712                           ; BSR set to: 2
 32713                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 32714                           
 32715                           ;incstack = 0
 32716  009190  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 32717  009194  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 32718  009198  0E00               	movlw	0
 32719  00919A  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32720  00919C  0E01               	movlw	1
 32721  00919E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32722  0091A0  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 32723                           
 32724                           ; BSR set to: 2
 32725                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32726  0091A4  0E00               	movlw	0
 32727  0091A6  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32728  0091A8  0E00               	movlw	0
 32729  0091AA  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32730  0091AC  0E00               	movlw	0
 32731  0091AE  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32732  0091B0  0E00               	movlw	0
 32733  0091B2  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32734  0091B4  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32735                           
 32736                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 32737  0091B8  0E02               	movlw	2
 32738  0091BA  0012               	return		;funcret
 32739  0091BC                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 32740                           	callstack 0
 32741                           
 32742 ;; *************** function _rdBlkRegCompleteHandler *****************
 32743 ;; Defined at:
 32744 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32745 ;; Parameters:    Size  Location     Type
 32746 ;;  p               2   24[COMRAM] PTR void 
 32747 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32748 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32749 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32750 ;; Auto vars:     Size  Location     Type
 32751 ;;		None
 32752 ;; Return value:  Size  Location     Type
 32753 ;;                  1    wreg      enum E360
 32754 ;; Registers used:
 32755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32756 ;; Tracked objects:
 32757 ;;		On entry : 3F/2
 32758 ;;		On exit  : 0/0
 32759 ;;		Unchanged: 0/0
 32760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32765 ;;Total ram usage:        2 bytes
 32766 ;; Hardware stack levels used: 1
 32767 ;; Hardware stack levels required when called: 6
 32768 ;; This function calls:
 32769 ;;		_I2C1_SetBuffer
 32770 ;;		_I2C1_SetDataCompleteCallback
 32771 ;; This function is called by:
 32772 ;;		_i2c_readDataBlock
 32773 ;;		_I2C1_DO_TX
 32774 ;;		_I2C1_DO_RX
 32775 ;;		_I2C1_DO_TX_EMPTY
 32776 ;;		_I2C1_DO_ADDRESS_NACK
 32777 ;; This function uses a non-reentrant model
 32778 ;;
 32779                           
 32780                           	psect	text170
 32781  008E38                     __ptext170:
 32782                           	callstack 0
 32783  008E38                     _rdBlkRegCompleteHandler:
 32784                           	callstack 14
 32785                           
 32786                           ; BSR set to: 2
 32787                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 32788                           
 32789                           ;incstack = 0
 32790  008E38  EE20 F002          	lfsr	2,2
 32791  008E3C  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 32792  008E3E  26D9               	addwf	fsr2l,f,c
 32793  008E40  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 32794  008E42  22DA               	addwfc	fsr2h,f,c
 32795  008E44  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 32796  008E48  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 32797  008E4C  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 32798  008E50  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 32799  008E54  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 32800  008E58  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 32801  008E5C  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 32802                           
 32803                           ; BSR set to: 2
 32804                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32805  008E60  0E00               	movlw	0
 32806  008E62  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32807  008E64  0E00               	movlw	0
 32808  008E66  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32809  008E68  0E00               	movlw	0
 32810  008E6A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32811  008E6C  0E00               	movlw	0
 32812  008E6E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32813  008E70  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32814                           
 32815                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 32816  008E74  0E02               	movlw	2
 32817  008E76  0012               	return		;funcret
 32818  008E78                     __end_of_rdBlkRegCompleteHandler:
 32819                           	callstack 0
 32820                           
 32821 ;; *************** function _wr2RegCompleteHandler *****************
 32822 ;; Defined at:
 32823 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32824 ;; Parameters:    Size  Location     Type
 32825 ;;  p               2   24[COMRAM] PTR void 
 32826 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32827 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32828 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32829 ;; Auto vars:     Size  Location     Type
 32830 ;;		None
 32831 ;; Return value:  Size  Location     Type
 32832 ;;                  1    wreg      enum E360
 32833 ;; Registers used:
 32834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32835 ;; Tracked objects:
 32836 ;;		On entry : 3F/2
 32837 ;;		On exit  : 0/0
 32838 ;;		Unchanged: 0/0
 32839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32844 ;;Total ram usage:        2 bytes
 32845 ;; Hardware stack levels used: 1
 32846 ;; Hardware stack levels required when called: 6
 32847 ;; This function calls:
 32848 ;;		_I2C1_SetBuffer
 32849 ;;		_I2C1_SetDataCompleteCallback
 32850 ;; This function is called by:
 32851 ;;		_I2C1_DO_TX
 32852 ;;		_I2C1_DO_RX
 32853 ;;		_I2C1_DO_TX_EMPTY
 32854 ;;		_I2C1_DO_ADDRESS_NACK
 32855 ;; This function uses a non-reentrant model
 32856 ;;
 32857                           
 32858                           	psect	text171
 32859  0091BC                     __ptext171:
 32860                           	callstack 0
 32861  0091BC                     _wr2RegCompleteHandler:
 32862                           	callstack 14
 32863                           
 32864                           ; BSR set to: 2
 32865                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 32866                           
 32867                           ;incstack = 0
 32868  0091BC  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32869  0091C0  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32870  0091C4  0E00               	movlw	0
 32871  0091C6  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32872  0091C8  0E02               	movlw	2
 32873  0091CA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32874  0091CC  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 32875                           
 32876                           ; BSR set to: 2
 32877                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32878  0091D0  0E00               	movlw	0
 32879  0091D2  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32880  0091D4  0E00               	movlw	0
 32881  0091D6  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32882  0091D8  0E00               	movlw	0
 32883  0091DA  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32884  0091DC  0E00               	movlw	0
 32885  0091DE  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32886  0091E0  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32887                           
 32888                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 32889  0091E4  0E04               	movlw	4
 32890  0091E6  0012               	return		;funcret
 32891  0091E8                     __end_of_wr2RegCompleteHandler:
 32892                           	callstack 0
 32893                           
 32894 ;; *************** function _rd2RegCompleteHandler *****************
 32895 ;; Defined at:
 32896 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32897 ;; Parameters:    Size  Location     Type
 32898 ;;  p               2   24[COMRAM] PTR void 
 32899 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32900 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32901 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32902 ;; Auto vars:     Size  Location     Type
 32903 ;;		None
 32904 ;; Return value:  Size  Location     Type
 32905 ;;                  1    wreg      enum E360
 32906 ;; Registers used:
 32907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32908 ;; Tracked objects:
 32909 ;;		On entry : 3F/2
 32910 ;;		On exit  : 0/0
 32911 ;;		Unchanged: 0/0
 32912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32916 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32917 ;;Total ram usage:        2 bytes
 32918 ;; Hardware stack levels used: 1
 32919 ;; Hardware stack levels required when called: 6
 32920 ;; This function calls:
 32921 ;;		_I2C1_SetBuffer
 32922 ;;		_I2C1_SetDataCompleteCallback
 32923 ;; This function is called by:
 32924 ;;		_I2C1_DO_TX
 32925 ;;		_I2C1_DO_RX
 32926 ;;		_I2C1_DO_TX_EMPTY
 32927 ;;		_I2C1_DO_ADDRESS_NACK
 32928 ;; This function uses a non-reentrant model
 32929 ;;
 32930                           
 32931                           	psect	text172
 32932  0091E8                     __ptext172:
 32933                           	callstack 0
 32934  0091E8                     _rd2RegCompleteHandler:
 32935                           	callstack 14
 32936                           
 32937                           ; BSR set to: 2
 32938                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 32939                           
 32940                           ;incstack = 0
 32941  0091E8  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32942  0091EC  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32943  0091F0  0E00               	movlw	0
 32944  0091F2  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32945  0091F4  0E02               	movlw	2
 32946  0091F6  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32947  0091F8  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 32948                           
 32949                           ; BSR set to: 2
 32950                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32951  0091FC  0E00               	movlw	0
 32952  0091FE  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32953  009200  0E00               	movlw	0
 32954  009202  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32955  009204  0E00               	movlw	0
 32956  009206  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32957  009208  0E00               	movlw	0
 32958  00920A  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32959  00920C  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32960                           
 32961                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 32962  009210  0E02               	movlw	2
 32963  009212  0012               	return		;funcret
 32964  009214                     __end_of_rd2RegCompleteHandler:
 32965                           	callstack 0
 32966                           
 32967 ;; *************** function _rd1RegCompleteHandler *****************
 32968 ;; Defined at:
 32969 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32970 ;; Parameters:    Size  Location     Type
 32971 ;;  p               2   24[COMRAM] PTR void 
 32972 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32973 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32974 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32975 ;; Auto vars:     Size  Location     Type
 32976 ;;		None
 32977 ;; Return value:  Size  Location     Type
 32978 ;;                  1    wreg      enum E360
 32979 ;; Registers used:
 32980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32981 ;; Tracked objects:
 32982 ;;		On entry : 3F/2
 32983 ;;		On exit  : 0/0
 32984 ;;		Unchanged: 0/0
 32985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32990 ;;Total ram usage:        2 bytes
 32991 ;; Hardware stack levels used: 1
 32992 ;; Hardware stack levels required when called: 6
 32993 ;; This function calls:
 32994 ;;		_I2C1_SetBuffer
 32995 ;;		_I2C1_SetDataCompleteCallback
 32996 ;; This function is called by:
 32997 ;;		_I2C1_DO_TX
 32998 ;;		_I2C1_DO_RX
 32999 ;;		_I2C1_DO_TX_EMPTY
 33000 ;;		_I2C1_DO_ADDRESS_NACK
 33001 ;; This function uses a non-reentrant model
 33002 ;;
 33003                           
 33004                           	psect	text173
 33005  009214                     __ptext173:
 33006                           	callstack 0
 33007  009214                     _rd1RegCompleteHandler:
 33008                           	callstack 14
 33009                           
 33010                           ; BSR set to: 2
 33011                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 33012                           
 33013                           ;incstack = 0
 33014  009214  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33015  009218  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33016  00921C  0E00               	movlw	0
 33017  00921E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33018  009220  0E01               	movlw	1
 33019  009222  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33020  009224  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 33021                           
 33022                           ; BSR set to: 2
 33023                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33024  009228  0E00               	movlw	0
 33025  00922A  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33026  00922C  0E00               	movlw	0
 33027  00922E  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33028  009230  0E00               	movlw	0
 33029  009232  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33030  009234  0E00               	movlw	0
 33031  009236  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33032  009238  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33033                           
 33034                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 33035  00923C  0E02               	movlw	2
 33036  00923E  0012               	return		;funcret
 33037  009240                     __end_of_rd1RegCompleteHandler:
 33038                           	callstack 0
 33039                           
 33040 ;; *************** function _wr1RegCompleteHandler *****************
 33041 ;; Defined at:
 33042 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33043 ;; Parameters:    Size  Location     Type
 33044 ;;  p               2   24[COMRAM] PTR void 
 33045 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33046 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33047 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33048 ;; Auto vars:     Size  Location     Type
 33049 ;;		None
 33050 ;; Return value:  Size  Location     Type
 33051 ;;                  1    wreg      enum E360
 33052 ;; Registers used:
 33053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33054 ;; Tracked objects:
 33055 ;;		On entry : 3F/2
 33056 ;;		On exit  : 0/0
 33057 ;;		Unchanged: 0/0
 33058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33063 ;;Total ram usage:        2 bytes
 33064 ;; Hardware stack levels used: 1
 33065 ;; Hardware stack levels required when called: 6
 33066 ;; This function calls:
 33067 ;;		_I2C1_SetBuffer
 33068 ;;		_I2C1_SetDataCompleteCallback
 33069 ;; This function is called by:
 33070 ;;		_I2C1_DO_TX
 33071 ;;		_I2C1_DO_RX
 33072 ;;		_I2C1_DO_TX_EMPTY
 33073 ;;		_I2C1_DO_ADDRESS_NACK
 33074 ;; This function uses a non-reentrant model
 33075 ;;
 33076                           
 33077                           	psect	text174
 33078  009240                     __ptext174:
 33079                           	callstack 0
 33080  009240                     _wr1RegCompleteHandler:
 33081                           	callstack 14
 33082                           
 33083                           ; BSR set to: 2
 33084                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 33085                           
 33086                           ;incstack = 0
 33087  009240  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33088  009244  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33089  009248  0E00               	movlw	0
 33090  00924A  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33091  00924C  0E01               	movlw	1
 33092  00924E  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33093  009250  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 33094                           
 33095                           ; BSR set to: 2
 33096                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33097  009254  0E00               	movlw	0
 33098  009256  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33099  009258  0E00               	movlw	0
 33100  00925A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33101  00925C  0E00               	movlw	0
 33102  00925E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33103  009260  0E00               	movlw	0
 33104  009262  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33105  009264  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33106                           
 33107                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 33108  009268  0E04               	movlw	4
 33109  00926A  0012               	return		;funcret
 33110  00926C                     __end_of_wr1RegCompleteHandler:
 33111                           	callstack 0
 33112                           
 33113 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 33114 ;; Defined at:
 33115 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33116 ;; Parameters:    Size  Location     Type
 33117 ;;  ptr             2   24[COMRAM] PTR void 
 33118 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33119 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33120 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33121 ;; Auto vars:     Size  Location     Type
 33122 ;;		None
 33123 ;; Return value:  Size  Location     Type
 33124 ;;                  1    wreg      enum E527
 33125 ;; Registers used:
 33126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33127 ;; Tracked objects:
 33128 ;;		On entry : 3F/2
 33129 ;;		On exit  : 0/0
 33130 ;;		Unchanged: 0/0
 33131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33136 ;;Total ram usage:        2 bytes
 33137 ;; Hardware stack levels used: 1
 33138 ;; Hardware stack levels required when called: 6
 33139 ;; This function calls:
 33140 ;;		_I2C1_SetBuffer
 33141 ;;		_I2C1_SetDataCompleteCallback
 33142 ;; This function is called by:
 33143 ;;		_I2C1_DO_TX
 33144 ;;		_I2C1_DO_RX
 33145 ;;		_I2C1_DO_TX_EMPTY
 33146 ;;		_I2C1_DO_ADDRESS_NACK
 33147 ;; This function uses a non-reentrant model
 33148 ;;
 33149                           
 33150                           	psect	text175
 33151  00926C                     __ptext175:
 33152                           	callstack 0
 33153  00926C                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 33154                           	callstack 14
 33155                           
 33156                           ; BSR set to: 2
 33157                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 33158                           
 33159                           ;incstack = 0
 33160  00926C  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 33161  009270  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 33162  009274  0E00               	movlw	0
 33163  009276  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33164  009278  0E02               	movlw	2
 33165  00927A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33166  00927C  ECAB  F04A         	call	_I2C1_SetBuffer	;wreg free
 33167                           
 33168                           ; BSR set to: 2
 33169                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33170  009280  0E00               	movlw	0
 33171  009282  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33172  009284  0E00               	movlw	0
 33173  009286  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33174  009288  0E00               	movlw	0
 33175  00928A  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33176  00928C  0E00               	movlw	0
 33177  00928E  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33178  009290  ECF4  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33179                           
 33180                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 33181  009294  0E04               	movlw	4
 33182  009296  0012               	return		;funcret
 33183  009298                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 33184                           	callstack 0
 33185                           
 33186 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 33187 ;; Defined at:
 33188 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 33189 ;; Parameters:    Size  Location     Type
 33190 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 33191 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33192 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33193 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33194 ;;  ptr             2   22[COMRAM] PTR void 
 33195 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33196 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33197 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33198 ;; Auto vars:     Size  Location     Type
 33199 ;;		None
 33200 ;; Return value:  Size  Location     Type
 33201 ;;                  1    wreg      void 
 33202 ;; Registers used:
 33203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33204 ;; Tracked objects:
 33205 ;;		On entry : 33/2
 33206 ;;		On exit  : 0/0
 33207 ;;		Unchanged: 0/0
 33208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33213 ;;Total ram usage:        4 bytes
 33214 ;; Hardware stack levels used: 1
 33215 ;; Hardware stack levels required when called: 5
 33216 ;; This function calls:
 33217 ;;		_I2C1_SetCallback
 33218 ;; This function is called by:
 33219 ;;		_wr1RegCompleteHandler
 33220 ;;		_rd1RegCompleteHandler
 33221 ;;		_rd2RegCompleteHandler
 33222 ;;		_wr2RegCompleteHandler
 33223 ;;		_rdBlkRegCompleteHandler
 33224 ;;		_i2c_readDataBlock
 33225 ;;		_I2C1_Read1ByteRegister
 33226 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33227 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33228 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33229 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33230 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33231 ;; This function uses a non-reentrant model
 33232 ;;
 33233                           
 33234                           	psect	text176
 33235  0095E8                     __ptext176:
 33236                           	callstack 0
 33237  0095E8                     _I2C1_SetDataCompleteCallback:
 33238                           	callstack 20
 33239                           
 33240                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 33241                           
 33242                           ;incstack = 0
 33243  0095E8  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 33244  0095EC  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 33245  0095F0  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 33246  0095F4  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 33247  0095F8  0E00               	movlw	0
 33248  0095FA  EC5B  F042         	call	_I2C1_SetCallback
 33249  0095FE  0012               	return		;funcret
 33250  009600                     __end_of_I2C1_SetDataCompleteCallback:
 33251                           	callstack 0
 33252                           
 33253 ;; *************** function _I2C1_SetCallback *****************
 33254 ;; Defined at:
 33255 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 33256 ;; Parameters:    Size  Location     Type
 33257 ;;  idx             1    wreg     enum E10460
 33258 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 33259 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33260 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33261 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33262 ;;  ptr             2   17[COMRAM] PTR void 
 33263 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33264 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33265 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33266 ;; Auto vars:     Size  Location     Type
 33267 ;;  idx             1   19[COMRAM] enum E10460
 33268 ;; Return value:  Size  Location     Type
 33269 ;;                  1    wreg      void 
 33270 ;; Registers used:
 33271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33272 ;; Tracked objects:
 33273 ;;		On entry : 33/2
 33274 ;;		On exit  : 0/0
 33275 ;;		Unchanged: 0/0
 33276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33281 ;;Total ram usage:        5 bytes
 33282 ;; Hardware stack levels used: 1
 33283 ;; Hardware stack levels required when called: 4
 33284 ;; This function calls:
 33285 ;;		Nothing
 33286 ;; This function is called by:
 33287 ;;		_I2C1_SetDataCompleteCallback
 33288 ;;		_I2C1_SetAddressNackCallback
 33289 ;; This function uses a non-reentrant model
 33290 ;;
 33291                           
 33292                           	psect	text177
 33293  0084B6                     __ptext177:
 33294                           	callstack 0
 33295  0084B6                     _I2C1_SetCallback:
 33296                           	callstack 20
 33297                           
 33298                           ;incstack = 0
 33299                           ;I2C1_SetCallback@idx stored from wreg
 33300  0084B6  6E14               	movwf	I2C1_SetCallback@idx^0,c
 33301                           
 33302                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 33303  0084B8  5010               	movf	I2C1_SetCallback@cb^0,w,c
 33304  0084BA  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 33305  0084BC  B4D8               	btfsc	status,2,c
 33306  0084BE  D019               	goto	l19473
 33307                           
 33308                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 33309  0084C0  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33310  0084C2  0D02               	mullw	2
 33311  0084C4  0E3C               	movlw	low _I2C1_Status
 33312  0084C6  24F3               	addwf	243,w,c
 33313  0084C8  6ED9               	movwf	fsr2l,c
 33314  0084CA  0E02               	movlw	high _I2C1_Status
 33315  0084CC  20F4               	addwfc	prodh,w,c
 33316  0084CE  6EDA               	movwf	fsr2h,c
 33317  0084D0  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 33318  0084D4  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 33319                           
 33320                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 33321  0084D8  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33322  0084DA  0D02               	mullw	2
 33323  0084DC  0E48               	movlw	low (_I2C1_Status+12)
 33324  0084DE  24F3               	addwf	243,w,c
 33325  0084E0  6ED9               	movwf	fsr2l,c
 33326  0084E2  0E02               	movlw	high (_I2C1_Status+12)
 33327  0084E4  20F4               	addwfc	prodh,w,c
 33328  0084E6  6EDA               	movwf	fsr2h,c
 33329  0084E8  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 33330  0084EC  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 33331                           
 33332                           ;mcc_generated_files/i2c1_master.c: 304:     }
 33333  0084F0  0012               	return	
 33334  0084F2                     l19473:
 33335                           
 33336                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 33337  0084F2  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33338  0084F4  0D02               	mullw	2
 33339  0084F6  0E3C               	movlw	low _I2C1_Status
 33340  0084F8  24F3               	addwf	243,w,c
 33341  0084FA  6ED9               	movwf	fsr2l,c
 33342  0084FC  0E02               	movlw	high _I2C1_Status
 33343  0084FE  20F4               	addwfc	prodh,w,c
 33344  008500  6EDA               	movwf	fsr2h,c
 33345  008502  0EEE               	movlw	low _I2C1_CallbackReturnStop
 33346  008504  6EDE               	movwf	postinc2,c
 33347  008506  0E97               	movlw	high _I2C1_CallbackReturnStop
 33348  008508  6EDD               	movwf	postdec2,c
 33349                           
 33350                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 33351  00850A  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33352  00850C  0D02               	mullw	2
 33353  00850E  0E48               	movlw	low (_I2C1_Status+12)
 33354  008510  24F3               	addwf	243,w,c
 33355  008512  6ED9               	movwf	fsr2l,c
 33356  008514  0E02               	movlw	high (_I2C1_Status+12)
 33357  008516  20F4               	addwfc	prodh,w,c
 33358  008518  6EDA               	movwf	fsr2h,c
 33359  00851A  0E00               	movlw	0
 33360  00851C  6EDE               	movwf	postinc2,c
 33361  00851E  0E00               	movlw	0
 33362  008520  6EDD               	movwf	postdec2,c
 33363  008522  0012               	return		;funcret
 33364  008524                     __end_of_I2C1_SetCallback:
 33365                           	callstack 0
 33366                           
 33367 ;; *************** function _I2C1_SetBuffer *****************
 33368 ;; Defined at:
 33369 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 33370 ;; Parameters:    Size  Location     Type
 33371 ;;  buffer          2   15[COMRAM] PTR void 
 33372 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 33373 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 33374 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 33375 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 33376 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 33377 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 33378 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33379 ;;  bufferSize      2   17[COMRAM] unsigned int 
 33380 ;; Auto vars:     Size  Location     Type
 33381 ;;		None
 33382 ;; Return value:  Size  Location     Type
 33383 ;;                  1    wreg      void 
 33384 ;; Registers used:
 33385 ;;		wreg, status,2, status,0
 33386 ;; Tracked objects:
 33387 ;;		On entry : 0/2
 33388 ;;		On exit  : 3F/2
 33389 ;;		Unchanged: 0/0
 33390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33395 ;;Total ram usage:        4 bytes
 33396 ;; Hardware stack levels used: 1
 33397 ;; Hardware stack levels required when called: 4
 33398 ;; This function calls:
 33399 ;;		Nothing
 33400 ;; This function is called by:
 33401 ;;		_wr1RegCompleteHandler
 33402 ;;		_i2c_writeNBytes
 33403 ;;		_rd1RegCompleteHandler
 33404 ;;		_rd2RegCompleteHandler
 33405 ;;		_wr2RegCompleteHandler
 33406 ;;		_rdBlkRegCompleteHandler
 33407 ;;		_i2c_readDataBlock
 33408 ;;		_I2C1_Read1ByteRegister
 33409 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33410 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33411 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33412 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33413 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33414 ;; This function uses a non-reentrant model
 33415 ;;
 33416                           
 33417                           	psect	text178
 33418  009556                     __ptext178:
 33419                           	callstack 0
 33420  009556                     _I2C1_SetBuffer:
 33421                           	callstack 21
 33422                           
 33423                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 33424                           
 33425                           ;incstack = 0
 33426  009556  0102               	movlb	2	; () banked
 33427  009558  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 33428  00955A  0012               	return	
 33429                           
 33430                           ; BSR set to: 2
 33431                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 33432  00955C  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 33433  009560  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 33434                           
 33435                           ; BSR set to: 2
 33436                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 33437  009564  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 33438  009568  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 33439                           
 33440                           ; BSR set to: 2
 33441                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 33442  00956C  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 33443                           
 33444                           ; BSR set to: 2
 33445  00956E  0012               	return		;funcret
 33446  009570                     __end_of_I2C1_SetBuffer:
 33447                           	callstack 0
 33448                           
 33449 ;; *************** function _I2C1_MasterStop *****************
 33450 ;; Defined at:
 33451 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 33452 ;; Parameters:    Size  Location     Type
 33453 ;;		None
 33454 ;; Auto vars:     Size  Location     Type
 33455 ;;		None
 33456 ;; Return value:  Size  Location     Type
 33457 ;;                  1    wreg      void 
 33458 ;; Registers used:
 33459 ;;		None
 33460 ;; Tracked objects:
 33461 ;;		On entry : 0/2
 33462 ;;		On exit  : 0/0
 33463 ;;		Unchanged: 0/0
 33464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33469 ;;Total ram usage:        0 bytes
 33470 ;; Hardware stack levels used: 1
 33471 ;; Hardware stack levels required when called: 4
 33472 ;; This function calls:
 33473 ;;		Nothing
 33474 ;; This function is called by:
 33475 ;;		_I2C1_DO_SEND_STOP
 33476 ;; This function uses a non-reentrant model
 33477 ;;
 33478                           
 33479                           	psect	text179
 33480  0097F2                     __ptext179:
 33481                           	callstack 0
 33482  0097F2                     _I2C1_MasterStop:
 33483                           	callstack 15
 33484                           
 33485                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 33486                           
 33487                           ; BSR set to: 2
 33488                           ;incstack = 0
 33489  0097F2  8497               	bsf	151,2,c	;volatile
 33490  0097F4  0012               	return		;funcret
 33491  0097F6                     __end_of_I2C1_MasterStop:
 33492                           	callstack 0
 33493                           
 33494 ;; *************** function _I2C1_MasterEnableRestart *****************
 33495 ;; Defined at:
 33496 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 33497 ;; Parameters:    Size  Location     Type
 33498 ;;		None
 33499 ;; Auto vars:     Size  Location     Type
 33500 ;;		None
 33501 ;; Return value:  Size  Location     Type
 33502 ;;                  1    wreg      void 
 33503 ;; Registers used:
 33504 ;;		None
 33505 ;; Tracked objects:
 33506 ;;		On entry : 0/2
 33507 ;;		On exit  : 0/0
 33508 ;;		Unchanged: 0/0
 33509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33514 ;;Total ram usage:        0 bytes
 33515 ;; Hardware stack levels used: 1
 33516 ;; Hardware stack levels required when called: 4
 33517 ;; This function calls:
 33518 ;;		Nothing
 33519 ;; This function is called by:
 33520 ;;		_I2C1_DO_SEND_RESTART_READ
 33521 ;;		_I2C1_DO_SEND_RESTART_WRITE
 33522 ;;		_I2C1_DO_SEND_RESTART
 33523 ;; This function uses a non-reentrant model
 33524 ;;
 33525                           
 33526                           	psect	text180
 33527  0097F6                     __ptext180:
 33528                           	callstack 0
 33529  0097F6                     _I2C1_MasterEnableRestart:
 33530                           	callstack 15
 33531                           
 33532                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 33533                           
 33534                           ;incstack = 0
 33535  0097F6  8297               	bsf	151,1,c	;volatile
 33536  0097F8  0012               	return		;funcret
 33537  0097FA                     __end_of_I2C1_MasterEnableRestart:
 33538                           	callstack 0
 33539                           
 33540 ;; *************** function _I2C1_MasterStart *****************
 33541 ;; Defined at:
 33542 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 33543 ;; Parameters:    Size  Location     Type
 33544 ;;		None
 33545 ;; Auto vars:     Size  Location     Type
 33546 ;;		None
 33547 ;; Return value:  Size  Location     Type
 33548 ;;                  1    wreg      void 
 33549 ;; Registers used:
 33550 ;;		None
 33551 ;; Tracked objects:
 33552 ;;		On entry : 3F/2
 33553 ;;		On exit  : 3F/2
 33554 ;;		Unchanged: 3F/0
 33555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33560 ;;Total ram usage:        0 bytes
 33561 ;; Hardware stack levels used: 1
 33562 ;; Hardware stack levels required when called: 4
 33563 ;; This function calls:
 33564 ;;		Nothing
 33565 ;; This function is called by:
 33566 ;;		_I2C1_MasterOperation
 33567 ;; This function uses a non-reentrant model
 33568 ;;
 33569                           
 33570                           	psect	text181
 33571  0097FA                     __ptext181:
 33572                           	callstack 0
 33573  0097FA                     _I2C1_MasterStart:
 33574                           	callstack 19
 33575                           
 33576                           ; BSR set to: 2
 33577                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 33578                           
 33579                           ;incstack = 0
 33580  0097FA  8097               	bsf	151,0,c	;volatile
 33581                           
 33582                           ; BSR set to: 2
 33583  0097FC  0012               	return		;funcret
 33584  0097FE                     __end_of_I2C1_MasterStart:
 33585                           	callstack 0
 33586                           
 33587 ;; *************** function _I2C1_Close *****************
 33588 ;; Defined at:
 33589 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 33590 ;; Parameters:    Size  Location     Type
 33591 ;;		None
 33592 ;; Auto vars:     Size  Location     Type
 33593 ;;  returnValue     1   15[COMRAM] enum E355
 33594 ;; Return value:  Size  Location     Type
 33595 ;;                  1    wreg      enum E355
 33596 ;; Registers used:
 33597 ;;		wreg, status,2, cstack
 33598 ;; Tracked objects:
 33599 ;;		On entry : 0/2
 33600 ;;		On exit  : 33/2
 33601 ;;		Unchanged: 0/0
 33602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33607 ;;Total ram usage:        1 bytes
 33608 ;; Hardware stack levels used: 1
 33609 ;; Hardware stack levels required when called: 5
 33610 ;; This function calls:
 33611 ;;		_I2C1_MasterClearIrq
 33612 ;;		_I2C1_MasterClose
 33613 ;;		_I2C1_MasterDisableIrq
 33614 ;; This function is called by:
 33615 ;;		_i2c_writeNBytes
 33616 ;;		_i2c_readDataBlock
 33617 ;;		_I2C1_Read1ByteRegister
 33618 ;; This function uses a non-reentrant model
 33619 ;;
 33620                           
 33621                           	psect	text182
 33622  00943A                     __ptext182:
 33623                           	callstack 0
 33624  00943A                     _I2C1_Close:
 33625                           	callstack 20
 33626                           
 33627                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 33628                           
 33629                           ; BSR set to: 2
 33630                           ;incstack = 0
 33631  00943A  0E01               	movlw	1
 33632  00943C  6E10               	movwf	I2C1_Close@returnValue^0,c
 33633                           
 33634                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 33635  00943E  0102               	movlb	2	; () banked
 33636  009440  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 33637  009442  D00A               	goto	l19907
 33638                           
 33639                           ; BSR set to: 2
 33640                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 33641  009444  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 33642                           
 33643                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 33644  009446  6958               	setf	(_I2C1_Status+28)& (0+255),b
 33645                           
 33646                           ; BSR set to: 2
 33647                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 33648  009448  ECE1  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 33649                           
 33650                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 33651  00944C  ECFF  F04B         	call	_I2C1_MasterDisableIrq	;wreg free
 33652                           
 33653                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 33654  009450  EC01  F04C         	call	_I2C1_MasterClose	;wreg free
 33655                           
 33656                           ; BSR set to: 14
 33657                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 33658  009454  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 33659  009458                     l19907:
 33660                           
 33661                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 33662  009458  5010               	movf	I2C1_Close@returnValue^0,w,c
 33663  00945A  0012               	return		;funcret
 33664  00945C                     __end_of_I2C1_Close:
 33665                           	callstack 0
 33666                           
 33667 ;; *************** function _I2C1_MasterDisableIrq *****************
 33668 ;; Defined at:
 33669 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 33670 ;; Parameters:    Size  Location     Type
 33671 ;;		None
 33672 ;; Auto vars:     Size  Location     Type
 33673 ;;		None
 33674 ;; Return value:  Size  Location     Type
 33675 ;;                  1    wreg      void 
 33676 ;; Registers used:
 33677 ;;		None
 33678 ;; Tracked objects:
 33679 ;;		On entry : 3F/E
 33680 ;;		On exit  : 3F/E
 33681 ;;		Unchanged: 0/0
 33682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33687 ;;Total ram usage:        0 bytes
 33688 ;; Hardware stack levels used: 1
 33689 ;; Hardware stack levels required when called: 4
 33690 ;; This function calls:
 33691 ;;		Nothing
 33692 ;; This function is called by:
 33693 ;;		_I2C1_Close
 33694 ;; This function uses a non-reentrant model
 33695 ;;
 33696                           
 33697                           	psect	text183
 33698  0097FE                     __ptext183:
 33699                           	callstack 0
 33700  0097FE                     _I2C1_MasterDisableIrq:
 33701                           	callstack 20
 33702                           
 33703                           ; BSR set to: 14
 33704                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 33705                           
 33706                           ;incstack = 0
 33707  0097FE  91C5               	bcf	197,0,b	;volatile
 33708                           
 33709                           ; BSR set to: 14
 33710  009800  0012               	return		;funcret
 33711  009802                     __end_of_I2C1_MasterDisableIrq:
 33712                           	callstack 0
 33713                           
 33714 ;; *************** function _I2C1_MasterClose *****************
 33715 ;; Defined at:
 33716 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 33717 ;; Parameters:    Size  Location     Type
 33718 ;;		None
 33719 ;; Auto vars:     Size  Location     Type
 33720 ;;		None
 33721 ;; Return value:  Size  Location     Type
 33722 ;;                  1    wreg      void 
 33723 ;; Registers used:
 33724 ;;		None
 33725 ;; Tracked objects:
 33726 ;;		On entry : 3F/E
 33727 ;;		On exit  : 3F/E
 33728 ;;		Unchanged: 3F/0
 33729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33734 ;;Total ram usage:        0 bytes
 33735 ;; Hardware stack levels used: 1
 33736 ;; Hardware stack levels required when called: 4
 33737 ;; This function calls:
 33738 ;;		Nothing
 33739 ;; This function is called by:
 33740 ;;		_I2C1_Close
 33741 ;; This function uses a non-reentrant model
 33742 ;;
 33743                           
 33744                           	psect	text184
 33745  009802                     __ptext184:
 33746                           	callstack 0
 33747  009802                     _I2C1_MasterClose:
 33748                           	callstack 20
 33749                           
 33750                           ; BSR set to: 14
 33751                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 33752                           
 33753                           ; BSR set to: 14
 33754                           ;incstack = 0
 33755  009802  9A96               	bcf	150,5,c	;volatile
 33756                           
 33757                           ; BSR set to: 14
 33758  009804  0012               	return		;funcret
 33759  009806                     __end_of_I2C1_MasterClose:
 33760                           	callstack 0
 33761                           
 33762 ;; *************** function _I2C1_MasterClearIrq *****************
 33763 ;; Defined at:
 33764 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 33765 ;; Parameters:    Size  Location     Type
 33766 ;;		None
 33767 ;; Auto vars:     Size  Location     Type
 33768 ;;		None
 33769 ;; Return value:  Size  Location     Type
 33770 ;;                  1    wreg      void 
 33771 ;; Registers used:
 33772 ;;		None
 33773 ;; Tracked objects:
 33774 ;;		On entry : 33/2
 33775 ;;		On exit  : 3F/E
 33776 ;;		Unchanged: 0/0
 33777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33782 ;;Total ram usage:        0 bytes
 33783 ;; Hardware stack levels used: 1
 33784 ;; Hardware stack levels required when called: 4
 33785 ;; This function calls:
 33786 ;;		Nothing
 33787 ;; This function is called by:
 33788 ;;		_I2C1_Open
 33789 ;;		_I2C1_Close
 33790 ;;		_I2C1_MasterFsm
 33791 ;; This function uses a non-reentrant model
 33792 ;;
 33793                           
 33794                           	psect	text185
 33795  0097C2                     __ptext185:
 33796                           	callstack 0
 33797  0097C2                     _I2C1_MasterClearIrq:
 33798                           	callstack 20
 33799                           
 33800                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 33801                           
 33802                           ; BSR set to: 14
 33803                           ;incstack = 0
 33804  0097C2  010E               	movlb	14	; () banked
 33805  0097C4  91CD               	bcf	205,0,b	;volatile
 33806                           
 33807                           ; BSR set to: 14
 33808  0097C6  0012               	return		;funcret
 33809  0097C8                     __end_of_I2C1_MasterClearIrq:
 33810                           	callstack 0
 33811                           
 33812 ;; *************** function _INTERRUPT_InterruptManager *****************
 33813 ;; Defined at:
 33814 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 33815 ;; Parameters:    Size  Location     Type
 33816 ;;		None
 33817 ;; Auto vars:     Size  Location     Type
 33818 ;;		None
 33819 ;; Return value:  Size  Location     Type
 33820 ;;                  1    wreg      void 
 33821 ;; Registers used:
 33822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33823 ;; Tracked objects:
 33824 ;;		On entry : 0/0
 33825 ;;		On exit  : 0/0
 33826 ;;		Unchanged: 0/0
 33827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33830 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33831 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33832 ;;Total ram usage:        6 bytes
 33833 ;; Hardware stack levels used: 1
 33834 ;; Hardware stack levels required when called: 3
 33835 ;; This function calls:
 33836 ;;		Absolute function
 33837 ;;		_EUSART1_Receive_ISR
 33838 ;;		_EUSART1_Transmit_ISR
 33839 ;;		_TMR0_ISR
 33840 ;;		_TMR1_ISR
 33841 ;;		_TMR2_ISR
 33842 ;; This function is called by:
 33843 ;;		Interrupt level 2
 33844 ;; This function uses a non-reentrant model
 33845 ;;
 33846                           
 33847                           	psect	intcode
 33848  000008                     __pintcode:
 33849                           	callstack 0
 33850  000008                     _INTERRUPT_InterruptManager:
 33851                           	callstack 14
 33852                           
 33853                           ; BSR set to: 14
 33854                           ;incstack = 0
 33855  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33856  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 33857  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 33858  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 33859  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 33860  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 33861  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 33862                           
 33863                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 33864  000022  010E               	movlb	14	; () banked
 33865  000024  BBC2               	btfsc	194,5,b	;volatile
 33866                           
 33867                           ; BSR set to: 14
 33868  000026  ABCA               	btfss	202,5,b	;volatile
 33869  000028  D003               	goto	i2l867
 33870                           
 33871                           ; BSR set to: 14
 33872                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 33873  00002A  ECC3  F049         	call	_TMR0_ISR	;wreg free
 33874                           
 33875                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 33876  00002E  D028               	goto	i2l873
 33877  000030                     i2l867:
 33878                           
 33879                           ; BSR set to: 14
 33880  000030  ACF2               	btfss	242,6,c	;volatile
 33881  000032  D026               	goto	i2l873
 33882                           
 33883                           ; BSR set to: 14
 33884                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 33885  000034  B9C5               	btfsc	197,4,b	;volatile
 33886                           
 33887                           ; BSR set to: 14
 33888  000036  A9CD               	btfss	205,4,b	;volatile
 33889  000038  D009               	goto	i2l870
 33890                           
 33891                           ; BSR set to: 14
 33892                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 33893  00003A  D801               	call	i2u2234_48
 33894  00003C  D021               	goto	i2l873
 33895  00003E                     i2u2234_48:
 33896  00003E  0005               	push	
 33897  000040  6EFA               	movwf	pclath,c
 33898  000042  0102               	movlb	2	; () banked
 33899  000044  51EF               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 33900  000046  6EFD               	movwf	tosl,c
 33901  000048  51F0               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 33902  00004A  D00B               	goto	L112
 33903  00004C                     i2l870:
 33904                           
 33905                           ; BSR set to: 14
 33906  00004C  BBC5               	btfsc	197,5,b	;volatile
 33907                           
 33908                           ; BSR set to: 14
 33909  00004E  ABCD               	btfss	205,5,b	;volatile
 33910  000050  D00C               	goto	i2l872
 33911                           
 33912                           ; BSR set to: 14
 33913                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 33914  000052  D801               	call	i2u2237_48
 33915  000054  D015               	goto	i2l873
 33916  000056                     i2u2237_48:
 33917  000056  0005               	push	
 33918  000058  6EFA               	movwf	pclath,c
 33919  00005A  0102               	movlb	2	; () banked
 33920  00005C  51ED               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 33921  00005E  6EFD               	movwf	tosl,c
 33922  000060  51EE               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 33923  000062                     L112:
 33924  000062  6EFE               	movwf	tosh,c
 33925  000064  6AFF               	clrf	tosu,c
 33926  000066  50FA               	movf	pclath,w,c
 33927  000068  0012               	return		;indir
 33928  00006A                     i2l872:
 33929                           
 33930                           ; BSR set to: 14
 33931  00006A  B1C6               	btfsc	198,0,b	;volatile
 33932                           
 33933                           ; BSR set to: 14
 33934  00006C  A1CE               	btfss	206,0,b	;volatile
 33935  00006E  D003               	goto	i2l874
 33936                           
 33937                           ; BSR set to: 14
 33938                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 33939  000070  EC3C  F047         	call	_TMR1_ISR	;wreg free
 33940                           
 33941                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 33942  000074  D005               	goto	i2l873
 33943  000076                     i2l874:
 33944                           
 33945                           ; BSR set to: 14
 33946  000076  B3C6               	btfsc	198,1,b	;volatile
 33947                           
 33948                           ; BSR set to: 14
 33949  000078  A3CE               	btfss	206,1,b	;volatile
 33950  00007A  D002               	goto	i2l873
 33951                           
 33952                           ; BSR set to: 14
 33953                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 33954  00007C  EC86  F032         	call	_TMR2_ISR	;wreg free
 33955  000080                     i2l873:
 33956                           
 33957                           ; BSR set to: 14
 33958  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 33959  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 33960  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 33961  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 33962  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 33963  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 33964  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33965  00009A  0011               	retfie		f
 33966  00009C                     __end_of_INTERRUPT_InterruptManager:
 33967                           	callstack 0
 33968                           
 33969 ;; *************** function _TMR2_ISR *****************
 33970 ;; Defined at:
 33971 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 33972 ;; Parameters:    Size  Location     Type
 33973 ;;		None
 33974 ;; Auto vars:     Size  Location     Type
 33975 ;;		None
 33976 ;; Return value:  Size  Location     Type
 33977 ;;                  1    wreg      void 
 33978 ;; Registers used:
 33979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33980 ;; Tracked objects:
 33981 ;;		On entry : 3F/E
 33982 ;;		On exit  : 0/0
 33983 ;;		Unchanged: 0/0
 33984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33989 ;;Total ram usage:        0 bytes
 33990 ;; Hardware stack levels used: 1
 33991 ;; Hardware stack levels required when called: 2
 33992 ;; This function calls:
 33993 ;;		Absolute function
 33994 ;;		_ReadADC
 33995 ;;		_TMR2_DefaultInterruptHandler
 33996 ;;		_controlTimeslots
 33997 ;;		_refreshSegment
 33998 ;; This function is called by:
 33999 ;;		_INTERRUPT_InterruptManager
 34000 ;; This function uses a non-reentrant model
 34001 ;;
 34002                           
 34003                           	psect	text187
 34004  00650C                     __ptext187:
 34005                           	callstack 0
 34006  00650C                     _TMR2_ISR:
 34007                           	callstack 14
 34008                           
 34009                           ; BSR set to: 14
 34010                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 34011                           
 34012                           ;incstack = 0
 34013  00650C  93CE               	bcf	206,1,b	;volatile
 34014                           
 34015                           ; BSR set to: 14
 34016                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 34017  00650E  ECC8  F044         	call	_ReadADC	;wreg free
 34018                           
 34019                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 34020  006512  EC8D  F03E         	call	_refreshSegment	;wreg free
 34021                           
 34022                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 34023  006516  0101               	movlb	1	; () banked
 34024  006518  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 34025  00651A  A4D8               	btfss	status,2,c
 34026                           
 34027                           ; BSR set to: 1
 34028                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 34029  00651C  079E               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 34030                           
 34031                           ; BSR set to: 1
 34032                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 34033  00651E  519C               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 34034  006520  B4D8               	btfsc	status,2,c
 34035  006522  D002               	goto	i2l16619
 34036                           
 34037                           ; BSR set to: 1
 34038                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 34039  006524  079C               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 34040                           
 34041                           ;mcc_generated_files/tmr2.c: 201:                 }
 34042  006526  D089               	goto	i2l16691
 34043  006528                     i2l16619:
 34044                           
 34045                           ; BSR set to: 1
 34046                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 34047  006528  0E32               	movlw	50
 34048  00652A  6F9C               	movwf	(_ts_system+1)& (0+255),b	;volatile
 34049                           
 34050                           ; BSR set to: 1
 34051                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 34052  00652C  ECAD  F02E         	call	_controlTimeslots	;wreg free
 34053                           
 34054                           ; BSR set to: 1
 34055                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 34056  006530  0100               	movlb	0	; () banked
 34057  006532  5192               	movf	_Counterchoose& (0+255),w,b
 34058  006534  A4D8               	btfss	status,2,c
 34059  006536  D002               	goto	i2l16627
 34060                           
 34061                           ; BSR set to: 0
 34062                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 34063  006538  0E01               	movlw	1
 34064  00653A  D001               	goto	L113
 34065  00653C                     i2l16627:
 34066                           
 34067                           ; BSR set to: 0
 34068                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 34069  00653C  0E00               	movlw	0
 34070  00653E                     L113:
 34071  00653E  6F92               	movwf	_Counterchoose& (0+255),b
 34072                           
 34073                           ; BSR set to: 0
 34074                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 34075                           
 34076                           ;mcc_generated_files/tmr2.c: 217:                                }
 34077  006540  0101               	movlb	1	; () banked
 34078  006542  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 34079  006544  A4D8               	btfss	status,2,c
 34080  006546  D034               	goto	i2l16653
 34081                           
 34082                           ; BSR set to: 1
 34083                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 34084  006548  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 34085  00654A  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 34086  00654C  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 34087  00654E  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 34088  006550  B4D8               	btfsc	status,2,c
 34089  006552  D008               	goto	i2l1266
 34090                           
 34091                           ; BSR set to: 1
 34092  006554  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 34093  006556  B4D8               	btfsc	status,2,c
 34094  006558  D005               	goto	i2l1266
 34095                           
 34096                           ; BSR set to: 1
 34097                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 34098  00655A  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 34099  00655C  0E00               	movlw	0
 34100  00655E  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 34101  006560  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 34102  006562  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 34103  006564                     i2l1266:
 34104                           
 34105                           ; BSR set to: 1
 34106                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 34107  006564  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34108  006566  A4D8               	btfss	status,2,c
 34109  006568  D00E               	goto	i2l16643
 34110                           
 34111                           ; BSR set to: 1
 34112                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 34113  00656A  057B               	decf	_powerControl_st& (0+255),w,b
 34114  00656C  A4D8               	btfss	status,2,c
 34115  00656E  D004               	goto	i2u1878_40
 34116                           
 34117                           ; BSR set to: 1
 34118                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 34119  006570  0100               	movlb	0	; () banked
 34120  006572  0592               	decf	_Counterchoose& (0+255),w,b
 34121  006574  A4D8               	btfss	status,2,c
 34122  006576  D061               	goto	i2l16691
 34123  006578                     i2u1878_40:
 34124                           
 34125                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 34126  006578  0E01               	movlw	1
 34127  00657A  0101               	movlb	1	; () banked
 34128  00657C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34129  00657E  0E00               	movlw	0
 34130  006580  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34131  006582  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34132  006584  D013               	goto	L114
 34133  006586                     i2l16643:
 34134                           
 34135                           ; BSR set to: 1
 34136  006586  0E02               	movlw	2
 34137  006588  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34138  00658A  A4D8               	btfss	status,2,c
 34139  00658C  D056               	goto	i2l16691
 34140                           
 34141                           ; BSR set to: 1
 34142                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 34143  00658E  057B               	decf	_powerControl_st& (0+255),w,b
 34144  006590  A4D8               	btfss	status,2,c
 34145  006592  D004               	goto	i2u1881_40
 34146                           
 34147                           ; BSR set to: 1
 34148                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 34149  006594  0100               	movlb	0	; () banked
 34150  006596  0592               	decf	_Counterchoose& (0+255),w,b
 34151  006598  A4D8               	btfss	status,2,c
 34152  00659A  D04F               	goto	i2l16691
 34153  00659C                     i2u1881_40:
 34154                           
 34155                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 34156  00659C  0EFF               	movlw	255
 34157  00659E  0101               	movlb	1	; () banked
 34158  0065A0  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 34159  0065A2  0EFF               	movlw	255
 34160  0065A4  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 34161  0065A6  0EFF               	movlw	255
 34162  0065A8  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 34163  0065AA  0EFF               	movlw	255
 34164  0065AC                     L114:
 34165  0065AC  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 34166                           
 34167                           ;mcc_generated_files/tmr2.c: 263:                            }
 34168  0065AE  D045               	goto	i2l16691
 34169  0065B0                     i2l16653:
 34170                           
 34171                           ; BSR set to: 1
 34172                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 34173  0065B0  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 34174  0065B2  A4D8               	btfss	status,2,c
 34175  0065B4  D01C               	goto	i2l1277
 34176                           
 34177                           ; BSR set to: 1
 34178                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 34179  0065B6  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34180  0065B8  A4D8               	btfss	status,2,c
 34181  0065BA  D00B               	goto	i2l16663
 34182                           
 34183                           ; BSR set to: 1
 34184                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34185  0065BC  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34186  0065BE  B4D8               	btfsc	status,2,c
 34187  0065C0  D016               	goto	i2l1277
 34188                           
 34189                           ; BSR set to: 1
 34190                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 34191  0065C2  0E01               	movlw	1
 34192  0065C4  0100               	movlb	0	; () banked
 34193  0065C6  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34194  0065C8  0E00               	movlw	0
 34195  0065CA  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34196  0065CC  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34197  0065CE  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34198  0065D0  D00E               	goto	i2l1277
 34199  0065D2                     i2l16663:
 34200                           
 34201                           ; BSR set to: 1
 34202  0065D2  0E02               	movlw	2
 34203  0065D4  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34204  0065D6  A4D8               	btfss	status,2,c
 34205  0065D8  D00A               	goto	i2l1277
 34206                           
 34207                           ; BSR set to: 1
 34208                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34209  0065DA  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34210  0065DC  B4D8               	btfsc	status,2,c
 34211  0065DE  D007               	goto	i2l1277
 34212                           
 34213                           ; BSR set to: 1
 34214                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 34215  0065E0  0E01               	movlw	1
 34216  0065E2  0100               	movlb	0	; () banked
 34217  0065E4  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34218  0065E6  0E00               	movlw	0
 34219  0065E8  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34220  0065EA  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34221  0065EC  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34222  0065EE                     i2l1277:
 34223                           
 34224                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 34225  0065EE  0101               	movlb	1	; () banked
 34226  0065F0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34227  0065F2  A4D8               	btfss	status,2,c
 34228  0065F4  D022               	goto	i2l16691
 34229                           
 34230                           ; BSR set to: 1
 34231  0065F6  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 34232  0065F8  A4D8               	btfss	status,2,c
 34233  0065FA  D01F               	goto	i2l16691
 34234                           
 34235                           ; BSR set to: 1
 34236                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 34237  0065FC  519B               	movf	_ts_system& (0+255),w,b	;volatile
 34238  0065FE  B4D8               	btfsc	status,2,c
 34239  006600  D002               	goto	i2l16677
 34240                           
 34241                           ; BSR set to: 1
 34242                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 34243  006602  079B               	decf	_ts_system& (0+255),f,b	;volatile
 34244                           
 34245                           ;mcc_generated_files/tmr2.c: 311:                                            }
 34246  006604  D01A               	goto	i2l16691
 34247  006606                     i2l16677:
 34248                           
 34249                           ; BSR set to: 1
 34250                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 34251  006606  0E0A               	movlw	10
 34252  006608  6F9B               	movwf	_ts_system& (0+255),b	;volatile
 34253                           
 34254                           ; BSR set to: 1
 34255                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 34256  00660A  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34257  00660C  A4D8               	btfss	status,2,c
 34258  00660E  D009               	goto	i2l16685
 34259                           
 34260                           ; BSR set to: 1
 34261                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 34262  006610  0100               	movlb	0	; () banked
 34263  006612  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 34264                           
 34265                           ; BSR set to: 0
 34266                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 34267  006614  0E01               	movlw	1
 34268  006616  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34269  006618  0E00               	movlw	0
 34270  00661A  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34271  00661C  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34272  00661E  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34273                           
 34274                           ;mcc_generated_files/tmr2.c: 322:                                                }
 34275  006620  D00C               	goto	i2l16691
 34276  006622                     i2l16685:
 34277                           
 34278                           ; BSR set to: 1
 34279  006622  0E02               	movlw	2
 34280  006624  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34281  006626  A4D8               	btfss	status,2,c
 34282  006628  D008               	goto	i2l16691
 34283                           
 34284                           ; BSR set to: 1
 34285                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 34286  00662A  0100               	movlb	0	; () banked
 34287  00662C  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 34288                           
 34289                           ; BSR set to: 0
 34290                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 34291  00662E  0E01               	movlw	1
 34292  006630  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34293  006632  0E00               	movlw	0
 34294  006634  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34295  006636  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34296  006638  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34297  00663A                     i2l16691:
 34298                           
 34299                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 34300  00663A  0102               	movlb	2	; () banked
 34301  00663C  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34302  00663E  11E0               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34303  006640  B4D8               	btfsc	status,2,c
 34304  006642  0012               	return	
 34305                           
 34306                           ; BSR set to: 2
 34307                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 34308  006644  D801               	call	i2u1893_48
 34309  006646  0012               	return	
 34310  006648                     i2u1893_48:
 34311  006648  0005               	push	
 34312  00664A  6EFA               	movwf	pclath,c
 34313  00664C  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34314  00664E  6EFD               	movwf	tosl,c
 34315  006650  51E0               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34316  006652  6EFE               	movwf	tosh,c
 34317  006654  6AFF               	clrf	tosu,c
 34318  006656  50FA               	movf	pclath,w,c
 34319  006658  0012               	return		;indir
 34320  00665A                     __end_of_TMR2_ISR:
 34321                           	callstack 0
 34322                           
 34323 ;; *************** function _refreshSegment *****************
 34324 ;; Defined at:
 34325 ;;		line 50 in file "outputs_MC50.c"
 34326 ;; Parameters:    Size  Location     Type
 34327 ;;		None
 34328 ;; Auto vars:     Size  Location     Type
 34329 ;;		None
 34330 ;; Return value:  Size  Location     Type
 34331 ;;                  1    wreg      void 
 34332 ;; Registers used:
 34333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34334 ;; Tracked objects:
 34335 ;;		On entry : 31/E
 34336 ;;		On exit  : 3E/0
 34337 ;;		Unchanged: 0/0
 34338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34343 ;;Total ram usage:        0 bytes
 34344 ;; Hardware stack levels used: 1
 34345 ;; Hardware stack levels required when called: 1
 34346 ;; This function calls:
 34347 ;;		_Segments_Set
 34348 ;; This function is called by:
 34349 ;;		_TMR2_ISR
 34350 ;; This function uses a non-reentrant model
 34351 ;;
 34352                           
 34353                           	psect	text188
 34354  007D1A                     __ptext188:
 34355                           	callstack 0
 34356  007D1A                     _refreshSegment:
 34357                           	callstack 14
 34358                           
 34359                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 34360                           
 34361                           ;incstack = 0
 34362  007D1A  0100               	movlb	0	; () banked
 34363  007D1C  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34364  007D1E  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34365  007D20  B4D8               	btfsc	status,2,c
 34366  007D22  D003               	goto	i2u1493_40
 34367                           
 34368                           ; BSR set to: 0
 34369  007D24  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34370  007D26  A4D8               	btfss	status,2,c
 34371  007D28  D01F               	goto	i2l2133
 34372  007D2A                     i2u1493_40:
 34373                           
 34374                           ; BSR set to: 0
 34375                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 34376  007D2A  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 34377  007D2C  A4D8               	btfss	status,2,c
 34378  007D2E  D00D               	goto	i2l2128
 34379                           
 34380                           ; BSR set to: 0
 34381                           
 34382                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 34383  007D30  9085               	bcf	133,0,c	;volatile
 34384                           
 34385                           ; BSR set to: 0
 34386                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 34387  007D32  0ED2               	movlw	low _DispTable
 34388  007D34  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 34389  007D36  6ED9               	movwf	fsr2l,c
 34390  007D38  6ADA               	clrf	fsr2h,c
 34391  007D3A  0E03               	movlw	high _DispTable
 34392  007D3C  22DA               	addwfc	fsr2h,f,c
 34393  007D3E  50DF               	movf	indf2,w,c
 34394  007D40  EC68  F04B         	call	_Segments_Set
 34395  007D44  8285               	bsf	133,1,c	;volatile
 34396                           
 34397                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 34398  007D46  0E00               	movlw	0
 34399  007D48  D00C               	goto	L115
 34400  007D4A                     i2l2128:
 34401                           
 34402                           ; BSR set to: 0
 34403  007D4A  9285               	bcf	133,1,c	;volatile
 34404                           
 34405                           ; BSR set to: 0
 34406                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 34407  007D4C  0ED2               	movlw	low _DispTable
 34408  007D4E  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 34409  007D50  6ED9               	movwf	fsr2l,c
 34410  007D52  6ADA               	clrf	fsr2h,c
 34411  007D54  0E03               	movlw	high _DispTable
 34412  007D56  22DA               	addwfc	fsr2h,f,c
 34413  007D58  50DF               	movf	indf2,w,c
 34414  007D5A  EC68  F04B         	call	_Segments_Set
 34415  007D5E  8085               	bsf	133,0,c	;volatile
 34416                           
 34417                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 34418  007D60  0E01               	movlw	1
 34419  007D62                     L115:
 34420  007D62  0100               	movlb	0	; () banked
 34421  007D64  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 34422  007D66  D002               	goto	i2l14689
 34423  007D68                     i2l2133:
 34424                           
 34425                           ; BSR set to: 0
 34426  007D68  9085               	bcf	133,0,c	;volatile
 34427                           
 34428                           ; BSR set to: 0
 34429                           
 34430                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 34431  007D6A  9285               	bcf	133,1,c	;volatile
 34432  007D6C                     i2l14689:
 34433                           
 34434                           ; BSR set to: 0
 34435                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 34436  007D6C  0101               	movlb	1	; () banked
 34437  007D6E  BFA6               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 34438  007D70  D005               	goto	i2u1495_40
 34439  007D72  51A6               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 34440  007D74  E114               	bnz	i2l2140
 34441  007D76  05A5               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 34442  007D78  B0D8               	btfsc	status,0,c
 34443  007D7A  0012               	return	
 34444  007D7C                     i2u1495_40:
 34445                           
 34446                           ; BSR set to: 1
 34447  007D7C  0100               	movlb	0	; () banked
 34448  007D7E  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34449  007D80  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34450  007D82  B4D8               	btfsc	status,2,c
 34451  007D84  0012               	return	
 34452                           
 34453                           ; BSR set to: 0
 34454                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 34455  007D86  C075  F1A5         	movff	_dispStruct+3,_ts_system+10	;volatile
 34456  007D8A  C076  F1A6         	movff	_dispStruct+4,_ts_system+11	;volatile
 34457                           
 34458                           ; BSR set to: 0
 34459                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 34460  007D8E  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34461  007D90  A4D8               	btfss	status,2,c
 34462  007D92  D003               	goto	i2l14699
 34463                           
 34464                           ; BSR set to: 0
 34465                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 34466  007D94  0E00               	movlw	0
 34467  007D96  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 34468                           
 34469                           ;outputs_MC50.c: 85:         }
 34470  007D98  0012               	return	
 34471  007D9A                     i2l14699:
 34472                           
 34473                           ; BSR set to: 0
 34474                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 34475  007D9A  0E01               	movlw	1
 34476  007D9C  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 34477  007D9E                     i2l2140:
 34478  007D9E  0012               	return		;funcret
 34479  007DA0                     __end_of_refreshSegment:
 34480                           	callstack 0
 34481                           
 34482 ;; *************** function _Segments_Set *****************
 34483 ;; Defined at:
 34484 ;;		line 93 in file "outputs_MC50.c"
 34485 ;; Parameters:    Size  Location     Type
 34486 ;;  value           1    wreg     unsigned char 
 34487 ;; Auto vars:     Size  Location     Type
 34488 ;;  value           1    0[COMRAM] unsigned char 
 34489 ;; Return value:  Size  Location     Type
 34490 ;;                  1    wreg      void 
 34491 ;; Registers used:
 34492 ;;		wreg, status,2, status,0
 34493 ;; Tracked objects:
 34494 ;;		On entry : 3F/0
 34495 ;;		On exit  : 0/0
 34496 ;;		Unchanged: 0/0
 34497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34502 ;;Total ram usage:        1 bytes
 34503 ;; Hardware stack levels used: 1
 34504 ;; This function calls:
 34505 ;;		Nothing
 34506 ;; This function is called by:
 34507 ;;		_refreshSegment
 34508 ;; This function uses a non-reentrant model
 34509 ;;
 34510                           
 34511                           	psect	text189
 34512  0096D0                     __ptext189:
 34513                           	callstack 0
 34514  0096D0                     _Segments_Set:
 34515                           	callstack 14
 34516                           
 34517                           ;incstack = 0
 34518                           ;Segments_Set@value stored from wreg
 34519  0096D0  6E01               	movwf	Segments_Set@value^0,c
 34520                           
 34521                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 34522  0096D2  0E80               	movlw	128
 34523  0096D4  1686               	andwf	134,f,c	;volatile
 34524                           
 34525                           ;outputs_MC50.c: 96:    LATD |= value;
 34526  0096D6  5001               	movf	Segments_Set@value^0,w,c	;volatile
 34527  0096D8  1286               	iorwf	134,f,c	;volatile
 34528  0096DA  0012               	return		;funcret
 34529  0096DC                     __end_of_Segments_Set:
 34530                           	callstack 0
 34531                           
 34532 ;; *************** function _controlTimeslots *****************
 34533 ;; Defined at:
 34534 ;;		line 190 in file "main_MC50.c"
 34535 ;; Parameters:    Size  Location     Type
 34536 ;;		None
 34537 ;; Auto vars:     Size  Location     Type
 34538 ;;		None
 34539 ;; Return value:  Size  Location     Type
 34540 ;;                  1    wreg      void 
 34541 ;; Registers used:
 34542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34543 ;; Tracked objects:
 34544 ;;		On entry : 3F/1
 34545 ;;		On exit  : 3F/1
 34546 ;;		Unchanged: 0/0
 34547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34552 ;;Total ram usage:        0 bytes
 34553 ;; Hardware stack levels used: 1
 34554 ;; Hardware stack levels required when called: 1
 34555 ;; This function calls:
 34556 ;;		_decrementTimeslot
 34557 ;; This function is called by:
 34558 ;;		_TMR2_ISR
 34559 ;; This function uses a non-reentrant model
 34560 ;;
 34561                           
 34562                           	psect	text190
 34563  005D5A                     __ptext190:
 34564                           	callstack 0
 34565  005D5A                     _controlTimeslots:
 34566                           	callstack 14
 34567                           
 34568                           ; BSR set to: 1
 34569                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 34570                           
 34571                           ;incstack = 0
 34572  005D5A  0EA3               	movlw	low (_ts_system+8)
 34573  005D5C  6E01               	movwf	decrementTimeslot@ts^0,c
 34574  005D5E  0E01               	movlw	high (_ts_system+8)
 34575  005D60  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34576  005D62  EC61  F049         	call	_decrementTimeslot	;wreg free
 34577                           
 34578                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 34579  005D66  0EE1               	movlw	low (_ts_system+70)
 34580  005D68  6E01               	movwf	decrementTimeslot@ts^0,c
 34581  005D6A  0E01               	movlw	high (_ts_system+70)
 34582  005D6C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34583  005D6E  EC61  F049         	call	_decrementTimeslot	;wreg free
 34584                           
 34585                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 34586  005D72  0EA5               	movlw	low (_ts_system+10)
 34587  005D74  6E01               	movwf	decrementTimeslot@ts^0,c
 34588  005D76  0E01               	movlw	high (_ts_system+10)
 34589  005D78  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34590  005D7A  EC61  F049         	call	_decrementTimeslot	;wreg free
 34591                           
 34592                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 34593  005D7E  0EA7               	movlw	low (_ts_system+12)
 34594  005D80  6E01               	movwf	decrementTimeslot@ts^0,c
 34595  005D82  0E01               	movlw	high (_ts_system+12)
 34596  005D84  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34597  005D86  EC61  F049         	call	_decrementTimeslot	;wreg free
 34598                           
 34599                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 34600  005D8A  0EA9               	movlw	low (_ts_system+14)
 34601  005D8C  6E01               	movwf	decrementTimeslot@ts^0,c
 34602  005D8E  0E01               	movlw	high (_ts_system+14)
 34603  005D90  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34604  005D92  EC61  F049         	call	_decrementTimeslot	;wreg free
 34605                           
 34606                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 34607  005D96  0EAB               	movlw	low (_ts_system+16)
 34608  005D98  6E01               	movwf	decrementTimeslot@ts^0,c
 34609  005D9A  0E01               	movlw	high (_ts_system+16)
 34610  005D9C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34611  005D9E  EC61  F049         	call	_decrementTimeslot	;wreg free
 34612                           
 34613                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 34614  005DA2  0EAD               	movlw	low (_ts_system+18)
 34615  005DA4  6E01               	movwf	decrementTimeslot@ts^0,c
 34616  005DA6  0E01               	movlw	high (_ts_system+18)
 34617  005DA8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34618  005DAA  EC61  F049         	call	_decrementTimeslot	;wreg free
 34619                           
 34620                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 34621  005DAE  0EAF               	movlw	low (_ts_system+20)
 34622  005DB0  6E01               	movwf	decrementTimeslot@ts^0,c
 34623  005DB2  0E01               	movlw	high (_ts_system+20)
 34624  005DB4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34625  005DB6  EC61  F049         	call	_decrementTimeslot	;wreg free
 34626                           
 34627                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 34628  005DBA  0EB1               	movlw	low (_ts_system+22)
 34629  005DBC  6E01               	movwf	decrementTimeslot@ts^0,c
 34630  005DBE  0E01               	movlw	high (_ts_system+22)
 34631  005DC0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34632  005DC2  EC61  F049         	call	_decrementTimeslot	;wreg free
 34633                           
 34634                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 34635  005DC6  0EB5               	movlw	low (_ts_system+26)
 34636  005DC8  6E01               	movwf	decrementTimeslot@ts^0,c
 34637  005DCA  0E01               	movlw	high (_ts_system+26)
 34638  005DCC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34639  005DCE  EC61  F049         	call	_decrementTimeslot	;wreg free
 34640                           
 34641                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 34642  005DD2  0EB7               	movlw	low (_ts_system+28)
 34643  005DD4  6E01               	movwf	decrementTimeslot@ts^0,c
 34644  005DD6  0E01               	movlw	high (_ts_system+28)
 34645  005DD8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34646  005DDA  EC61  F049         	call	_decrementTimeslot	;wreg free
 34647                           
 34648                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 34649  005DDE  0EB9               	movlw	low (_ts_system+30)
 34650  005DE0  6E01               	movwf	decrementTimeslot@ts^0,c
 34651  005DE2  0E01               	movlw	high (_ts_system+30)
 34652  005DE4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34653  005DE6  EC61  F049         	call	_decrementTimeslot	;wreg free
 34654                           
 34655                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 34656  005DEA  0EBF               	movlw	low (_ts_system+36)
 34657  005DEC  6E01               	movwf	decrementTimeslot@ts^0,c
 34658  005DEE  0E01               	movlw	high (_ts_system+36)
 34659  005DF0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34660  005DF2  EC61  F049         	call	_decrementTimeslot	;wreg free
 34661                           
 34662                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 34663  005DF6  0EC1               	movlw	low (_ts_system+38)
 34664  005DF8  6E01               	movwf	decrementTimeslot@ts^0,c
 34665  005DFA  0E01               	movlw	high (_ts_system+38)
 34666  005DFC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34667  005DFE  EC61  F049         	call	_decrementTimeslot	;wreg free
 34668                           
 34669                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 34670  005E02  0EC3               	movlw	low (_ts_system+40)
 34671  005E04  6E01               	movwf	decrementTimeslot@ts^0,c
 34672  005E06  0E01               	movlw	high (_ts_system+40)
 34673  005E08  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34674  005E0A  EC61  F049         	call	_decrementTimeslot	;wreg free
 34675                           
 34676                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 34677  005E0E  0EC5               	movlw	low (_ts_system+42)
 34678  005E10  6E01               	movwf	decrementTimeslot@ts^0,c
 34679  005E12  0E01               	movlw	high (_ts_system+42)
 34680  005E14  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34681  005E16  EC61  F049         	call	_decrementTimeslot	;wreg free
 34682                           
 34683                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 34684  005E1A  0EC7               	movlw	low (_ts_system+44)
 34685  005E1C  6E01               	movwf	decrementTimeslot@ts^0,c
 34686  005E1E  0E01               	movlw	high (_ts_system+44)
 34687  005E20  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34688  005E22  EC61  F049         	call	_decrementTimeslot	;wreg free
 34689                           
 34690                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 34691  005E26  0EC9               	movlw	low (_ts_system+46)
 34692  005E28  6E01               	movwf	decrementTimeslot@ts^0,c
 34693  005E2A  0E01               	movlw	high (_ts_system+46)
 34694  005E2C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34695  005E2E  EC61  F049         	call	_decrementTimeslot	;wreg free
 34696                           
 34697                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 34698  005E32  0ECB               	movlw	low (_ts_system+48)
 34699  005E34  6E01               	movwf	decrementTimeslot@ts^0,c
 34700  005E36  0E01               	movlw	high (_ts_system+48)
 34701  005E38  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34702  005E3A  EC61  F049         	call	_decrementTimeslot	;wreg free
 34703                           
 34704                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 34705  005E3E  0EDD               	movlw	low (_ts_system+66)
 34706  005E40  6E01               	movwf	decrementTimeslot@ts^0,c
 34707  005E42  0E01               	movlw	high (_ts_system+66)
 34708  005E44  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34709  005E46  EC61  F049         	call	_decrementTimeslot	;wreg free
 34710                           
 34711                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 34712  005E4A  0EDF               	movlw	low (_ts_system+68)
 34713  005E4C  6E01               	movwf	decrementTimeslot@ts^0,c
 34714  005E4E  0E01               	movlw	high (_ts_system+68)
 34715  005E50  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34716  005E52  EC61  F049         	call	_decrementTimeslot	;wreg free
 34717                           
 34718                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 34719  005E56  0100               	movlb	0	; () banked
 34720  005E58  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34721  005E5A  B4D8               	btfsc	status,2,c
 34722  005E5C  D008               	goto	i2u1499_40
 34723                           
 34724                           ; BSR set to: 0
 34725  005E5E  0101               	movlb	1	; () banked
 34726  005E60  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34727  005E62  D005               	goto	i2u1499_40
 34728  005E64  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34729  005E66  E109               	bnz	i2l2024
 34730  005E68  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34731  005E6A  B0D8               	btfsc	status,0,c
 34732  005E6C  D006               	goto	i2l2024
 34733  005E6E                     i2u1499_40:
 34734                           
 34735                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 34736  005E6E  0ECD               	movlw	low (_ts_system+50)
 34737  005E70  6E01               	movwf	decrementTimeslot@ts^0,c
 34738  005E72  0E01               	movlw	high (_ts_system+50)
 34739  005E74  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34740  005E76  EC61  F049         	call	_decrementTimeslot	;wreg free
 34741  005E7A                     i2l2024:
 34742                           
 34743                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 34744  005E7A  0ECF               	movlw	low (_ts_system+52)
 34745  005E7C  6E01               	movwf	decrementTimeslot@ts^0,c
 34746  005E7E  0E01               	movlw	high (_ts_system+52)
 34747  005E80  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34748  005E82  EC61  F049         	call	_decrementTimeslot	;wreg free
 34749                           
 34750                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 34751  005E86  0ED1               	movlw	low (_ts_system+54)
 34752  005E88  6E01               	movwf	decrementTimeslot@ts^0,c
 34753  005E8A  0E01               	movlw	high (_ts_system+54)
 34754  005E8C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34755  005E8E  EC61  F049         	call	_decrementTimeslot	;wreg free
 34756                           
 34757                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 34758  005E92  0ED3               	movlw	low (_ts_system+56)
 34759  005E94  6E01               	movwf	decrementTimeslot@ts^0,c
 34760  005E96  0E01               	movlw	high (_ts_system+56)
 34761  005E98  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34762  005E9A  EC61  F049         	call	_decrementTimeslot	;wreg free
 34763                           
 34764                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 34765  005E9E  0ED5               	movlw	low (_ts_system+58)
 34766  005EA0  6E01               	movwf	decrementTimeslot@ts^0,c
 34767  005EA2  0E01               	movlw	high (_ts_system+58)
 34768  005EA4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34769  005EA6  EC61  F049         	call	_decrementTimeslot	;wreg free
 34770                           
 34771                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 34772  005EAA  0ED7               	movlw	low (_ts_system+60)
 34773  005EAC  6E01               	movwf	decrementTimeslot@ts^0,c
 34774  005EAE  0E01               	movlw	high (_ts_system+60)
 34775  005EB0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34776  005EB2  EC61  F049         	call	_decrementTimeslot	;wreg free
 34777                           
 34778                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 34779  005EB6  0ED9               	movlw	low (_ts_system+62)
 34780  005EB8  6E01               	movwf	decrementTimeslot@ts^0,c
 34781  005EBA  0E01               	movlw	high (_ts_system+62)
 34782  005EBC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34783  005EBE  EC61  F049         	call	_decrementTimeslot	;wreg free
 34784                           
 34785                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 34786  005EC2  0EDB               	movlw	low (_ts_system+64)
 34787  005EC4  6E01               	movwf	decrementTimeslot@ts^0,c
 34788  005EC6  0E01               	movlw	high (_ts_system+64)
 34789  005EC8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34790  005ECA  EC61  F049         	call	_decrementTimeslot	;wreg free
 34791                           
 34792                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 34793  005ECE  0101               	movlb	1	; () banked
 34794  005ED0  BFBE               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 34795  005ED2  0012               	return	
 34796  005ED4  51BE               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 34797  005ED6  11BD               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 34798  005ED8  11BC               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 34799  005EDA  E103               	bnz	i2u1500_40
 34800  005EDC  05BB               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 34801  005EDE  A0D8               	btfss	status,0,c
 34802  005EE0  0012               	return	
 34803  005EE2                     i2u1500_40:
 34804                           
 34805                           ; BSR set to: 1
 34806                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 34807  005EE2  0EFF               	movlw	255
 34808  005EE4  27BB               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 34809  005EE6  0EFF               	movlw	255
 34810  005EE8  23BC               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 34811  005EEA  0EFF               	movlw	255
 34812  005EEC  23BD               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 34813  005EEE  0EFF               	movlw	255
 34814  005EF0  23BE               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 34815                           
 34816                           ; BSR set to: 1
 34817  005EF2  0012               	return		;funcret
 34818  005EF4                     __end_of_controlTimeslots:
 34819                           	callstack 0
 34820                           
 34821 ;; *************** function _decrementTimeslot *****************
 34822 ;; Defined at:
 34823 ;;		line 246 in file "main_MC50.c"
 34824 ;; Parameters:    Size  Location     Type
 34825 ;;  ts              2    0[COMRAM] PTR int 
 34826 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 34827 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 34828 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 34829 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 34830 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 34831 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 34832 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 34833 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 34834 ;; Auto vars:     Size  Location     Type
 34835 ;;		None
 34836 ;; Return value:  Size  Location     Type
 34837 ;;                  1    wreg      void 
 34838 ;; Registers used:
 34839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34840 ;; Tracked objects:
 34841 ;;		On entry : 0/1
 34842 ;;		On exit  : 0/0
 34843 ;;		Unchanged: 0/0
 34844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34849 ;;Total ram usage:        4 bytes
 34850 ;; Hardware stack levels used: 1
 34851 ;; This function calls:
 34852 ;;		Nothing
 34853 ;; This function is called by:
 34854 ;;		_controlTimeslots
 34855 ;; This function uses a non-reentrant model
 34856 ;;
 34857                           
 34858                           	psect	text191
 34859  0092C2                     __ptext191:
 34860                           	callstack 0
 34861  0092C2                     _decrementTimeslot:
 34862                           	callstack 14
 34863                           
 34864                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 34865                           
 34866                           ; BSR set to: 1
 34867                           ;incstack = 0
 34868  0092C2  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34869  0092C6  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34870  0092CA  0E01               	movlw	1
 34871  0092CC  BEDB               	btfsc	plusw2,7,c
 34872  0092CE  0012               	return	
 34873  0092D0  0E01               	movlw	1
 34874  0092D2  50DB               	movf	plusw2,w,c
 34875  0092D4  E103               	bnz	i2u1336_40
 34876  0092D6  04DE               	decf	postinc2,w,c
 34877  0092D8  A0D8               	btfss	status,0,c
 34878  0092DA  0012               	return	
 34879  0092DC                     i2u1336_40:
 34880                           
 34881                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 34882  0092DC  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34883  0092E0  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34884  0092E4  06DE               	decf	postinc2,f,c
 34885  0092E6  0E00               	movlw	0
 34886  0092E8  5ADD               	subwfb	postdec2,f,c
 34887  0092EA  0012               	return		;funcret
 34888  0092EC                     __end_of_decrementTimeslot:
 34889                           	callstack 0
 34890                           
 34891 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34892 ;; Defined at:
 34893 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 34894 ;; Parameters:    Size  Location     Type
 34895 ;;		None
 34896 ;; Auto vars:     Size  Location     Type
 34897 ;;		None
 34898 ;; Return value:  Size  Location     Type
 34899 ;;                  1    wreg      void 
 34900 ;; Registers used:
 34901 ;;		None
 34902 ;; Tracked objects:
 34903 ;;		On entry : 3F/2
 34904 ;;		On exit  : 3F/2
 34905 ;;		Unchanged: 3F/0
 34906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34911 ;;Total ram usage:        0 bytes
 34912 ;; Hardware stack levels used: 1
 34913 ;; This function calls:
 34914 ;;		Nothing
 34915 ;; This function is called by:
 34916 ;;		_TMR2_Initialize
 34917 ;;		_TMR2_ISR
 34918 ;; This function uses a non-reentrant model
 34919 ;;
 34920                           
 34921                           	psect	text192
 34922  00980A                     __ptext192:
 34923                           	callstack 0
 34924  00980A                     _TMR2_DefaultInterruptHandler:
 34925                           	callstack 15
 34926                           
 34927                           ; BSR set to: 2
 34928                           
 34929                           ;incstack = 0
 34930  00980A  0012               	return		;funcret
 34931  00980C                     __end_of_TMR2_DefaultInterruptHandler:
 34932                           	callstack 0
 34933                           
 34934 ;; *************** function _ReadADC *****************
 34935 ;; Defined at:
 34936 ;;		line 38 in file "controlCurrent_MC50.c"
 34937 ;; Parameters:    Size  Location     Type
 34938 ;;		None
 34939 ;; Auto vars:     Size  Location     Type
 34940 ;;		None
 34941 ;; Return value:  Size  Location     Type
 34942 ;;                  1    wreg      void 
 34943 ;; Registers used:
 34944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34945 ;; Tracked objects:
 34946 ;;		On entry : 3F/E
 34947 ;;		On exit  : 31/0
 34948 ;;		Unchanged: 0/0
 34949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34952 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34953 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34954 ;;Total ram usage:        3 bytes
 34955 ;; Hardware stack levels used: 1
 34956 ;; Hardware stack levels required when called: 1
 34957 ;; This function calls:
 34958 ;;		_ADCC_GetSingleConversion
 34959 ;; This function is called by:
 34960 ;;		_TMR2_ISR
 34961 ;; This function uses a non-reentrant model
 34962 ;;
 34963                           
 34964                           	psect	text193
 34965  008990                     __ptext193:
 34966                           	callstack 0
 34967  008990                     _ReadADC:
 34968                           	callstack 14
 34969                           
 34970                           ; BSR set to: 14
 34971                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 34972                           
 34973                           ; BSR set to: 2
 34974                           ;incstack = 0
 34975  008990  B060               	btfsc	96,0,c	;volatile
 34976  008992  0012               	return	
 34977                           
 34978                           ; BSR set to: 14
 34979                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 34980  008994  0E1D               	movlw	29
 34981  008996  0100               	movlb	0	; () banked
 34982  008998  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 34983  00899A  D002               	goto	i2l14665
 34984                           
 34985                           ; BSR set to: 0
 34986                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 34987  00899C  0E00               	movlw	0
 34988  00899E  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 34989  0089A0                     i2l14665:
 34990                           
 34991                           ; BSR set to: 0
 34992                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 34993  0089A0  5063               	movf	99,w,c	;volatile
 34994  0089A2  CF64 F002          	movff	3940,??_ReadADC	;volatile
 34995  0089A6  6A03               	clrf	(??_ReadADC+1)^0,c
 34996  0089A8  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 34997  0089AC  6A02               	clrf	??_ReadADC^0,c
 34998  0089AE  2602               	addwf	??_ReadADC^0,f,c
 34999  0089B0  0E00               	movlw	0
 35000  0089B2  2203               	addwfc	(??_ReadADC+1)^0,f,c
 35001  0089B4  0E06               	movlw	6
 35002  0089B6  6E04               	movwf	(??_ReadADC+2)^0,c
 35003  0089B8                     i2u1491_45:
 35004  0089B8  90D8               	bcf	status,0,c
 35005  0089BA  3203               	rrcf	(??_ReadADC+1)^0,f,c
 35006  0089BC  3202               	rrcf	??_ReadADC^0,f,c
 35007  0089BE  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 35008  0089C0  D7FB               	goto	i2u1491_45
 35009  0089C2  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 35010  0089C4  0D02               	mullw	2
 35011  0089C6  0E00               	movlw	low _ADC_array
 35012  0089C8  24F3               	addwf	243,w,c
 35013  0089CA  6ED9               	movwf	fsr2l,c
 35014  0089CC  0E02               	movlw	high _ADC_array
 35015  0089CE  20F4               	addwfc	prodh,w,c
 35016  0089D0  6EDA               	movwf	fsr2h,c
 35017  0089D2  C002  FFDE         	movff	??_ReadADC,postinc2
 35018  0089D6  C003  FFDD         	movff	??_ReadADC+1,postdec2
 35019                           
 35020                           ; BSR set to: 0
 35021                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 35022  0089DA  0E00               	movlw	0
 35023  0089DC  EC0B  F04B         	call	_ADCC_GetSingleConversion
 35024                           
 35025                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 35026  0089E0  0100               	movlb	0	; () banked
 35027  0089E2  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 35028  0089E4  0012               	return		;funcret
 35029  0089E6                     __end_of_ReadADC:
 35030                           	callstack 0
 35031                           
 35032 ;; *************** function _ADCC_GetSingleConversion *****************
 35033 ;; Defined at:
 35034 ;;		line 131 in file "mcc_generated_files/adcc.c"
 35035 ;; Parameters:    Size  Location     Type
 35036 ;;  channel         1    wreg     enum E10053
 35037 ;; Auto vars:     Size  Location     Type
 35038 ;;  channel         1    0[COMRAM] enum E10053
 35039 ;; Return value:  Size  Location     Type
 35040 ;;                  2  433[None  ] int 
 35041 ;; Registers used:
 35042 ;;		wreg, status,2, cstack
 35043 ;; Tracked objects:
 35044 ;;		On entry : 3F/0
 35045 ;;		On exit  : 0/0
 35046 ;;		Unchanged: 0/0
 35047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35052 ;;Total ram usage:        1 bytes
 35053 ;; Hardware stack levels used: 1
 35054 ;; This function calls:
 35055 ;;		Nothing
 35056 ;; This function is called by:
 35057 ;;		_ReadADC
 35058 ;; This function uses a non-reentrant model
 35059 ;;
 35060                           
 35061                           	psect	text194
 35062  009616                     __ptext194:
 35063                           	callstack 0
 35064  009616                     _ADCC_GetSingleConversion:
 35065                           	callstack 14
 35066                           
 35067                           ;incstack = 0
 35068                           ;ADCC_GetSingleConversion@channel stored from wreg
 35069  009616  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 35070                           
 35071                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 35072  009618  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 35073                           
 35074                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 35075  00961C  8E60               	bsf	96,7,c	;volatile
 35076                           
 35077                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 35078  00961E  0E1A               	movlw	26
 35079  009620                     i2u2983_47:
 35080  009620  2EE8               	decfsz	wreg,f,c
 35081  009622  D7FE               	bra	i2u2983_47
 35082  009624  D000               	nop2	
 35083                           
 35084                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 35085  009626  9C60               	bcf	96,6,c	;volatile
 35086                           
 35087                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 35088  009628  8060               	bsf	96,0,c	;volatile
 35089  00962A  0012               	return		;funcret
 35090  00962C                     __end_of_ADCC_GetSingleConversion:
 35091                           	callstack 0
 35092                           
 35093 ;; *************** function _TMR1_ISR *****************
 35094 ;; Defined at:
 35095 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 35096 ;; Parameters:    Size  Location     Type
 35097 ;;		None
 35098 ;; Auto vars:     Size  Location     Type
 35099 ;;		None
 35100 ;; Return value:  Size  Location     Type
 35101 ;;                  1    wreg      void 
 35102 ;; Registers used:
 35103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35104 ;; Tracked objects:
 35105 ;;		On entry : 3F/E
 35106 ;;		On exit  : 0/0
 35107 ;;		Unchanged: 0/0
 35108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35113 ;;Total ram usage:        0 bytes
 35114 ;; Hardware stack levels used: 1
 35115 ;; Hardware stack levels required when called: 2
 35116 ;; This function calls:
 35117 ;;		Absolute function
 35118 ;;		_TMR1_DefaultInterruptHandler
 35119 ;;		_TMR1_WriteTimer
 35120 ;;		_controlMotorForce
 35121 ;; This function is called by:
 35122 ;;		_INTERRUPT_InterruptManager
 35123 ;; This function uses a non-reentrant model
 35124 ;;
 35125                           
 35126                           	psect	text195
 35127  008E78                     __ptext195:
 35128                           	callstack 0
 35129  008E78                     _TMR1_ISR:
 35130                           	callstack 14
 35131                           
 35132                           ; BSR set to: 14
 35133                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 35134                           
 35135                           ;incstack = 0
 35136  008E78  91CE               	bcf	206,0,b	;volatile
 35137                           
 35138                           ; BSR set to: 14
 35139                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 35140  008E7A  EC5E  F027         	call	_controlMotorForce	;wreg free
 35141                           
 35142                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 35143  008E7E  0101               	movlb	1	; () banked
 35144  008E80  51A0               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 35145  008E82  A4D8               	btfss	status,2,c
 35146                           
 35147                           ; BSR set to: 1
 35148                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 35149  008E84  07A0               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 35150                           
 35151                           ; BSR set to: 1
 35152                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 35153  008E86  519D               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 35154  008E88  A4D8               	btfss	status,2,c
 35155                           
 35156                           ; BSR set to: 1
 35157                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 35158  008E8A  079D               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 35159                           
 35160                           ; BSR set to: 1
 35161                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 35162  008E8C  C2E3  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 35163  008E90  C2E4  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 35164  008E94  EC69  F04A         	call	_TMR1_WriteTimer	;wreg free
 35165                           
 35166                           ; BSR set to: 1
 35167                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 35168  008E98  0102               	movlb	2	; () banked
 35169  008E9A  51E1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35170  008E9C  11E2               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35171  008E9E  B4D8               	btfsc	status,2,c
 35172  008EA0  0012               	return	
 35173                           
 35174                           ; BSR set to: 2
 35175                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 35176  008EA2  D801               	call	i2u1869_48
 35177  008EA4  0012               	return	
 35178  008EA6                     i2u1869_48:
 35179  008EA6  0005               	push	
 35180  008EA8  6EFA               	movwf	pclath,c
 35181  008EAA  51E1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 35182  008EAC  6EFD               	movwf	tosl,c
 35183  008EAE  51E2               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 35184  008EB0  6EFE               	movwf	tosh,c
 35185  008EB2  6AFF               	clrf	tosu,c
 35186  008EB4  50FA               	movf	pclath,w,c
 35187  008EB6  0012               	return		;indir
 35188  008EB8                     __end_of_TMR1_ISR:
 35189                           	callstack 0
 35190                           
 35191 ;; *************** function _controlMotorForce *****************
 35192 ;; Defined at:
 35193 ;;		line 213 in file "outputs_MC50.c"
 35194 ;; Parameters:    Size  Location     Type
 35195 ;;		None
 35196 ;; Auto vars:     Size  Location     Type
 35197 ;;		None
 35198 ;; Return value:  Size  Location     Type
 35199 ;;                  1    wreg      void 
 35200 ;; Registers used:
 35201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35202 ;; Tracked objects:
 35203 ;;		On entry : 3F/E
 35204 ;;		On exit  : 3E/0
 35205 ;;		Unchanged: 0/0
 35206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35209 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35210 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35211 ;;Total ram usage:        5 bytes
 35212 ;; Hardware stack levels used: 1
 35213 ;; Hardware stack levels required when called: 1
 35214 ;; This function calls:
 35215 ;;		i2_GetMotorPower
 35216 ;;		i2_VerifyElectricalBrake
 35217 ;; This function is called by:
 35218 ;;		_TMR1_ISR
 35219 ;; This function uses a non-reentrant model
 35220 ;;
 35221                           
 35222                           	psect	text196
 35223  004EBC                     __ptext196:
 35224                           	callstack 0
 35225  004EBC                     _controlMotorForce:
 35226                           	callstack 14
 35227                           
 35228                           ; BSR set to: 14
 35229                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 35230                           
 35231                           ;incstack = 0
 35232  004EBC  EC39  F03A         	call	i2_GetMotorPower	;wreg free
 35233  004EC0  6F90               	movwf	_difTime& (0+255),b
 35234                           
 35235                           ; BSR set to: 1
 35236                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 35237  004EC2  057B               	decf	_powerControl_st& (0+255),w,b
 35238  004EC4  A4D8               	btfss	status,2,c
 35239  004EC6  D00F               	goto	i2l2191
 35240                           
 35241                           ; BSR set to: 1
 35242                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 35243  004EC8  BFC8               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 35244  004ECA  D008               	goto	i2l14553
 35245  004ECC  51C8               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 35246  004ECE  E103               	bnz	i2u1451_40
 35247  004ED0  05C7               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 35248  004ED2  A0D8               	btfss	status,0,c
 35249  004ED4  D003               	goto	i2l14553
 35250  004ED6                     i2u1451_40:
 35251                           
 35252                           ; BSR set to: 1
 35253                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 35254  004ED6  0E00               	movlw	0
 35255  004ED8  6F91               	movwf	_StateTRIAC& (0+255),b
 35256                           
 35257                           ;outputs_MC50.c: 223:         }
 35258  004EDA  D005               	goto	i2l2191
 35259  004EDC                     i2l14553:
 35260                           
 35261                           ; BSR set to: 1
 35262  004EDC  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 35263  004EDE  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 35264  004EE0  A0D8               	btfss	status,0,c
 35265                           
 35266                           ; BSR set to: 1
 35267                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 35268  004EE2  C17E  F190         	movff	_powerControl_st+3,_difTime
 35269  004EE6                     i2l2191:
 35270                           
 35271                           ; BSR set to: 1
 35272                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 35273  004EE6  A68D               	btfss	141,3,c	;volatile
 35274  004EE8  D071               	goto	i2l2195
 35275                           
 35276                           ; BSR set to: 1
 35277  004EEA  5193               	movf	_zeroCrossing& (0+255),w,b
 35278  004EEC  A4D8               	btfss	status,2,c
 35279  004EEE  D06E               	goto	i2l2195
 35280                           
 35281                           ; BSR set to: 1
 35282                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 35283  004EF0  5192               	movf	_waitZeroPeak& (0+255),w,b
 35284  004EF2  A4D8               	btfss	status,2,c
 35285  004EF4  D016               	goto	i2l14569
 35286                           
 35287                           ; BSR set to: 1
 35288                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 35289  004EF6  0EF1               	movlw	low _zeroCrossingWaitTime
 35290  004EF8  0100               	movlb	0	; () banked
 35291  004EFA  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35292  004EFC  6ED9               	movwf	fsr2l,c
 35293  004EFE  6ADA               	clrf	fsr2h,c
 35294  004F00  0E02               	movlw	high _zeroCrossingWaitTime
 35295  004F02  22DA               	addwfc	fsr2h,f,c
 35296  004F04  0101               	movlb	1	; () banked
 35297  004F06  90D8               	bcf	status,0,c
 35298  004F08  3194               	rrcf	_zeroCrossingLength& (0+255),w,b
 35299  004F0A  6EDF               	movwf	indf2,c
 35300                           
 35301                           ; BSR set to: 1
 35302                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 35303  004F0C  0100               	movlb	0	; () banked
 35304  004F0E  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35305  004F10  A4D8               	btfss	status,2,c
 35306  004F12  D002               	goto	i2l14567
 35307                           
 35308                           ; BSR set to: 0
 35309                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 35310  004F14  0E01               	movlw	1
 35311  004F16  D001               	goto	L116
 35312  004F18                     i2l14567:
 35313                           
 35314                           ; BSR set to: 0
 35315                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 35316  004F18  0E00               	movlw	0
 35317  004F1A                     L116:
 35318  004F1A  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 35319                           
 35320                           ; BSR set to: 0
 35321                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 35322                           
 35323                           ;outputs_MC50.c: 268:             }
 35324  004F1C  0E00               	movlw	0
 35325  004F1E  0101               	movlb	1	; () banked
 35326  004F20  6F94               	movwf	_zeroCrossingLength& (0+255),b
 35327  004F22                     i2l14569:
 35328                           
 35329                           ; BSR set to: 1
 35330                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 35331  004F22  0E50               	movlw	80
 35332  004F24  6590               	cpfsgt	_difTime& (0+255),b
 35333  004F26  D007               	goto	i2u1458_40
 35334                           
 35335                           ; BSR set to: 1
 35336  004F28  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35337  004F2A  D008               	goto	i2l14575
 35338  004F2C  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35339  004F2E  E103               	bnz	i2u1458_40
 35340  004F30  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35341  004F32  A0D8               	btfss	status,0,c
 35342  004F34  D003               	goto	i2l14575
 35343  004F36                     i2u1458_40:
 35344                           
 35345                           ; BSR set to: 1
 35346                           
 35347                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 35348  004F36  9E86               	bcf	134,7,c	;volatile
 35349                           
 35350                           ; BSR set to: 1
 35351                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 35352  004F38  0E00               	movlw	0
 35353  004F3A  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35354  004F3C                     i2l14575:
 35355                           
 35356                           ; BSR set to: 1
 35357                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 35358  004F3C  2B92               	incf	_waitZeroPeak& (0+255),f,b
 35359                           
 35360                           ; BSR set to: 1
 35361                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 35362  004F3E  0EF1               	movlw	low _zeroCrossingWaitTime
 35363  004F40  0100               	movlb	0	; () banked
 35364  004F42  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35365  004F44  6ED9               	movwf	fsr2l,c
 35366  004F46  6ADA               	clrf	fsr2h,c
 35367  004F48  0E02               	movlw	high _zeroCrossingWaitTime
 35368  004F4A  22DA               	addwfc	fsr2h,f,c
 35369  004F4C  0101               	movlb	1	; () banked
 35370  004F4E  5192               	movf	_waitZeroPeak& (0+255),w,b
 35371  004F50  5CDE               	subwf	postinc2,w,c
 35372  004F52  B0D8               	btfsc	status,0,c
 35373  004F54  D044               	goto	i2l14605
 35374                           
 35375                           ; BSR set to: 1
 35376                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 35377  004F56  0E59               	movlw	89
 35378  004F58  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 35379  004F5A  D005               	goto	i2l14585
 35380                           
 35381                           ; BSR set to: 1
 35382  004F5C  0E6A               	movlw	106
 35383  004F5E  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 35384  004F60  D002               	goto	i2l14585
 35385                           
 35386                           ; BSR set to: 1
 35387                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 35388  004F62  0E01               	movlw	1
 35389  004F64  D001               	goto	L117
 35390  004F66                     i2l14585:
 35391                           
 35392                           ; BSR set to: 1
 35393                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 35394  004F66  0E00               	movlw	0
 35395  004F68                     L117:
 35396  004F68  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 35397                           
 35398                           ; BSR set to: 1
 35399                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 35400                           
 35401                           ;outputs_MC50.c: 292:             }
 35402  004F6A  0E50               	movlw	80
 35403  004F6C  6FA0               	movwf	(_ts_system+5)& (0+255),b	;volatile
 35404                           
 35405                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 35406  004F6E  0E00               	movlw	0
 35407  004F70  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 35408                           
 35409                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 35410  004F72  0E01               	movlw	1
 35411  004F74  6F91               	movwf	_StateTRIAC& (0+255),b
 35412                           
 35413                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 35414  004F76  0E01               	movlw	1
 35415  004F78  6F93               	movwf	_zeroCrossing& (0+255),b
 35416                           
 35417                           ; BSR set to: 1
 35418                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 35419  004F7A  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 35420                           
 35421                           ; BSR set to: 1
 35422                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 35423  004F7C  0100               	movlb	0	; () banked
 35424  004F7E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35425  004F80  A4D8               	btfss	status,2,c
 35426  004F82  D00E               	goto	i2l14597
 35427                           
 35428                           ; BSR set to: 0
 35429  004F84  0101               	movlb	1	; () banked
 35430  004F86  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35431  004F88  D00B               	goto	i2l14597
 35432  004F8A  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35433  004F8C  E103               	bnz	i2u1463_40
 35434  004F8E  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35435  004F90  A0D8               	btfss	status,0,c
 35436  004F92  D006               	goto	i2l14597
 35437  004F94                     i2u1463_40:
 35438                           
 35439                           ; BSR set to: 1
 35440                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 35441  004F94  0E01               	movlw	1
 35442  004F96  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 35443  004F98  D022               	goto	i2l14605
 35444  004F9A                     i2u1464_40:
 35445                           
 35446                           ; BSR set to: 1
 35447                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 35448  004F9A  0E00               	movlw	0
 35449  004F9C  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 35450  004F9E  D01F               	goto	i2l14605
 35451  004FA0                     i2l14597:
 35452                           
 35453                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 35454  004FA0  0101               	movlb	1	; () banked
 35455  004FA2  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 35456  004FA4  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 35457  004FA8  6A06               	clrf	(??_controlMotorForce+1)^0,c
 35458  004FAA  2605               	addwf	??_controlMotorForce^0,f,c
 35459  004FAC  0E00               	movlw	0
 35460  004FAE  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 35461  004FB0  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 35462  004FB2  6E07               	movwf	(??_controlMotorForce+2)^0,c
 35463  004FB4  6A08               	clrf	(??_controlMotorForce+3)^0,c
 35464  004FB6  5005               	movf	??_controlMotorForce^0,w,c
 35465  004FB8  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 35466  004FBA  5008               	movf	(??_controlMotorForce+3)^0,w,c
 35467  004FBC  0A80               	xorlw	128
 35468  004FBE  6E09               	movwf	(??_controlMotorForce+4)^0,c
 35469  004FC0  5006               	movf	(??_controlMotorForce+1)^0,w,c
 35470  004FC2  0A80               	xorlw	128
 35471  004FC4  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 35472  004FC6  B0D8               	btfsc	status,0,c
 35473  004FC8  D7E8               	goto	i2u1464_40
 35474  004FCA  D009               	goto	i2l14605
 35475  004FCC                     i2l2195:
 35476                           
 35477                           ; BSR set to: 1
 35478  004FCC  B68D               	btfsc	141,3,c	;volatile
 35479  004FCE  D007               	goto	i2l14605
 35480                           
 35481                           ; BSR set to: 1
 35482  004FD0  5193               	movf	_zeroCrossing& (0+255),w,b
 35483  004FD2  B4D8               	btfsc	status,2,c
 35484  004FD4  D004               	goto	i2l14605
 35485                           
 35486                           ; BSR set to: 1
 35487                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 35488  004FD6  0E00               	movlw	0
 35489  004FD8  6F93               	movwf	_zeroCrossing& (0+255),b
 35490                           
 35491                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 35492  004FDA  0E00               	movlw	0
 35493  004FDC  6F92               	movwf	_waitZeroPeak& (0+255),b
 35494  004FDE                     i2l14605:
 35495                           
 35496                           ; BSR set to: 1
 35497                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 35498  004FDE  B68D               	btfsc	141,3,c	;volatile
 35499                           
 35500                           ; BSR set to: 1
 35501                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 35502  004FE0  2B94               	incf	_zeroCrossingLength& (0+255),f,b
 35503                           
 35504                           ; BSR set to: 1
 35505                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 35506                           
 35507                           ;outputs_MC50.c: 340:     }
 35508  004FE2  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 35509                           
 35510                           ; BSR set to: 1
 35511                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 35512  004FE4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 35513  004FE6  ECCB  F040         	call	i2_VerifyElectricalBrake
 35514  004FEA  0100               	movlb	0	; () banked
 35515  004FEC  6F83               	movwf	_stateMotor& (0+255),b
 35516                           
 35517                           ; BSR set to: 0
 35518                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 35519  004FEE  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35520  004FF0  A4D8               	btfss	status,2,c
 35521  004FF2  D02E               	goto	i2l14629
 35522                           
 35523                           ; BSR set to: 0
 35524  004FF4  0101               	movlb	1	; () banked
 35525  004FF6  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35526  004FF8  D02B               	goto	i2l14629
 35527  004FFA  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35528  004FFC  E103               	bnz	i2u1470_40
 35529  004FFE  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35530  005000  A0D8               	btfss	status,0,c
 35531  005002  D026               	goto	i2l14629
 35532  005004                     i2u1470_40:
 35533                           
 35534                           ; BSR set to: 1
 35535  005004  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35536  005006  D005               	goto	i2u1471_40
 35537  005008  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35538  00500A  E122               	bnz	i2l14629
 35539  00500C  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35540  00500E  B0D8               	btfsc	status,0,c
 35541  005010  D01F               	goto	i2l14629
 35542  005012                     i2u1471_40:
 35543                           
 35544                           ; BSR set to: 1
 35545                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 35546  005012  0100               	movlb	0	; () banked
 35547  005014  5183               	movf	_stateMotor& (0+255),w,b
 35548  005016  B4D8               	btfsc	status,2,c
 35549  005018  D03A               	goto	i2l14641
 35550                           
 35551                           ; BSR set to: 0
 35552  00501A  0101               	movlb	1	; () banked
 35553  00501C  0591               	decf	_StateTRIAC& (0+255),w,b
 35554  00501E  A4D8               	btfss	status,2,c
 35555  005020  D036               	goto	i2l14641
 35556                           
 35557                           ; BSR set to: 1
 35558  005022  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35559  005024  D005               	goto	i2u1474_40
 35560  005026  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35561  005028  E132               	bnz	i2l14641
 35562  00502A  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35563  00502C  B0D8               	btfsc	status,0,c
 35564  00502E  D02F               	goto	i2l14641
 35565  005030                     i2u1474_40:
 35566                           
 35567                           ; BSR set to: 1
 35568  005030  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 35569  005032  A4D8               	btfss	status,2,c
 35570  005034  D02C               	goto	i2l14641
 35571                           
 35572                           ; BSR set to: 1
 35573  005036  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35574  005038  D006               	goto	i2u1476_40
 35575  00503A  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35576  00503C  E128               	bnz	i2l14641
 35577  00503E  0E0C               	movlw	12
 35578  005040  5DC3               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 35579  005042  B0D8               	btfsc	status,0,c
 35580  005044  D024               	goto	i2l14641
 35581  005046                     i2u1476_40:
 35582                           
 35583                           ; BSR set to: 1
 35584                           
 35585                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35586  005046  8E86               	bsf	134,7,c	;volatile
 35587                           
 35588                           ; BSR set to: 1
 35589                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 35590  005048  0EEC               	movlw	236
 35591  00504A  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35592  00504C  0E78               	movlw	120
 35593  00504E  D01A               	goto	L118
 35594  005050                     i2l14629:
 35595                           
 35596                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 35597  005050  0100               	movlb	0	; () banked
 35598  005052  5183               	movf	_stateMotor& (0+255),w,b
 35599  005054  B4D8               	btfsc	status,2,c
 35600  005056  D01B               	goto	i2l14641
 35601                           
 35602                           ; BSR set to: 0
 35603  005058  0101               	movlb	1	; () banked
 35604  00505A  5190               	movf	_difTime& (0+255),w,b
 35605  00505C  5DA0               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 35606  00505E  B0D8               	btfsc	status,0,c
 35607  005060  D016               	goto	i2l14641
 35608                           
 35609                           ; BSR set to: 1
 35610  005062  0591               	decf	_StateTRIAC& (0+255),w,b
 35611  005064  A4D8               	btfss	status,2,c
 35612  005066  D013               	goto	i2l14641
 35613                           
 35614                           ; BSR set to: 1
 35615  005068  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35616  00506A  D005               	goto	i2u1480_40
 35617  00506C  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35618  00506E  E10F               	bnz	i2l14641
 35619  005070  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35620  005072  B0D8               	btfsc	status,0,c
 35621  005074  D00C               	goto	i2l14641
 35622  005076                     i2u1480_40:
 35623                           
 35624                           ; BSR set to: 1
 35625  005076  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 35626  005078  A4D8               	btfss	status,2,c
 35627  00507A  D009               	goto	i2l14641
 35628                           
 35629                           ; BSR set to: 1
 35630                           
 35631                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35632  00507C  8E86               	bsf	134,7,c	;volatile
 35633                           
 35634                           ; BSR set to: 1
 35635                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 35636  00507E  0EFF               	movlw	255
 35637  005080  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35638  005082  0E38               	movlw	56
 35639  005084                     L118:
 35640  005084  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 35641                           
 35642                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 35643  005086  0E01               	movlw	1
 35644  005088  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35645                           
 35646                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 35647  00508A  0E00               	movlw	0
 35648  00508C  6F91               	movwf	_StateTRIAC& (0+255),b
 35649  00508E                     i2l14641:
 35650                           
 35651                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 35652  00508E  0E15               	movlw	21
 35653  005090  0101               	movlb	1	; () banked
 35654  005092  61A0               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 35655  005094  D002               	goto	i2u1483_40
 35656                           
 35657                           ; BSR set to: 1
 35658  005096  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35659  005098  D004               	goto	i2u1484_40
 35660  00509A                     i2u1483_40:
 35661                           
 35662                           ; BSR set to: 1
 35663  00509A  0100               	movlb	0	; () banked
 35664  00509C  5183               	movf	_stateMotor& (0+255),w,b
 35665  00509E  A4D8               	btfss	status,2,c
 35666  0050A0  D004               	goto	i2l2222
 35667  0050A2                     i2u1484_40:
 35668                           
 35669                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 35670  0050A2  9E86               	bcf	134,7,c	;volatile
 35671                           
 35672                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 35673  0050A4  0E00               	movlw	0
 35674  0050A6  0101               	movlb	1	; () banked
 35675  0050A8  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35676  0050AA                     i2l2222:
 35677                           
 35678                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 35679  0050AA  0100               	movlb	0	; () banked
 35680  0050AC  5183               	movf	_stateMotor& (0+255),w,b
 35681  0050AE  B4D8               	btfsc	status,2,c
 35682  0050B0  D00C               	goto	i2l14653
 35683                           
 35684                           ; BSR set to: 0
 35685  0050B2  0101               	movlb	1	; () banked
 35686  0050B4  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35687  0050B6  D009               	goto	i2l14653
 35688  0050B8  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35689  0050BA  E103               	bnz	i2u1486_40
 35690  0050BC  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35691  0050BE  A0D8               	btfss	status,0,c
 35692  0050C0  D004               	goto	i2l14653
 35693  0050C2                     i2u1486_40:
 35694                           
 35695                           ; BSR set to: 1
 35696                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 35697  0050C2  07A1               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 35698  0050C4  A0D8               	btfss	status,0,c
 35699  0050C6  07A2               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 35700                           
 35701                           ;outputs_MC50.c: 399:     }
 35702  0050C8  0012               	return	
 35703  0050CA                     i2l14653:
 35704  0050CA  0100               	movlb	0	; () banked
 35705  0050CC  5183               	movf	_stateMotor& (0+255),w,b
 35706  0050CE  A4D8               	btfss	status,2,c
 35707  0050D0  0012               	return	
 35708                           
 35709                           ; BSR set to: 0
 35710  0050D2  0101               	movlb	1	; () banked
 35711  0050D4  AFA2               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 35712  0050D6  0012               	return	
 35713                           
 35714                           ; BSR set to: 1
 35715                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 35716  0050D8  4BA1               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 35717  0050DA  2BA2               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 35718  0050DC  0012               	return		;funcret
 35719  0050DE                     __end_of_controlMotorForce:
 35720                           	callstack 0
 35721                           
 35722 ;; *************** function i2_VerifyElectricalBrake *****************
 35723 ;; Defined at:
 35724 ;;		line 658 in file "outputs_MC50.c"
 35725 ;; Parameters:    Size  Location     Type
 35726 ;;  actualState     1    wreg     enum E10381
 35727 ;; Auto vars:     Size  Location     Type
 35728 ;;  actualState     1    1[COMRAM] enum E10381
 35729 ;;  tempState       1    0[COMRAM] enum E10381
 35730 ;; Return value:  Size  Location     Type
 35731 ;;                  1    wreg      enum E10381
 35732 ;; Registers used:
 35733 ;;		wreg, status,2, status,0
 35734 ;; Tracked objects:
 35735 ;;		On entry : 3F/1
 35736 ;;		On exit  : 3E/0
 35737 ;;		Unchanged: 0/0
 35738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35743 ;;Total ram usage:        2 bytes
 35744 ;; Hardware stack levels used: 1
 35745 ;; This function calls:
 35746 ;;		Nothing
 35747 ;; This function is called by:
 35748 ;;		_controlMotorForce
 35749 ;; This function uses a non-reentrant model
 35750 ;;
 35751                           
 35752                           	psect	text197
 35753  008196                     __ptext197:
 35754                           	callstack 0
 35755  008196                     i2_VerifyElectricalBrake:
 35756                           	callstack 14
 35757                           
 35758                           ;incstack = 0
 35759                           ;i2VerifyElectricalBrake@actualState stored from wreg
 35760  008196  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 35761                           
 35762                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 35763  008198  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 35764                           
 35765                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 35766  00819C  0100               	movlb	0	; () banked
 35767  00819E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35768  0081A0  A4D8               	btfss	status,2,c
 35769  0081A2  D02E               	goto	i2l2323
 35770                           
 35771                           ; BSR set to: 0
 35772  0081A4  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35773  0081A6  A4D8               	btfss	status,2,c
 35774  0081A8  D02B               	goto	i2l2323
 35775                           
 35776                           ; BSR set to: 0
 35777  0081AA  0101               	movlb	1	; () banked
 35778  0081AC  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35779  0081AE  D005               	goto	i2u1417_40
 35780  0081B0  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35781  0081B2  E126               	bnz	i2l2323
 35782  0081B4  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35783  0081B6  B0D8               	btfsc	status,0,c
 35784  0081B8  D023               	goto	i2l2323
 35785  0081BA                     i2u1417_40:
 35786                           
 35787                           ; BSR set to: 1
 35788                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 35789  0081BA  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35790  0081BC  0100               	movlb	0	; () banked
 35791  0081BE  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 35792  0081C0  B4D8               	btfsc	status,2,c
 35793  0081C2  D00B               	goto	i2l14271
 35794                           
 35795                           ; BSR set to: 0
 35796  0081C4  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 35797  0081C6  A4D8               	btfss	status,2,c
 35798  0081C8  D008               	goto	i2l14271
 35799                           
 35800                           ; BSR set to: 0
 35801                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 35802  0081CA  0E01               	movlw	1
 35803  0081CC  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35804                           
 35805                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 35806  0081CE  0E00               	movlw	0
 35807  0081D0  0101               	movlb	1	; () banked
 35808  0081D2  6FC4               	movwf	(_ts_system+41)& (0+255),b	;volatile
 35809  0081D4  0E16               	movlw	22
 35810  0081D6  6FC3               	movwf	(_ts_system+40)& (0+255),b	;volatile
 35811                           
 35812                           ;outputs_MC50.c: 670:         }
 35813  0081D8  D018               	goto	i2l2328
 35814  0081DA                     i2l14271:
 35815                           
 35816                           ; BSR set to: 0
 35817  0081DA  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 35818  0081DC  A4D8               	btfss	status,2,c
 35819  0081DE  D00B               	goto	i2l14277
 35820                           
 35821                           ; BSR set to: 0
 35822  0081E0  0101               	movlb	1	; () banked
 35823  0081E2  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35824  0081E4  D008               	goto	i2l14277
 35825  0081E6  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35826  0081E8  E103               	bnz	i2u1421_40
 35827  0081EA  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35828  0081EC  A0D8               	btfss	status,0,c
 35829  0081EE  D003               	goto	i2l14277
 35830  0081F0                     i2u1421_40:
 35831                           
 35832                           ; BSR set to: 1
 35833                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 35834  0081F0  0E01               	movlw	1
 35835  0081F2  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 35836                           
 35837                           ;outputs_MC50.c: 686:         }
 35838  0081F4  D00A               	goto	i2l2328
 35839  0081F6                     i2l14277:
 35840                           
 35841                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 35842  0081F6  0E00               	movlw	0
 35843  0081F8  0100               	movlb	0	; () banked
 35844  0081FA  6F78               	movwf	_brakeElectric_st& (0+255),b
 35845                           
 35846                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 35847  0081FC  0E00               	movlw	0
 35848  0081FE  D004               	goto	L119
 35849  008200                     i2l2323:
 35850                           
 35851                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 35852  008200  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 35853                           
 35854                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 35855  008204  0E00               	movlw	0
 35856  008206  0100               	movlb	0	; () banked
 35857  008208                     L119:
 35858  008208  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35859  00820A                     i2l2328:
 35860                           
 35861                           ;outputs_MC50.c: 700:     return tempState;
 35862  00820A  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 35863  00820C  0012               	return		;funcret
 35864  00820E                     __end_ofi2_VerifyElectricalBrake:
 35865                           	callstack 0
 35866                           
 35867 ;; *************** function i2_GetMotorPower *****************
 35868 ;; Defined at:
 35869 ;;		line 405 in file "outputs_MC50.c"
 35870 ;; Parameters:    Size  Location     Type
 35871 ;;		None
 35872 ;; Auto vars:     Size  Location     Type
 35873 ;;  defineatraso    1    3[COMRAM] unsigned char 
 35874 ;; Return value:  Size  Location     Type
 35875 ;;                  1    wreg      unsigned char 
 35876 ;; Registers used:
 35877 ;;		wreg, status,2, status,0, prodl, prodh
 35878 ;; Tracked objects:
 35879 ;;		On entry : 3F/E
 35880 ;;		On exit  : 3F/1
 35881 ;;		Unchanged: 0/0
 35882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35885 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;Total ram usage:        4 bytes
 35888 ;; Hardware stack levels used: 1
 35889 ;; This function calls:
 35890 ;;		Nothing
 35891 ;; This function is called by:
 35892 ;;		_controlMotorForce
 35893 ;; This function uses a non-reentrant model
 35894 ;;
 35895                           
 35896                           	psect	text198
 35897  007472                     __ptext198:
 35898                           	callstack 0
 35899  007472                     i2_GetMotorPower:
 35900                           	callstack 14
 35901                           
 35902                           ; BSR set to: 14
 35903                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 35904                           
 35905                           ;incstack = 0
 35906  007472  0101               	movlb	1	; () banked
 35907  007474  057B               	decf	_powerControl_st& (0+255),w,b
 35908  007476  A4D8               	btfss	status,2,c
 35909  007478  D006               	goto	i2l14221
 35910                           
 35911                           ; BSR set to: 1
 35912                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 35913  00747A  0100               	movlb	0	; () banked
 35914  00747C  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35915  00747E  0D06               	mullw	6
 35916  007480  CFF3 F18F          	movff	prodl,_temppower
 35917                           
 35918                           ;outputs_MC50.c: 416:     }
 35919  007484  D043               	goto	i2l2240
 35920  007486                     i2l14221:
 35921                           
 35922                           ; BSR set to: 1
 35923                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 35924  007486  0100               	movlb	0	; () banked
 35925  007488  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35926  00748A  0D06               	mullw	6
 35927  00748C  CFF3 F082          	movff	prodl,_fullmotorPower
 35928                           
 35929                           ; BSR set to: 0
 35930                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 35931  007490  0101               	movlb	1	; () banked
 35932  007492  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35933  007494  D01C               	goto	i2l14231
 35934  007496  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35935  007498  E103               	bnz	i2u1407_40
 35936  00749A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35937  00749C  A0D8               	btfss	status,0,c
 35938  00749E  D017               	goto	i2l14231
 35939  0074A0                     i2u1407_40:
 35940                           
 35941                           ; BSR set to: 1
 35942                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 35943  0074A0  0100               	movlb	0	; () banked
 35944  0074A2  5182               	movf	_fullmotorPower& (0+255),w,b
 35945  0074A4  6E01               	movwf	??i2_GetMotorPower^0,c
 35946  0074A6  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 35947  0074A8  0101               	movlb	1	; () banked
 35948  0074AA  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35949  0074AC  5C01               	subwf	??i2_GetMotorPower^0,w,c
 35950  0074AE  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 35951  0074B0  0A80               	xorlw	128
 35952  0074B2  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 35953  0074B4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35954  0074B6  0A80               	xorlw	128
 35955  0074B8  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 35956  0074BA  B0D8               	btfsc	status,0,c
 35957  0074BC  D002               	goto	i2l14229
 35958                           
 35959                           ; BSR set to: 1
 35960                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 35961  0074BE  0E01               	movlw	1
 35962  0074C0  D004               	goto	L121
 35963  0074C2                     i2l14229:
 35964                           
 35965                           ; BSR set to: 1
 35966                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 35967  0074C2  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35968  0074C4  0100               	movlb	0	; () banked
 35969  0074C6  5D82               	subwf	_fullmotorPower& (0+255),w,b
 35970  0074C8  D017               	goto	L122
 35971  0074CA                     L121:
 35972  0074CA  6F8F               	movwf	_temppower& (0+255),b
 35973  0074CC  D01F               	goto	i2l2240
 35974  0074CE                     i2l14231:
 35975                           
 35976                           ; BSR set to: 1
 35977  0074CE  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35978  0074D0  D005               	goto	i2u1409_40
 35979  0074D2  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35980  0074D4  E113               	bnz	i2l14241
 35981  0074D6  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35982  0074D8  B0D8               	btfsc	status,0,c
 35983  0074DA  D010               	goto	i2l14241
 35984  0074DC                     i2u1409_40:
 35985                           
 35986                           ; BSR set to: 1
 35987  0074DC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35988  0074DE  D005               	goto	i2u1410_40
 35989  0074E0  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35990  0074E2  E10C               	bnz	i2l14241
 35991  0074E4  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35992  0074E6  B0D8               	btfsc	status,0,c
 35993  0074E8  D009               	goto	i2l14241
 35994  0074EA                     i2u1410_40:
 35995                           
 35996                           ; BSR set to: 1
 35997                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 35998  0074EA  C082  F18F         	movff	_fullmotorPower,_temppower
 35999                           
 36000                           ; BSR set to: 1
 36001                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 36002  0074EE  0E08               	movlw	8
 36003  0074F0  0100               	movlb	0	; () banked
 36004  0074F2  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 36005  0074F4  D00B               	goto	i2l2240
 36006                           
 36007                           ; BSR set to: 0
 36008                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 36009  0074F6  0E3A               	movlw	58
 36010  0074F8                     L122:
 36011  0074F8  0101               	movlb	1	; () banked
 36012  0074FA  D7E7               	goto	L121
 36013  0074FC                     i2l14241:
 36014                           
 36015                           ; BSR set to: 1
 36016  0074FC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36017  0074FE  D006               	goto	i2l2240
 36018  007500  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36019  007502  E102               	bnz	i2u1412_40
 36020  007504  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36021  007506  B0D8               	btfsc	status,0,c
 36022  007508                     i2u1412_40:
 36023                           
 36024                           ; BSR set to: 1
 36025                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 36026  007508  C110  F18F         	movff	_var_sys+16,_temppower	;volatile
 36027  00750C                     i2l2240:
 36028                           
 36029                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 36030  00750C  0101               	movlb	1	; () banked
 36031  00750E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 36032  007510  D00E               	goto	i2l14251
 36033  007512  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 36034  007514  E103               	bnz	i2u1413_40
 36035  007516  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 36036  007518  A0D8               	btfss	status,0,c
 36037  00751A  D009               	goto	i2l14251
 36038  00751C                     i2u1413_40:
 36039                           
 36040                           ; BSR set to: 1
 36041  00751C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36042  00751E  D005               	goto	i2u1414_40
 36043  007520  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36044  007522  E105               	bnz	i2l14251
 36045  007524  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36046  007526  B0D8               	btfsc	status,0,c
 36047  007528  D002               	goto	i2l14251
 36048  00752A                     i2u1414_40:
 36049                           
 36050                           ; BSR set to: 1
 36051                           ;outputs_MC50.c: 452:     defineatraso = 5;
 36052  00752A  0E05               	movlw	5
 36053  00752C  D001               	goto	L120
 36054  00752E                     i2l14251:
 36055                           
 36056                           ; BSR set to: 1
 36057                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 36058  00752E  0E17               	movlw	23
 36059  007530                     L120:
 36060  007530  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 36061                           
 36062                           ; BSR set to: 1
 36063                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 36064  007532  518F               	movf	_temppower& (0+255),w,b
 36065  007534  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 36066                           
 36067                           ; BSR set to: 1
 36068  007536  0012               	return		;funcret
 36069  007538                     __end_ofi2_GetMotorPower:
 36070                           	callstack 0
 36071                           
 36072 ;; *************** function _TMR1_WriteTimer *****************
 36073 ;; Defined at:
 36074 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 36075 ;; Parameters:    Size  Location     Type
 36076 ;;  timerVal        2    0[COMRAM] unsigned short 
 36077 ;; Auto vars:     Size  Location     Type
 36078 ;;		None
 36079 ;; Return value:  Size  Location     Type
 36080 ;;                  1    wreg      void 
 36081 ;; Registers used:
 36082 ;;		None
 36083 ;; Tracked objects:
 36084 ;;		On entry : 3F/1
 36085 ;;		On exit  : 3F/1
 36086 ;;		Unchanged: 3F/0
 36087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36092 ;;Total ram usage:        2 bytes
 36093 ;; Hardware stack levels used: 1
 36094 ;; This function calls:
 36095 ;;		Nothing
 36096 ;; This function is called by:
 36097 ;;		_TMR1_ISR
 36098 ;; This function uses a non-reentrant model
 36099 ;;
 36100                           
 36101                           	psect	text199
 36102  0094D2                     __ptext199:
 36103                           	callstack 0
 36104  0094D2                     _TMR1_WriteTimer:
 36105                           	callstack 15
 36106                           
 36107                           ; BSR set to: 1
 36108                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 36109                           
 36110                           ; BSR set to: 1
 36111                           ;incstack = 0
 36112  0094D2  A4CF               	btfss	207,2,c	;volatile
 36113  0094D4  D007               	goto	i2l1147
 36114                           
 36115                           ; BSR set to: 1
 36116                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 36117  0094D6  90CF               	bcf	207,0,c	;volatile
 36118                           
 36119                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 36120  0094D8  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36121                           
 36122                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 36123  0094DC  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36124                           
 36125                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 36126  0094E0  80CF               	bsf	207,0,c	;volatile
 36127                           
 36128                           ;mcc_generated_files/tmr1.c: 142:     }
 36129  0094E2  0012               	return	
 36130  0094E4                     i2l1147:
 36131                           
 36132                           ; BSR set to: 1
 36133                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 36134  0094E4  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 36135                           
 36136                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 36137  0094E8  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 36138                           
 36139                           ; BSR set to: 1
 36140  0094EC  0012               	return		;funcret
 36141  0094EE                     __end_of_TMR1_WriteTimer:
 36142                           	callstack 0
 36143                           
 36144 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 36145 ;; Defined at:
 36146 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 36147 ;; Parameters:    Size  Location     Type
 36148 ;;		None
 36149 ;; Auto vars:     Size  Location     Type
 36150 ;;		None
 36151 ;; Return value:  Size  Location     Type
 36152 ;;                  1    wreg      void 
 36153 ;; Registers used:
 36154 ;;		None
 36155 ;; Tracked objects:
 36156 ;;		On entry : 3F/2
 36157 ;;		On exit  : 3F/2
 36158 ;;		Unchanged: 3F/0
 36159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36164 ;;Total ram usage:        0 bytes
 36165 ;; Hardware stack levels used: 1
 36166 ;; This function calls:
 36167 ;;		Nothing
 36168 ;; This function is called by:
 36169 ;;		_TMR1_Initialize
 36170 ;;		_TMR1_ISR
 36171 ;; This function uses a non-reentrant model
 36172 ;;
 36173                           
 36174                           	psect	text200
 36175  00980C                     __ptext200:
 36176                           	callstack 0
 36177  00980C                     _TMR1_DefaultInterruptHandler:
 36178                           	callstack 15
 36179                           
 36180                           ; BSR set to: 2
 36181                           
 36182                           ; BSR set to: 1
 36183                           ;incstack = 0
 36184  00980C  0012               	return		;funcret
 36185  00980E                     __end_of_TMR1_DefaultInterruptHandler:
 36186                           	callstack 0
 36187                           
 36188 ;; *************** function _TMR0_ISR *****************
 36189 ;; Defined at:
 36190 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 36191 ;; Parameters:    Size  Location     Type
 36192 ;;		None
 36193 ;; Auto vars:     Size  Location     Type
 36194 ;;		None
 36195 ;; Return value:  Size  Location     Type
 36196 ;;                  1    wreg      void 
 36197 ;; Registers used:
 36198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36199 ;; Tracked objects:
 36200 ;;		On entry : 3F/E
 36201 ;;		On exit  : 0/0
 36202 ;;		Unchanged: 0/0
 36203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36208 ;;Total ram usage:        0 bytes
 36209 ;; Hardware stack levels used: 1
 36210 ;; Hardware stack levels required when called: 1
 36211 ;; This function calls:
 36212 ;;		Absolute function
 36213 ;;		_TMR0_DefaultInterruptHandler
 36214 ;;		_rxi
 36215 ;; This function is called by:
 36216 ;;		_INTERRUPT_InterruptManager
 36217 ;; This function uses a non-reentrant model
 36218 ;;
 36219                           
 36220                           	psect	text201
 36221  009386                     __ptext201:
 36222                           	callstack 0
 36223  009386                     _TMR0_ISR:
 36224                           	callstack 15
 36225                           
 36226                           ; BSR set to: 14
 36227                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 36228                           
 36229                           ; BSR set to: 2
 36230                           ;incstack = 0
 36231  009386  9BCA               	bcf	202,5,b	;volatile
 36232                           
 36233                           ; BSR set to: 14
 36234                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 36235  009388  ECD4  F023         	call	_rxi	;wreg free
 36236                           
 36237                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 36238  00938C  0102               	movlb	2	; () banked
 36239  00938E  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36240  009390  11E6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36241  009392  B4D8               	btfsc	status,2,c
 36242  009394  0012               	return	
 36243                           
 36244                           ; BSR set to: 2
 36245                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 36246  009396  D801               	call	i2u1865_48
 36247  009398  0012               	return	
 36248  00939A                     i2u1865_48:
 36249  00939A  0005               	push	
 36250  00939C  6EFA               	movwf	pclath,c
 36251  00939E  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36252  0093A0  6EFD               	movwf	tosl,c
 36253  0093A2  51E6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36254  0093A4  6EFE               	movwf	tosh,c
 36255  0093A6  6AFF               	clrf	tosu,c
 36256  0093A8  50FA               	movf	pclath,w,c
 36257  0093AA  0012               	return		;indir
 36258  0093AC                     __end_of_TMR0_ISR:
 36259                           	callstack 0
 36260                           
 36261 ;; *************** function _rxi *****************
 36262 ;; Defined at:
 36263 ;;		line 41 in file "inputs_MC50.c"
 36264 ;; Parameters:    Size  Location     Type
 36265 ;;		None
 36266 ;; Auto vars:     Size  Location     Type
 36267 ;;		None
 36268 ;; Return value:  Size  Location     Type
 36269 ;;                  1    wreg      void 
 36270 ;; Registers used:
 36271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36272 ;; Tracked objects:
 36273 ;;		On entry : 3F/E
 36274 ;;		On exit  : 3C/0
 36275 ;;		Unchanged: 0/0
 36276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36281 ;;Total ram usage:        2 bytes
 36282 ;; Hardware stack levels used: 1
 36283 ;; This function calls:
 36284 ;;		Nothing
 36285 ;; This function is called by:
 36286 ;;		_TMR0_ISR
 36287 ;; This function uses a non-reentrant model
 36288 ;;
 36289                           
 36290                           	psect	text202
 36291  0047A8                     __ptext202:
 36292                           	callstack 0
 36293  0047A8                     _rxi:
 36294                           	callstack 15
 36295                           
 36296                           ; BSR set to: 14
 36297                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 36298                           
 36299                           ;incstack = 0
 36300  0047A8  0E00               	movlw	0
 36301  0047AA  B68E               	btfsc	142,3,c	;volatile
 36302  0047AC  0E01               	movlw	1
 36303  0047AE  0100               	movlb	0	; () banked
 36304  0047B0  6F89               	movwf	_RFBit& (0+255),b	;volatile
 36305                           
 36306                           ; BSR set to: 0
 36307                           ;inputs_MC50.c: 47:     if (RFFull)
 36308  0047B2  518B               	movf	_RFFull& (0+255),w,b	;volatile
 36309  0047B4  A4D8               	btfss	status,2,c
 36310  0047B6  0012               	return	
 36311  0047B8  D116               	goto	i2l14535
 36312  0047BA                     i2l14425:
 36313                           
 36314                           ; BSR set to: 1
 36315                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 36316  0047BA  0100               	movlb	0	; () banked
 36317  0047BC  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36318  0047BE  A4D8               	btfss	status,2,c
 36319  0047C0  D004               	goto	i2l14429
 36320                           
 36321                           ; BSR set to: 0
 36322                           ;inputs_MC50.c: 56:                 RFstate = 3;
 36323  0047C2  0E03               	movlw	3
 36324  0047C4  0101               	movlb	1	; () banked
 36325  0047C6  6F99               	movwf	_RFstate& (0+255),b
 36326                           
 36327                           ;inputs_MC50.c: 57:             } else {
 36328  0047C8  0012               	return	
 36329  0047CA                     i2l14429:
 36330                           
 36331                           ; BSR set to: 0
 36332                           ;inputs_MC50.c: 58:                 RFcount--;
 36333  0047CA  077E               	decf	_RFcount& (0+255),f,b
 36334  0047CC  A0D8               	btfss	status,0,c
 36335  0047CE  077F               	decf	(_RFcount+1)& (0+255),f,b
 36336                           
 36337                           ; BSR set to: 0
 36338                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 36339  0047D0  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36340  0047D2  0012               	return	
 36341  0047D4  0EF6               	movlw	246
 36342  0047D6  5D7E               	subwf	_RFcount& (0+255),w,b
 36343  0047D8  0EFF               	movlw	255
 36344  0047DA  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36345  0047DC  B0D8               	btfsc	status,0,c
 36346  0047DE  0012               	return	
 36347  0047E0                     i2u1428_40:
 36348  0047E0                     i2l14433:
 36349                           
 36350                           ; BSR set to: 0
 36351                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 36352  0047E0  0E00               	movlw	0
 36353  0047E2  0101               	movlb	1	; () banked
 36354  0047E4  6F99               	movwf	_RFstate& (0+255),b
 36355  0047E6  0012               	return	
 36356  0047E8                     i2l14435:
 36357                           
 36358                           ; BSR set to: 1
 36359                           ;inputs_MC50.c: 67:             if (RFBit) {
 36360  0047E8  0100               	movlb	0	; () banked
 36361  0047EA  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36362  0047EC  B4D8               	btfsc	status,2,c
 36363  0047EE  D02C               	goto	i2l14455
 36364                           
 36365                           ; BSR set to: 0
 36366                           ;inputs_MC50.c: 71:                 RFstate = 2;
 36367  0047F0  0E02               	movlw	2
 36368  0047F2  0101               	movlb	1	; () banked
 36369  0047F4  6F99               	movwf	_RFstate& (0+255),b
 36370                           
 36371                           ; BSR set to: 1
 36372                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 36373  0047F6  0ECA               	movlw	low _BufferRF
 36374  0047F8  0100               	movlb	0	; () banked
 36375  0047FA  258D               	addwf	_Bptr& (0+255),w,b
 36376  0047FC  6ED9               	movwf	fsr2l,c
 36377  0047FE  6ADA               	clrf	fsr2h,c
 36378  004800  0E02               	movlw	high _BufferRF
 36379  004802  22DA               	addwfc	fsr2h,f,c
 36380  004804  90D8               	bcf	status,0,c
 36381  004806  32DF               	rrcf	indf2,f,c
 36382                           
 36383                           ; BSR set to: 0
 36384                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 36385  004808  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36386  00480A  D008               	goto	i2l14445
 36387                           
 36388                           ; BSR set to: 0
 36389                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 36390  00480C  0ECA               	movlw	low _BufferRF
 36391  00480E  258D               	addwf	_Bptr& (0+255),w,b
 36392  004810  6ED9               	movwf	fsr2l,c
 36393  004812  6ADA               	clrf	fsr2h,c
 36394  004814  0E02               	movlw	high _BufferRF
 36395  004816  22DA               	addwfc	fsr2h,f,c
 36396  004818  0E80               	movlw	128
 36397  00481A  26DF               	addwf	indf2,f,c
 36398  00481C                     i2l14445:
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;inputs_MC50.c: 81:                 RFcount = 0;
 36402  00481C  0E00               	movlw	0
 36403  00481E  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36404  004820  0E00               	movlw	0
 36405  004822  6F7E               	movwf	_RFcount& (0+255),b
 36406                           
 36407                           ; BSR set to: 0
 36408                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 36409  004824  2B8C               	incf	_BitCount& (0+255),f,b
 36410  004826  C08C  F001         	movff	_BitCount,??_rxi
 36411  00482A  0E07               	movlw	7
 36412  00482C  1601               	andwf	??_rxi^0,f,c
 36413  00482E  B4D8               	btfsc	status,2,c
 36414                           
 36415                           ; BSR set to: 0
 36416                           ;inputs_MC50.c: 84:                     Bptr++;
 36417  004830  2B8D               	incf	_Bptr& (0+255),f,b
 36418                           
 36419                           ; BSR set to: 0
 36420                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 36421  004832  0E41               	movlw	65
 36422  004834  198C               	xorwf	_BitCount& (0+255),w,b
 36423  004836  A4D8               	btfss	status,2,c
 36424  004838  0012               	return	
 36425                           
 36426                           ; BSR set to: 0
 36427                           ;inputs_MC50.c: 86:                     RFstate = 0;
 36428  00483A  0E00               	movlw	0
 36429  00483C  0101               	movlb	1	; () banked
 36430  00483E  6F99               	movwf	_RFstate& (0+255),b
 36431                           
 36432                           ;inputs_MC50.c: 87:                     RFFull = 1;
 36433  004840  0E01               	movlw	1
 36434  004842  0100               	movlb	0	; () banked
 36435  004844  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 36436  004846  0012               	return	
 36437  004848                     i2l14455:
 36438                           
 36439                           ; BSR set to: 0
 36440                           ;inputs_MC50.c: 92:                 RFcount++;
 36441  004848  4B7E               	infsnz	_RFcount& (0+255),f,b
 36442  00484A  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36443                           
 36444                           ; BSR set to: 0
 36445                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 36446  00484C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36447  00484E  0012               	return	
 36448  004850  517F               	movf	(_RFcount+1)& (0+255),w,b
 36449  004852  E104               	bnz	i2u1433_40
 36450  004854  0E0A               	movlw	10
 36451  004856  5D7E               	subwf	_RFcount& (0+255),w,b
 36452  004858  A0D8               	btfss	status,0,c
 36453  00485A  0012               	return	
 36454  00485C                     i2u1433_40:
 36455                           
 36456                           ; BSR set to: 0
 36457                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 36458  00485C  0E01               	movlw	1
 36459  00485E  0101               	movlb	1	; () banked
 36460  004860  6F99               	movwf	_RFstate& (0+255),b
 36461                           
 36462                           ;inputs_MC50.c: 97:                     Bptr = 0;
 36463  004862  0E00               	movlw	0
 36464  004864  0100               	movlb	0	; () banked
 36465  004866  6F8D               	movwf	_Bptr& (0+255),b
 36466                           
 36467                           ;inputs_MC50.c: 98:                     BitCount = 0;
 36468  004868  0E00               	movlw	0
 36469  00486A  6F8C               	movwf	_BitCount& (0+255),b
 36470  00486C  0012               	return	
 36471  00486E                     i2l14461:
 36472                           
 36473                           ; BSR set to: 1
 36474                           ;inputs_MC50.c: 103:             if (RFBit) {
 36475  00486E  0100               	movlb	0	; () banked
 36476  004870  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36477  004872  B4D8               	btfsc	status,2,c
 36478  004874  D030               	goto	i2l14477
 36479                           
 36480                           ; BSR set to: 0
 36481                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 36482  004876  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36483  004878  D00E               	goto	i2u1436_40
 36484  00487A  517F               	movf	(_RFcount+1)& (0+255),w,b
 36485  00487C  E104               	bnz	i2u1435_40
 36486  00487E  0E14               	movlw	20
 36487  004880  5D7E               	subwf	_RFcount& (0+255),w,b
 36488  004882  A0D8               	btfss	status,0,c
 36489  004884  D008               	goto	i2u1436_40
 36490  004886                     i2u1435_40:
 36491                           
 36492                           ; BSR set to: 0
 36493  004886  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36494  004888  D01E               	goto	i2l14475
 36495  00488A  517F               	movf	(_RFcount+1)& (0+255),w,b
 36496  00488C  E104               	bnz	i2u1436_40
 36497  00488E  0E2D               	movlw	45
 36498  004890  5D7E               	subwf	_RFcount& (0+255),w,b
 36499  004892  A0D8               	btfss	status,0,c
 36500  004894  D018               	goto	i2l14475
 36501  004896                     i2u1436_40:
 36502                           
 36503                           ; BSR set to: 0
 36504                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 36505  004896  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36506  004898  D7A3               	goto	i2u1428_40
 36507  00489A  517F               	movf	(_RFcount+1)& (0+255),w,b
 36508  00489C  E104               	bnz	i2u1437_40
 36509  00489E  0E50               	movlw	80
 36510  0048A0  5D7E               	subwf	_RFcount& (0+255),w,b
 36511  0048A2  A0D8               	btfss	status,0,c
 36512  0048A4  D79D               	goto	i2u1428_40
 36513  0048A6                     i2u1437_40:
 36514                           
 36515                           ; BSR set to: 0
 36516  0048A6  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36517  0048A8  D006               	goto	i2l14473
 36518  0048AA  517F               	movf	(_RFcount+1)& (0+255),w,b
 36519  0048AC  E199               	bnz	i2l14433
 36520  0048AE  0E64               	movlw	100
 36521  0048B0  5D7E               	subwf	_RFcount& (0+255),w,b
 36522  0048B2  B0D8               	btfsc	status,0,c
 36523  0048B4  D795               	goto	i2u1428_40
 36524  0048B6                     i2l14473:
 36525                           
 36526                           ; BSR set to: 0
 36527                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 36528  0048B6  0EFF               	movlw	255
 36529  0048B8  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36530  0048BA  0EF6               	movlw	246
 36531  0048BC  6F7E               	movwf	_RFcount& (0+255),b
 36532                           
 36533                           ;inputs_MC50.c: 114:                         RFstate = 4;
 36534  0048BE  0E04               	movlw	4
 36535  0048C0  0101               	movlb	1	; () banked
 36536  0048C2  6F99               	movwf	_RFstate& (0+255),b
 36537  0048C4  0012               	return	
 36538  0048C6                     i2l14475:
 36539                           
 36540                           ; BSR set to: 0
 36541                           ;inputs_MC50.c: 118:                     RFcount = 0;
 36542  0048C6  0E00               	movlw	0
 36543  0048C8  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36544  0048CA  0E00               	movlw	0
 36545  0048CC  6F7E               	movwf	_RFcount& (0+255),b
 36546                           
 36547                           ;inputs_MC50.c: 119:                     RFstate = 2;
 36548  0048CE  0E02               	movlw	2
 36549  0048D0  0101               	movlb	1	; () banked
 36550  0048D2  6F99               	movwf	_RFstate& (0+255),b
 36551  0048D4  0012               	return	
 36552  0048D6                     i2l14477:
 36553                           
 36554                           ; BSR set to: 0
 36555                           ;inputs_MC50.c: 122:                 RFcount++;
 36556  0048D6  4B7E               	infsnz	_RFcount& (0+255),f,b
 36557  0048D8  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36558  0048DA  0012               	return	
 36559  0048DC                     i2l14479:
 36560                           
 36561                           ; BSR set to: 1
 36562                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 36563  0048DC  0100               	movlb	0	; () banked
 36564  0048DE  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36565  0048E0  A4D8               	btfss	status,2,c
 36566  0048E2  D056               	goto	i2l14515
 36567                           
 36568                           ; BSR set to: 0
 36569                           ;inputs_MC50.c: 130:                 RFstate = 5;
 36570  0048E4  0E05               	movlw	5
 36571  0048E6  0101               	movlb	1	; () banked
 36572  0048E8  6F99               	movwf	_RFstate& (0+255),b
 36573                           
 36574                           ; BSR set to: 1
 36575                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 36576  0048EA  0ECA               	movlw	low _BufferRF
 36577  0048EC  0100               	movlb	0	; () banked
 36578  0048EE  258D               	addwf	_Bptr& (0+255),w,b
 36579  0048F0  6ED9               	movwf	fsr2l,c
 36580  0048F2  6ADA               	clrf	fsr2h,c
 36581  0048F4  0E02               	movlw	high _BufferRF
 36582  0048F6  22DA               	addwfc	fsr2h,f,c
 36583  0048F8  90D8               	bcf	status,0,c
 36584  0048FA  32DF               	rrcf	indf2,f,c
 36585                           
 36586                           ; BSR set to: 0
 36587                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 36588  0048FC  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36589  0048FE  D008               	goto	i2l14489
 36590                           
 36591                           ; BSR set to: 0
 36592                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 36593  004900  0ECA               	movlw	low _BufferRF
 36594  004902  258D               	addwf	_Bptr& (0+255),w,b
 36595  004904  6ED9               	movwf	fsr2l,c
 36596  004906  6ADA               	clrf	fsr2h,c
 36597  004908  0E02               	movlw	high _BufferRF
 36598  00490A  22DA               	addwfc	fsr2h,f,c
 36599  00490C  0E80               	movlw	128
 36600  00490E  26DF               	addwf	indf2,f,c
 36601  004910                     i2l14489:
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;inputs_MC50.c: 136:                 RFcount = 0;
 36605  004910  0E00               	movlw	0
 36606  004912  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36607  004914  0E00               	movlw	0
 36608  004916  6F7E               	movwf	_RFcount& (0+255),b
 36609                           
 36610                           ; BSR set to: 0
 36611                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 36612  004918  2B8C               	incf	_BitCount& (0+255),f,b
 36613  00491A  C08C  F001         	movff	_BitCount,??_rxi
 36614  00491E  0E07               	movlw	7
 36615  004920  1601               	andwf	??_rxi^0,f,c
 36616  004922  A4D8               	btfss	status,2,c
 36617  004924  D009               	goto	i2l14497
 36618                           
 36619                           ; BSR set to: 0
 36620                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 36621  004926  2B8D               	incf	_Bptr& (0+255),f,b
 36622                           
 36623                           ; BSR set to: 0
 36624                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 36625  004928  0ECA               	movlw	low _BufferRF
 36626  00492A  258D               	addwf	_Bptr& (0+255),w,b
 36627  00492C  6ED9               	movwf	fsr2l,c
 36628  00492E  6ADA               	clrf	fsr2h,c
 36629  004930  0E02               	movlw	high _BufferRF
 36630  004932  22DA               	addwfc	fsr2h,f,c
 36631  004934  0E00               	movlw	0
 36632  004936  6EDF               	movwf	indf2,c
 36633  004938                     i2l14497:
 36634                           
 36635                           ; BSR set to: 0
 36636                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 36637  004938  0E0D               	movlw	13
 36638  00493A  198C               	xorwf	_BitCount& (0+255),w,b
 36639  00493C  A4D8               	btfss	status,2,c
 36640  00493E  0012               	return	
 36641                           
 36642                           ; BSR set to: 0
 36643                           ;inputs_MC50.c: 144:                     RFstate = 0;
 36644  004940  0E00               	movlw	0
 36645  004942  0101               	movlb	1	; () banked
 36646  004944  6F99               	movwf	_RFstate& (0+255),b
 36647                           
 36648                           ; BSR set to: 1
 36649                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 36650  004946  0100               	movlb	0	; () banked
 36651  004948  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 36652  00494A  A4D8               	btfss	status,2,c
 36653  00494C  D01A               	goto	i2l14509
 36654                           
 36655                           ; BSR set to: 0
 36656                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 36657  00494E  0102               	movlb	2	; () banked
 36658  004950  51CA               	movf	_BufferRF& (0+255),w,b
 36659  004952  0101               	movlb	1	; () banked
 36660  004954  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 36661  004956  A4D8               	btfss	status,2,c
 36662  004958  D00F               	goto	i2l1620
 36663                           
 36664                           ; BSR set to: 1
 36665  00495A  0102               	movlb	2	; () banked
 36666  00495C  51CB               	movf	(_BufferRF+1)& (0+255),w,b
 36667  00495E  0101               	movlb	1	; () banked
 36668  004960  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 36669  004962  A4D8               	btfss	status,2,c
 36670  004964  D009               	goto	i2l1620
 36671                           
 36672                           ; BSR set to: 1
 36673                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 36674  004966  0E01               	movlw	1
 36675  004968  0100               	movlb	0	; () banked
 36676  00496A  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 36677                           
 36678                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 36679  00496C  0E00               	movlw	0
 36680  00496E  0102               	movlb	2	; () banked
 36681  004970  6FCC               	movwf	(_BufferRF+2)& (0+255),b
 36682                           
 36683                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 36684  004972  0E00               	movlw	0
 36685  004974  6FCD               	movwf	(_BufferRF+3)& (0+255),b
 36686                           
 36687                           ;inputs_MC50.c: 152:                         }
 36688  004976  0012               	return	
 36689  004978                     i2l1620:
 36690                           
 36691                           ; BSR set to: 1
 36692                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 36693  004978  C2CA  F187         	movff	_BufferRF,_BufferRF_12BIT
 36694                           
 36695                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 36696  00497C  C2CB  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36697  004980  0012               	return	
 36698  004982                     i2l14509:
 36699                           
 36700                           ; BSR set to: 0
 36701                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 36702  004982  0E01               	movlw	1
 36703  004984  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 36704                           
 36705                           ; BSR set to: 0
 36706                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 36707  004986  C2CA  F187         	movff	_BufferRF,_BufferRF_12BIT
 36708                           
 36709                           ; BSR set to: 0
 36710                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 36711  00498A  C2CB  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36712  00498E  0012               	return	
 36713  004990                     i2l14515:
 36714                           
 36715                           ; BSR set to: 0
 36716                           ;inputs_MC50.c: 168:                 RFcount++;
 36717  004990  4B7E               	infsnz	_RFcount& (0+255),f,b
 36718  004992  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36719                           
 36720                           ; BSR set to: 0
 36721                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 36722  004994  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36723  004996  0012               	return	
 36724  004998  517F               	movf	(_RFcount+1)& (0+255),w,b
 36725  00499A  E104               	bnz	i2u1446_40
 36726  00499C  0E0A               	movlw	10
 36727  00499E  5D7E               	subwf	_RFcount& (0+255),w,b
 36728  0049A0  A0D8               	btfss	status,0,c
 36729  0049A2  0012               	return	
 36730  0049A4                     i2u1446_40:
 36731  0049A4  D71D               	goto	i2u1428_40
 36732  0049A6                     i2l14521:
 36733                           
 36734                           ; BSR set to: 1
 36735                           ;inputs_MC50.c: 177:             if (RFBit) {
 36736  0049A6  0100               	movlb	0	; () banked
 36737  0049A8  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36738  0049AA  B4D8               	btfsc	status,2,c
 36739  0049AC  D004               	goto	i2l14525
 36740                           
 36741                           ; BSR set to: 0
 36742                           ;inputs_MC50.c: 181:                 RFstate = 4;
 36743  0049AE  0E04               	movlw	4
 36744  0049B0  0101               	movlb	1	; () banked
 36745  0049B2  6F99               	movwf	_RFstate& (0+255),b
 36746                           
 36747                           ;inputs_MC50.c: 183:             } else {
 36748  0049B4  0012               	return	
 36749  0049B6                     i2l14525:
 36750                           
 36751                           ; BSR set to: 0
 36752                           ;inputs_MC50.c: 184:                 RFcount--;
 36753  0049B6  077E               	decf	_RFcount& (0+255),f,b
 36754  0049B8  A0D8               	btfss	status,0,c
 36755  0049BA  077F               	decf	(_RFcount+1)& (0+255),f,b
 36756                           
 36757                           ; BSR set to: 0
 36758                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 36759  0049BC  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36760  0049BE  0012               	return	
 36761  0049C0  0EF6               	movlw	246
 36762  0049C2  5D7E               	subwf	_RFcount& (0+255),w,b
 36763  0049C4  0EFF               	movlw	255
 36764  0049C6  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36765  0049C8  B0D8               	btfsc	status,0,c
 36766  0049CA  0012               	return	
 36767  0049CC  D747               	goto	i2u1433_40
 36768  0049CE                     i2l14531:
 36769                           
 36770                           ; BSR set to: 1
 36771                           ;inputs_MC50.c: 197:             RFstate = 1;
 36772  0049CE  0E01               	movlw	1
 36773  0049D0  6F99               	movwf	_RFstate& (0+255),b
 36774                           
 36775                           ;inputs_MC50.c: 198:             RFcount = 0;
 36776  0049D2  0E00               	movlw	0
 36777  0049D4  0100               	movlb	0	; () banked
 36778  0049D6  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36779  0049D8  0E00               	movlw	0
 36780  0049DA  6F7E               	movwf	_RFcount& (0+255),b
 36781                           
 36782                           ;inputs_MC50.c: 199:             Bptr = 0;
 36783  0049DC  0E00               	movlw	0
 36784  0049DE  6F8D               	movwf	_Bptr& (0+255),b
 36785                           
 36786                           ;inputs_MC50.c: 200:             BitCount = 0;
 36787  0049E0  0E00               	movlw	0
 36788  0049E2  6F8C               	movwf	_BitCount& (0+255),b
 36789                           
 36790                           ;inputs_MC50.c: 201:             break;
 36791  0049E4  0012               	return	
 36792  0049E6                     i2l14535:
 36793                           
 36794                           ; BSR set to: 0
 36795  0049E6  0101               	movlb	1	; () banked
 36796  0049E8  5199               	movf	_RFstate& (0+255),w,b
 36797  0049EA  6E01               	movwf	??_rxi^0,c
 36798  0049EC  6A02               	clrf	(??_rxi+1)^0,c
 36799                           
 36800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36801                           ; Switch size 1, requested type "simple"
 36802                           ; Number of cases is 1, Range of values is 0 to 0
 36803                           ; switch strategies available:
 36804                           ; Name         Instructions Cycles
 36805                           ; simple_byte            4     3 (average)
 36806                           ;	Chosen strategy is simple_byte
 36807  0049EE  5002               	movf	(??_rxi+1)^0,w,c
 36808  0049F0  0A00               	xorlw	0	; case 0
 36809  0049F2  A4D8               	btfss	status,2,c
 36810  0049F4  D7EC               	goto	i2l14531
 36811                           
 36812                           ; BSR set to: 1
 36813                           ; Switch size 1, requested type "simple"
 36814                           ; Number of cases is 6, Range of values is 0 to 5
 36815                           ; switch strategies available:
 36816                           ; Name         Instructions Cycles
 36817                           ; simple_byte           19    10 (average)
 36818                           ;	Chosen strategy is simple_byte
 36819  0049F6  5001               	movf	??_rxi^0,w,c
 36820  0049F8  0A00               	xorlw	0	; case 0
 36821  0049FA  B4D8               	btfsc	status,2,c
 36822  0049FC  D7E8               	goto	i2l14531
 36823  0049FE  0A01               	xorlw	1	; case 1
 36824  004A00  B4D8               	btfsc	status,2,c
 36825  004A02  D735               	goto	i2l14461
 36826  004A04  0A03               	xorlw	3	; case 2
 36827  004A06  B4D8               	btfsc	status,2,c
 36828  004A08  D6D8               	goto	i2l14425
 36829  004A0A  0A01               	xorlw	1	; case 3
 36830  004A0C  B4D8               	btfsc	status,2,c
 36831  004A0E  D6EC               	goto	i2l14435
 36832  004A10  0A07               	xorlw	7	; case 4
 36833  004A12  B4D8               	btfsc	status,2,c
 36834  004A14  D763               	goto	i2l14479
 36835  004A16  0A01               	xorlw	1	; case 5
 36836  004A18  B4D8               	btfsc	status,2,c
 36837  004A1A  D7C5               	goto	i2l14521
 36838  004A1C  D7D8               	goto	i2l14531
 36839  004A1E                     __end_of_rxi:
 36840                           	callstack 0
 36841                           
 36842 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 36843 ;; Defined at:
 36844 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 36845 ;; Parameters:    Size  Location     Type
 36846 ;;		None
 36847 ;; Auto vars:     Size  Location     Type
 36848 ;;		None
 36849 ;; Return value:  Size  Location     Type
 36850 ;;                  1    wreg      void 
 36851 ;; Registers used:
 36852 ;;		None
 36853 ;; Tracked objects:
 36854 ;;		On entry : 3F/2
 36855 ;;		On exit  : 3F/2
 36856 ;;		Unchanged: 3F/0
 36857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36862 ;;Total ram usage:        0 bytes
 36863 ;; Hardware stack levels used: 1
 36864 ;; This function calls:
 36865 ;;		Nothing
 36866 ;; This function is called by:
 36867 ;;		_TMR0_Initialize
 36868 ;;		_TMR0_ISR
 36869 ;; This function uses a non-reentrant model
 36870 ;;
 36871                           
 36872                           	psect	text203
 36873  00980E                     __ptext203:
 36874                           	callstack 0
 36875  00980E                     _TMR0_DefaultInterruptHandler:
 36876                           	callstack 15
 36877                           
 36878                           ; BSR set to: 2
 36879                           
 36880                           ;incstack = 0
 36881  00980E  0012               	return		;funcret
 36882  009810                     __end_of_TMR0_DefaultInterruptHandler:
 36883                           	callstack 0
 36884                           
 36885 ;; *************** function _EUSART1_Transmit_ISR *****************
 36886 ;; Defined at:
 36887 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 36888 ;; Parameters:    Size  Location     Type
 36889 ;;		None
 36890 ;; Auto vars:     Size  Location     Type
 36891 ;;		None
 36892 ;; Return value:  Size  Location     Type
 36893 ;;                  1    wreg      void 
 36894 ;; Registers used:
 36895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36896 ;; Tracked objects:
 36897 ;;		On entry : 3F/2
 36898 ;;		On exit  : 30/0
 36899 ;;		Unchanged: 0/0
 36900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36905 ;;Total ram usage:        0 bytes
 36906 ;; Hardware stack levels used: 1
 36907 ;; This function calls:
 36908 ;;		Nothing
 36909 ;; This function is called by:
 36910 ;;		_EUSART1_Initialize
 36911 ;;		_INTERRUPT_InterruptManager
 36912 ;; This function uses a non-reentrant model
 36913 ;;
 36914                           
 36915                           	psect	text204
 36916  008FCC                     __ptext204:
 36917                           	callstack 0
 36918  008FCC                     _EUSART1_Transmit_ISR:
 36919                           	callstack 16
 36920                           
 36921                           ; BSR set to: 2
 36922                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 36923                           
 36924                           ; BSR set to: 2
 36925                           ;incstack = 0
 36926  008FCC  0E08               	movlw	8
 36927  008FCE  0101               	movlb	1	; () banked
 36928  008FD0  61FF               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 36929  008FD2  D012               	goto	i2l106
 36930                           
 36931                           ; BSR set to: 1
 36932                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 36933  008FD4  0E84               	movlw	low _eusart1TxBuffer
 36934  008FD6  0100               	movlb	0	; () banked
 36935  008FD8  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 36936  008FDA  6ED9               	movwf	fsr2l,c
 36937  008FDC  6ADA               	clrf	fsr2h,c
 36938  008FDE  0E02               	movlw	high _eusart1TxBuffer
 36939  008FE0  22DA               	addwfc	fsr2h,f,c
 36940  008FE2  50DF               	movf	indf2,w,c
 36941  008FE4  6E9A               	movwf	154,c	;volatile
 36942                           
 36943                           ; BSR set to: 0
 36944  008FE6  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 36945                           
 36946                           ; BSR set to: 0
 36947                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 36948  008FE8  0E07               	movlw	7
 36949  008FEA  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 36950  008FEC  D002               	goto	i2l16557
 36951                           
 36952                           ; BSR set to: 0
 36953                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 36954  008FEE  0E00               	movlw	0
 36955  008FF0  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 36956  008FF2                     i2l16557:
 36957                           
 36958                           ; BSR set to: 0
 36959                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 36960  008FF2  0101               	movlb	1	; () banked
 36961  008FF4  2BFF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 36962                           
 36963                           ;mcc_generated_files/eusart1.c: 209:     }
 36964  008FF6  0012               	return	
 36965  008FF8                     i2l106:
 36966                           
 36967                           ; BSR set to: 1
 36968                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 36969  008FF8  010E               	movlb	14	; () banked
 36970  008FFA  99C5               	bcf	197,4,b	;volatile
 36971  008FFC  0012               	return		;funcret
 36972  008FFE                     __end_of_EUSART1_Transmit_ISR:
 36973                           	callstack 0
 36974                           
 36975 ;; *************** function _EUSART1_Receive_ISR *****************
 36976 ;; Defined at:
 36977 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 36978 ;; Parameters:    Size  Location     Type
 36979 ;;		None
 36980 ;; Auto vars:     Size  Location     Type
 36981 ;;		None
 36982 ;; Return value:  Size  Location     Type
 36983 ;;                  1    wreg      void 
 36984 ;; Registers used:
 36985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36986 ;; Tracked objects:
 36987 ;;		On entry : 3F/2
 36988 ;;		On exit  : 0/0
 36989 ;;		Unchanged: 0/0
 36990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36995 ;;Total ram usage:        0 bytes
 36996 ;; Hardware stack levels used: 1
 36997 ;; Hardware stack levels required when called: 2
 36998 ;; This function calls:
 36999 ;;		Absolute function
 37000 ;;		_EUSART1_DefaultErrorHandler
 37001 ;;		_EUSART1_DefaultFramingErrorHandler
 37002 ;;		_EUSART1_DefaultOverrunErrorHandler
 37003 ;;		_EUSART1_RxDataHandler
 37004 ;; This function is called by:
 37005 ;;		_EUSART1_Initialize
 37006 ;;		_INTERRUPT_InterruptManager
 37007 ;; This function uses a non-reentrant model
 37008 ;;
 37009                           
 37010                           	psect	text205
 37011  007898                     __ptext205:
 37012                           	callstack 0
 37013  007898                     _EUSART1_Receive_ISR:
 37014                           	callstack 14
 37015                           
 37016                           ; BSR set to: 2
 37017                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 37018                           
 37019                           ;incstack = 0
 37020  007898  0E74               	movlw	low _eusart1RxStatusBuffer
 37021  00789A  0100               	movlb	0	; () banked
 37022  00789C  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37023  00789E  6ED9               	movwf	fsr2l,c
 37024  0078A0  6ADA               	clrf	fsr2h,c
 37025  0078A2  0E02               	movlw	high _eusart1RxStatusBuffer
 37026  0078A4  22DA               	addwfc	fsr2h,f,c
 37027  0078A6  0E00               	movlw	0
 37028  0078A8  6EDF               	movwf	indf2,c
 37029                           
 37030                           ; BSR set to: 0
 37031                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 37032  0078AA  A49D               	btfss	157,2,c	;volatile
 37033  0078AC  D013               	goto	i2u1859_49
 37034                           
 37035                           ; BSR set to: 0
 37036                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 37037  0078AE  0E74               	movlw	low _eusart1RxStatusBuffer
 37038  0078B0  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37039  0078B2  6ED9               	movwf	fsr2l,c
 37040  0078B4  6ADA               	clrf	fsr2h,c
 37041  0078B6  0E02               	movlw	high _eusart1RxStatusBuffer
 37042  0078B8  22DA               	addwfc	fsr2h,f,c
 37043  0078BA  0102               	movlb	2	; () banked
 37044  0078BC  82DF               	bsf	indf2,1,c
 37045                           
 37046                           ; BSR set to: 2
 37047                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 37048  0078BE  D801               	call	i2u1859_48
 37049  0078C0  D009               	goto	i2u1859_49
 37050  0078C2                     i2u1859_48:
 37051  0078C2  0005               	push	
 37052  0078C4  6EFA               	movwf	pclath,c
 37053  0078C6  51EB               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 37054  0078C8  6EFD               	movwf	tosl,c
 37055  0078CA  51EC               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 37056  0078CC  6EFE               	movwf	tosh,c
 37057  0078CE  6AFF               	clrf	tosu,c
 37058  0078D0  50FA               	movf	pclath,w,c
 37059  0078D2  0012               	return		;indir
 37060  0078D4                     i2u1859_49:
 37061                           
 37062                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 37063  0078D4  A29D               	btfss	157,1,c	;volatile
 37064  0078D6  D014               	goto	i2u1861_49
 37065                           
 37066                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 37067  0078D8  0E74               	movlw	low _eusart1RxStatusBuffer
 37068  0078DA  0100               	movlb	0	; () banked
 37069  0078DC  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37070  0078DE  6ED9               	movwf	fsr2l,c
 37071  0078E0  6ADA               	clrf	fsr2h,c
 37072  0078E2  0E02               	movlw	high _eusart1RxStatusBuffer
 37073  0078E4  22DA               	addwfc	fsr2h,f,c
 37074  0078E6  0102               	movlb	2	; () banked
 37075  0078E8  84DF               	bsf	indf2,2,c
 37076                           
 37077                           ; BSR set to: 2
 37078                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 37079  0078EA  D801               	call	i2u1861_48
 37080  0078EC  D009               	goto	i2u1861_49
 37081  0078EE                     i2u1861_48:
 37082  0078EE  0005               	push	
 37083  0078F0  6EFA               	movwf	pclath,c
 37084  0078F2  51E9               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 37085  0078F4  6EFD               	movwf	tosl,c
 37086  0078F6  51EA               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 37087  0078F8  6EFE               	movwf	tosh,c
 37088  0078FA  6AFF               	clrf	tosu,c
 37089  0078FC  50FA               	movf	pclath,w,c
 37090  0078FE  0012               	return		;indir
 37091  007900                     i2u1861_49:
 37092                           
 37093                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 37094  007900  0E74               	movlw	low _eusart1RxStatusBuffer
 37095  007902  0100               	movlb	0	; () banked
 37096  007904  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37097  007906  6ED9               	movwf	fsr2l,c
 37098  007908  6ADA               	clrf	fsr2h,c
 37099  00790A  0E02               	movlw	high _eusart1RxStatusBuffer
 37100  00790C  22DA               	addwfc	fsr2h,f,c
 37101  00790E  50DF               	movf	indf2,w,c
 37102  007910  B4D8               	btfsc	status,2,c
 37103  007912  D00C               	goto	i2l16577
 37104                           
 37105                           ; BSR set to: 0
 37106                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 37107  007914  D801               	call	i2u1863_48
 37108  007916  0012               	return	
 37109  007918                     i2u1863_48:
 37110  007918  0005               	push	
 37111  00791A  6EFA               	movwf	pclath,c
 37112  00791C  0102               	movlb	2	; () banked
 37113  00791E  51E7               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 37114  007920  6EFD               	movwf	tosl,c
 37115  007922  51E8               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 37116  007924  6EFE               	movwf	tosh,c
 37117  007926  6AFF               	clrf	tosu,c
 37118  007928  50FA               	movf	pclath,w,c
 37119  00792A  0012               	return		;indir
 37120  00792C                     i2l16577:
 37121                           
 37122                           ; BSR set to: 0
 37123                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 37124  00792C  EC2E  F04A         	call	_EUSART1_RxDataHandler	;wreg free
 37125  007930  0012               	return		;funcret
 37126  007932                     __end_of_EUSART1_Receive_ISR:
 37127                           	callstack 0
 37128                           
 37129 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 37130 ;; Defined at:
 37131 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 37132 ;; Parameters:    Size  Location     Type
 37133 ;;		None
 37134 ;; Auto vars:     Size  Location     Type
 37135 ;;		None
 37136 ;; Return value:  Size  Location     Type
 37137 ;;                  1    wreg      void 
 37138 ;; Registers used:
 37139 ;;		None
 37140 ;; Tracked objects:
 37141 ;;		On entry : 3F/2
 37142 ;;		On exit  : 3F/2
 37143 ;;		Unchanged: 3F/0
 37144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37149 ;;Total ram usage:        0 bytes
 37150 ;; Hardware stack levels used: 1
 37151 ;; This function calls:
 37152 ;;		Nothing
 37153 ;; This function is called by:
 37154 ;;		_EUSART1_Initialize
 37155 ;;		_EUSART1_Receive_ISR
 37156 ;; This function uses a non-reentrant model
 37157 ;;
 37158                           
 37159                           	psect	text206
 37160  0097C8                     __ptext206:
 37161                           	callstack 0
 37162  0097C8                     _EUSART1_DefaultOverrunErrorHandler:
 37163                           	callstack 15
 37164                           
 37165                           ; BSR set to: 2
 37166                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 37167                           
 37168                           ;incstack = 0
 37169  0097C8  989D               	bcf	157,4,c	;volatile
 37170                           
 37171                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 37172  0097CA  889D               	bsf	157,4,c	;volatile
 37173                           
 37174                           ; BSR set to: 2
 37175  0097CC  0012               	return		;funcret
 37176  0097CE                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 37177                           	callstack 0
 37178                           
 37179 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 37180 ;; Defined at:
 37181 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 37182 ;; Parameters:    Size  Location     Type
 37183 ;;		None
 37184 ;; Auto vars:     Size  Location     Type
 37185 ;;		None
 37186 ;; Return value:  Size  Location     Type
 37187 ;;                  1    wreg      void 
 37188 ;; Registers used:
 37189 ;;		None
 37190 ;; Tracked objects:
 37191 ;;		On entry : 3F/2
 37192 ;;		On exit  : 3F/2
 37193 ;;		Unchanged: 3F/0
 37194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37199 ;;Total ram usage:        0 bytes
 37200 ;; Hardware stack levels used: 1
 37201 ;; This function calls:
 37202 ;;		Nothing
 37203 ;; This function is called by:
 37204 ;;		_EUSART1_Initialize
 37205 ;;		_EUSART1_Receive_ISR
 37206 ;; This function uses a non-reentrant model
 37207 ;;
 37208                           
 37209                           	psect	text207
 37210  009810                     __ptext207:
 37211                           	callstack 0
 37212  009810                     _EUSART1_DefaultFramingErrorHandler:
 37213                           	callstack 15
 37214                           
 37215                           ; BSR set to: 2
 37216                           
 37217                           ; BSR set to: 2
 37218                           ;incstack = 0
 37219  009810  0012               	return		;funcret
 37220  009812                     __end_of_EUSART1_DefaultFramingErrorHandler:
 37221                           	callstack 0
 37222                           
 37223 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 37224 ;; Defined at:
 37225 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 37226 ;; Parameters:    Size  Location     Type
 37227 ;;		None
 37228 ;; Auto vars:     Size  Location     Type
 37229 ;;		None
 37230 ;; Return value:  Size  Location     Type
 37231 ;;                  1    wreg      void 
 37232 ;; Registers used:
 37233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37234 ;; Tracked objects:
 37235 ;;		On entry : 3F/2
 37236 ;;		On exit  : 3F/0
 37237 ;;		Unchanged: 0/0
 37238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37243 ;;Total ram usage:        0 bytes
 37244 ;; Hardware stack levels used: 1
 37245 ;; Hardware stack levels required when called: 1
 37246 ;; This function calls:
 37247 ;;		_EUSART1_RxDataHandler
 37248 ;; This function is called by:
 37249 ;;		_EUSART1_Initialize
 37250 ;;		_EUSART1_Receive_ISR
 37251 ;; This function uses a non-reentrant model
 37252 ;;
 37253                           
 37254                           	psect	text208
 37255  0097CE                     __ptext208:
 37256                           	callstack 0
 37257  0097CE                     _EUSART1_DefaultErrorHandler:
 37258                           	callstack 14
 37259                           
 37260                           ; BSR set to: 2
 37261                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 37262                           
 37263                           ; BSR set to: 2
 37264                           ;incstack = 0
 37265  0097CE  EC2E  F04A         	call	_EUSART1_RxDataHandler	;wreg free
 37266                           
 37267                           ; BSR set to: 0
 37268  0097D2  0012               	return		;funcret
 37269  0097D4                     __end_of_EUSART1_DefaultErrorHandler:
 37270                           	callstack 0
 37271                           
 37272 ;; *************** function _EUSART1_RxDataHandler *****************
 37273 ;; Defined at:
 37274 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 37275 ;; Parameters:    Size  Location     Type
 37276 ;;		None
 37277 ;; Auto vars:     Size  Location     Type
 37278 ;;		None
 37279 ;; Return value:  Size  Location     Type
 37280 ;;                  1    wreg      void 
 37281 ;; Registers used:
 37282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37283 ;; Tracked objects:
 37284 ;;		On entry : 3D/0
 37285 ;;		On exit  : 3F/0
 37286 ;;		Unchanged: 0/0
 37287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37292 ;;Total ram usage:        0 bytes
 37293 ;; Hardware stack levels used: 1
 37294 ;; This function calls:
 37295 ;;		Nothing
 37296 ;; This function is called by:
 37297 ;;		_EUSART1_Receive_ISR
 37298 ;;		_EUSART1_DefaultErrorHandler
 37299 ;; This function uses a non-reentrant model
 37300 ;;
 37301                           
 37302                           	psect	text209
 37303  00945C                     __ptext209:
 37304                           	callstack 0
 37305  00945C                     _EUSART1_RxDataHandler:
 37306                           	callstack 15
 37307                           
 37308                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 37309                           
 37310                           ; BSR set to: 0
 37311                           ;incstack = 0
 37312  00945C  0E7C               	movlw	low _eusart1RxBuffer
 37313  00945E  0100               	movlb	0	; () banked
 37314  009460  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37315  009462  6ED9               	movwf	fsr2l,c
 37316  009464  6ADA               	clrf	fsr2h,c
 37317  009466  0E02               	movlw	high _eusart1RxBuffer
 37318  009468  22DA               	addwfc	fsr2h,f,c
 37319  00946A  CF99 FFDF          	movff	3993,indf2	;volatile
 37320                           
 37321                           ; BSR set to: 0
 37322  00946E  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 37323                           
 37324                           ; BSR set to: 0
 37325                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 37326  009470  0E07               	movlw	7
 37327  009472  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 37328  009474  D002               	goto	i2l12871
 37329                           
 37330                           ; BSR set to: 0
 37331                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 37332  009476  0E00               	movlw	0
 37333  009478  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 37334  00947A                     i2l12871:
 37335                           
 37336                           ; BSR set to: 0
 37337                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 37338  00947A  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 37339                           
 37340                           ; BSR set to: 0
 37341  00947C  0012               	return		;funcret
 37342  00947E                     __end_of_EUSART1_RxDataHandler:
 37343                           	callstack 0
 37344                           
 37345                           	psect	text210
 37346  000000                     __ptext210:
 37347                           	callstack 0
 37348                           
 37349                           	psect	rparam
 37350  0000                     
 37351                           	psect	temp
 37352  000050                     btemp:
 37353                           	callstack 0
 37354  000050                     	ds	1
 37355  0000                     int$flags	set	btemp
 37356  0000                     wtemp8	set	btemp+1
 37357  0000                     ttemp5	set	btemp+1
 37358  0000                     ttemp6	set	btemp+4
 37359  0000                     ttemp7	set	btemp+8
 37360                           
 37361                           	psect	idloc
 37362                           
 37363                           ;Config register IDLOC0 @ 0x200000
 37364                           ;	unspecified, using default values
 37365  200000                     	org	2097152
 37366  200000  0FFF               	dw	4095
 37367                           
 37368                           ;Config register IDLOC1 @ 0x200002
 37369                           ;	unspecified, using default values
 37370  200002                     	org	2097154
 37371  200002  0FFF               	dw	4095
 37372                           
 37373                           ;Config register IDLOC2 @ 0x200004
 37374                           ;	unspecified, using default values
 37375  200004                     	org	2097156
 37376  200004  0FFF               	dw	4095
 37377                           
 37378                           ;Config register IDLOC3 @ 0x200006
 37379                           ;	unspecified, using default values
 37380  200006                     	org	2097158
 37381  200006  0FFF               	dw	4095
 37382                           
 37383                           ;Config register IDLOC4 @ 0x200008
 37384                           ;	unspecified, using default values
 37385  200008                     	org	2097160
 37386  200008  0FFF               	dw	4095
 37387                           
 37388                           ;Config register IDLOC5 @ 0x20000A
 37389                           ;	unspecified, using default values
 37390  20000A                     	org	2097162
 37391  20000A  0FFF               	dw	4095
 37392                           
 37393                           ;Config register IDLOC6 @ 0x20000C
 37394                           ;	unspecified, using default values
 37395  20000C                     	org	2097164
 37396  20000C  0FFF               	dw	4095
 37397                           
 37398                           ;Config register IDLOC7 @ 0x20000E
 37399                           ;	unspecified, using default values
 37400  20000E                     	org	2097166
 37401  20000E  0FFF               	dw	4095
 37402                           
 37403                           	psect	config
 37404                           
 37405                           ;Config register CONFIG1L @ 0x300000
 37406                           ;	External Oscillator mode Selection bits
 37407                           ;	FEXTOSC = OFF, Oscillator not enabled
 37408                           ;	Power-up default value for COSC bits
 37409                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 37410  300000                     	org	3145728
 37411  300000  8C                 	db	140
 37412                           
 37413                           ;Config register CONFIG1H @ 0x300001
 37414                           ;	Clock Out Enable bit
 37415                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 37416                           ;	Clock Switch Enable bit
 37417                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 37418                           ;	Fail-Safe Clock Monitor Enable bit
 37419                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 37420  300001                     	org	3145729
 37421  300001  FF                 	db	255
 37422                           
 37423                           ;Config register CONFIG2L @ 0x300002
 37424                           ;	Master Clear Enable bit
 37425                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 37426                           ;	Power-up Timer Enable bit
 37427                           ;	PWRTE = ON, Power up timer enabled
 37428                           ;	Low-power BOR enable bit
 37429                           ;	LPBOREN = OFF, ULPBOR disabled
 37430                           ;	Brown-out Reset Enable bits
 37431                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 37432  300002                     	org	3145730
 37433  300002  FD                 	db	253
 37434                           
 37435                           ;Config register CONFIG2H @ 0x300003
 37436                           ;	Brown Out Reset Voltage selection bits
 37437                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 37438                           ;	ZCD Disable bit
 37439                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 37440                           ;	PPSLOCK bit One-Way Set Enable bit
 37441                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 37442                           ;	Stack Full/Underflow Reset Enable bit
 37443                           ;	STVREN = ON, Stack full/underflow will cause Reset
 37444                           ;	Debugger Enable bit
 37445                           ;	DEBUG = OFF, Background debugger disabled
 37446                           ;	Extended Instruction Set Enable bit
 37447                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 37448  300003                     	org	3145731
 37449  300003  FF                 	db	255
 37450                           
 37451                           ;Config register CONFIG3L @ 0x300004
 37452                           ;	WDT Period Select bits
 37453                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 37454                           ;	WDT operating mode
 37455                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 37456  300004                     	org	3145732
 37457  300004  BF                 	db	191
 37458                           
 37459                           ;Config register CONFIG3H @ 0x300005
 37460                           ;	WDT Window Select bits
 37461                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 37462                           ;	WDT input clock selector
 37463                           ;	WDTCCS = SC, Software Control
 37464  300005                     	org	3145733
 37465  300005  FF                 	db	255
 37466                           
 37467                           ;Config register CONFIG4L @ 0x300006
 37468                           ;	Write Protection Block 0
 37469                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 37470                           ;	Write Protection Block 1
 37471                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 37472                           ;	Write Protection Block 2
 37473                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 37474                           ;	Write Protection Block 3
 37475                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 37476  300006                     	org	3145734
 37477  300006  FF                 	db	255
 37478                           
 37479                           ;Config register CONFIG4H @ 0x300007
 37480                           ;	Configuration Register Write Protection bit
 37481                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 37482                           ;	Boot Block Write Protection bit
 37483                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 37484                           ;	Data EEPROM Write Protection bit
 37485                           ;	WRTD = OFF, Data EEPROM not write-protected
 37486                           ;	Scanner Enable bit
 37487                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 37488                           ;	Low Voltage Programming Enable bit
 37489                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 37490  300007                     	org	3145735
 37491  300007  DF                 	db	223
 37492                           
 37493                           ;Config register CONFIG5L @ 0x300008
 37494                           ;	UserNVM Program Memory Code Protection bit
 37495                           ;	CP = ON, UserNVM code protection enabled
 37496                           ;	DataNVM Memory Code Protection bit
 37497                           ;	CPD = ON, DataNVM code protection enabled
 37498  300008                     	org	3145736
 37499  300008  FC                 	db	252
 37500                           
 37501                           ;Config register CONFIG5H @ 0x300009
 37502                           ;	unspecified, using default values
 37503  300009                     	org	3145737
 37504  300009  FF                 	db	255
 37505                           
 37506                           ;Config register CONFIG6L @ 0x30000A
 37507                           ;	Table Read Protection Block 0
 37508                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 37509                           ;	Table Read Protection Block 1
 37510                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 37511                           ;	Table Read Protection Block 2
 37512                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 37513                           ;	Table Read Protection Block 3
 37514                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 37515  30000A                     	org	3145738
 37516  30000A  FF                 	db	255
 37517                           
 37518                           ;Config register CONFIG6H @ 0x30000B
 37519                           ;	Boot Block Table Read Protection bit
 37520                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 37521  30000B                     	org	3145739
 37522  30000B  FF                 	db	255
 37523                           tosu	equ	0xFFF
 37524                           tosh	equ	0xFFE
 37525                           tosl	equ	0xFFD
 37526                           stkptr	equ	0xFFC
 37527                           pclatu	equ	0xFFB
 37528                           pclath	equ	0xFFA
 37529                           pcl	equ	0xFF9
 37530                           tblptru	equ	0xFF8
 37531                           tblptrh	equ	0xFF7
 37532                           tblptrl	equ	0xFF6
 37533                           tablat	equ	0xFF5
 37534                           prodh	equ	0xFF4
 37535                           prodl	equ	0xFF3
 37536                           indf0	equ	0xFEF
 37537                           postinc0	equ	0xFEE
 37538                           postdec0	equ	0xFED
 37539                           preinc0	equ	0xFEC
 37540                           plusw0	equ	0xFEB
 37541                           fsr0h	equ	0xFEA
 37542                           fsr0l	equ	0xFE9
 37543                           wreg	equ	0xFE8
 37544                           indf1	equ	0xFE7
 37545                           postinc1	equ	0xFE6
 37546                           postdec1	equ	0xFE5
 37547                           preinc1	equ	0xFE4
 37548                           plusw1	equ	0xFE3
 37549                           fsr1h	equ	0xFE2
 37550                           fsr1l	equ	0xFE1
 37551                           bsr	equ	0xFE0
 37552                           indf2	equ	0xFDF
 37553                           postinc2	equ	0xFDE
 37554                           postdec2	equ	0xFDD
 37555                           preinc2	equ	0xFDC
 37556                           plusw2	equ	0xFDB
 37557                           fsr2h	equ	0xFDA
 37558                           fsr2l	equ	0xFD9
 37559                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         824
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     35     157
    BANK1           256      0     256
    BANK2           256      0     243
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8290$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8296$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8302$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8308$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8307	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8302	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8301	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8296	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8295	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8290	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8289	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    confirmpackage@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    init_package@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6617$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _saveNewSerial->_i2c_writeNBytes
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8869261
                                             28 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3269200
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3243776
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  718231
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1776319
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  742047
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384912
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357135
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        27    26      1 2117647
                                              8 BANK0     20    19      1
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350226
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349630
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    7354
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    5144
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       2     0      2    3466
                                             16 COMRAM     2     0      2
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         1     0      1     142
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  349681
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349453
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348648
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F3       9       94.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      9D       5       98.1%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D6      60        0.0%
DATA                 0      0     3D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 17:19:38 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 96F0  
                                _eusart1TxBufferRemaining 01FF  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 8196  
                                           _LoadManufCode 93F6  
                                        ?_SetSegmentValue 001C  
                                                     l100 8DCE  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 7C64  
                                                     l690 80CC  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E3  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 47A8  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 90E0  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 976C  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 8F2E  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 865C  
                                                    l1405 650A  
                                       readRFButtons@key1 0088  
                                                    l3102 2D16  
                                                    l2039 8650  
                                                    l2311 52FA  
                                                    l2240 7446  
                                                    l2323 8188  
                                                    l2403 4EB8  
                                                    l1372 8CCC  
                                                    l1436 5A40  
                                                    l1524 5A10  
                                                    l1357 6F24  
                                                    l1517 59C4  
                                                    l3053 2A6A  
                                                    l1366 70A6  
                                                    l2254 6C0E  
                                                    l1383 5C44  
                                                    l2415 3F36  
                                                    l2328 8192  
                                                    l2353 4DDC  
                                                    l3233 1066  
                                                    l3065 2BF6  
                                                    l2370 4DD4  
                                                    l1491 888A  
                                                    l2507 7AEA  
                                                    l2443 40A8  
                                                    l1731 6D4A  
                                                    l1388 5CCC  
                                                    l2516 8ECC  
                                                    l2380 4EAC  
                                                    l1740 6DB0  
                                                    l1732 6D52  
                                                    l1742 6DCC  
                                                    l1654 5F8C  
                                                    l2519 8EF2  
                                                    l1495 58A6  
                                                    l1743 6DD4  
                                                    l2376 4DE8  
                                                    l1736 6D84  
                                                    l3512 8778  
                                                    l3088 2C3C  
                                                    l1745 6DF0  
                                                    l1737 6D8C  
                                                    l1657 6002  
                                                    l1746 6DF8  
                                                    l2810 47A6  
                                                    l2730 541C  
                                                    l4219 8A82  
                                                    l3611 3408  
                                                    l1739 6DA8  
                                                    l1667 604A  
                                                    l2723 4C70  
                                                    l3620 3440  
                                                    l3612 3412  
                                                    l3604 33E4  
                                                    l1748 6E22  
                                                    l3380 25BE  
                                                    l3372 2584  
                                                    l2477 41BE  
                                                    l2397 4EA4  
                                                    l3621 3446  
                                                    l3613 341C  
                                                    l1861 7330  
                                                    l2653 3D70  
                                                    l3630 346E  
                                                    l3614 3422  
                                                    l3606 33EE  
                                                    l3438 28EC  
                                                    l3390 2702  
                                                    l3358 24C4  
                                                    l3631 3474  
                                                    l3623 3450  
                                                    l3615 3428  
                                                    l3607 33F8  
                                                    l2727 5326  
                                                    l3391 2722  
                                                    l3632 347A  
                                                    l3616 342E  
                                                    l2912 19FC  
                                                    l3641 36D0  
                                                    l3633 3480  
                                                    l3625 3456  
                                                    l3617 3434  
                                                    l3609 33FE  
                                                    l2585 8366  
                                                    l2729 535C  
                                                    l3642 36DA  
                                                    l3626 345C  
                                                    l3618 343A  
                                                    l3627 3462  
                                                    l1859 7320  
                                                    l3636 354A  
                                                    l3628 3468  
                                                    l1869 7354  
                                                    l2773 45C2  
                                                    l3494 902C  
                                                    l3488 76A0  
                                                    l3755 7F18  
                                                    ?_rxi 0001  
                                                    _DKEY 02D3  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F4  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028E  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 96A8  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 8DB8  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 5EF4  
                                                    _main 6214  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0011  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 73AC  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7472  
                                         __end_of_ReadADC 89E6  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5884  
                                 __end_of_TMR0_Initialize 943A  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9616  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20005 826A  
                                                   l20201 7A58  
                                                   l20033 731C  
                                                   l20025 7302  
                                                   l20113 87BE  
                                                   l21001 84A4  
                                                   l20043 732C  
                                                   l21005 84AC  
                                                   l20221 8B58  
                                                   l20143 5AF6  
                                                   l20135 5A92  
                                                   l20127 5A48  
                                                   l20055 734C  
                                                   l20047 7338  
                                                   l21031 7220  
                                                   l20119 8D1C  
                                                   l20223 8B72  
                                                   l21103 24FA  
                                                   l20129 5A4E  
                                                   l20145 5AFA  
                                                   l21041 7294  
                                                   l20225 8B76  
                                                   l20401 4266  
                                                   l21201 26C8  
                                                   l21105 2502  
                                                   l20163 5BB0  
                                                   l20155 5B4C  
                                                   l20091 71D0  
                                                   l20083 718C  
                                                   l20331 6B56  
                                                   l20323 6B18  
                                                   l22011 4B64  
                                                   l21107 250A  
                                                   l20149 5B08  
                                                   l20165 5BB4  
                                                   l20501 6178  
                                                   l21061 695E  
                                                   l21037 725A  
                                                   l22005 4B4C  
                                                   l20421 4306  
                                                   l20413 42A8  
                                                   l21301 2856  
                                                   l21141 259A  
                                                   l21125 252A  
                                                   l21117 251E  
                                                   l21109 2512  
                                                   l20183 7F78  
                                                   l20191 7A16  
                                                   l12343 8DEE  
                                                   l20175 83A4  
                                                   l20079 7160  
                                                   l21055 691A  
                                                   l21047 68CE  
                                                   l22023 4B88  
                                                   l20431 43AC  
                                                   l20423 4322  
                                                   l20407 4298  
                                                   l21231 273C  
                                                   l21151 25AE  
                                                   l21143 25A2  
                                                   l21135 2536  
                                                   l14201 8A50  
                                                   l20193 7A48  
                                                   l12345 8DF2  
                                                   l12329 8DBA  
                                                   l20273 6668  
                                                   l20337 6BAA  
                                                   l22041 4BC2  
                                                   l21081 86AE  
                                                   l12601 6FE2  
                                                   l20441 4430  
                                                   l20433 43C8  
                                                   l20425 4346  
                                                   l21321 2894  
                                                   l21313 288A  
                                                   l21241 278E  
                                                   l21233 2766  
                                                   l14203 8A58  
                                                   l20515 6206  
                                                   l20531 56F6  
                                                   l22203 5436  
                                                   l20451 44B4  
                                                   l20435 43E4  
                                                   l20427 4362  
                                                   l20419 42DA  
                                                   l21307 2880  
                                                   l21251 27BC  
                                                   l21235 276A  
                                                   l21171 25D6  
                                                   l21163 25C6  
                                                   l21139 2592  
                                                   l21091 24D6  
                                                   l23003 14F2  
                                                   l14213 8A78  
                                                   l20293 6750  
                                                   l22213 545C  
                                                   l22117 5316  
                                                   l22061 4BDC  
                                                   l12605 6FEE  
                                                   l12613 7004  
                                                   l20437 43FC  
                                                   l20429 437E  
                                                   l20445 4442  
                                                   l21341 28C0  
                                                   l21333 28BC  
                                                   l21261 27D0  
                                                   l21245 27A8  
                                                   l21181 2630  
                                                   l21093 24DE  
                                                   l15031 8162  
                                                   l20279 66BA  
                                                   l20471 8F0C  
                                                   l20615 57CE  
                                                   l22039 4BBC  
                                                   l21079 867C  
                                                   l20455 44F0  
                                                   l20439 4416  
                                                   l20447 44A6  
                                                   l21327 28B2  
                                                   l21255 27C4  
                                                   l21247 27B2  
                                                   l21239 2772  
                                                   l21191 2640  
                                                   l21095 24E6  
                                                   l23023 1584  
                                                   l23201 64A4  
                                                   l20641 5840  
                                                   l20609 57C6  
                                                   l20561 575C  
                                                   l20537 56FA  
                                                   l20705 7894  
                                                   l20721 7786  
                                                   l22225 548A  
                                                   l12609 6FFA  
                                                   l14161 9026  
                                                   l20393 4250  
                                                   l21361 2918  
                                                   l21281 2824  
                                                   l21273 2800  
                                                   l21257 27C8  
                                                   l21193 268E  
                                                   l21177 261E  
                                                   l21089 24CE  
                                                   l20299 6766  
                                                   l20467 8F06  
                                                   l20483 8F2A  
                                                   l20555 5738  
                                                   l20571 5760  
                                                   l22331 4698  
                                                   l22243 54C6  
                                                   l22171 53DA  
                                                   l22163 53BE  
                                                   l22075 4C08  
                                                   l12571 6F6C  
                                                   l12803 7E0C  
                                                   l20395 4256  
                                                   l21347 28DE  
                                                   l21291 2846  
                                                   l21275 281C  
                                                   l21267 27F4  
                                                   l23123 17EE  
                                                   l23051 160A  
                                                   l23019 1562  
                                                   l15061 7A7A  
                                                   l15037 817E  
                                                   l20493 6104  
                                                   l20821 8F96  
                                                   l20813 8F7E  
                                                   l20653 5880  
                                                   l20629 57F4  
                                                   l20549 5734  
                                                   l20645 5844  
                                                   l20741 77B8  
                                                   l22341 46BA  
                                                   l22149 5390  
                                                   l22085 4C24  
                                                   l22077 4C0C  
                                                   l22501 1A54  
                                                   l14181 7ED6  
                                                   l12565 6F52  
                                                   l21525 386A  
                                                   l20389 4246  
                                                   l21357 2906  
                                                   l21293 284A  
                                                   l21285 2828  
                                                   l21269 27F8  
                                                   l21381 29BE  
                                                   l23125 17F4  
                                                   l23109 1710  
                                                   l12911 92F8  
                                                   l15047 8ECE  
                                                   l15063 7A82  
                                                   l15071 7ABA  
                                                   l23311 5FEC  
                                                   l14319 8C98  
                                                   l20479 8F22  
                                                   l20727 778A  
                                                   l22415 478E  
                                                   l22319 4674  
                                                   l22239 54BA  
                                                   l22159 53B4  
                                                   l22079 4C12  
                                                   l22431 18BE  
                                                   l22423 188E  
                                                   l14191 7F0A  
                                                   l12591 6FBA  
                                                   l12583 6F96  
                                                   l12575 6F7E  
                                                   l12559 6F38  
                                                   l12807 7E1A  
                                                   l21631 3B36  
                                                   l21543 38E8  
                                                   l21535 388C  
                                                   l21367 2928  
                                                   l21295 284E  
                                                   l21279 2820  
                                                   l23127 17FA  
                                                   l23119 17DE  
                                                   l23063 164E  
                                                   l23039 15D0  
                                                   l23143 1840  
                                                   l15081 7AE6  
                                                   l15065 7A8A  
                                                   l20497 6140  
                                                   l21721 58F2  
                                                   l21713 58D6  
                                                   l21705 58BA  
                                                   l23305 5FC0  
                                                   l20593 5794  
                                                   l22337 46B2  
                                                   l22265 4542  
                                                   l22169 53D2  
                                                   l22097 4C4E  
                                                   l24041 3E9C  
                                                   l24017 3E32  
                                                   l12585 6FA0  
                                                   l21609 3AAA  
                                                   l21545 3920  
                                                   l21537 388E  
                                                   l21369 2944  
                                                   l21297 2852  
                                                   l23081 1694  
                                                   l24105 6270  
                                                   l12923 7042  
                                                   l15059 7A72  
                                                   l23411 20E4  
                                                   l20587 578C  
                                                   l20675 7830  
                                                   l22363 4700  
                                                   l22347 46CE  
                                                   l22267 4558  
                                                   l22195 5418  
                                                   l22179 53F0  
                                                   l20843 5114  
                                                   l22451 1938  
                                                   l22443 1914  
                                                   l24051 3EB4  
                                                   l24043 3EA8  
                                                   l14179 7ECA  
                                                   l12579 6F8A  
                                                   l21547 3926  
                                                   l21379 296C  
                                                   l23091 16BC  
                                                   l15069 7A92  
                                                   l23501 2348  
                                                   l23341 1F96  
                                                   l21741 5938  
                                                   l21733 591C  
                                                   l21725 5900  
                                                   l21717 58E4  
                                                   l21709 58C8  
                                                   l17013 6E1C  
                                                   l20781 7CDC  
                                                   l21813 5592  
                                                   l23333 607A  
                                                   l23309 5FE6  
                                                   l17101 8AAE  
                                                   l20669 782C  
                                                   l20757 77EE  
                                                   l22381 4724  
                                                   l22365 4708  
                                                   l22349 46D4  
                                                   l22189 5402  
                                                   l20917 5268  
                                                   l20925 5286  
                                                   l20837 5102  
                                                   l22613 1C8A  
                                                   l22525 1AF0  
                                                   l22517 1AB2  
                                                   l24037 3E92  
                                                   l12597 6FD4  
                                                   l12781 7DC4  
                                                   l21637 3B4C  
                                                   l21565 39A2  
                                                   l23077 1688  
                                                   l23069 1666  
                                                   l24125 6324  
                                                   l23167 63E4  
                                                   l23415 2106  
                                                   l23407 20BE  
                                                   l23343 1F9E  
                                                   l23247 6830  
                                                   l20767 8FC8  
                                                   l23327 6066  
                                                   l22391 4742  
                                                   l22359 46F8  
                                                   l22279 45B0  
                                                   l22519 1AD0  
                                                   l22471 199A  
                                                   l22463 1978  
                                                   l22439 18F0  
                                                   l24047 3EAE  
                                                   l24039 3E98  
                                                   l12775 7DB4  
                                                   l12847 92BA  
                                                   l12839 92A2  
                                                   l24135 6342  
                                                   l24119 62FE  
                                                   l12929 70DA  
                                                   l23185 6456  
                                                   l17041 6A40  
                                                   l16401 2FDC  
                                                   l23513 2354  
                                                   l23425 2114  
                                                   l23417 210A  
                                                   l23345 1FAA  
                                                   l21761 597E  
                                                   l21753 5962  
                                                   l21745 5946  
                                                   l21737 592A  
                                                   l21729 590E  
                                                   l20793 7CFC  
                                                   l20785 7CE0  
                                                   l21817 559C  
                                                   l23329 606E  
                                                   l20689 785E  
                                                   l21921 7722  
                                                   l21905 76DA  
                                                   l22377 471A  
                                                   l20945 52BC  
                                                   l20873 51BA  
                                                   l20849 512E  
                                                   l22705 1E76  
                                                   l22625 1CE0  
                                                   l22553 1B5C  
                                                   l24057 3EC2  
                                                   l21577 3A02  
                                                   l21569 39DC  
                                                   l23097 16CE  
                                                   l14803 5CDC  
                                                   l14723 6E52  
                                                   l23187 645A  
                                                   l17027 6A0C  
                                                   l23531 238C  
                                                   l23507 234C  
                                                   l23443 217E  
                                                   l23435 2170  
                                                   l23427 211E  
                                                   l23371 202E  
                                                   l23355 1FE6  
                                                   l23347 1FC6  
                                                   l21827 5610  
                                                   l21835 5624  
                                                   l23275 5F18  
                                                   l21907 76F0  
                                                   l22379 471E  
                                                   l22299 4628  
                                                   l20955 52E6  
                                                   l20947 52C2  
                                                   l20939 5298  
                                                   l20883 51D8  
                                                   l22707 1E80  
                                                   l22651 1D50  
                                                   l22459 195E  
                                                   l12787 7DDA  
                                                   l21659 7660  
                                                   l21579 3A16  
                                                   l23099 16D6  
                                                   l23611 2A30  
                                                   l23603 29EE  
                                                   l16421 303A  
                                                   l16413 301A  
                                                   l16405 2FEC  
                                                   l23517 235E  
                                                   l23461 21E8  
                                                   l23453 21DA  
                                                   l23445 2188  
                                                   l23437 2174  
                                                   l23365 200A  
                                                   l21669 87DC  
                                                   l21773 59A8  
                                                   l21765 598C  
                                                   l21757 5970  
                                                   l21749 5954  
                                                   l21861 5696  
                                                   l21845 566A  
                                                   l21829 5620  
                                                   l22581 1BE4  
                                                   l22557 1B6A  
                                                   l12789 7DE2  
                                                   l22901 12D8  
                                                   l23701 2B92  
                                                   l23621 2A6C  
                                                   l14807 5CFE  
                                                   l14743 6EBA  
                                                   l12895 7B84  
                                                   l23199 648E  
                                                   l16511 3610  
                                                   l16503 348A  
                                                   l23551 23BE  
                                                   l23543 23B6  
                                                   l23535 23AC  
                                                   l23455 21DE  
                                                   l23359 1FF4  
                                                   l21679 8824  
                                                   l20967 832A  
                                                   l21927 772C  
                                                   l22399 475C  
                                                   l22727 1ED8  
                                                   l22559 1B74  
                                                   l22487 19DA  
                                                   l22479 19B2  
                                                   l12799 7E02  
                                                   l22823 1044  
                                                   l22815 101E  
                                                   l22807 0FFC  
                                                   l22831 10AC  
                                                   l23631 2AC0  
                                                   l23615 2A52  
                                                   l23607 2A10  
                                                   l23623 2A98  
                                                   l24095 625A  
                                                   l14737 6EA6  
                                                   l17081 6ADA  
                                                   l17057 6A7A  
                                                   l21689 8414  
                                                   l16441 308A  
                                                   l16433 306A  
                                                   l16425 304A  
                                                   l16417 302A  
                                                   l16409 2FFC  
                                                   l16361 2F04  
                                                   l16513 3682  
                                                   l16505 34FC  
                                                   l23473 2238  
                                                   l23393 208E  
                                                   l23369 201A  
                                                   l23377 2048  
                                                   l21793 59F4  
                                                   l21785 59D8  
                                                   l21777 59B6  
                                                   l21769 599A  
                                                   l21697 5898  
                                                   l23297 5F92  
                                                   l20897 5206  
                                                   l22745 1F06  
                                                   l22681 1DEC  
                                                   l22673 1D9E  
                                                   l22665 1D80  
                                                   l22593 1C3A  
                                                   l22497 19FE  
                                                   l22833 10C2  
                                                   l23721 2BEC  
                                                   l23625 2AAE  
                                                   l14755 6EE0  
                                                   l14739 6EAE  
                                                   l12899 7BC6  
                                                   l14771 8CC0  
                                                   l17067 6AA6  
                                                   l16507 3550  
                                                   l23571 2430  
                                                   l23491 2310  
                                                   l21971 4A9C  
                                                   l21955 4A58  
                                                   l22739 1EF0  
                                                   l22755 1F54  
                                                   l22499 1A3E  
                                                   l22843 112A  
                                                   l22771 0F24  
                                                   l23723 2BF8  
                                                   l23715 2BCC  
                                                   l17501 4E98  
                                                   l17421 4CAA  
                                                   l16541 8BB4  
                                                   l16445 309A  
                                                   l16437 307A  
                                                   l16429 305A  
                                                   l16381 2F8C  
                                                   l16373 2F50  
                                                   l16365 2F22  
                                                   l16357 2ECE  
                                                   l16509 35C2  
                                                   l16525 36E4  
                                                   l23581 245A  
                                                   l23549 23BA  
                                                   l23485 22E8  
                                                   l23397 20B0  
                                                   l23389 2062  
                                                   l21797 5A02  
                                                   l21789 59E6  
                                                   l21957 4A6E  
                                                   l22861 11AC  
                                                   l22853 1190  
                                                   l22829 1068  
                                                   l23805 2D06  
                                                   l23725 2C06  
                                                   l23645 2AFC  
                                                   l23637 2AE0  
                                                   l23901 2E9E  
                                                   l14783 5BEE  
                                                   l17503 4EA6  
                                                   l17431 4CCC  
                                                   l17415 4C9A  
                                                   l16471 31F0  
                                                   l16455 3116  
                                                   l16359 2EEA  
                                                   l23575 2450  
                                                   l23495 2330  
                                                   l23487 22F4  
                                                   l23479 22AC  
                                                   l23399 20B4  
                                                   l20999 8498  
                                                   l21991 4B0C  
                                                   l22951 13CC  
                                                   l22927 1344  
                                                   l22919 1328  
                                                   l22935 1360  
                                                   l22863 11D6  
                                                   l22791 0FCC  
                                                   l22783 0F88  
                                                   l22775 0F44  
                                                   l23831 2D5E  
                                                   l23735 2C2C  
                                                   l23655 2B0A  
                                                   l16465 3192  
                                                   l16449 30B8  
                                                   l16393 2FBC  
                                                   l16385 2F9C  
                                                   l16377 2F6E  
                                                   l16369 2F32  
                                                   l23921 3BDC  
                                                   l22865 11DC  
                                                   l23841 2D80  
                                                   l14779 5BD8  
                                                   l17603 4100  
                                                   l17515 3F38  
                                                   l16475 3204  
                                                   l16459 3134  
                                                   l23587 245E  
                                                   l22875 11FA  
                                                   l22859 11AA  
                                                   l22787 0FAA  
                                                   l22779 0F66  
                                                   l23827 2D4E  
                                                   l23771 2CAE  
                                                   l23763 2C94  
                                                   l23691 2B66  
                                                   l23675 2B3E  
                                                   l23667 2B20  
                                                   l14789 5C0E  
                                                   l17613 413A  
                                                   l17509 3F18  
                                                   l17429 4CC6  
                                                   l16485 3276  
                                                   l16397 2FCC  
                                                   l16389 2FAC  
                                                   l16493 32D4  
                                                   l23925 3BFE  
                                                   l23917 3BCE  
                                                   l22965 1412  
                                                   l23757 2C76  
                                                   l23685 2B4E  
                                                   l23597 29C6  
                                                   l14799 5CB2  
                                                   l17607 4118  
                                                   l17551 4006  
                                                   l17543 3FD0  
                                                   l17527 3F82  
                                                   l17471 4DC4  
                                                   l17447 4D18  
                                                   l16479 3218  
                                                   l22991 147C  
                                                   l22983 145E  
                                                   l22967 1416  
                                                   l22879 1226  
                                                   l22799 0FE4  
                                                   l23847 2DA4  
                                                   l17641 41C2  
                                                   l17625 416C  
                                                   l17609 4126  
                                                   l17473 4DC8  
                                                   l17393 862A  
                                                   l23953 3C92  
                                                   l23937 3C38  
                                                   l23929 3C16  
                                                   l22993 147E  
                                                   l22969 1422  
                                                   l22897 12B6  
                                                   l23873 2E12  
                                                   l23785 2CD2  
                                                   l23697 2B80  
                                                   l17651 41FE  
                                                   l17619 414A  
                                                   l17571 4064  
                                                   l17555 401C  
                                                   l17539 3FBC  
                                                   l17475 4DD6  
                                                   l16923 8548  
                                                   l23891 2E72  
                                                   l23875 2E26  
                                                   l17645 41DA  
                                                   l17629 4180  
                                                   l17573 4074  
                                                   l17549 3FF8  
                                                   l17557 402A  
                                                   l17477 4DEC  
                                                   l17397 863E  
                                                   l17389 8618  
                                                   l16845 95B4  
                                                   l16941 8580  
                                                   l16933 856A  
                                                   l16925 854C  
                                                   l23981 3D32  
                                                   l23965 3CCE  
                                                   l23949 3C70  
                                                   l23797 2CE8  
                                                   l17647 41E8  
                                                   l16951 6D34  
                                                   l16943 8584  
                                                   l23991 3D72  
                                                   l22999 14D0  
                                                   l23895 2E86  
                                                   l17657 4218  
                                                   l17577 408A  
                                                   l17585 40B4  
                                                   l16953 6D3E  
                                                   l23977 3D10  
                                                   l23993 3DB2  
                                                   l23897 2E92  
                                                   l17499 4E94  
                                                   l23995 3DC8  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l16965 6D6E  
                                                   l16967 6D78  
                                                   l19473 84F2  
                                                   l19705 80D0  
                                                   l19731 86C4  
                                                   l19715 80DC  
                                                   l19803 968C  
                                                   l19741 86D2  
                                                   l19661 7C10  
                                                   l19709 80D6  
                                                   l19735 86CA  
                                                   l19807 9694  
                                                   l19665 7C16  
                                                   l19833 9128  
                                                   l19913 8D44  
                                                   l19921 8D64  
                                                   l19907 9458  
                                                   l19747 86D8  
                                                   l19683 7C8C  
                                                   l19675 7C22  
                                                   l19771 8BD0  
                                                   l19669 7C1C  
                                                   l19781 8BDC  
                                                   l19775 8BD6  
                                                   l19839 9134  
                                                   l19935 73FC  
                                                   l19927 73C0  
                                                   l19937 7408  
                                                   l19947 7436  
                                                   l19797 89FE  
                                                   l19981 82A2  
                                                   l19957 7468  
                                                   l19973 895E  
                                                   l19887 7EA4  
                                                   l19969 894A  
                                                   l19995 8220  
                                                   l19989 82DE  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7EA8  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 83D8  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 7E24  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 8F2E  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 92C2  
                                            _zeroCrossing 0193  
                                         __end_of___lldiv 7F2A  
                                                   _T1CLK 000FD2  
                                                   u21010 4054  
                                                   u21100 40E2  
                                         ___awdiv@divisor 0016  
                                                   u21200 417C  
                                                   u20320 8606  
                                                   _T1CON 000FCF  
                                                   u14010 7EDA  
                                                   u12410 7DE6  
                                                   u20500 4D02  
                                                   u21150 4136  
                                                   u21070 40CA  
                                                   u20510 4D12  
                                                   u20511 4D10  
                                                   u14040 8A5C  
                                                   u21240 41A8  
                                                   u20600 4D50  
                                                   u23000 8764  
                                                   _T2CON 000FBD  
                                                   u21250 41B0  
                                                   u20530 4D26  
                                                   u15100 5BCE  
                                                   u15020 6E46  
                                                   u20700 4E08  
                                                   u20620 4D5A  
                                                   u15110 5BE6  
                                                   u23030 87B6  
                                                   u20720 4E14  
                                                   u20640 4D7C  
                                                   u20560 4D3A  
                                                   u24000 5120  
                                                   u21290 420C  
                                                   u20490 4CF4  
                                                   u15140 5C2A  
                                                   u20740 4E1E  
                                                   u20580 4D46  
                                                   u22510 96CC  
                                                   u15150 5C3C  
                                                   u23310 6BB8  
                                                   u24110 51E8  
                                                   u24030 5164  
                                                   u24111 51E6  
                                                   u20920 3FCC  
                                                   u20760 4E28  
                                                   u23240 6748  
                                                   u20850 3F4A  
                                                   u23250 6B14  
                                                   u24050 5174  
                                                   u20940 3FE8  
                                                   u20860 3F58  
                                                   u20780 4E4C  
                                                   u24060 5184  
                                                   _T2HLT 000FBE  
                                                   u22710 73DA  
                                                   u20870 3F68  
                                                   u24310 8318  
                                                   u23350 8C22  
                                                   u24070 518C  
                                                   u24160 5222  
                                                   u22538 7C2E  
                                                   u22730 7416  
                                                   u15610 8142  
                                                   u24330 833A  
                                                   u24250 52A8  
                                                   u24170 5232  
                                                   u22539 7C40  
                                                   u22628 8A22  
                                                   u22740 7424  
                                                   u23460 8F10  
                                                   u24180 523A  
                                                   u22629 8A34  
                                                   u24350 8472  
                                                   u24270 52D0  
                                                   u22568 80E8  
                                                   u22760 7442  
                                                   u15720 7ACA  
                                                   u25160 59D0  
                                                   u23560 56D2  
                                                   u24520 2912  
                                                   u22569 80FA  
                                                   u22578 86E4  
                                                   u22770 7456  
                                                   u15650 8178  
                                                   u26130 549A  
                                                   u13970 900E  
                                                   u24530 3814  
                                                   u22579 86F6  
                                                   u22588 8BE8  
                                                   u22780 7464  
                                                   u27100 1D6E  
                                                   u24540 381A  
                                                   u22589 8BFA  
                                                   u15670 8EC8  
                                                   u25270 5634  
                                                   u23590 5730  
                                                   u27030 1D04  
                                                   u15680 8EDE  
                                                   u23920 7D0C  
                                                   u26320 4682  
                                                   u26240 4576  
                                                   u25520 4AC2  
                                                   u27120 1D9C  
                                                   u27040 1D0A  
                                                   u24800 3B1E  
                                                   u24640 3960  
                                                   u26090 546A  
                                                   u27130 1DB8  
                                                   u27050 1D2E  
                                                   u24730 3A42  
                                                   u27131 1DB6  
                                                   u27051 1D2C  
                                                   u28100 64C6  
                                                   u28020 6420  
                                                   u25380 76FE  
                                                   u26420 4732  
                                                   u26340 468E  
                                                   u25620 4B96  
                                                   u25540 4B24  
                                                   u27140 1DC6  
                                                   u18501 3268  
                                                   u18421 2EF6  
                                                   u22965 716C  
                                                   u28110 64D4  
                                                   u26350 46A6  
                                                   u26270 463C  
                                                   u26190 54E4  
                                                   u25470 4A84  
                                                   u27230 1EEA  
                                                   u24590 38A6  
                                                   u18511 3298  
                                                   u18431 30DA  
                                                   u26191 54E2  
                                                   u28040 6438  
                                                   u25560 4B38  
                                                   u27080 1D62  
                                                   u24760 3A7C  
                                                   u29000 2BDA  
                                                   u18521 32C6  
                                                   u18441 3108  
                                                   u22985 71DC  
                                                   u28130 64EE  
                                                   u19410 8562  
                                                   u26450 4752  
                                                   u26290 4650  
                                         __end_of___lwdiv 8A8C  
                                                   u18451 3156  
                                                   u23955 88D2  
                                                   u18540 9686  
                                                   u26380 46EC  
                                                   u25900 538A  
                                                   u25660 4BF0  
                                                   u27260 1F04  
                                                   u27180 1E06  
                                                   u26540 18B2  
                                                   u27420 105A  
                                                   u18461 3184  
                                                   u28070 6472  
                                                   u24950 58B2  
                                                   u28310 5FE6  
                                                   u25750 4C66  
                                                   u25590 4B72  
                                                   u27270 1F20  
                                                   u27190 1E0C  
                                                   u24870 75FE  
                                                   u29110 2C64  
                                                   u18471 31B4  
                                                   u27271 1F1E  
                                                   u28320 5FFA  
                                                   u27280 1F2E  
                                                   u26800 1B0C  
                                                   u27600 1336  
                                                   u29040 2C26  
                                                   u18481 31E2  
                                                   u28170 8842  
                                                   u26810 1B14  
                                                   u26570 18E4  
                                                   u27610 133C  
                                                   u18491 323A  
                                                   u28411 1FB8  
                                                   u28180 8874  
                                                   u19620 69F4  
                                                   u25940 53AE  
                                                   u26820 1B2E  
                                                   u27700 1430  
                                                   u27620 1352  
                                                   u29220 2D26  
                                                   u26821 1B2C  
                                                   u27621 1350  
                                                   u29221 2D24  
                                                   u19710 6A34  
                                                   u26910 1C02  
                                                   u27710 1436  
                                                   u28431 1FD8  
                                                   u26911 1C00  
                                                   u19640 6A00  
                                                   u28280 5FB2  
                                                   u26920 1C10  
                                                   u26760 1A8E  
                                                   u27560 128A  
                                                   u28521 2164  
                                                   u28370 604A  
                                                   u28290 5FC0  
                                                   u25970 53CE  
                                                   u26850 1B64  
                                                   u27570 12E6  
                                                   u29090 2C54  
                                                   u27555 1274  
                                                   u19820 6A9C  
                                                   u26940 1C4A  
                                                   u27820 15E0  
                                                   u27580 12EC  
                                                   _T2TMR 000FBB  
                                                   u28461 203A  
                                                   u27565 1286  
                                                   u19910 6AEA  
                                                   u26950 1C64  
                                                   u26870 1B88  
                                                   u29510 3BF2  
                                                   u27830 15E6  
                                                   u27750 14A4  
                                                   u29430 2E3E  
                                                   u29350 2DD2  
                                                   u29270 2D6C  
                                                   u28631 2302  
                                                   u28551 21CE  
                                                   u26951 1C62  
                                                   u19920 6AF2  
                                                   u26880 1B90  
                                                   u27840 161A  
                                                   u28800 2A46  
                                                   u18945 94B2  
                                                   u27841 1618  
                                                   u27745 148E  
                                                   u19930 6AFA  
                                                   u19850 6AB4  
                                                   u19690 6A28  
                                                   u18946 94B4  
                                                   u28650 233A  
                                                   u26970 1CA8  
                                                   u26890 1BAA  
                                                   u29530 3C2C  
                                                   _T2RST 000FC0  
                                                   u28731 240E  
                                                   u26971 1CA6  
                                                   u26891 1BA8  
                                                   u27755 14A0  
                                                   u19780 6A6C  
                                                   u19940 8A96  
                                                   u26980 1CB6  
                                                   u27860 1630  
                                                   u29460 2E56  
                                                   u27950 16E6  
                                                   u27870 1644  
                                                   u27790 1536  
                                                   u29390 2DF0  
                                                   u28591 2224  
                                                   u19951 8AA4  
                                                   u27951 16E4  
                                                   u29560 3C64  
                                                   u27785 1520  
                                                   i2l106 8FF8  
                                                   u29730 3E22  
                                                   u27890 165E  
                                                   u28770 29E2  
                                                   u27875 1640  
                                                   u27795 1532  
                                                   u29580 3C86  
                                                   u29817 827A  
                                                   u29690 3DE4  
                                                   u29827 82EE  
                                                   u29771 6312  
                                                   u28980 2BA2  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9314  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8F66  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 877A  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8FCC  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 93AC  
                                        __end_of_TMR1_ISR 8EB8  
                                        __end_of_TMR2_ISR 665A  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018D  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 8EB8  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0197  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 8DB8  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 711C  
                                         __end_of_sm_init 893A  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 2ECC  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9812  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9810  
                                         _TMR1_WriteTimer 94D2  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 6C12  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7538  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 8028  
                                            __end_of_main 6398  
                                              _ReadSerial 83D8  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 7B78  
                                          _refreshCurrent 8CA8  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 910C  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 7D1A  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 96E6  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 5BC0  
                              _validateRemoteSerialNumber 5A24  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 811E  
                                      __end_of_I2C1_DO_TX 7C90  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 8B7A  
                  __end_of_SetSegmentValueIntermitentMain 9654  
                          _SetSegmentValueIntermitentMain 9640  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 945C  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 5EF4  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7472  
                                                  i2l2024 5E7A  
                                                  i2l1147 94E4  
                                                  i2l2140 7D9E  
                                                  i2l2133 7D68  
                                                  i2l2222 50AA  
                                                  i2l2240 750C  
                                                  i2l2128 7D4A  
                                                  i2l1266 6564  
                                                  i2l2323 8200  
                                                  i2l1620 4978  
                                                  i2l1277 65EE  
                                                  i2l2191 4EE6  
                                                  i2l2328 820A  
                                                  i2l2195 4FCC  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 820E  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 6F26  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 7A5C  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8F9A  
                                 __end_ofi2_GetMotorPower 7538  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00E7  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 7C90  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 86C0  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 92C2  
                    __end_of_TMR1_DefaultInterruptHandler 980E  
                            _TMR1_DefaultInterruptHandler 980C  
                                  __end_of_refreshCurrent 8CEE  
                                           ?_read_package 0011  
                                                  ___lmul 893A  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9360  
                                  __end_of_refreshSegment 7DA0  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 4226  
                             __end_of_keeloqDecryptPacket 56BC  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 8D32  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 75AE  
                                                  clear_1 75BA  
                                                  clear_2 75C6  
                                                  clear_3 75D2  
                                                  clear_4 75DE  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 8ADC  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 96B6  
                                          _PMD_Initialize 94B6  
                                              _StateTRIAC 0191  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8832  
                                    __end_of_ControlMotor 4EBC  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 47A8  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9588  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 94EE  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9764  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9508  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0011  
                                       _SYSTEM_Initialize 902E  
                              __end_of_actionZone_Opening 4C72  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 75E4  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 24B8  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 92EC  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 947E  
                                 _rdBlkRegCompleteHandler 8E38  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 95B8  
                                            __pidataBANK0 9806  
                                            __pidataBANK1 97D4  
                                            __pidataBANK2 9808  
                                            __pidataBANK3 93AC  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart 97FA  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 94D2  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 8CA8  
                                          ??_eusartparser 00E1  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 6B02  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9508  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 7932  
                                   __end_of_I2C1_DO_RESET 9740  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 95A0  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0013  
                               __end_of_SYSTEM_Initialize 905C  
                                     __end_of_ShowVersion 865E  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 29C4  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9764  
                       _EUSART1_TxDefaultInterruptHandler 02EF  
                                            _GetOpenOrder 56BC  
                                    __end_of_InitSoftStop 8C60  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 9214  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 7022  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 91E8  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 877A  
                                   _rd1RegCompleteHandler 9214  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 977C  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 9240  
                         __end_of_EUSART1_SetErrorHandler 9736  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9704  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 665A  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8B2C  
                                         _I2C1_MasterOpen 95D0  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 97F2  
                                         _I2C1_Initialize 9654  
                                     __end_of_I2C1_Poller 969A  
                                __end_of_setFlashLigth_ON 8EF4  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 949A  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 6214  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BF  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 972C  
                          _EUSART1_SetFramingErrorHandler 9722  
                                    _refreshADCZeroOffset 6E28  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 811E  
                                                 i2l14221 7486  
                                                 i2l14231 74CE  
                                                 i2l14241 74FC  
                                                 i2l14251 752E  
                                                 i2l14229 74C2  
                                                 i2l14271 81DA  
                                                 i2l14521 49A6  
                                                 i2l14433 47E0  
                                                 i2l14425 47BA  
                                                 i2l14531 49CE  
                                                 i2l14515 4990  
                                                 i2l14435 47E8  
                                                 i2l14525 49B6  
                                                 i2l14509 4982  
                                                 i2l14461 486E  
                                                 i2l14445 481C  
                                                 i2l14429 47CA  
                                                 i2l14277 81F6  
                                                 i2l14605 4FDE  
                                                 i2l12871 947A  
                                                 i2l14455 4848  
                                                 i2l14535 49E6  
                                                 i2l14473 48B6  
                                                 i2l14641 508E  
                                                 i2l14553 4EDC  
                                                 i2l14475 48C6  
                                                 i2l14477 48D6  
                                                 i2l14653 50CA  
                                                 i2l14629 5050  
                                                 i2l14479 48DC  
                                                 i2l14575 4F3C  
                                                 i2l14567 4F18  
                                                 i2l14497 4938  
                                                 i2l14489 4910  
                                                 i2l14585 4F66  
                                                 i2l14569 4F22  
                                                 i2l14665 89A0  
                                                 i2l14597 4FA0  
                                                 i2l14689 7D6C  
                                                 i2l14699 7D9A  
                                                 i2l16643 6586  
                                                 i2l16627 653C  
                                                 i2l16619 6528  
                                                 i2l16557 8FF2  
                                                 i2l16653 65B0  
                                                 i2l16663 65D2  
                                                 i2l16577 792C  
                                                 i2l16691 663A  
                                                 i2l16685 6622  
                                                 i2l16677 6606  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 96C4  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 7E24  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 969A  
                                              _auxCounter 00FB  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 97B0  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 85F8  
                                            _classic_data 0294  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 72E0  
                                  eusartparser@relcounter 00EA  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0199  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 91BC  
          _rd1RegCompleteHandler@i2c1_master_example$F500 9190  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 9190  
          _rd2RegCompleteHandler@i2c1_master_example$F511 9164  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9298  
          _wr2RegCompleteHandler@i2c1_master_example$F523 926C  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 9164  
                               __end_of_I2C1_DO_SEND_STOP 9784  
          _wr1RegCompleteHandler@i2c1_master_example$F517 9138  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 8E38  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 8DF8  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 8990  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 9088  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 37F8  
                              __end_of_clearLearningValue 80A4  
                                                 _NextHop 0290  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 37F8  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 96DC  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8B2C  
                                                 ___awdiv 7DA0  
                                                 ___lbdiv 8EF4  
                                                 ___lbmod 9298  
                                                 ___lldiv 7EA8  
                                              _readInputs 6D20  
                                         _controlVelocity 50DE  
                                                 ___lwdiv 8A3A  
                                           _OpenFullOrder 933A  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 69DE  
                           _setPositionInvertionInClosing 68B6  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 967A  
                                          getHopCode@data 0016  
                                                 _difTime 0190  
                                                 __pcinit 7538  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 97AA  
                                    __end_of_init_package 90E0  
                                                 __ptext0 6214  
                                                 __ptext1 29C4  
                                                 __ptext2 0F22  
                                                 __ptext3 24B8  
                                                 __ptext4 4226  
                                                 __ptext5 94EE  
                                                 __ptext6 37F8  
                                                 __ptext7 97A4  
                                                 __ptext8 8B2C  
                                                 __ptext9 75EE  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A4  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 97F6  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 96D0  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 72E0  
                           _setPositionInvertionInOpening 7204  
                                                 _lastKey 0195  
                                              _readbutton 8524  
                                   _OSCILLATOR_Initialize 9600  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 85F8  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9522  
                               __end_of_I2C1_MasterSetIrq 97B6  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 871E  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7AEC  
                                      _EUSART1_Initialize 7FAA  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 7022  
                                                 _sm_init 88E4  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 8ADC  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8448  
                                    _zeroCrossingWaitTime 02F1  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 979C  
                                    end_of_initialization 75E4  
                              __end_of_I2C1_MasterSendAck 97BC  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 97C2  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 97EA  
                             _EUSART1_OverrunErrorHandler 02E9  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8284  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 96A8  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 865E  
                            __end_of_sm_get_current_state 967A  
                                               i2u1410_40 74EA  
                                               i2u1412_40 7508  
                                               i2u1500_40 5EE2  
                                               i2u1413_40 751C  
                                               i2u1421_40 81F0  
                                               i2u1414_40 752A  
                                               i2u1407_40 74A0  
                                               i2u1336_40 92DC  
                                               i2u1433_40 485C  
                                               i2u1409_40 74DC  
                                               i2u1417_40 81BA  
                                               i2u1435_40 4886  
                                               i2u1451_40 4ED6  
                                               i2u2234_48 003E  
                                               i2u1436_40 4896  
                                               i2u1428_40 47E0  
                                               i2u1437_40 48A6  
                                               i2u1446_40 49A4  
                                               i2u1470_40 5004  
                                               i2u2237_48 0056  
                                               i2u1471_40 5012  
                                               i2u1463_40 4F94  
                            __end_of_I2C1_DO_SEND_RESTART 978C  
                                               i2u1480_40 5076  
                                               i2u1464_40 4F9A  
                                               i2u1474_40 5030  
                                               i2u1458_40 4F36  
                                               i2u1483_40 509A  
                                    __end_of_eusartparser 24B8  
                                               i2u1491_45 89B8  
                                               i2u1484_40 50A2  
                                               i2u1476_40 5046  
                                         _WWDT_TimerClear 949A  
                                               i2u1493_40 7D2A  
                                 __end_of_I2C1_MasterOpen 95E8  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1486_40 50C2  
                                               i2u1495_40 7D7C  
                                   __end_of_ControlLights 4226  
                                               i2u1499_40 5E6E  
                                 __end_of_I2C1_MasterStop 97F6  
                                               i2u1861_48 78EE  
                                               i2u1861_49 7900  
                                               i2u1863_48 7918  
                                 __end_of_I2C1_Initialize 9668  
                                               i2u1881_40 659C  
                                               i2u1865_48 939A  
                                         ___lldiv@divisor 0014  
                                               i2u1859_48 78C2  
                                               i2u1859_49 78D4  
                                               i2u1869_48 8EA6  
                                               i2u1893_48 6648  
                                               i2u1878_40 6578  
                                   __end_of_ControlInputs 6B02  
                   __end_of_EUSART1_SetRxInterruptHandler 9718  
                           _EUSART1_SetRxInterruptHandler 970E  
                                             _I2C1_Poller 968A  
                                               i2u2983_47 9620  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 97DA  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9802  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 4C72  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 97BC  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 95D0  
                             _I2C1_SetAddressNackCallback 95B8  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 711C  
                                              _sm_restart 8CEE  
                        __end_of_ADCC_GetSingleConversion 962C  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02DB  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9794  
                              _I2C1_DO_SEND_RESTART_WRITE 978C  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 96FA  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 8E78  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 6F26  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 96DC  
                                     _ControlCounterMoves 8832  
                            _controlLearning_stateMachine 02B4  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7280 00E9  
                                      eusartparser@i_7281 00EB  
                                      eusartparser@i_7282 00EC  
                                      eusartparser@i_7283 00ED  
                                      eusartparser@i_7284 00EE  
                                      eusartparser@i_7285 00EF  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 92EC  
                                 __end_of_WWDT_Initialize 96E6  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 028C  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 8C60  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018B  
                       __end_of_GetSecurityStateInClosing 77F2  
                                      eusartparser@serial 00F0  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8FCC  
                                       _controlLearnDigit 8FFE  
                                 __end_of_controlVelocity 52FC  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F9  
                                      _actionZone_Closing 451C  
                                    __end_of_RemoveSerial 7FAA  
                                          __end_of_HopCHK 7D1A  
                                      __end_of_CloseOrder 933A  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 94EE  
                               _ControlDecelarationFactor 9570  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0292  
                       __end_of_GetSecurityStateInOpening 7898  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 97E2  
                                      _actionZone_Opening 4A1E  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 980C  
                            _TMR2_DefaultInterruptHandler 980A  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 8990  
                                   __end_of_LoadManufCode 9418  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9386  
                                          _I2C1_DO_RX_ACK 9774  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8590  
                                            _InitSoftStop 8C16  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 8196  
                                          __end_of_memcpy 8D76  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8368  
                            __end_of_getCurrentComparator 5D5A  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 6D20  
                                           _saveNewSerial 8368  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 97F2  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 97A4  
                                       _read_eusartparser 2ECC  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7538  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 4A1E  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 82F8  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9314  
                                 __end_of_WWDT_TimerClear 94B6  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 8DF8  
                                 __end_of_WWDT_SoftEnable 97DE  
                                      __end_of_ReadSerial 8448  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8F9A  
                                               _ReqResync 9588  
                               __end_of_controlLearnDigit 902E  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3BB8  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 75EE  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 977C  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0194  
                                          _VerifyFollowMe 93D2  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 945C  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FB  
                                             __pdataBANK1 01FA  
                                             __pdataBANK2 02F1  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 4EBC  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 33D4  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9616  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 87D6  
                                               _StopOrder 947E  
                                    _sm_get_current_state 9668  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9784  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02ED  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 608A  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9754  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 974A  
                                           _GetMotorPower 73AC  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 76A2  
                                            _init_package 90B4  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E5  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FF  
                                               __pnvBANK2 02DF  
                                   _rd2RegCompleteHandler 91E8  
                                        _InitWalkAutoTime 962C  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 953C  
                             __end_of_SetSegmentValueMain 9522  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 7932  
                                  __end_of_VerifyFollowMe 93F6  
                                   _wr2RegCompleteHandler 91BC  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 8A8C  
                                          _I2C1_MasterFsm 89E6  
                              __end_of_checkNVM_VarSystem 5A24  
                        __end_of_TMR1_SetInterruptHandler 96FA  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 7932  
                                               __ptext101 9600  
                                                ?___lbdiv 0010  
                                               __ptext110 8ADC  
                                               __ptext102 97DE  
                                               __ptext111 967A  
                                               __ptext103 9654  
                                               __ptext200 980C  
                                               __ptext120 8CA8  
                                               __ptext112 4C72  
                                               __ptext104 7FAA  
                                               __ptext201 9386  
                                               __ptext121 7022  
                                               __ptext113 811E  
                                               __ptext105 9704  
                                               __ptext210 0000  
                                               __ptext202 47A8  
                                               __ptext130 8F2E  
                                               __ptext122 7B78  
                                               __ptext114 3F02  
                                               __ptext106 970E  
                                               __ptext203 980E  
                                               __ptext131 8284  
                                               __ptext123 92EC  
                                               __ptext115 7A5C  
                                               __ptext107 9718  
                                               __ptext204 8FCC  
                                               __ptext140 89E6  
                                               __ptext132 8D32  
                                               __ptext124 6E28  
                                               __ptext116 969A  
                                               __ptext108 9722  
                                               __ptext205 7898  
                                               __ptext141 8BC8  
                                               __ptext133 95B8  
                                               __ptext125 8A3A  
                                               __ptext117 8EB8  
                                               __ptext109 972C  
                                               __ptext206 97C8  
                                               __ptext150 9740  
                                               __ptext142 9736  
                                               __ptext134 7E24  
                                               __ptext126 5BC0  
                                               __ptext118 69DE  
                                               __ptext207 9810  
                                               __ptext151 80A4  
                                               __ptext143 9764  
                                               __ptext135 95D0  
                                               __ptext127 9360  
                                               __ptext119 6398  
                                               __ptext208 97CE  
                                               __ptext160 97B6  
                                               __ptext152 7C04  
                                               __ptext144 976C  
                                               __ptext136 9754  
                                               __ptext128 73AC  
                                               __ptext209 945C  
                                               __ptext161 97E2  
                                               __ptext153 96A8  
                                               __ptext145 9774  
                                               __ptext137 910C  
                                               __ptext129 8832  
                                               __ptext170 8E38  
                                               __ptext162 97BC  
                                               __ptext154 96B6  
                                               __ptext146 977C  
                                               __ptext138 968A  
                                               __ptext171 91BC  
                                               __ptext163 97E6  
                                               __ptext155 974A  
                                               __ptext147 9784  
                                               __ptext139 975C  
                                               __ptext180 97F6  
                                               __ptext172 91E8  
                                               __ptext164 97EA  
                                               __ptext156 86C0  
                                               __ptext148 978C  
                                               __ptext181 97FA  
                                               __ptext173 9214  
                                               __ptext165 97EE  
                                               __ptext157 97B0  
                                               __ptext149 9794  
                                               __ptext190 5D5A  
                                               __ptext182 943A  
                                               __ptext174 9240  
                                               __ptext166 8DF8  
                                               __ptext158 96C4  
                                               __ptext191 92C2  
                                               __ptext183 97FE  
                                               __ptext175 926C  
                                               __ptext167 9138  
                                               __ptext159 979C  
                                               __ptext192 980A  
                                               __ptext184 9802  
                                               __ptext176 95E8  
                                               __ptext168 9164  
                                               __ptext193 8990  
                                               __ptext185 97C2  
                                               __ptext177 84B6  
                                               __ptext169 9190  
                                               __ptext194 9616  
                                               __ptext178 9556  
                                               __ptext195 8E78  
                                               __ptext187 650C  
                                               __ptext179 97F2  
                                               __ptext196 4EBC  
                                               __ptext188 7D1A  
                                               __ptext197 8196  
                                               __ptext189 96D0  
                                               __ptext198 7472  
                                               __ptext199 94D2  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 50DE  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0012  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0011  
                                 _I2C1_MasterWaitForEvent 975C  
                                        _I2C1_MasterClose 9802  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9556  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 97FA  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9754  
                                      _clearLearningValue 8028  
                                      _write_eusartparser 33D4  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0196  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 97CE  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 97C8  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 820E  
                                            _eusartparser 1F94  
                                    _EUSART1_ErrorHandler 02E7  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 972C  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 97EE  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 608A  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 7A5C  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 97DE  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 84B6  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 80A4  
                                              _I2C1_DO_TX 7C04  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 5BC0  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 7AEC  
                                              _I2C1_Close 943A  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 8A3A  
                            __end_of_I2C1_MasterGetRxData 97E6  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 96D0  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 97B6  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 7C04  
                               _I2C1_DO_SEND_RESTART_READ 9794  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 451C  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9386  
                                                _TMR1_ISR 8E78  
                                                _TMR2_ISR 650C  
                                           _getKeyPressed 95A0  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9570  
                                               _temppower 018F  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9600  
                            _I2C1_SetDataCompleteCallback 95E8  
                                      _I2C1_MasterStartRx 97E6  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 97AA  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8284  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8F66  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019B  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 8C16  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 76A2  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 953C  
                                            _RemoveSerial 7F2A  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 96B6  
                                       _actionZone_Opened 52FC  
                                           _I2C1_DO_RESET 9736  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02CA  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 754C  
                                               copy_data1 7584  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018E  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6788  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 82F8  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 9138  
                                            _NormalKeyGen 6C12  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 970E  
                           _EUSART1_SetTxInterruptHandler 9704  
                                           _sm_send_event 871E  
                                     _keeloqDecryptPacket 54EA  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01EE  
                                   _I2C1_MasterDisableIrq 97FE  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3BB8  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 5D5A  
                                _TMR1_SetInterruptHandler 96F0  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 774C  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 774C  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02E1  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 97D4  
                             _EUSART1_DefaultErrorHandler 97CE  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 968A  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 54EA  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 77F2  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 9298  
                                                __ptext11 7DA0  
                                                __ptext20 88E4  
                                                __ptext12 9508  
                                                __ptext21 8CEE  
                                                __ptext13 97AA  
                                                __ptext30 52FC  
                                                __ptext22 8028  
                                                __ptext14 8FFE  
                                                __ptext31 93D2  
                                                __ptext23 865E  
                                                __ptext15 6F26  
                                                __ptext40 82F8  
                                                __ptext32 9314  
                                                __ptext24 4A1E  
                                                __ptext16 7EA8  
                                                __ptext41 933A  
                                                __ptext33 451C  
                                                __ptext25 7204  
                                                __ptext17 3BB8  
                                                __ptext50 56BC  
                                                __ptext42 9522  
                                                __ptext34 68B6  
                                                __ptext26 50DE  
                                                __ptext18 1886  
                                                __ptext51 8EF4  
                                                __ptext43 8448  
                                                __ptext35 711C  
                                                __ptext27 6B02  
                                                __ptext19 8590  
                                                __ptext60 6C12  
                                                __ptext52 9640  
                                                __ptext44 871E  
                                                __ptext36 893A  
                                                __ptext28 8C16  
                                                __ptext61 93F6  
                                                __ptext53 8524  
                                                __ptext45 9668  
                                                __ptext37 947E  
                                                __ptext29 9570  
                                                __ptext70 5884  
                                                __ptext62 72E0  
                                                __ptext54 8A8C  
                                                __ptext46 877A  
                                                __ptext38 774C  
                                                __ptext71 608A  
                                                __ptext63 7C90  
                                                __ptext55 8C60  
                                                __ptext47 962C  
                                                __ptext39 76A2  
                                                __ptext80 8DB8  
                                                __ptext72 87D6  
                                                __ptext64 665A  
                                                __ptext56 5EF4  
                                                __ptext48 77F2  
                                                __ptext81 8B7A  
                                                __ptext73 95A0  
                                                __ptext65 9588  
                                                __ptext57 54EA  
                                                __ptext49 905C  
                                                __ptext90 953C  
                                                __ptext82 90B4  
                                                __ptext74 1F94  
                                                __ptext66 8F9A  
                                                __ptext58 8F66  
                                                __ptext91 902E  
                                                __ptext83 79CA  
                                                __ptext75 33D4  
                                                __ptext67 7AEC  
                                                __ptext59 888C  
                                                __ptext92 96DC  
                                                __ptext84 7F2A  
                                                __ptext76 5A24  
                                                __ptext68 6D20  
                                                __ptext93 90E0  
                                                __ptext85 83D8  
                                                __ptext77 8368  
                                                __ptext69 6788  
                                                __ptext94 96E6  
                                                __ptext86 820E  
                                                __ptext78 2ECC  
                                                __ptext95 8D76  
                                                __ptext87 949A  
                                                __ptext79 9088  
                                                __ptext96 96F0  
                                                __ptext88 97DA  
                                                __ptext97 9418  
                                                __ptext89 85F8  
                                                __ptext98 96FA  
                                                __ptext99 94B6  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E3  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
               ??_wr1RegCompleteHandler@pic18f46k40$F7750 001B  
                                                _learn_st 0060  
               ??_wr2RegCompleteHandler@pic18f46k40$F7770 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7762 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7764 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7756 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7748 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7758 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7774 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7776 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7768 0019  
                                      __end_of_readInputs 6E28  
                                _I2C1_CallbackReturnReset 97EA  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9810  
                            _TMR0_DefaultInterruptHandler 980E  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 97C8  
                            __end_of_I2C1_DO_RX_NACK_STOP 9774  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6398  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8590  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 97B0  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 9088  
                              _SetSegmentValueIntermitent 905C  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 976C  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6788  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9556  
                           __end_of_I2C1_DO_SEND_ADR_READ 96C4  
                             _EUSART1_FramingErrorHandler 02EB  
                                            _I2C1_DO_IDLE 974A  
                                     _EUSART1_Receive_ISR 7898  
                                            _I2C1_DO_RCEN 9740  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 97A4  
                             __end_of_I2C1_MasterSendNack 97C2  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7204  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0192  
                                __end_of_InitWalkAutoTime 9640  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018C  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 97E2  
                                   _I2C1_MasterSendTxData 979C  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 3F02  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 888C  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9806  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 87D6  
                                 readRFButtons@typeRemote 0198  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 8D32  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 650C  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 97FE  
                                __end_of_I2C1_MasterWrite 975C  
                                   __end_of_write_package 90B4  
                                             _tempCounter 01FA  
                  __end_of_EUSART1_SetOverrunErrorHandler 9722  
                          _EUSART1_SetOverrunErrorHandler 9718  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 97EE  
                            __end_of_EUSART1_Transmit_ISR 8FFE  
                                          _confirmpackage 8B7A  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 3F02  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 69DE  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 8BC8  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 68B6  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 88E4  
                           _keeloq_classic_decrypt_packet 888C  
                                   __end_of_OpenFullOrder 9360  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019A  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 79CA  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8524  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 910C  
                                         _TMR0_Initialize 9418  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5884  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 84B6  
                                            _sumEnergyADC 7B78  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 79CA  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 9240  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 86C0  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 8BC8  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 926C  
                                   _TMR2_InterruptHandler 02DF  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 8D76  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 29C4  
