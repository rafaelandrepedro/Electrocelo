

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jul 20 18:01:11 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=2
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1,inline
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1,inline
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1,inline
   212                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   237                           	psect	text211,global,reloc=2,class=CODE,delta=1
   238                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   239                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   240                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   241                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   242  0000                     
   243                           ; Version 2.36
   244                           ; Generated 28/01/2022 GMT
   245                           ; 
   246                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   247                           ; All rights reserved.
   248                           ; 
   249                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   250                           ; 
   251                           ; Redistribution and use in source and binary forms, with or without modification, are
   252                           ; permitted provided that the following conditions are met:
   253                           ; 
   254                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   255                           ;        conditions and the following disclaimer.
   256                           ; 
   257                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   258                           ;        of conditions and the following disclaimer in the documentation and/or other
   259                           ;        materials provided with the distribution. Publication is not required when
   260                           ;        this file is used in an embedded application.
   261                           ; 
   262                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   263                           ;        software without specific prior written permission.
   264                           ; 
   265                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   266                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   267                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   268                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   269                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   270                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   271                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   272                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   273                           ; 
   274                           ; 
   275                           ; Code-generator required, PIC18F46K40 Definitions
   276                           ; 
   277                           ; SFR Addresses
   278  0000                     
   279                           	psect	idataBANK0
   280  00A020                     __pidataBANK0:
   281                           	callstack 0
   282                           
   283                           ;initializer for _auxCounter
   284  00A020  03E8               	dw	1000
   285                           
   286                           	psect	idataBANK1
   287  00A02A                     __pidataBANK1:
   288                           	callstack 0
   289                           
   290                           ;initializer for _firstselectflag
   291  00A02A  01                 	db	1
   292                           
   293                           	psect	idataBANK2
   294  009FBE                     __pidataBANK2:
   295                           	callstack 0
   296                           
   297                           ;initializer for _tempCounter
   298  009FBE  3DDD               	dw	15837
   299  009FC0  000F               	dw	15
   300                           
   301                           ;initializer for _zeroCrossingWaitTime
   302  009FC2  19                 	db	25
   303  009FC3  19                 	db	25
   304                           
   305                           	psect	idataBANK3
   306  009BC6                     __pidataBANK3:
   307                           	callstack 0
   308                           
   309                           ;initializer for _DispTable
   310  009BC6  6F                 	db	111
   311  009BC7  21                 	db	33
   312  009BC8  76                 	db	118
   313  009BC9  73                 	db	115
   314  009BCA  39                 	db	57
   315  009BCB  5B                 	db	91
   316  009BCC  5F                 	db	95
   317  009BCD  61                 	db	97
   318  009BCE  7F                 	db	127
   319  009BCF  7B                 	db	123
   320  009BD0  7D                 	db	125
   321  009BD1  7F                 	db	127
   322  009BD2  4E                 	db	78
   323  009BD3  37                 	db	55
   324  009BD4  5E                 	db	94
   325  009BD5  5C                 	db	92
   326  009BD6  7C                 	db	124
   327  009BD7  3D                 	db	61
   328  009BD8  0E                 	db	14
   329  009BD9  2F                 	db	47
   330  009BDA  14                 	db	20
   331  009BDB  1E                 	db	30
   332  009BDC  07                 	db	7
   333  009BDD  45                 	db	69
   334  009BDE  10                 	db	16
   335  009BDF  0C                 	db	12
   336  009BE0  40                 	db	64
   337  009BE1  20                 	db	32
   338  009BE2  01                 	db	1
   339  009BE3  02                 	db	2
   340  009BE4  04                 	db	4
   341  009BE5  08                 	db	8
   342  009BE6  00                 	db	0
   343  009BE7  3B                 	db	59
   344  009BE8  1F                 	db	31
   345  009BE9  16                 	db	22
   346  009BEA  17                 	db	23
   347                           
   348                           	psect	smallconst
   349  000F00                     __psmallconst:
   350                           	callstack 0
   351  000F00  00                 	db	0
   352  000F01                     _i2c1_fsmStateTable:
   353                           	callstack 0
   354  000F01  64                 	db	low _I2C1_DO_IDLE
   355  000F02  9F                 	db	high _I2C1_DO_IDLE
   356  000F03  D0                 	db	low _I2C1_DO_SEND_ADR_READ
   357  000F04  9E                 	db	high _I2C1_DO_SEND_ADR_READ
   358  000F05  C2                 	db	low _I2C1_DO_SEND_ADR_WRITE
   359  000F06  9E                 	db	high _I2C1_DO_SEND_ADR_WRITE
   360  000F07  DA                 	db	low _I2C1_DO_TX
   361  000F08  83                 	db	high _I2C1_DO_TX
   362  000F09  7A                 	db	low _I2C1_DO_RX
   363  000F0A  88                 	db	high _I2C1_DO_RX
   364  000F0B  5A                 	db	low _I2C1_DO_RCEN
   365  000F0C  9F                 	db	high _I2C1_DO_RCEN
   366  000F0D  96                 	db	low _I2C1_DO_TX_EMPTY
   367  000F0E  8E                 	db	high _I2C1_DO_TX_EMPTY
   368  000F0F  AE                 	db	low _I2C1_DO_SEND_RESTART_READ
   369  000F10  9F                 	db	high _I2C1_DO_SEND_RESTART_READ
   370  000F11  A6                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   371  000F12  9F                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   372  000F13  9E                 	db	low _I2C1_DO_SEND_RESTART
   373  000F14  9F                 	db	high _I2C1_DO_SEND_RESTART
   374  000F15  96                 	db	low _I2C1_DO_SEND_STOP
   375  000F16  9F                 	db	high _I2C1_DO_SEND_STOP
   376  000F17  8E                 	db	low _I2C1_DO_RX_ACK
   377  000F18  9F                 	db	high _I2C1_DO_RX_ACK
   378  000F19  86                 	db	low _I2C1_DO_RX_NACK_STOP
   379  000F1A  9F                 	db	high _I2C1_DO_RX_NACK_STOP
   380  000F1B  7E                 	db	low _I2C1_DO_RX_NACK_RESTART
   381  000F1C  9F                 	db	high _I2C1_DO_RX_NACK_RESTART
   382  000F1D  50                 	db	low _I2C1_DO_RESET
   383  000F1E  9F                 	db	high _I2C1_DO_RESET
   384  000F1F  AA                 	db	low _I2C1_DO_ADDRESS_NACK
   385  000F20  93                 	db	high _I2C1_DO_ADDRESS_NACK
   386  000F21                     __end_of_i2c1_fsmStateTable:
   387                           	callstack 0
   388  0000                     _T2CON	set	4029
   389  0000                     _T1CON	set	4047
   390  0000                     _T1CLK	set	4050
   391  0000                     _T1GATE	set	4049
   392  0000                     _T0CON0	set	4053
   393  0000                     _INLVLD	set	3874
   394  0000                     _SLRCOND	set	3875
   395  0000                     _ODCOND	set	3876
   396  0000                     _WPUD	set	3877
   397  0000                     _TRISD	set	3979
   398  0000                     _TRISC	set	3978
   399  0000                     _TRISB	set	3977
   400  0000                     _TRISA	set	3976
   401  0000                     _TRISE	set	3980
   402  0000                     _LATC	set	3973
   403  0000                     _LATB	set	3972
   404  0000                     _OSCTUNE	set	3805
   405  0000                     _OSCFRQ	set	3806
   406  0000                     _ADERRL	set	3950
   407  0000                     _ADERRH	set	3951
   408  0000                     _ADPREVL	set	3937
   409  0000                     _ADPREVH	set	3938
   410  0000                     _ADFLTRL	set	3954
   411  0000                     _ADFLTRH	set	3955
   412  0000                     _ADACCL	set	3952
   413  0000                     _ADACCH	set	3953
   414  0000                     _ADCNT	set	3943
   415  0000                     _ADRESL	set	3939
   416  0000                     _ADRESH	set	3940
   417  0000                     _ADACQ	set	3932
   418  0000                     _ADCON0	set	3936
   419  0000                     _ADCLK	set	3927
   420  0000                     _ADSTAT	set	3941
   421  0000                     _ADCON3	set	3931
   422  0000                     _ADCON2	set	3930
   423  0000                     _ADPRE	set	3934
   424  0000                     _ADSTPTH	set	3945
   425  0000                     _ADUTHH	set	3949
   426  0000                     _ADUTHL	set	3948
   427  0000                     _ADLTHH	set	3947
   428  0000                     _SP1BRGH	set	3996
   429  0000                     _TX1STA	set	3998
   430  000F21  00                 	db	0	; dummy byte at the end
   431  0000                     
   432                           	psect	nvBANK1
   433  0001FD                     __pnvBANK1:
   434                           	callstack 0
   435  0001FD                     _eusart1TxBufferRemaining:
   436                           	callstack 0
   437  0001FD                     	ds	1
   438                           
   439                           	psect	nvBANK2
   440  0002DD                     __pnvBANK2:
   441                           	callstack 0
   442  0002DD                     _TMR2_InterruptHandler:
   443                           	callstack 0
   444  0002DD                     	ds	2
   445  0002DF                     _TMR1_InterruptHandler:
   446                           	callstack 0
   447  0002DF                     	ds	2
   448  0002E1                     _timer1ReloadVal:
   449                           	callstack 0
   450  0002E1                     	ds	2
   451  0002E3                     _TMR0_InterruptHandler:
   452                           	callstack 0
   453  0002E3                     	ds	2
   454  0002E5                     _EUSART1_ErrorHandler:
   455                           	callstack 0
   456  0002E5                     	ds	2
   457  0002E7                     _EUSART1_OverrunErrorHandler:
   458                           	callstack 0
   459  0002E7                     	ds	2
   460  0002E9                     _EUSART1_FramingErrorHandler:
   461                           	callstack 0
   462  0002E9                     	ds	2
   463  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   464                           	callstack 0
   465  0002EB                     	ds	2
   466  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   467                           	callstack 0
   468  0002ED                     	ds	2
   469  0000                     _WDTCON0bits	set	3794
   470  0000                     _TMR0IE	set	30229
   471  0000                     _TMR0IF	set	30293
   472  0000                     _LATEbits	set	3975
   473  0000                     _LATDbits	set	3974
   474  0000                     _LATAbits	set	3971
   475  0000                     _LATCbits	set	3973
   476  0000                     _PORTB	set	3982
   477  0000                     _T1CONbits	set	4047
   478  0000                     _SSP1CON2bits	set	3991
   479  0000                     _SSP1CON1bits	set	3990
   480  0000                     _ADCON0bits	set	3936
   481  0000                     _RC1STAbits	set	3997
   482  0000                     _GIE	set	32663
   483  0000                     _RX1PPS	set	3765
   484  0000                     _SSP1CLKPPS	set	3767
   485  0000                     _PIE0bits	set	3778
   486  0000                     _PIE3bits	set	3781
   487  0000                     _PIE4bits	set	3782
   488  0000                     _PIR0bits	set	3786
   489  0000                     _PIR3bits	set	3789
   490  0000                     _ADACT	set	3926
   491  0000                     _ADREF	set	3928
   492  0000                     _ADCON1	set	3929
   493  0000                     _ADCAP	set	3933
   494  0000                     _ADPCH	set	3935
   495  0000                     _ADRPT	set	3942
   496  0000                     _ADSTPTL	set	3944
   497  0000                     _ADLTHL	set	3946
   498  0000                     _RC1REG	set	3993
   499  0000                     _TX1REG	set	3994
   500  0000                     _SP1BRGL	set	3995
   501  0000                     _RC1STA	set	3997
   502  0000                     _BAUD1CON	set	3999
   503  0000                     _T2TMR	set	4027
   504  0000                     _T2PR	set	4028
   505  0000                     _T2HLT	set	4030
   506  0000                     _T2CLKCON	set	4031
   507  0000                     _TMR1L	set	4045
   508  0000                     _TMR1H	set	4046
   509  0000                     _T1GCON	set	4048
   510  0000                     _TMR0L	set	4051
   511  0000                     _TMR0H	set	4052
   512  0000                     _T0CON1	set	4054
   513  0000                     _PCON0bits	set	4055
   514  0000                     _INTCONbits	set	4082
   515  0000                     _LATA	set	3971
   516  0000                     _LATD	set	3974
   517  0000                     _LATE	set	3975
   518  0000                     _SSP1BUF	set	3986
   519  0000                     _SSP1ADD	set	3987
   520  0000                     _SSP1STAT	set	3989
   521  0000                     _SSP1CON2	set	3991
   522  0000                     _SSP1CON1	set	3990
   523  0000                     _WDTCON0	set	3794
   524  0000                     _OSCCON1	set	3800
   525  0000                     _PIR4bits	set	3790
   526  0000                     _OSCCON3	set	3802
   527  0000                     _OSCEN	set	3804
   528  0000                     _PMD0	set	3809
   529  0000                     _RC3PPS	set	3834
   530  0000                     _INLVLA	set	3853
   531  0000                     _SLRCONA	set	3854
   532  0000                     _ODCONA	set	3855
   533  0000                     _WPUA	set	3856
   534  0000                     _ANSELA	set	3857
   535  0000                     _ANSELB	set	3865
   536  0000                     _ANSELC	set	3873
   537  0000                     _ANSELD	set	3878
   538  0000                     _PMD5	set	3814
   539  0000                     _PMD4	set	3813
   540  0000                     _PMD3	set	3812
   541  0000                     _PMD2	set	3811
   542  0000                     _PMD1	set	3810
   543  0000                     _WDTCON1	set	3795
   544  0000                     _PORTEbits	set	3985
   545  0000                     _PORTBbits	set	3982
   546  0000                     _PORTAbits	set	3981
   547  0000                     _INLVLE	set	3882
   548  0000                     _SLRCONE	set	3883
   549  0000                     _ODCONE	set	3884
   550  0000                     _WPUE	set	3885
   551  0000                     _ANSELE	set	3886
   552  0000                     _INLVLC	set	3869
   553  0000                     _SLRCONC	set	3870
   554  0000                     _ODCONC	set	3871
   555  0000                     _WPUC	set	3872
   556  0000                     _INLVLB	set	3861
   557  0000                     _SLRCONB	set	3862
   558  0000                     _ODCONB	set	3863
   559  0000                     _WPUB	set	3864
   560  0000                     _IOCBN3	set	30875
   561  0000                     _IOCBP3	set	30883
   562  0000                     _SSP1DATPPS	set	3768
   563  0000                     _RC7PPS	set	3838
   564  0000                     _RC4PPS	set	3835
   565  0000                     _T2RST	set	4032
   566                           
   567                           ; #config settings
   568                           
   569                           	psect	cinit
   570  007DC8                     __pcinit:
   571                           	callstack 0
   572  007DC8                     start_initialization:
   573                           	callstack 0
   574  007DC8                     __initialization:
   575                           	callstack 0
   576                           
   577                           ; Initialize objects allocated to BANK3 (37 bytes)
   578                           ; load TBLPTR registers with __pidataBANK3
   579  007DC8  0EC6               	movlw	low __pidataBANK3
   580  007DCA  6EF6               	movwf	tblptrl,c
   581  007DCC  0E9B               	movlw	high __pidataBANK3
   582  007DCE  6EF7               	movwf	tblptrh,c
   583  007DD0  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   584  007DD2  6EF8               	movwf	tblptru,c
   585  007DD4  EE03  F0D2         	lfsr	0,__pdataBANK3
   586  007DD8  EE10 F025          	lfsr	1,37
   587  007DDC                     copy_data0:
   588  007DDC  0009               	tblrd		*+
   589  007DDE  CFF5 FFEE          	movff	tablat,postinc0
   590  007DE2  50E5               	movf	postdec1,w,c
   591  007DE4  50E1               	movf	fsr1l,w,c
   592  007DE6  E1FA               	bnz	copy_data0
   593                           
   594                           ; Initialize objects allocated to BANK2 (6 bytes)
   595                           ; load TBLPTR registers with __pidataBANK2
   596  007DE8  0EBE               	movlw	low __pidataBANK2
   597  007DEA  6EF6               	movwf	tblptrl,c
   598  007DEC  0E9F               	movlw	high __pidataBANK2
   599  007DEE  6EF7               	movwf	tblptrh,c
   600  007DF0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   601  007DF2  6EF8               	movwf	tblptru,c
   602  007DF4  EE02  F0F6         	lfsr	0,__pdataBANK2
   603  007DF8  EE10 F006          	lfsr	1,6
   604  007DFC                     copy_data1:
   605  007DFC  0009               	tblrd		*+
   606  007DFE  CFF5 FFEE          	movff	tablat,postinc0
   607  007E02  50E5               	movf	postdec1,w,c
   608  007E04  50E1               	movf	fsr1l,w,c
   609  007E06  E1FA               	bnz	copy_data1
   610                           
   611                           ; Initialize objects allocated to BANK1 (1 bytes)
   612                           ; load TBLPTR registers with __pidataBANK1
   613  007E08  0E2A               	movlw	low __pidataBANK1
   614  007E0A  6EF6               	movwf	tblptrl,c
   615  007E0C  0EA0               	movlw	high __pidataBANK1
   616  007E0E  6EF7               	movwf	tblptrh,c
   617  007E10  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   618  007E12  6EF8               	movwf	tblptru,c
   619  007E14  0009               	tblrd		*+	;fetch initializer
   620  007E16  CFF5 F1FE          	movff	tablat,__pdataBANK1
   621                           
   622                           ; Initialize objects allocated to BANK0 (2 bytes)
   623                           ; load TBLPTR registers with __pidataBANK0
   624  007E1A  0E20               	movlw	low __pidataBANK0
   625  007E1C  6EF6               	movwf	tblptrl,c
   626  007E1E  0EA0               	movlw	high __pidataBANK0
   627  007E20  6EF7               	movwf	tblptrh,c
   628  007E22  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   629  007E24  6EF8               	movwf	tblptru,c
   630  007E26  0009               	tblrd		*+	;fetch initializer
   631  007E28  CFF5 F0FC          	movff	tablat,__pdataBANK0
   632  007E2C  0009               	tblrd		*+	;fetch initializer
   633  007E2E  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   634                           
   635                           ; Clear objects allocated to BANK3 (210 bytes)
   636  007E32  EE03  F000         	lfsr	0,__pbssBANK3
   637  007E36  0ED2               	movlw	210
   638  007E38                     clear_0:
   639  007E38  6AEE               	clrf	postinc0,c
   640  007E3A  06E8               	decf	wreg,f,c
   641  007E3C  E1FD               	bnz	clear_0
   642                           
   643                           ; Clear objects allocated to BANK2 (221 bytes)
   644  007E3E  EE02  F000         	lfsr	0,__pbssBANK2
   645  007E42  0EDD               	movlw	221
   646  007E44                     clear_1:
   647  007E44  6AEE               	clrf	postinc0,c
   648  007E46  06E8               	decf	wreg,f,c
   649  007E48  E1FD               	bnz	clear_1
   650                           
   651                           ; Clear objects allocated to BANK1 (253 bytes)
   652  007E4A  EE01  F000         	lfsr	0,__pbssBANK1
   653  007E4E  0EFD               	movlw	253
   654  007E50                     clear_2:
   655  007E50  6AEE               	clrf	postinc0,c
   656  007E52  06E8               	decf	wreg,f,c
   657  007E54  E1FD               	bnz	clear_2
   658                           
   659                           ; Clear objects allocated to BANK0 (120 bytes)
   660  007E56  EE00  F060         	lfsr	0,__pbssBANK0
   661  007E5A  0E78               	movlw	120
   662  007E5C                     clear_3:
   663  007E5C  6AEE               	clrf	postinc0,c
   664  007E5E  06E8               	decf	wreg,f,c
   665  007E60  E1FD               	bnz	clear_3
   666                           
   667                           ; Clear objects allocated to COMRAM (21 bytes)
   668  007E62  EE00  F03B         	lfsr	0,__pbssCOMRAM
   669  007E66  0E15               	movlw	21
   670  007E68                     clear_4:
   671  007E68  6AEE               	clrf	postinc0,c
   672  007E6A  06E8               	decf	wreg,f,c
   673  007E6C  E1FD               	bnz	clear_4
   674  007E6E                     end_of_initialization:
   675                           	callstack 0
   676  007E6E                     __end_of__initialization:
   677                           	callstack 0
   678  007E6E  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   679  007E70  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   680  007E72  0100               	movlb	0
   681  007E74  EFF6  F034         	goto	_main	;jump to C main() function
   682                           
   683                           	psect	bssCOMRAM
   684  00003B                     __pbssCOMRAM:
   685                           	callstack 0
   686  00003B                     _rfCMD:
   687                           	callstack 0
   688  00003B                     	ds	11
   689  000046                     _edit_Param:
   690                           	callstack 0
   691  000046                     	ds	6
   692  00004C                     _button_struct:
   693                           	callstack 0
   694  00004C                     	ds	4
   695                           
   696                           	psect	bssBANK0
   697  000060                     __pbssBANK0:
   698                           	callstack 0
   699  000060                     _learn_st:
   700                           	callstack 0
   701  000060                     	ds	18
   702  000072                     _dispStruct:
   703                           	callstack 0
   704  000072                     	ds	6
   705  000078                     _brakeElectric_st:
   706                           	callstack 0
   707  000078                     	ds	2
   708  00007A                     _pointSync:
   709                           	callstack 0
   710  00007A                     	ds	2
   711  00007C                     _Hop:
   712                           	callstack 0
   713  00007C                     	ds	2
   714  00007E                     _RFcount:
   715                           	callstack 0
   716  00007E                     	ds	2
   717  000080                     _temp:
   718                           	callstack 0
   719  000080                     	ds	1
   720  000081                     _control_limit_switch:
   721                           	callstack 0
   722  000081                     	ds	1
   723  000082                     _fullmotorPower:
   724                           	callstack 0
   725  000082                     	ds	1
   726  000083                     _stateMotor:
   727                           	callstack 0
   728  000083                     	ds	1
   729  000084                     _zeroCrossingWaitTimeIdx:
   730                           	callstack 0
   731  000084                     	ds	1
   732  000085                     _programmer_enable:
   733                           	callstack 0
   734  000085                     	ds	1
   735  000086                     readbutton@key1:
   736                           	callstack 0
   737  000086                     	ds	1
   738  000087                     readRFButtons@keyType:
   739                           	callstack 0
   740  000087                     	ds	1
   741  000088                     readRFButtons@key1:
   742                           	callstack 0
   743  000088                     	ds	1
   744  000089                     _RFBit:
   745                           	callstack 0
   746  000089                     	ds	1
   747  00008A                     _RFFull_12BIT:
   748                           	callstack 0
   749  00008A                     	ds	1
   750  00008B                     _RFFull:
   751                           	callstack 0
   752  00008B                     	ds	1
   753  00008C                     _BitCount:
   754                           	callstack 0
   755  00008C                     	ds	1
   756  00008D                     _Bptr:
   757                           	callstack 0
   758  00008D                     	ds	1
   759  00008E                     _numberOfErrorCurrent:
   760                           	callstack 0
   761  00008E                     	ds	1
   762  00008F                     _idxAdcZeroAquisition:
   763                           	callstack 0
   764  00008F                     	ds	1
   765  000090                     _idxSaveEnergyADCHist:
   766                           	callstack 0
   767  000090                     	ds	1
   768  000091                     _idxAdcAquisition:
   769                           	callstack 0
   770  000091                     	ds	1
   771  000092                     _Counterchoose:
   772                           	callstack 0
   773  000092                     	ds	1
   774  000093                     _eusart1RxCount:
   775                           	callstack 0
   776  000093                     	ds	1
   777  000094                     _eusart1RxTail:
   778                           	callstack 0
   779  000094                     	ds	1
   780  000095                     _eusart1RxHead:
   781                           	callstack 0
   782  000095                     	ds	1
   783  000096                     _eusart1TxTail:
   784                           	callstack 0
   785  000096                     	ds	1
   786  000097                     _eusart1TxHead:
   787                           	callstack 0
   788  000097                     	ds	1
   789  000098                     _var_sys_NVM:
   790                           	callstack 0
   791  000098                     	ds	64
   792                           
   793                           	psect	dataBANK0
   794  0000FC                     __pdataBANK0:
   795                           	callstack 0
   796  0000FC                     _auxCounter:
   797                           	callstack 0
   798  0000FC                     	ds	2
   799                           
   800                           	psect	bssBANK1
   801  000100                     __pbssBANK1:
   802                           	callstack 0
   803  000100                     _var_sys:
   804                           	callstack 0
   805  000100                     	ds	81
   806  000151                     _menu_st:
   807                           	callstack 0
   808  000151                     	ds	25
   809  00016A                     _security:
   810                           	callstack 0
   811  00016A                     	ds	11
   812  000175                     _fimdecurso:
   813                           	callstack 0
   814  000175                     	ds	6
   815  00017B                     _powerControl_st:
   816                           	callstack 0
   817  00017B                     	ds	6
   818  000181                     readRFButtons@serial:
   819                           	callstack 0
   820  000181                     	ds	4
   821  000185                     eusartparser@buffer:
   822                           	callstack 0
   823  000185                     	ds	2
   824  000187                     readRFButtons@rollingCode:
   825                           	callstack 0
   826  000187                     	ds	2
   827  000189                     _BufferRF_12BIT:
   828                           	callstack 0
   829  000189                     	ds	2
   830  00018B                     _erroranterior:
   831                           	callstack 0
   832  00018B                     	ds	2
   833  00018D                     eusartparser@save_f:
   834                           	callstack 0
   835  00018D                     	ds	1
   836  00018E                     _done_changes:
   837                           	callstack 0
   838  00018E                     	ds	1
   839  00018F                     _aux_in_auto_close:
   840                           	callstack 0
   841  00018F                     	ds	1
   842  000190                     _aux_i:
   843                           	callstack 0
   844  000190                     	ds	1
   845  000191                     _Abertura_pedonal:
   846                           	callstack 0
   847  000191                     	ds	1
   848  000192                     _temppower:
   849                           	callstack 0
   850  000192                     	ds	1
   851  000193                     _difTime:
   852                           	callstack 0
   853  000193                     	ds	1
   854  000194                     _StateTRIAC:
   855                           	callstack 0
   856  000194                     	ds	1
   857  000195                     _waitZeroPeak:
   858                           	callstack 0
   859  000195                     	ds	1
   860  000196                     _zeroCrossing:
   861                           	callstack 0
   862  000196                     	ds	1
   863  000197                     _zeroCrossingLength:
   864                           	callstack 0
   865  000197                     	ds	1
   866  000198                     _lastKey:
   867                           	callstack 0
   868  000198                     	ds	1
   869  000199                     _F2Chance:
   870                           	callstack 0
   871  000199                     	ds	1
   872  00019A                     readbutton@key2:
   873                           	callstack 0
   874  00019A                     	ds	1
   875  00019B                     readRFButtons@typeRemote:
   876                           	callstack 0
   877  00019B                     	ds	1
   878  00019C                     _RFstate:
   879                           	callstack 0
   880  00019C                     	ds	1
   881  00019D                     _eusart1RxLastError:
   882                           	callstack 0
   883  00019D                     	ds	1
   884  00019E                     _ts_system:
   885                           	callstack 0
   886  00019E                     	ds	72
   887  0001E6                     _controlGate_stateMachine:
   888                           	callstack 0
   889  0001E6                     	ds	11
   890  0001F1                     _main_stateMachine:
   891                           	callstack 0
   892  0001F1                     	ds	11
   893  0001FC                     setValueToEdit@value:
   894                           	callstack 0
   895  0001FC                     	ds	1
   896                           
   897                           	psect	dataBANK1
   898  0001FE                     __pdataBANK1:
   899                           	callstack 0
   900  0001FE                     _firstselectflag:
   901                           	callstack 0
   902  0001FE                     	ds	1
   903                           
   904                           	psect	bssBANK2
   905  000200                     __pbssBANK2:
   906                           	callstack 0
   907  000200                     _ADC_array:
   908                           	callstack 0
   909  000200                     	ds	60
   910  00023C                     _I2C1_Status:
   911                           	callstack 0
   912  00023C                     	ds	36
   913  000260                     _SumEnergyADCHist_array:
   914                           	callstack 0
   915  000260                     	ds	20
   916  000274                     _eusart1RxStatusBuffer:
   917                           	callstack 0
   918  000274                     	ds	8
   919  00027C                     _eusart1RxBuffer:
   920                           	callstack 0
   921  00027C                     	ds	8
   922  000284                     _eusart1TxBuffer:
   923                           	callstack 0
   924  000284                     	ds	8
   925  00028C                     _EHop:
   926                           	callstack 0
   927  00028C                     	ds	2
   928  00028E                     _NextHop:
   929                           	callstack 0
   930  00028E                     	ds	2
   931  000290                     _timer0ReloadVal16bit:
   932                           	callstack 0
   933  000290                     	ds	2
   934  000292                     _classic_data:
   935                           	callstack 0
   936  000292                     	ds	16
   937  0002A2                     _memoryTEMP:
   938                           	callstack 0
   939  0002A2                     	ds	16
   940  0002B2                     _controlLearning_stateMachine:
   941                           	callstack 0
   942  0002B2                     	ds	11
   943  0002BD                     _menuConfiguration_stateMachine:
   944                           	callstack 0
   945  0002BD                     	ds	11
   946  0002C8                     _BufferRF:
   947                           	callstack 0
   948  0002C8                     	ds	9
   949  0002D1                     _DKEY:
   950                           	callstack 0
   951  0002D1                     	ds	8
   952  0002D9                     NormalKeyGen@SEED:
   953                           	callstack 0
   954  0002D9                     	ds	4
   955                           
   956                           	psect	dataBANK2
   957  0002F6                     __pdataBANK2:
   958                           	callstack 0
   959  0002F6                     _tempCounter:
   960                           	callstack 0
   961  0002F6                     	ds	4
   962  0002FA                     _zeroCrossingWaitTime:
   963                           	callstack 0
   964  0002FA                     	ds	2
   965                           
   966                           	psect	bssBANK3
   967  000300                     __pbssBANK3:
   968                           	callstack 0
   969  000300                     _listSyncValues:
   970                           	callstack 0
   971  000300                     	ds	150
   972  000396                     _ADC_zero_array:
   973                           	callstack 0
   974  000396                     	ds	60
   975                           
   976                           	psect	dataBANK3
   977  0003D2                     __pdataBANK3:
   978                           	callstack 0
   979  0003D2                     _DispTable:
   980                           	callstack 0
   981  0003D2                     	ds	37
   982                           
   983                           	psect	cstackBANK2
   984  0002EF                     __pcstackBANK2:
   985                           	callstack 0
   986  0002EF                     main@package:
   987                           	callstack 0
   988                           
   989                           ; 7 bytes @ 0x0
   990  0002EF                     	ds	7
   991                           
   992                           	psect	cstackBANK0
   993  0000D8                     __pcstackBANK0:
   994                           	callstack 0
   995  0000D8                     ??_keeloq_classic_decrypt_packet:
   996  0000D8                     ??_setPositionInvertionInClosing:
   997  0000D8                     ??_validateRemoteSerialNumber:
   998  0000D8                     ??_RemoveSerial:
   999  0000D8                     SaveNVM_VarSystem@page:
  1000                           	callstack 0
  1001  0000D8                     getStateOpenPosition@state:
  1002                           	callstack 0
  1003  0000D8                     saveNewSerial@tempSerial:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x0
  1007  0000D8                     	ds	1
  1008  0000D9                     getStateOpenPosition@stateMotor:
  1009                           	callstack 0
  1010  0000D9                     SaveNVM_VarSystem@tempAdd:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x1
  1014  0000D9                     	ds	1
  1015  0000DA                     ??_controlVelocity:
  1016  0000DA                     RemoveSerial@cmdType:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x2
  1020  0000DA                     	ds	1
  1021  0000DB                     SaveNVM_VarSystem@point:
  1022                           	callstack 0
  1023  0000DB                     RemoveSerial@tempSerial:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x3
  1027  0000DB                     	ds	1
  1028  0000DC                     ??_setValueToEdit:
  1029  0000DC                     saveNewSerial@position:
  1030                           	callstack 0
  1031  0000DC                     sm_execute_ControlLearning@psm:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x4
  1035  0000DC                     	ds	1
  1036  0000DD                     ??_saveNewSerial:
  1037                           
  1038                           ; 1 bytes @ 0x5
  1039  0000DD                     	ds	1
  1040  0000DE                     ??_sm_execute_ControlLearning:
  1041  0000DE                     setValueToEdit@menuType:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x6
  1045  0000DE                     	ds	1
  1046  0000DF                     setValueToEdit@posindex:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x7
  1050  0000DF                     	ds	1
  1051  0000E0                     ??_controlSelectRemote:
  1052  0000E0                     setValueToEdit@posindex_6979:
  1053                           	callstack 0
  1054  0000E0                     keeloqDecryptPacket@data:
  1055                           	callstack 0
  1056  0000E0                     DecryptPacket_12BIT@data:
  1057                           	callstack 0
  1058  0000E0                     eusartparser@package:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x8
  1062  0000E0                     	ds	1
  1063  0000E1                     setValueToEdit@haveValueToEdit:
  1064                           	callstack 0
  1065  0000E1                     controlSelectRemote@validSerial:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x9
  1069  0000E1                     	ds	1
  1070  0000E2                     ??_eusartparser:
  1071  0000E2                     controlSelectRemote@pos:
  1072                           	callstack 0
  1073  0000E2                     keeloqDecryptPacket@classic_data:
  1074                           	callstack 0
  1075  0000E2                     DecryptPacket_12BIT@classic_data:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xA
  1079  0000E2                     	ds	1
  1080  0000E3                     controlSelectRemote@typeRemote:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xB
  1084  0000E3                     	ds	1
  1085  0000E4                     ??_keeloqDecryptPacket:
  1086  0000E4                     DecryptPacket_12BIT@commandType:
  1087                           	callstack 0
  1088  0000E4                     actionZone_Opening@securityClosing:
  1089                           	callstack 0
  1090  0000E4                     controlSelectRemote@tempSerial:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0xC
  1094  0000E4                     	ds	1
  1095  0000E5                     actionZone_Opening@securityOpening:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0xD
  1099  0000E5                     	ds	1
  1100  0000E6                     actionZone_Opening@typeOpenOrder:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0xE
  1104  0000E6                     	ds	1
  1105  0000E7                     sm_execute_ControlGate@psm:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xF
  1109  0000E7                     	ds	1
  1110  0000E8                     keeloqDecryptPacket@hop_error:
  1111                           	callstack 0
  1112  0000E8                     controlSelectRemote@temp:
  1113                           	callstack 0
  1114  0000E8                     eusartparser@i:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x10
  1118  0000E8                     	ds	1
  1119  0000E9                     ??_sm_execute_ControlGate:
  1120  0000E9                     keeloqDecryptPacket@commandType:
  1121                           	callstack 0
  1122  0000E9                     eusartparser@i_7378:
  1123                           	callstack 0
  1124  0000E9                     sm_execute_menuConfiguration@psm:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x11
  1128  0000E9                     	ds	1
  1129  0000EA                     eusartparser@i_7385:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x12
  1133  0000EA                     	ds	1
  1134  0000EB                     ??_sm_execute_menuConfiguration:
  1135  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1136                           	callstack 0
  1137  0000EB                     eusartparser@i_7386:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x13
  1141  0000EB                     	ds	1
  1142  0000EC                     eusartparser@pos:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x14
  1146  0000EC                     	ds	1
  1147  0000ED                     eusartparser@i_7379:
  1148                           	callstack 0
  1149  0000ED                     sm_execute_main@psm:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x15
  1153  0000ED                     	ds	1
  1154  0000EE                     eusartparser@i_7380:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x16
  1158  0000EE                     	ds	1
  1159  0000EF                     ??_sm_execute_main:
  1160  0000EF                     eusartparser@i_7387:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x17
  1164  0000EF                     	ds	1
  1165  0000F0                     eusartparser@i_7388:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x18
  1169  0000F0                     	ds	1
  1170  0000F1                     eusartparser@i_7381:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x19
  1174  0000F1                     	ds	1
  1175  0000F2                     eusartparser@i_7382:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x1A
  1179  0000F2                     	ds	1
  1180  0000F3                     eusartparser@i_7383:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x1B
  1184  0000F3                     	ds	1
  1185  0000F4                     eusartparser@i_7389:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x1C
  1189  0000F4                     	ds	1
  1190  0000F5                     eusartparser@i_7390:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x1D
  1194  0000F5                     	ds	1
  1195  0000F6                     eusartparser@i_7391:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x1E
  1199  0000F6                     	ds	1
  1200  0000F7                     eusartparser@relcounter:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x1F
  1204  0000F7                     	ds	1
  1205  0000F8                     eusartparser@serial:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x20
  1209  0000F8                     	ds	4
  1210                           
  1211                           	psect	cstackCOMRAM
  1212  000001                     __pcstackCOMRAM:
  1213                           	callstack 0
  1214  000001                     ??_rxi:
  1215  000001                     ??i2_GetMotorPower:
  1216  000001                     ADCC_GetSingleConversion@channel:
  1217                           	callstack 0
  1218  000001                     Segments_Set@value:
  1219                           	callstack 0
  1220  000001                     i2VerifyElectricalBrake@tempState:
  1221                           	callstack 0
  1222  000001                     TMR1_WriteTimer@timerVal:
  1223                           	callstack 0
  1224  000001                     decrementTimeslot@ts:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x0
  1228  000001                     	ds	1
  1229  000002                     ??_ReadADC:
  1230  000002                     i2VerifyElectricalBrake@actualState:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x1
  1234  000002                     	ds	1
  1235  000003                     
  1236                           ; 1 bytes @ 0x2
  1237  000003                     	ds	1
  1238  000004                     i2GetMotorPower@defineatraso:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x3
  1242  000004                     	ds	1
  1243  000005                     ??_controlMotorForce:
  1244  000005                     
  1245                           ; 1 bytes @ 0x4
  1246  000005                     	ds	5
  1247  00000A                     ??_INTERRUPT_InterruptManager:
  1248                           
  1249                           ; 1 bytes @ 0x9
  1250  00000A                     	ds	6
  1251  000010                     ??_GetMotorPower:
  1252  000010                     ??_SetSegmentValueLearn:
  1253  000010                     ?_sumEnergyADC:
  1254                           	callstack 0
  1255  000010                     ?_sm_get_current_state:
  1256                           	callstack 0
  1257  000010                     ?___wmul:
  1258                           	callstack 0
  1259  000010                     ?___lwdiv:
  1260                           	callstack 0
  1261  000010                     ?_calculateMean:
  1262                           	callstack 0
  1263  000010                     ?_sumHIST:
  1264                           	callstack 0
  1265  000010                     ?___lldiv:
  1266                           	callstack 0
  1267  000010                     EUSART1_Read@readValue:
  1268                           	callstack 0
  1269  000010                     EUSART1_Write@txData:
  1270                           	callstack 0
  1271  000010                     I2C1_Open@address:
  1272                           	callstack 0
  1273  000010                     I2C1_Close@returnValue:
  1274                           	callstack 0
  1275  000010                     I2C1_MasterSendTxData@data:
  1276                           	callstack 0
  1277  000010                     WWDT_TimerClear@state:
  1278                           	callstack 0
  1279  000010                     getKeyPressed@temp:
  1280                           	callstack 0
  1281  000010                     RGB_Set@value:
  1282                           	callstack 0
  1283  000010                     SetSegmentValueIntermitent@d2:
  1284                           	callstack 0
  1285  000010                     VerifyElectricalBrake@tempState:
  1286                           	callstack 0
  1287  000010                     VerifyFollowMe@securityClose:
  1288                           	callstack 0
  1289  000010                     ___lbdiv@divisor:
  1290                           	callstack 0
  1291  000010                     ___lbmod@divisor:
  1292                           	callstack 0
  1293  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1294                           	callstack 0
  1295  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1296                           	callstack 0
  1297  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1298                           	callstack 0
  1299  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1300                           	callstack 0
  1301  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1302                           	callstack 0
  1303  000010                     I2C1_SetBuffer@buffer:
  1304                           	callstack 0
  1305  000010                     I2C1_SetCallback@cb:
  1306                           	callstack 0
  1307  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1308                           	callstack 0
  1309  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1310                           	callstack 0
  1311  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1312                           	callstack 0
  1313  000010                     saveEnergyADCHist@valueToSave:
  1314                           	callstack 0
  1315  000010                     DecCHK@data:
  1316                           	callstack 0
  1317  000010                     ReqResync@CurrentHop:
  1318                           	callstack 0
  1319  000010                     verifyProgramingMode@classic_data:
  1320                           	callstack 0
  1321  000010                     setFlashLigth_ON@Freq:
  1322                           	callstack 0
  1323  000010                     sm_restart@psm:
  1324                           	callstack 0
  1325  000010                     sm_get_current_state@psm:
  1326                           	callstack 0
  1327  000010                     init_package@package:
  1328                           	callstack 0
  1329  000010                     ___wmul@multiplier:
  1330                           	callstack 0
  1331  000010                     ___lwdiv@dividend:
  1332                           	callstack 0
  1333  000010                     memcpy@d1:
  1334                           	callstack 0
  1335  000010                     calculateMean@meanValue:
  1336                           	callstack 0
  1337  000010                     ___lldiv@dividend:
  1338                           	callstack 0
  1339  000010                     write_eusartparser@package:
  1340                           	callstack 0
  1341                           
  1342                           ; 7 bytes @ 0xF
  1343  000010                     	ds	1
  1344  000011                     ?_read_package:
  1345                           	callstack 0
  1346  000011                     I2C1_Open@returnValue:
  1347                           	callstack 0
  1348  000011                     VerifyElectricalBrake@actualState:
  1349                           	callstack 0
  1350  000011                     ___lbdiv@dividend:
  1351                           	callstack 0
  1352  000011                     ___lbmod@dividend:
  1353                           	callstack 0
  1354  000011                     SetSegmentValueIntermitent@time:
  1355                           	callstack 0
  1356  000011                     setRGB_ON@Freq:
  1357                           	callstack 0
  1358  000011                     write_package@package:
  1359                           	callstack 0
  1360                           
  1361                           ; 7 bytes @ 0x10
  1362  000011                     	ds	1
  1363  000012                     ??_TMR1_Initialize:
  1364  000012                     ??_ControlMotor:
  1365  000012                     ??_sumEnergyADC:
  1366  000012                     ??_DecCHK:
  1367  000012                     SetSegmentValueLearn@direction:
  1368                           	callstack 0
  1369  000012                     ___lbdiv@counter:
  1370                           	callstack 0
  1371  000012                     ___lbmod@counter:
  1372                           	callstack 0
  1373  000012                     I2C1_SetBuffer@bufferSize:
  1374                           	callstack 0
  1375  000012                     I2C1_SetCallback@ptr:
  1376                           	callstack 0
  1377  000012                     sm_init@psm:
  1378                           	callstack 0
  1379  000012                     sm_send_event@psm:
  1380                           	callstack 0
  1381  000012                     confirmpackage@package:
  1382                           	callstack 0
  1383  000012                     ___wmul@multiplicand:
  1384                           	callstack 0
  1385  000012                     ___lwdiv@divisor:
  1386                           	callstack 0
  1387  000012                     memcpy@s1:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x11
  1391  000012                     	ds	1
  1392  000013                     ??_setRGB_ON:
  1393  000013                     SetSegmentValueIntermitent@d1:
  1394                           	callstack 0
  1395  000013                     GetMotorPower@defineatraso:
  1396                           	callstack 0
  1397  000013                     ___lbdiv@quotient:
  1398                           	callstack 0
  1399  000013                     ___lbmod@rem:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x12
  1403  000013                     	ds	1
  1404  000014                     ??_InitSoftStop:
  1405  000014                     ??_InitSoftStart:
  1406  000014                     ??_sumHIST:
  1407  000014                     ?___awdiv:
  1408                           	callstack 0
  1409  000014                     I2C1_SetCallback@idx:
  1410                           	callstack 0
  1411  000014                     confirmpackage@confirm:
  1412                           	callstack 0
  1413  000014                     ___lwdiv@counter:
  1414                           	callstack 0
  1415  000014                     sumEnergyADC@sumE:
  1416                           	callstack 0
  1417  000014                     sm_init@initial_state:
  1418                           	callstack 0
  1419  000014                     sm_send_event@event:
  1420                           	callstack 0
  1421  000014                     ___wmul@product:
  1422                           	callstack 0
  1423  000014                     ___awdiv@dividend:
  1424                           	callstack 0
  1425  000014                     memcpy@n:
  1426                           	callstack 0
  1427  000014                     calculateMean@newValue:
  1428                           	callstack 0
  1429  000014                     ___lldiv@divisor:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x13
  1433  000014                     	ds	1
  1434  000015                     setRGB_ON@RGBLigth:
  1435                           	callstack 0
  1436  000015                     I2C1_SetDataCompleteCallback@cb:
  1437                           	callstack 0
  1438  000015                     I2C1_SetAddressNackCallback@cb:
  1439                           	callstack 0
  1440  000015                     ___lwdiv@quotient:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x14
  1444  000015                     	ds	1
  1445  000016                     ?_getHopCode:
  1446                           	callstack 0
  1447  000016                     ?_getCurrentComparator:
  1448                           	callstack 0
  1449  000016                     sm_init@hist_mode:
  1450                           	callstack 0
  1451  000016                     memcpy@tmp:
  1452                           	callstack 0
  1453  000016                     sumEnergyADC@auxValue:
  1454                           	callstack 0
  1455  000016                     getHopCode@data:
  1456                           	callstack 0
  1457  000016                     ___awdiv@divisor:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x15
  1461  000016                     	ds	1
  1462  000017                     ??_write_eusartparser:
  1463  000017                     refreshADCZeroOffset@i:
  1464                           	callstack 0
  1465  000017                     I2C1_SetDataCompleteCallback@ptr:
  1466                           	callstack 0
  1467  000017                     I2C1_SetAddressNackCallback@ptr:
  1468                           	callstack 0
  1469  000017                     memcpy@d:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x16
  1473  000017                     	ds	1
  1474  000018                     ??_getHopCode:
  1475  000018                     ??_calculateMean:
  1476  000018                     ??_OpenWalkOrder:
  1477  000018                     sumEnergyADC@i:
  1478                           	callstack 0
  1479  000018                     ControlMotor@stateMotor:
  1480                           	callstack 0
  1481  000018                     ___awdiv@counter:
  1482                           	callstack 0
  1483  000018                     refreshADCZeroOffset@media:
  1484                           	callstack 0
  1485  000018                     sumHIST@max:
  1486                           	callstack 0
  1487  000018                     read_eusartparser@package:
  1488                           	callstack 0
  1489  000018                     ___lldiv@quotient:
  1490                           	callstack 0
  1491  000018                     read_package@package:
  1492                           	callstack 0
  1493                           
  1494                           ; 7 bytes @ 0x17
  1495  000018                     	ds	1
  1496  000019                     ___awdiv@sign:
  1497                           	callstack 0
  1498  000019                     wr1RegCompleteHandler@p:
  1499                           	callstack 0
  1500  000019                     rd1RegCompleteHandler@p:
  1501                           	callstack 0
  1502  000019                     rd2RegCompleteHandler@p:
  1503                           	callstack 0
  1504  000019                     wr2RegCompleteHandler@p:
  1505                           	callstack 0
  1506  000019                     rdBlkRegCompleteHandler@p:
  1507                           	callstack 0
  1508  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1509                           	callstack 0
  1510  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1511                           	callstack 0
  1512  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1513                           	callstack 0
  1514  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1515                           	callstack 0
  1516  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1517                           	callstack 0
  1518  000019                     I2C1_CallbackReturnReset@funPtr:
  1519                           	callstack 0
  1520  000019                     memcpy@s:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x18
  1524  000019                     	ds	1
  1525  00001A                     ??_getCurrentComparator:
  1526  00001A                     ??_read_eusartparser:
  1527  00001A                     sumHIST@min:
  1528                           	callstack 0
  1529  00001A                     OpenWalkOrder@diffTime:
  1530                           	callstack 0
  1531  00001A                     ___awdiv@quotient:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x19
  1535  00001A                     	ds	1
  1536  00001B                     ??_I2C1_DO_TX:
  1537  00001B                     ??_I2C1_DO_RX:
  1538  00001B                     ??_I2C1_DO_TX_EMPTY:
  1539  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1540  00001B                     getSerialCmd@serial:
  1541                           	callstack 0
  1542  00001B                     Decrypt@packet:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x1A
  1546  00001B                     	ds	1
  1547  00001C                     getSerialCmd@temp:
  1548                           	callstack 0
  1549  00001C                     SetSegmentValueMain@d2:
  1550                           	callstack 0
  1551  00001C                     SetSegmentValue@d2:
  1552                           	callstack 0
  1553  00001C                     SetSegmentValueIntermitentMain@d2:
  1554                           	callstack 0
  1555  00001C                     updateChangesToUart@i:
  1556                           	callstack 0
  1557  00001C                     ___lldiv@counter:
  1558                           	callstack 0
  1559  00001C                     sumHIST@sumH:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x1B
  1563  00001C                     	ds	1
  1564  00001D                     ??_I2C1_MasterFsm:
  1565  00001D                     ?___lmul:
  1566                           	callstack 0
  1567  00001D                     Decrypt@key:
  1568                           	callstack 0
  1569  00001D                     SetSegmentValueMain@d1:
  1570                           	callstack 0
  1571  00001D                     SetSegmentValue@d1:
  1572                           	callstack 0
  1573  00001D                     SetSegmentValueIntermitentMain@time:
  1574                           	callstack 0
  1575  00001D                     ___lmul@multiplier:
  1576                           	callstack 0
  1577  00001D                     updateChangesToUart@package:
  1578                           	callstack 0
  1579                           
  1580                           ; 7 bytes @ 0x1C
  1581  00001D                     	ds	1
  1582  00001E                     Decrypt@i:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x1D
  1586  00001E                     	ds	1
  1587  00001F                     Decrypt@j:
  1588                           	callstack 0
  1589  00001F                     SetSegmentValueIntermitentMain@d1:
  1590                           	callstack 0
  1591  00001F                     write_eusartparser@debug:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x1E
  1595  00001F                     	ds	1
  1596  000020                     ??_load_New_Menu:
  1597  000020                     ??_controlSaveRemote:
  1598  000020                     I2C1_MasterOperation@read:
  1599                           	callstack 0
  1600  000020                     sumHIST@i:
  1601                           	callstack 0
  1602  000020                     Decrypt@p:
  1603                           	callstack 0
  1604  000020                     actionZone_Closed@securityOpening:
  1605                           	callstack 0
  1606  000020                     actionZone_Opened@securityClosing:
  1607                           	callstack 0
  1608  000020                     getCurrentComparator@tempOffset:
  1609                           	callstack 0
  1610  000020                     getHopCode@tempHop:
  1611                           	callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x1F
  1614  000020                     	ds	1
  1615  000021                     I2C1_MasterOperation@returnValue:
  1616                           	callstack 0
  1617  000021                     Decrypt@aux:
  1618                           	callstack 0
  1619  000021                     actionZone_Closed@typeOpenOrder:
  1620                           	callstack 0
  1621  000021                     actionZone_Opened@typeOpenOrder:
  1622                           	callstack 0
  1623  000021                     write_eusartparser@debug2:
  1624                           	callstack 0
  1625  000021                     ___lmul@multiplicand:
  1626                           	callstack 0
  1627                           
  1628                           ; 4 bytes @ 0x20
  1629  000021                     	ds	1
  1630  000022                     I2C1_Read1ByteRegister@reg:
  1631                           	callstack 0
  1632  000022                     getCurrentComparator@x:
  1633                           	callstack 0
  1634  000022                     getHopCode@tempPos:
  1635                           	callstack 0
  1636  000022                     load_New_Menu@Menu:
  1637                           	callstack 0
  1638  000022                     i2c_writeNBytes@reg:
  1639                           	callstack 0
  1640  000022                     i2c_readDataBlock@reg:
  1641                           	callstack 0
  1642  000022                     Decrypt@Buffer:
  1643                           	callstack 0
  1644                           
  1645                           ; 4 bytes @ 0x21
  1646  000022                     	ds	1
  1647  000023                     ??_ControlCurrent:
  1648  000023                     I2C1_Read1ByteRegister@address:
  1649                           	callstack 0
  1650  000023                     getHopCode@i:
  1651                           	callstack 0
  1652  000023                     load_New_Menu@i:
  1653                           	callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x22
  1656  000023                     	ds	1
  1657  000024                     i2c_writeNBytes@data:
  1658                           	callstack 0
  1659  000024                     I2C1_Read1ByteRegister@returnValue:
  1660                           	callstack 0
  1661  000024                     i2c_readDataBlock@data:
  1662                           	callstack 0
  1663  000024                     HopCHK@data:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x23
  1667  000024                     	ds	1
  1668  000025                     i2c_writeNBytes@len:
  1669                           	callstack 0
  1670  000025                     ___lmul@product:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x24
  1674  000025                     	ds	1
  1675  000026                     i2c_readDataBlock@len:
  1676                           	callstack 0
  1677  000026                     NormalKeyGen@serial:
  1678                           	callstack 0
  1679  000026                     HopCHK@hopDiff:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x25
  1683  000026                     	ds	1
  1684  000027                     ??_i2c_writeNBytes:
  1685                           
  1686                           ; 1 bytes @ 0x26
  1687  000027                     	ds	1
  1688  000028                     ??_i2c_readDataBlock:
  1689  000028                     NormalKeyGen@HOPtemp:
  1690                           	callstack 0
  1691  000028                     i2c_writeNBytes@dat:
  1692                           	callstack 0
  1693                           
  1694                           ; 17 bytes @ 0x27
  1695  000028                     	ds	1
  1696  000029                     ?_getTimeDecelaration:
  1697                           	callstack 0
  1698  000029                     i2c_readDataBlock@address:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x28
  1702  000029                     	ds	1
  1703  00002A                     i2c_readDataBlock@d:
  1704                           	callstack 0
  1705                           
  1706                           ; 4 bytes @ 0x29
  1707  00002A                     	ds	2
  1708  00002C                     NormalKeyGen@SKEYtemp:
  1709                           	callstack 0
  1710                           
  1711                           ; 4 bytes @ 0x2B
  1712  00002C                     	ds	1
  1713  00002D                     ??_getTimeDecelaration:
  1714                           
  1715                           ; 1 bytes @ 0x2C
  1716  00002D                     	ds	1
  1717  00002E                     ReadSerial@tempSerial:
  1718                           	callstack 0
  1719  00002E                     cmdMemoryIsEmpty@position:
  1720                           	callstack 0
  1721  00002E                     validateRemoteSerialNumber@serial:
  1722                           	callstack 0
  1723                           
  1724                           ; 4 bytes @ 0x2D
  1725  00002E                     	ds	1
  1726  00002F                     ??_cmdMemoryIsEmpty:
  1727  00002F                     ReadSerial@position:
  1728                           	callstack 0
  1729                           
  1730                           ; 1 bytes @ 0x2E
  1731  00002F                     	ds	1
  1732  000030                     ??_ReadSerial:
  1733  000030                     NormalKeyGen@Buffer:
  1734                           	callstack 0
  1735                           
  1736                           ; 8 bytes @ 0x2F
  1737  000030                     	ds	1
  1738  000031                     cmdMemoryIsEmpty@cmdType:
  1739                           	callstack 0
  1740  000031                     getTimeDecelaration@state:
  1741                           	callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x30
  1744  000031                     	ds	1
  1745  000032                     ??_setPositionInvertionInOpening:
  1746  000032                     ??_getStateOpenPosition:
  1747  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1748                           	callstack 0
  1749  000032                     ReadSerial@cmdType:
  1750                           	callstack 0
  1751  000032                     actionZone_Closing@securityClosing:
  1752                           	callstack 0
  1753  000032                     cmdMemoryIsEmpty@tempSerial:
  1754                           	callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x31
  1757  000032                     	ds	1
  1758  000033                     actionZone_Closing@typeOpenOrder:
  1759                           	callstack 0
  1760  000033                     validateRemoteSerialNumber@position:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x32
  1764  000033                     	ds	2
  1765  000035                     validateRemoteSerialNumber@mask:
  1766                           	callstack 0
  1767                           
  1768                           ; 4 bytes @ 0x34
  1769  000035                     	ds	3
  1770  000038                     keeloq_classic_decrypt_packet@data:
  1771                           	callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x37
  1774  000038                     	ds	1
  1775  000039                     i2c_writeNBytes@address:
  1776                           	callstack 0
  1777  000039                     validateRemoteSerialNumber@j:
  1778                           	callstack 0
  1779                           
  1780                           ; 1 bytes @ 0x38
  1781  000039                     	ds	1
  1782  00003A                     validateRemoteSerialNumber@i:
  1783                           	callstack 0
  1784  00003A                     saveNewSerial@cmdType:
  1785                           	callstack 0
  1786  00003A                     RemoveSerial@position:
  1787                           	callstack 0
  1788  00003A                     ResetDefaultMemory@type:
  1789                           	callstack 0
  1790  00003A                     checkNVM_VarSystem@saveParam:
  1791                           	callstack 0
  1792  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1793                           	callstack 0
  1794  00003A                     setValueToEdit@ParameterSelected:
  1795                           	callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x39
  1798  00003A                     	ds	1
  1799  00003B                     
  1800                           ; 1 bytes @ 0x3A
  1801 ;;
  1802 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1803 ;;
  1804 ;; *************** function _main *****************
  1805 ;; Defined at:
  1806 ;;		line 63 in file "main_MC50.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  package         7    0[BANK2 ] struct package_t
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 3F/1
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:        7 bytes
  1825 ;; Hardware stack levels required when called: 17
  1826 ;; This function calls:
  1827 ;;		_ControlCounterMoves
  1828 ;;		_ControlCurrent
  1829 ;;		_ControlInputs
  1830 ;;		_ControlLights
  1831 ;;		_ControlMotor
  1832 ;;		_EUSART1_is_rx_ready
  1833 ;;		_InitReceiver
  1834 ;;		_SYSTEM_Initialize
  1835 ;;		_SetSegmentValue
  1836 ;;		_ShowVersion
  1837 ;;		_WWDT_SoftEnable
  1838 ;;		_WWDT_TimerClear
  1839 ;;		_controlVelocity
  1840 ;;		_eusartparser
  1841 ;;		_getKeyPressed
  1842 ;;		_loadNVM_VarSystem
  1843 ;;		_readInputs
  1844 ;;		_readRFButtons
  1845 ;;		_read_package
  1846 ;;		_readbutton
  1847 ;;		_sm_execute_ControlGate
  1848 ;;		_sm_execute_main
  1849 ;;		_sm_init
  1850 ;; This function is called by:
  1851 ;;		Startup code after reset
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text0
  1856  0069EC                     __ptext0:
  1857                           	callstack 0
  1858  0069EC                     _main:
  1859                           	callstack 14
  1860                           
  1861                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1862                           
  1863                           ;incstack = 0
  1864  0069EC  0E18               	movlw	24
  1865  0069EE  0100               	movlb	0	; () banked
  1866  0069F0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1867                           
  1868                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1869  0069F2  0E18               	movlw	24
  1870  0069F4  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1871                           
  1872                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1873  0069F6  0E00               	movlw	0
  1874  0069F8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1875  0069FA  0E00               	movlw	0
  1876  0069FC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1877                           
  1878                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1879  0069FE  0E01               	movlw	1
  1880  006A00  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1884  006A02  EC3A  F04C         	call	_SYSTEM_Initialize	;wreg free
  1885                           
  1886                           ; BSR set to: 14
  1887                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1888  006A06  ECFA  F04F         	call	_WWDT_SoftEnable	;wreg free
  1889                           
  1890                           ; BSR set to: 14
  1891                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1892  006A0A  8EF2               	bsf	242,7,c	;volatile
  1893                           
  1894                           ; BSR set to: 14
  1895                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1896  006A0C  8CF2               	bsf	242,6,c	;volatile
  1897                           
  1898                           ; BSR set to: 14
  1899                           ;main_MC50.c: 86:     IOCBP3=1;
  1900  006A0E  010F               	movlb	15	; () banked
  1901  006A10  8714               	bsf	20,3,b	;volatile
  1902                           
  1903                           ; BSR set to: 15
  1904                           ;main_MC50.c: 87:     IOCBN3=1;
  1905  006A12  8713               	bsf	19,3,b	;volatile
  1906                           
  1907                           ; BSR set to: 15
  1908                           ;main_MC50.c: 94:     InitReceiver();
  1909  006A14  EC84  F04E         	call	_InitReceiver	;wreg free
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1913  006A18  ECB2  F037         	call	_loadNVM_VarSystem	;wreg free
  1914                           
  1915                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1916  006A1C  EC5A  F04E         	call	_WWDT_TimerClear	;wreg free
  1917                           
  1918                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1919  006A20  0E18               	movlw	24
  1920  006A22  6E1C               	movwf	SetSegmentValue@d2^0,c
  1921  006A24  0E18               	movlw	24
  1922  006A26  ECAB  F04E         	call	_SetSegmentValue
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1926  006A2A  0E02               	movlw	2
  1927  006A2C  0101               	movlb	1	; () banked
  1928  006A2E  6FA0               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1929                           
  1930                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1931  006A30  D00B               	goto	l28060
  1932  006A32                     l28050:
  1933                           
  1934                           ; BSR set to: 1
  1935                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1936  006A32  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1937  006A34  A4D8               	btfss	status,2,c
  1938  006A36  D008               	goto	l28060
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1942  006A38  EC5A  F04E         	call	_WWDT_TimerClear	;wreg free
  1943                           
  1944                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1945  006A3C  0E32               	movlw	50
  1946  006A3E  0101               	movlb	1	; () banked
  1947  006A40  6FA1               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1951  006A42  07A0               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;main_MC50.c: 109:             readInputs();
  1955  006A44  EC7E  F03A         	call	_readInputs	;wreg free
  1956  006A48                     l28060:
  1957                           
  1958                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1959  006A48  0101               	movlb	1	; () banked
  1960  006A4A  51A0               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1961  006A4C  A4D8               	btfss	status,2,c
  1962  006A4E  D7F1               	goto	l28050
  1963                           
  1964                           ; BSR set to: 1
  1965                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1966  006A50  0EBD               	movlw	low _menuConfiguration_stateMachine
  1967  006A52  6E12               	movwf	sm_init@psm^0,c
  1968  006A54  0E02               	movlw	high _menuConfiguration_stateMachine
  1969  006A56  6E13               	movwf	(sm_init@psm+1)^0,c
  1970  006A58  0E00               	movlw	0
  1971  006A5A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1972  006A5C  0E00               	movlw	0
  1973  006A5E  6E14               	movwf	sm_init@initial_state^0,c
  1974  006A60  0E00               	movlw	0
  1975  006A62  6E16               	movwf	sm_init@hist_mode^0,c
  1976  006A64  EC8A  F048         	call	_sm_init	;wreg free
  1977                           
  1978                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1979  006A68  0EF1               	movlw	low _main_stateMachine
  1980  006A6A  6E12               	movwf	sm_init@psm^0,c
  1981  006A6C  0E01               	movlw	high _main_stateMachine
  1982  006A6E  6E13               	movwf	(sm_init@psm+1)^0,c
  1983  006A70  0E00               	movlw	0
  1984  006A72  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1985  006A74  0E00               	movlw	0
  1986  006A76  6E14               	movwf	sm_init@initial_state^0,c
  1987  006A78  0E00               	movlw	0
  1988  006A7A  6E16               	movwf	sm_init@hist_mode^0,c
  1989  006A7C  EC8A  F048         	call	_sm_init	;wreg free
  1990                           
  1991                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1992  006A80  0EE6               	movlw	low _controlGate_stateMachine
  1993  006A82  6E12               	movwf	sm_init@psm^0,c
  1994  006A84  0E01               	movlw	high _controlGate_stateMachine
  1995  006A86  6E13               	movwf	(sm_init@psm+1)^0,c
  1996  006A88  0E00               	movlw	0
  1997  006A8A  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1998  006A8C  0E00               	movlw	0
  1999  006A8E  6E14               	movwf	sm_init@initial_state^0,c
  2000  006A90  0E00               	movlw	0
  2001  006A92  6E16               	movwf	sm_init@hist_mode^0,c
  2002  006A94  EC8A  F048         	call	_sm_init	;wreg free
  2003                           
  2004                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  2005  006A98  0EB2               	movlw	low _controlLearning_stateMachine
  2006  006A9A  6E12               	movwf	sm_init@psm^0,c
  2007  006A9C  0E02               	movlw	high _controlLearning_stateMachine
  2008  006A9E  6E13               	movwf	(sm_init@psm+1)^0,c
  2009  006AA0  0E00               	movlw	0
  2010  006AA2  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2011  006AA4  0E00               	movlw	0
  2012  006AA6  6E14               	movwf	sm_init@initial_state^0,c
  2013  006AA8  0E00               	movlw	0
  2014  006AAA  6E16               	movwf	sm_init@hist_mode^0,c
  2015  006AAC  EC8A  F048         	call	_sm_init	;wreg free
  2016                           
  2017                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2018  006AB0  0E00               	movlw	0
  2019  006AB2  0101               	movlb	1	; () banked
  2020  006AB4  6FA7               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2021  006AB6  0E14               	movlw	20
  2022  006AB8  6FA6               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2026  006ABA  0E01               	movlw	1
  2027  006ABC  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2028  006ABE  0EFE               	movlw	254
  2029  006AC0  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2033  006AC2  0E00               	movlw	0
  2034  006AC4  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2035  006AC6  0E64               	movlw	100
  2036  006AC8  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2040  006ACA  0E00               	movlw	0
  2041  006ACC  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2042  006ACE  0E00               	movlw	0
  2043  006AD0  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2047  006AD2  0E00               	movlw	0
  2048  006AD4  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2049  006AD6                     l28074:
  2050                           
  2051                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2052  006AD6  EC4A  F04F         	call	_EUSART1_is_rx_ready	;wreg free
  2053  006ADA  0900               	iorlw	0
  2054  006ADC  B4D8               	btfsc	status,2,c
  2055  006ADE  D010               	goto	l28080
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;main_MC50.c: 142:             package=read_package();
  2059  006AE0  EC5E  F049         	call	_read_package	;wreg free
  2060  006AE4  EE22  F0EF         	lfsr	2,main@package
  2061  006AE8  0E06               	movlw	6
  2062  006AEA                     u34251:
  2063  006AEA  CFEB FFDB          	movff	plusw0,plusw2
  2064  006AEE  06E8               	decf	wreg,f,c
  2065  006AF0  E2FC               	bc	u34251
  2066                           
  2067                           ; BSR set to: 14
  2068                           ;main_MC50.c: 143:             eusartparser(&package);
  2069  006AF2  0EEF               	movlw	low main@package
  2070  006AF4  0100               	movlb	0	; () banked
  2071  006AF6  6FE0               	movwf	eusartparser@package& (0+255),b
  2072  006AF8  0E02               	movlw	high main@package
  2073  006AFA  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2074  006AFC  EC91  F007         	call	_eusartparser	;wreg free
  2075  006B00                     l28080:
  2076                           
  2077                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2078  006B00  0101               	movlb	1	; () banked
  2079  006B02  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2080  006B04  A4D8               	btfss	status,2,c
  2081  006B06  D7E7               	goto	l28074
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2085  006B08  0E32               	movlw	50
  2086  006B0A  6FA1               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2090  006B0C  EC5A  F04E         	call	_WWDT_TimerClear	;wreg free
  2091                           
  2092                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2093  006B10  0E04               	movlw	4
  2094  006B12  0101               	movlb	1	; () banked
  2095  006B14  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2096  006B16  D003               	goto	l28090
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2100  006B18  ECE7  F046         	call	_ShowVersion	;wreg free
  2101                           
  2102                           ;main_MC50.c: 156:             }
  2103  006B1C  D7DC               	goto	l28074
  2104  006B1E                     l28090:
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2108  006B1E  EC7D  F046         	call	_readbutton	;wreg free
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;main_MC50.c: 162:                 readRFButtons();
  2112  006B22  EC66  F033         	call	_readRFButtons	;wreg free
  2113                           
  2114                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2115  006B26  ECDD  F04E         	call	_getKeyPressed	;wreg free
  2116  006B2A  0101               	movlb	1	; () banked
  2117  006B2C  6F98               	movwf	_lastKey& (0+255),b
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;main_MC50.c: 165:                 readInputs();
  2121  006B2E  EC7E  F03A         	call	_readInputs	;wreg free
  2122                           
  2123                           ;main_MC50.c: 166:                 ControlInputs();
  2124  006B32  ECDD  F038         	call	_ControlInputs	;wreg free
  2125                           
  2126                           ;main_MC50.c: 167:                 ControlCurrent();
  2127  006B36  ECBA  F035         	call	_ControlCurrent	;wreg free
  2128                           
  2129                           ;main_MC50.c: 168:                 controlVelocity();
  2130  006B3A  EC5B  F02C         	call	_controlVelocity	;wreg free
  2131                           
  2132                           ;main_MC50.c: 169:                 ControlMotor();
  2133  006B3E  EC25  F02A         	call	_ControlMotor	;wreg free
  2134                           
  2135                           ;main_MC50.c: 170:                 ControlLights();
  2136  006B42  EC6D  F023         	call	_ControlLights	;wreg free
  2137                           
  2138                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2139  006B46  EC31  F048         	call	_ControlCounterMoves	;wreg free
  2140                           
  2141                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2142  006B4A  0EF1               	movlw	low _main_stateMachine
  2143  006B4C  0100               	movlb	0	; () banked
  2144  006B4E  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2145  006B50  0E01               	movlw	high _main_stateMachine
  2146  006B52  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2147  006B54  EC4D  F01D         	call	_sm_execute_main	;wreg free
  2148                           
  2149                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2150  006B58  0EE6               	movlw	low _controlGate_stateMachine
  2151  006B5A  0100               	movlb	0	; () banked
  2152  006B5C  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2153  006B5E  0E01               	movlw	high _controlGate_stateMachine
  2154  006B60  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2155  006B62  ECC7  F021         	call	_sm_execute_ControlGate	;wreg free
  2156                           
  2157                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2158  006B66  0101               	movlb	1	; () banked
  2159  006B68  2998               	incf	_lastKey& (0+255),w,b
  2160  006B6A  B4D8               	btfsc	status,2,c
  2161  006B6C  D7B4               	goto	l28074
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2165  006B6E  EC84  F04E         	call	_InitReceiver	;wreg free
  2166                           
  2167                           ; BSR set to: 1
  2168                           
  2169                           ;main_MC50.c: 185:         }
  2170  006B72  D7B1               	goto	l28074
  2171  006B74                     __end_of_main:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _sm_execute_main *****************
  2175 ;; Defined at:
  2176 ;;		line 26 in file "sm_Main_MC50.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  psm             2   21[BANK0 ] PTR struct .
  2179 ;;		 -> main_stateMachine(11), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 3F/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;Total ram usage:        4 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 16
  2198 ;; This function calls:
  2199 ;;		_SetSegmentValueIntermitentMain
  2200 ;;		_SetSegmentValueMain
  2201 ;;		_load_New_Menu
  2202 ;;		_sm_execute_menuConfiguration
  2203 ;;		_sm_send_event
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text1
  2210  003A9A                     __ptext1:
  2211                           	callstack 0
  2212  003A9A                     _sm_execute_main:
  2213                           	callstack 14
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;incstack = 0
  2220  003A9A  D053               	goto	l25798
  2221  003A9C                     l25774:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2225  003A9C  5185               	movf	_programmer_enable& (0+255),w,b
  2226  003A9E  A4D8               	btfss	status,2,c
  2227  003AA0  D066               	goto	l25800
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2231  003AA2  EE20 F004          	lfsr	2,4
  2232  003AA6  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2233  003AA8  26D9               	addwf	fsr2l,f,c
  2234  003AAA  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2235  003AAC  22DA               	addwfc	fsr2h,f,c
  2236  003AAE  0E06               	movlw	6
  2237  003AB0  18DE               	xorwf	postinc2,w,c
  2238  003AB2  10DE               	iorwf	postinc2,w,c
  2239  003AB4  A4D8               	btfss	status,2,c
  2240  003AB6  D006               	goto	l25780
  2241  003AB8                     u32390:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2245  003AB8  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2246  003ABC  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2247  003AC0  0E01               	movlw	1
  2248  003AC2  D01D               	goto	L2
  2249  003AC4                     l25780:
  2250                           
  2251                           ; BSR set to: 0
  2252  003AC4  EE20 F004          	lfsr	2,4
  2253  003AC8  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2254  003ACA  26D9               	addwf	fsr2l,f,c
  2255  003ACC  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2256  003ACE  22DA               	addwfc	fsr2h,f,c
  2257  003AD0  0E11               	movlw	17
  2258  003AD2  18DE               	xorwf	postinc2,w,c
  2259  003AD4  10DE               	iorwf	postinc2,w,c
  2260  003AD6  A4D8               	btfss	status,2,c
  2261  003AD8  D04A               	goto	l25800
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2265  003ADA  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2266  003ADE  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2267  003AE2  0E02               	movlw	2
  2268  003AE4  D00C               	goto	L2
  2269  003AE6                     l25784:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2273  003AE6  EE20 F004          	lfsr	2,4
  2274  003AEA  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2275  003AEC  26D9               	addwf	fsr2l,f,c
  2276  003AEE  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2277  003AF0  22DA               	addwfc	fsr2h,f,c
  2278  003AF2  0E07               	movlw	7
  2279  003AF4  18DE               	xorwf	postinc2,w,c
  2280  003AF6  10DE               	iorwf	postinc2,w,c
  2281  003AF8  A4D8               	btfss	status,2,c
  2282  003AFA  D039               	goto	l25800
  2283  003AFC  D00F               	goto	u32420
  2284  003AFE                     L2:
  2285  003AFE  6EDE               	movwf	postinc2,c
  2286  003B00  0E00               	movlw	0
  2287  003B02  6EDD               	movwf	postdec2,c
  2288  003B04  D034               	goto	l25800
  2289  003B06                     l25788:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2293  003B06  EE20 F004          	lfsr	2,4
  2294  003B0A  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2295  003B0C  26D9               	addwf	fsr2l,f,c
  2296  003B0E  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2297  003B10  22DA               	addwfc	fsr2h,f,c
  2298  003B12  0E07               	movlw	7
  2299  003B14  18DE               	xorwf	postinc2,w,c
  2300  003B16  10DE               	iorwf	postinc2,w,c
  2301  003B18  A4D8               	btfss	status,2,c
  2302  003B1A  D006               	goto	l25792
  2303  003B1C                     u32420:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2307  003B1C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2308  003B20  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2309  003B24  0E00               	movlw	0
  2310  003B26  D7EB               	goto	L2
  2311  003B28                     l25792:
  2312                           
  2313                           ; BSR set to: 0
  2314  003B28  EE20 F004          	lfsr	2,4
  2315  003B2C  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2316  003B2E  26D9               	addwf	fsr2l,f,c
  2317  003B30  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2318  003B32  22DA               	addwfc	fsr2h,f,c
  2319  003B34  0E06               	movlw	6
  2320  003B36  18DE               	xorwf	postinc2,w,c
  2321  003B38  10DE               	iorwf	postinc2,w,c
  2322  003B3A  A4D8               	btfss	status,2,c
  2323  003B3C  D018               	goto	l25800
  2324  003B3E  D7BC               	goto	u32390
  2325  003B40                     l3053:
  2326                           
  2327                           ; BSR set to: 0
  2328  003B40  D7FF               	goto	l3053
  2329  003B42                     l25798:
  2330                           
  2331                           ; BSR set to: 0
  2332  003B42  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2333  003B46  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2334  003B4A  50DF               	movf	indf2,w,c
  2335  003B4C  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2336  003B4E  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2337                           
  2338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2339                           ; Switch size 1, requested type "simple"
  2340                           ; Number of cases is 1, Range of values is 0 to 0
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte            4     3 (average)
  2344                           ;	Chosen strategy is simple_byte
  2345  003B50  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2346  003B52  0A00               	xorlw	0	; case 0
  2347  003B54  A4D8               	btfss	status,2,c
  2348  003B56  D7F4               	goto	l3053
  2349                           
  2350                           ; BSR set to: 0
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 3, Range of values is 0 to 2
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte           10     6 (average)
  2356                           ;	Chosen strategy is simple_byte
  2357  003B58  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2358  003B5A  0A00               	xorlw	0	; case 0
  2359  003B5C  B4D8               	btfsc	status,2,c
  2360  003B5E  D79E               	goto	l25774
  2361  003B60  0A01               	xorlw	1	; case 1
  2362  003B62  B4D8               	btfsc	status,2,c
  2363  003B64  D7C0               	goto	l25784
  2364  003B66  0A03               	xorlw	3	; case 2
  2365  003B68  B4D8               	btfsc	status,2,c
  2366  003B6A  D7CD               	goto	l25788
  2367  003B6C  D7E9               	goto	l3053
  2368  003B6E                     l25800:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2372  003B6E  0EF1               	movlw	low _main_stateMachine
  2373  003B70  6E12               	movwf	sm_send_event@psm^0,c
  2374  003B72  0E01               	movlw	high _main_stateMachine
  2375  003B74  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2376  003B76  0E00               	movlw	0
  2377  003B78  6E15               	movwf	(sm_send_event@event+1)^0,c
  2378  003B7A  0E00               	movlw	0
  2379  003B7C  6E14               	movwf	sm_send_event@event^0,c
  2380  003B7E  EC7A  F047         	call	_sm_send_event	;wreg free
  2381                           
  2382                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2383  003B82  D1FD               	goto	l26078
  2384  003B84                     l25802:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0x27 && button_struct.timer>((1000/50)*5))
  2388  003B84  0E27               	movlw	39
  2389  003B86  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2390  003B88  A4D8               	btfss	status,2,c
  2391  003B8A  D016               	goto	l25814
  2392                           
  2393                           ; BSR set to: 0
  2394  003B8C  0E64               	movlw	100
  2395  003B8E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2396  003B90  D013               	goto	l25814
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2400  003B92  0E01               	movlw	1
  2401  003B94  ECFF  F024         	call	_load_New_Menu
  2402  003B98                     l25808:
  2403                           
  2404                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2405  003B98  0EF1               	movlw	low _main_stateMachine
  2406  003B9A  6E12               	movwf	sm_send_event@psm^0,c
  2407  003B9C  0E01               	movlw	high _main_stateMachine
  2408  003B9E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2409  003BA0  0E00               	movlw	0
  2410  003BA2  6E15               	movwf	(sm_send_event@event+1)^0,c
  2411  003BA4  0E06               	movlw	6
  2412  003BA6  6E14               	movwf	sm_send_event@event^0,c
  2413  003BA8  EC7A  F047         	call	_sm_send_event	;wreg free
  2414                           
  2415                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2416  003BAC  0E01               	movlw	1
  2417  003BAE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2418                           
  2419                           ;sm_Main_MC50.c: 91:                 temp=0;
  2420  003BB0  0E00               	movlw	0
  2421  003BB2  0100               	movlb	0	; () banked
  2422  003BB4  6F80               	movwf	_temp& (0+255),b
  2423                           
  2424                           ;sm_Main_MC50.c: 92:             }
  2425  003BB6  0012               	return	
  2426  003BB8                     l25814:
  2427                           
  2428                           ; BSR set to: 0
  2429  003BB8  0E27               	movlw	39
  2430  003BBA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2431  003BBC  A4D8               	btfss	status,2,c
  2432  003BBE  D00B               	goto	l25822
  2433                           
  2434                           ; BSR set to: 0
  2435  003BC0  0E14               	movlw	20
  2436  003BC2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2437  003BC4  D008               	goto	l25822
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2441  003BC6  0E00               	movlw	0
  2442  003BC8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2443  003BCA  0E10               	movlw	16
  2444  003BCC  EC91  F04E         	call	_SetSegmentValueMain
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;sm_Main_MC50.c: 98:                 temp=1;
  2448  003BD0  0E01               	movlw	1
  2449  003BD2  6F80               	movwf	_temp& (0+255),b
  2450                           
  2451                           ;sm_Main_MC50.c: 99:             }
  2452  003BD4  0012               	return	
  2453  003BD6                     l25822:
  2454                           
  2455                           ; BSR set to: 0
  2456  003BD6  0580               	decf	_temp& (0+255),w,b
  2457  003BD8  A4D8               	btfss	status,2,c
  2458  003BDA  D004               	goto	l25832
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2462  003BDC  0E00               	movlw	0
  2463  003BDE  ECFF  F024         	call	_load_New_Menu
  2464  003BE2  D7DA               	goto	l25808
  2465  003BE4                     l25832:
  2466                           
  2467                           ; BSR set to: 0
  2468  003BE4  0E07               	movlw	7
  2469  003BE6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2470  003BE8  A4D8               	btfss	status,2,c
  2471  003BEA  D007               	goto	l25844
  2472                           
  2473                           ; BSR set to: 0
  2474  003BEC  0E78               	movlw	120
  2475  003BEE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2476  003BF0  D004               	goto	l25844
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2480  003BF2  0E0D               	movlw	13
  2481  003BF4  ECFF  F024         	call	_load_New_Menu
  2482  003BF8  D7CF               	goto	l25808
  2483  003BFA                     l25844:
  2484                           
  2485                           ; BSR set to: 0
  2486  003BFA  0E07               	movlw	7
  2487  003BFC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2488  003BFE  A4D8               	btfss	status,2,c
  2489  003C00  D00B               	goto	l25852
  2490                           
  2491                           ; BSR set to: 0
  2492  003C02  0E14               	movlw	20
  2493  003C04  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2494  003C06  D008               	goto	l25852
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2498  003C08  0E13               	movlw	19
  2499  003C0A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2500  003C0C  0E05               	movlw	5
  2501  003C0E  EC91  F04E         	call	_SetSegmentValueMain
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;sm_Main_MC50.c: 119:                 temp=2;
  2505  003C12  0E02               	movlw	2
  2506  003C14  6F80               	movwf	_temp& (0+255),b
  2507                           
  2508                           ;sm_Main_MC50.c: 120:             }
  2509  003C16  0012               	return	
  2510  003C18                     l25852:
  2511                           
  2512                           ; BSR set to: 0
  2513  003C18  0E02               	movlw	2
  2514  003C1A  1980               	xorwf	_temp& (0+255),w,b
  2515  003C1C  A4D8               	btfss	status,2,c
  2516  003C1E  D004               	goto	l25862
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2520  003C20  0E0C               	movlw	12
  2521  003C22  ECFF  F024         	call	_load_New_Menu
  2522  003C26  D7B8               	goto	l25808
  2523  003C28                     l25862:
  2524                           
  2525                           ; BSR set to: 0
  2526  003C28  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2527  003C2A  A4D8               	btfss	status,2,c
  2528  003C2C  D009               	goto	l25868
  2529                           
  2530                           ; BSR set to: 0
  2531  003C2E  0101               	movlb	1	; () banked
  2532  003C30  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2533  003C32  A4D8               	btfss	status,2,c
  2534  003C34  D005               	goto	l25868
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2538  003C36  0E01               	movlw	1
  2539  003C38  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2540                           
  2541                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2542  003C3A  0E03               	movlw	3
  2543  003C3C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2544                           
  2545                           ;sm_Main_MC50.c: 132:             }
  2546  003C3E  0012               	return	
  2547  003C40                     l25868:
  2548  003C40  0E17               	movlw	23
  2549  003C42  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2550  003C44  A4D8               	btfss	status,2,c
  2551  003C46  D009               	goto	l25874
  2552  003C48  0101               	movlb	1	; () banked
  2553  003C4A  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2554  003C4C  A4D8               	btfss	status,2,c
  2555  003C4E  D005               	goto	l25874
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2559  003C50  0E01               	movlw	1
  2560  003C52  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2561                           
  2562                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2563  003C54  0E01               	movlw	1
  2564  003C56  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2565                           
  2566                           ;sm_Main_MC50.c: 137:             }
  2567  003C58  0012               	return	
  2568  003C5A                     l25874:
  2569  003C5A  0101               	movlb	1	; () banked
  2570  003C5C  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2571  003C5E  A4D8               	btfss	status,2,c
  2572  003C60  D005               	goto	l25878
  2573                           
  2574                           ; BSR set to: 1
  2575                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2576  003C62  0E00               	movlw	0
  2577  003C64  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2578                           
  2579                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2580  003C66  0E00               	movlw	0
  2581  003C68  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2582                           
  2583                           ;sm_Main_MC50.c: 142:             }
  2584  003C6A  0012               	return	
  2585  003C6C                     l25878:
  2586                           
  2587                           ; BSR set to: 1
  2588  003C6C  0E06               	movlw	6
  2589  003C6E  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2590  003C70  B4D8               	btfsc	status,2,c
  2591  003C72  D004               	goto	u32600
  2592                           
  2593                           ; BSR set to: 1
  2594  003C74  0E05               	movlw	5
  2595  003C76  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2596  003C78  A4D8               	btfss	status,2,c
  2597  003C7A  D015               	goto	l25892
  2598  003C7C                     u32600:
  2599                           
  2600                           ; BSR set to: 1
  2601  003C7C  0E63               	movlw	99
  2602  003C7E  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2603  003C80  D012               	goto	l25892
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2607  003C82  0E0C               	movlw	12
  2608  003C84  ECFF  F024         	call	_load_New_Menu
  2609                           
  2610                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2611  003C88  0EF1               	movlw	low _main_stateMachine
  2612  003C8A  6E12               	movwf	sm_send_event@psm^0,c
  2613  003C8C  0E01               	movlw	high _main_stateMachine
  2614  003C8E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2615  003C90  0E00               	movlw	0
  2616  003C92  6E15               	movwf	(sm_send_event@event+1)^0,c
  2617  003C94  0E06               	movlw	6
  2618  003C96  6E14               	movwf	sm_send_event@event^0,c
  2619  003C98  EC7A  F047         	call	_sm_send_event	;wreg free
  2620                           
  2621                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2622  003C9C  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2623                           
  2624                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2625  003CA0  0E01               	movlw	1
  2626  003CA2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2627                           
  2628                           ;sm_Main_MC50.c: 149:             }
  2629  003CA4  0012               	return	
  2630  003CA6                     l25892:
  2631                           
  2632                           ; BSR set to: 1
  2633  003CA6  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2634  003CA8  D005               	goto	u32620
  2635  003CAA  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2636  003CAC  E111               	bnz	l3065
  2637  003CAE  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2638  003CB0  B0D8               	btfsc	status,0,c
  2639  003CB2  0012               	return	
  2640  003CB4                     u32620:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2644  003CB4  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2645  003CB6  A4D8               	btfss	status,2,c
  2646  003CB8  D006               	goto	l25898
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2650  003CBA  0E0C               	movlw	12
  2651  003CBC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2652  003CBE  0E0F               	movlw	15
  2653  003CC0  EC91  F04E         	call	_SetSegmentValueMain
  2654                           
  2655                           ;sm_Main_MC50.c: 157:                     }
  2656  003CC4  0012               	return	
  2657  003CC6                     l25898:
  2658                           
  2659                           ; BSR set to: 1
  2660                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2661  003CC6  0E18               	movlw	24
  2662  003CC8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2663  003CCA  0E18               	movlw	24
  2664  003CCC  EC91  F04E         	call	_SetSegmentValueMain
  2665  003CD0                     l3065:
  2666                           
  2667                           ; BSR set to: 1
  2668  003CD0  0012               	return	
  2669  003CD2                     l25900:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2673  003CD2  0EBD               	movlw	low _menuConfiguration_stateMachine
  2674  003CD4  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2675  003CD6  0E02               	movlw	high _menuConfiguration_stateMachine
  2676  003CD8  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2677  003CDA  EC5C  F00C         	call	_sm_execute_menuConfiguration	;wreg free
  2678                           
  2679                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2680  003CDE  0012               	return	
  2681  003CE0                     l25902:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2685  003CE0  0E00               	movlw	0
  2686  003CE2  0101               	movlb	1	; () banked
  2687  003CE4  6F8F               	movwf	_aux_in_auto_close& (0+255),b
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2691  003CE6  0E04               	movlw	4
  2692  003CE8  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2693  003CEA  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2694  003CEC  A4D8               	btfss	status,2,c
  2695  003CEE  D013               	goto	l3088
  2696                           
  2697                           ; BSR set to: 1
  2698                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2699  003CF0  0100               	movlb	0	; () banked
  2700  003CF2  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2701  003CF4  A4D8               	btfss	status,2,c
  2702  003CF6  D007               	goto	l25912
  2703                           
  2704                           ; BSR set to: 0
  2705  003CF8  0101               	movlb	1	; () banked
  2706  003CFA  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2707  003CFC  A4D8               	btfss	status,2,c
  2708  003CFE  D003               	goto	l25912
  2709  003D00                     u32660:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2713  003D00  0E01               	movlw	1
  2714  003D02  6F8F               	movwf	_aux_in_auto_close& (0+255),b
  2715                           
  2716                           ;sm_Main_MC50.c: 182:                 }
  2717  003D04  D008               	goto	l3088
  2718  003D06                     l25912:
  2719  003D06  0100               	movlb	0	; () banked
  2720  003D08  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2721  003D0A  B4D8               	btfsc	status,2,c
  2722  003D0C  D004               	goto	l3088
  2723                           
  2724                           ; BSR set to: 0
  2725  003D0E  0101               	movlb	1	; () banked
  2726  003D10  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2727  003D12  A4D8               	btfss	status,2,c
  2728  003D14  D7F5               	goto	u32660
  2729  003D16                     l3088:
  2730                           
  2731                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2732  003D16  0101               	movlb	1	; () banked
  2733  003D18  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2734  003D1A  A4D8               	btfss	status,2,c
  2735  003D1C  D06B               	goto	l3102
  2736                           
  2737                           ; BSR set to: 1
  2738  003D1E  0E04               	movlw	4
  2739  003D20  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2740  003D22  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2741  003D24  A4D8               	btfss	status,2,c
  2742  003D26  D003               	goto	u32710
  2743                           
  2744                           ; BSR set to: 1
  2745  003D28  518F               	movf	_aux_in_auto_close& (0+255),w,b
  2746  003D2A  B4D8               	btfsc	status,2,c
  2747  003D2C  D008               	goto	u32730
  2748  003D2E                     u32710:
  2749                           
  2750                           ; BSR set to: 1
  2751  003D2E  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  2752  003D30  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2753  003D32  B4D8               	btfsc	status,2,c
  2754  003D34  D004               	goto	u32730
  2755                           
  2756                           ; BSR set to: 1
  2757  003D36  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
  2758  003D38  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2759  003D3A  A4D8               	btfss	status,2,c
  2760  003D3C  D05B               	goto	l3102
  2761  003D3E                     u32730:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0x27 && button_struct.timer>((1000/50)*5))
  2765  003D3E  0E27               	movlw	39
  2766  003D40  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2767  003D42  A4D8               	btfss	status,2,c
  2768  003D44  D015               	goto	l25940
  2769                           
  2770                           ; BSR set to: 1
  2771  003D46  0E64               	movlw	100
  2772  003D48  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2773  003D4A  D012               	goto	l25940
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2777  003D4C  0E01               	movlw	1
  2778  003D4E  ECFF  F024         	call	_load_New_Menu
  2779  003D52                     l25934:
  2780                           
  2781                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2782  003D52  0EF1               	movlw	low _main_stateMachine
  2783  003D54  6E12               	movwf	sm_send_event@psm^0,c
  2784  003D56  0E01               	movlw	high _main_stateMachine
  2785  003D58  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2786  003D5A  0E00               	movlw	0
  2787  003D5C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2788  003D5E  0E06               	movlw	6
  2789  003D60  6E14               	movwf	sm_send_event@event^0,c
  2790  003D62  EC7A  F047         	call	_sm_send_event	;wreg free
  2791                           
  2792                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2793  003D66  0E01               	movlw	1
  2794  003D68  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2795                           
  2796                           ;sm_Main_MC50.c: 200:                     temp=0;
  2797  003D6A  0E00               	movlw	0
  2798  003D6C  0100               	movlb	0	; () banked
  2799  003D6E  D038               	goto	L4
  2800  003D70                     l25940:
  2801                           
  2802                           ; BSR set to: 1
  2803  003D70  0E27               	movlw	39
  2804  003D72  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2805  003D74  A4D8               	btfss	status,2,c
  2806  003D76  D00A               	goto	l25948
  2807                           
  2808                           ; BSR set to: 1
  2809  003D78  0E14               	movlw	20
  2810  003D7A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2811  003D7C  D007               	goto	l25948
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2815  003D7E  0E00               	movlw	0
  2816  003D80  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2817  003D82  0E10               	movlw	16
  2818  003D84  EC91  F04E         	call	_SetSegmentValueMain
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;sm_Main_MC50.c: 206:                     temp=1;
  2822  003D88  0E01               	movlw	1
  2823  003D8A  D02A               	goto	L4
  2824  003D8C                     l25948:
  2825                           
  2826                           ; BSR set to: 1
  2827  003D8C  0100               	movlb	0	; () banked
  2828  003D8E  0580               	decf	_temp& (0+255),w,b
  2829  003D90  A4D8               	btfss	status,2,c
  2830  003D92  D00E               	goto	l25962
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2834  003D94  0E00               	movlw	0
  2835  003D96  ECFF  F024         	call	_load_New_Menu
  2836                           
  2837                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2838  003D9A  0E01               	movlw	1
  2839  003D9C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2840                           
  2841                           ;sm_Main_MC50.c: 213:                     temp=0;
  2842  003D9E  0E00               	movlw	0
  2843  003DA0  0100               	movlb	0	; () banked
  2844  003DA2  6F80               	movwf	_temp& (0+255),b
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2848  003DA4  0E00               	movlw	0
  2849  003DA6  0101               	movlb	1	; () banked
  2850  003DA8  6FF2               	movwf	(_main_stateMachine+1)& (0+255),b
  2851  003DAA  0E01               	movlw	1
  2852  003DAC  6FF1               	movwf	_main_stateMachine& (0+255),b
  2853  003DAE  0012               	return	
  2854  003DB0                     l25962:
  2855                           
  2856                           ; BSR set to: 0
  2857  003DB0  0E07               	movlw	7
  2858  003DB2  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2859  003DB4  A4D8               	btfss	status,2,c
  2860  003DB6  D007               	goto	l25974
  2861                           
  2862                           ; BSR set to: 0
  2863  003DB8  0E78               	movlw	120
  2864  003DBA  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2865  003DBC  D004               	goto	l25974
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2869  003DBE  0E0D               	movlw	13
  2870  003DC0  ECFF  F024         	call	_load_New_Menu
  2871  003DC4  D7C6               	goto	l25934
  2872  003DC6                     l25974:
  2873                           
  2874                           ; BSR set to: 0
  2875  003DC6  0E07               	movlw	7
  2876  003DC8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2877  003DCA  A4D8               	btfss	status,2,c
  2878  003DCC  D00B               	goto	l25982
  2879                           
  2880                           ; BSR set to: 0
  2881  003DCE  0E14               	movlw	20
  2882  003DD0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2883  003DD2  D008               	goto	l25982
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2887  003DD4  0E13               	movlw	19
  2888  003DD6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2889  003DD8  0E05               	movlw	5
  2890  003DDA  EC91  F04E         	call	_SetSegmentValueMain
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;sm_Main_MC50.c: 229:                 temp=2;
  2894  003DDE  0E02               	movlw	2
  2895  003DE0                     L4:
  2896  003DE0  6F80               	movwf	_temp& (0+255),b
  2897                           
  2898                           ;sm_Main_MC50.c: 230:             }
  2899  003DE2  D008               	goto	l3102
  2900  003DE4                     l25982:
  2901                           
  2902                           ; BSR set to: 0
  2903  003DE4  0E02               	movlw	2
  2904  003DE6  1980               	xorwf	_temp& (0+255),w,b
  2905  003DE8  A4D8               	btfss	status,2,c
  2906  003DEA  D004               	goto	l3102
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2910  003DEC  0E0C               	movlw	12
  2911  003DEE  ECFF  F024         	call	_load_New_Menu
  2912  003DF2  D6D2               	goto	l25808
  2913  003DF4                     l3102:
  2914                           
  2915                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0x27 && button_struct.current!=0x07) )
  2916                           
  2917                           ; BSR set to: 0
  2918  003DF4  0101               	movlb	1	; () banked
  2919  003DF6  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2920  003DF8  D005               	goto	u32840
  2921  003DFA  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2922  003DFC  E102               	bnz	u32841
  2923  003DFE  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2924  003E00  B0D8               	btfsc	status,0,c
  2925  003E02                     u32841:
  2926  003E02  0012               	return	
  2927  003E04                     u32840:
  2928                           
  2929                           ; BSR set to: 1
  2930  003E04  0E27               	movlw	39
  2931  003E06  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2932  003E08  B4D8               	btfsc	status,2,c
  2933  003E0A  0012               	return	
  2934                           
  2935                           ; BSR set to: 1
  2936  003E0C  0E07               	movlw	7
  2937  003E0E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2938  003E10  B4D8               	btfsc	status,2,c
  2939  003E12  0012               	return	
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2943  003E14  0E03               	movlw	3
  2944  003E16  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2945  003E18  A4D8               	btfss	status,2,c
  2946  003E1A  D011               	goto	l26008
  2947                           
  2948                           ; BSR set to: 1
  2949                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2950  003E1C  0E12               	movlw	18
  2951  003E1E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2952  003E20  0E00               	movlw	0
  2953  003E22  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2954  003E24  0E0A               	movlw	10
  2955  003E26  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2956  003E28  0E0C               	movlw	12
  2957  003E2A  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  2958  003E2E                     l26004:
  2959                           
  2960                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2961  003E2E  0E00               	movlw	0
  2962  003E30  0101               	movlb	1	; () banked
  2963  003E32  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2964  003E34  0E04               	movlw	4
  2965  003E36  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2969  003E38  0E00               	movlw	0
  2970  003E3A  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2971                           
  2972                           ;sm_Main_MC50.c: 252:                 }
  2973  003E3C  0012               	return	
  2974  003E3E                     l26008:
  2975                           
  2976                           ; BSR set to: 1
  2977  003E3E  0E02               	movlw	2
  2978  003E40  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2979  003E42  B4D8               	btfsc	status,2,c
  2980  003E44  D003               	goto	u32890
  2981                           
  2982                           ; BSR set to: 1
  2983  003E46  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2984  003E48  A4D8               	btfss	status,2,c
  2985  003E4A  D00A               	goto	l26018
  2986  003E4C                     u32890:
  2987                           
  2988                           ; BSR set to: 1
  2989                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2990  003E4C  0E10               	movlw	16
  2991  003E4E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2992  003E50  0E00               	movlw	0
  2993  003E52  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2994  003E54  0E0A               	movlw	10
  2995  003E56  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2996  003E58  0E00               	movlw	0
  2997  003E5A  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  2998  003E5E  D7E7               	goto	l26004
  2999  003E60                     l26018:
  3000                           
  3001                           ; BSR set to: 1
  3002  003E60  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3003  003E62  A4D8               	btfss	status,2,c
  3004  003E64  D00F               	goto	l26024
  3005                           
  3006                           ; BSR set to: 1
  3007  003E66  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
  3008  003E68  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3009  003E6A  A4D8               	btfss	status,2,c
  3010  003E6C  D00B               	goto	l26024
  3011                           
  3012                           ; BSR set to: 1
  3013                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  3014  003E6E  0EF1               	movlw	low _main_stateMachine
  3015  003E70  6E12               	movwf	sm_send_event@psm^0,c
  3016  003E72  0E01               	movlw	high _main_stateMachine
  3017  003E74  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3018  003E76  0E00               	movlw	0
  3019  003E78  6E15               	movwf	(sm_send_event@event+1)^0,c
  3020  003E7A  0E07               	movlw	7
  3021  003E7C  6E14               	movwf	sm_send_event@event^0,c
  3022  003E7E  EC7A  F047         	call	_sm_send_event	;wreg free
  3023                           
  3024                           ;sm_Main_MC50.c: 264:                 }
  3025  003E82  0012               	return	
  3026  003E84                     l26024:
  3027                           
  3028                           ; BSR set to: 1
  3029  003E84  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3030  003E86  A4D8               	btfss	status,2,c
  3031  003E88  D074               	goto	l26074
  3032                           
  3033                           ; BSR set to: 1
  3034  003E8A  0E04               	movlw	4
  3035  003E8C  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3036  003E8E  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3037  003E90  A4D8               	btfss	status,2,c
  3038  003E92  D06F               	goto	l26074
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3042  003E94  0100               	movlb	0	; () banked
  3043  003E96  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3044  003E98  B4D8               	btfsc	status,2,c
  3045  003E9A  D00B               	goto	u32970
  3046                           
  3047                           ; BSR set to: 0
  3048  003E9C  0101               	movlb	1	; () banked
  3049  003E9E  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3050  003EA0  B4D8               	btfsc	status,2,c
  3051  003EA2  D007               	goto	u32970
  3052                           
  3053                           ; BSR set to: 1
  3054  003EA4  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3055  003EA6  B4D8               	btfsc	status,2,c
  3056  003EA8  D013               	goto	u33010
  3057                           
  3058                           ; BSR set to: 1
  3059  003EAA  0E03               	movlw	3
  3060  003EAC  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3061  003EAE  B4D8               	btfsc	status,2,c
  3062  003EB0  D00F               	goto	u33010
  3063  003EB2                     u32970:
  3064  003EB2  0100               	movlb	0	; () banked
  3065  003EB4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3066  003EB6  A4D8               	btfss	status,2,c
  3067  003EB8  D026               	goto	l26052
  3068                           
  3069                           ; BSR set to: 0
  3070  003EBA  0101               	movlb	1	; () banked
  3071  003EBC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3072  003EBE  A4D8               	btfss	status,2,c
  3073  003EC0  D022               	goto	l26052
  3074                           
  3075                           ; BSR set to: 1
  3076  003EC2  0E02               	movlw	2
  3077  003EC4  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3078  003EC6  B4D8               	btfsc	status,2,c
  3079  003EC8  D01E               	goto	l26052
  3080                           
  3081                           ; BSR set to: 1
  3082  003ECA  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3083  003ECC  B4D8               	btfsc	status,2,c
  3084  003ECE  D01B               	goto	l26052
  3085  003ED0                     u33010:
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3089  003ED0  0E00               	movlw	0
  3090  003ED2  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3091  003ED4  0E0A               	movlw	10
  3092  003ED6  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3093                           
  3094                           ; BSR set to: 1
  3095                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3096  003ED8  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3097  003EDA  A4D8               	btfss	status,2,c
  3098  003EDC  D00A               	goto	l26050
  3099                           
  3100                           ; BSR set to: 1
  3101                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3102  003EDE  0E10               	movlw	16
  3103  003EE0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3104  003EE2  0E00               	movlw	0
  3105  003EE4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3106  003EE6  0E0A               	movlw	10
  3107  003EE8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3108  003EEA  0E0A               	movlw	10
  3109  003EEC  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  3110                           
  3111                           ;sm_Main_MC50.c: 282:                         }
  3112  003EF0  0012               	return	
  3113  003EF2                     l26050:
  3114                           
  3115                           ; BSR set to: 1
  3116                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3117  003EF2  0E0F               	movlw	15
  3118  003EF4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3119  003EF6  0E00               	movlw	0
  3120  003EF8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3121  003EFA  0E0A               	movlw	10
  3122  003EFC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3123  003EFE  0E0A               	movlw	10
  3124  003F00  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  3125  003F04  0012               	return	
  3126  003F06                     l26052:
  3127  003F06  0100               	movlb	0	; () banked
  3128  003F08  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3129  003F0A  B4D8               	btfsc	status,2,c
  3130  003F0C  D008               	goto	u33050
  3131                           
  3132                           ; BSR set to: 0
  3133  003F0E  0101               	movlb	1	; () banked
  3134  003F10  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3135  003F12  B4D8               	btfsc	status,2,c
  3136  003F14  D004               	goto	u33050
  3137                           
  3138                           ; BSR set to: 1
  3139  003F16  0E02               	movlw	2
  3140  003F18  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3141  003F1A  B4D8               	btfsc	status,2,c
  3142  003F1C  D00C               	goto	u33080
  3143  003F1E                     u33050:
  3144  003F1E  0100               	movlb	0	; () banked
  3145  003F20  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3146  003F22  A4D8               	btfss	status,2,c
  3147  003F24  D016               	goto	l26068
  3148                           
  3149                           ; BSR set to: 0
  3150  003F26  0101               	movlb	1	; () banked
  3151  003F28  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3152  003F2A  A4D8               	btfss	status,2,c
  3153  003F2C  D012               	goto	l26068
  3154                           
  3155                           ; BSR set to: 1
  3156  003F2E  0E02               	movlw	2
  3157  003F30  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3158  003F32  A4D8               	btfss	status,2,c
  3159  003F34  D00E               	goto	l26068
  3160  003F36                     u33080:
  3161                           
  3162                           ; BSR set to: 1
  3163                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3164  003F36  0E00               	movlw	0
  3165  003F38  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3166  003F3A  0E0A               	movlw	10
  3167  003F3C  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3171  003F3E  0E10               	movlw	16
  3172  003F40  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3173  003F42  0E00               	movlw	0
  3174  003F44  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3175  003F46  0E0A               	movlw	10
  3176  003F48  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3177  003F4A  0E0A               	movlw	10
  3178  003F4C  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  3179                           
  3180                           ;sm_Main_MC50.c: 298:                     }
  3181  003F50  0012               	return	
  3182  003F52                     l26068:
  3183  003F52  0101               	movlb	1	; () banked
  3184  003F54  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3185  003F56  A4D8               	btfss	status,2,c
  3186  003F58  D006               	goto	l26072
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3190  003F5A  0E00               	movlw	0
  3191  003F5C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3192  003F5E  0E0F               	movlw	15
  3193  003F60  EC91  F04E         	call	_SetSegmentValueMain
  3194                           
  3195                           ;sm_Main_MC50.c: 304:                     }
  3196  003F64  0012               	return	
  3197  003F66                     l26072:
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3201  003F66  0E18               	movlw	24
  3202  003F68  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3203  003F6A  0E18               	movlw	24
  3204  003F6C  EC91  F04E         	call	_SetSegmentValueMain
  3205  003F70  0012               	return	
  3206  003F72                     l26074:
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3210  003F72  0E18               	movlw	24
  3211  003F74  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3212  003F76  0E18               	movlw	24
  3213  003F78  EC91  F04E         	call	_SetSegmentValueMain
  3214  003F7C  0012               	return	
  3215  003F7E                     l26078:
  3216  003F7E  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3217  003F82  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3218  003F86  50DF               	movf	indf2,w,c
  3219  003F88  0100               	movlb	0	; () banked
  3220  003F8A  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3221  003F8C  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3222                           
  3223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3224                           ; Switch size 1, requested type "simple"
  3225                           ; Number of cases is 1, Range of values is 0 to 0
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte            4     3 (average)
  3229                           ;	Chosen strategy is simple_byte
  3230  003F8E  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3231  003F90  0A00               	xorlw	0	; case 0
  3232  003F92  A4D8               	btfss	status,2,c
  3233  003F94  0012               	return	
  3234                           
  3235                           ; BSR set to: 0
  3236                           ; Switch size 1, requested type "simple"
  3237                           ; Number of cases is 3, Range of values is 0 to 2
  3238                           ; switch strategies available:
  3239                           ; Name         Instructions Cycles
  3240                           ; simple_byte           10     6 (average)
  3241                           ;	Chosen strategy is simple_byte
  3242  003F96  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3243  003F98  0A00               	xorlw	0	; case 0
  3244  003F9A  B4D8               	btfsc	status,2,c
  3245  003F9C  D5F3               	goto	l25802
  3246  003F9E  0A01               	xorlw	1	; case 1
  3247  003FA0  B4D8               	btfsc	status,2,c
  3248  003FA2  D697               	goto	l25900
  3249  003FA4  0A03               	xorlw	3	; case 2
  3250  003FA6  A4D8               	btfss	status,2,c
  3251  003FA8  0012               	return	
  3252  003FAA  D69A               	goto	l25902
  3253  003FAC                     __end_of_sm_execute_main:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _sm_execute_menuConfiguration *****************
  3257 ;; Defined at:
  3258 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  psm             2   17[BANK0 ] PTR struct .
  3261 ;;		 -> menuConfiguration_stateMachine(11), 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 3F/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 15
  3280 ;; This function calls:
  3281 ;;		_ClearFlag_rfCMD
  3282 ;;		_ResetDefaultMemory
  3283 ;;		_SaveNVM_VarSystem
  3284 ;;		_SetSegmentValueIntermitentMain
  3285 ;;		_SetSegmentValueMain
  3286 ;;		___lbdiv
  3287 ;;		___lldiv
  3288 ;;		___lmul
  3289 ;;		___lwdiv
  3290 ;;		_controlLearnDigit
  3291 ;;		_controlSaveRemote
  3292 ;;		_controlSelectRemote
  3293 ;;		_load_New_Menu
  3294 ;;		_setValueToEdit
  3295 ;;		_sm_send_event
  3296 ;; This function is called by:
  3297 ;;		_sm_execute_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text2
  3302  0018B8                     __ptext2:
  3303                           	callstack 0
  3304  0018B8                     _sm_execute_menuConfiguration:
  3305                           	callstack 14
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3309                           
  3310                           ;incstack = 0
  3311  0018B8  D0A2               	goto	l24214
  3312  0018BA                     l24156:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3316  0018BA  EE20 F004          	lfsr	2,4
  3317  0018BE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3318  0018C0  26D9               	addwf	fsr2l,f,c
  3319  0018C2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3320  0018C4  22DA               	addwfc	fsr2h,f,c
  3321  0018C6  04DE               	decf	postinc2,w,c
  3322  0018C8  10DE               	iorwf	postinc2,w,c
  3323  0018CA  A4D8               	btfss	status,2,c
  3324  0018CC  D006               	goto	l24160
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3328  0018CE  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3329  0018D2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3330  0018D6  0E01               	movlw	1
  3331  0018D8  D04C               	goto	L9
  3332  0018DA                     l24160:
  3333                           
  3334                           ; BSR set to: 0
  3335  0018DA  EE20 F004          	lfsr	2,4
  3336  0018DE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3337  0018E0  26D9               	addwf	fsr2l,f,c
  3338  0018E2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3339  0018E4  22DA               	addwfc	fsr2h,f,c
  3340  0018E6  0E05               	movlw	5
  3341  0018E8  18DE               	xorwf	postinc2,w,c
  3342  0018EA  10DE               	iorwf	postinc2,w,c
  3343  0018EC  A4D8               	btfss	status,2,c
  3344  0018EE  D006               	goto	l24164
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3348  0018F0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3349  0018F4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3350  0018F8  0E03               	movlw	3
  3351  0018FA  D03B               	goto	L9
  3352  0018FC                     l24164:
  3353                           
  3354                           ; BSR set to: 0
  3355  0018FC  EE20 F004          	lfsr	2,4
  3356  001900  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3357  001902  26D9               	addwf	fsr2l,f,c
  3358  001904  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3359  001906  22DA               	addwfc	fsr2h,f,c
  3360  001908  0E08               	movlw	8
  3361  00190A  18DE               	xorwf	postinc2,w,c
  3362  00190C  10DE               	iorwf	postinc2,w,c
  3363  00190E  A4D8               	btfss	status,2,c
  3364  001910  D006               	goto	l24168
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3368  001912  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3369  001916  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3370  00191A  0E04               	movlw	4
  3371  00191C  D02A               	goto	L9
  3372  00191E                     l24168:
  3373                           
  3374                           ; BSR set to: 0
  3375  00191E  EE20 F004          	lfsr	2,4
  3376  001922  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3377  001924  26D9               	addwf	fsr2l,f,c
  3378  001926  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3379  001928  22DA               	addwfc	fsr2h,f,c
  3380  00192A  0E14               	movlw	20
  3381  00192C  18DE               	xorwf	postinc2,w,c
  3382  00192E  10DE               	iorwf	postinc2,w,c
  3383  001930  A4D8               	btfss	status,2,c
  3384  001932  D087               	goto	l24216
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3388  001934  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3389  001938  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3390  00193C  0E06               	movlw	6
  3391  00193E  D019               	goto	L9
  3392  001940                     l24172:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3396  001940  EE20 F004          	lfsr	2,4
  3397  001944  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3398  001946  26D9               	addwf	fsr2l,f,c
  3399  001948  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3400  00194A  22DA               	addwfc	fsr2h,f,c
  3401  00194C  0E02               	movlw	2
  3402  00194E  18DE               	xorwf	postinc2,w,c
  3403  001950  10DE               	iorwf	postinc2,w,c
  3404  001952  A4D8               	btfss	status,2,c
  3405  001954  D006               	goto	l24176
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3409  001956  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3410  00195A  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3411  00195E  0E02               	movlw	2
  3412  001960  D008               	goto	L9
  3413  001962                     l24176:
  3414                           
  3415                           ; BSR set to: 0
  3416  001962  EE20 F004          	lfsr	2,4
  3417  001966  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3418  001968  26D9               	addwf	fsr2l,f,c
  3419  00196A  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3420  00196C  22DA               	addwfc	fsr2h,f,c
  3421  00196E  0E03               	movlw	3
  3422  001970  D03B               	goto	L125
  3423  001972                     L9:
  3424  001972  6EDE               	movwf	postinc2,c
  3425  001974  0E00               	movlw	0
  3426  001976  6EDD               	movwf	postdec2,c
  3427  001978  D064               	goto	l24216
  3428  00197A                     l24184:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3432  00197A  EE20 F004          	lfsr	2,4
  3433  00197E  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3434  001980  26D9               	addwf	fsr2l,f,c
  3435  001982  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3436  001984  22DA               	addwfc	fsr2h,f,c
  3437  001986  0E04               	movlw	4
  3438  001988  18DE               	xorwf	postinc2,w,c
  3439  00198A  10DE               	iorwf	postinc2,w,c
  3440  00198C  A4D8               	btfss	status,2,c
  3441  00198E  D7E9               	goto	l24176
  3442  001990  D02F               	goto	u29110
  3443  001992                     l24192:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3447  001992  EE20 F004          	lfsr	2,4
  3448  001996  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3449  001998  26D9               	addwf	fsr2l,f,c
  3450  00199A  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3451  00199C  22DA               	addwfc	fsr2h,f,c
  3452  00199E  0E08               	movlw	8
  3453  0019A0  18DE               	xorwf	postinc2,w,c
  3454  0019A2  10DE               	iorwf	postinc2,w,c
  3455  0019A4  A4D8               	btfss	status,2,c
  3456  0019A6  D7DD               	goto	l24176
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3460  0019A8  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3461  0019AC  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3462  0019B0  0E05               	movlw	5
  3463  0019B2  D7DF               	goto	L9
  3464  0019B4                     l24200:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3468  0019B4  EE20 F004          	lfsr	2,4
  3469  0019B8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3470  0019BA  26D9               	addwf	fsr2l,f,c
  3471  0019BC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3472  0019BE  22DA               	addwfc	fsr2h,f,c
  3473  0019C0  0E09               	movlw	9
  3474  0019C2  18DE               	xorwf	postinc2,w,c
  3475  0019C4  10DE               	iorwf	postinc2,w,c
  3476  0019C6  A4D8               	btfss	status,2,c
  3477  0019C8  D008               	goto	l24208
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3481  0019CA  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3482  0019CE  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3483  0019D2  0E04               	movlw	4
  3484  0019D4  6EDE               	movwf	postinc2,c
  3485  0019D6  0E00               	movlw	0
  3486  0019D8  6EDD               	movwf	postdec2,c
  3487  0019DA                     l24208:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3491  0019DA  EE20 F004          	lfsr	2,4
  3492  0019DE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3493  0019E0  26D9               	addwf	fsr2l,f,c
  3494  0019E2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3495  0019E4  22DA               	addwfc	fsr2h,f,c
  3496  0019E6  0E04               	movlw	4
  3497  0019E8                     L125:
  3498  0019E8  18DE               	xorwf	postinc2,w,c
  3499  0019EA  10DE               	iorwf	postinc2,w,c
  3500  0019EC  A4D8               	btfss	status,2,c
  3501  0019EE  D029               	goto	l24216
  3502  0019F0                     u29110:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3506  0019F0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3507  0019F4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3508  0019F8  0E00               	movlw	0
  3509  0019FA  D7BB               	goto	L9
  3510  0019FC                     l3233:
  3511                           
  3512                           ; BSR set to: 0
  3513  0019FC  D7FF               	goto	l3233
  3514  0019FE                     l24214:
  3515                           
  3516                           ; BSR set to: 0
  3517  0019FE  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3518  001A02  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3519  001A06  50DF               	movf	indf2,w,c
  3520  001A08  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3521  001A0A  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3522                           
  3523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3524                           ; Switch size 1, requested type "simple"
  3525                           ; Number of cases is 1, Range of values is 0 to 0
  3526                           ; switch strategies available:
  3527                           ; Name         Instructions Cycles
  3528                           ; simple_byte            4     3 (average)
  3529                           ;	Chosen strategy is simple_byte
  3530  001A0C  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3531  001A0E  0A00               	xorlw	0	; case 0
  3532  001A10  A4D8               	btfss	status,2,c
  3533  001A12  D7F4               	goto	l3233
  3534                           
  3535                           ; BSR set to: 0
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 7, Range of values is 0 to 6
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte           22    12 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  001A14  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3543  001A16  0A00               	xorlw	0	; case 0
  3544  001A18  B4D8               	btfsc	status,2,c
  3545  001A1A  D74F               	goto	l24156
  3546  001A1C  0A01               	xorlw	1	; case 1
  3547  001A1E  B4D8               	btfsc	status,2,c
  3548  001A20  D78F               	goto	l24172
  3549  001A22  0A03               	xorlw	3	; case 2
  3550  001A24  B4D8               	btfsc	status,2,c
  3551  001A26  D7D9               	goto	l24208
  3552  001A28  0A01               	xorlw	1	; case 3
  3553  001A2A  B4D8               	btfsc	status,2,c
  3554  001A2C  D7A6               	goto	l24184
  3555  001A2E  0A07               	xorlw	7	; case 4
  3556  001A30  B4D8               	btfsc	status,2,c
  3557  001A32  D7AF               	goto	l24192
  3558  001A34  0A01               	xorlw	1	; case 5
  3559  001A36  B4D8               	btfsc	status,2,c
  3560  001A38  D7BD               	goto	l24200
  3561  001A3A  0A03               	xorlw	3	; case 6
  3562  001A3C  B4D8               	btfsc	status,2,c
  3563  001A3E  D7CD               	goto	l24208
  3564  001A40  D7DD               	goto	l3233
  3565  001A42                     l24216:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3569  001A42  0EBD               	movlw	low _menuConfiguration_stateMachine
  3570  001A44  6E12               	movwf	sm_send_event@psm^0,c
  3571  001A46  0E02               	movlw	high _menuConfiguration_stateMachine
  3572  001A48  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3573  001A4A  0E00               	movlw	0
  3574  001A4C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3575  001A4E  0E00               	movlw	0
  3576  001A50  6E14               	movwf	sm_send_event@event^0,c
  3577  001A52  EC7A  F047         	call	_sm_send_event	;wreg free
  3578                           
  3579                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3580  001A56  D3C1               	goto	l24528
  3581  001A58                     l24218:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3585  001A58  0E06               	movlw	6
  3586  001A5A  0101               	movlb	1	; () banked
  3587  001A5C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3588  001A5E  A4D8               	btfss	status,2,c
  3589  001A60  D02F               	goto	l24228
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3593  001A62  0E00               	movlw	0
  3594  001A64  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3595  001A66  0EC8               	movlw	200
  3596  001A68  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3597                           
  3598                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3599  001A6A  0E01               	movlw	1
  3600  001A6C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3601                           
  3602                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3603  001A6E  0E00               	movlw	0
  3604  001A70  6F68               	movwf	(_menu_st+23)& (0+255),b
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3608  001A72  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3609  001A76  5166               	movf	(_menu_st+21)& (0+255),w,b
  3610  001A78  ECB4  F01A         	call	_setValueToEdit
  3611  001A7C  0900               	iorlw	0
  3612  001A7E  B4D8               	btfsc	status,2,c
  3613  001A80  0012               	return	
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3617  001A82  0EBD               	movlw	low _menuConfiguration_stateMachine
  3618  001A84  6E12               	movwf	sm_send_event@psm^0,c
  3619  001A86  0E02               	movlw	high _menuConfiguration_stateMachine
  3620  001A88  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3621  001A8A  0E00               	movlw	0
  3622  001A8C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3623  001A8E  0E08               	movlw	8
  3624  001A90  6E14               	movwf	sm_send_event@event^0,c
  3625  001A92  EC7A  F047         	call	_sm_send_event	;wreg free
  3626                           
  3627                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3628  001A96  0E0A               	movlw	10
  3629  001A98  6E10               	movwf	___lbdiv@divisor^0,c
  3630  001A9A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3631  001A9C  EC6B  F04B         	call	___lbdiv
  3632  001AA0  0DF6               	mullw	246
  3633  001AA2  50F3               	movf	243,w,c
  3634  001AA4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3635  001AA6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3636  001AA8  0E00               	movlw	0
  3637  001AAA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3638  001AAC  0E14               	movlw	20
  3639  001AAE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3640  001AB0  0E0A               	movlw	10
  3641  001AB2  6E10               	movwf	___lbdiv@divisor^0,c
  3642  001AB4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3643  001AB6  EC6B  F04B         	call	___lbdiv
  3644  001ABA  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  3645  001ABE  0012               	return	
  3646  001AC0                     l24228:
  3647                           
  3648                           ; BSR set to: 1
  3649  001AC0  0E05               	movlw	5
  3650  001AC2  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3651  001AC4  A4D8               	btfss	status,2,c
  3652  001AC6  D02F               	goto	l24238
  3653                           
  3654                           ; BSR set to: 1
  3655                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3656  001AC8  0E00               	movlw	0
  3657  001ACA  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3658  001ACC  0EC8               	movlw	200
  3659  001ACE  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3660                           
  3661                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3662  001AD0  0E01               	movlw	1
  3663  001AD2  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3664                           
  3665                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3666  001AD4  0E01               	movlw	1
  3667  001AD6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3668                           
  3669                           ; BSR set to: 1
  3670                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3671  001AD8  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3672  001ADC  5166               	movf	(_menu_st+21)& (0+255),w,b
  3673  001ADE  ECB4  F01A         	call	_setValueToEdit
  3674  001AE2  0900               	iorlw	0
  3675  001AE4  B4D8               	btfsc	status,2,c
  3676  001AE6  0012               	return	
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3680  001AE8  0EBD               	movlw	low _menuConfiguration_stateMachine
  3681  001AEA  6E12               	movwf	sm_send_event@psm^0,c
  3682  001AEC  0E02               	movlw	high _menuConfiguration_stateMachine
  3683  001AEE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3684  001AF0  0E00               	movlw	0
  3685  001AF2  6E15               	movwf	(sm_send_event@event+1)^0,c
  3686  001AF4  0E08               	movlw	8
  3687  001AF6  6E14               	movwf	sm_send_event@event^0,c
  3688  001AF8  EC7A  F047         	call	_sm_send_event	;wreg free
  3689                           
  3690                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3691  001AFC  0E0A               	movlw	10
  3692  001AFE  6E10               	movwf	___lbdiv@divisor^0,c
  3693  001B00  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3694  001B02  EC6B  F04B         	call	___lbdiv
  3695  001B06  0DF6               	mullw	246
  3696  001B08  50F3               	movf	243,w,c
  3697  001B0A  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3698  001B0C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3699  001B0E  0E00               	movlw	0
  3700  001B10  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3701  001B12  0E14               	movlw	20
  3702  001B14  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3703  001B16  0E0A               	movlw	10
  3704  001B18  6E10               	movwf	___lbdiv@divisor^0,c
  3705  001B1A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3706  001B1C  EC6B  F04B         	call	___lbdiv
  3707  001B20  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3711                           
  3712                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3713  001B24  0012               	return	
  3714  001B26                     l24238:
  3715                           
  3716                           ; BSR set to: 1
  3717  001B26  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3718  001B28  A4D8               	btfss	status,2,c
  3719  001B2A  D023               	goto	l24250
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3723  001B2C  0E00               	movlw	0
  3724  001B2E  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3725  001B30  0E64               	movlw	100
  3726  001B32  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3727                           
  3728                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3729  001B34  5168               	movf	(_menu_st+23)& (0+255),w,b
  3730  001B36  A4D8               	btfss	status,2,c
  3731  001B38  D003               	goto	l24244
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3735  001B3A  0567               	decf	(_menu_st+22)& (0+255),w,b
  3736  001B3C  6F68               	movwf	(_menu_st+23)& (0+255),b
  3737                           
  3738                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3739  001B3E  D001               	goto	l24246
  3740  001B40                     l24244:
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3744  001B40  0768               	decf	(_menu_st+23)& (0+255),f,b
  3745  001B42                     l24246:
  3746                           
  3747                           ; BSR set to: 1
  3748                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3749  001B42  5168               	movf	(_menu_st+23)& (0+255),w,b
  3750  001B44  0D02               	mullw	2
  3751  001B46  0E52               	movlw	low (_menu_st+1)
  3752  001B48  24F3               	addwf	243,w,c
  3753  001B4A  6ED9               	movwf	fsr2l,c
  3754  001B4C  0E01               	movlw	high (_menu_st+1)
  3755  001B4E  20F4               	addwfc	prodh,w,c
  3756  001B50  6EDA               	movwf	fsr2h,c
  3757  001B52  50DF               	movf	indf2,w,c
  3758  001B54  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3759  001B56  5168               	movf	(_menu_st+23)& (0+255),w,b
  3760  001B58  0D02               	mullw	2
  3761  001B5A  0E51               	movlw	low _menu_st
  3762  001B5C  24F3               	addwf	243,w,c
  3763  001B5E  6ED9               	movwf	fsr2l,c
  3764  001B60  0E01               	movlw	high _menu_st
  3765  001B62  20F4               	addwfc	prodh,w,c
  3766  001B64  6EDA               	movwf	fsr2h,c
  3767  001B66  50DF               	movf	indf2,w,c
  3768  001B68  EC91  F04E         	call	_SetSegmentValueMain
  3769  001B6C                     l24248:
  3770                           
  3771                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3772  001B6C  0E01               	movlw	1
  3773  001B6E  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3774                           
  3775                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3776  001B70  0012               	return	
  3777  001B72                     l24250:
  3778                           
  3779                           ; BSR set to: 1
  3780  001B72  0E17               	movlw	23
  3781  001B74  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3782  001B76  A4D8               	btfss	status,2,c
  3783  001B78  D021               	goto	l24264
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3787  001B7A  0E00               	movlw	0
  3788  001B7C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3789  001B7E  0E64               	movlw	100
  3790  001B80  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3794  001B82  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3798  001B84  5167               	movf	(_menu_st+22)& (0+255),w,b
  3799  001B86  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3800  001B88  A0D8               	btfss	status,0,c
  3801  001B8A  D002               	goto	l24260
  3802                           
  3803                           ; BSR set to: 1
  3804                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3805  001B8C  0E00               	movlw	0
  3806  001B8E  6F68               	movwf	(_menu_st+23)& (0+255),b
  3807  001B90                     l24260:
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3811  001B90  5168               	movf	(_menu_st+23)& (0+255),w,b
  3812  001B92  0D02               	mullw	2
  3813  001B94  0E52               	movlw	low (_menu_st+1)
  3814  001B96  24F3               	addwf	243,w,c
  3815  001B98  6ED9               	movwf	fsr2l,c
  3816  001B9A  0E01               	movlw	high (_menu_st+1)
  3817  001B9C  20F4               	addwfc	prodh,w,c
  3818  001B9E  6EDA               	movwf	fsr2h,c
  3819  001BA0  50DF               	movf	indf2,w,c
  3820  001BA2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3821  001BA4  5168               	movf	(_menu_st+23)& (0+255),w,b
  3822  001BA6  0D02               	mullw	2
  3823  001BA8  0E51               	movlw	low _menu_st
  3824  001BAA  24F3               	addwf	243,w,c
  3825  001BAC  6ED9               	movwf	fsr2l,c
  3826  001BAE  0E01               	movlw	high _menu_st
  3827  001BB0  20F4               	addwfc	prodh,w,c
  3828  001BB2  6EDA               	movwf	fsr2h,c
  3829  001BB4  50DF               	movf	indf2,w,c
  3830  001BB6  EC91  F04E         	call	_SetSegmentValueMain
  3831  001BBA  D7D8               	goto	l24248
  3832  001BBC                     l24264:
  3833                           
  3834                           ; BSR set to: 1
  3835  001BBC  0E0C               	movlw	12
  3836  001BBE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3837  001BC0  D09B               	goto	l24320
  3838                           
  3839                           ; BSR set to: 1
  3840                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0x27 && button_struct.timer>(( 500/50)) )
  3841  001BC2  0E27               	movlw	39
  3842  001BC4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3843  001BC6  A4D8               	btfss	status,2,c
  3844  001BC8  D053               	goto	l24286
  3845                           
  3846                           ; BSR set to: 1
  3847  001BCA  0E0A               	movlw	10
  3848  001BCC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3849  001BCE  D050               	goto	l24286
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3853  001BD0  0E00               	movlw	0
  3854  001BD2  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3855  001BD4  0E64               	movlw	100
  3856  001BD6  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3857                           
  3858                           ; BSR set to: 1
  3859                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3860  001BD8  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3861  001BDC  5166               	movf	(_menu_st+21)& (0+255),w,b
  3862  001BDE  ECB4  F01A         	call	_setValueToEdit
  3863  001BE2  0900               	iorlw	0
  3864  001BE4  B4D8               	btfsc	status,2,c
  3865  001BE6  D7C2               	goto	l24248
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3869  001BE8  0EBD               	movlw	low _menuConfiguration_stateMachine
  3870  001BEA  6E12               	movwf	sm_send_event@psm^0,c
  3871  001BEC  0E02               	movlw	high _menuConfiguration_stateMachine
  3872  001BEE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3873  001BF0  0E00               	movlw	0
  3874  001BF2  6E15               	movwf	(sm_send_event@event+1)^0,c
  3875  001BF4  0E01               	movlw	1
  3876  001BF6  6E14               	movwf	sm_send_event@event^0,c
  3877  001BF8  EC7A  F047         	call	_sm_send_event	;wreg free
  3878                           
  3879                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3880  001BFC  0E98               	movlw	_var_sys_NVM& (0+255)
  3881  001BFE  0F1C               	addlw	28
  3882  001C00  0100               	movlb	0	; () banked
  3883  001C02  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3884  001C04  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3885  001C06  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3886  001C08  E101               	bnz	u29245
  3887  001C0A  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3888  001C0C                     u29245:
  3889  001C0C  B4D8               	btfsc	status,2,c
  3890  001C0E  D009               	goto	u29250
  3891                           
  3892                           ; BSR set to: 0
  3893  001C10  0E98               	movlw	_var_sys_NVM& (0+255)
  3894  001C12  0F1B               	addlw	27
  3895  001C14  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3896  001C16  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3897  001C18  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3898  001C1A  E101               	bnz	u29255
  3899  001C1C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3900  001C1E                     u29255:
  3901  001C1E  A4D8               	btfss	status,2,c
  3902  001C20  D016               	goto	l24282
  3903  001C22                     u29250:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3907  001C22  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3908  001C24  0D02               	mullw	2
  3909  001C26  0E52               	movlw	low (_menu_st+1)
  3910  001C28  24F3               	addwf	243,w,c
  3911  001C2A  6ED9               	movwf	fsr2l,c
  3912  001C2C  0E01               	movlw	high (_menu_st+1)
  3913  001C2E  20F4               	addwfc	prodh,w,c
  3914  001C30  6EDA               	movwf	fsr2h,c
  3915  001C32  50DF               	movf	indf2,w,c
  3916  001C34  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3917  001C36  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3918  001C38  0D02               	mullw	2
  3919  001C3A  0E51               	movlw	low _menu_st
  3920  001C3C  24F3               	addwf	243,w,c
  3921  001C3E  6ED9               	movwf	fsr2l,c
  3922  001C40  0E01               	movlw	high _menu_st
  3923  001C42  20F4               	addwfc	prodh,w,c
  3924  001C44  6EDA               	movwf	fsr2h,c
  3925  001C46  50DF               	movf	indf2,w,c
  3926  001C48  EC91  F04E         	call	_SetSegmentValueMain
  3927                           
  3928                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3929  001C4C  D78F               	goto	l24248
  3930  001C4E                     l24282:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3934  001C4E  0E0A               	movlw	10
  3935  001C50  6E10               	movwf	___lbdiv@divisor^0,c
  3936  001C52  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3937  001C54  EC6B  F04B         	call	___lbdiv
  3938  001C58  0DF6               	mullw	246
  3939  001C5A  50F3               	movf	243,w,c
  3940  001C5C  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3941  001C5E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3942  001C60  0E0A               	movlw	10
  3943  001C62  6E10               	movwf	___lbdiv@divisor^0,c
  3944  001C64  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3945  001C66  EC6B  F04B         	call	___lbdiv
  3946  001C6A  EC91  F04E         	call	_SetSegmentValueMain
  3947  001C6E  D77E               	goto	l24248
  3948  001C70                     l24286:
  3949                           
  3950                           ; BSR set to: 1
  3951  001C70  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3952  001C72  D008               	goto	u29270
  3953  001C74  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3954  001C76  E103               	bnz	u29260
  3955  001C78  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3956  001C7A  A0D8               	btfss	status,0,c
  3957  001C7C  D003               	goto	u29270
  3958  001C7E                     u29260:
  3959                           
  3960                           ; BSR set to: 1
  3961  001C7E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3962  001C80  A4D8               	btfss	status,2,c
  3963  001C82  D01E               	goto	l24304
  3964  001C84                     u29270:
  3965                           
  3966                           ; BSR set to: 1
  3967  001C84  0E02               	movlw	2
  3968  001C86  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3969  001C88  D01B               	goto	l24304
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3973  001C8A  0E00               	movlw	0
  3974  001C8C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3975  001C8E  0E00               	movlw	0
  3976  001C90  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3980  001C92  0EF1               	movlw	low _main_stateMachine
  3981  001C94  6E12               	movwf	sm_send_event@psm^0,c
  3982  001C96  0E01               	movlw	high _main_stateMachine
  3983  001C98  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3984  001C9A  0E00               	movlw	0
  3985  001C9C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3986  001C9E  0E07               	movlw	7
  3987  001CA0  6E14               	movwf	sm_send_event@event^0,c
  3988  001CA2  EC7A  F047         	call	_sm_send_event	;wreg free
  3989                           
  3990                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3991  001CA6  0E18               	movlw	24
  3992  001CA8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3993  001CAA  0E18               	movlw	24
  3994  001CAC  EC91  F04E         	call	_SetSegmentValueMain
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3998  001CB0  0E00               	movlw	0
  3999  001CB2  0101               	movlb	1	; () banked
  4000  001CB4  6F69               	movwf	(_menu_st+24)& (0+255),b
  4001                           
  4002                           ; BSR set to: 1
  4003                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  4004  001CB6  0E01               	movlw	1
  4005  001CB8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4006                           
  4007                           ; BSR set to: 1
  4008                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  4009  001CBA  ECE5  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4010                           
  4011                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  4012  001CBE  0012               	return	
  4013  001CC0                     l24304:
  4014                           
  4015                           ; BSR set to: 1
  4016  001CC0  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4017  001CC2  D008               	goto	u29300
  4018  001CC4  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4019  001CC6  E103               	bnz	u29290
  4020  001CC8  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4021  001CCA  A0D8               	btfss	status,0,c
  4022  001CCC  D003               	goto	u29300
  4023  001CCE                     u29290:
  4024                           
  4025                           ; BSR set to: 1
  4026  001CCE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4027  001CD0  A4D8               	btfss	status,2,c
  4028  001CD2  D004               	goto	l24312
  4029  001CD4                     u29300:
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4033  001CD4  5165               	movf	(_menu_st+20)& (0+255),w,b
  4034  001CD6  ECFF  F024         	call	_load_New_Menu
  4035  001CDA  D748               	goto	l24248
  4036  001CDC                     l24312:
  4037                           
  4038                           ; BSR set to: 1
  4039  001CDC  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4040  001CDE  D005               	goto	u29310
  4041  001CE0  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4042  001CE2  E102               	bnz	u29311
  4043  001CE4  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4044  001CE6  B0D8               	btfsc	status,0,c
  4045  001CE8                     u29311:
  4046  001CE8  0012               	return	
  4047  001CEA                     u29310:
  4048                           
  4049                           ; BSR set to: 1
  4050  001CEA  0E01               	movlw	1
  4051  001CEC  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  4052  001CEE  0012               	return	
  4053                           
  4054                           ; BSR set to: 1
  4055                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4056  001CF0  5165               	movf	(_menu_st+20)& (0+255),w,b
  4057  001CF2  ECFF  F024         	call	_load_New_Menu
  4058  001CF6  D73A               	goto	l24248
  4059  001CF8                     l24320:
  4060                           
  4061                           ; BSR set to: 1
  4062  001CF8  0E07               	movlw	7
  4063  001CFA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4064  001CFC  A4D8               	btfss	status,2,c
  4065  001CFE  D032               	goto	l24336
  4066                           
  4067                           ; BSR set to: 1
  4068  001D00  0E0A               	movlw	10
  4069  001D02  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4070  001D04  D02F               	goto	l24336
  4071                           
  4072                           ; BSR set to: 1
  4073  001D06  0E0D               	movlw	13
  4074  001D08  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4075  001D0A  B4D8               	btfsc	status,2,c
  4076  001D0C  D02B               	goto	l24336
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4080  001D0E  0E00               	movlw	0
  4081  001D10  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4082  001D12  0E64               	movlw	100
  4083  001D14  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4087  001D16  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4088  001D1A  5166               	movf	(_menu_st+21)& (0+255),w,b
  4089  001D1C  ECB4  F01A         	call	_setValueToEdit
  4090  001D20  0900               	iorlw	0
  4091  001D22  B4D8               	btfsc	status,2,c
  4092  001D24  D723               	goto	l24248
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4096  001D26  0EBD               	movlw	low _menuConfiguration_stateMachine
  4097  001D28  6E12               	movwf	sm_send_event@psm^0,c
  4098  001D2A  0E02               	movlw	high _menuConfiguration_stateMachine
  4099  001D2C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4100  001D2E  0E00               	movlw	0
  4101  001D30  6E15               	movwf	(sm_send_event@event+1)^0,c
  4102  001D32  0E08               	movlw	8
  4103  001D34  6E14               	movwf	sm_send_event@event^0,c
  4104  001D36  EC7A  F047         	call	_sm_send_event	;wreg free
  4105                           
  4106                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4107  001D3A  0E0A               	movlw	10
  4108  001D3C  6E10               	movwf	___lbdiv@divisor^0,c
  4109  001D3E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4110  001D40  EC6B  F04B         	call	___lbdiv
  4111  001D44  0DF6               	mullw	246
  4112  001D46  50F3               	movf	243,w,c
  4113  001D48  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4114  001D4A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4115  001D4C  0E00               	movlw	0
  4116  001D4E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4117  001D50  0E14               	movlw	20
  4118  001D52  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4119  001D54  0E0A               	movlw	10
  4120  001D56  6E10               	movwf	___lbdiv@divisor^0,c
  4121  001D58  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4122  001D5A  EC6B  F04B         	call	___lbdiv
  4123  001D5E  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  4124  001D62  D704               	goto	l24248
  4125  001D64                     l24336:
  4126                           
  4127                           ; BSR set to: 1
  4128  001D64  0E0D               	movlw	13
  4129  001D66  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4130  001D68  A4D8               	btfss	status,2,c
  4131  001D6A  D027               	goto	l24354
  4132                           
  4133                           ; BSR set to: 1
  4134  001D6C  51AA               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4135  001D6E  11AB               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4136  001D70  A4D8               	btfss	status,2,c
  4137  001D72  D023               	goto	l24354
  4138                           
  4139                           ; BSR set to: 1
  4140                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4141  001D74  0E00               	movlw	0
  4142  001D76  0100               	movlb	0	; () banked
  4143  001D78  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4144                           
  4145                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4146  001D7A  0E00               	movlw	0
  4147  001D7C  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4148                           
  4149                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4150  001D7E  0E00               	movlw	0
  4151  001D80  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4155  001D82  0E02               	movlw	2
  4156  001D84  EC88  F04B         	call	_SaveNVM_VarSystem
  4157                           
  4158                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4159  001D88  0EF1               	movlw	low _main_stateMachine
  4160  001D8A  6E12               	movwf	sm_send_event@psm^0,c
  4161  001D8C  0E01               	movlw	high _main_stateMachine
  4162  001D8E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4163  001D90  0E00               	movlw	0
  4164  001D92  6E15               	movwf	(sm_send_event@event+1)^0,c
  4165  001D94  0E07               	movlw	7
  4166  001D96  6E14               	movwf	sm_send_event@event^0,c
  4167  001D98  EC7A  F047         	call	_sm_send_event	;wreg free
  4168                           
  4169                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4170  001D9C  0E18               	movlw	24
  4171  001D9E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4172  001DA0  0E18               	movlw	24
  4173  001DA2  EC91  F04E         	call	_SetSegmentValueMain
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4177  001DA6  0E01               	movlw	1
  4178  001DA8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4179  001DAA                     l24350:
  4180                           
  4181                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4182  001DAA  ECE5  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4183  001DAE                     l24352:
  4184                           
  4185                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4186  001DAE  0E00               	movlw	0
  4187  001DB0  0101               	movlb	1	; () banked
  4188  001DB2  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4189  001DB4  0E00               	movlw	0
  4190  001DB6  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4191                           
  4192                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4193  001DB8  0012               	return	
  4194  001DBA                     l24354:
  4195                           
  4196                           ; BSR set to: 1
  4197  001DBA  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4198  001DBC  D008               	goto	u29400
  4199  001DBE  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4200  001DC0  E103               	bnz	u29390
  4201  001DC2  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4202  001DC4  A0D8               	btfss	status,0,c
  4203  001DC6  D003               	goto	u29400
  4204  001DC8                     u29390:
  4205                           
  4206                           ; BSR set to: 1
  4207  001DC8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4208  001DCA  A4D8               	btfss	status,2,c
  4209  001DCC  0012               	return	
  4210  001DCE                     u29400:
  4211                           
  4212                           ; BSR set to: 1
  4213                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4214  001DCE  0EF1               	movlw	low _main_stateMachine
  4215  001DD0  6E12               	movwf	sm_send_event@psm^0,c
  4216  001DD2  0E01               	movlw	high _main_stateMachine
  4217  001DD4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4218  001DD6  0E00               	movlw	0
  4219  001DD8  6E15               	movwf	(sm_send_event@event+1)^0,c
  4220  001DDA  0E07               	movlw	7
  4221  001DDC  6E14               	movwf	sm_send_event@event^0,c
  4222  001DDE  EC7A  F047         	call	_sm_send_event	;wreg free
  4223                           
  4224                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4225  001DE2  0E18               	movlw	24
  4226  001DE4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4227  001DE6  0E18               	movlw	24
  4228  001DE8  EC91  F04E         	call	_SetSegmentValueMain
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4232  001DEC  ECE5  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4233                           
  4234                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4235  001DF0  0E01               	movlw	1
  4236  001DF2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4237  001DF4  D7DC               	goto	l24352
  4238  001DF6                     l24368:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4242  001DF6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4243  001DF8  A4D8               	btfss	status,2,c
  4244  001DFA  D047               	goto	l24388
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4248  001DFC  0E00               	movlw	0
  4249  001DFE  0101               	movlb	1	; () banked
  4250  001E00  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4251  001E02  0E64               	movlw	100
  4252  001E04  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4256  001E06  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4257  001E08  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4258  001E0A  A0D8               	btfss	status,0,c
  4259  001E0C  D003               	goto	l24376
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4263  001E0E  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4264                           
  4265                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4266  001E12  D001               	goto	l24378
  4267  001E14                     l24376:
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4271  001E14  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4272  001E16                     l24378:
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4276  001E16  0E98               	movlw	_var_sys_NVM& (0+255)
  4277  001E18  0F1C               	addlw	28
  4278  001E1A  0100               	movlb	0	; () banked
  4279  001E1C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4280  001E1E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4281  001E20  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4282  001E22  E101               	bnz	u29435
  4283  001E24  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4284  001E26                     u29435:
  4285  001E26  B4D8               	btfsc	status,2,c
  4286  001E28  D009               	goto	u29440
  4287                           
  4288                           ; BSR set to: 0
  4289  001E2A  0E98               	movlw	_var_sys_NVM& (0+255)
  4290  001E2C  0F1B               	addlw	27
  4291  001E2E  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4292  001E30  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4293  001E32  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4294  001E34  E101               	bnz	u29445
  4295  001E36  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4296  001E38                     u29445:
  4297  001E38  A4D8               	btfss	status,2,c
  4298  001E3A  D016               	goto	l24384
  4299  001E3C                     u29440:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4303  001E3C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4304  001E3E  0D02               	mullw	2
  4305  001E40  0E52               	movlw	low (_menu_st+1)
  4306  001E42  24F3               	addwf	243,w,c
  4307  001E44  6ED9               	movwf	fsr2l,c
  4308  001E46  0E01               	movlw	high (_menu_st+1)
  4309  001E48  20F4               	addwfc	prodh,w,c
  4310  001E4A  6EDA               	movwf	fsr2h,c
  4311  001E4C  50DF               	movf	indf2,w,c
  4312  001E4E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4313  001E50  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4314  001E52  0D02               	mullw	2
  4315  001E54  0E51               	movlw	low _menu_st
  4316  001E56  24F3               	addwf	243,w,c
  4317  001E58  6ED9               	movwf	fsr2l,c
  4318  001E5A  0E01               	movlw	high _menu_st
  4319  001E5C  20F4               	addwfc	prodh,w,c
  4320  001E5E  6EDA               	movwf	fsr2h,c
  4321  001E60  50DF               	movf	indf2,w,c
  4322  001E62  EC91  F04E         	call	_SetSegmentValueMain
  4323                           
  4324                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4325  001E66  D682               	goto	l24248
  4326  001E68                     l24384:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4330  001E68  0E0A               	movlw	10
  4331  001E6A  6E10               	movwf	___lbdiv@divisor^0,c
  4332  001E6C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4333  001E6E  EC6B  F04B         	call	___lbdiv
  4334  001E72  0DF6               	mullw	246
  4335  001E74  50F3               	movf	243,w,c
  4336  001E76  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4337  001E78  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4338  001E7A  0E0A               	movlw	10
  4339  001E7C  6E10               	movwf	___lbdiv@divisor^0,c
  4340  001E7E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4341  001E80  EC6B  F04B         	call	___lbdiv
  4342  001E84  EC91  F04E         	call	_SetSegmentValueMain
  4343  001E88  D671               	goto	l24248
  4344  001E8A                     l24388:
  4345                           
  4346                           ; BSR set to: 0
  4347  001E8A  0E17               	movlw	23
  4348  001E8C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4349  001E8E  A4D8               	btfss	status,2,c
  4350  001E90  D045               	goto	l24408
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4354  001E92  0E00               	movlw	0
  4355  001E94  0101               	movlb	1	; () banked
  4356  001E96  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4357  001E98  0E64               	movlw	100
  4358  001E9A  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4362  001E9C  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4366  001E9E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4367  001EA0  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4368  001EA2  A0D8               	btfss	status,0,c
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4372  001EA4  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4376  001EA8  0E98               	movlw	_var_sys_NVM& (0+255)
  4377  001EAA  0F1C               	addlw	28
  4378  001EAC  0100               	movlb	0	; () banked
  4379  001EAE  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4380  001EB0  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4381  001EB2  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4382  001EB4  E101               	bnz	u29475
  4383  001EB6  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4384  001EB8                     u29475:
  4385  001EB8  B4D8               	btfsc	status,2,c
  4386  001EBA  D009               	goto	u29480
  4387                           
  4388                           ; BSR set to: 0
  4389  001EBC  0E98               	movlw	_var_sys_NVM& (0+255)
  4390  001EBE  0F1B               	addlw	27
  4391  001EC0  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4392  001EC2  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4393  001EC4  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4394  001EC6  E101               	bnz	u29485
  4395  001EC8  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4396  001ECA                     u29485:
  4397  001ECA  A4D8               	btfss	status,2,c
  4398  001ECC  D016               	goto	l24404
  4399  001ECE                     u29480:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4403  001ECE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4404  001ED0  0D02               	mullw	2
  4405  001ED2  0E52               	movlw	low (_menu_st+1)
  4406  001ED4  24F3               	addwf	243,w,c
  4407  001ED6  6ED9               	movwf	fsr2l,c
  4408  001ED8  0E01               	movlw	high (_menu_st+1)
  4409  001EDA  20F4               	addwfc	prodh,w,c
  4410  001EDC  6EDA               	movwf	fsr2h,c
  4411  001EDE  50DF               	movf	indf2,w,c
  4412  001EE0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4413  001EE2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4414  001EE4  0D02               	mullw	2
  4415  001EE6  0E51               	movlw	low _menu_st
  4416  001EE8  24F3               	addwf	243,w,c
  4417  001EEA  6ED9               	movwf	fsr2l,c
  4418  001EEC  0E01               	movlw	high _menu_st
  4419  001EEE  20F4               	addwfc	prodh,w,c
  4420  001EF0  6EDA               	movwf	fsr2h,c
  4421  001EF2  50DF               	movf	indf2,w,c
  4422  001EF4  EC91  F04E         	call	_SetSegmentValueMain
  4423                           
  4424                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4425  001EF8  D639               	goto	l24248
  4426  001EFA                     l24404:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4430  001EFA  0E0A               	movlw	10
  4431  001EFC  6E10               	movwf	___lbdiv@divisor^0,c
  4432  001EFE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4433  001F00  EC6B  F04B         	call	___lbdiv
  4434  001F04  0DF6               	mullw	246
  4435  001F06  50F3               	movf	243,w,c
  4436  001F08  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4437  001F0A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4438  001F0C  0E0A               	movlw	10
  4439  001F0E  6E10               	movwf	___lbdiv@divisor^0,c
  4440  001F10  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4441  001F12  EC6B  F04B         	call	___lbdiv
  4442  001F16  EC91  F04E         	call	_SetSegmentValueMain
  4443  001F1A  D628               	goto	l24248
  4444  001F1C                     l24408:
  4445                           
  4446                           ; BSR set to: 0
  4447  001F1C  0E27               	movlw	39
  4448  001F1E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4449  001F20  A4D8               	btfss	status,2,c
  4450  001F22  D023               	goto	l24424
  4451                           
  4452                           ; BSR set to: 0
  4453  001F24  0E09               	movlw	9
  4454  001F26  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4455  001F28  D020               	goto	l24424
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4459  001F2A  0E00               	movlw	0
  4460  001F2C  0101               	movlb	1	; () banked
  4461  001F2E  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4462  001F30  0E64               	movlw	100
  4463  001F32  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4464                           
  4465                           ; BSR set to: 1
  4466                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4467  001F34  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4468  001F38  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4469  001F3C  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4473  001F40  0EBD               	movlw	low _menuConfiguration_stateMachine
  4474  001F42  6E12               	movwf	sm_send_event@psm^0,c
  4475  001F44  0E02               	movlw	high _menuConfiguration_stateMachine
  4476  001F46  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4477  001F48  0E00               	movlw	0
  4478  001F4A  6E15               	movwf	(sm_send_event@event+1)^0,c
  4479  001F4C  0E02               	movlw	2
  4480  001F4E  6E14               	movwf	sm_send_event@event^0,c
  4481  001F50  EC7A  F047         	call	_sm_send_event	;wreg free
  4482                           
  4483                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4484  001F54  0E01               	movlw	1
  4485  001F56  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4486  001F58  0E19               	movlw	25
  4487  001F5A  EC91  F04E         	call	_SetSegmentValueMain
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4491  001F5E  0E00               	movlw	0
  4492  001F60  0101               	movlb	1	; () banked
  4493  001F62  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4494  001F64  0E28               	movlw	40
  4495  001F66  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4496  001F68  D601               	goto	l24248
  4497  001F6A                     l24424:
  4498                           
  4499                           ; BSR set to: 0
  4500  001F6A  0101               	movlb	1	; () banked
  4501  001F6C  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4502  001F6E  D008               	goto	u29520
  4503  001F70  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4504  001F72  E103               	bnz	u29510
  4505  001F74  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4506  001F76  A0D8               	btfss	status,0,c
  4507  001F78  D003               	goto	u29520
  4508  001F7A                     u29510:
  4509                           
  4510                           ; BSR set to: 1
  4511  001F7A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4512  001F7C  A4D8               	btfss	status,2,c
  4513  001F7E  0012               	return	
  4514  001F80                     u29520:
  4515                           
  4516                           ; BSR set to: 1
  4517                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4518  001F80  0E00               	movlw	0
  4519  001F82  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4520  001F84  0E64               	movlw	100
  4521  001F86  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4525  001F88  5166               	movf	(_menu_st+21)& (0+255),w,b
  4526  001F8A  ECFF  F024         	call	_load_New_Menu
  4527                           
  4528                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4529  001F8E  0EBD               	movlw	low _menuConfiguration_stateMachine
  4530  001F90  6E12               	movwf	sm_send_event@psm^0,c
  4531  001F92  0E02               	movlw	high _menuConfiguration_stateMachine
  4532  001F94  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4533  001F96  0E00               	movlw	0
  4534  001F98  6E15               	movwf	(sm_send_event@event+1)^0,c
  4535  001F9A  0E03               	movlw	3
  4536  001F9C  6E14               	movwf	sm_send_event@event^0,c
  4537  001F9E  EC7A  F047         	call	_sm_send_event	;wreg free
  4538  001FA2  D5E4               	goto	l24248
  4539  001FA4                     l24436:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4543  001FA4  0101               	movlb	1	; () banked
  4544  001FA6  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4545  001FA8  D005               	goto	u29530
  4546  001FAA  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4547  001FAC  E102               	bnz	u29531
  4548  001FAE  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4549  001FB0  B0D8               	btfsc	status,0,c
  4550  001FB2                     u29531:
  4551  001FB2  0012               	return	
  4552  001FB4                     u29530:
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4556  001FB4  0E00               	movlw	0
  4557  001FB6  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4558  001FB8  0E64               	movlw	100
  4559  001FBA  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4560                           
  4561                           ; BSR set to: 1
  4562                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4563  001FBC  0566               	decf	(_menu_st+21)& (0+255),w,b
  4564  001FBE  A4D8               	btfss	status,2,c
  4565  001FC0  D004               	goto	u29550
  4566                           
  4567                           ; BSR set to: 1
  4568  001FC2  0E08               	movlw	8
  4569  001FC4  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4570  001FC6  B4D8               	btfsc	status,2,c
  4571  001FC8  D00A               	goto	u29560
  4572  001FCA                     u29550:
  4573                           
  4574                           ; BSR set to: 1
  4575  001FCA  0E98               	movlw	_var_sys_NVM& (0+255)
  4576  001FCC  0F1C               	addlw	28
  4577  001FCE  0100               	movlb	0	; () banked
  4578  001FD0  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4579  001FD2  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4580  001FD4  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4581  001FD6  E101               	bnz	u29565
  4582  001FD8  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4583  001FDA                     u29565:
  4584  001FDA  A4D8               	btfss	status,2,c
  4585  001FDC  D005               	goto	l24448
  4586  001FDE                     u29560:
  4587                           
  4588                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4589  001FDE  0100               	movlb	0	; () banked
  4590  001FE0  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4591  001FE2  EC31  F034         	call	_ResetDefaultMemory
  4592                           
  4593                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4594  001FE6  D023               	goto	l24466
  4595  001FE8                     l24448:
  4596                           
  4597                           ; BSR set to: 0
  4598  001FE8  0101               	movlb	1	; () banked
  4599  001FEA  0566               	decf	(_menu_st+21)& (0+255),w,b
  4600  001FEC  B4D8               	btfsc	status,2,c
  4601  001FEE  D004               	goto	u29580
  4602                           
  4603                           ; BSR set to: 1
  4604  001FF0  0E0A               	movlw	10
  4605  001FF2  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4606  001FF4  A4D8               	btfss	status,2,c
  4607  001FF6  D004               	goto	l24454
  4608  001FF8                     u29580:
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4612  001FF8  0E01               	movlw	1
  4613  001FFA  EC88  F04B         	call	_SaveNVM_VarSystem
  4614                           
  4615                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4616  001FFE  D017               	goto	l24466
  4617  002000                     l24454:
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4621  002000  0568               	decf	(_menu_st+23)& (0+255),w,b
  4622  002002  A4D8               	btfss	status,2,c
  4623  002004  D00E               	goto	l24462
  4624                           
  4625                           ; BSR set to: 1
  4626  002006  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4627  00200A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4628  00200E  50DF               	movf	indf2,w,c
  4629  002010  B4D8               	btfsc	status,2,c
  4630  002012  D007               	goto	l24462
  4631                           
  4632                           ; BSR set to: 1
  4633  002014  0E06               	movlw	6
  4634  002016  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4635  002018  A4D8               	btfss	status,2,c
  4636  00201A  D003               	goto	l24462
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4640  00201C  0E09               	movlw	9
  4641  00201E  0100               	movlb	0	; () banked
  4642  002020  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4643  002022                     l24462:
  4644                           
  4645                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4646  002022  0E01               	movlw	1
  4647  002024  EC88  F04B         	call	_SaveNVM_VarSystem
  4648                           
  4649                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4650  002028  0E00               	movlw	0
  4651  00202A  EC88  F04B         	call	_SaveNVM_VarSystem
  4652  00202E                     l24466:
  4653                           
  4654                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4655  00202E  0EBD               	movlw	low _menuConfiguration_stateMachine
  4656  002030  6E12               	movwf	sm_send_event@psm^0,c
  4657  002032  0E02               	movlw	high _menuConfiguration_stateMachine
  4658  002034  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4659  002036  0E00               	movlw	0
  4660  002038  6E15               	movwf	(sm_send_event@event+1)^0,c
  4661  00203A  0E04               	movlw	4
  4662  00203C  6E14               	movwf	sm_send_event@event^0,c
  4663  00203E  EC7A  F047         	call	_sm_send_event	;wreg free
  4664                           
  4665                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4666  002042  0101               	movlb	1	; () banked
  4667  002044  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4671  002046  0E02               	movlw	2
  4672  002048  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4673  00204A  D005               	goto	l24476
  4674                           
  4675                           ; BSR set to: 1
  4676                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4677  00204C  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4681  00204E  5166               	movf	(_menu_st+21)& (0+255),w,b
  4682  002050  ECFF  F024         	call	_load_New_Menu
  4683                           
  4684                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4685  002054  0012               	return	
  4686  002056                     l24476:
  4687                           
  4688                           ; BSR set to: 1
  4689  002056  5167               	movf	(_menu_st+22)& (0+255),w,b
  4690  002058  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4691  00205A  A0D8               	btfss	status,0,c
  4692  00205C  D005               	goto	l24482
  4693                           
  4694                           ; BSR set to: 1
  4695                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4696  00205E  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4697                           
  4698                           ; BSR set to: 1
  4699                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4700  002060  5165               	movf	(_menu_st+20)& (0+255),w,b
  4701  002062  ECFF  F024         	call	_load_New_Menu
  4702                           
  4703                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4704  002066  0012               	return	
  4705  002068                     l24482:
  4706                           
  4707                           ; BSR set to: 1
  4708                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4709  002068  5166               	movf	(_menu_st+21)& (0+255),w,b
  4710  00206A  ECFF  F024         	call	_load_New_Menu
  4711  00206E  0012               	return	
  4712  002070                     l24484:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4716  002070  0101               	movlb	1	; () banked
  4717  002072  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4718  002074  D005               	goto	u29640
  4719  002076  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4720  002078  E102               	bnz	u29641
  4721  00207A  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4722  00207C  B0D8               	btfsc	status,0,c
  4723  00207E                     u29641:
  4724  00207E  0012               	return	
  4725  002080                     u29640:
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4729  002080  0100               	movlb	0	; () banked
  4730  002082  51FC               	movf	_auxCounter& (0+255),w,b
  4731  002084  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4732  002086  A4D8               	btfss	status,2,c
  4733  002088  D010               	goto	l24494
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4737  00208A  0101               	movlb	1	; () banked
  4738  00208C  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4739                           
  4740                           ; BSR set to: 1
  4741                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4742  00208E  5166               	movf	(_menu_st+21)& (0+255),w,b
  4743  002090  ECFF  F024         	call	_load_New_Menu
  4744                           
  4745                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4746  002094  0EBD               	movlw	low _menuConfiguration_stateMachine
  4747  002096  6E12               	movwf	sm_send_event@psm^0,c
  4748  002098  0E02               	movlw	high _menuConfiguration_stateMachine
  4749  00209A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4750  00209C  0E00               	movlw	0
  4751  00209E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4752  0020A0  0E04               	movlw	4
  4753  0020A2  6E14               	movwf	sm_send_event@event^0,c
  4754  0020A4  EC7A  F047         	call	_sm_send_event	;wreg free
  4755                           
  4756                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4757  0020A8  0012               	return	
  4758  0020AA                     l24494:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4762  0020AA  0E00               	movlw	0
  4763  0020AC  0101               	movlb	1	; () banked
  4764  0020AE  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4765  0020B0  0E3C               	movlw	60
  4766  0020B2  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4767                           
  4768                           ; BSR set to: 1
  4769                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4770  0020B4  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  4771  0020B8  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4772  0020BC  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4773  0020C0  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4774  0020C4  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4775  0020C8  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4776  0020CC  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4777  0020CE  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4778  0020D0  EC3F  F043         	call	___lldiv	;wreg free
  4779  0020D4  5010               	movf	?___lldiv^0,w,c
  4780  0020D6  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4781                           
  4782                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4783  0020D8  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4784  0020DC  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4785  0020E0  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4786  0020E2  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4787  0020E4  C2F6  F010         	movff	_tempCounter,___lldiv@dividend
  4788  0020E8  C2F7  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4789  0020EC  C2F8  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4790  0020F0  C2F9  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4791  0020F4  EC3F  F043         	call	___lldiv	;wreg free
  4792  0020F8  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4793  0020FC  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4794  002100  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4795  002104  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4796  002108  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  4797  00210C  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4798  002110  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4799  002112  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4800  002114  ECB5  F048         	call	___lmul	;wreg free
  4801  002118  501D               	movf	?___lmul^0,w,c
  4802  00211A  0102               	movlb	2	; () banked
  4803  00211C  5DF6               	subwf	_tempCounter& (0+255),w,b
  4804  00211E  6FF6               	movwf	_tempCounter& (0+255),b
  4805  002120  501E               	movf	(?___lmul+1)^0,w,c
  4806  002122  59F7               	subwfb	(_tempCounter+1)& (0+255),w,b
  4807  002124  6FF7               	movwf	(_tempCounter+1)& (0+255),b
  4808  002126  501F               	movf	(?___lmul+2)^0,w,c
  4809  002128  59F8               	subwfb	(_tempCounter+2)& (0+255),w,b
  4810  00212A  6FF8               	movwf	(_tempCounter+2)& (0+255),b
  4811  00212C  5020               	movf	(?___lmul+3)^0,w,c
  4812  00212E  59F9               	subwfb	(_tempCounter+3)& (0+255),w,b
  4813  002130  6FF9               	movwf	(_tempCounter+3)& (0+255),b
  4814                           
  4815                           ; BSR set to: 2
  4816                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4817  002132  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  4818  002136  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4819  00213A  0E00               	movlw	0
  4820  00213C  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4821  00213E  0E64               	movlw	100
  4822  002140  6E12               	movwf	___lwdiv@divisor^0,c
  4823  002142  EC35  F049         	call	___lwdiv	;wreg free
  4824  002146  C010  F0FC         	movff	?___lwdiv,_auxCounter
  4825  00214A  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  4826                           
  4827                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4828  00214E  0E0A               	movlw	10
  4829  002150  6E10               	movwf	___lbdiv@divisor^0,c
  4830  002152  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4831  002154  EC6B  F04B         	call	___lbdiv
  4832  002158  0DF6               	mullw	246
  4833  00215A  50F3               	movf	243,w,c
  4834  00215C  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4835  00215E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4836  002160  0E00               	movlw	0
  4837  002162  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4838  002164  0E0A               	movlw	10
  4839  002166  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4840  002168  0E0A               	movlw	10
  4841  00216A  6E10               	movwf	___lbdiv@divisor^0,c
  4842  00216C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4843  00216E  EC6B  F04B         	call	___lbdiv
  4844  002172  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  4845  002176  0012               	return	
  4846  002178                     l24504:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4850  002178  0101               	movlb	1	; () banked
  4851  00217A  05FE               	decf	_firstselectflag& (0+255),w,b
  4852  00217C  A4D8               	btfss	status,2,c
  4853  00217E  D004               	goto	l24508
  4854                           
  4855                           ; BSR set to: 1
  4856                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4857  002180  0E00               	movlw	0
  4858  002182  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4859                           
  4860                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4861  002184  0E00               	movlw	0
  4862  002186  6FFE               	movwf	_firstselectflag& (0+255),b
  4863  002188                     l24508:
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4867  002188  ECD6  F01F         	call	_controlSelectRemote	;wreg free
  4868                           
  4869                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4870  00218C  0012               	return	
  4871  00218E                     l24510:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4875  00218E  EC8A  F03E         	call	_controlSaveRemote	;wreg free
  4876                           
  4877                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4878  002192  0012               	return	
  4879  002194                     l24512:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4883  002194  EC22  F04C         	call	_controlLearnDigit	;wreg free
  4884                           
  4885                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4886  002198  0101               	movlb	1	; () banked
  4887  00219A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4888  00219C  A4D8               	btfss	status,2,c
  4889  00219E  0012               	return	
  4890                           
  4891                           ; BSR set to: 1
  4892                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4893  0021A0  0EF1               	movlw	low _main_stateMachine
  4894  0021A2  6E12               	movwf	sm_send_event@psm^0,c
  4895  0021A4  0E01               	movlw	high _main_stateMachine
  4896  0021A6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4897  0021A8  0E00               	movlw	0
  4898  0021AA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4899  0021AC  0E07               	movlw	7
  4900  0021AE  6E14               	movwf	sm_send_event@event^0,c
  4901  0021B0  EC7A  F047         	call	_sm_send_event	;wreg free
  4902                           
  4903                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4904  0021B4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4905  0021B6  6E12               	movwf	sm_send_event@psm^0,c
  4906  0021B8  0E02               	movlw	high _menuConfiguration_stateMachine
  4907  0021BA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4908  0021BC  0E00               	movlw	0
  4909  0021BE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4910  0021C0  0E04               	movlw	4
  4911  0021C2  6E14               	movwf	sm_send_event@event^0,c
  4912  0021C4  EC7A  F047         	call	_sm_send_event	;wreg free
  4913                           
  4914                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4915  0021C8  0E18               	movlw	24
  4916  0021CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4917  0021CC  0E18               	movlw	24
  4918  0021CE  EC91  F04E         	call	_SetSegmentValueMain
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4922  0021D2  0E02               	movlw	2
  4923  0021D4  EC88  F04B         	call	_SaveNVM_VarSystem
  4924  0021D8  D5E8               	goto	l24350
  4925  0021DA                     l24528:
  4926  0021DA  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4927  0021DE  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4928  0021E2  50DF               	movf	indf2,w,c
  4929  0021E4  0100               	movlb	0	; () banked
  4930  0021E6  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4931  0021E8  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4932                           
  4933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4934                           ; Switch size 1, requested type "simple"
  4935                           ; Number of cases is 1, Range of values is 0 to 0
  4936                           ; switch strategies available:
  4937                           ; Name         Instructions Cycles
  4938                           ; simple_byte            4     3 (average)
  4939                           ;	Chosen strategy is simple_byte
  4940  0021EA  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4941  0021EC  0A00               	xorlw	0	; case 0
  4942  0021EE  A4D8               	btfss	status,2,c
  4943  0021F0  0012               	return	
  4944                           
  4945                           ; BSR set to: 0
  4946                           ; Switch size 1, requested type "simple"
  4947                           ; Number of cases is 7, Range of values is 0 to 6
  4948                           ; switch strategies available:
  4949                           ; Name         Instructions Cycles
  4950                           ; simple_byte           22    12 (average)
  4951                           ;	Chosen strategy is simple_byte
  4952  0021F2  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4953  0021F4  0A00               	xorlw	0	; case 0
  4954  0021F6  B4D8               	btfsc	status,2,c
  4955  0021F8  D42F               	goto	l24218
  4956  0021FA  0A01               	xorlw	1	; case 1
  4957  0021FC  B4D8               	btfsc	status,2,c
  4958  0021FE  D5FB               	goto	l24368
  4959  002200  0A03               	xorlw	3	; case 2
  4960  002202  B4D8               	btfsc	status,2,c
  4961  002204  D6CF               	goto	l24436
  4962  002206  0A01               	xorlw	1	; case 3
  4963  002208  B4D8               	btfsc	status,2,c
  4964  00220A  D732               	goto	l24484
  4965  00220C  0A07               	xorlw	7	; case 4
  4966  00220E  B4D8               	btfsc	status,2,c
  4967  002210  D7B3               	goto	l24504
  4968  002212  0A01               	xorlw	1	; case 5
  4969  002214  B4D8               	btfsc	status,2,c
  4970  002216  D7BB               	goto	l24510
  4971  002218  0A03               	xorlw	3	; case 6
  4972  00221A  A4D8               	btfss	status,2,c
  4973  00221C  0012               	return	
  4974  00221E  D7BA               	goto	l24512
  4975  002220                     __end_of_sm_execute_menuConfiguration:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _setValueToEdit *****************
  4979 ;; Defined at:
  4980 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  menuType        1    wreg     enum E10813
  4983 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  menuType        1    6[BANK0 ] enum E10813
  4986 ;;  posindex        1    8[BANK0 ] unsigned char 
  4987 ;;  posindex        1    7[BANK0 ] unsigned char 
  4988 ;;  haveValueToE    1    9[BANK0 ] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      unsigned char 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 3F/1
  4995 ;;		On exit  : 3F/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;Total ram usage:        7 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 14
  5005 ;; This function calls:
  5006 ;;		_InitReceiver
  5007 ;;		_SaveNVM_VarSystem
  5008 ;;		_cmdMemoryIsEmpty
  5009 ;;		_load_New_Menu
  5010 ;;		_sm_send_event
  5011 ;; This function is called by:
  5012 ;;		_sm_execute_menuConfiguration
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text3
  5017  003568                     __ptext3:
  5018                           	callstack 0
  5019  003568                     _setValueToEdit:
  5020                           	callstack 14
  5021                           
  5022                           ;incstack = 0
  5023                           ;setValueToEdit@menuType stored from wreg
  5024  003568  0100               	movlb	0	; () banked
  5025  00356A  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  5026                           
  5027                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5028  00356C  0E00               	movlw	0
  5029  00356E  0100               	movlb	0	; () banked
  5030  003570  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5031                           
  5032                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5033  003572  D267               	goto	l22242
  5034  003574                     l3358:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5038  003574  C168  F169         	movff	_menu_st+23,_menu_st+24
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5042  003578  0E00               	movlw	0
  5043  00357A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5044                           
  5045                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5046  00357C  D034               	goto	l21990
  5047  00357E                     l21944:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5051  00357E  0E04               	movlw	4
  5052  003580  ECFF  F024         	call	_load_New_Menu
  5053                           
  5054                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5055  003584  D287               	goto	l22244
  5056  003586                     l21946:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5060  003586  0E05               	movlw	5
  5061  003588  ECFF  F024         	call	_load_New_Menu
  5062                           
  5063                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5064  00358C  D283               	goto	l22244
  5065  00358E                     l21948:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5069  00358E  0E06               	movlw	6
  5070  003590  ECFF  F024         	call	_load_New_Menu
  5071                           
  5072                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5073  003594  D27F               	goto	l22244
  5074  003596                     l21950:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5078  003596  0E63               	movlw	99
  5079  003598  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5083  00359A  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5087  00359E  0E9C               	movlw	low (_var_sys_NVM+4)
  5088  0035A0                     L13:
  5089  0035A0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5090  0035A2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5094  0035A4  0E01               	movlw	1
  5095  0035A6  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5096                           
  5097                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5098  0035A8  D275               	goto	l22244
  5099  0035AA                     l21958:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5103  0035AA  0E07               	movlw	7
  5104  0035AC  ECFF  F024         	call	_load_New_Menu
  5105                           
  5106                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5107  0035B0  D271               	goto	l22244
  5108  0035B2                     l21960:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5112  0035B2  0E08               	movlw	8
  5113  0035B4  ECFF  F024         	call	_load_New_Menu
  5114                           
  5115                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5116  0035B8  D26D               	goto	l22244
  5117  0035BA                     l21962:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5121  0035BA  0E09               	movlw	9
  5122  0035BC  ECFF  F024         	call	_load_New_Menu
  5123                           
  5124                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5125  0035C0  D269               	goto	l22244
  5126  0035C2                     l21964:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5130  0035C2  0E02               	movlw	2
  5131  0035C4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5135  0035C6  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5139  0035CA  0EA4               	movlw	low (_var_sys_NVM+12)
  5140  0035CC  D7E9               	goto	L13
  5141  0035CE                     l21972:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5145  0035CE  0E03               	movlw	3
  5146  0035D0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5150  0035D2  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5154  0035D6  0EA5               	movlw	low (_var_sys_NVM+13)
  5155  0035D8  D7E3               	goto	L13
  5156  0035DA                     l21980:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5160  0035DA  0E01               	movlw	1
  5161  0035DC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5165  0035DE  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5169  0035E2  0EA6               	movlw	low (_var_sys_NVM+14)
  5170  0035E4  D7DD               	goto	L13
  5171  0035E6                     l21990:
  5172                           
  5173                           ; BSR set to: 0
  5174  0035E6  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5175  0035E8  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5176  0035EA  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5177                           
  5178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5179                           ; Switch size 1, requested type "simple"
  5180                           ; Number of cases is 1, Range of values is 0 to 0
  5181                           ; switch strategies available:
  5182                           ; Name         Instructions Cycles
  5183                           ; simple_byte            4     3 (average)
  5184                           ;	Chosen strategy is simple_byte
  5185  0035EC  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5186  0035EE  0A00               	xorlw	0	; case 0
  5187  0035F0  A4D8               	btfss	status,2,c
  5188  0035F2  D250               	goto	l22244
  5189                           
  5190                           ; BSR set to: 0
  5191                           ; Switch size 1, requested type "simple"
  5192                           ; Number of cases is 10, Range of values is 0 to 9
  5193                           ; switch strategies available:
  5194                           ; Name         Instructions Cycles
  5195                           ; simple_byte           31    16 (average)
  5196                           ;	Chosen strategy is simple_byte
  5197  0035F4  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5198  0035F6  0A00               	xorlw	0	; case 0
  5199  0035F8  B4D8               	btfsc	status,2,c
  5200  0035FA  D7C1               	goto	l21944
  5201  0035FC  0A01               	xorlw	1	; case 1
  5202  0035FE  B4D8               	btfsc	status,2,c
  5203  003600  D7C2               	goto	l21946
  5204  003602  0A03               	xorlw	3	; case 2
  5205  003604  B4D8               	btfsc	status,2,c
  5206  003606  D7C3               	goto	l21948
  5207  003608  0A01               	xorlw	1	; case 3
  5208  00360A  B4D8               	btfsc	status,2,c
  5209  00360C  D7C4               	goto	l21950
  5210  00360E  0A07               	xorlw	7	; case 4
  5211  003610  B4D8               	btfsc	status,2,c
  5212  003612  D7CB               	goto	l21958
  5213  003614  0A01               	xorlw	1	; case 5
  5214  003616  B4D8               	btfsc	status,2,c
  5215  003618  D7CC               	goto	l21960
  5216  00361A  0A03               	xorlw	3	; case 6
  5217  00361C  B4D8               	btfsc	status,2,c
  5218  00361E  D7CD               	goto	l21962
  5219  003620  0A01               	xorlw	1	; case 7
  5220  003622  B4D8               	btfsc	status,2,c
  5221  003624  D7CE               	goto	l21964
  5222  003626  0A0F               	xorlw	15	; case 8
  5223  003628  B4D8               	btfsc	status,2,c
  5224  00362A  D7D1               	goto	l21972
  5225  00362C  0A01               	xorlw	1	; case 9
  5226  00362E  B4D8               	btfsc	status,2,c
  5227  003630  D7D4               	goto	l21980
  5228  003632  D230               	goto	l22244
  5229  003634                     l3372:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5233  003634  C168  F169         	movff	_menu_st+23,_menu_st+24
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5237  003638  0E01               	movlw	1
  5238  00363A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5239                           
  5240                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5241  00363C  0E00               	movlw	0
  5242  00363E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5243                           
  5244                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5245  003640  D057               	goto	l22046
  5246  003642                     l21994:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5250  003642  0E0A               	movlw	10
  5251  003644  ECFF  F024         	call	_load_New_Menu
  5252                           
  5253                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5254  003648  D225               	goto	l22244
  5255  00364A                     l21996:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5259  00364A  0E0B               	movlw	11
  5260  00364C  ECFF  F024         	call	_load_New_Menu
  5261                           
  5262                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5263  003650  D221               	goto	l22244
  5264  003652                     l21998:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5268  003652  0E63               	movlw	99
  5269  003654  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5273  003656  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5277  00365A  0EAC               	movlw	low (_var_sys_NVM+20)
  5278  00365C  D7A1               	goto	L13
  5279  00365E                     l22006:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5283  00365E  0E09               	movlw	9
  5284  003660  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5285                           
  5286                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5287  003662  0E01               	movlw	1
  5288  003664  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5292  003666  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5296  00366A  0EAD               	movlw	low (_var_sys_NVM+21)
  5297  00366C  D799               	goto	L13
  5298  00366E                     l3380:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5302  00366E  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5306  003672  0EAF               	movlw	low (_var_sys_NVM+23)
  5307  003674  D795               	goto	L13
  5308  003676                     l22018:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5312  003676  0E09               	movlw	9
  5313  003678  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5314                           
  5315                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5316  00367A  0E01               	movlw	1
  5317  00367C  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5321  00367E  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5325  003682  0EB0               	movlw	low (_var_sys_NVM+24)
  5326  003684  D78D               	goto	L13
  5327  003686                     l22026:
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5331  003686  0E00               	movlw	0
  5332  003688  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5333                           
  5334                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5335  00368A  0E00               	movlw	0
  5336  00368C  0101               	movlb	1	; () banked
  5337  00368E  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5338  003690  0E00               	movlw	0
  5339  003692  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5340                           
  5341                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5342  003694  0E27               	movlw	39
  5343  003696  0100               	movlb	0	; () banked
  5344  003698  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5345  00369A  0E10               	movlw	16
  5346  00369C  6FFC               	movwf	_auxCounter& (0+255),b
  5347                           
  5348                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5349  00369E  0E00               	movlw	0
  5350  0036A0  0101               	movlb	1	; () banked
  5351  0036A2  6FC5               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5352  0036A4  0E00               	movlw	0
  5353  0036A6  6FC4               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5354                           
  5355                           ; BSR set to: 1
  5356                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5357  0036A8  C13C  F2F6         	movff	_var_sys+60,_tempCounter	;volatile
  5358  0036AC  C13D  F2F7         	movff	_var_sys+61,_tempCounter+1	;volatile
  5359  0036B0  C13E  F2F8         	movff	_var_sys+62,_tempCounter+2	;volatile
  5360  0036B4  C13F  F2F9         	movff	_var_sys+63,_tempCounter+3	;volatile
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5364  0036B8  0EBD               	movlw	low _menuConfiguration_stateMachine
  5365  0036BA  6E12               	movwf	sm_send_event@psm^0,c
  5366  0036BC  0E02               	movlw	high _menuConfiguration_stateMachine
  5367  0036BE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5368  0036C0  0E00               	movlw	0
  5369  0036C2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5370  0036C4  0E05               	movlw	5
  5371  0036C6  6E14               	movwf	sm_send_event@event^0,c
  5372  0036C8  EC7A  F047         	call	_sm_send_event	;wreg free
  5373                           
  5374                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5375  0036CC  D1E3               	goto	l22244
  5376  0036CE                     l22032:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5380  0036CE  0E00               	movlw	0
  5381  0036D0  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5382                           
  5383                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5384  0036D2  0E01               	movlw	1
  5385  0036D4  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5389  0036D6  0E00               	movlw	0
  5390  0036D8  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5391  0036DA  0E00               	movlw	0
  5392  0036DC  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5393                           
  5394                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5395  0036DE  D1DA               	goto	l22244
  5396  0036E0                     l22036:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5400  0036E0  0E03               	movlw	3
  5401  0036E2  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5402                           
  5403                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5404  0036E4  0E00               	movlw	0
  5405  0036E6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5409  0036E8  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5413  0036EC  0EB1               	movlw	low (_var_sys_NVM+25)
  5414  0036EE  D758               	goto	L13
  5415  0036F0                     l22046:
  5416                           
  5417                           ; BSR set to: 0
  5418  0036F0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5419  0036F2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5420  0036F4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5421                           
  5422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5423                           ; Switch size 1, requested type "simple"
  5424                           ; Number of cases is 1, Range of values is 0 to 0
  5425                           ; switch strategies available:
  5426                           ; Name         Instructions Cycles
  5427                           ; simple_byte            4     3 (average)
  5428                           ;	Chosen strategy is simple_byte
  5429  0036F6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5430  0036F8  0A00               	xorlw	0	; case 0
  5431  0036FA  A4D8               	btfss	status,2,c
  5432  0036FC  D1CB               	goto	l22244
  5433                           
  5434                           ; BSR set to: 0
  5435                           ; Switch size 1, requested type "simple"
  5436                           ; Number of cases is 10, Range of values is 0 to 9
  5437                           ; switch strategies available:
  5438                           ; Name         Instructions Cycles
  5439                           ; simple_byte           31    16 (average)
  5440                           ;	Chosen strategy is simple_byte
  5441  0036FE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5442  003700  0A00               	xorlw	0	; case 0
  5443  003702  B4D8               	btfsc	status,2,c
  5444  003704  D79E               	goto	l21994
  5445  003706  0A01               	xorlw	1	; case 1
  5446  003708  B4D8               	btfsc	status,2,c
  5447  00370A  D79F               	goto	l21996
  5448  00370C  0A03               	xorlw	3	; case 2
  5449  00370E  B4D8               	btfsc	status,2,c
  5450  003710  D7A0               	goto	l21998
  5451  003712  0A01               	xorlw	1	; case 3
  5452  003714  B4D8               	btfsc	status,2,c
  5453  003716  D7A3               	goto	l22006
  5454  003718  0A07               	xorlw	7	; case 4
  5455  00371A  B4D8               	btfsc	status,2,c
  5456  00371C  D1BB               	goto	l22244
  5457  00371E  0A01               	xorlw	1	; case 5
  5458  003720  B4D8               	btfsc	status,2,c
  5459  003722  D7A5               	goto	l3380
  5460  003724  0A03               	xorlw	3	; case 6
  5461  003726  B4D8               	btfsc	status,2,c
  5462  003728  D7A6               	goto	l22018
  5463  00372A  0A01               	xorlw	1	; case 7
  5464  00372C  B4D8               	btfsc	status,2,c
  5465  00372E  D7AB               	goto	l22026
  5466  003730  0A0F               	xorlw	15	; case 8
  5467  003732  B4D8               	btfsc	status,2,c
  5468  003734  D7CC               	goto	l22032
  5469  003736  0A01               	xorlw	1	; case 9
  5470  003738  B4D8               	btfsc	status,2,c
  5471  00373A  D7D2               	goto	l22036
  5472  00373C  D1AB               	goto	l22244
  5473  00373E                     l22048:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5477  00373E  0EBD               	movlw	low _menuConfiguration_stateMachine
  5478  003740  6E12               	movwf	sm_send_event@psm^0,c
  5479  003742  0E02               	movlw	high _menuConfiguration_stateMachine
  5480  003744  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5481  003746  0E00               	movlw	0
  5482  003748  6E15               	movwf	(sm_send_event@event+1)^0,c
  5483  00374A  0E14               	movlw	20
  5484  00374C  6E14               	movwf	sm_send_event@event^0,c
  5485  00374E  EC7A  F047         	call	_sm_send_event	;wreg free
  5486                           
  5487                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5488  003752  0EE6               	movlw	low _controlGate_stateMachine
  5489  003754  6E12               	movwf	sm_send_event@psm^0,c
  5490  003756  0E01               	movlw	high _controlGate_stateMachine
  5491  003758  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5492  00375A  0E00               	movlw	0
  5493  00375C  6E15               	movwf	(sm_send_event@event+1)^0,c
  5494  00375E  0E14               	movlw	20
  5495  003760  6E14               	movwf	sm_send_event@event^0,c
  5496  003762  EC7A  F047         	call	_sm_send_event	;wreg free
  5497                           
  5498                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5499  003766  0E01               	movlw	1
  5500  003768  0101               	movlb	1	; () banked
  5501  00376A  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5505  00376C  0E00               	movlw	0
  5506  00376E  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5507                           
  5508                           ; BSR set to: 1
  5509                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5510  003770  0E01               	movlw	1
  5511  003772  EC88  F04B         	call	_SaveNVM_VarSystem
  5512                           
  5513                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5514  003776  D18E               	goto	l22244
  5515  003778                     l22056:
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5519  003778  0EBD               	movlw	low _menuConfiguration_stateMachine
  5520  00377A  6E12               	movwf	sm_send_event@psm^0,c
  5521  00377C  0E02               	movlw	high _menuConfiguration_stateMachine
  5522  00377E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5523  003780  0E00               	movlw	0
  5524  003782  6E15               	movwf	(sm_send_event@event+1)^0,c
  5525  003784  0E14               	movlw	20
  5526  003786  6E14               	movwf	sm_send_event@event^0,c
  5527  003788  EC7A  F047         	call	_sm_send_event	;wreg free
  5528                           
  5529                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5530  00378C  0EE6               	movlw	low _controlGate_stateMachine
  5531  00378E  6E12               	movwf	sm_send_event@psm^0,c
  5532  003790  0E01               	movlw	high _controlGate_stateMachine
  5533  003792  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5534  003794  0E00               	movlw	0
  5535  003796  6E15               	movwf	(sm_send_event@event+1)^0,c
  5536  003798  0E14               	movlw	20
  5537  00379A  6E14               	movwf	sm_send_event@event^0,c
  5538  00379C  EC7A  F047         	call	_sm_send_event	;wreg free
  5539                           
  5540                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5541  0037A0  0E01               	movlw	1
  5542  0037A2  0101               	movlb	1	; () banked
  5543  0037A4  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5547  0037A6  0E01               	movlw	1
  5548  0037A8  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5549                           
  5550                           ; BSR set to: 1
  5551                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5552  0037AA  0E01               	movlw	1
  5553  0037AC  EC88  F04B         	call	_SaveNVM_VarSystem
  5554                           
  5555                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5556  0037B0  D171               	goto	l22244
  5557  0037B2                     l3390:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5561  0037B2  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5565  0037B6  0E03               	movlw	3
  5566  0037B8  ECFF  F024         	call	_load_New_Menu
  5567                           
  5568                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5569  0037BC  0EB4               	movlw	low (_var_sys_NVM+28)
  5570  0037BE  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5571  0037C0  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5572                           
  5573                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5574  0037C2  0E01               	movlw	1
  5575  0037C4  0100               	movlb	0	; () banked
  5576  0037C6  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5580  0037C8  0E02               	movlw	2
  5581  0037CA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5585  0037CC  0E00               	movlw	0
  5586  0037CE  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5587                           
  5588                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5589  0037D0  D161               	goto	l22244
  5590  0037D2                     l3391:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5594  0037D2  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5598  0037D6  0E02               	movlw	2
  5599  0037D8  ECFF  F024         	call	_load_New_Menu
  5600                           
  5601                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5602  0037DC  0EB3               	movlw	low (_var_sys_NVM+27)
  5603  0037DE  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5604  0037E0  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5605                           
  5606                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5607  0037E2  0E01               	movlw	1
  5608  0037E4  0100               	movlb	0	; () banked
  5609  0037E6  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5613  0037E8  0E01               	movlw	1
  5614  0037EA  D7EF               	goto	L14
  5615  0037EC                     l22086:
  5616                           
  5617                           ; BSR set to: 0
  5618  0037EC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5619  0037EE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5620  0037F0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5621                           
  5622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5623                           ; Switch size 1, requested type "simple"
  5624                           ; Number of cases is 1, Range of values is 0 to 0
  5625                           ; switch strategies available:
  5626                           ; Name         Instructions Cycles
  5627                           ; simple_byte            4     3 (average)
  5628                           ;	Chosen strategy is simple_byte
  5629  0037F2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5630  0037F4  0A00               	xorlw	0	; case 0
  5631  0037F6  A4D8               	btfss	status,2,c
  5632  0037F8  D14D               	goto	l22244
  5633                           
  5634                           ; BSR set to: 0
  5635                           ; Switch size 1, requested type "simple"
  5636                           ; Number of cases is 4, Range of values is 0 to 3
  5637                           ; switch strategies available:
  5638                           ; Name         Instructions Cycles
  5639                           ; simple_byte           13     7 (average)
  5640                           ;	Chosen strategy is simple_byte
  5641  0037FA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5642  0037FC  0A00               	xorlw	0	; case 0
  5643  0037FE  B4D8               	btfsc	status,2,c
  5644  003800  D79E               	goto	l22048
  5645  003802  0A01               	xorlw	1	; case 1
  5646  003804  B4D8               	btfsc	status,2,c
  5647  003806  D7B8               	goto	l22056
  5648  003808  0A03               	xorlw	3	; case 2
  5649  00380A  B4D8               	btfsc	status,2,c
  5650  00380C  D7D2               	goto	l3390
  5651  00380E  0A01               	xorlw	1	; case 3
  5652  003810  B4D8               	btfsc	status,2,c
  5653  003812  D7DF               	goto	l3391
  5654  003814  D13F               	goto	l22244
  5655  003816                     l22088:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5659  003816  0E98               	movlw	low _var_sys_NVM
  5660  003818  D001               	goto	L15
  5661  00381A                     l22090:
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5665  00381A  0E99               	movlw	low (_var_sys_NVM+1)
  5666  00381C                     L15:
  5667  00381C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5668  00381E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5669                           
  5670                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5671  003820  D00E               	goto	l22096
  5672  003822                     l22094:
  5673                           
  5674                           ; BSR set to: 0
  5675  003822  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5676  003824  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5677  003826  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5678                           
  5679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5680                           ; Switch size 1, requested type "simple"
  5681                           ; Number of cases is 1, Range of values is 0 to 0
  5682                           ; switch strategies available:
  5683                           ; Name         Instructions Cycles
  5684                           ; simple_byte            4     3 (average)
  5685                           ;	Chosen strategy is simple_byte
  5686  003828  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5687  00382A  0A00               	xorlw	0	; case 0
  5688  00382C  A4D8               	btfss	status,2,c
  5689  00382E  D007               	goto	l22096
  5690                           
  5691                           ; BSR set to: 0
  5692                           ; Switch size 1, requested type "simple"
  5693                           ; Number of cases is 2, Range of values is 0 to 1
  5694                           ; switch strategies available:
  5695                           ; Name         Instructions Cycles
  5696                           ; simple_byte            7     4 (average)
  5697                           ;	Chosen strategy is simple_byte
  5698  003830  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5699  003832  0A00               	xorlw	0	; case 0
  5700  003834  B4D8               	btfsc	status,2,c
  5701  003836  D7EF               	goto	l22088
  5702  003838  0A01               	xorlw	1	; case 1
  5703  00383A  B4D8               	btfsc	status,2,c
  5704  00383C  D7EE               	goto	l22090
  5705  00383E                     l22096:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5709  00383E  0E2D               	movlw	45
  5710  003840                     L29:
  5711  003840  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5712                           
  5713                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5714  003842  0E00               	movlw	0
  5715  003844  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5716  003846                     L19:
  5717                           
  5718                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5719  003846  0E01               	movlw	1
  5720  003848  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5724  00384A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5725  00384E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5726  003852  50DF               	movf	indf2,w,c
  5727  003854  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5728                           
  5729                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5730  003856  D11E               	goto	l22244
  5731  003858                     l22100:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5735  003858  0E09               	movlw	9
  5736  00385A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5737                           
  5738                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5739  00385C  0E00               	movlw	0
  5740  00385E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5741                           
  5742                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5743  003860  D00F               	goto	l22116
  5744  003862                     l22102:
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5748  003862  0E02               	movlw	2
  5749  003864  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5750  003866  D002               	goto	l22106
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5754  003868  0E00               	movlw	0
  5755  00386A  D001               	goto	L16
  5756  00386C                     l22106:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5760  00386C  0E09               	movlw	9
  5761  00386E                     L16:
  5762  00386E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5766  003870  0E9A               	movlw	low (_var_sys_NVM+2)
  5767  003872  D003               	goto	L18
  5768  003874                     l22110:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5772  003874  0E9B               	movlw	low (_var_sys_NVM+3)
  5773  003876  D001               	goto	L18
  5774  003878                     l22112:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5778  003878  0EA7               	movlw	low (_var_sys_NVM+15)
  5779  00387A                     L18:
  5780  00387A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5781  00387C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5782                           
  5783                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5784  00387E  D7E3               	goto	L19
  5785  003880                     l22116:
  5786                           
  5787                           ; BSR set to: 0
  5788  003880  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5789  003882  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5790  003884  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5791                           
  5792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5793                           ; Switch size 1, requested type "simple"
  5794                           ; Number of cases is 1, Range of values is 0 to 0
  5795                           ; switch strategies available:
  5796                           ; Name         Instructions Cycles
  5797                           ; simple_byte            4     3 (average)
  5798                           ;	Chosen strategy is simple_byte
  5799  003886  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5800  003888  0A00               	xorlw	0	; case 0
  5801  00388A  A4D8               	btfss	status,2,c
  5802  00388C  D7DC               	goto	L19
  5803                           
  5804                           ; BSR set to: 0
  5805                           ; Switch size 1, requested type "simple"
  5806                           ; Number of cases is 3, Range of values is 0 to 2
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte           10     6 (average)
  5810                           ;	Chosen strategy is simple_byte
  5811  00388E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5812  003890  0A00               	xorlw	0	; case 0
  5813  003892  B4D8               	btfsc	status,2,c
  5814  003894  D7E6               	goto	l22102
  5815  003896  0A01               	xorlw	1	; case 1
  5816  003898  B4D8               	btfsc	status,2,c
  5817  00389A  D7EC               	goto	l22110
  5818  00389C  0A03               	xorlw	3	; case 2
  5819  00389E  B4D8               	btfsc	status,2,c
  5820  0038A0  D7EB               	goto	l22112
  5821  0038A2  D7D1               	goto	L19
  5822  0038A4                     l22122:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5826  0038A4  0E9D               	movlw	low (_var_sys_NVM+5)
  5827  0038A6  D001               	goto	L20
  5828  0038A8                     l22124:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5832  0038A8  0E9E               	movlw	low (_var_sys_NVM+6)
  5833  0038AA                     L20:
  5834  0038AA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5835  0038AC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5836                           
  5837                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5838  0038AE  D00E               	goto	l22130
  5839  0038B0                     l22128:
  5840                           
  5841                           ; BSR set to: 0
  5842  0038B0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5843  0038B2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5844  0038B4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5845                           
  5846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5847                           ; Switch size 1, requested type "simple"
  5848                           ; Number of cases is 1, Range of values is 0 to 0
  5849                           ; switch strategies available:
  5850                           ; Name         Instructions Cycles
  5851                           ; simple_byte            4     3 (average)
  5852                           ;	Chosen strategy is simple_byte
  5853  0038B6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5854  0038B8  0A00               	xorlw	0	; case 0
  5855  0038BA  A4D8               	btfss	status,2,c
  5856  0038BC  D007               	goto	l22130
  5857                           
  5858                           ; BSR set to: 0
  5859                           ; Switch size 1, requested type "simple"
  5860                           ; Number of cases is 2, Range of values is 0 to 1
  5861                           ; switch strategies available:
  5862                           ; Name         Instructions Cycles
  5863                           ; simple_byte            7     4 (average)
  5864                           ;	Chosen strategy is simple_byte
  5865  0038BE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5866  0038C0  0A00               	xorlw	0	; case 0
  5867  0038C2  B4D8               	btfsc	status,2,c
  5868  0038C4  D7EF               	goto	l22122
  5869  0038C6  0A01               	xorlw	1	; case 1
  5870  0038C8  B4D8               	btfsc	status,2,c
  5871  0038CA  D7EE               	goto	l22124
  5872  0038CC                     l22130:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5876  0038CC  0E63               	movlw	99
  5877  0038CE  D7B8               	goto	L29
  5878  0038D0                     l22134:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5882  0038D0  0E9F               	movlw	low (_var_sys_NVM+7)
  5883  0038D2  D034               	goto	L127
  5884  0038D4                     l22136:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5888  0038D4  0EA0               	movlw	low (_var_sys_NVM+8)
  5889  0038D6  D032               	goto	L127
  5890  0038D8                     l22140:
  5891                           
  5892                           ; BSR set to: 0
  5893  0038D8  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5894  0038DA  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5895  0038DC  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5896                           
  5897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5898                           ; Switch size 1, requested type "simple"
  5899                           ; Number of cases is 1, Range of values is 0 to 0
  5900                           ; switch strategies available:
  5901                           ; Name         Instructions Cycles
  5902                           ; simple_byte            4     3 (average)
  5903                           ;	Chosen strategy is simple_byte
  5904  0038DE  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5905  0038E0  0A00               	xorlw	0	; case 0
  5906  0038E2  A4D8               	btfss	status,2,c
  5907  0038E4  D02D               	goto	L126
  5908                           
  5909                           ; BSR set to: 0
  5910                           ; Switch size 1, requested type "simple"
  5911                           ; Number of cases is 2, Range of values is 0 to 1
  5912                           ; switch strategies available:
  5913                           ; Name         Instructions Cycles
  5914                           ; simple_byte            7     4 (average)
  5915                           ;	Chosen strategy is simple_byte
  5916  0038E6  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5917  0038E8  0A00               	xorlw	0	; case 0
  5918  0038EA  B4D8               	btfsc	status,2,c
  5919  0038EC  D7F1               	goto	l22134
  5920  0038EE  0A01               	xorlw	1	; case 1
  5921  0038F0  B4D8               	btfsc	status,2,c
  5922  0038F2  D7F0               	goto	l22136
  5923  0038F4  D025               	goto	L126
  5924  0038F6                     l22146:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5928  0038F6  0EA1               	movlw	low (_var_sys_NVM+9)
  5929  0038F8  D021               	goto	L127
  5930  0038FA                     l22148:
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5934  0038FA  0EA2               	movlw	low (_var_sys_NVM+10)
  5935  0038FC  D01F               	goto	L127
  5936  0038FE                     l22150:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5940  0038FE  0EA3               	movlw	low (_var_sys_NVM+11)
  5941  003900  D01D               	goto	L127
  5942  003902                     l22152:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5946  003902  0EAE               	movlw	low (_var_sys_NVM+22)
  5947  003904  D01B               	goto	L127
  5948  003906                     l22156:
  5949                           
  5950                           ; BSR set to: 0
  5951  003906  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5952  003908  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5953  00390A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5954                           
  5955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5956                           ; Switch size 1, requested type "simple"
  5957                           ; Number of cases is 1, Range of values is 0 to 0
  5958                           ; switch strategies available:
  5959                           ; Name         Instructions Cycles
  5960                           ; simple_byte            4     3 (average)
  5961                           ;	Chosen strategy is simple_byte
  5962  00390C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5963  00390E  0A00               	xorlw	0	; case 0
  5964  003910  A4D8               	btfss	status,2,c
  5965  003912  D016               	goto	L126
  5966                           
  5967                           ; BSR set to: 0
  5968                           ; Switch size 1, requested type "simple"
  5969                           ; Number of cases is 4, Range of values is 0 to 3
  5970                           ; switch strategies available:
  5971                           ; Name         Instructions Cycles
  5972                           ; simple_byte           13     7 (average)
  5973                           ;	Chosen strategy is simple_byte
  5974  003914  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5975  003916  0A00               	xorlw	0	; case 0
  5976  003918  B4D8               	btfsc	status,2,c
  5977  00391A  D7ED               	goto	l22146
  5978  00391C  0A01               	xorlw	1	; case 1
  5979  00391E  B4D8               	btfsc	status,2,c
  5980  003920  D7EC               	goto	l22148
  5981  003922  0A03               	xorlw	3	; case 2
  5982  003924  B4D8               	btfsc	status,2,c
  5983  003926  D7EB               	goto	l22150
  5984  003928  0A01               	xorlw	1	; case 3
  5985  00392A  B4D8               	btfsc	status,2,c
  5986  00392C  D7EA               	goto	l22152
  5987  00392E  D008               	goto	L126
  5988  003930                     l22162:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5992  003930  0EA8               	movlw	low (_var_sys_NVM+16)
  5993  003932  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5994  003934  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5998  003936  0E02               	movlw	2
  5999  003938  D783               	goto	L29
  6000  00393A                     l22168:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  6004  00393A  0EA9               	movlw	low (_var_sys_NVM+17)
  6005  00393C                     L127:
  6006  00393C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6007  00393E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6008  003940                     L126:
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  6012  003940  0E01               	movlw	1
  6013  003942  D77E               	goto	L29
  6014  003944                     l22176:
  6015                           
  6016                           ; BSR set to: 0
  6017  003944  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6018  003946  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6019  003948  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6020                           
  6021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6022                           ; Switch size 1, requested type "simple"
  6023                           ; Number of cases is 1, Range of values is 0 to 0
  6024                           ; switch strategies available:
  6025                           ; Name         Instructions Cycles
  6026                           ; simple_byte            4     3 (average)
  6027                           ;	Chosen strategy is simple_byte
  6028  00394A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6029  00394C  0A00               	xorlw	0	; case 0
  6030  00394E  A4D8               	btfss	status,2,c
  6031  003950  D77A               	goto	L19
  6032                           
  6033                           ; BSR set to: 0
  6034                           ; Switch size 1, requested type "simple"
  6035                           ; Number of cases is 2, Range of values is 0 to 1
  6036                           ; switch strategies available:
  6037                           ; Name         Instructions Cycles
  6038                           ; simple_byte            7     4 (average)
  6039                           ;	Chosen strategy is simple_byte
  6040  003952  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6041  003954  0A00               	xorlw	0	; case 0
  6042  003956  B4D8               	btfsc	status,2,c
  6043  003958  D7EB               	goto	l22162
  6044  00395A  0A01               	xorlw	1	; case 1
  6045  00395C  B4D8               	btfsc	status,2,c
  6046  00395E  D7ED               	goto	l22168
  6047  003960  D772               	goto	L19
  6048  003962                     l22182:
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6052  003962  0EAA               	movlw	low (_var_sys_NVM+18)
  6053  003964  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6054  003966  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6058  003968  0E09               	movlw	9
  6059  00396A  D76A               	goto	L29
  6060  00396C                     l22188:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6064  00396C  0EAB               	movlw	low (_var_sys_NVM+19)
  6065  00396E  D7FA               	goto	L27
  6066  003970                     l22196:
  6067                           
  6068                           ; BSR set to: 0
  6069  003970  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6070  003972  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6071  003974  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6072                           
  6073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6074                           ; Switch size 1, requested type "simple"
  6075                           ; Number of cases is 1, Range of values is 0 to 0
  6076                           ; switch strategies available:
  6077                           ; Name         Instructions Cycles
  6078                           ; simple_byte            4     3 (average)
  6079                           ;	Chosen strategy is simple_byte
  6080  003976  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6081  003978  0A00               	xorlw	0	; case 0
  6082  00397A  A4D8               	btfss	status,2,c
  6083  00397C  D764               	goto	L19
  6084                           
  6085                           ; BSR set to: 0
  6086                           ; Switch size 1, requested type "simple"
  6087                           ; Number of cases is 2, Range of values is 0 to 1
  6088                           ; switch strategies available:
  6089                           ; Name         Instructions Cycles
  6090                           ; simple_byte            7     4 (average)
  6091                           ;	Chosen strategy is simple_byte
  6092  00397E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6093  003980  0A00               	xorlw	0	; case 0
  6094  003982  B4D8               	btfsc	status,2,c
  6095  003984  D7EE               	goto	l22182
  6096  003986  0A01               	xorlw	1	; case 1
  6097  003988  B4D8               	btfsc	status,2,c
  6098  00398A  D7F0               	goto	l22188
  6099  00398C  D75C               	goto	L19
  6100  00398E                     l22202:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6104  00398E  0EFC               	movlw	low setValueToEdit@value
  6105  003990  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6106  003992  0E01               	movlw	high setValueToEdit@value
  6107  003994  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6111  003996  0E00               	movlw	0
  6112  003998  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6113  00399A  D00D               	goto	l22212
  6114  00399C                     l3438:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6118  00399C  C0DF  F1FC         	movff	setValueToEdit@posindex,setValueToEdit@value
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6122  0039A0  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6123  0039A4  0101               	movlb	1	; () banked
  6124  0039A6  5168               	movf	(_menu_st+23)& (0+255),w,b
  6125  0039A8  ECD0  F040         	call	_cmdMemoryIsEmpty
  6126  0039AC  0900               	iorlw	0
  6127  0039AE  A4D8               	btfss	status,2,c
  6128  0039B0  D008               	goto	u25590
  6129                           
  6130                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6131  0039B2  0100               	movlb	0	; () banked
  6132  0039B4  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6133  0039B6                     l22212:
  6134                           
  6135                           ; BSR set to: 0
  6136  0039B6  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6137  0039BA  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6138  0039BC  5CDE               	subwf	postinc2,w,c
  6139  0039BE  B0D8               	btfsc	status,0,c
  6140  0039C0  D7ED               	goto	l3438
  6141  0039C2                     u25590:
  6142                           
  6143                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6144  0039C2  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6145  0039C6  D018               	goto	L28
  6146  0039C8                     l22216:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               for(unsigned char posindex=0; posindex <= *(unsigned char*)&var_sys
      +                          _NVM.positionRemotesWalk; posindex++)
  6150  0039C8  0E00               	movlw	0
  6151  0039CA  6FE0               	movwf	setValueToEdit@posindex_6979& (0+255),b
  6152  0039CC  D00D               	goto	l22224
  6153  0039CE                     l3444:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;sm_MenuConfiguration_MC50.c: 1082:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          083:                         value=posindex;
  6157  0039CE  C0E0  F1FC         	movff	setValueToEdit@posindex_6979,setValueToEdit@value
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;sm_MenuConfiguration_MC50.c: 1084:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6161  0039D2  C0E0  F02E         	movff	setValueToEdit@posindex_6979,cmdMemoryIsEmpty@position
  6162  0039D6  0101               	movlb	1	; () banked
  6163  0039D8  5168               	movf	(_menu_st+23)& (0+255),w,b
  6164  0039DA  ECD0  F040         	call	_cmdMemoryIsEmpty
  6165  0039DE  0900               	iorlw	0
  6166  0039E0  A4D8               	btfss	status,2,c
  6167  0039E2  D008               	goto	u25610
  6168                           
  6169                           ;sm_MenuConfiguration_MC50.c: 1086:                     }
  6170  0039E4  0100               	movlb	0	; () banked
  6171  0039E6  2BE0               	incf	setValueToEdit@posindex_6979& (0+255),f,b
  6172  0039E8                     l22224:
  6173                           
  6174                           ; BSR set to: 0
  6175  0039E8  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6176  0039EC  51E0               	movf	setValueToEdit@posindex_6979& (0+255),w,b
  6177  0039EE  5CDE               	subwf	postinc2,w,c
  6178  0039F0  B0D8               	btfsc	status,0,c
  6179  0039F2  D7ED               	goto	l3444
  6180  0039F4                     u25610:
  6181                           
  6182                           ;sm_MenuConfiguration_MC50.c: 1087:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6183  0039F4  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6184  0039F8                     L28:
  6185  0039F8  50DF               	movf	indf2,w,c
  6186  0039FA  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6187                           
  6188                           ;sm_MenuConfiguration_MC50.c: 1088:                 };sm_MenuConfiguration_MC50.c: 1089:
      +                                           break;
  6189  0039FC  D00E               	goto	l22232
  6190  0039FE                     l22230:
  6191                           
  6192                           ; BSR set to: 0
  6193  0039FE  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6194  003A00  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6195  003A02  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6196                           
  6197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6198                           ; Switch size 1, requested type "simple"
  6199                           ; Number of cases is 1, Range of values is 0 to 0
  6200                           ; switch strategies available:
  6201                           ; Name         Instructions Cycles
  6202                           ; simple_byte            4     3 (average)
  6203                           ;	Chosen strategy is simple_byte
  6204  003A04  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6205  003A06  0A00               	xorlw	0	; case 0
  6206  003A08  A4D8               	btfss	status,2,c
  6207  003A0A  D007               	goto	l22232
  6208                           
  6209                           ; BSR set to: 0
  6210                           ; Switch size 1, requested type "simple"
  6211                           ; Number of cases is 2, Range of values is 0 to 1
  6212                           ; switch strategies available:
  6213                           ; Name         Instructions Cycles
  6214                           ; simple_byte            7     4 (average)
  6215                           ;	Chosen strategy is simple_byte
  6216  003A0C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6217  003A0E  0A00               	xorlw	0	; case 0
  6218  003A10  B4D8               	btfsc	status,2,c
  6219  003A12  D7BD               	goto	l22202
  6220  003A14  0A01               	xorlw	1	; case 1
  6221  003A16  B4D8               	btfsc	status,2,c
  6222  003A18  D7D7               	goto	l22216
  6223  003A1A                     l22232:
  6224                           
  6225                           ;sm_MenuConfiguration_MC50.c: 1091:             edit_Param.position=*edit_Param.Value;
  6226  003A1A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6227  003A1E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6228  003A22  50DF               	movf	indf2,w,c
  6229  003A24  6E46               	movwf	_edit_Param^0,c	;volatile
  6230                           
  6231                           ;sm_MenuConfiguration_MC50.c: 1092:             edit_Param.Min=0;
  6232  003A26  0E00               	movlw	0
  6233  003A28  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6234                           
  6235                           ;sm_MenuConfiguration_MC50.c: 1093:             haveValueToEdit=1;
  6236  003A2A  0E01               	movlw	1
  6237  003A2C  0100               	movlb	0	; () banked
  6238  003A2E  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6239                           
  6240                           ;sm_MenuConfiguration_MC50.c: 1094:             edit_Param.tempValue=*edit_Param.Value;
  6241  003A30  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6242  003A34  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6243  003A38  50DF               	movf	indf2,w,c
  6244  003A3A  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;sm_MenuConfiguration_MC50.c: 1095:             InitReceiver();
  6248  003A3C  EC84  F04E         	call	_InitReceiver	;wreg free
  6249                           
  6250                           ;sm_MenuConfiguration_MC50.c: 1096:         };sm_MenuConfiguration_MC50.c: 1097:        
      +                           break;
  6251  003A40  D029               	goto	l22244
  6252  003A42                     l22242:
  6253                           
  6254                           ; BSR set to: 0
  6255  003A42  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6256  003A44  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6257  003A46  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6258                           
  6259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6260                           ; Switch size 1, requested type "simple"
  6261                           ; Number of cases is 1, Range of values is 0 to 0
  6262                           ; switch strategies available:
  6263                           ; Name         Instructions Cycles
  6264                           ; simple_byte            4     3 (average)
  6265                           ;	Chosen strategy is simple_byte
  6266  003A48  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6267  003A4A  0A00               	xorlw	0	; case 0
  6268  003A4C  A4D8               	btfss	status,2,c
  6269  003A4E  D022               	goto	l22244
  6270                           
  6271                           ; BSR set to: 0
  6272                           ; Switch size 1, requested type "simple"
  6273                           ; Number of cases is 11, Range of values is 0 to 12
  6274                           ; switch strategies available:
  6275                           ; Name         Instructions Cycles
  6276                           ; simple_byte           34    18 (average)
  6277                           ;	Chosen strategy is simple_byte
  6278  003A50  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6279  003A52  0A00               	xorlw	0	; case 0
  6280  003A54  B4D8               	btfsc	status,2,c
  6281  003A56  D58E               	goto	l3358
  6282  003A58  0A01               	xorlw	1	; case 1
  6283  003A5A  B4D8               	btfsc	status,2,c
  6284  003A5C  D5EB               	goto	l3372
  6285  003A5E  0A05               	xorlw	5	; case 4
  6286  003A60  B4D8               	btfsc	status,2,c
  6287  003A62  D6C4               	goto	l22086
  6288  003A64  0A01               	xorlw	1	; case 5
  6289  003A66  B4D8               	btfsc	status,2,c
  6290  003A68  D6DC               	goto	l22094
  6291  003A6A  0A03               	xorlw	3	; case 6
  6292  003A6C  B4D8               	btfsc	status,2,c
  6293  003A6E  D6F4               	goto	l22100
  6294  003A70  0A01               	xorlw	1	; case 7
  6295  003A72  B4D8               	btfsc	status,2,c
  6296  003A74  D71D               	goto	l22128
  6297  003A76  0A0F               	xorlw	15	; case 8
  6298  003A78  B4D8               	btfsc	status,2,c
  6299  003A7A  D72E               	goto	l22140
  6300  003A7C  0A01               	xorlw	1	; case 9
  6301  003A7E  B4D8               	btfsc	status,2,c
  6302  003A80  D742               	goto	l22156
  6303  003A82  0A03               	xorlw	3	; case 10
  6304  003A84  B4D8               	btfsc	status,2,c
  6305  003A86  D75E               	goto	l22176
  6306  003A88  0A01               	xorlw	1	; case 11
  6307  003A8A  B4D8               	btfsc	status,2,c
  6308  003A8C  D771               	goto	l22196
  6309  003A8E  0A07               	xorlw	7	; case 12
  6310  003A90  B4D8               	btfsc	status,2,c
  6311  003A92  D7B5               	goto	l22230
  6312  003A94                     l22244:
  6313                           
  6314                           ;sm_MenuConfiguration_MC50.c: 1100:     return haveValueToEdit;
  6315  003A94  0100               	movlb	0	; () banked
  6316  003A96  51E1               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6317                           
  6318                           ; BSR set to: 0
  6319  003A98  0012               	return		;funcret
  6320  003A9A                     __end_of_setValueToEdit:
  6321                           	callstack 0
  6322                           
  6323 ;; *************** function _load_New_Menu *****************
  6324 ;; Defined at:
  6325 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  Menu            1    wreg     enum E10813
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  Menu            1   33[COMRAM] enum E10813
  6330 ;;  i               1   34[COMRAM] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6344 ;;Total ram usage:        4 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 5
  6347 ;; This function calls:
  6348 ;;		_SetSegmentValueIntermitentMain
  6349 ;;		_SetSegmentValueMain
  6350 ;; This function is called by:
  6351 ;;		_sm_execute_main
  6352 ;;		_sm_execute_menuConfiguration
  6353 ;;		_setValueToEdit
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text4
  6358  0049FE                     __ptext4:
  6359                           	callstack 0
  6360  0049FE                     _load_New_Menu:
  6361                           	callstack 22
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;incstack = 0
  6365                           ;load_New_Menu@Menu stored from wreg
  6366  0049FE  6E22               	movwf	load_New_Menu@Menu^0,c
  6367                           
  6368                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6369  004A00  0E00               	movlw	0
  6370  004A02  0101               	movlb	1	; () banked
  6371  004A04  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6372  004A06  0E64               	movlw	100
  6373  004A08  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6374                           
  6375                           ; BSR set to: 1
  6376                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6377  004A0A  5022               	movf	load_New_Menu@Menu^0,w,c
  6378  004A0C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6379  004A0E  B4D8               	btfsc	status,2,c
  6380  004A10  D006               	goto	l21106
  6381                           
  6382                           ; BSR set to: 1
  6383  004A12  0E01               	movlw	1
  6384  004A14  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6385  004A16  D003               	goto	l21106
  6386                           
  6387                           ; BSR set to: 1
  6388                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6389  004A18  0E00               	movlw	0
  6390  004A1A  6F68               	movwf	(_menu_st+23)& (0+255),b
  6391                           
  6392                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6393  004A1C  D005               	goto	l21110
  6394  004A1E                     l21106:
  6395                           
  6396                           ; BSR set to: 1
  6397  004A1E  0E02               	movlw	2
  6398  004A20  6022               	cpfslt	load_New_Menu@Menu^0,c
  6399  004A22  D002               	goto	l21110
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6403  004A24  C169  F168         	movff	_menu_st+24,_menu_st+23
  6404  004A28                     l21110:
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6408  004A28  0E00               	movlw	0
  6409  004A2A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6410                           
  6411                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6412  004A2C  D0F6               	goto	l21162
  6413  004A2E                     l21112:
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6417  004A2E  0E00               	movlw	0
  6418  004A30  6F66               	movwf	(_menu_st+21)& (0+255),b
  6419                           
  6420                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6421  004A32  0E0A               	movlw	10
  6422  004A34  6F67               	movwf	(_menu_st+22)& (0+255),b
  6423                           
  6424                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6425  004A36  0E00               	movlw	0
  6426  004A38  6F69               	movwf	(_menu_st+24)& (0+255),b
  6427                           
  6428                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6429  004A3A  0E00               	movlw	0
  6430  004A3C  6E23               	movwf	load_New_Menu@i^0,c
  6431  004A3E                     l21118:
  6432                           
  6433                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6434  004A3E  5023               	movf	load_New_Menu@i^0,w,c
  6435  004A40  0D02               	mullw	2
  6436  004A42  0E51               	movlw	low _menu_st
  6437  004A44  24F3               	addwf	243,w,c
  6438  004A46  6ED9               	movwf	fsr2l,c
  6439  004A48  0E01               	movlw	high _menu_st
  6440  004A4A  20F4               	addwfc	prodh,w,c
  6441  004A4C  6EDA               	movwf	fsr2h,c
  6442  004A4E  0E10               	movlw	16
  6443  004A50  6EDF               	movwf	indf2,c
  6444                           
  6445                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6446  004A52  5023               	movf	load_New_Menu@i^0,w,c
  6447  004A54  0D02               	mullw	2
  6448  004A56  0E52               	movlw	low (_menu_st+1)
  6449  004A58  24F3               	addwf	243,w,c
  6450  004A5A  6ED9               	movwf	fsr2l,c
  6451  004A5C  0E01               	movlw	high (_menu_st+1)
  6452  004A5E  20F4               	addwfc	prodh,w,c
  6453  004A60  6EDA               	movwf	fsr2h,c
  6454  004A62  C023  FFDF         	movff	load_New_Menu@i,indf2
  6455                           
  6456                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6457  004A66  2A23               	incf	load_New_Menu@i^0,f,c
  6458  004A68  0E09               	movlw	9
  6459  004A6A  6423               	cpfsgt	load_New_Menu@i^0,c
  6460  004A6C  D7E8               	goto	l21118
  6461  004A6E  D107               	goto	l21164
  6462  004A70                     l21124:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6466  004A70  0E01               	movlw	1
  6467  004A72  6F66               	movwf	(_menu_st+21)& (0+255),b
  6468                           
  6469                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6470  004A74  0E0A               	movlw	10
  6471  004A76  6F67               	movwf	(_menu_st+22)& (0+255),b
  6472                           
  6473                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6474  004A78  0E00               	movlw	0
  6475  004A7A  6F69               	movwf	(_menu_st+24)& (0+255),b
  6476                           
  6477                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6478  004A7C  0E00               	movlw	0
  6479  004A7E  6E23               	movwf	load_New_Menu@i^0,c
  6480  004A80                     l21130:
  6481                           
  6482                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6483  004A80  5023               	movf	load_New_Menu@i^0,w,c
  6484  004A82  0D02               	mullw	2
  6485  004A84  0E51               	movlw	low _menu_st
  6486  004A86  24F3               	addwf	243,w,c
  6487  004A88  6ED9               	movwf	fsr2l,c
  6488  004A8A  0E01               	movlw	high _menu_st
  6489  004A8C  20F4               	addwfc	prodh,w,c
  6490  004A8E  6EDA               	movwf	fsr2h,c
  6491  004A90  0E0E               	movlw	14
  6492  004A92  6EDF               	movwf	indf2,c
  6493                           
  6494                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6495  004A94  5023               	movf	load_New_Menu@i^0,w,c
  6496  004A96  0D02               	mullw	2
  6497  004A98  0E52               	movlw	low (_menu_st+1)
  6498  004A9A  24F3               	addwf	243,w,c
  6499  004A9C  6ED9               	movwf	fsr2l,c
  6500  004A9E  0E01               	movlw	high (_menu_st+1)
  6501  004AA0  20F4               	addwfc	prodh,w,c
  6502  004AA2  6EDA               	movwf	fsr2h,c
  6503  004AA4  C023  FFDF         	movff	load_New_Menu@i,indf2
  6504                           
  6505                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6506  004AA8  2A23               	incf	load_New_Menu@i^0,f,c
  6507  004AAA  0E09               	movlw	9
  6508  004AAC  6423               	cpfsgt	load_New_Menu@i^0,c
  6509  004AAE  D7E8               	goto	l21130
  6510  004AB0  D0E6               	goto	l21164
  6511  004AB2                     l21136:
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6515  004AB2  0E00               	movlw	0
  6516  004AB4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6517                           
  6518                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6519  004AB6  0E04               	movlw	4
  6520  004AB8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6521                           
  6522                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6523  004ABA  0E04               	movlw	4
  6524  004ABC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6525                           
  6526                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6527  004ABE  0E0A               	movlw	10
  6528  004AC0  6F51               	movwf	_menu_st& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6531  004AC2  0E13               	movlw	19
  6532  004AC4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6535  004AC6  0E17               	movlw	23
  6536  004AC8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6537                           
  6538                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6539  004ACA  0E0A               	movlw	10
  6540  004ACC  6F54               	movwf	(_menu_st+3)& (0+255),b
  6541                           
  6542                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6543  004ACE  0E05               	movlw	5
  6544  004AD0  6F55               	movwf	(_menu_st+4)& (0+255),b
  6545                           
  6546                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6547  004AD2  0E21               	movlw	33
  6548  004AD4  6F56               	movwf	(_menu_st+5)& (0+255),b
  6549                           
  6550                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6551  004AD6  0E0D               	movlw	13
  6552  004AD8  6F57               	movwf	(_menu_st+6)& (0+255),b
  6553                           
  6554                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6555  004ADA  0E01               	movlw	1
  6556  004ADC  D051               	goto	L31
  6557  004ADE                     l21138:
  6558                           
  6559                           ; BSR set to: 1
  6560                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6561  004ADE  0E00               	movlw	0
  6562  004AE0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6565  004AE2  0E05               	movlw	5
  6566  004AE4  6F66               	movwf	(_menu_st+21)& (0+255),b
  6567                           
  6568                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6569  004AE6  0E02               	movlw	2
  6570  004AE8  6F67               	movwf	(_menu_st+22)& (0+255),b
  6571                           
  6572                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6573  004AEA  0E0D               	movlw	13
  6574  004AEC  6F51               	movwf	_menu_st& (0+255),b
  6575                           
  6576                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6577  004AEE  0E0A               	movlw	10
  6578  004AF0  6F52               	movwf	(_menu_st+1)& (0+255),b
  6579                           
  6580                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6581  004AF2  0E0D               	movlw	13
  6582  004AF4  6F53               	movwf	(_menu_st+2)& (0+255),b
  6583                           
  6584                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6585  004AF6  0E0F               	movlw	15
  6586  004AF8  D08E               	goto	L38
  6587  004AFA                     l21140:
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6591  004AFA  0E00               	movlw	0
  6592  004AFC  6F65               	movwf	(_menu_st+20)& (0+255),b
  6593                           
  6594                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6595  004AFE  0E06               	movlw	6
  6596  004B00  6F66               	movwf	(_menu_st+21)& (0+255),b
  6597                           
  6598                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6599  004B02  0E03               	movlw	3
  6600  004B04  6F67               	movwf	(_menu_st+22)& (0+255),b
  6601                           
  6602                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6603  004B06  0E0F               	movlw	15
  6604  004B08  6F51               	movwf	_menu_st& (0+255),b
  6605                           
  6606                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6607  004B0A  0E00               	movlw	0
  6608  004B0C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6609                           
  6610                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6611  004B0E  0E0F               	movlw	15
  6612  004B10  6F53               	movwf	(_menu_st+2)& (0+255),b
  6613                           
  6614                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6615  004B12  0E05               	movlw	5
  6616  004B14  6F54               	movwf	(_menu_st+3)& (0+255),b
  6617                           
  6618                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6619  004B16  0E0F               	movlw	15
  6620  004B18  6F55               	movwf	(_menu_st+4)& (0+255),b
  6621                           
  6622                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6623  004B1A  0E0D               	movlw	13
  6624  004B1C  D073               	goto	L33
  6625  004B1E                     l21142:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6629  004B1E  0E00               	movlw	0
  6630  004B20  6F65               	movwf	(_menu_st+20)& (0+255),b
  6631                           
  6632                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6633  004B22  0E07               	movlw	7
  6634  004B24  6F66               	movwf	(_menu_st+21)& (0+255),b
  6635                           
  6636                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6637  004B26  0E02               	movlw	2
  6638  004B28  6F67               	movwf	(_menu_st+22)& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6641  004B2A  0E0A               	movlw	10
  6642  004B2C  6F51               	movwf	_menu_st& (0+255),b
  6643                           
  6644                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6645  004B2E  0E0F               	movlw	15
  6646  004B30  6F52               	movwf	(_menu_st+1)& (0+255),b
  6647                           
  6648                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6649  004B32  0E0A               	movlw	10
  6650  004B34  6F53               	movwf	(_menu_st+2)& (0+255),b
  6651                           
  6652                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6653  004B36  0E10               	movlw	16
  6654  004B38  D06E               	goto	L38
  6655  004B3A                     l21144:
  6656                           
  6657                           ; BSR set to: 1
  6658                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6659  004B3A  0E00               	movlw	0
  6660  004B3C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6661                           
  6662                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6663  004B3E  0E08               	movlw	8
  6664  004B40  6F66               	movwf	(_menu_st+21)& (0+255),b
  6665                           
  6666                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6667  004B42  0E02               	movlw	2
  6668  004B44  6F67               	movwf	(_menu_st+22)& (0+255),b
  6669                           
  6670                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6671  004B46  0E12               	movlw	18
  6672  004B48  6F51               	movwf	_menu_st& (0+255),b
  6673                           
  6674                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6675  004B4A  0E0E               	movlw	14
  6676  004B4C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6677                           
  6678                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6679  004B4E  0E11               	movlw	17
  6680  004B50  6F53               	movwf	(_menu_st+2)& (0+255),b
  6681                           
  6682                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6683  004B52  0E0C               	movlw	12
  6684  004B54  D060               	goto	L38
  6685  004B56                     l21146:
  6686                           
  6687                           ; BSR set to: 1
  6688                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6689  004B56  0E00               	movlw	0
  6690  004B58  6F65               	movwf	(_menu_st+20)& (0+255),b
  6691                           
  6692                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6693  004B5A  0E09               	movlw	9
  6694  004B5C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6695                           
  6696                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6697  004B5E  0E04               	movlw	4
  6698  004B60  6F67               	movwf	(_menu_st+22)& (0+255),b
  6699                           
  6700                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6701  004B62  0E12               	movlw	18
  6702  004B64  6F51               	movwf	_menu_st& (0+255),b
  6703                           
  6704                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6705  004B66  0E0A               	movlw	10
  6706  004B68  6F52               	movwf	(_menu_st+1)& (0+255),b
  6707                           
  6708                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6709  004B6A  0E11               	movlw	17
  6710  004B6C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6711                           
  6712                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6713  004B6E  0E0A               	movlw	10
  6714  004B70  6F54               	movwf	(_menu_st+3)& (0+255),b
  6715                           
  6716                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6717  004B72  0E11               	movlw	17
  6718  004B74  6F55               	movwf	(_menu_st+4)& (0+255),b
  6719                           
  6720                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6721  004B76  0E12               	movlw	18
  6722  004B78  6F56               	movwf	(_menu_st+5)& (0+255),b
  6723                           
  6724                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6725  004B7A  0E05               	movlw	5
  6726  004B7C  6F57               	movwf	(_menu_st+6)& (0+255),b
  6727                           
  6728                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6729  004B7E  0E15               	movlw	21
  6730  004B80                     L31:
  6731  004B80  6F58               	movwf	(_menu_st+7)& (0+255),b
  6732                           
  6733                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6734  004B82  D07D               	goto	l21164
  6735  004B84                     l21148:
  6736                           
  6737                           ; BSR set to: 1
  6738                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6739  004B84  0E01               	movlw	1
  6740  004B86  6F65               	movwf	(_menu_st+20)& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6743  004B88  0E0A               	movlw	10
  6744  004B8A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6747  004B8C  0E02               	movlw	2
  6748  004B8E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6751  004B90  0E11               	movlw	17
  6752  004B92  6F51               	movwf	_menu_st& (0+255),b
  6753                           
  6754                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6755  004B94  0E10               	movlw	16
  6756  004B96  6F52               	movwf	(_menu_st+1)& (0+255),b
  6757                           
  6758                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6759  004B98  0E10               	movlw	16
  6760  004B9A  6F53               	movwf	(_menu_st+2)& (0+255),b
  6761                           
  6762                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6763  004B9C  0E12               	movlw	18
  6764  004B9E  D03B               	goto	L38
  6765  004BA0                     l21150:
  6766                           
  6767                           ; BSR set to: 1
  6768                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6769  004BA0  0E01               	movlw	1
  6770  004BA2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6771                           
  6772                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6773  004BA4  0E0B               	movlw	11
  6774  004BA6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6775                           
  6776                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6777  004BA8  0E02               	movlw	2
  6778  004BAA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6779                           
  6780                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6781  004BAC  0E14               	movlw	20
  6782  004BAE  6F51               	movwf	_menu_st& (0+255),b
  6783                           
  6784                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6785  004BB0  0E24               	movlw	36
  6786  004BB2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6787                           
  6788                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6789  004BB4  0E14               	movlw	20
  6790  004BB6  6F53               	movwf	(_menu_st+2)& (0+255),b
  6791                           
  6792                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6793  004BB8  0E23               	movlw	35
  6794  004BBA  D02D               	goto	L38
  6795  004BBC                     l21152:
  6796                           
  6797                           ; BSR set to: 1
  6798                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6799  004BBC  0E0C               	movlw	12
  6800  004BBE  6F66               	movwf	(_menu_st+21)& (0+255),b
  6801                           
  6802                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6803  004BC0  0E00               	movlw	0
  6804  004BC2  6F68               	movwf	(_menu_st+23)& (0+255),b
  6805                           
  6806                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6807  004BC4  0E02               	movlw	2
  6808  004BC6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6809                           
  6810                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6811  004BC8  0E05               	movlw	5
  6812  004BCA  6F51               	movwf	_menu_st& (0+255),b
  6813                           
  6814                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6815  004BCC  0E13               	movlw	19
  6816  004BCE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6817                           
  6818                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6819  004BD0  0E05               	movlw	5
  6820  004BD2  D7B0               	goto	L39
  6821  004BD4                     l21154:
  6822                           
  6823                           ; BSR set to: 1
  6824                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6825  004BD4  0E0D               	movlw	13
  6826  004BD6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6827                           
  6828                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6829  004BD8  0E01               	movlw	1
  6830  004BDA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6831                           
  6832                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6833  004BDC  0E0D               	movlw	13
  6834  004BDE  6F51               	movwf	_menu_st& (0+255),b
  6835                           
  6836                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6837  004BE0  0E12               	movlw	18
  6838  004BE2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6839                           
  6840                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6841  004BE4  0E00               	movlw	0
  6842  004BE6  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6843  004BE8  0E3C               	movlw	60
  6844  004BEA  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6845                           
  6846                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6847  004BEC  D048               	goto	l21164
  6848  004BEE                     l21156:
  6849                           
  6850                           ; BSR set to: 1
  6851                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6852  004BEE  0E05               	movlw	5
  6853  004BF0  6F51               	movwf	_menu_st& (0+255),b
  6854                           
  6855                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6856  004BF2  0E0C               	movlw	12
  6857  004BF4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6858                           
  6859                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6860  004BF6  0E05               	movlw	5
  6861  004BF8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6862                           
  6863                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6864  004BFA  0E0E               	movlw	14
  6865  004BFC  6F54               	movwf	(_menu_st+3)& (0+255),b
  6866                           
  6867                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6868  004BFE  0E22               	movlw	34
  6869  004C00  6F55               	movwf	(_menu_st+4)& (0+255),b
  6870                           
  6871                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6872  004C02  0E14               	movlw	20
  6873  004C04                     L33:
  6874  004C04  6F56               	movwf	(_menu_st+5)& (0+255),b
  6875                           
  6876                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6877  004C06  D03B               	goto	l21164
  6878  004C08                     l21158:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6882  004C08  0E12               	movlw	18
  6883  004C0A  6F51               	movwf	_menu_st& (0+255),b
  6884                           
  6885                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6886  004C0C  0E0E               	movlw	14
  6887  004C0E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6888                           
  6889                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6890  004C10  0E14               	movlw	20
  6891  004C12  6F53               	movwf	(_menu_st+2)& (0+255),b
  6892                           
  6893                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6894  004C14  0E15               	movlw	21
  6895  004C16                     L38:
  6896  004C16  6F54               	movwf	(_menu_st+3)& (0+255),b
  6897                           
  6898                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6899  004C18  D032               	goto	l21164
  6900  004C1A                     l21162:
  6901                           
  6902                           ; BSR set to: 1
  6903  004C1A  5022               	movf	load_New_Menu@Menu^0,w,c
  6904  004C1C  6E20               	movwf	??_load_New_Menu^0,c
  6905  004C1E  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6906                           
  6907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6908                           ; Switch size 1, requested type "simple"
  6909                           ; Number of cases is 1, Range of values is 0 to 0
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte            4     3 (average)
  6913                           ;	Chosen strategy is simple_byte
  6914  004C20  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6915  004C22  0A00               	xorlw	0	; case 0
  6916  004C24  A4D8               	btfss	status,2,c
  6917  004C26  D02B               	goto	l21164
  6918                           
  6919                           ; BSR set to: 1
  6920                           ; Switch size 1, requested type "simple"
  6921                           ; Number of cases is 14, Range of values is 0 to 13
  6922                           ; switch strategies available:
  6923                           ; Name         Instructions Cycles
  6924                           ; simple_byte           43    22 (average)
  6925                           ;	Chosen strategy is simple_byte
  6926  004C28  5020               	movf	??_load_New_Menu^0,w,c
  6927  004C2A  0A00               	xorlw	0	; case 0
  6928  004C2C  B4D8               	btfsc	status,2,c
  6929  004C2E  D6FF               	goto	l21112
  6930  004C30  0A01               	xorlw	1	; case 1
  6931  004C32  B4D8               	btfsc	status,2,c
  6932  004C34  D71D               	goto	l21124
  6933  004C36  0A03               	xorlw	3	; case 2
  6934  004C38  B4D8               	btfsc	status,2,c
  6935  004C3A  D7E6               	goto	l21158
  6936  004C3C  0A01               	xorlw	1	; case 3
  6937  004C3E  B4D8               	btfsc	status,2,c
  6938  004C40  D7D6               	goto	l21156
  6939  004C42  0A07               	xorlw	7	; case 4
  6940  004C44  B4D8               	btfsc	status,2,c
  6941  004C46  D735               	goto	l21136
  6942  004C48  0A01               	xorlw	1	; case 5
  6943  004C4A  B4D8               	btfsc	status,2,c
  6944  004C4C  D748               	goto	l21138
  6945  004C4E  0A03               	xorlw	3	; case 6
  6946  004C50  B4D8               	btfsc	status,2,c
  6947  004C52  D753               	goto	l21140
  6948  004C54  0A01               	xorlw	1	; case 7
  6949  004C56  B4D8               	btfsc	status,2,c
  6950  004C58  D762               	goto	l21142
  6951  004C5A  0A0F               	xorlw	15	; case 8
  6952  004C5C  B4D8               	btfsc	status,2,c
  6953  004C5E  D76D               	goto	l21144
  6954  004C60  0A01               	xorlw	1	; case 9
  6955  004C62  B4D8               	btfsc	status,2,c
  6956  004C64  D778               	goto	l21146
  6957  004C66  0A03               	xorlw	3	; case 10
  6958  004C68  B4D8               	btfsc	status,2,c
  6959  004C6A  D78C               	goto	l21148
  6960  004C6C  0A01               	xorlw	1	; case 11
  6961  004C6E  B4D8               	btfsc	status,2,c
  6962  004C70  D797               	goto	l21150
  6963  004C72  0A07               	xorlw	7	; case 12
  6964  004C74  B4D8               	btfsc	status,2,c
  6965  004C76  D7A2               	goto	l21152
  6966  004C78  0A01               	xorlw	1	; case 13
  6967  004C7A  B4D8               	btfsc	status,2,c
  6968  004C7C  D7AB               	goto	l21154
  6969  004C7E                     l21164:
  6970                           
  6971                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6972  004C7E  0101               	movlb	1	; () banked
  6973  004C80  5167               	movf	(_menu_st+22)& (0+255),w,b
  6974  004C82  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6975  004C84  A0D8               	btfss	status,0,c
  6976  004C86  D002               	goto	l21168
  6977                           
  6978                           ; BSR set to: 1
  6979                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6980  004C88  0E00               	movlw	0
  6981  004C8A  6F68               	movwf	(_menu_st+23)& (0+255),b
  6982  004C8C                     l21168:
  6983                           
  6984                           ; BSR set to: 1
  6985                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6986  004C8C  0E0D               	movlw	13
  6987  004C8E  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6988  004C90  A4D8               	btfss	status,2,c
  6989  004C92  D01A               	goto	l21172
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6993  004C94  5168               	movf	(_menu_st+23)& (0+255),w,b
  6994  004C96  0D02               	mullw	2
  6995  004C98  0E52               	movlw	low (_menu_st+1)
  6996  004C9A  24F3               	addwf	243,w,c
  6997  004C9C  6ED9               	movwf	fsr2l,c
  6998  004C9E  0E01               	movlw	high (_menu_st+1)
  6999  004CA0  20F4               	addwfc	prodh,w,c
  7000  004CA2  6EDA               	movwf	fsr2h,c
  7001  004CA4  50DF               	movf	indf2,w,c
  7002  004CA6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7003  004CA8  0E00               	movlw	0
  7004  004CAA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7005  004CAC  0E0A               	movlw	10
  7006  004CAE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7007  004CB0  5168               	movf	(_menu_st+23)& (0+255),w,b
  7008  004CB2  0D02               	mullw	2
  7009  004CB4  0E51               	movlw	low _menu_st
  7010  004CB6  24F3               	addwf	243,w,c
  7011  004CB8  6ED9               	movwf	fsr2l,c
  7012  004CBA  0E01               	movlw	high _menu_st
  7013  004CBC  20F4               	addwfc	prodh,w,c
  7014  004CBE  6EDA               	movwf	fsr2h,c
  7015  004CC0  50DF               	movf	indf2,w,c
  7016  004CC2  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  7017                           
  7018                           ;sm_MenuConfiguration_MC50.c: 640:     }
  7019  004CC6  0012               	return	
  7020  004CC8                     l21172:
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  7024  004CC8  5168               	movf	(_menu_st+23)& (0+255),w,b
  7025  004CCA  0D02               	mullw	2
  7026  004CCC  0E52               	movlw	low (_menu_st+1)
  7027  004CCE  24F3               	addwf	243,w,c
  7028  004CD0  6ED9               	movwf	fsr2l,c
  7029  004CD2  0E01               	movlw	high (_menu_st+1)
  7030  004CD4  20F4               	addwfc	prodh,w,c
  7031  004CD6  6EDA               	movwf	fsr2h,c
  7032  004CD8  50DF               	movf	indf2,w,c
  7033  004CDA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7034  004CDC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7035  004CDE  0D02               	mullw	2
  7036  004CE0  0E51               	movlw	low _menu_st
  7037  004CE2  24F3               	addwf	243,w,c
  7038  004CE4  6ED9               	movwf	fsr2l,c
  7039  004CE6  0E01               	movlw	high _menu_st
  7040  004CE8  20F4               	addwfc	prodh,w,c
  7041  004CEA  6EDA               	movwf	fsr2h,c
  7042  004CEC  50DF               	movf	indf2,w,c
  7043  004CEE  EC91  F04E         	call	_SetSegmentValueMain
  7044  004CF2  0012               	return		;funcret
  7045  004CF4                     __end_of_load_New_Menu:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _InitReceiver *****************
  7049 ;; Defined at:
  7050 ;;		line 207 in file "inputs_MC50.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2
  7059 ;; Tracked objects:
  7060 ;;		On entry : 30/F
  7061 ;;		On exit  : 3F/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 4
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;;		_setValueToEdit
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text5
  7080  009D08                     __ptext5:
  7081                           	callstack 0
  7082  009D08                     _InitReceiver:
  7083                           	callstack 23
  7084                           
  7085                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7086                           
  7087                           ;incstack = 0
  7088  009D08  010E               	movlb	14	; () banked
  7089  009D0A  9BCA               	bcf	202,5,b	;volatile
  7090                           
  7091                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7092  009D0C  8BC2               	bsf	194,5,b	;volatile
  7093                           
  7094                           ;inputs_MC50.c: 210:     GIE = 1;
  7095  009D0E  8EF2               	bsf	4082,7,c	;volatile
  7096                           
  7097                           ; BSR set to: 14
  7098                           ;inputs_MC50.c: 211:     RFstate = 0;
  7099  009D10  0E00               	movlw	0
  7100  009D12  0101               	movlb	1	; () banked
  7101  009D14  6F9C               	movwf	_RFstate& (0+255),b
  7102                           
  7103                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7104  009D16  0E00               	movlw	0
  7105  009D18  0100               	movlb	0	; () banked
  7106  009D1A  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7107                           
  7108                           ;inputs_MC50.c: 213:     RFFull = 0;
  7109  009D1C  0E00               	movlw	0
  7110  009D1E  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7111                           
  7112                           ; BSR set to: 0
  7113  009D20  0012               	return		;funcret
  7114  009D22                     __end_of_InitReceiver:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _controlSelectRemote *****************
  7118 ;; Defined at:
  7119 ;;		line 1103 in file "sm_MenuConfiguration_MC50.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7124 ;;  pos             1   10[BANK0 ] unsigned char 
  7125 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7126 ;;  temp            1   16[BANK0 ] unsigned char 
  7127 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 3F/1
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7140 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7141 ;;Total ram usage:        9 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 14
  7144 ;; This function calls:
  7145 ;;		_ClearFlag_rfCMD
  7146 ;;		_RemoveSerial
  7147 ;;		_SaveNVM_VarSystem
  7148 ;;		_SetSegmentValue
  7149 ;;		_SetSegmentValueIntermitentMain
  7150 ;;		_SetSegmentValueMain
  7151 ;;		___awdiv
  7152 ;;		___lbmod
  7153 ;;		_cmdMemoryIsEmpty
  7154 ;;		_getSerialCmd
  7155 ;;		_getTypeRemote
  7156 ;;		_saveNewSerial
  7157 ;;		_sm_send_event
  7158 ;;		_validateRemoteSerialNumber
  7159 ;; This function is called by:
  7160 ;;		_sm_execute_menuConfiguration
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text6
  7165  003FAC                     __ptext6:
  7166                           	callstack 0
  7167  003FAC                     _controlSelectRemote:
  7168                           	callstack 14
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;sm_MenuConfiguration_MC50.c: 1104:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1105:     char temp=getSerialCmd(&tempSerial);
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;incstack = 0
  7175  003FAC  0EE4               	movlw	low controlSelectRemote@tempSerial
  7176  003FAE  6E1B               	movwf	getSerialCmd@serial^0,c
  7177  003FB0  ECAE  F049         	call	_getSerialCmd	;wreg free
  7178  003FB4  0100               	movlb	0	; () banked
  7179  003FB6  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;sm_MenuConfiguration_MC50.c: 1106:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          107:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7183  003FB8  0101               	movlb	1	; () banked
  7184  003FBA  BFAD               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7185  003FBC  D008               	goto	u25630
  7186  003FBE  51AD               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7187  003FC0  E103               	bnz	u25620
  7188  003FC2  05AC               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7189  003FC4  A0D8               	btfss	status,0,c
  7190  003FC6  D003               	goto	u25630
  7191  003FC8                     u25620:
  7192                           
  7193                           ; BSR set to: 1
  7194  003FC8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7195  003FCA  A4D8               	btfss	status,2,c
  7196  003FCC  D028               	goto	l22388
  7197  003FCE                     u25630:
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;sm_MenuConfiguration_MC50.c: 1108:     {;sm_MenuConfiguration_MC50.c: 1109:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7201  003FCE  0EF1               	movlw	low _main_stateMachine
  7202  003FD0  6E12               	movwf	sm_send_event@psm^0,c
  7203  003FD2  0E01               	movlw	high _main_stateMachine
  7204  003FD4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7205  003FD6  0E00               	movlw	0
  7206  003FD8  6E15               	movwf	(sm_send_event@event+1)^0,c
  7207  003FDA  0E07               	movlw	7
  7208  003FDC  6E14               	movwf	sm_send_event@event^0,c
  7209  003FDE  EC7A  F047         	call	_sm_send_event	;wreg free
  7210                           
  7211                           ;sm_MenuConfiguration_MC50.c: 1110:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7212  003FE2  0EBD               	movlw	low _menuConfiguration_stateMachine
  7213  003FE4  6E12               	movwf	sm_send_event@psm^0,c
  7214  003FE6  0E02               	movlw	high _menuConfiguration_stateMachine
  7215  003FE8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7216  003FEA  0E00               	movlw	0
  7217  003FEC  6E15               	movwf	(sm_send_event@event+1)^0,c
  7218  003FEE  0E03               	movlw	3
  7219  003FF0  6E14               	movwf	sm_send_event@event^0,c
  7220  003FF2  EC7A  F047         	call	_sm_send_event	;wreg free
  7221                           
  7222                           ;sm_MenuConfiguration_MC50.c: 1111:         var_sys.DistanceProgrammingActive=NO;
  7223  003FF6  0E00               	movlw	0
  7224  003FF8  0101               	movlb	1	; () banked
  7225  003FFA  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;sm_MenuConfiguration_MC50.c: 1112:         var_sys.ProgrammingDistanceIs=NoCMD;
  7229  003FFC  0E00               	movlw	0
  7230  003FFE  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7231                           
  7232                           ; BSR set to: 1
  7233                           ;sm_MenuConfiguration_MC50.c: 1113:         SetSegmentValueMain(dMinus,dMinus);
  7234  004000  0E18               	movlw	24
  7235  004002  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7236  004004  0E18               	movlw	24
  7237  004006  EC91  F04E         	call	_SetSegmentValueMain
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;sm_MenuConfiguration_MC50.c: 1114:         ClearFlag_rfCMD();
  7241  00400A  ECE5  F04F         	call	_ClearFlag_rfCMD	;wreg free
  7242                           
  7243                           ;sm_MenuConfiguration_MC50.c: 1115:         button_struct.processed=1;
  7244  00400E  0E01               	movlw	1
  7245  004010  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7246                           
  7247                           ;sm_MenuConfiguration_MC50.c: 1116:         ts_system.timeoutMenu = 0;
  7248  004012  0E00               	movlw	0
  7249  004014  0101               	movlb	1	; () banked
  7250  004016  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7251  004018  0E00               	movlw	0
  7252  00401A  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7253                           
  7254                           ;sm_MenuConfiguration_MC50.c: 1118:     }
  7255  00401C  0012               	return	
  7256  00401E                     l22388:
  7257                           
  7258                           ; BSR set to: 1
  7259  00401E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7260  004020  A4D8               	btfss	status,2,c
  7261  004022  D05B               	goto	l22410
  7262                           
  7263                           ; BSR set to: 1
  7264  004024  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7265  004026  B4D8               	btfsc	status,2,c
  7266  004028  D058               	goto	l22410
  7267                           
  7268                           ; BSR set to: 1
  7269                           ;sm_MenuConfiguration_MC50.c: 1120:     {;sm_MenuConfiguration_MC50.c: 1121:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7270  00402A  0E00               	movlw	0
  7271  00402C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7272  00402E  0E64               	movlw	100
  7273  004030  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;sm_MenuConfiguration_MC50.c: 1122:         if(edit_Param.tempValue<=edit_Param.Min)
  7277  004032  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7278  004034  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7279  004036  A0D8               	btfss	status,0,c
  7280  004038  D003               	goto	l22398
  7281                           
  7282                           ; BSR set to: 1
  7283                           ;sm_MenuConfiguration_MC50.c: 1123:         {;sm_MenuConfiguration_MC50.c: 1124:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7284  00403A  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7285                           
  7286                           ;sm_MenuConfiguration_MC50.c: 1125:         }
  7287  00403E  D001               	goto	l22400
  7288  004040                     l22398:
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;sm_MenuConfiguration_MC50.c: 1127:         {;sm_MenuConfiguration_MC50.c: 1128:        
      +                               edit_Param.tempValue--;
  7292  004040  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7293  004042                     l22400:
  7294                           
  7295                           ; BSR set to: 1
  7296                           ;sm_MenuConfiguration_MC50.c: 1130:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7297  004042  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7298  004046  5168               	movf	(_menu_st+23)& (0+255),w,b
  7299  004048  ECD0  F040         	call	_cmdMemoryIsEmpty
  7300  00404C  06E8               	decf	wreg,f,c
  7301  00404E  B4D8               	btfsc	status,2,c
  7302  004050  D004               	goto	u25680
  7303  004052  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7304  004054  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7305  004056  A4D8               	btfss	status,2,c
  7306  004058  D021               	goto	l22406
  7307  00405A                     u25680:
  7308                           
  7309                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7310  00405A  0E0A               	movlw	10
  7311  00405C  6E10               	movwf	___lbmod@divisor^0,c
  7312  00405E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7313  004060  EC59  F04D         	call	___lbmod
  7314  004064  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7315  004066  0E00               	movlw	0
  7316  004068  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7317  00406A  0E14               	movlw	20
  7318  00406C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7319  00406E  0E0A               	movlw	10
  7320  004070  6E10               	movwf	___lbmod@divisor^0,c
  7321  004072  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7322  004074  EC59  F04D         	call	___lbmod
  7323  004078  0100               	movlb	0	; () banked
  7324  00407A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7325  00407C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7326  00407E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7327  004080  6E14               	movwf	___awdiv@dividend^0,c
  7328  004082  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7329  004084  A0D8               	btfss	status,0,c
  7330  004086  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7331  004088  0E00               	movlw	0
  7332  00408A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7333  00408C  0E0A               	movlw	10
  7334  00408E  6E16               	movwf	___awdiv@divisor^0,c
  7335  004090  ECBB  F042         	call	___awdiv	;wreg free
  7336  004094  5014               	movf	?___awdiv^0,w,c
  7337  004096  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  7338                           
  7339                           ;sm_MenuConfiguration_MC50.c: 1133:         }
  7340  00409A  D01C               	goto	l22408
  7341  00409C                     l22406:
  7342                           
  7343                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7344  00409C  0E0A               	movlw	10
  7345  00409E  6E10               	movwf	___lbmod@divisor^0,c
  7346  0040A0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7347  0040A2  EC59  F04D         	call	___lbmod
  7348  0040A6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7349  0040A8  0E0A               	movlw	10
  7350  0040AA  6E10               	movwf	___lbmod@divisor^0,c
  7351  0040AC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7352  0040AE  EC59  F04D         	call	___lbmod
  7353  0040B2  0100               	movlb	0	; () banked
  7354  0040B4  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7355  0040B6  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7356  0040B8  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7357  0040BA  6E14               	movwf	___awdiv@dividend^0,c
  7358  0040BC  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7359  0040BE  A0D8               	btfss	status,0,c
  7360  0040C0  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7361  0040C2  0E00               	movlw	0
  7362  0040C4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7363  0040C6  0E0A               	movlw	10
  7364  0040C8  6E16               	movwf	___awdiv@divisor^0,c
  7365  0040CA  ECBB  F042         	call	___awdiv	;wreg free
  7366  0040CE  5014               	movf	?___awdiv^0,w,c
  7367  0040D0  EC91  F04E         	call	_SetSegmentValueMain
  7368  0040D4                     l22408:
  7369                           
  7370                           ;sm_MenuConfiguration_MC50.c: 1138:         button_struct.processed=1;
  7371  0040D4  0E01               	movlw	1
  7372  0040D6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7373                           
  7374                           ;sm_MenuConfiguration_MC50.c: 1139:     }
  7375  0040D8  0012               	return	
  7376  0040DA                     l22410:
  7377                           
  7378                           ; BSR set to: 1
  7379  0040DA  0E17               	movlw	23
  7380  0040DC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7381  0040DE  A4D8               	btfss	status,2,c
  7382  0040E0  D057               	goto	l22432
  7383                           
  7384                           ; BSR set to: 1
  7385  0040E2  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7386  0040E4  B4D8               	btfsc	status,2,c
  7387  0040E6  D054               	goto	l22432
  7388                           
  7389                           ; BSR set to: 1
  7390                           ;sm_MenuConfiguration_MC50.c: 1141:     {;sm_MenuConfiguration_MC50.c: 1142:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7391  0040E8  0E00               	movlw	0
  7392  0040EA  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7393  0040EC  0E64               	movlw	100
  7394  0040EE  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7395                           
  7396                           ; BSR set to: 1
  7397                           ;sm_MenuConfiguration_MC50.c: 1143:         edit_Param.tempValue++;
  7398  0040F0  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;sm_MenuConfiguration_MC50.c: 1144:         if(edit_Param.tempValue>edit_Param.Max)
  7402  0040F2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7403  0040F4  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7404  0040F6  A0D8               	btfss	status,0,c
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;sm_MenuConfiguration_MC50.c: 1145:         {;sm_MenuConfiguration_MC50.c: 1146:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7408  0040F8  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;sm_MenuConfiguration_MC50.c: 1148:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7412  0040FC  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7413  004100  5168               	movf	(_menu_st+23)& (0+255),w,b
  7414  004102  ECD0  F040         	call	_cmdMemoryIsEmpty
  7415  004106  06E8               	decf	wreg,f,c
  7416  004108  B4D8               	btfsc	status,2,c
  7417  00410A  D004               	goto	u25730
  7418  00410C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7419  00410E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7420  004110  A4D8               	btfss	status,2,c
  7421  004112  D021               	goto	l22428
  7422  004114                     u25730:
  7423                           
  7424                           ;sm_MenuConfiguration_MC50.c: 1149:         {;sm_MenuConfiguration_MC50.c: 1150:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7425  004114  0E0A               	movlw	10
  7426  004116  6E10               	movwf	___lbmod@divisor^0,c
  7427  004118  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7428  00411A  EC59  F04D         	call	___lbmod
  7429  00411E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7430  004120  0E00               	movlw	0
  7431  004122  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7432  004124  0E14               	movlw	20
  7433  004126  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7434  004128  0E0A               	movlw	10
  7435  00412A  6E10               	movwf	___lbmod@divisor^0,c
  7436  00412C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7437  00412E  EC59  F04D         	call	___lbmod
  7438  004132  0100               	movlb	0	; () banked
  7439  004134  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7440  004136  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7441  004138  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7442  00413A  6E14               	movwf	___awdiv@dividend^0,c
  7443  00413C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7444  00413E  A0D8               	btfss	status,0,c
  7445  004140  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7446  004142  0E00               	movlw	0
  7447  004144  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7448  004146  0E0A               	movlw	10
  7449  004148  6E16               	movwf	___awdiv@divisor^0,c
  7450  00414A  ECBB  F042         	call	___awdiv	;wreg free
  7451  00414E  5014               	movf	?___awdiv^0,w,c
  7452  004150  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  7453                           
  7454                           ;sm_MenuConfiguration_MC50.c: 1151:         }
  7455  004154  D7BF               	goto	l22408
  7456  004156                     l22428:
  7457                           
  7458                           ;sm_MenuConfiguration_MC50.c: 1153:         {;sm_MenuConfiguration_MC50.c: 1154:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7459  004156  0E0A               	movlw	10
  7460  004158  6E10               	movwf	___lbmod@divisor^0,c
  7461  00415A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7462  00415C  EC59  F04D         	call	___lbmod
  7463  004160  6E1C               	movwf	SetSegmentValue@d2^0,c
  7464  004162  0E0A               	movlw	10
  7465  004164  6E10               	movwf	___lbmod@divisor^0,c
  7466  004166  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7467  004168  EC59  F04D         	call	___lbmod
  7468  00416C  0100               	movlb	0	; () banked
  7469  00416E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7470  004170  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7471  004172  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7472  004174  6E14               	movwf	___awdiv@dividend^0,c
  7473  004176  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7474  004178  A0D8               	btfss	status,0,c
  7475  00417A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7476  00417C  0E00               	movlw	0
  7477  00417E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7478  004180  0E0A               	movlw	10
  7479  004182  6E16               	movwf	___awdiv@divisor^0,c
  7480  004184  ECBB  F042         	call	___awdiv	;wreg free
  7481  004188  5014               	movf	?___awdiv^0,w,c
  7482  00418A  ECAB  F04E         	call	_SetSegmentValue
  7483  00418E  D7A2               	goto	l22408
  7484  004190                     l22432:
  7485                           
  7486                           ; BSR set to: 1
  7487  004190  0E63               	movlw	99
  7488  004192  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7489  004194  D01A               	goto	l22442
  7490                           
  7491                           ; BSR set to: 1
  7492  004196  0E63               	movlw	99
  7493  004198  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7494  00419A  D017               	goto	l22442
  7495                           
  7496                           ; BSR set to: 1
  7497                           ;sm_MenuConfiguration_MC50.c: 1159:     {;sm_MenuConfiguration_MC50.c: 1160:         if(
      +                          menu_st.parameterSelected==0)
  7498  00419C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7499  00419E  A4D8               	btfss	status,2,c
  7500  0041A0  D00A               	goto	l22440
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;sm_MenuConfiguration_MC50.c: 1161:         {;sm_MenuConfiguration_MC50.c: 1162:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7504  0041A2  0E13               	movlw	19
  7505  0041A4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7506  0041A6  0E00               	movlw	0
  7507  0041A8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7508  0041AA  0E0A               	movlw	10
  7509  0041AC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7510  0041AE  0E12               	movlw	18
  7511  0041B0  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  7512                           
  7513                           ;sm_MenuConfiguration_MC50.c: 1163:         }
  7514  0041B4  0012               	return	
  7515  0041B6                     l22440:
  7516                           
  7517                           ; BSR set to: 1
  7518                           ;sm_MenuConfiguration_MC50.c: 1165:         {;sm_MenuConfiguration_MC50.c: 1166:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7519  0041B6  0E10               	movlw	16
  7520  0041B8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7521  0041BA  0E00               	movlw	0
  7522  0041BC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7523  0041BE  0E0A               	movlw	10
  7524  0041C0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7525  0041C2  0E12               	movlw	18
  7526  0041C4  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  7527  0041C8  0012               	return	
  7528  0041CA                     l22442:
  7529                           
  7530                           ; BSR set to: 1
  7531  0041CA  0100               	movlb	0	; () banked
  7532  0041CC  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7533  0041CE  B4D8               	btfsc	status,2,c
  7534  0041D0  D0A8               	goto	l22510
  7535                           
  7536                           ; BSR set to: 0
  7537  0041D2  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7538  0041D4  B4D8               	btfsc	status,2,c
  7539  0041D6  D00F               	goto	u25820
  7540                           
  7541                           ; BSR set to: 0
  7542  0041D8  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7543  0041DA  B4D8               	btfsc	status,2,c
  7544  0041DC  D00C               	goto	u25820
  7545                           
  7546                           ; BSR set to: 0
  7547  0041DE  0E02               	movlw	2
  7548  0041E0  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7549  0041E2  B4D8               	btfsc	status,2,c
  7550  0041E4  D008               	goto	u25820
  7551                           
  7552                           ; BSR set to: 0
  7553  0041E6  0E04               	movlw	4
  7554  0041E8  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7555  0041EA  B4D8               	btfsc	status,2,c
  7556  0041EC  D004               	goto	u25820
  7557                           
  7558                           ; BSR set to: 0
  7559  0041EE  0E08               	movlw	8
  7560  0041F0  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7561  0041F2  A4D8               	btfss	status,2,c
  7562  0041F4  D096               	goto	l22510
  7563  0041F6                     u25820:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;sm_MenuConfiguration_MC50.c: 1170:     {;sm_MenuConfiguration_MC50.c: 1171:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1172:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7567  0041F6  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7568  0041FA  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7569  0041FE  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7570  004202  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7571  004206  0E00               	movlw	0
  7572  004208  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7573  00420A  0EE2               	movlw	low controlSelectRemote@pos
  7574  00420C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7575  00420E  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7576  004210  ECFE  F030         	call	_validateRemoteSerialNumber	;wreg free
  7577  004214  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;sm_MenuConfiguration_MC50.c: 1174:         TypeRemote_st typeRemote = getTypeRemote();
  7581  004216  ECE2  F04F         	call	_getTypeRemote	;wreg free
  7582  00421A  0100               	movlb	0	; () banked
  7583  00421C  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;sm_MenuConfiguration_MC50.c: 1175:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7587  00421E  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7588  004220  A4D8               	btfss	status,2,c
  7589  004222  0012               	return	
  7590                           
  7591                           ; BSR set to: 0
  7592  004224  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7593  004226  B4D8               	btfsc	status,2,c
  7594  004228  D003               	goto	u25850
  7595                           
  7596                           ; BSR set to: 0
  7597  00422A  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7598  00422C  A4D8               	btfss	status,2,c
  7599  00422E  0012               	return	
  7600  004230                     u25850:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;sm_MenuConfiguration_MC50.c: 1176:         {;sm_MenuConfiguration_MC50.c: 1177:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7604  004230  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7605  004234  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7606  004238  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7607  00423C  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7608  004240  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7609  004244  0101               	movlb	1	; () banked
  7610  004246  5168               	movf	(_menu_st+23)& (0+255),w,b
  7611  004248  EC9F  F045         	call	_saveNewSerial
  7612                           
  7613                           ;sm_MenuConfiguration_MC50.c: 1178:             if(menu_st.parameterSelected==0&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7614  00424C  0101               	movlb	1	; () banked
  7615  00424E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7616  004250  A4D8               	btfss	status,2,c
  7617  004252  D009               	goto	l22474
  7618                           
  7619                           ; BSR set to: 1
  7620  004254  0100               	movlb	0	; () banked
  7621  004256  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7622  004258  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7623  00425A  A4D8               	btfss	status,2,c
  7624  00425C  D004               	goto	l22474
  7625                           
  7626                           ; BSR set to: 0
  7627  00425E  0E63               	movlw	99
  7628  004260  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7629  004262  D001               	goto	l22474
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;sm_MenuConfiguration_MC50.c: 1179:                 var_sys_NVM.positionRemotesFull++;
  7633  004264  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7634  004266                     l22474:
  7635                           
  7636                           ;sm_MenuConfiguration_MC50.c: 1180:             if(menu_st.parameterSelected==1&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesWalk&&var_sys_NVM.positionRemotesWalk<99)
  7637  004266  0101               	movlb	1	; () banked
  7638  004268  0568               	decf	(_menu_st+23)& (0+255),w,b
  7639  00426A  A4D8               	btfss	status,2,c
  7640  00426C  D009               	goto	l22482
  7641                           
  7642                           ; BSR set to: 1
  7643  00426E  0100               	movlb	0	; () banked
  7644  004270  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7645  004272  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7646  004274  A4D8               	btfss	status,2,c
  7647  004276  D004               	goto	l22482
  7648                           
  7649                           ; BSR set to: 0
  7650  004278  0E63               	movlw	99
  7651  00427A  61B9               	cpfslt	(_var_sys_NVM+33)& (0+255),b	;volatile
  7652  00427C  D001               	goto	l22482
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;sm_MenuConfiguration_MC50.c: 1181:                 var_sys_NVM.positionRemotesWalk++;
  7656  00427E  2BB9               	incf	(_var_sys_NVM+33)& (0+255),f,b	;volatile
  7657  004280                     l22482:
  7658                           
  7659                           ;sm_MenuConfiguration_MC50.c: 1182:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7660  004280  0EBD               	movlw	low _menuConfiguration_stateMachine
  7661  004282  6E12               	movwf	sm_send_event@psm^0,c
  7662  004284  0E02               	movlw	high _menuConfiguration_stateMachine
  7663  004286  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7664  004288  0E00               	movlw	0
  7665  00428A  6E15               	movwf	(sm_send_event@event+1)^0,c
  7666  00428C  0E08               	movlw	8
  7667  00428E  6E14               	movwf	sm_send_event@event^0,c
  7668  004290  EC7A  F047         	call	_sm_send_event	;wreg free
  7669                           
  7670                           ;sm_MenuConfiguration_MC50.c: 1183:             var_sys.DistanceProgrammingActive=NO;
  7671  004294  0E00               	movlw	0
  7672  004296  0101               	movlb	1	; () banked
  7673  004298  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7674                           
  7675                           ; BSR set to: 1
  7676                           ;sm_MenuConfiguration_MC50.c: 1184:             var_sys.ProgrammingDistanceIs=NoCMD;
  7677  00429A  0E00               	movlw	0
  7678  00429C  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7679                           
  7680                           ; BSR set to: 1
  7681                           ;sm_MenuConfiguration_MC50.c: 1185:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7682  00429E  0E00               	movlw	0
  7683  0042A0  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7684  0042A2  0E28               	movlw	40
  7685  0042A4  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7686                           
  7687                           ; BSR set to: 1
  7688                           ;sm_MenuConfiguration_MC50.c: 1186:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7689  0042A6  0E0A               	movlw	10
  7690  0042A8  6E10               	movwf	___lbmod@divisor^0,c
  7691  0042AA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7692  0042AC  EC59  F04D         	call	___lbmod
  7693  0042B0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7694  0042B2  0E00               	movlw	0
  7695  0042B4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7696  0042B6  0E04               	movlw	4
  7697  0042B8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7698  0042BA  0E0A               	movlw	10
  7699  0042BC  6E10               	movwf	___lbmod@divisor^0,c
  7700  0042BE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7701  0042C0  EC59  F04D         	call	___lbmod
  7702  0042C4  0100               	movlb	0	; () banked
  7703  0042C6  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7704  0042C8  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7705  0042CA  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7706  0042CC  6E14               	movwf	___awdiv@dividend^0,c
  7707  0042CE  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7708  0042D0  A0D8               	btfss	status,0,c
  7709  0042D2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7710  0042D4  0E00               	movlw	0
  7711  0042D6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7712  0042D8  0E0A               	movlw	10
  7713  0042DA  6E16               	movwf	___awdiv@divisor^0,c
  7714  0042DC  ECBB  F042         	call	___awdiv	;wreg free
  7715  0042E0  5014               	movf	?___awdiv^0,w,c
  7716  0042E2  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  7717                           
  7718                           ;sm_MenuConfiguration_MC50.c: 1187:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7719  0042E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7720  0042E8  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7721  0042EA  B4D8               	btfsc	status,2,c
  7722  0042EC  D003               	goto	u25930
  7723  0042EE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7724  0042F0  A4D8               	btfss	status,2,c
  7725  0042F2  0012               	return	
  7726  0042F4                     u25930:
  7727                           
  7728                           ;sm_MenuConfiguration_MC50.c: 1188:             {;sm_MenuConfiguration_MC50.c: 1192:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesWalk==0
      +                           && typeRemote==Keeloq_RollingCode)
  7729  0042F4  0100               	movlb	0	; () banked
  7730  0042F6  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7731  0042F8  A4D8               	btfss	status,2,c
  7732  0042FA  D008               	goto	l22504
  7733                           
  7734                           ; BSR set to: 0
  7735  0042FC  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7736  0042FE  A4D8               	btfss	status,2,c
  7737  004300  D005               	goto	l22504
  7738                           
  7739                           ; BSR set to: 0
  7740  004302  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7741  004304  A4D8               	btfss	status,2,c
  7742  004306  D002               	goto	l22504
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;sm_MenuConfiguration_MC50.c: 1193:                 {;sm_MenuConfiguration_MC50.c: 1195:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7746  004308  0E01               	movlw	1
  7747  00430A  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7748  00430C                     l22504:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;sm_MenuConfiguration_MC50.c: 1199:                 edit_Param.tempValue++;
  7752  00430C  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;sm_MenuConfiguration_MC50.c: 1200:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7756  00430E  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7757  004312  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7758  004316  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;sm_MenuConfiguration_MC50.c: 1201:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7762  00431A  0E02               	movlw	2
  7763  00431C  EC88  F04B         	call	_SaveNVM_VarSystem
  7764  004320  0012               	return	
  7765  004322                     l22510:
  7766                           
  7767                           ; BSR set to: 0
  7768  004322  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7769  004324  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7770  004326  B4D8               	btfsc	status,2,c
  7771  004328  0012               	return	
  7772                           
  7773                           ; BSR set to: 0
  7774  00432A  0E07               	movlw	7
  7775  00432C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7776  00432E  A4D8               	btfss	status,2,c
  7777  004330  0012               	return	
  7778                           
  7779                           ; BSR set to: 0
  7780  004332  0E27               	movlw	39
  7781  004334  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7782  004336  0012               	return	
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;sm_MenuConfiguration_MC50.c: 1208:     {;sm_MenuConfiguration_MC50.c: 1209:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7786  004338  0E00               	movlw	0
  7787  00433A  0101               	movlb	1	; () banked
  7788  00433C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7789  00433E  0E64               	movlw	100
  7790  004340  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7791                           
  7792                           ; BSR set to: 1
  7793                           ;sm_MenuConfiguration_MC50.c: 1210:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7794  004342  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7795  004346  5168               	movf	(_menu_st+23)& (0+255),w,b
  7796  004348  EC80  F043         	call	_RemoveSerial
  7797                           
  7798                           ;sm_MenuConfiguration_MC50.c: 1211:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7799  00434C  0E0A               	movlw	10
  7800  00434E  6E10               	movwf	___lbmod@divisor^0,c
  7801  004350  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7802  004352  EC59  F04D         	call	___lbmod
  7803  004356  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7804  004358  0E00               	movlw	0
  7805  00435A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7806  00435C  0E14               	movlw	20
  7807  00435E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7808  004360  0E0A               	movlw	10
  7809  004362  6E10               	movwf	___lbmod@divisor^0,c
  7810  004364  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7811  004366  EC59  F04D         	call	___lbmod
  7812  00436A  0100               	movlb	0	; () banked
  7813  00436C  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7814  00436E  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7815  004370  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7816  004372  6E14               	movwf	___awdiv@dividend^0,c
  7817  004374  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7818  004376  A0D8               	btfss	status,0,c
  7819  004378  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7820  00437A  0E00               	movlw	0
  7821  00437C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7822  00437E  0E0A               	movlw	10
  7823  004380  6E16               	movwf	___awdiv@divisor^0,c
  7824  004382  ECBB  F042         	call	___awdiv	;wreg free
  7825  004386  5014               	movf	?___awdiv^0,w,c
  7826  004388  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  7827  00438C  0012               	return	
  7828  00438E                     __end_of_controlSelectRemote:
  7829                           	callstack 0
  7830                           
  7831 ;; *************** function _getTypeRemote *****************
  7832 ;; Defined at:
  7833 ;;		line 459 in file "inputs_MC50.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      enum E10559
  7840 ;; Registers used:
  7841 ;;		wreg, status,2
  7842 ;; Tracked objects:
  7843 ;;		On entry : 3F/0
  7844 ;;		On exit  : 3F/2
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used: 1
  7853 ;; Hardware stack levels required when called: 4
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_controlSelectRemote
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text7
  7862  009FC4                     __ptext7:
  7863                           	callstack 0
  7864  009FC4                     _getTypeRemote:
  7865                           	callstack 23
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;inputs_MC50.c: 460:     return classic_data.type;
  7869                           
  7870                           ;incstack = 0
  7871  009FC4  0102               	movlb	2	; () banked
  7872  009FC6  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7873                           
  7874                           ; BSR set to: 2
  7875  009FC8  0012               	return		;funcret
  7876  009FCA                     __end_of_getTypeRemote:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _getSerialCmd *****************
  7880 ;; Defined at:
  7881 ;;		line 442 in file "inputs_MC50.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7884 ;;		 -> controlSelectRemote@tempSerial(4), 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  temp            1   27[COMRAM] char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      char 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7891 ;; Tracked objects:
  7892 ;;		On entry : 3F/1
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;Total ram usage:        2 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 5
  7903 ;; This function calls:
  7904 ;;		_memcpy
  7905 ;; This function is called by:
  7906 ;;		_controlSelectRemote
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text8
  7911  00935C                     __ptext8:
  7912                           	callstack 0
  7913  00935C                     _getSerialCmd:
  7914                           	callstack 22
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7918                           
  7919                           ; BSR set to: 2
  7920                           ;incstack = 0
  7921  00935C  681C               	setf	getSerialCmd@temp^0,c
  7922                           
  7923                           ; BSR set to: 1
  7924                           ;inputs_MC50.c: 444:     if(RFFull)
  7925  00935E  0100               	movlb	0	; () banked
  7926  009360  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7927  009362  B4D8               	btfsc	status,2,c
  7928  009364  D020               	goto	l20866
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7932  009366  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7933  009368  B4D8               	btfsc	status,2,c
  7934  00936A  D00E               	goto	l20862
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7938  00936C  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7939  009370  6A11               	clrf	(memcpy@d1+1)^0,c
  7940  009372  0E96               	movlw	low (_classic_data+4)
  7941  009374  6E12               	movwf	memcpy@s1^0,c
  7942  009376  0E02               	movlw	high (_classic_data+4)
  7943  009378  6E13               	movwf	(memcpy@s1+1)^0,c
  7944  00937A  0E00               	movlw	0
  7945  00937C  6E15               	movwf	(memcpy@n+1)^0,c
  7946  00937E  0E04               	movlw	4
  7947  009380  6E14               	movwf	memcpy@n^0,c
  7948  009382  EC8A  F04A         	call	_memcpy	;wreg free
  7949                           
  7950                           ;inputs_MC50.c: 449:         }
  7951  009386  D00D               	goto	l20864
  7952  009388                     l20862:
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7956  009388  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7957  00938C  6A11               	clrf	(memcpy@d1+1)^0,c
  7958  00938E  0ECC               	movlw	low (_BufferRF+4)
  7959  009390  6E12               	movwf	memcpy@s1^0,c
  7960  009392  0E02               	movlw	high (_BufferRF+4)
  7961  009394  6E13               	movwf	(memcpy@s1+1)^0,c
  7962  009396  0E00               	movlw	0
  7963  009398  6E15               	movwf	(memcpy@n+1)^0,c
  7964  00939A  0E04               	movlw	4
  7965  00939C  6E14               	movwf	memcpy@n^0,c
  7966  00939E  EC8A  F04A         	call	_memcpy	;wreg free
  7967  0093A2                     l20864:
  7968                           
  7969                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7970  0093A2  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7971  0093A6                     l20866:
  7972                           
  7973                           ;inputs_MC50.c: 456:     return temp;
  7974  0093A6  501C               	movf	getSerialCmd@temp^0,w,c
  7975  0093A8  0012               	return		;funcret
  7976  0093AA                     __end_of_getSerialCmd:
  7977                           	callstack 0
  7978                           
  7979 ;; *************** function _controlSaveRemote *****************
  7980 ;; Defined at:
  7981 ;;		line 1216 in file "sm_MenuConfiguration_MC50.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 3F/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;Total ram usage:        1 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 6
  8002 ;; This function calls:
  8003 ;;		_ClearFlag_rfCMD
  8004 ;;		_SetSegmentValueIntermitentMain
  8005 ;;		_SetSegmentValueMain
  8006 ;;		___awdiv
  8007 ;;		___lbmod
  8008 ;;		_sm_send_event
  8009 ;; This function is called by:
  8010 ;;		_sm_execute_menuConfiguration
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text9
  8015  007D14                     __ptext9:
  8016                           	callstack 0
  8017  007D14                     _controlSaveRemote:
  8018                           	callstack 22
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;sm_MenuConfiguration_MC50.c: 1217:      if (ts_system.timeSinalizationDigit<=0)
  8022                           
  8023                           ;incstack = 0
  8024  007D14  0101               	movlb	1	; () banked
  8025  007D16  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8026  007D18  D005               	goto	u26000
  8027  007D1A  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8028  007D1C  E154               	bnz	l3493
  8029  007D1E  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8030  007D20  B0D8               	btfsc	status,0,c
  8031  007D22  0012               	return	
  8032  007D24                     u26000:
  8033                           
  8034                           ; BSR set to: 1
  8035                           ;sm_MenuConfiguration_MC50.c: 1218:      {;sm_MenuConfiguration_MC50.c: 1219:          i
      +                          f(edit_Param.Max==0)
  8036  007D24  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8037  007D26  A4D8               	btfss	status,2,c
  8038  007D28  D02E               	goto	l22532
  8039                           
  8040                           ; BSR set to: 1
  8041                           ;sm_MenuConfiguration_MC50.c: 1220:          {;sm_MenuConfiguration_MC50.c: 1221:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8042  007D2A  0E00               	movlw	0
  8043  007D2C  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8044  007D2E  0EC8               	movlw	200
  8045  007D30  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8046                           
  8047                           ; BSR set to: 1
  8048                           ;sm_MenuConfiguration_MC50.c: 1222:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8049  007D32  0EBD               	movlw	low _menuConfiguration_stateMachine
  8050  007D34  6E12               	movwf	sm_send_event@psm^0,c
  8051  007D36  0E02               	movlw	high _menuConfiguration_stateMachine
  8052  007D38  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8053  007D3A  0E00               	movlw	0
  8054  007D3C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8055  007D3E  0E09               	movlw	9
  8056  007D40  6E14               	movwf	sm_send_event@event^0,c
  8057  007D42  EC7A  F047         	call	_sm_send_event	;wreg free
  8058                           
  8059                           ;sm_MenuConfiguration_MC50.c: 1223:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8060  007D46  0E0A               	movlw	10
  8061  007D48  6E10               	movwf	___lbmod@divisor^0,c
  8062  007D4A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8063  007D4C  EC59  F04D         	call	___lbmod
  8064  007D50  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8065  007D52  0E00               	movlw	0
  8066  007D54  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8067  007D56  0E14               	movlw	20
  8068  007D58  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8069  007D5A  0E0A               	movlw	10
  8070  007D5C  6E10               	movwf	___lbmod@divisor^0,c
  8071  007D5E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8072  007D60  EC59  F04D         	call	___lbmod
  8073  007D64  6E20               	movwf	??_controlSaveRemote^0,c
  8074  007D66  5020               	movf	??_controlSaveRemote^0,w,c
  8075  007D68  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8076  007D6A  6E14               	movwf	___awdiv@dividend^0,c
  8077  007D6C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8078  007D6E  A0D8               	btfss	status,0,c
  8079  007D70  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8080  007D72  0E00               	movlw	0
  8081  007D74  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8082  007D76  0E0A               	movlw	10
  8083  007D78  6E16               	movwf	___awdiv@divisor^0,c
  8084  007D7A  ECBB  F042         	call	___awdiv	;wreg free
  8085  007D7E  5014               	movf	?___awdiv^0,w,c
  8086  007D80  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
  8087                           
  8088                           ;sm_MenuConfiguration_MC50.c: 1224:          }
  8089  007D84  0012               	return	
  8090  007D86                     l22532:
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;sm_MenuConfiguration_MC50.c: 1226:          {;sm_MenuConfiguration_MC50.c: 1227:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8094  007D86  0EF1               	movlw	low _main_stateMachine
  8095  007D88  6E12               	movwf	sm_send_event@psm^0,c
  8096  007D8A  0E01               	movlw	high _main_stateMachine
  8097  007D8C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8098  007D8E  0E00               	movlw	0
  8099  007D90  6E15               	movwf	(sm_send_event@event+1)^0,c
  8100  007D92  0E07               	movlw	7
  8101  007D94  6E14               	movwf	sm_send_event@event^0,c
  8102  007D96  EC7A  F047         	call	_sm_send_event	;wreg free
  8103                           
  8104                           ;sm_MenuConfiguration_MC50.c: 1228:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8105  007D9A  0EBD               	movlw	low _menuConfiguration_stateMachine
  8106  007D9C  6E12               	movwf	sm_send_event@psm^0,c
  8107  007D9E  0E02               	movlw	high _menuConfiguration_stateMachine
  8108  007DA0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8109  007DA2  0E00               	movlw	0
  8110  007DA4  6E15               	movwf	(sm_send_event@event+1)^0,c
  8111  007DA6  0E04               	movlw	4
  8112  007DA8  6E14               	movwf	sm_send_event@event^0,c
  8113  007DAA  EC7A  F047         	call	_sm_send_event	;wreg free
  8114                           
  8115                           ;sm_MenuConfiguration_MC50.c: 1229:             SetSegmentValueMain(dMinus,dMinus);
  8116  007DAE  0E18               	movlw	24
  8117  007DB0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8118  007DB2  0E18               	movlw	24
  8119  007DB4  EC91  F04E         	call	_SetSegmentValueMain
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;sm_MenuConfiguration_MC50.c: 1230:             ClearFlag_rfCMD();
  8123  007DB8  ECE5  F04F         	call	_ClearFlag_rfCMD	;wreg free
  8124                           
  8125                           ;sm_MenuConfiguration_MC50.c: 1231:             ts_system.timeoutMenu = 0;
  8126  007DBC  0E00               	movlw	0
  8127  007DBE  0101               	movlb	1	; () banked
  8128  007DC0  6FAD               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8129  007DC2  0E00               	movlw	0
  8130  007DC4  6FAC               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8131  007DC6                     l3493:
  8132  007DC6  0012               	return		;funcret
  8133  007DC8                     __end_of_controlSaveRemote:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function ___lbmod *****************
  8137 ;; Defined at:
  8138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  dividend        1    wreg     unsigned char 
  8141 ;;  divisor         1   15[COMRAM] unsigned char 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  dividend        1   16[COMRAM] unsigned char 
  8144 ;;  rem             1   18[COMRAM] unsigned char 
  8145 ;;  counter         1   17[COMRAM] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      unsigned char 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/1
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;Total ram usage:        4 bytes
  8160 ;; Hardware stack levels used: 1
  8161 ;; Hardware stack levels required when called: 4
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_controlSelectRemote
  8166 ;;		_controlSaveRemote
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text10
  8171  009AB2                     __ptext10:
  8172                           	callstack 0
  8173  009AB2                     ___lbmod:
  8174                           	callstack 23
  8175                           
  8176                           ;incstack = 0
  8177                           ;___lbmod@dividend stored from wreg
  8178  009AB2  6E11               	movwf	___lbmod@dividend^0,c
  8179  009AB4  0E08               	movlw	8
  8180  009AB6  6E12               	movwf	___lbmod@counter^0,c
  8181  009AB8  0E00               	movlw	0
  8182  009ABA  6E13               	movwf	___lbmod@rem^0,c
  8183  009ABC                     l21258:
  8184  009ABC  90D8               	bcf	status,0,c
  8185  009ABE  3411               	rlcf	___lbmod@dividend^0,w,c
  8186  009AC0  3413               	rlcf	___lbmod@rem^0,w,c
  8187  009AC2  6E13               	movwf	___lbmod@rem^0,c
  8188  009AC4  90D8               	bcf	status,0,c
  8189  009AC6  3611               	rlcf	___lbmod@dividend^0,f,c
  8190  009AC8  5010               	movf	___lbmod@divisor^0,w,c
  8191  009ACA  5C13               	subwf	___lbmod@rem^0,w,c
  8192  009ACC  A0D8               	btfss	status,0,c
  8193  009ACE  D002               	goto	l21266
  8194  009AD0  5010               	movf	___lbmod@divisor^0,w,c
  8195  009AD2  5E13               	subwf	___lbmod@rem^0,f,c
  8196  009AD4                     l21266:
  8197  009AD4  2E12               	decfsz	___lbmod@counter^0,f,c
  8198  009AD6  D7F2               	goto	l21258
  8199  009AD8  5013               	movf	___lbmod@rem^0,w,c
  8200  009ADA  0012               	return		;funcret
  8201  009ADC                     __end_of___lbmod:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function ___awdiv *****************
  8205 ;; Defined at:
  8206 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  dividend        2   19[COMRAM] int 
  8209 ;;  divisor         2   21[COMRAM] int 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  quotient        2   25[COMRAM] int 
  8212 ;;  sign            1   24[COMRAM] unsigned char 
  8213 ;;  counter         1   23[COMRAM] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  2   19[COMRAM] int 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;Total ram usage:        8 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 4
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_controlSelectRemote
  8234 ;;		_controlSaveRemote
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text11
  8239  008576                     __ptext11:
  8240                           	callstack 0
  8241  008576                     ___awdiv:
  8242                           	callstack 23
  8243                           
  8244                           ;incstack = 0
  8245  008576  0E00               	movlw	0
  8246  008578  6E19               	movwf	___awdiv@sign^0,c
  8247  00857A  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8248  00857C  D006               	goto	l21194
  8249  00857E  6C16               	negf	___awdiv@divisor^0,c
  8250  008580  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8251  008582  B0D8               	btfsc	status,0,c
  8252  008584  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8253  008586  0E01               	movlw	1
  8254  008588  6E19               	movwf	___awdiv@sign^0,c
  8255  00858A                     l21194:
  8256  00858A  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8257  00858C  D006               	goto	l21200
  8258  00858E  6C14               	negf	___awdiv@dividend^0,c
  8259  008590  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8260  008592  B0D8               	btfsc	status,0,c
  8261  008594  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8262  008596  0E01               	movlw	1
  8263  008598  1A19               	xorwf	___awdiv@sign^0,f,c
  8264  00859A                     l21200:
  8265  00859A  0E00               	movlw	0
  8266  00859C  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8267  00859E  0E00               	movlw	0
  8268  0085A0  6E1A               	movwf	___awdiv@quotient^0,c
  8269  0085A2  5016               	movf	___awdiv@divisor^0,w,c
  8270  0085A4  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8271  0085A6  B4D8               	btfsc	status,2,c
  8272  0085A8  D01C               	goto	l21222
  8273  0085AA  0E01               	movlw	1
  8274  0085AC  6E18               	movwf	___awdiv@counter^0,c
  8275  0085AE  D004               	goto	l21208
  8276  0085B0                     l21206:
  8277  0085B0  90D8               	bcf	status,0,c
  8278  0085B2  3616               	rlcf	___awdiv@divisor^0,f,c
  8279  0085B4  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8280  0085B6  2A18               	incf	___awdiv@counter^0,f,c
  8281  0085B8                     l21208:
  8282  0085B8  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8283  0085BA  D7FA               	goto	l21206
  8284  0085BC                     u24420:
  8285  0085BC  90D8               	bcf	status,0,c
  8286  0085BE  361A               	rlcf	___awdiv@quotient^0,f,c
  8287  0085C0  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8288  0085C2  5016               	movf	___awdiv@divisor^0,w,c
  8289  0085C4  5C14               	subwf	___awdiv@dividend^0,w,c
  8290  0085C6  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8291  0085C8  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8292  0085CA  A0D8               	btfss	status,0,c
  8293  0085CC  D005               	goto	l21218
  8294  0085CE  5016               	movf	___awdiv@divisor^0,w,c
  8295  0085D0  5E14               	subwf	___awdiv@dividend^0,f,c
  8296  0085D2  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8297  0085D4  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8298  0085D6  801A               	bsf	___awdiv@quotient^0,0,c
  8299  0085D8                     l21218:
  8300  0085D8  90D8               	bcf	status,0,c
  8301  0085DA  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8302  0085DC  3216               	rrcf	___awdiv@divisor^0,f,c
  8303  0085DE  2E18               	decfsz	___awdiv@counter^0,f,c
  8304  0085E0  D7ED               	goto	u24420
  8305  0085E2                     l21222:
  8306  0085E2  5019               	movf	___awdiv@sign^0,w,c
  8307  0085E4  B4D8               	btfsc	status,2,c
  8308  0085E6  D004               	goto	l21226
  8309  0085E8  6C1A               	negf	___awdiv@quotient^0,c
  8310  0085EA  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8311  0085EC  B0D8               	btfsc	status,0,c
  8312  0085EE  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8313  0085F0                     l21226:
  8314  0085F0  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8315  0085F4  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8316  0085F8  0012               	return		;funcret
  8317  0085FA                     __end_of___awdiv:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _SetSegmentValueMain *****************
  8321 ;; Defined at:
  8322 ;;		line 104 in file "outputs_MC50.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  d1              1    wreg     unsigned char 
  8325 ;;  d2              1   27[COMRAM] unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  d1              1   28[COMRAM] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 3F/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8341 ;;Total ram usage:        2 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 4
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_sm_execute_main
  8348 ;;		_sm_execute_menuConfiguration
  8349 ;;		_load_New_Menu
  8350 ;;		_controlSelectRemote
  8351 ;;		_controlSaveRemote
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text12
  8356  009D22                     __ptext12:
  8357                           	callstack 0
  8358  009D22                     _SetSegmentValueMain:
  8359                           	callstack 22
  8360                           
  8361                           ;incstack = 0
  8362                           ;SetSegmentValueMain@d1 stored from wreg
  8363  009D22  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8364                           
  8365                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8366  009D24  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8367                           
  8368                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8369  009D28  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8370                           
  8371                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8372  009D2C  0E00               	movlw	0
  8373  009D2E  0100               	movlb	0	; () banked
  8374  009D30  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8375  009D32  0E00               	movlw	0
  8376  009D34  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8380  009D36  0E00               	movlw	0
  8381  009D38  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8382                           
  8383                           ; BSR set to: 0
  8384  009D3A  0012               	return		;funcret
  8385  009D3C                     __end_of_SetSegmentValueMain:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _ClearFlag_rfCMD *****************
  8389 ;; Defined at:
  8390 ;;		line 463 in file "inputs_MC50.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/1
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; Hardware stack levels required when called: 4
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_sm_execute_menuConfiguration
  8415 ;;		_controlSelectRemote
  8416 ;;		_controlSaveRemote
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text13
  8421  009FCA                     __ptext13:
  8422                           	callstack 0
  8423  009FCA                     _ClearFlag_rfCMD:
  8424                           	callstack 23
  8425                           
  8426                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;incstack = 0
  8430  009FCA  0E01               	movlw	1
  8431  009FCC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8432  009FCE  0012               	return		;funcret
  8433  009FD0                     __end_of_ClearFlag_rfCMD:
  8434                           	callstack 0
  8435                           
  8436 ;; *************** function _controlLearnDigit *****************
  8437 ;; Defined at:
  8438 ;;		line 1237 in file "sm_MenuConfiguration_MC50.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 3F/0
  8449 ;;		On exit  : 3E/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used: 1
  8458 ;; Hardware stack levels required when called: 5
  8459 ;; This function calls:
  8460 ;;		_SetSegmentValueLearn
  8461 ;; This function is called by:
  8462 ;;		_sm_execute_menuConfiguration
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text14
  8467  009844                     __ptext14:
  8468                           	callstack 0
  8469  009844                     _controlLearnDigit:
  8470                           	callstack 23
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;sm_MenuConfiguration_MC50.c: 1239:     if(ts_system.timeSinalizationDigit<=0 )
  8474                           
  8475                           ;incstack = 0
  8476  009844  0101               	movlb	1	; () banked
  8477  009846  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8478  009848  D005               	goto	u26020
  8479  00984A  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8480  00984C  E112               	bnz	l3499
  8481  00984E  05AA               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8482  009850  B0D8               	btfsc	status,0,c
  8483  009852  0012               	return	
  8484  009854                     u26020:
  8485                           
  8486                           ; BSR set to: 1
  8487                           ;sm_MenuConfiguration_MC50.c: 1240:     {;sm_MenuConfiguration_MC50.c: 1241:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8488  009854  0E00               	movlw	0
  8489  009856  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8490  009858  0E02               	movlw	2
  8491  00985A  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;sm_MenuConfiguration_MC50.c: 1242:         if(var_sys.StateMotor==InClose)
  8495  00985C  0E03               	movlw	3
  8496  00985E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8497  009860  A4D8               	btfss	status,2,c
  8498  009862  D004               	goto	l22548
  8499                           
  8500                           ; BSR set to: 1
  8501                           ;sm_MenuConfiguration_MC50.c: 1243:         {;sm_MenuConfiguration_MC50.c: 1244:        
      +                               SetSegmentValueLearn(Left);
  8502  009864  0E00               	movlw	0
  8503  009866  EC81  F03B         	call	_SetSegmentValueLearn
  8504                           
  8505                           ;sm_MenuConfiguration_MC50.c: 1245:         }
  8506  00986A  0012               	return	
  8507  00986C                     l22548:
  8508                           
  8509                           ; BSR set to: 1
  8510                           ;sm_MenuConfiguration_MC50.c: 1247:         {;sm_MenuConfiguration_MC50.c: 1248:        
      +                               SetSegmentValueLearn(Rigth);
  8511  00986C  0E01               	movlw	1
  8512  00986E  EC81  F03B         	call	_SetSegmentValueLearn
  8513  009872                     l3499:
  8514  009872  0012               	return		;funcret
  8515  009874                     __end_of_controlLearnDigit:
  8516                           	callstack 0
  8517                           
  8518 ;; *************** function _SetSegmentValueLearn *****************
  8519 ;; Defined at:
  8520 ;;		line 124 in file "outputs_MC50.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  direction       1    wreg     enum E10602
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  direction       1   17[COMRAM] enum E10602
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 3F/1
  8531 ;;		On exit  : 3F/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8537 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;Total ram usage:        3 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 4
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_controlLearnDigit
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text15
  8549  007702                     __ptext15:
  8550                           	callstack 0
  8551  007702                     _SetSegmentValueLearn:
  8552                           	callstack 23
  8553                           
  8554                           ;incstack = 0
  8555                           ;SetSegmentValueLearn@direction stored from wreg
  8556  007702  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8557                           
  8558                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8559  007704  0E00               	movlw	0
  8560  007706  0100               	movlb	0	; () banked
  8561  007708  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8562  00770A  0E00               	movlw	0
  8563  00770C  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8564                           
  8565                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8566  00770E  0E00               	movlw	0
  8567  007710  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8568                           
  8569                           ;outputs_MC50.c: 128:     switch (direction)
  8570  007712  D066               	goto	l21024
  8571  007714                     l20970:
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8575  007714  0E1A               	movlw	26
  8576  007716  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8577  007718  A4D8               	btfss	status,2,c
  8578  00771A  D009               	goto	l20976
  8579                           
  8580                           ; BSR set to: 0
  8581  00771C  0E20               	movlw	32
  8582  00771E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8583  007720  A4D8               	btfss	status,2,c
  8584  007722  D005               	goto	l20976
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8588  007724  0E20               	movlw	32
  8589  007726  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8590                           
  8591                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8592  007728  0E1A               	movlw	26
  8593  00772A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8594                           
  8595                           ;outputs_MC50.c: 135:             }
  8596  00772C  0012               	return	
  8597  00772E                     l20976:
  8598                           
  8599                           ; BSR set to: 0
  8600  00772E  0E20               	movlw	32
  8601  007730  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8602  007732  A4D8               	btfss	status,2,c
  8603  007734  D009               	goto	l20982
  8604                           
  8605                           ; BSR set to: 0
  8606  007736  0E1D               	movlw	29
  8607  007738  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8608  00773A  A4D8               	btfss	status,2,c
  8609  00773C  D005               	goto	l20982
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8613  00773E  0E1D               	movlw	29
  8614  007740  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8615                           
  8616                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8617  007742  0E20               	movlw	32
  8618  007744  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8619                           
  8620                           ;outputs_MC50.c: 140:             }
  8621  007746  0012               	return	
  8622  007748                     l20982:
  8623                           
  8624                           ; BSR set to: 0
  8625  007748  0E1F               	movlw	31
  8626  00774A  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8627  00774C  A4D8               	btfss	status,2,c
  8628  00774E  D005               	goto	l20986
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8632  007750  0E1A               	movlw	26
  8633  007752  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8634                           
  8635                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8636  007754  0E20               	movlw	32
  8637  007756  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8638                           
  8639                           ;outputs_MC50.c: 145:             }
  8640  007758  0012               	return	
  8641  00775A                     l20986:
  8642                           
  8643                           ; BSR set to: 0
  8644  00775A  0E20               	movlw	32
  8645  00775C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8646  00775E  A4D8               	btfss	status,2,c
  8647  007760  D002               	goto	l20990
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8651  007762  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8652                           
  8653                           ;outputs_MC50.c: 149:             }
  8654  007764  0012               	return	
  8655  007766                     l20990:
  8656                           
  8657                           ; BSR set to: 0
  8658  007766  0E20               	movlw	32
  8659  007768  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8660  00776A  A4D8               	btfss	status,2,c
  8661  00776C  D002               	goto	l20994
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8665  00776E  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8666                           
  8667                           ;outputs_MC50.c: 153:             }
  8668  007770  0012               	return	
  8669  007772                     l20994:
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8673  007772  0E1A               	movlw	26
  8674  007774  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8675                           
  8676                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8677  007776  0E20               	movlw	32
  8678  007778  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8679  00777A  0012               	return	
  8680  00777C                     l20996:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8684  00777C  0E1A               	movlw	26
  8685  00777E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8686  007780  A4D8               	btfss	status,2,c
  8687  007782  D009               	goto	l21002
  8688                           
  8689                           ; BSR set to: 0
  8690  007784  0E20               	movlw	32
  8691  007786  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8692  007788  A4D8               	btfss	status,2,c
  8693  00778A  D005               	goto	l21002
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8697  00778C  0E1A               	movlw	26
  8698  00778E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8699                           
  8700                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8701  007790  0E20               	movlw	32
  8702  007792  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8703                           
  8704                           ;outputs_MC50.c: 165:             }
  8705  007794  0012               	return	
  8706  007796                     l21002:
  8707                           
  8708                           ; BSR set to: 0
  8709  007796  0E20               	movlw	32
  8710  007798  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8711  00779A  A4D8               	btfss	status,2,c
  8712  00779C  D009               	goto	l21008
  8713                           
  8714                           ; BSR set to: 0
  8715  00779E  0E1D               	movlw	29
  8716  0077A0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8717  0077A2  A4D8               	btfss	status,2,c
  8718  0077A4  D005               	goto	l21008
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8722  0077A6  0E20               	movlw	32
  8723  0077A8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8724                           
  8725                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8726  0077AA  0E1D               	movlw	29
  8727  0077AC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8728                           
  8729                           ;outputs_MC50.c: 170:             }
  8730  0077AE  0012               	return	
  8731  0077B0                     l21008:
  8732                           
  8733                           ; BSR set to: 0
  8734  0077B0  0E1A               	movlw	26
  8735  0077B2  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8736  0077B4  A4D8               	btfss	status,2,c
  8737  0077B6  D003               	goto	l21012
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8741  0077B8  0E1F               	movlw	31
  8742  0077BA  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8743                           
  8744                           ;outputs_MC50.c: 174:             }
  8745  0077BC  0012               	return	
  8746  0077BE                     l21012:
  8747                           
  8748                           ; BSR set to: 0
  8749  0077BE  0E20               	movlw	32
  8750  0077C0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8751  0077C2  A4D8               	btfss	status,2,c
  8752  0077C4  D002               	goto	l21016
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8756  0077C6  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8757                           
  8758                           ;outputs_MC50.c: 178:             }
  8759  0077C8  0012               	return	
  8760  0077CA                     l21016:
  8761                           
  8762                           ; BSR set to: 0
  8763  0077CA  0E20               	movlw	32
  8764  0077CC  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8765  0077CE  A4D8               	btfss	status,2,c
  8766  0077D0  D002               	goto	l21020
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8770  0077D2  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8771                           
  8772                           ;outputs_MC50.c: 182:             }
  8773  0077D4  0012               	return	
  8774  0077D6                     l21020:
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8778  0077D6  0E1A               	movlw	26
  8779  0077D8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8780                           
  8781                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8782  0077DA  0E20               	movlw	32
  8783  0077DC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8784  0077DE  0012               	return	
  8785  0077E0                     l21024:
  8786                           
  8787                           ; BSR set to: 0
  8788  0077E0  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8789  0077E2  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8790  0077E4  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8791                           
  8792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8793                           ; Switch size 1, requested type "simple"
  8794                           ; Number of cases is 1, Range of values is 0 to 0
  8795                           ; switch strategies available:
  8796                           ; Name         Instructions Cycles
  8797                           ; simple_byte            4     3 (average)
  8798                           ;	Chosen strategy is simple_byte
  8799  0077E6  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8800  0077E8  0A00               	xorlw	0	; case 0
  8801  0077EA  A4D8               	btfss	status,2,c
  8802  0077EC  0012               	return	
  8803                           
  8804                           ; BSR set to: 0
  8805                           ; Switch size 1, requested type "simple"
  8806                           ; Number of cases is 2, Range of values is 0 to 1
  8807                           ; switch strategies available:
  8808                           ; Name         Instructions Cycles
  8809                           ; simple_byte            7     4 (average)
  8810                           ;	Chosen strategy is simple_byte
  8811  0077EE  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8812  0077F0  0A00               	xorlw	0	; case 0
  8813  0077F2  B4D8               	btfsc	status,2,c
  8814  0077F4  D7C3               	goto	l20996
  8815  0077F6  0A01               	xorlw	1	; case 1
  8816  0077F8  A4D8               	btfss	status,2,c
  8817  0077FA  0012               	return	
  8818  0077FC  D78B               	goto	l20970
  8819  0077FE                     __end_of_SetSegmentValueLearn:
  8820                           	callstack 0
  8821                           
  8822 ;; *************** function ___lldiv *****************
  8823 ;; Defined at:
  8824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  dividend        4   15[COMRAM] unsigned long 
  8827 ;;  divisor         4   19[COMRAM] unsigned long 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  quotient        4   23[COMRAM] unsigned long 
  8830 ;;  counter         1   27[COMRAM] unsigned char 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  4   15[COMRAM] unsigned long 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/1
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8840 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;Total ram usage:       13 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 4
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_sm_execute_menuConfiguration
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text16
  8855  00867E                     __ptext16:
  8856                           	callstack 0
  8857  00867E                     ___lldiv:
  8858                           	callstack 24
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;incstack = 0
  8862  00867E  0E00               	movlw	0
  8863  008680  6E18               	movwf	___lldiv@quotient^0,c
  8864  008682  0E00               	movlw	0
  8865  008684  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8866  008686  0E00               	movlw	0
  8867  008688  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8868  00868A  0E00               	movlw	0
  8869  00868C  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8870  00868E  5014               	movf	___lldiv@divisor^0,w,c
  8871  008690  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8872  008692  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8873  008694  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8874  008696  B4D8               	btfsc	status,2,c
  8875  008698  D02A               	goto	l3832
  8876  00869A  0E01               	movlw	1
  8877  00869C  6E1C               	movwf	___lldiv@counter^0,c
  8878  00869E  D006               	goto	l22730
  8879  0086A0                     l22728:
  8880  0086A0  90D8               	bcf	status,0,c
  8881  0086A2  3614               	rlcf	___lldiv@divisor^0,f,c
  8882  0086A4  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8883  0086A6  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8884  0086A8  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8885  0086AA  2A1C               	incf	___lldiv@counter^0,f,c
  8886  0086AC                     l22730:
  8887  0086AC  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8888  0086AE  D7F8               	goto	l22728
  8889  0086B0                     u26180:
  8890  0086B0  90D8               	bcf	status,0,c
  8891  0086B2  3618               	rlcf	___lldiv@quotient^0,f,c
  8892  0086B4  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8893  0086B6  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8894  0086B8  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8895  0086BA  5014               	movf	___lldiv@divisor^0,w,c
  8896  0086BC  5C10               	subwf	___lldiv@dividend^0,w,c
  8897  0086BE  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8898  0086C0  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8899  0086C2  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8900  0086C4  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8901  0086C6  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8902  0086C8  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8903  0086CA  A0D8               	btfss	status,0,c
  8904  0086CC  D009               	goto	l22740
  8905  0086CE  5014               	movf	___lldiv@divisor^0,w,c
  8906  0086D0  5E10               	subwf	___lldiv@dividend^0,f,c
  8907  0086D2  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8908  0086D4  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8909  0086D6  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8910  0086D8  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8911  0086DA  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8912  0086DC  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8913  0086DE  8018               	bsf	___lldiv@quotient^0,0,c
  8914  0086E0                     l22740:
  8915  0086E0  90D8               	bcf	status,0,c
  8916  0086E2  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8917  0086E4  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8918  0086E6  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8919  0086E8  3214               	rrcf	___lldiv@divisor^0,f,c
  8920  0086EA  2E1C               	decfsz	___lldiv@counter^0,f,c
  8921  0086EC  D7E1               	goto	u26180
  8922  0086EE                     l3832:
  8923  0086EE  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8924  0086F2  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8925  0086F6  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8926  0086FA  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8927  0086FE  0012               	return		;funcret
  8928  008700                     __end_of___lldiv:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function _sm_execute_ControlGate *****************
  8932 ;; Defined at:
  8933 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  psm             2   15[BANK0 ] PTR struct .
  8936 ;;		 -> controlGate_stateMachine(11), 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 3F/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8951 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;Total ram usage:        5 bytes
  8953 ;; Hardware stack levels used: 1
  8954 ;; Hardware stack levels required when called: 15
  8955 ;; This function calls:
  8956 ;;		_GetOpenOrder
  8957 ;;		_SetSegmentValueIntermitent
  8958 ;;		_WaitPreFlash
  8959 ;;		_actionZone_Closed
  8960 ;;		_actionZone_Closing
  8961 ;;		_actionZone_Opened
  8962 ;;		_actionZone_Opening
  8963 ;;		_sm_execute_ControlLearning
  8964 ;;		_sm_send_event
  8965 ;; This function is called by:
  8966 ;;		_main
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text17
  8971  00438E                     __ptext17:
  8972                           	callstack 0
  8973  00438E                     _sm_execute_ControlGate:
  8974                           	callstack 15
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8978                           
  8979                           ;incstack = 0
  8980  00438E  0101               	movlb	1	; () banked
  8981  004390  05F1               	decf	_main_stateMachine& (0+255),w,b
  8982  004392  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8983  004394  A4D8               	btfss	status,2,c
  8984  004396  D006               	goto	l26094
  8985                           
  8986                           ; BSR set to: 1
  8987  004398  0E06               	movlw	6
  8988  00439A  0102               	movlb	2	; () banked
  8989  00439C  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8990  00439E  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8991  0043A0  A4D8               	btfss	status,2,c
  8992  0043A2  0012               	return	
  8993  0043A4                     l26094:
  8994                           
  8995                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8996  0043A4  0101               	movlb	1	; () banked
  8997  0043A6  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8998  0043A8  A4D8               	btfss	status,2,c
  8999  0043AA  D0CE               	goto	l26168
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9003  0043AC  EC67  F045         	call	_WaitPreFlash	;wreg free
  9004  0043B0  D0CB               	goto	l26168
  9005  0043B2                     l26098:
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9009  0043B2  EE20 F004          	lfsr	2,4
  9010  0043B6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9011  0043B8  26D9               	addwf	fsr2l,f,c
  9012  0043BA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9013  0043BC  22DA               	addwfc	fsr2h,f,c
  9014  0043BE  0E0A               	movlw	10
  9015  0043C0  18DE               	xorwf	postinc2,w,c
  9016  0043C2  10DE               	iorwf	postinc2,w,c
  9017  0043C4  A4D8               	btfss	status,2,c
  9018  0043C6  D006               	goto	l26102
  9019  0043C8                     u33130:
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9023  0043C8  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9024  0043CC  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9025  0043D0  0E01               	movlw	1
  9026  0043D2  D0B5               	goto	L55
  9027  0043D4                     l26102:
  9028                           
  9029                           ; BSR set to: 0
  9030  0043D4  EE20 F004          	lfsr	2,4
  9031  0043D8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9032  0043DA  26D9               	addwf	fsr2l,f,c
  9033  0043DC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9034  0043DE  22DA               	addwfc	fsr2h,f,c
  9035  0043E0  0E0B               	movlw	11
  9036  0043E2  18DE               	xorwf	postinc2,w,c
  9037  0043E4  10DE               	iorwf	postinc2,w,c
  9038  0043E6  A4D8               	btfss	status,2,c
  9039  0043E8  D0CF               	goto	l26170
  9040  0043EA  D038               	goto	u33200
  9041  0043EC                     l26106:
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9045  0043EC  EE20 F004          	lfsr	2,4
  9046  0043F0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9047  0043F2  26D9               	addwf	fsr2l,f,c
  9048  0043F4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9049  0043F6  22DA               	addwfc	fsr2h,f,c
  9050  0043F8  0E0C               	movlw	12
  9051  0043FA  18DE               	xorwf	postinc2,w,c
  9052  0043FC  10DE               	iorwf	postinc2,w,c
  9053  0043FE  A4D8               	btfss	status,2,c
  9054  004400  D072               	goto	l26154
  9055  004402                     u33150:
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9059  004402  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9060  004406  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9061  00440A  0E02               	movlw	2
  9062  00440C  D098               	goto	L55
  9063  00440E                     l26114:
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9067  00440E  EE20 F004          	lfsr	2,4
  9068  004412  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9069  004414  26D9               	addwf	fsr2l,f,c
  9070  004416  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9071  004418  22DA               	addwfc	fsr2h,f,c
  9072  00441A  0E0D               	movlw	13
  9073  00441C  18DE               	xorwf	postinc2,w,c
  9074  00441E  10DE               	iorwf	postinc2,w,c
  9075  004420  B4D8               	btfsc	status,2,c
  9076  004422  D01C               	goto	u33200
  9077                           
  9078                           ; BSR set to: 0
  9079                           
  9080                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9084  004424  EE20 F004          	lfsr	2,4
  9085  004428  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9086  00442A  26D9               	addwf	fsr2l,f,c
  9087  00442C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9088  00442E  22DA               	addwfc	fsr2h,f,c
  9089  004430  0E0E               	movlw	14
  9090  004432  18DE               	xorwf	postinc2,w,c
  9091  004434  10DE               	iorwf	postinc2,w,c
  9092  004436  A4D8               	btfss	status,2,c
  9093  004438  D02D               	goto	L131
  9094  00443A                     u33180:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9098  00443A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9099  00443E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9100  004442  0E03               	movlw	3
  9101  004444  D07C               	goto	L55
  9102  004446                     l26126:
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9106  004446  EE20 F004          	lfsr	2,4
  9107  00444A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9108  00444C  26D9               	addwf	fsr2l,f,c
  9109  00444E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9110  004450  22DA               	addwfc	fsr2h,f,c
  9111  004452  0E0D               	movlw	13
  9112  004454  18DE               	xorwf	postinc2,w,c
  9113  004456  10DE               	iorwf	postinc2,w,c
  9114  004458  A4D8               	btfss	status,2,c
  9115  00445A  D006               	goto	l26130
  9116  00445C                     u33200:
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9120  00445C  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9121  004460  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9122  004464  0E04               	movlw	4
  9123  004466  D06B               	goto	L55
  9124  004468                     l26130:
  9125                           
  9126                           ; BSR set to: 0
  9127  004468  EE20 F004          	lfsr	2,4
  9128  00446C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9129  00446E  26D9               	addwf	fsr2l,f,c
  9130  004470  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9131  004472  22DA               	addwfc	fsr2h,f,c
  9132  004474  0E0F               	movlw	15
  9133  004476  18DE               	xorwf	postinc2,w,c
  9134  004478  10DE               	iorwf	postinc2,w,c
  9135  00447A  B4D8               	btfsc	status,2,c
  9136  00447C  D7A5               	goto	u33130
  9137                           
  9138                           ; BSR set to: 0
  9139                           
  9140                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9144  00447E  EE20 F004          	lfsr	2,4
  9145  004482  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9146  004484  26D9               	addwf	fsr2l,f,c
  9147  004486  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9148  004488  22DA               	addwfc	fsr2h,f,c
  9149  00448A  0E0C               	movlw	12
  9150  00448C  18DE               	xorwf	postinc2,w,c
  9151  00448E  10DE               	iorwf	postinc2,w,c
  9152  004490  B4D8               	btfsc	status,2,c
  9153  004492  D7B7               	goto	u33150
  9154  004494                     L131:
  9155                           
  9156                           ; BSR set to: 0
  9157                           
  9158                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9162  004494  EE20 F004          	lfsr	2,4
  9163  004498  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9164  00449A  26D9               	addwf	fsr2l,f,c
  9165  00449C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9166  00449E  22DA               	addwfc	fsr2h,f,c
  9167  0044A0  0E10               	movlw	16
  9168  0044A2  D044               	goto	L128
  9169  0044A4                     l26142:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9173  0044A4  EE20 F004          	lfsr	2,4
  9174  0044A8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9175  0044AA  26D9               	addwf	fsr2l,f,c
  9176  0044AC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9177  0044AE  22DA               	addwfc	fsr2h,f,c
  9178  0044B0  0E0E               	movlw	14
  9179  0044B2  18DE               	xorwf	postinc2,w,c
  9180  0044B4  10DE               	iorwf	postinc2,w,c
  9181  0044B6  B4D8               	btfsc	status,2,c
  9182  0044B8  D7C0               	goto	u33180
  9183                           
  9184                           ; BSR set to: 0
  9185                           
  9186                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9190  0044BA  EE20 F004          	lfsr	2,4
  9191  0044BE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9192  0044C0  26D9               	addwf	fsr2l,f,c
  9193  0044C2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9194  0044C4  22DA               	addwfc	fsr2h,f,c
  9195  0044C6  0E0C               	movlw	12
  9196  0044C8  18DE               	xorwf	postinc2,w,c
  9197  0044CA  10DE               	iorwf	postinc2,w,c
  9198  0044CC  B4D8               	btfsc	status,2,c
  9199  0044CE  D799               	goto	u33150
  9200                           
  9201                           ; BSR set to: 0
  9202                           
  9203                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9207  0044D0  EE20 F004          	lfsr	2,4
  9208  0044D4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9209  0044D6  26D9               	addwf	fsr2l,f,c
  9210  0044D8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9211  0044DA  22DA               	addwfc	fsr2h,f,c
  9212  0044DC  0E10               	movlw	16
  9213  0044DE  18DE               	xorwf	postinc2,w,c
  9214  0044E0  10DE               	iorwf	postinc2,w,c
  9215  0044E2  B4D8               	btfsc	status,2,c
  9216  0044E4  D027               	goto	L129
  9217  0044E6                     l26154:
  9218                           
  9219                           ; BSR set to: 0
  9220  0044E6  EE20 F004          	lfsr	2,4
  9221  0044EA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9222  0044EC  26D9               	addwf	fsr2l,f,c
  9223  0044EE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9224  0044F0  22DA               	addwfc	fsr2h,f,c
  9225  0044F2  0E14               	movlw	20
  9226  0044F4  18DE               	xorwf	postinc2,w,c
  9227  0044F6  10DE               	iorwf	postinc2,w,c
  9228  0044F8  A4D8               	btfss	status,2,c
  9229  0044FA  D046               	goto	l26170
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9233  0044FC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9234  004500  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9235  004504  0E05               	movlw	5
  9236  004506  D01B               	goto	L55
  9237  004508                     l26158:
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9241  004508  EE20 F004          	lfsr	2,4
  9242  00450C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9243  00450E  26D9               	addwf	fsr2l,f,c
  9244  004510  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9245  004512  22DA               	addwfc	fsr2h,f,c
  9246  004514  0E13               	movlw	19
  9247  004516  18DE               	xorwf	postinc2,w,c
  9248  004518  10DE               	iorwf	postinc2,w,c
  9249  00451A  B4D8               	btfsc	status,2,c
  9250  00451C  D755               	goto	u33130
  9251                           
  9252                           ; BSR set to: 0
  9253                           
  9254                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9258  00451E  EE20 F004          	lfsr	2,4
  9259  004522  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9260  004524  26D9               	addwf	fsr2l,f,c
  9261  004526  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9262  004528  22DA               	addwfc	fsr2h,f,c
  9263  00452A  0E12               	movlw	18
  9264  00452C                     L128:
  9265  00452C  18DE               	xorwf	postinc2,w,c
  9266  00452E  10DE               	iorwf	postinc2,w,c
  9267  004530  A4D8               	btfss	status,2,c
  9268  004532  D02A               	goto	l26170
  9269  004534                     L129:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9273  004534  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9274  004538  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9275  00453C  0E00               	movlw	0
  9276  00453E                     L55:
  9277  00453E  6EDE               	movwf	postinc2,c
  9278  004540  0E00               	movlw	0
  9279  004542  6EDD               	movwf	postdec2,c
  9280  004544  D021               	goto	l26170
  9281  004546                     l2653:
  9282                           
  9283                           ; BSR set to: 0
  9284  004546  D7FF               	goto	l2653
  9285  004548                     l26168:
  9286                           
  9287                           ; BSR set to: 1
  9288  004548  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9289  00454C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9290  004550  50DF               	movf	indf2,w,c
  9291  004552  0100               	movlb	0	; () banked
  9292  004554  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9293  004556  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9294                           
  9295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9296                           ; Switch size 1, requested type "simple"
  9297                           ; Number of cases is 1, Range of values is 0 to 0
  9298                           ; switch strategies available:
  9299                           ; Name         Instructions Cycles
  9300                           ; simple_byte            4     3 (average)
  9301                           ;	Chosen strategy is simple_byte
  9302  004558  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9303  00455A  0A00               	xorlw	0	; case 0
  9304  00455C  A4D8               	btfss	status,2,c
  9305  00455E  D7F3               	goto	l2653
  9306                           
  9307                           ; BSR set to: 0
  9308                           ; Switch size 1, requested type "simple"
  9309                           ; Number of cases is 6, Range of values is 0 to 5
  9310                           ; switch strategies available:
  9311                           ; Name         Instructions Cycles
  9312                           ; simple_byte           19    10 (average)
  9313                           ;	Chosen strategy is simple_byte
  9314  004560  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9315  004562  0A00               	xorlw	0	; case 0
  9316  004564  B4D8               	btfsc	status,2,c
  9317  004566  D725               	goto	l26098
  9318  004568  0A01               	xorlw	1	; case 1
  9319  00456A  B4D8               	btfsc	status,2,c
  9320  00456C  D73F               	goto	l26106
  9321  00456E  0A03               	xorlw	3	; case 2
  9322  004570  B4D8               	btfsc	status,2,c
  9323  004572  D74D               	goto	l26114
  9324  004574  0A01               	xorlw	1	; case 3
  9325  004576  B4D8               	btfsc	status,2,c
  9326  004578  D766               	goto	l26126
  9327  00457A  0A07               	xorlw	7	; case 4
  9328  00457C  B4D8               	btfsc	status,2,c
  9329  00457E  D792               	goto	l26142
  9330  004580  0A01               	xorlw	1	; case 5
  9331  004582  B4D8               	btfsc	status,2,c
  9332  004584  D7C1               	goto	l26158
  9333  004586  D7DF               	goto	l2653
  9334  004588                     l26170:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9338  004588  0EE6               	movlw	low _controlGate_stateMachine
  9339  00458A  6E12               	movwf	sm_send_event@psm^0,c
  9340  00458C  0E01               	movlw	high _controlGate_stateMachine
  9341  00458E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9342  004590  0E00               	movlw	0
  9343  004592  6E15               	movwf	(sm_send_event@event+1)^0,c
  9344  004594  0E00               	movlw	0
  9345  004596  6E14               	movwf	sm_send_event@event^0,c
  9346  004598  EC7A  F047         	call	_sm_send_event	;wreg free
  9347                           
  9348                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9349  00459C  D07E               	goto	l26234
  9350  00459E                     l26172:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9354  00459E  0E00               	movlw	0
  9355  0045A0  0101               	movlb	1	; () banked
  9356  0045A2  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9357  0045A4  0E64               	movlw	100
  9358  0045A6  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9359                           
  9360                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9361  0045A8  0E01               	movlw	1
  9362  0045AA  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9363                           
  9364                           ; BSR set to: 1
  9365                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9366  0045AC  0E02               	movlw	2
  9367  0045AE  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9368  0045B0  B4D8               	btfsc	status,2,c
  9369  0045B2  D003               	goto	u33310
  9370                           
  9371                           ; BSR set to: 1
  9372  0045B4  0E03               	movlw	3
  9373  0045B6  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9374  0045B8  D028               	goto	l26194
  9375  0045BA                     u33310:
  9376                           
  9377                           ; BSR set to: 1
  9378                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9379  0045BA  EC4A  F02F         	call	_GetOpenOrder	;wreg free
  9380  0045BE  0100               	movlb	0	; () banked
  9381  0045C0  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9385  0045C2  0E14               	movlw	20
  9386  0045C4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9387  0045C6  0E00               	movlw	0
  9388  0045C8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9389  0045CA  0E14               	movlw	20
  9390  0045CC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9391  0045CE  0E0E               	movlw	14
  9392  0045D0  EC51  F04C         	call	_SetSegmentValueIntermitent
  9393                           
  9394                           ; BSR set to: 1
  9395                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9396  0045D4  0E00               	movlw	0
  9397  0045D6  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9398  0045D8  0E0A               	movlw	10
  9399  0045DA  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9400                           
  9401                           ; BSR set to: 1
  9402                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0x27 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9403  0045DC  0100               	movlb	0	; () banked
  9404  0045DE  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9405  0045E0  A4D8               	btfss	status,2,c
  9406  0045E2  D00B               	goto	u33350
  9407                           
  9408                           ; BSR set to: 0
  9409  0045E4  0E27               	movlw	39
  9410  0045E6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9411  0045E8  B4D8               	btfsc	status,2,c
  9412  0045EA  D007               	goto	u33350
  9413                           
  9414                           ; BSR set to: 0
  9415  0045EC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9416  0045EE  B4D8               	btfsc	status,2,c
  9417  0045F0  D004               	goto	u33350
  9418                           
  9419                           ; BSR set to: 0
  9420  0045F2  0E17               	movlw	23
  9421  0045F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9422  0045F6  A4D8               	btfss	status,2,c
  9423  0045F8  0012               	return	
  9424  0045FA                     u33350:
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9428  0045FA  0E00               	movlw	0
  9429  0045FC  0101               	movlb	1	; () banked
  9430  0045FE  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9431                           
  9432                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9433  004600  0E00               	movlw	0
  9434  004602  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9435                           
  9436                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9437  004604  0E01               	movlw	1
  9438  004606  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9439  004608  0012               	return	
  9440  00460A                     l26194:
  9441                           
  9442                           ; BSR set to: 1
  9443                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9444  00460A  0E01               	movlw	1
  9445  00460C  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9446                           
  9447                           ; BSR set to: 1
  9448                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9449  00460E  0E01               	movlw	1
  9450  004610  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9451  004612  0E00               	movlw	0
  9452  004614  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9453  004616  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9454  004618  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9458  00461A  0E00               	movlw	0
  9459  00461C  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9460                           
  9461                           ; BSR set to: 1
  9462                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9463  00461E  0E00               	movlw	0
  9464  004620  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9465  004622  0E00               	movlw	0
  9466  004624  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9467  004626  0E00               	movlw	0
  9468  004628  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9469  00462A  0E00               	movlw	0
  9470  00462C  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9471                           
  9472                           ; BSR set to: 1
  9473                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9474  00462E  0E00               	movlw	0
  9475  004630  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9476                           
  9477                           ; BSR set to: 1
  9478                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9479  004632  0E00               	movlw	0
  9480  004634  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9481                           
  9482                           ; BSR set to: 1
  9483                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9484  004636  0E00               	movlw	0
  9485  004638  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9486                           
  9487                           ; BSR set to: 1
  9488                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9489  00463A  0E00               	movlw	0
  9490  00463C  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9491  00463E  0E28               	movlw	40
  9492  004640  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9493                           
  9494                           ; BSR set to: 1
  9495                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9496  004642  0E0C               	movlw	12
  9497  004644  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9498  004646  0E00               	movlw	0
  9499  004648  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9500  00464A  0E04               	movlw	4
  9501  00464C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9502  00464E  0E0F               	movlw	15
  9503  004650  EC51  F04C         	call	_SetSegmentValueIntermitent
  9504                           
  9505                           ; BSR set to: 1
  9506                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9507  004654  0EE6               	movlw	low _controlGate_stateMachine
  9508  004656  6E12               	movwf	sm_send_event@psm^0,c
  9509  004658  0E01               	movlw	high _controlGate_stateMachine
  9510  00465A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9511  00465C  0E00               	movlw	0
  9512  00465E  6E15               	movwf	(sm_send_event@event+1)^0,c
  9513  004660  0E0A               	movlw	10
  9514  004662  6E14               	movwf	sm_send_event@event^0,c
  9515  004664  EC7A  F047         	call	_sm_send_event	;wreg free
  9516  004668  0012               	return	
  9517  00466A                     l26214:
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9521  00466A  EC3C  F03F         	call	_actionZone_Closed	;wreg free
  9522                           
  9523                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9524  00466E  0012               	return	
  9525  004670                     l26216:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9529  004670  ECFB  F028         	call	_actionZone_Opening	;wreg free
  9530  004674                     l26218:
  9531                           
  9532                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9533  004674  0E00               	movlw	0
  9534  004676  0101               	movlb	1	; () banked
  9535  004678  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9536  00467A  0E64               	movlw	100
  9537  00467C  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9538                           
  9539                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9540  00467E  0012               	return	
  9541  004680                     l26220:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9545  004680  EC6A  F02D         	call	_actionZone_Opened	;wreg free
  9546  004684  D7F7               	goto	l26218
  9547  004686                     l26224:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9551  004686  EC7A  F026         	call	_actionZone_Closing	;wreg free
  9552  00468A  D7F4               	goto	l26218
  9553  00468C                     l26228:
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9557  00468C  0EB2               	movlw	low _controlLearning_stateMachine
  9558  00468E  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9559  004690  0E02               	movlw	high _controlLearning_stateMachine
  9560  004692  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9561  004694  EC10  F011         	call	_sm_execute_ControlLearning	;wreg free
  9562  004698  D7ED               	goto	l26218
  9563  00469A                     l26234:
  9564  00469A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9565  00469E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9566  0046A2  50DF               	movf	indf2,w,c
  9567  0046A4  0100               	movlb	0	; () banked
  9568  0046A6  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9569  0046A8  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9570                           
  9571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9572                           ; Switch size 1, requested type "simple"
  9573                           ; Number of cases is 1, Range of values is 0 to 0
  9574                           ; switch strategies available:
  9575                           ; Name         Instructions Cycles
  9576                           ; simple_byte            4     3 (average)
  9577                           ;	Chosen strategy is simple_byte
  9578  0046AA  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9579  0046AC  0A00               	xorlw	0	; case 0
  9580  0046AE  A4D8               	btfss	status,2,c
  9581  0046B0  0012               	return	
  9582                           
  9583                           ; BSR set to: 0
  9584                           ; Switch size 1, requested type "simple"
  9585                           ; Number of cases is 6, Range of values is 0 to 5
  9586                           ; switch strategies available:
  9587                           ; Name         Instructions Cycles
  9588                           ; simple_byte           19    10 (average)
  9589                           ;	Chosen strategy is simple_byte
  9590  0046B2  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9591  0046B4  0A00               	xorlw	0	; case 0
  9592  0046B6  B4D8               	btfsc	status,2,c
  9593  0046B8  D772               	goto	l26172
  9594  0046BA  0A01               	xorlw	1	; case 1
  9595  0046BC  B4D8               	btfsc	status,2,c
  9596  0046BE  D7D5               	goto	l26214
  9597  0046C0  0A03               	xorlw	3	; case 2
  9598  0046C2  B4D8               	btfsc	status,2,c
  9599  0046C4  D7D5               	goto	l26216
  9600  0046C6  0A01               	xorlw	1	; case 3
  9601  0046C8  B4D8               	btfsc	status,2,c
  9602  0046CA  D7DD               	goto	l26224
  9603  0046CC  0A07               	xorlw	7	; case 4
  9604  0046CE  B4D8               	btfsc	status,2,c
  9605  0046D0  D7D7               	goto	l26220
  9606  0046D2  0A01               	xorlw	1	; case 5
  9607  0046D4  A4D8               	btfss	status,2,c
  9608  0046D6  0012               	return	
  9609  0046D8  D7D9               	goto	l26228
  9610  0046DA                     __end_of_sm_execute_ControlGate:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _sm_execute_ControlLearning *****************
  9614 ;; Defined at:
  9615 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  psm             2    4[BANK0 ] PTR struct .
  9618 ;;		 -> controlLearning_stateMachine(11), 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  1    wreg      void 
  9623 ;; Registers used:
  9624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9625 ;; Tracked objects:
  9626 ;;		On entry : 3F/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9632 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9633 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9634 ;;Total ram usage:        5 bytes
  9635 ;; Hardware stack levels used: 1
  9636 ;; Hardware stack levels required when called: 14
  9637 ;; This function calls:
  9638 ;;		_GetOpenOrder
  9639 ;;		_SaveNVM_VarSystem
  9640 ;;		_calculateMean
  9641 ;;		_clearLearningValue
  9642 ;;		_generateErrorLearnig
  9643 ;;		_sm_send_event
  9644 ;; This function is called by:
  9645 ;;		_sm_execute_ControlGate
  9646 ;; This function uses a non-reentrant model
  9647 ;;
  9648                           
  9649                           	psect	text18
  9650  002220                     __ptext18:
  9651                           	callstack 0
  9652  002220                     _sm_execute_ControlLearning:
  9653                           	callstack 15
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9657                           
  9658                           ;incstack = 0
  9659  002220  EC4A  F02F         	call	_GetOpenOrder	;wreg free
  9660  002224  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9661                           
  9662                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9663  002226  D0B8               	goto	l23882
  9664  002228                     l23808:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9668  002228  EE20 F004          	lfsr	2,4
  9669  00222C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9670  00222E  26D9               	addwf	fsr2l,f,c
  9671  002230  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9672  002232  22DA               	addwfc	fsr2h,f,c
  9673  002234  0E0A               	movlw	10
  9674  002236  18DE               	xorwf	postinc2,w,c
  9675  002238  10DE               	iorwf	postinc2,w,c
  9676  00223A  A4D8               	btfss	status,2,c
  9677  00223C  D00D               	goto	l23816
  9678                           
  9679                           ; BSR set to: 0
  9680  00223E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9681  002240  B4D8               	btfsc	status,2,c
  9682  002242  D00A               	goto	l23816
  9683                           
  9684                           ; BSR set to: 0
  9685  002244  0101               	movlb	1	; () banked
  9686  002246  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9687  002248  A4D8               	btfss	status,2,c
  9688  00224A  D006               	goto	l23816
  9689  00224C                     u28230:
  9690                           
  9691                           ; BSR set to: 1
  9692                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9693  00224C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9694  002250  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9695  002254  0E02               	movlw	2
  9696  002256  D08A               	goto	L66
  9697  002258                     l23816:
  9698  002258  0100               	movlb	0	; () banked
  9699  00225A  EE20 F004          	lfsr	2,4
  9700  00225E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9701  002260  26D9               	addwf	fsr2l,f,c
  9702  002262  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9703  002264  22DA               	addwfc	fsr2h,f,c
  9704  002266  0E0A               	movlw	10
  9705  002268  18DE               	xorwf	postinc2,w,c
  9706  00226A  10DE               	iorwf	postinc2,w,c
  9707  00226C  A4D8               	btfss	status,2,c
  9708  00226E  D00D               	goto	l23824
  9709                           
  9710                           ; BSR set to: 0
  9711  002270  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9712  002272  B4D8               	btfsc	status,2,c
  9713  002274  D004               	goto	u28260
  9714                           
  9715                           ; BSR set to: 0
  9716  002276  0101               	movlb	1	; () banked
  9717  002278  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9718  00227A  A4D8               	btfss	status,2,c
  9719  00227C  D006               	goto	l23824
  9720  00227E                     u28260:
  9721                           
  9722                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9723  00227E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9724  002282  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9725  002286  0E04               	movlw	4
  9726  002288  D071               	goto	L66
  9727  00228A                     l23824:
  9728  00228A  0100               	movlb	0	; () banked
  9729  00228C  EE20 F004          	lfsr	2,4
  9730  002290  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9731  002292  26D9               	addwf	fsr2l,f,c
  9732  002294  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9733  002296  22DA               	addwfc	fsr2h,f,c
  9734  002298  0E0B               	movlw	11
  9735  00229A  18DE               	xorwf	postinc2,w,c
  9736  00229C  10DE               	iorwf	postinc2,w,c
  9737  00229E  A4D8               	btfss	status,2,c
  9738  0022A0  D09B               	goto	l23884
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9742  0022A2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9743  0022A6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9744  0022AA  0E01               	movlw	1
  9745  0022AC  D05F               	goto	L66
  9746  0022AE                     l23828:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9750  0022AE  EE20 F004          	lfsr	2,4
  9751  0022B2  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9752  0022B4  26D9               	addwf	fsr2l,f,c
  9753  0022B6  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9754  0022B8  22DA               	addwfc	fsr2h,f,c
  9755  0022BA  0E0A               	movlw	10
  9756  0022BC  18DE               	xorwf	postinc2,w,c
  9757  0022BE  10DE               	iorwf	postinc2,w,c
  9758  0022C0  A4D8               	btfss	status,2,c
  9759  0022C2  D007               	goto	l23836
  9760                           
  9761                           ; BSR set to: 0
  9762  0022C4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9763  0022C6  B4D8               	btfsc	status,2,c
  9764  0022C8  D004               	goto	l23836
  9765                           
  9766                           ; BSR set to: 0
  9767  0022CA  0101               	movlb	1	; () banked
  9768  0022CC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9769  0022CE  B4D8               	btfsc	status,2,c
  9770  0022D0  D7BD               	goto	u28230
  9771  0022D2                     l23836:
  9772  0022D2  0100               	movlb	0	; () banked
  9773  0022D4  EE20 F004          	lfsr	2,4
  9774  0022D8  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9775  0022DA  26D9               	addwf	fsr2l,f,c
  9776  0022DC  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9777  0022DE  22DA               	addwfc	fsr2h,f,c
  9778  0022E0  0E0A               	movlw	10
  9779  0022E2  18DE               	xorwf	postinc2,w,c
  9780  0022E4  10DE               	iorwf	postinc2,w,c
  9781  0022E6  A4D8               	btfss	status,2,c
  9782  0022E8  D007               	goto	l23844
  9783                           
  9784                           ; BSR set to: 0
  9785  0022EA  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9786  0022EC  B4D8               	btfsc	status,2,c
  9787  0022EE  D7C7               	goto	u28260
  9788                           
  9789                           ; BSR set to: 0
  9790  0022F0  0101               	movlb	1	; () banked
  9791  0022F2  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9792  0022F4  B4D8               	btfsc	status,2,c
  9793  0022F6  D7C3               	goto	u28260
  9794  0022F8                     l23844:
  9795  0022F8  0100               	movlb	0	; () banked
  9796  0022FA                     L68:
  9797  0022FA  EE20 F004          	lfsr	2,4
  9798  0022FE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9799  002300  26D9               	addwf	fsr2l,f,c
  9800  002302  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9801  002304  22DA               	addwfc	fsr2h,f,c
  9802  002306  0E10               	movlw	16
  9803  002308  18DE               	xorwf	postinc2,w,c
  9804  00230A  10DE               	iorwf	postinc2,w,c
  9805  00230C  A4D8               	btfss	status,2,c
  9806  00230E  D064               	goto	l23884
  9807  002310  D03C               	goto	L130
  9808  002312                     l23848:
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9812  002312  EE20 F004          	lfsr	2,4
  9813  002316  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9814  002318  26D9               	addwf	fsr2l,f,c
  9815  00231A  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9816  00231C  22DA               	addwfc	fsr2h,f,c
  9817  00231E  0E0B               	movlw	11
  9818  002320  18DE               	xorwf	postinc2,w,c
  9819  002322  10DE               	iorwf	postinc2,w,c
  9820  002324  A4D8               	btfss	status,2,c
  9821  002326  D7E9               	goto	L68
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9825  002328  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9826  00232C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9827  002330  0E03               	movlw	3
  9828  002332  D01C               	goto	L66
  9829  002334                     l23856:
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9833  002334  EE20 F004          	lfsr	2,4
  9834  002338  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9835  00233A  26D9               	addwf	fsr2l,f,c
  9836  00233C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9837  00233E  22DA               	addwfc	fsr2h,f,c
  9838  002340  0E0A               	movlw	10
  9839  002342  18DE               	xorwf	postinc2,w,c
  9840  002344  10DE               	iorwf	postinc2,w,c
  9841  002346  A4D8               	btfss	status,2,c
  9842  002348  D7D8               	goto	L68
  9843  00234A  D799               	goto	u28260
  9844  00234C                     l23864:
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9848  00234C  EE20 F004          	lfsr	2,4
  9849  002350  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9850  002352  26D9               	addwf	fsr2l,f,c
  9851  002354  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9852  002356  22DA               	addwfc	fsr2h,f,c
  9853  002358  0E0B               	movlw	11
  9854  00235A  18DE               	xorwf	postinc2,w,c
  9855  00235C  10DE               	iorwf	postinc2,w,c
  9856  00235E  A4D8               	btfss	status,2,c
  9857  002360  D7CC               	goto	L68
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9861  002362  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9862  002366  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9863  00236A  0E05               	movlw	5
  9864  00236C                     L66:
  9865  00236C  6EDE               	movwf	postinc2,c
  9866  00236E  0E00               	movlw	0
  9867  002370  6EDD               	movwf	postdec2,c
  9868  002372  D032               	goto	l23884
  9869  002374                     l23872:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9873  002374  EE20 F004          	lfsr	2,4
  9874  002378  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9875  00237A  26D9               	addwf	fsr2l,f,c
  9876  00237C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9877  00237E  22DA               	addwfc	fsr2h,f,c
  9878  002380  0E0A               	movlw	10
  9879  002382  18DE               	xorwf	postinc2,w,c
  9880  002384  10DE               	iorwf	postinc2,w,c
  9881  002386  A4D8               	btfss	status,2,c
  9882  002388  D7B8               	goto	L68
  9883  00238A                     L130:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9887  00238A  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9888  00238E  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9889  002392  0E00               	movlw	0
  9890  002394  D7EB               	goto	L66
  9891  002396                     l2912:
  9892                           
  9893                           ; BSR set to: 0
  9894  002396  D7FF               	goto	l2912
  9895  002398                     l23882:
  9896  002398  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9897  00239C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9898  0023A0  50DF               	movf	indf2,w,c
  9899  0023A2  0100               	movlb	0	; () banked
  9900  0023A4  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9901  0023A6  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9902                           
  9903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9904                           ; Switch size 1, requested type "simple"
  9905                           ; Number of cases is 1, Range of values is 0 to 0
  9906                           ; switch strategies available:
  9907                           ; Name         Instructions Cycles
  9908                           ; simple_byte            4     3 (average)
  9909                           ;	Chosen strategy is simple_byte
  9910  0023A8  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9911  0023AA  0A00               	xorlw	0	; case 0
  9912  0023AC  A4D8               	btfss	status,2,c
  9913  0023AE  D7F3               	goto	l2912
  9914                           
  9915                           ; BSR set to: 0
  9916                           ; Switch size 1, requested type "simple"
  9917                           ; Number of cases is 6, Range of values is 0 to 5
  9918                           ; switch strategies available:
  9919                           ; Name         Instructions Cycles
  9920                           ; simple_byte           19    10 (average)
  9921                           ;	Chosen strategy is simple_byte
  9922  0023B0  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9923  0023B2  0A00               	xorlw	0	; case 0
  9924  0023B4  B4D8               	btfsc	status,2,c
  9925  0023B6  D738               	goto	l23808
  9926  0023B8  0A01               	xorlw	1	; case 1
  9927  0023BA  B4D8               	btfsc	status,2,c
  9928  0023BC  D778               	goto	l23828
  9929  0023BE  0A03               	xorlw	3	; case 2
  9930  0023C0  B4D8               	btfsc	status,2,c
  9931  0023C2  D7A7               	goto	l23848
  9932  0023C4  0A01               	xorlw	1	; case 3
  9933  0023C6  B4D8               	btfsc	status,2,c
  9934  0023C8  D7B5               	goto	l23856
  9935  0023CA  0A07               	xorlw	7	; case 4
  9936  0023CC  B4D8               	btfsc	status,2,c
  9937  0023CE  D7BE               	goto	l23864
  9938  0023D0  0A01               	xorlw	1	; case 5
  9939  0023D2  B4D8               	btfsc	status,2,c
  9940  0023D4  D7CF               	goto	l23872
  9941  0023D6  D7DF               	goto	l2912
  9942  0023D8                     l23884:
  9943                           
  9944                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9945  0023D8  0EB2               	movlw	low _controlLearning_stateMachine
  9946  0023DA  6E12               	movwf	sm_send_event@psm^0,c
  9947  0023DC  0E02               	movlw	high _controlLearning_stateMachine
  9948  0023DE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9949  0023E0  0E00               	movlw	0
  9950  0023E2  6E15               	movwf	(sm_send_event@event+1)^0,c
  9951  0023E4  0E00               	movlw	0
  9952  0023E6  6E14               	movwf	sm_send_event@event^0,c
  9953  0023E8  EC7A  F047         	call	_sm_send_event	;wreg free
  9954                           
  9955                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9956  0023EC  D285               	goto	l24140
  9957  0023EE                     l23886:
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9961  0023EE  0101               	movlb	1	; () banked
  9962  0023F0  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9963  0023F2  A4D8               	btfss	status,2,c
  9964  0023F4  D03A               	goto	l23904
  9965                           
  9966                           ; BSR set to: 1
  9967                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9968  0023F6  0E01               	movlw	1
  9969  0023F8  0100               	movlb	0	; () banked
  9970  0023FA  6F81               	movwf	_control_limit_switch& (0+255),b
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9974  0023FC  0EB2               	movlw	low _controlLearning_stateMachine
  9975  0023FE  6E12               	movwf	sm_send_event@psm^0,c
  9976  002400  0E02               	movlw	high _controlLearning_stateMachine
  9977  002402  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9978  002404  0E00               	movlw	0
  9979  002406  6E15               	movwf	(sm_send_event@event+1)^0,c
  9980  002408  0E0A               	movlw	10
  9981  00240A  6E14               	movwf	sm_send_event@event^0,c
  9982  00240C  EC7A  F047         	call	_sm_send_event	;wreg free
  9983                           
  9984                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9985  002410  0E01               	movlw	1
  9986  002412  0101               	movlb	1	; () banked
  9987  002414  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9988                           
  9989                           ; BSR set to: 1
  9990                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9991  002416  ECFF  F043         	call	_clearLearningValue	;wreg free
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9995  00241A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9996  00241C  B4D8               	btfsc	status,2,c
  9997  00241E  D016               	goto	l23902
  9998                           
  9999                           ; BSR set to: 0
 10000  002420  0101               	movlb	1	; () banked
 10001  002422  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10002  002424  A4D8               	btfss	status,2,c
 10003  002426  D012               	goto	l23902
 10004  002428                     u28450:
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10008  002428  0E01               	movlw	1
 10009  00242A  6FD5               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10010  00242C  0E2C               	movlw	44
 10011  00242E  6FD4               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10012                           
 10013                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10014  002430  0E00               	movlw	0
 10015  002432  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10016  002434  0E78               	movlw	120
 10017  002436  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10018                           
 10019                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10020  002438  0E00               	movlw	0
 10021  00243A  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10022  00243C  0E14               	movlw	20
 10023  00243E  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10024                           
 10025                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10026  002440  0E01               	movlw	1
 10027  002442  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10028                           
 10029                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10030  002444  0E00               	movlw	0
 10031  002446  0100               	movlb	0	; () banked
 10032  002448  6F81               	movwf	_control_limit_switch& (0+255),b
 10033                           
 10034                           ;sm_ControlLearning_MC50.c: 148:                  }
 10035  00244A  0012               	return	
 10036  00244C                     l23902:
 10037                           
 10038                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10039  00244C  0E00               	movlw	0
 10040  00244E  0101               	movlb	1	; () banked
 10041  002450  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10042                           
 10043                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10044  002452  0E00               	movlw	0
 10045  002454  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10046  002456  0E50               	movlw	80
 10047  002458  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10048                           
 10049                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10050  00245A  0E00               	movlw	0
 10051  00245C  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10052  00245E  0E14               	movlw	20
 10053  002460  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10054                           
 10055                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10056  002462  0E00               	movlw	0
 10057  002464  0100               	movlb	0	; () banked
 10058  002466  6F81               	movwf	_control_limit_switch& (0+255),b
 10059  002468  0012               	return	
 10060  00246A                     l23904:
 10061                           
 10062                           ; BSR set to: 1
 10063                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10064  00246A  0EB2               	movlw	low _controlLearning_stateMachine
 10065  00246C  6E12               	movwf	sm_send_event@psm^0,c
 10066  00246E  0E02               	movlw	high _controlLearning_stateMachine
 10067  002470  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10068  002472  0E00               	movlw	0
 10069  002474  6E15               	movwf	(sm_send_event@event+1)^0,c
 10070  002476  0E0B               	movlw	11
 10071  002478  6E14               	movwf	sm_send_event@event^0,c
 10072  00247A  EC7A  F047         	call	_sm_send_event	;wreg free
 10073                           
 10074                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10075  00247E  0E03               	movlw	3
 10076  002480  0101               	movlb	1	; () banked
 10077  002482  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10078                           
 10079                           ; BSR set to: 1
 10080                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10081  002484  0E01               	movlw	1
 10082  002486  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10083                           
 10084                           ; BSR set to: 1
 10085                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10086                           
 10087                           ;sm_ControlLearning_MC50.c: 163:             }
 10088  002488  0012               	return	
 10089  00248A                     l23910:
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0x27 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10093  00248A  0101               	movlb	1	; () banked
 10094  00248C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10095  00248E  B4D8               	btfsc	status,2,c
 10096  002490  D00F               	goto	u28500
 10097                           
 10098                           ; BSR set to: 1
 10099  002492  0100               	movlb	0	; () banked
 10100  002494  0581               	decf	_control_limit_switch& (0+255),w,b
 10101  002496  B4D8               	btfsc	status,2,c
 10102  002498  D00B               	goto	u28500
 10103                           
 10104                           ; BSR set to: 0
 10105  00249A  0E27               	movlw	39
 10106  00249C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10107  00249E  B4D8               	btfsc	status,2,c
 10108  0024A0  D003               	goto	u28490
 10109                           
 10110                           ; BSR set to: 0
 10111  0024A2  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10112  0024A4  A4D8               	btfss	status,2,c
 10113  0024A6  D028               	goto	l23938
 10114  0024A8                     u28490:
 10115                           
 10116                           ; BSR set to: 0
 10117  0024A8  0101               	movlb	1	; () banked
 10118  0024AA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10119  0024AC  A4D8               	btfss	status,2,c
 10120  0024AE  D024               	goto	l23938
 10121  0024B0                     u28500:
 10122                           
 10123                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10124  0024B0  0E01               	movlw	1
 10125  0024B2  0100               	movlb	0	; () banked
 10126  0024B4  6F81               	movwf	_control_limit_switch& (0+255),b
 10127                           
 10128                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10129  0024B6  0E00               	movlw	0
 10130  0024B8  0101               	movlb	1	; () banked
 10131  0024BA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10135  0024BC  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10136  0024BE  D005               	goto	u28510
 10137  0024C0  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10138  0024C2  E102               	bnz	u28511
 10139  0024C4  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10140  0024C6  B0D8               	btfsc	status,0,c
 10141  0024C8                     u28511:
 10142  0024C8  0012               	return	
 10143  0024CA                     u28510:
 10144                           
 10145                           ; BSR set to: 1
 10146                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10147  0024CA  0EB2               	movlw	low _controlLearning_stateMachine
 10148  0024CC  6E12               	movwf	sm_send_event@psm^0,c
 10149  0024CE  0E02               	movlw	high _controlLearning_stateMachine
 10150  0024D0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10151  0024D2  0E00               	movlw	0
 10152  0024D4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10153  0024D6  0E0A               	movlw	10
 10154  0024D8  6E14               	movwf	sm_send_event@event^0,c
 10155  0024DA  EC7A  F047         	call	_sm_send_event	;wreg free
 10156                           
 10157                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10158  0024DE  0E01               	movlw	1
 10159  0024E0  0101               	movlb	1	; () banked
 10160  0024E2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10161                           
 10162                           ; BSR set to: 1
 10163                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10164  0024E4  ECFF  F043         	call	_clearLearningValue	;wreg free
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10168  0024E8  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10169  0024EA  B4D8               	btfsc	status,2,c
 10170  0024EC  D7AF               	goto	l23902
 10171                           
 10172                           ; BSR set to: 0
 10173  0024EE  0101               	movlb	1	; () banked
 10174  0024F0  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10175  0024F2  B4D8               	btfsc	status,2,c
 10176  0024F4  D799               	goto	u28450
 10177  0024F6  D7AA               	goto	l23902
 10178  0024F8                     l23938:
 10179  0024F8  0101               	movlb	1	; () banked
 10180  0024FA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10181  0024FC  A4D8               	btfss	status,2,c
 10182  0024FE  D003               	goto	l23942
 10183  002500                     u28540:
 10184                           
 10185                           ; BSR set to: 1
 10186                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10187  002500  ECB3  F046         	call	_generateErrorLearnig	;wreg free
 10188                           
 10189                           ;sm_ControlLearning_MC50.c: 198:             }
 10190  002504  0012               	return	
 10191  002506                     l23942:
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10195  002506  0E00               	movlw	0
 10196  002508  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10197  00250A  0E28               	movlw	40
 10198  00250C  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10199  00250E  0012               	return	
 10200  002510                     l23944:
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10204  002510  0101               	movlb	1	; () banked
 10205  002512  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10206  002514  A4D8               	btfss	status,2,c
 10207                           
 10208                           ; BSR set to: 1
 10209  002516  BFD5               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10210  002518  D009               	goto	u28570
 10211  00251A  51D5               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10212  00251C  E103               	bnz	u28560
 10213  00251E  05D4               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10214  002520  A0D8               	btfss	status,0,c
 10215  002522  D004               	goto	u28570
 10216  002524                     u28560:
 10217                           
 10218                           ; BSR set to: 1
 10219  002524  0100               	movlb	0	; () banked
 10220  002526  0581               	decf	_control_limit_switch& (0+255),w,b
 10221  002528  A4D8               	btfss	status,2,c
 10222  00252A  D02A               	goto	l23966
 10223  00252C                     u28570:
 10224                           
 10225                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10226  00252C  0E01               	movlw	1
 10227  00252E  0100               	movlb	0	; () banked
 10228  002530  6F81               	movwf	_control_limit_switch& (0+255),b
 10229                           
 10230                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10231  002532  0E00               	movlw	0
 10232  002534  0101               	movlb	1	; () banked
 10233  002536  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10234                           
 10235                           ; BSR set to: 1
 10236                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10237  002538  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10238  00253A  D005               	goto	u28580
 10239  00253C  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10240  00253E  E102               	bnz	u28581
 10241  002540  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10242  002542  B0D8               	btfsc	status,0,c
 10243  002544                     u28581:
 10244  002544  0012               	return	
 10245  002546                     u28580:
 10246                           
 10247                           ; BSR set to: 1
 10248                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10249  002546  0EB2               	movlw	low _controlLearning_stateMachine
 10250  002548  6E12               	movwf	sm_send_event@psm^0,c
 10251  00254A  0E02               	movlw	high _controlLearning_stateMachine
 10252  00254C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10253  00254E  0E00               	movlw	0
 10254  002550  6E15               	movwf	(sm_send_event@event+1)^0,c
 10255  002552  0E0B               	movlw	11
 10256  002554  6E14               	movwf	sm_send_event@event^0,c
 10257  002556  EC7A  F047         	call	_sm_send_event	;wreg free
 10258                           
 10259                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10260  00255A  0E03               	movlw	3
 10261  00255C  0101               	movlb	1	; () banked
 10262  00255E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10266  002560  0E00               	movlw	0
 10267  002562  6FD5               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10268  002564  0E64               	movlw	100
 10269  002566  6FD4               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10273  002568  0E00               	movlw	0
 10274  00256A  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10275  00256C  0E64               	movlw	100
 10276  00256E                     L67:
 10277  00256E  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10281  002570  0E00               	movlw	0
 10282  002572  6FE3               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10283  002574  0E14               	movlw	20
 10284  002576  6FE2               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10285                           
 10286                           ; BSR set to: 1
 10287                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10288  002578  0E00               	movlw	0
 10289  00257A  0100               	movlb	0	; () banked
 10290  00257C  6F81               	movwf	_control_limit_switch& (0+255),b
 10291  00257E  0012               	return	
 10292  002580                     l23966:
 10293                           
 10294                           ; BSR set to: 0
 10295  002580  0101               	movlb	1	; () banked
 10296  002582  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10297  002584  B4D8               	btfsc	status,2,c
 10298  002586  D7BC               	goto	u28540
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10302  002588  0E00               	movlw	0
 10303  00258A  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10304  00258C  0E28               	movlw	40
 10305  00258E  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10309  002590  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10310  002592  D005               	goto	u28600
 10311  002594  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10312  002596  E102               	bnz	u28601
 10313  002598  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10314  00259A  B0D8               	btfsc	status,0,c
 10315  00259C                     u28601:
 10316  00259C  0012               	return	
 10317  00259E                     u28600:
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10321  00259E  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10322  0025A0  0012               	return	
 10323  0025A2  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10324  0025A4  E103               	bnz	u28610
 10325  0025A6  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10326  0025A8  A0D8               	btfss	status,0,c
 10327  0025AA  0012               	return	
 10328  0025AC                     u28610:
 10329                           
 10330                           ; BSR set to: 1
 10331                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10332  0025AC  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10333  0025B0  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10334  0025B4  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10335  0025B6  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10336  0025B8  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10337  0025BC  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10338  0025C0  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10339  0025C4  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10340  0025C8  EC1A  F047         	call	_calculateMean	;wreg free
 10341  0025CC  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10342  0025D0  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10343  0025D4  0012               	return	
 10344  0025D6                     l23978:
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10348  0025D6  0101               	movlb	1	; () banked
 10349  0025D8  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10350  0025DA  B4D8               	btfsc	status,2,c
 10351  0025DC  D004               	goto	u28630
 10352                           
 10353                           ; BSR set to: 1
 10354  0025DE  0100               	movlb	0	; () banked
 10355  0025E0  0581               	decf	_control_limit_switch& (0+255),w,b
 10356  0025E2  A4D8               	btfss	status,2,c
 10357  0025E4  D020               	goto	l23998
 10358  0025E6                     u28630:
 10359                           
 10360                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10361  0025E6  0E01               	movlw	1
 10362  0025E8  0100               	movlb	0	; () banked
 10363  0025EA  6F81               	movwf	_control_limit_switch& (0+255),b
 10364                           
 10365                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10366  0025EC  0E00               	movlw	0
 10367  0025EE  0101               	movlb	1	; () banked
 10368  0025F0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10369                           
 10370                           ; BSR set to: 1
 10371                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10372  0025F2  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10373  0025F4  D005               	goto	u28640
 10374  0025F6  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10375  0025F8  E102               	bnz	u28641
 10376  0025FA  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10377  0025FC  B0D8               	btfsc	status,0,c
 10378  0025FE                     u28641:
 10379  0025FE  0012               	return	
 10380  002600                     u28640:
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10384  002600  0EB2               	movlw	low _controlLearning_stateMachine
 10385  002602  6E12               	movwf	sm_send_event@psm^0,c
 10386  002604  0E02               	movlw	high _controlLearning_stateMachine
 10387  002606  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10388  002608  0E00               	movlw	0
 10389  00260A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10390  00260C  0E0A               	movlw	10
 10391  00260E  6E14               	movwf	sm_send_event@event^0,c
 10392  002610  EC7A  F047         	call	_sm_send_event	;wreg free
 10393                           
 10394                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10395  002614  0E01               	movlw	1
 10396  002616  0101               	movlb	1	; () banked
 10397  002618  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10398                           
 10399                           ; BSR set to: 1
 10400                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10401  00261A  0E00               	movlw	0
 10402  00261C  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10403                           
 10404                           ; BSR set to: 1
 10405                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10406  00261E  0E00               	movlw	0
 10407  002620  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10408  002622  0E3C               	movlw	60
 10409  002624  D7A4               	goto	L67
 10410  002626                     l23998:
 10411                           
 10412                           ; BSR set to: 0
 10413  002626  0101               	movlb	1	; () banked
 10414  002628  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10415  00262A  B4D8               	btfsc	status,2,c
 10416  00262C  D769               	goto	u28540
 10417                           
 10418                           ; BSR set to: 1
 10419                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10420  00262E  0E00               	movlw	0
 10421  002630  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10422  002632  0E28               	movlw	40
 10423  002634  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10424                           
 10425                           ; BSR set to: 1
 10426                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10427  002636  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10428  002638  D005               	goto	u28660
 10429  00263A  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10430  00263C  E102               	bnz	u28661
 10431  00263E  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10432  002640  B0D8               	btfsc	status,0,c
 10433  002642                     u28661:
 10434  002642  0012               	return	
 10435  002644                     u28660:
 10436                           
 10437                           ; BSR set to: 1
 10438                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10439  002644  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10440  002646  0012               	return	
 10441  002648  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10442  00264A  E103               	bnz	u28670
 10443  00264C  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10444  00264E  A0D8               	btfss	status,0,c
 10445  002650  0012               	return	
 10446  002652                     u28670:
 10447                           
 10448                           ; BSR set to: 1
 10449                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10450  002652  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10451  002656  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10452  00265A  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10453  00265C  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10454  00265E  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10455  002662  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10456  002666  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10457  00266A  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10458  00266E  EC1A  F047         	call	_calculateMean	;wreg free
 10459  002672  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10460  002676  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10461  00267A  0012               	return	
 10462  00267C                     l24010:
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0x27 ||typeOpenOrder == TypeFull) && var_s
      +                          ys.programinAutomatic == 1))
 10466  00267C  0101               	movlb	1	; () banked
 10467  00267E  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10468  002680  B4D8               	btfsc	status,2,c
 10469  002682  D012               	goto	u28730
 10470                           
 10471                           ; BSR set to: 1
 10472  002684  0100               	movlb	0	; () banked
 10473  002686  0581               	decf	_control_limit_switch& (0+255),w,b
 10474  002688  B4D8               	btfsc	status,2,c
 10475  00268A  D00E               	goto	u28730
 10476                           
 10477                           ; BSR set to: 0
 10478  00268C  0101               	movlb	1	; () banked
 10479  00268E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10480  002690  A4D8               	btfss	status,2,c
 10481  002692  D02D               	goto	l24036
 10482                           
 10483                           ; BSR set to: 1
 10484  002694  0E27               	movlw	39
 10485  002696  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10486  002698  B4D8               	btfsc	status,2,c
 10487  00269A  D003               	goto	u28720
 10488                           
 10489                           ; BSR set to: 1
 10490  00269C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10491  00269E  A4D8               	btfss	status,2,c
 10492  0026A0  D026               	goto	l24036
 10493  0026A2                     u28720:
 10494                           
 10495                           ; BSR set to: 1
 10496  0026A2  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10497  0026A4  A4D8               	btfss	status,2,c
 10498  0026A6  D023               	goto	l24036
 10499  0026A8                     u28730:
 10500                           
 10501                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10502  0026A8  0E00               	movlw	0
 10503  0026AA  0101               	movlb	1	; () banked
 10504  0026AC  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10505                           
 10506                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10507  0026AE  0E00               	movlw	0
 10508  0026B0  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10509                           
 10510                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10511  0026B2  0E01               	movlw	1
 10512  0026B4  0100               	movlb	0	; () banked
 10513  0026B6  6F81               	movwf	_control_limit_switch& (0+255),b
 10514                           
 10515                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10516  0026B8  0E00               	movlw	0
 10517  0026BA  0101               	movlb	1	; () banked
 10518  0026BC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10519                           
 10520                           ; BSR set to: 1
 10521                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10522  0026BE  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10523  0026C0  D005               	goto	u28740
 10524  0026C2  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10525  0026C4  E102               	bnz	u28741
 10526  0026C6  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10527  0026C8  B0D8               	btfsc	status,0,c
 10528  0026CA                     u28741:
 10529  0026CA  0012               	return	
 10530  0026CC                     u28740:
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10534  0026CC  0EB2               	movlw	low _controlLearning_stateMachine
 10535  0026CE  6E12               	movwf	sm_send_event@psm^0,c
 10536  0026D0  0E02               	movlw	high _controlLearning_stateMachine
 10537  0026D2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10538  0026D4  0E00               	movlw	0
 10539  0026D6  6E15               	movwf	(sm_send_event@event+1)^0,c
 10540  0026D8  0E0B               	movlw	11
 10541  0026DA  6E14               	movwf	sm_send_event@event^0,c
 10542  0026DC  EC7A  F047         	call	_sm_send_event	;wreg free
 10543                           
 10544                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10545  0026E0  0E03               	movlw	3
 10546  0026E2  0101               	movlb	1	; () banked
 10547  0026E4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10548                           
 10549                           ; BSR set to: 1
 10550                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10551  0026E6  0E00               	movlw	0
 10552  0026E8  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10553  0026EA  0E50               	movlw	80
 10554  0026EC  D740               	goto	L67
 10555  0026EE                     l24036:
 10556                           
 10557                           ; BSR set to: 1
 10558  0026EE  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10559  0026F0  B4D8               	btfsc	status,2,c
 10560  0026F2  D706               	goto	u28540
 10561                           
 10562                           ; BSR set to: 1
 10563  0026F4  0E27               	movlw	39
 10564  0026F6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10565  0026F8  B4D8               	btfsc	status,2,c
 10566  0026FA  D003               	goto	u28770
 10567                           
 10568                           ; BSR set to: 1
 10569  0026FC  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10570  0026FE  A4D8               	btfss	status,2,c
 10571  002700  D00F               	goto	l24050
 10572  002702                     u28770:
 10573                           
 10574                           ; BSR set to: 1
 10575  002702  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10576  002704  A4D8               	btfss	status,2,c
 10577  002706  D00C               	goto	l24050
 10578                           
 10579                           ; BSR set to: 1
 10580  002708  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10581  00270A  A4D8               	btfss	status,2,c
 10582  00270C  D009               	goto	l24050
 10583  00270E                     u28790:
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10587  00270E  0E01               	movlw	1
 10588  002710  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10589                           
 10590                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10591  002712  0E01               	movlw	1
 10592  002714  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10593                           
 10594                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10595  002716  0E00               	movlw	0
 10596  002718  6FD3               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10597  00271A  0E50               	movlw	80
 10598  00271C  6FD2               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10599                           
 10600                           ;sm_ControlLearning_MC50.c: 309:             }
 10601  00271E  0012               	return	
 10602  002720                     l24050:
 10603                           
 10604                           ; BSR set to: 1
 10605  002720  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10606  002722  A4D8               	btfss	status,2,c
 10607  002724  D00C               	goto	l24058
 10608                           
 10609                           ; BSR set to: 1
 10610                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10611  002726  0E00               	movlw	0
 10612  002728  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10613  00272A  0E28               	movlw	40
 10614  00272C  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10615                           
 10616                           ; BSR set to: 1
 10617                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10618  00272E  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10619  002730  0012               	return	
 10620  002732  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10621  002734  E103               	bnz	u28810
 10622  002736  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10623  002738  A0D8               	btfss	status,0,c
 10624  00273A  0012               	return	
 10625  00273C                     u28810:
 10626  00273C  D737               	goto	u28610
 10627  00273E                     l24058:
 10628                           
 10629                           ; BSR set to: 1
 10630                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10631  00273E  0E01               	movlw	1
 10632  002740  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10633                           
 10634                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10635  002742  0E00               	movlw	0
 10636  002744  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10637  002746  0E28               	movlw	40
 10638  002748  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10639                           
 10640                           ; BSR set to: 1
 10641                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10642  00274A  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10643  00274C  D005               	goto	u28820
 10644  00274E  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10645  002750  E102               	bnz	u28821
 10646  002752  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10647  002754  B0D8               	btfsc	status,0,c
 10648  002756                     u28821:
 10649  002756  0012               	return	
 10650  002758                     u28820:
 10651                           
 10652                           ; BSR set to: 1
 10653                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10654  002758  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10655  00275A  0012               	return	
 10656  00275C  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10657  00275E  E103               	bnz	u28830
 10658  002760  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10659  002762  A0D8               	btfss	status,0,c
 10660  002764  0012               	return	
 10661  002766                     u28830:
 10662                           
 10663                           ; BSR set to: 1
 10664                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10665  002766  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10666  00276A  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10667  00276E  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10668  002770  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10669  002772  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10670  002776  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10671  00277A  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10672  00277C  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10673  00277E  EC1A  F047         	call	_calculateMean	;wreg free
 10674  002782  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10675  002786  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10676  00278A  0012               	return	
 10677  00278C                     l24066:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0x27 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1
      +                          ))
 10681  00278C  0101               	movlb	1	; () banked
 10682  00278E  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10683  002790  B4D8               	btfsc	status,2,c
 10684  002792  D00D               	goto	u28880
 10685                           
 10686                           ; BSR set to: 1
 10687  002794  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10688  002796  A4D8               	btfss	status,2,c
 10689  002798  D070               	goto	l24112
 10690                           
 10691                           ; BSR set to: 1
 10692  00279A  0E27               	movlw	39
 10693  00279C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10694  00279E  B4D8               	btfsc	status,2,c
 10695  0027A0  D003               	goto	u28870
 10696                           
 10697                           ; BSR set to: 1
 10698  0027A2  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10699  0027A4  A4D8               	btfss	status,2,c
 10700  0027A6  D069               	goto	l24112
 10701  0027A8                     u28870:
 10702                           
 10703                           ; BSR set to: 1
 10704  0027A8  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10705  0027AA  A4D8               	btfss	status,2,c
 10706  0027AC  D066               	goto	l24112
 10707  0027AE                     u28880:
 10708                           
 10709                           ; BSR set to: 1
 10710                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10711  0027AE  0E01               	movlw	1
 10712  0027B0  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10713                           
 10714                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10715  0027B2  0E00               	movlw	0
 10716  0027B4  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10717                           
 10718                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10719  0027B6  0E00               	movlw	0
 10720  0027B8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10721                           
 10722                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10723  0027BA  0E00               	movlw	0
 10724  0027BC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10725                           
 10726                           ; BSR set to: 1
 10727                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10728  0027BE  0EB2               	movlw	low _controlLearning_stateMachine
 10729  0027C0  6E12               	movwf	sm_send_event@psm^0,c
 10730  0027C2  0E02               	movlw	high _controlLearning_stateMachine
 10731  0027C4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10732  0027C6  0E00               	movlw	0
 10733  0027C8  6E15               	movwf	(sm_send_event@event+1)^0,c
 10734  0027CA  0E0A               	movlw	10
 10735  0027CC  6E14               	movwf	sm_send_event@event^0,c
 10736  0027CE  EC7A  F047         	call	_sm_send_event	;wreg free
 10737                           
 10738                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10739  0027D2  0EE6               	movlw	low _controlGate_stateMachine
 10740  0027D4  6E12               	movwf	sm_send_event@psm^0,c
 10741  0027D6  0E01               	movlw	high _controlGate_stateMachine
 10742  0027D8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10743  0027DA  0E00               	movlw	0
 10744  0027DC  6E15               	movwf	(sm_send_event@event+1)^0,c
 10745  0027DE  0E13               	movlw	19
 10746  0027E0  6E14               	movwf	sm_send_event@event^0,c
 10747  0027E2  EC7A  F047         	call	_sm_send_event	;wreg free
 10748                           
 10749                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10750  0027E6  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10751  0027EA  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10752  0027EE  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10753  0027F2  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10754                           
 10755                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10756  0027F6  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10757  0027FA  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10758  0027FE  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10759  002802  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10760                           
 10761                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10762  002806  0101               	movlb	1	; () banked
 10763  002808  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10764  00280A  A4D8               	btfss	status,2,c
 10765  00280C  D005               	goto	l24090
 10766                           
 10767                           ; BSR set to: 1
 10768                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10769  00280E  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10770                           
 10771                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10772  002812  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10773                           
 10774                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10775  002816  D005               	goto	l24092
 10776  002818                     l24090:
 10777                           
 10778                           ; BSR set to: 1
 10779                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10780  002818  0E04               	movlw	4
 10781  00281A  0100               	movlb	0	; () banked
 10782  00281C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10783                           
 10784                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10785  00281E  0E04               	movlw	4
 10786  002820  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10787  002822                     l24092:
 10788                           
 10789                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10790  002822  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10791  002826  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10792                           
 10793                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10794  00282A  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10795  00282E  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10796                           
 10797                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10798  002832  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10799  002836  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10800  00283A  0100               	movlb	0	; () banked
 10801  00283C  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10802  00283E  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10806  002840  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10807  002844  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10808  002848  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10809  00284A  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10813  00284C  0E00               	movlw	0
 10814  00284E  EC88  F04B         	call	_SaveNVM_VarSystem
 10815                           
 10816                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10817  002852  0E03               	movlw	3
 10818  002854  EC88  F04B         	call	_SaveNVM_VarSystem
 10819                           
 10820                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10821  002858  0E02               	movlw	2
 10822  00285A  EC88  F04B         	call	_SaveNVM_VarSystem
 10823                           
 10824                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10825  00285E  0E00               	movlw	0
 10826  002860  0101               	movlb	1	; () banked
 10827  002862  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10828                           
 10829                           ; BSR set to: 1
 10830                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10831  002864  0E00               	movlw	0
 10832  002866  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10833  002868  0E00               	movlw	0
 10834  00286A  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10835  00286C  0E00               	movlw	0
 10836  00286E  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10837  002870  0E00               	movlw	0
 10838  002872  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10839                           
 10840                           ; BSR set to: 1
 10841                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10842  002874  0E00               	movlw	0
 10843  002876  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10844                           
 10845                           ;sm_ControlLearning_MC50.c: 369:             }
 10846  002878  0012               	return	
 10847  00287A                     l24112:
 10848                           
 10849                           ; BSR set to: 1
 10850  00287A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10851  00287C  B4D8               	btfsc	status,2,c
 10852  00287E  D640               	goto	u28540
 10853                           
 10854                           ; BSR set to: 1
 10855  002880  0E27               	movlw	39
 10856  002882  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10857  002884  B4D8               	btfsc	status,2,c
 10858  002886  D003               	goto	u28920
 10859                           
 10860                           ; BSR set to: 1
 10861  002888  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10862  00288A  A4D8               	btfss	status,2,c
 10863  00288C  D003               	goto	l24124
 10864  00288E                     u28920:
 10865                           
 10866                           ; BSR set to: 1
 10867  00288E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10868  002890  B4D8               	btfsc	status,2,c
 10869  002892  D73D               	goto	u28790
 10870  002894                     l24124:
 10871                           
 10872                           ; BSR set to: 1
 10873  002894  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10874  002896  A4D8               	btfss	status,2,c
 10875  002898  D008               	goto	l24130
 10876                           
 10877                           ; BSR set to: 1
 10878                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10879  00289A  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10880  00289C  0012               	return	
 10881  00289E  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10882  0028A0  E103               	bnz	u28950
 10883  0028A2  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10884  0028A4  A0D8               	btfss	status,0,c
 10885  0028A6  0012               	return	
 10886  0028A8                     u28950:
 10887  0028A8  D6D4               	goto	u28670
 10888  0028AA                     l24130:
 10889                           
 10890                           ; BSR set to: 1
 10891                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10892  0028AA  0E01               	movlw	1
 10893  0028AC  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10894                           
 10895                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10896  0028AE  0E00               	movlw	0
 10897  0028B0  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10898  0028B2  0E28               	movlw	40
 10899  0028B4  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10900                           
 10901                           ; BSR set to: 1
 10902                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10903  0028B6  BFE3               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10904  0028B8  D005               	goto	u28960
 10905  0028BA  51E3               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10906  0028BC  E102               	bnz	u28961
 10907  0028BE  05E2               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10908  0028C0  B0D8               	btfsc	status,0,c
 10909  0028C2                     u28961:
 10910  0028C2  0012               	return	
 10911  0028C4                     u28960:
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10915  0028C4  BFD3               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10916  0028C6  0012               	return	
 10917  0028C8  51D3               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10918  0028CA  E103               	bnz	u28970
 10919  0028CC  05D2               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10920  0028CE  A0D8               	btfss	status,0,c
 10921  0028D0  0012               	return	
 10922  0028D2                     u28970:
 10923                           
 10924                           ; BSR set to: 1
 10925                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10926  0028D2  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10927  0028D6  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10928  0028DA  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10929  0028DC  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10930  0028DE  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10931  0028E2  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10932  0028E6  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10933  0028E8  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10934  0028EA  EC1A  F047         	call	_calculateMean	;wreg free
 10935  0028EE  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10936  0028F2  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10937  0028F6  0012               	return	
 10938  0028F8                     l24140:
 10939  0028F8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10940  0028FC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10941  002900  50DF               	movf	indf2,w,c
 10942  002902  0100               	movlb	0	; () banked
 10943  002904  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10944  002906  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10945                           
 10946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10947                           ; Switch size 1, requested type "simple"
 10948                           ; Number of cases is 1, Range of values is 0 to 0
 10949                           ; switch strategies available:
 10950                           ; Name         Instructions Cycles
 10951                           ; simple_byte            4     3 (average)
 10952                           ;	Chosen strategy is simple_byte
 10953  002908  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10954  00290A  0A00               	xorlw	0	; case 0
 10955  00290C  A4D8               	btfss	status,2,c
 10956  00290E  0012               	return	
 10957                           
 10958                           ; BSR set to: 0
 10959                           ; Switch size 1, requested type "simple"
 10960                           ; Number of cases is 6, Range of values is 0 to 5
 10961                           ; switch strategies available:
 10962                           ; Name         Instructions Cycles
 10963                           ; simple_byte           19    10 (average)
 10964                           ;	Chosen strategy is simple_byte
 10965  002910  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10966  002912  0A00               	xorlw	0	; case 0
 10967  002914  B4D8               	btfsc	status,2,c
 10968  002916  D56B               	goto	l23886
 10969  002918  0A01               	xorlw	1	; case 1
 10970  00291A  B4D8               	btfsc	status,2,c
 10971  00291C  D5B6               	goto	l23910
 10972  00291E  0A03               	xorlw	3	; case 2
 10973  002920  B4D8               	btfsc	status,2,c
 10974  002922  D5F6               	goto	l23944
 10975  002924  0A01               	xorlw	1	; case 3
 10976  002926  B4D8               	btfsc	status,2,c
 10977  002928  D656               	goto	l23978
 10978  00292A  0A07               	xorlw	7	; case 4
 10979  00292C  B4D8               	btfsc	status,2,c
 10980  00292E  D6A6               	goto	l24010
 10981  002930  0A01               	xorlw	1	; case 5
 10982  002932  A4D8               	btfss	status,2,c
 10983  002934  0012               	return	
 10984  002936  D72A               	goto	l24066
 10985  002938                     __end_of_sm_execute_ControlLearning:
 10986                           	callstack 0
 10987                           
 10988 ;; *************** function _generateErrorLearnig *****************
 10989 ;; Defined at:
 10990 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;		None
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 3E/1
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11008 ;;Total ram usage:        0 bytes
 11009 ;; Hardware stack levels used: 1
 11010 ;; Hardware stack levels required when called: 6
 11011 ;; This function calls:
 11012 ;;		_sm_init
 11013 ;; This function is called by:
 11014 ;;		_sm_execute_ControlLearning
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text19
 11019  008D66                     __ptext19:
 11020                           	callstack 0
 11021  008D66                     _generateErrorLearnig:
 11022                           	callstack 22
 11023                           
 11024                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11025                           
 11026                           ;incstack = 0
 11027  008D66  0E00               	movlw	0
 11028  008D68  0101               	movlb	1	; () banked
 11029  008D6A  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11030                           
 11031                           ; BSR set to: 1
 11032                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11033  008D6C  0EBD               	movlw	low _menuConfiguration_stateMachine
 11034  008D6E  6E12               	movwf	sm_init@psm^0,c
 11035  008D70  0E02               	movlw	high _menuConfiguration_stateMachine
 11036  008D72  6E13               	movwf	(sm_init@psm+1)^0,c
 11037  008D74  0E00               	movlw	0
 11038  008D76  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11039  008D78  0E00               	movlw	0
 11040  008D7A  6E14               	movwf	sm_init@initial_state^0,c
 11041  008D7C  0E00               	movlw	0
 11042  008D7E  6E16               	movwf	sm_init@hist_mode^0,c
 11043  008D80  EC8A  F048         	call	_sm_init	;wreg free
 11044                           
 11045                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11046  008D84  0EF1               	movlw	low _main_stateMachine
 11047  008D86  6E12               	movwf	sm_init@psm^0,c
 11048  008D88  0E01               	movlw	high _main_stateMachine
 11049  008D8A  6E13               	movwf	(sm_init@psm+1)^0,c
 11050  008D8C  0E00               	movlw	0
 11051  008D8E  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11052  008D90  0E00               	movlw	0
 11053  008D92  6E14               	movwf	sm_init@initial_state^0,c
 11054  008D94  0E00               	movlw	0
 11055  008D96  6E16               	movwf	sm_init@hist_mode^0,c
 11056  008D98  EC8A  F048         	call	_sm_init	;wreg free
 11057                           
 11058                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11059  008D9C  0EE6               	movlw	low _controlGate_stateMachine
 11060  008D9E  6E12               	movwf	sm_init@psm^0,c
 11061  008DA0  0E01               	movlw	high _controlGate_stateMachine
 11062  008DA2  6E13               	movwf	(sm_init@psm+1)^0,c
 11063  008DA4  0E00               	movlw	0
 11064  008DA6  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11065  008DA8  0E00               	movlw	0
 11066  008DAA  6E14               	movwf	sm_init@initial_state^0,c
 11067  008DAC  0E00               	movlw	0
 11068  008DAE  6E16               	movwf	sm_init@hist_mode^0,c
 11069  008DB0  EC8A  F048         	call	_sm_init	;wreg free
 11070                           
 11071                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11072  008DB4  0EB2               	movlw	low _controlLearning_stateMachine
 11073  008DB6  6E12               	movwf	sm_init@psm^0,c
 11074  008DB8  0E02               	movlw	high _controlLearning_stateMachine
 11075  008DBA  6E13               	movwf	(sm_init@psm+1)^0,c
 11076  008DBC  0E00               	movlw	0
 11077  008DBE  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11078  008DC0  0E00               	movlw	0
 11079  008DC2  6E14               	movwf	sm_init@initial_state^0,c
 11080  008DC4  0E00               	movlw	0
 11081  008DC6  6E16               	movwf	sm_init@hist_mode^0,c
 11082  008DC8  EC8A  F048         	call	_sm_init	;wreg free
 11083  008DCC  0012               	return		;funcret
 11084  008DCE                     __end_of_generateErrorLearnig:
 11085                           	callstack 0
 11086                           
 11087 ;; *************** function _sm_init *****************
 11088 ;; Defined at:
 11089 ;;		line 12 in file "sm_common_MC50.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  psm             2   17[COMRAM] PTR struct .
 11092 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11093 ;;  initial_stat    2   19[COMRAM] int 
 11094 ;;  hist_mode       1   21[COMRAM] enum E348
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  1    wreg      void 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/1
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11106 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;Total ram usage:        5 bytes
 11111 ;; Hardware stack levels used: 1
 11112 ;; Hardware stack levels required when called: 5
 11113 ;; This function calls:
 11114 ;;		_sm_restart
 11115 ;; This function is called by:
 11116 ;;		_main
 11117 ;;		_generateErrorLearnig
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text20
 11122  009114                     __ptext20:
 11123                           	callstack 0
 11124  009114                     _sm_init:
 11125                           	callstack 25
 11126                           
 11127                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11128                           
 11129                           ;incstack = 0
 11130  009114  EE20 F002          	lfsr	2,2
 11131  009118  5012               	movf	sm_init@psm^0,w,c
 11132  00911A  26D9               	addwf	fsr2l,f,c
 11133  00911C  5013               	movf	(sm_init@psm+1)^0,w,c
 11134  00911E  22DA               	addwfc	fsr2h,f,c
 11135  009120  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11136  009124  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11137                           
 11138                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11139  009128  EE20 F006          	lfsr	2,6
 11140  00912C  5012               	movf	sm_init@psm^0,w,c
 11141  00912E  26D9               	addwf	fsr2l,f,c
 11142  009130  5013               	movf	(sm_init@psm+1)^0,w,c
 11143  009132  22DA               	addwfc	fsr2h,f,c
 11144  009134  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11145                           
 11146                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11147  009138  C012  FFD9         	movff	sm_init@psm,fsr2l
 11148  00913C  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11149  009140  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11150  009144  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11151                           
 11152                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11153  009148  EE20 F007          	lfsr	2,7
 11154  00914C  5012               	movf	sm_init@psm^0,w,c
 11155  00914E  26D9               	addwf	fsr2l,f,c
 11156  009150  5013               	movf	(sm_init@psm+1)^0,w,c
 11157  009152  22DA               	addwfc	fsr2h,f,c
 11158  009154  0E00               	movlw	0
 11159  009156  6EDE               	movwf	postinc2,c
 11160  009158  0E00               	movlw	0
 11161  00915A  6EDD               	movwf	postdec2,c
 11162                           
 11163                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11164  00915C  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11165  009160  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11166  009164  EC68  F04A         	call	_sm_restart	;wreg free
 11167  009168  0012               	return		;funcret
 11168  00916A                     __end_of_sm_init:
 11169                           	callstack 0
 11170                           
 11171 ;; *************** function _sm_restart *****************
 11172 ;; Defined at:
 11173 ;;		line 23 in file "sm_common_MC50.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;  psm             2   15[COMRAM] PTR struct .
 11176 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      void 
 11181 ;; Registers used:
 11182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/1
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11192 ;;Total ram usage:        2 bytes
 11193 ;; Hardware stack levels used: 1
 11194 ;; Hardware stack levels required when called: 4
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		_sm_init
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text21
 11203  0094D0                     __ptext21:
 11204                           	callstack 0
 11205  0094D0                     _sm_restart:
 11206                           	callstack 25
 11207                           
 11208                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11209                           
 11210                           ;incstack = 0
 11211  0094D0  EE20 F006          	lfsr	2,6
 11212  0094D4  5010               	movf	sm_restart@psm^0,w,c
 11213  0094D6  26D9               	addwf	fsr2l,f,c
 11214  0094D8  5011               	movf	(sm_restart@psm+1)^0,w,c
 11215  0094DA  22DA               	addwfc	fsr2h,f,c
 11216  0094DC  50DF               	movf	indf2,w,c
 11217  0094DE  A4D8               	btfss	status,2,c
 11218  0094E0  D00E               	goto	l20750
 11219                           
 11220                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11221  0094E2  EE20 F002          	lfsr	2,2
 11222  0094E6  5010               	movf	sm_restart@psm^0,w,c
 11223  0094E8  26D9               	addwf	fsr2l,f,c
 11224  0094EA  5011               	movf	(sm_restart@psm+1)^0,w,c
 11225  0094EC  22DA               	addwfc	fsr2h,f,c
 11226  0094EE  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11227  0094F2  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11228  0094F6  CFDE FFE6          	movff	postinc2,postinc1
 11229  0094FA  CFDD FFE5          	movff	postdec2,postdec1
 11230  0094FE                     l20750:
 11231                           
 11232                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11233  0094FE  EE20 F004          	lfsr	2,4
 11234  009502  5010               	movf	sm_restart@psm^0,w,c
 11235  009504  26D9               	addwf	fsr2l,f,c
 11236  009506  5011               	movf	(sm_restart@psm+1)^0,w,c
 11237  009508  22DA               	addwfc	fsr2h,f,c
 11238  00950A  0E00               	movlw	0
 11239  00950C  6EDE               	movwf	postinc2,c
 11240  00950E  0E00               	movlw	0
 11241  009510  6EDD               	movwf	postdec2,c
 11242  009512  0012               	return		;funcret
 11243  009514                     __end_of_sm_restart:
 11244                           	callstack 0
 11245                           
 11246 ;; *************** function _clearLearningValue *****************
 11247 ;; Defined at:
 11248 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;		None
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  1    wreg      void 
 11255 ;; Registers used:
 11256 ;;		wreg, status,2
 11257 ;; Tracked objects:
 11258 ;;		On entry : 3F/1
 11259 ;;		On exit  : 3F/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11266 ;;Total ram usage:        0 bytes
 11267 ;; Hardware stack levels used: 1
 11268 ;; Hardware stack levels required when called: 4
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_sm_execute_ControlLearning
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text22
 11277  0087FE                     __ptext22:
 11278                           	callstack 0
 11279  0087FE                     _clearLearningValue:
 11280                           	callstack 24
 11281                           
 11282                           ; BSR set to: 1
 11283                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11284                           
 11285                           ;incstack = 0
 11286  0087FE  0E00               	movlw	0
 11287  008800  0100               	movlb	0	; () banked
 11288  008802  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11289  008804  0E00               	movlw	0
 11290  008806  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11291  008808  0E00               	movlw	0
 11292  00880A  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11293  00880C  0E00               	movlw	0
 11294  00880E  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11295                           
 11296                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11297  008810  0E00               	movlw	0
 11298  008812  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11299  008814  0E00               	movlw	0
 11300  008816  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11301  008818  0E00               	movlw	0
 11302  00881A  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11303  00881C  0E00               	movlw	0
 11304  00881E  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11305                           
 11306                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11307  008820  0E00               	movlw	0
 11308  008822  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11309                           
 11310                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11311  008824  0E00               	movlw	0
 11312  008826  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11313                           
 11314                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11315  008828  0E00               	movlw	0
 11316  00882A  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11317  00882C  0E00               	movlw	0
 11318  00882E  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11319                           
 11320                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11321  008830  0E00               	movlw	0
 11322  008832  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11323  008834  0E00               	movlw	0
 11324  008836  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11325                           
 11326                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11327  008838  0E00               	movlw	0
 11328  00883A  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11329  00883C  0E00               	movlw	0
 11330  00883E  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11331                           
 11332                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11333  008840  0E00               	movlw	0
 11334  008842  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11335  008844  0E00               	movlw	0
 11336  008846  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11337                           
 11338                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11339  008848  0E00               	movlw	0
 11340  00884A  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11341  00884C  0E00               	movlw	0
 11342  00884E  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11343                           
 11344                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11345  008850  0E00               	movlw	0
 11346  008852  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11347  008854  0E00               	movlw	0
 11348  008856  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11349                           
 11350                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11351  008858  0E00               	movlw	0
 11352  00885A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11353  00885C  0E00               	movlw	0
 11354  00885E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11355  008860  0E00               	movlw	0
 11356  008862  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11357  008864  0E00               	movlw	0
 11358  008866  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11359                           
 11360                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11361  008868  0E00               	movlw	0
 11362  00886A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11363  00886C  0E00               	movlw	0
 11364  00886E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11365  008870  0E00               	movlw	0
 11366  008872  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11367  008874  0E00               	movlw	0
 11368  008876  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11369                           
 11370                           ; BSR set to: 0
 11371  008878  0012               	return		;funcret
 11372  00887A                     __end_of_clearLearningValue:
 11373                           	callstack 0
 11374                           
 11375 ;; *************** function _calculateMean *****************
 11376 ;; Defined at:
 11377 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  meanValue       4   15[COMRAM] unsigned long 
 11380 ;;  newValue        4   19[COMRAM] unsigned long 
 11381 ;; Auto vars:     Size  Location     Type
 11382 ;;		None
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  4   15[COMRAM] unsigned long 
 11385 ;; Registers used:
 11386 ;;		wreg, status,2, status,0
 11387 ;; Tracked objects:
 11388 ;;		On entry : 3E/1
 11389 ;;		On exit  : 3E/0
 11390 ;;		Unchanged: 3E/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11392 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11396 ;;Total ram usage:       12 bytes
 11397 ;; Hardware stack levels used: 1
 11398 ;; Hardware stack levels required when called: 4
 11399 ;; This function calls:
 11400 ;;		Nothing
 11401 ;; This function is called by:
 11402 ;;		_sm_execute_ControlLearning
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text23
 11407  008E34                     __ptext23:
 11408                           	callstack 0
 11409  008E34                     _calculateMean:
 11410                           	callstack 24
 11411                           
 11412                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;incstack = 0
 11416  008E34  5010               	movf	calculateMean@meanValue^0,w,c
 11417  008E36  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11418  008E38  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11419  008E3A  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11420  008E3C  A4D8               	btfss	status,2,c
 11421  008E3E  D009               	goto	l21934
 11422                           
 11423                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11424  008E40  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11425  008E44  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11426  008E48  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11427  008E4C  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11428                           
 11429                           ;sm_ControlLearning_MC50.c: 416:     }
 11430  008E50  D019               	goto	l21936
 11431  008E52                     l21934:
 11432                           
 11433                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11434  008E52  5014               	movf	calculateMean@newValue^0,w,c
 11435  008E54  2410               	addwf	calculateMean@meanValue^0,w,c
 11436  008E56  6E18               	movwf	??_calculateMean^0,c
 11437  008E58  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11438  008E5A  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11439  008E5C  6E19               	movwf	(??_calculateMean+1)^0,c
 11440  008E5E  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11441  008E60  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11442  008E62  6E1A               	movwf	(??_calculateMean+2)^0,c
 11443  008E64  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11444  008E66  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11445  008E68  6E1B               	movwf	(??_calculateMean+3)^0,c
 11446  008E6A  90D8               	bcf	status,0,c
 11447  008E6C  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11448  008E6E  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11449  008E70  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11450  008E72  3218               	rrcf	??_calculateMean^0,f,c
 11451  008E74  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11452  008E78  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11453  008E7C  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11454  008E80  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11455  008E84                     l21936:
 11456                           
 11457                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11458  008E84  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11459  008E88  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11460  008E8C  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11461  008E90  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11462  008E94  0012               	return		;funcret
 11463  008E96                     __end_of_calculateMean:
 11464                           	callstack 0
 11465                           
 11466 ;; *************** function _actionZone_Opening *****************
 11467 ;; Defined at:
 11468 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11473 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11474 ;;  securityClos    1   12[BANK0 ] enum E10397
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 3F/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11487 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11488 ;;Total ram usage:        3 bytes
 11489 ;; Hardware stack levels used: 1
 11490 ;; Hardware stack levels required when called: 8
 11491 ;; This function calls:
 11492 ;;		_CloseOrder
 11493 ;;		_GetOpenOrder
 11494 ;;		_GetSecurityStateInClosing
 11495 ;;		_GetSecurityStateInOpening
 11496 ;;		_InitFullAutoTime
 11497 ;;		_InitWalkAutoTime
 11498 ;;		_SetSegmentValueIntermitent
 11499 ;;		_StopOrder
 11500 ;;		_VerifyFollowMe
 11501 ;;		_controlVelocity
 11502 ;;		_setPositionInvertionInClosing
 11503 ;;		_setPositionInvertionInOpening
 11504 ;;		_sm_send_event
 11505 ;; This function is called by:
 11506 ;;		_sm_execute_ControlGate
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text24
 11511  0051F6                     __ptext24:
 11512                           	callstack 0
 11513  0051F6                     _actionZone_Opening:
 11514                           	callstack 21
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11518                           
 11519                           ;incstack = 0
 11520  0051F6  EC91  F03F         	call	_GetSecurityStateInClosing	;wreg free
 11521  0051FA  0100               	movlb	0	; () banked
 11522  0051FC  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11523                           
 11524                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11525  0051FE  ECE4  F03F         	call	_GetSecurityStateInOpening	;wreg free
 11526  005202  0100               	movlb	0	; () banked
 11527  005204  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11531  005206  EC4A  F02F         	call	_GetOpenOrder	;wreg free
 11532  00520A  0100               	movlb	0	; () banked
 11533  00520C  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11537  00520E  EC5B  F02C         	call	_controlVelocity	;wreg free
 11538                           
 11539                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11540  005212  EC9E  F04E         	call	_InitFullAutoTime	;wreg free
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11544  005216  0E00               	movlw	0
 11545  005218  0101               	movlb	1	; () banked
 11546  00521A  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11550  00521C  0100               	movlb	0	; () banked
 11551  00521E  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11552  005220  ECF6  F04D         	call	_VerifyFollowMe
 11553                           
 11554                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11555  005224  0E03               	movlw	3
 11556  005226  0101               	movlb	1	; () banked
 11557  005228  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11558  00522A  D00D               	goto	l23342
 11559                           
 11560                           ; BSR set to: 1
 11561                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11562  00522C  0E00               	movlw	0
 11563  00522E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11564  005230                     l23340:
 11565                           
 11566                           ; BSR set to: 1
 11567                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11568  005230  0EE6               	movlw	low _controlGate_stateMachine
 11569  005232  6E12               	movwf	sm_send_event@psm^0,c
 11570  005234  0E01               	movlw	high _controlGate_stateMachine
 11571  005236  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11572  005238  0E00               	movlw	0
 11573  00523A  6E15               	movwf	(sm_send_event@event+1)^0,c
 11574  00523C  0E10               	movlw	16
 11575  00523E  6E14               	movwf	sm_send_event@event^0,c
 11576  005240  EC7A  F047         	call	_sm_send_event	;wreg free
 11577                           
 11578                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11579  005244  0012               	return	
 11580  005246                     l23342:
 11581                           
 11582                           ; BSR set to: 1
 11583  005246  0E02               	movlw	2
 11584  005248  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11585  00524A  A4D8               	btfss	status,2,c
 11586  00524C  D013               	goto	l23356
 11587                           
 11588                           ; BSR set to: 1
 11589  00524E  BFAF               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11590  005250  D005               	goto	u27160
 11591  005252  51AF               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11592  005254  E10F               	bnz	l23356
 11593  005256  05AE               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11594  005258  B0D8               	btfsc	status,0,c
 11595  00525A  D00C               	goto	l23356
 11596  00525C                     u27160:
 11597                           
 11598                           ; BSR set to: 1
 11599                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11600  00525C  ECF0  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11601                           
 11602                           ; BSR set to: 1
 11603                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11604  005260  EC4C  F04E         	call	_StopOrder	;wreg free
 11605                           
 11606                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11607  005264  EC23  F04F         	call	_InitWalkAutoTime	;wreg free
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11611  005268  0E01               	movlw	1
 11612  00526A  0101               	movlb	1	; () banked
 11613  00526C  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11614                           
 11615                           ; BSR set to: 1
 11616                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11617  00526E  0E01               	movlw	1
 11618  005270  6F91               	movwf	_Abertura_pedonal& (0+255),b
 11619                           
 11620                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11621  005272  0012               	return	
 11622  005274                     l23356:
 11623                           
 11624                           ; BSR set to: 1
 11625  005274  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11626  005276  B4D8               	btfsc	status,2,c
 11627  005278  D010               	goto	u27210
 11628                           
 11629                           ; BSR set to: 1
 11630  00527A  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11631  00527C  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11632  00527E  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11633  005280  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11634  005282  A4D8               	btfss	status,2,c
 11635  005284  D02F               	goto	l23376
 11636                           
 11637                           ; BSR set to: 1
 11638  005286  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11639  005288  A4D8               	btfss	status,2,c
 11640  00528A  D02C               	goto	l23376
 11641                           
 11642                           ; BSR set to: 1
 11643  00528C  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11644  00528E  A4D8               	btfss	status,2,c
 11645  005290  D029               	goto	l23376
 11646                           
 11647                           ; BSR set to: 1
 11648  005292  0E02               	movlw	2
 11649  005294  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11650  005296  A4D8               	btfss	status,2,c
 11651  005298  D025               	goto	l23376
 11652  00529A                     u27210:
 11653                           
 11654                           ; BSR set to: 1
 11655                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11656  00529A  0E04               	movlw	4
 11657  00529C  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11658                           
 11659                           ; BSR set to: 1
 11660                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11661  00529E  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11662  0052A2  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11663  0052A6  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11664  0052AA  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11665                           
 11666                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11667  0052AE  0E00               	movlw	0
 11668  0052B0  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11669                           
 11670                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11671  0052B2  0E00               	movlw	0
 11672  0052B4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11673                           
 11674                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11675  0052B6  0E01               	movlw	1
 11676  0052B8  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11677                           
 11678                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11679  0052BA  0E00               	movlw	0
 11680  0052BC  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11681                           
 11682                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11683  0052BE  0E00               	movlw	0
 11684  0052C0  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11685  0052C2  0E28               	movlw	40
 11686  0052C4  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11687                           
 11688                           ; BSR set to: 1
 11689                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11690  0052C6  0E00               	movlw	0
 11691  0052C8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11692  0052CA  0E00               	movlw	0
 11693  0052CC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11694  0052CE  0E04               	movlw	4
 11695  0052D0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11696  0052D2  0E0F               	movlw	15
 11697  0052D4  EC51  F04C         	call	_SetSegmentValueIntermitent
 11698                           
 11699                           ; BSR set to: 1
 11700                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11701  0052D8  EC4C  F04E         	call	_StopOrder	;wreg free
 11702                           
 11703                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11704  0052DC  0E01               	movlw	1
 11705  0052DE  0101               	movlb	1	; () banked
 11706  0052E0  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11707                           
 11708                           ;sm_ControlGate_MC50.c: 419:     }
 11709  0052E2  0012               	return	
 11710  0052E4                     l23376:
 11711                           
 11712                           ; BSR set to: 1
 11713  0052E4  0100               	movlb	0	; () banked
 11714  0052E6  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11715  0052E8  B4D8               	btfsc	status,2,c
 11716  0052EA  D012               	goto	u27250
 11717                           
 11718                           ; BSR set to: 0
 11719  0052EC  0101               	movlb	1	; () banked
 11720  0052EE  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11721  0052F0  D025               	goto	l23396
 11722  0052F2  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11723  0052F4  E103               	bnz	u27230
 11724  0052F6  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11725  0052F8  A0D8               	btfss	status,0,c
 11726  0052FA  D020               	goto	l23396
 11727  0052FC                     u27230:
 11728                           
 11729                           ; BSR set to: 1
 11730  0052FC  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11731  0052FE  A4D8               	btfss	status,2,c
 11732  005300  D01D               	goto	l23396
 11733                           
 11734                           ; BSR set to: 1
 11735  005302  BFCF               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11736  005304  D005               	goto	u27250
 11737  005306  51CF               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11738  005308  E119               	bnz	l23396
 11739  00530A  05CE               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11740  00530C  B0D8               	btfsc	status,0,c
 11741  00530E  D016               	goto	l23396
 11742  005310                     u27250:
 11743  005310  0101               	movlb	1	; () banked
 11744  005312  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11745  005314  A4D8               	btfss	status,2,c
 11746  005316  D012               	goto	l23396
 11747                           
 11748                           ; BSR set to: 1
 11749                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11750  005318  0100               	movlb	0	; () banked
 11751  00531A  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11752  00531C  B4D8               	btfsc	status,2,c
 11753  00531E  D002               	goto	l23390
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11757  005320  0101               	movlb	1	; () banked
 11758  005322  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11759  005324                     l23390:
 11760                           
 11761                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11762  005324  0E01               	movlw	1
 11763  005326  0101               	movlb	1	; () banked
 11764  005328  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11765                           
 11766                           ; BSR set to: 1
 11767                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11768  00532A  0E00               	movlw	0
 11769  00532C  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11770  00532E  0E0A               	movlw	10
 11771  005330  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11772                           
 11773                           ; BSR set to: 1
 11774                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11775  005332  0E00               	movlw	0
 11776  005334  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11777  005336  0E1E               	movlw	30
 11778  005338  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11779                           
 11780                           ;sm_ControlGate_MC50.c: 430:     }
 11781  00533A  0012               	return	
 11782  00533C                     l23396:
 11783                           
 11784                           ; BSR set to: 1
 11785  00533C  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11786  00533E  D02D               	goto	l23426
 11787  005340  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11788  005342  E103               	bnz	u27280
 11789  005344  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11790  005346  A0D8               	btfss	status,0,c
 11791  005348  D028               	goto	l23426
 11792  00534A                     u27280:
 11793                           
 11794                           ; BSR set to: 1
 11795  00534A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11796  00534C  A4D8               	btfss	status,2,c
 11797  00534E  D025               	goto	l23426
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11801  005350  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11802  005352  A4D8               	btfss	status,2,c
 11803  005354  D005               	goto	l23408
 11804                           
 11805                           ; BSR set to: 1
 11806                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11807  005356  0E00               	movlw	0
 11808  005358  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11809                           
 11810                           ; BSR set to: 1
 11811                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11812  00535A  EC49  F038         	call	_setPositionInvertionInClosing	;wreg free
 11813  00535E  D768               	goto	l23340
 11814  005360                     l23408:
 11815                           
 11816                           ; BSR set to: 1
 11817  005360  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11818  005362  D005               	goto	u27310
 11819  005364  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11820  005366  E116               	bnz	l23424
 11821  005368  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11822  00536A  B0D8               	btfsc	status,0,c
 11823  00536C  D013               	goto	l23424
 11824  00536E                     u27310:
 11825                           
 11826                           ; BSR set to: 1
 11827                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11828  00536E  EC97  F04D         	call	_CloseOrder	;wreg free
 11829                           
 11830                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11831  005372  ECF0  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11832                           
 11833                           ; BSR set to: 1
 11834                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11835  005376  0E00               	movlw	0
 11836  005378  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11837                           
 11838                           ; BSR set to: 1
 11839                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11840  00537A  0E01               	movlw	1
 11841  00537C  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11842                           
 11843                           ; BSR set to: 1
 11844                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11845  00537E  0E00               	movlw	0
 11846  005380  6FCF               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11847  005382  0E14               	movlw	20
 11848  005384  6FCE               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11852  005386  0E00               	movlw	0
 11853  005388  6FD1               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11854  00538A  0E28               	movlw	40
 11855  00538C  6FD0               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11859  00538E  0E01               	movlw	1
 11860  005390  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11861                           
 11862                           ;sm_ControlGate_MC50.c: 449:         } else
 11863  005392  0012               	return	
 11864  005394                     l23424:
 11865                           
 11866                           ; BSR set to: 1
 11867                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11868  005394  0E00               	movlw	0
 11869  005396  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11870  005398  0012               	return	
 11871  00539A                     l23426:
 11872                           
 11873                           ; BSR set to: 1
 11874  00539A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11875  00539C  A4D8               	btfss	status,2,c
 11876  00539E  D00A               	goto	l23446
 11877                           
 11878                           ; BSR set to: 1
 11879                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11880  0053A0  0E00               	movlw	0
 11881  0053A2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11882                           
 11883                           ; BSR set to: 1
 11884                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11885  0053A4  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11886  0053A6  D7E3               	goto	u27310
 11887  0053A8  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11888  0053AA  E14E               	bnz	l2723
 11889  0053AC  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11890  0053AE  B0D8               	btfsc	status,0,c
 11891  0053B0  0012               	return	
 11892  0053B2  D7DD               	goto	u27310
 11893  0053B4                     l23446:
 11894                           
 11895                           ; BSR set to: 1
 11896  0053B4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11897  0053B6  A4D8               	btfss	status,2,c
 11898  0053B8  D018               	goto	l23464
 11899                           
 11900                           ; BSR set to: 1
 11901  0053BA  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11902  0053BC  D005               	goto	u27350
 11903  0053BE  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11904  0053C0  E114               	bnz	l23464
 11905  0053C2  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11906  0053C4  B0D8               	btfsc	status,0,c
 11907  0053C6  D011               	goto	l23464
 11908  0053C8                     u27350:
 11909                           
 11910                           ; BSR set to: 1
 11911                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11912  0053C8  0E02               	movlw	2
 11913  0053CA  0100               	movlb	0	; () banked
 11914  0053CC  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11915  0053CE  B4D8               	btfsc	status,2,c
 11916  0053D0  D007               	goto	l23460
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11920  0053D2  0101               	movlb	1	; () banked
 11921  0053D4  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11925  0053D6  0E00               	movlw	0
 11926  0053D8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11927                           
 11928                           ; BSR set to: 1
 11929                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11930  0053DA  ECF0  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11931  0053DE  D728               	goto	l23340
 11932  0053E0                     l23460:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11936  0053E0  ECF0  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11937  0053E4                     l23462:
 11938                           
 11939                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11940  0053E4  EC4C  F04E         	call	_StopOrder	;wreg free
 11941  0053E8  0012               	return	
 11942  0053EA                     l23464:
 11943                           
 11944                           ; BSR set to: 1
 11945  0053EA  0100               	movlb	0	; () banked
 11946  0053EC  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11947  0053EE  A4D8               	btfss	status,2,c
 11948  0053F0  D005               	goto	l23470
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11952  0053F2  0E03               	movlw	3
 11953  0053F4  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11954  0053F6  B4D8               	btfsc	status,2,c
 11955  0053F8  0012               	return	
 11956  0053FA  D7F4               	goto	l23462
 11957  0053FC                     l23470:
 11958                           
 11959                           ; BSR set to: 0
 11960  0053FC  0E02               	movlw	2
 11961  0053FE  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11962  005400  A4D8               	btfss	status,2,c
 11963  005402  D011               	goto	l23482
 11964                           
 11965                           ; BSR set to: 0
 11966  005404  0E02               	movlw	2
 11967  005406  0101               	movlb	1	; () banked
 11968  005408  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11969  00540A  A4D8               	btfss	status,2,c
 11970  00540C  D00C               	goto	l23482
 11971                           
 11972                           ; BSR set to: 1
 11973  00540E  0E02               	movlw	2
 11974  005410  0100               	movlb	0	; () banked
 11975  005412  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11976  005414  B4D8               	btfsc	status,2,c
 11977  005416  D007               	goto	l23482
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11981  005418  ECF0  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11982                           
 11983                           ; BSR set to: 1
 11984                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11985  00541C  EC4C  F04E         	call	_StopOrder	;wreg free
 11986                           
 11987                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11988  005420  EC23  F04F         	call	_InitWalkAutoTime	;wreg free
 11989                           
 11990                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11991  005424  0012               	return	
 11992  005426                     l23482:
 11993  005426  0100               	movlb	0	; () banked
 11994  005428  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11995  00542A  B4D8               	btfsc	status,2,c
 11996  00542C  D008               	goto	u27440
 11997                           
 11998                           ; BSR set to: 0
 11999  00542E  0E03               	movlw	3
 12000  005430  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12001  005432  B4D8               	btfsc	status,2,c
 12002  005434  D004               	goto	u27440
 12003                           
 12004                           ; BSR set to: 0
 12005  005436  0E04               	movlw	4
 12006  005438  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12007  00543A  A4D8               	btfss	status,2,c
 12008  00543C  0012               	return	
 12009  00543E                     u27440:
 12010                           
 12011                           ; BSR set to: 0
 12012  00543E  0E02               	movlw	2
 12013  005440  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12014  005442  B4D8               	btfsc	status,2,c
 12015  005444  0012               	return	
 12016  005446  D7CC               	goto	l23460
 12017  005448                     l2723:
 12018  005448  0012               	return		;funcret
 12019  00544A                     __end_of_actionZone_Opening:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function _setPositionInvertionInOpening *****************
 12023 ;; Defined at:
 12024 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 3E/1
 12035 ;;		On exit  : 3F/1
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12042 ;;Total ram usage:        8 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; Hardware stack levels required when called: 6
 12045 ;; This function calls:
 12046 ;;		_getTimeDecelaration
 12047 ;; This function is called by:
 12048 ;;		_actionZone_Opening
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text25
 12053  0079E0                     __ptext25:
 12054                           	callstack 0
 12055  0079E0                     _setPositionInvertionInOpening:
 12056                           	callstack 22
 12057                           
 12058                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12059                           
 12060                           ;incstack = 0
 12061  0079E0  0E02               	movlw	2
 12062  0079E2  0100               	movlb	0	; () banked
 12063  0079E4  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12064  0079E6  B4D8               	btfsc	status,2,c
 12065  0079E8  D009               	goto	l21886
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12069  0079EA  0EFE               	movlw	254
 12070  0079EC  0101               	movlb	1	; () banked
 12071  0079EE  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12072  0079F0  0EFF               	movlw	255
 12073  0079F2  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12074  0079F4  0EFF               	movlw	255
 12075  0079F6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12076  0079F8  0EFF               	movlw	255
 12077  0079FA  D006               	goto	L69
 12078  0079FC                     l21886:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12082  0079FC  0E01               	movlw	1
 12083  0079FE  0101               	movlb	1	; () banked
 12084  007A00  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12085  007A02  0E00               	movlw	0
 12086  007A04  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12087  007A06  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12088  007A08                     L69:
 12089  007A08  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12090                           
 12091                           ; BSR set to: 1
 12092                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12093  007A0A  0E03               	movlw	3
 12094  007A0C  EC7C  F03C         	call	_getTimeDecelaration
 12095  007A10  5029               	movf	?_getTimeDecelaration^0,w,c
 12096  007A12  0101               	movlb	1	; () banked
 12097  007A14  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12098  007A16  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12099  007A18  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12100  007A1A  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12101  007A1C  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12102  007A1E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12103  007A20  0A80               	xorlw	128
 12104  007A22  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12105  007A24  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12106  007A26  0A80               	xorlw	128
 12107  007A28  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12108  007A2A  B0D8               	btfsc	status,0,c
 12109  007A2C  D004               	goto	l21892
 12110                           
 12111                           ; BSR set to: 1
 12112                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12113  007A2E  0E03               	movlw	3
 12114  007A30  EC7C  F03C         	call	_getTimeDecelaration
 12115  007A34  D015               	goto	L70
 12116  007A36                     l21892:
 12117                           
 12118                           ; BSR set to: 1
 12119  007A36  0E01               	movlw	1
 12120  007A38  EC7C  F03C         	call	_getTimeDecelaration
 12121  007A3C  0101               	movlb	1	; () banked
 12122  007A3E  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12123  007A40  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12124  007A42  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12125  007A44  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12126  007A46  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12127  007A48  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12128  007A4A  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12129  007A4C  0A80               	xorlw	128
 12130  007A4E  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12131  007A50  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12132  007A52  0A80               	xorlw	128
 12133  007A54  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12134  007A56  B0D8               	btfsc	status,0,c
 12135  007A58  D00B               	goto	l21896
 12136                           
 12137                           ; BSR set to: 1
 12138                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12139  007A5A  0E01               	movlw	1
 12140  007A5C  EC7C  F03C         	call	_getTimeDecelaration
 12141  007A60                     L70:
 12142  007A60  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12143  007A64  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12144  007A68  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12145  007A6C  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12146  007A70                     l21896:
 12147                           
 12148                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12149  007A70  0100               	movlb	0	; () banked
 12150  007A72  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12151  007A74  0D0A               	mullw	10
 12152  007A76  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12153  007A7A  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12154  007A7E  0E00               	movlw	0
 12155  007A80  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12156  007A82  0EFF               	movlw	255
 12157  007A84  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12158  007A86  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12159  007A88  0101               	movlb	1	; () banked
 12160  007A8A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12161  007A8C  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12162  007A8E  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12163  007A90  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12164  007A92  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12165  007A94  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12166  007A96  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12167  007A98  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12168  007A9A  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12169  007A9C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12170  007A9E  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12171  007AA0  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12172  007AA2  0EC8               	movlw	200
 12173  007AA4  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12174  007AA6  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12175  007AA8  0E00               	movlw	0
 12176  007AAA  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12177  007AAC  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12178  007AAE  0E00               	movlw	0
 12179  007AB0  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12180  007AB2  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12181  007AB4  0E00               	movlw	0
 12182  007AB6  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12183  007AB8  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12184                           
 12185                           ; BSR set to: 1
 12186  007ABA  0012               	return		;funcret
 12187  007ABC                     __end_of_setPositionInvertionInOpening:
 12188                           	callstack 0
 12189                           
 12190 ;; *************** function _controlVelocity *****************
 12191 ;; Defined at:
 12192 ;;		line 527 in file "outputs_MC50.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;		None
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 3E/1
 12203 ;;		On exit  : 3E/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12210 ;;Total ram usage:        1 bytes
 12211 ;; Hardware stack levels used: 1
 12212 ;; Hardware stack levels required when called: 7
 12213 ;; This function calls:
 12214 ;;		_ControlDecelarationFactor
 12215 ;;		_InitSoftStop
 12216 ;;		_getStateOpenPosition
 12217 ;;		_getTimeDecelaration
 12218 ;; This function is called by:
 12219 ;;		_main
 12220 ;;		_actionZone_Opening
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text26
 12225  0058B6                     __ptext26:
 12226                           	callstack 0
 12227  0058B6                     _controlVelocity:
 12228                           	callstack 21
 12229                           
 12230                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12231                           
 12232                           ; BSR set to: 1
 12233                           ;incstack = 0
 12234  0058B6  0101               	movlb	1	; () banked
 12235  0058B8  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12236  0058BA  A4D8               	btfss	status,2,c
 12237  0058BC  D017               	goto	l21694
 12238                           
 12239                           ; BSR set to: 1
 12240  0058BE  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12241  0058C0  A4D8               	btfss	status,2,c
 12242  0058C2  D014               	goto	l21694
 12243                           
 12244                           ; BSR set to: 1
 12245                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12246  0058C4  517B               	movf	_powerControl_st& (0+255),w,b
 12247  0058C6  A4D8               	btfss	status,2,c
 12248  0058C8  D008               	goto	l21688
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12252  0058CA  0E00               	movlw	0
 12253  0058CC  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12254  0058CE  0E0A               	movlw	10
 12255  0058D0  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12256                           
 12257                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12258  0058D2  0E00               	movlw	0
 12259  0058D4  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12260  0058D6  0E14               	movlw	20
 12261  0058D8  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12262  0058DA                     l21688:
 12263                           
 12264                           ; BSR set to: 1
 12265                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12266  0058DA  ECC5  F04E         	call	_ControlDecelarationFactor	;wreg free
 12267                           
 12268                           ; BSR set to: 1
 12269                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12270  0058DE  0E01               	movlw	1
 12271  0058E0  6F7B               	movwf	_powerControl_st& (0+255),b
 12272                           
 12273                           ; BSR set to: 1
 12274                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12275  0058E2  0E00               	movlw	0
 12276  0058E4  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12277  0058E6  0E00               	movlw	0
 12278  0058E8  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12279                           
 12280                           ;outputs_MC50.c: 541:     }
 12281  0058EA  0012               	return	
 12282  0058EC                     l21694:
 12283                           
 12284                           ; BSR set to: 1
 12285  0058EC  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12286  0058EE  B4D8               	btfsc	status,2,c
 12287  0058F0  D003               	goto	u25070
 12288                           
 12289                           ; BSR set to: 1
 12290  0058F2  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12291  0058F4  A4D8               	btfss	status,2,c
 12292  0058F6  D007               	goto	l21700
 12293  0058F8                     u25070:
 12294                           
 12295                           ; BSR set to: 1
 12296                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12297  0058F8  0E00               	movlw	0
 12298  0058FA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12299  0058FC  0E00               	movlw	0
 12300  0058FE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12301                           
 12302                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12303  005900  0E00               	movlw	0
 12304  005902  6F7B               	movwf	_powerControl_st& (0+255),b
 12305                           
 12306                           ;outputs_MC50.c: 547:     }
 12307  005904  0012               	return	
 12308  005906                     l21700:
 12309                           
 12310                           ; BSR set to: 1
 12311  005906  0E03               	movlw	3
 12312  005908  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12313  00590A  A4D8               	btfss	status,2,c
 12314  00590C  D068               	goto	l21748
 12315                           
 12316                           ; BSR set to: 1
 12317  00590E  0E03               	movlw	3
 12318  005910  EC7C  F03C         	call	_getTimeDecelaration
 12319  005914  5029               	movf	?_getTimeDecelaration^0,w,c
 12320  005916  0101               	movlb	1	; () banked
 12321  005918  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12322  00591A  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12323  00591C  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12324  00591E  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12325  005920  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12326  005922  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12327  005924  0A80               	xorlw	128
 12328  005926  0100               	movlb	0	; () banked
 12329  005928  6FDA               	movwf	??_controlVelocity& (0+255),b
 12330  00592A  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12331  00592C  0A80               	xorlw	128
 12332  00592E  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12333  005930  A0D8               	btfss	status,0,c
 12334  005932  D004               	goto	u25100
 12335                           
 12336                           ; BSR set to: 0
 12337  005934  0101               	movlb	1	; () banked
 12338  005936  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12339  005938  A4D8               	btfss	status,2,c
 12340  00593A  D051               	goto	l21748
 12341  00593C                     u25100:
 12342  00593C  0100               	movlb	0	; () banked
 12343  00593E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12344  005940  B4D8               	btfsc	status,2,c
 12345  005942  D004               	goto	u25120
 12346                           
 12347                           ; BSR set to: 0
 12348  005944  0101               	movlb	1	; () banked
 12349  005946  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12350  005948  B4D8               	btfsc	status,2,c
 12351  00594A  D00C               	goto	u25140
 12352  00594C                     u25120:
 12353  00594C  0101               	movlb	1	; () banked
 12354  00594E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12355  005950  D005               	goto	u25130
 12356  005952  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12357  005954  E144               	bnz	l21748
 12358  005956  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12359  005958  B0D8               	btfsc	status,0,c
 12360  00595A  D041               	goto	l21748
 12361  00595C                     u25130:
 12362                           
 12363                           ; BSR set to: 1
 12364  00595C  0100               	movlb	0	; () banked
 12365  00595E  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12366  005960  B4D8               	btfsc	status,2,c
 12367  005962  D03D               	goto	l21748
 12368  005964                     u25140:
 12369                           
 12370                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12371  005964  0101               	movlb	1	; () banked
 12372  005966  517B               	movf	_powerControl_st& (0+255),w,b
 12373  005968  A4D8               	btfss	status,2,c
 12374  00596A  D022               	goto	l21734
 12375                           
 12376                           ; BSR set to: 1
 12377  00596C  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12378  00596E  A4D8               	btfss	status,2,c
 12379  005970  D01F               	goto	l21734
 12380                           
 12381                           ; BSR set to: 1
 12382                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12383  005972  0E00               	movlw	0
 12384  005974  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12385  005976  0E14               	movlw	20
 12386  005978  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12387                           
 12388                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12389  00597A  0100               	movlb	0	; () banked
 12390  00597C  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12391  00597E  B4D8               	btfsc	status,2,c
 12392  005980  D008               	goto	l21724
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12396  005982  0E00               	movlw	0
 12397  005984  0101               	movlb	1	; () banked
 12398  005986  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12399                           
 12400                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12401  005988  0E01               	movlw	1
 12402  00598A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12403                           
 12404                           ; BSR set to: 1
 12405                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12406  00598C  ECFC  F049         	call	_InitSoftStop	;wreg free
 12407                           
 12408                           ;outputs_MC50.c: 563:                     }
 12409  005990  D00F               	goto	l21734
 12410  005992                     l21724:
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12414  005992  0E00               	movlw	0
 12415  005994  0101               	movlb	1	; () banked
 12416  005996  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12417  005998  0E0A               	movlw	10
 12418  00599A  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12422  00599C  ECC5  F04E         	call	_ControlDecelarationFactor	;wreg free
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12426  0059A0  0E01               	movlw	1
 12427  0059A2  6F7B               	movwf	_powerControl_st& (0+255),b
 12428                           
 12429                           ; BSR set to: 1
 12430                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12431  0059A4  0E00               	movlw	0
 12432  0059A6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12433  0059A8  0E00               	movlw	0
 12434  0059AA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12435                           
 12436                           ; BSR set to: 1
 12437                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12438  0059AC  0E00               	movlw	0
 12439  0059AE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12440  0059B0                     l21734:
 12441                           
 12442                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12443  0059B0  0101               	movlb	1	; () banked
 12444  0059B2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12445  0059B4  D005               	goto	u25180
 12446  0059B6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12447  0059B8  E102               	bnz	u25181
 12448  0059BA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12449  0059BC  B0D8               	btfsc	status,0,c
 12450  0059BE                     u25181:
 12451  0059BE  0012               	return	
 12452  0059C0                     u25180:
 12453                           
 12454                           ; BSR set to: 1
 12455  0059C0  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12456  0059C2  A4D8               	btfss	status,2,c
 12457  0059C4  0012               	return	
 12458                           
 12459                           ; BSR set to: 1
 12460  0059C6  0100               	movlb	0	; () banked
 12461  0059C8  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12462  0059CA  B4D8               	btfsc	status,2,c
 12463  0059CC  0012               	return	
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12467  0059CE  0E00               	movlw	0
 12468  0059D0  0101               	movlb	1	; () banked
 12469  0059D2  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12470  0059D4  0E02               	movlw	2
 12471  0059D6  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12472                           
 12473                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12474  0059D8  0E00               	movlw	0
 12475  0059DA  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12476  0059DC  D77E               	goto	l21688
 12477  0059DE                     l21748:
 12478  0059DE  0101               	movlb	1	; () banked
 12479  0059E0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12480  0059E2  EC6F  F039         	call	_getStateOpenPosition
 12481  0059E6  06E8               	decf	wreg,f,c
 12482  0059E8  A4D8               	btfss	status,2,c
 12483  0059EA  D042               	goto	l21790
 12484                           
 12485                           ; BSR set to: 0
 12486  0059EC  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12487  0059EE  B4D8               	btfsc	status,2,c
 12488  0059F0  D004               	goto	u25230
 12489                           
 12490                           ; BSR set to: 0
 12491  0059F2  0101               	movlb	1	; () banked
 12492  0059F4  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12493  0059F6  B4D8               	btfsc	status,2,c
 12494  0059F8  D00C               	goto	u25250
 12495  0059FA                     u25230:
 12496  0059FA  0101               	movlb	1	; () banked
 12497  0059FC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12498  0059FE  D005               	goto	u25240
 12499  005A00  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12500  005A02  E136               	bnz	l21790
 12501  005A04  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12502  005A06  B0D8               	btfsc	status,0,c
 12503  005A08  D033               	goto	l21790
 12504  005A0A                     u25240:
 12505                           
 12506                           ; BSR set to: 1
 12507  005A0A  0100               	movlb	0	; () banked
 12508  005A0C  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12509  005A0E  B4D8               	btfsc	status,2,c
 12510  005A10  D02F               	goto	l21790
 12511  005A12                     u25250:
 12512                           
 12513                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12514  005A12  0101               	movlb	1	; () banked
 12515  005A14  517B               	movf	_powerControl_st& (0+255),w,b
 12516  005A16  A4D8               	btfss	status,2,c
 12517  005A18  D022               	goto	l21776
 12518                           
 12519                           ; BSR set to: 1
 12520  005A1A  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12521  005A1C  A4D8               	btfss	status,2,c
 12522  005A1E  D01F               	goto	l21776
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12526  005A20  0E00               	movlw	0
 12527  005A22  6FCD               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12528  005A24  0E14               	movlw	20
 12529  005A26  6FCC               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12530                           
 12531                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12532  005A28  0100               	movlb	0	; () banked
 12533  005A2A  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12534  005A2C  B4D8               	btfsc	status,2,c
 12535  005A2E  D008               	goto	l21768
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12539  005A30  0E00               	movlw	0
 12540  005A32  0101               	movlb	1	; () banked
 12541  005A34  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12542                           
 12543                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12544  005A36  0E01               	movlw	1
 12545  005A38  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12546                           
 12547                           ; BSR set to: 1
 12548                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12549  005A3A  ECFC  F049         	call	_InitSoftStop	;wreg free
 12550                           
 12551                           ;outputs_MC50.c: 598:             }else{
 12552  005A3E  D00F               	goto	l21776
 12553  005A40                     l21768:
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12557  005A40  0E00               	movlw	0
 12558  005A42  0101               	movlb	1	; () banked
 12559  005A44  6FCB               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12560  005A46  0E0A               	movlw	10
 12561  005A48  6FCA               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12562                           
 12563                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12564  005A4A  0E00               	movlw	0
 12565  005A4C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12566                           
 12567                           ; BSR set to: 1
 12568                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12569  005A4E  ECC5  F04E         	call	_ControlDecelarationFactor	;wreg free
 12570                           
 12571                           ; BSR set to: 1
 12572                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12573  005A52  0E01               	movlw	1
 12574  005A54  6F7B               	movwf	_powerControl_st& (0+255),b
 12575                           
 12576                           ; BSR set to: 1
 12577                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12578  005A56  0E00               	movlw	0
 12579  005A58  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12580  005A5A  0E00               	movlw	0
 12581  005A5C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12582  005A5E                     l21776:
 12583                           
 12584                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12585  005A5E  0101               	movlb	1	; () banked
 12586  005A60  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12587  005A62  D7AE               	goto	u25180
 12588  005A64  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12589  005A66  E135               	bnz	l2311
 12590  005A68  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12591  005A6A  B0D8               	btfsc	status,0,c
 12592  005A6C  0012               	return	
 12593  005A6E  D7A8               	goto	u25180
 12594  005A70                     l21790:
 12595  005A70  0101               	movlb	1	; () banked
 12596  005A72  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12597  005A74  D012               	goto	l21798
 12598  005A76  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12599  005A78  E103               	bnz	u25320
 12600  005A7A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12601  005A7C  A0D8               	btfss	status,0,c
 12602  005A7E  D00D               	goto	l21798
 12603  005A80                     u25320:
 12604                           
 12605                           ; BSR set to: 1
 12606  005A80  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12607  005A82  B4D8               	btfsc	status,2,c
 12608  005A84  D00A               	goto	l21798
 12609                           
 12610                           ; BSR set to: 1
 12611                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12612  005A86  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12613  005A88  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12614  005A8A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12615  005A8C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12616  005A8E  A0D8               	btfss	status,0,c
 12617  005A90  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12618  005A92  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12619  005A94                     l21796:
 12620                           
 12621                           ; BSR set to: 1
 12622                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12623  005A94  0E00               	movlw	0
 12624  005A96  6F7B               	movwf	_powerControl_st& (0+255),b
 12625                           
 12626                           ;outputs_MC50.c: 623:     }
 12627  005A98  0012               	return	
 12628  005A9A                     l21798:
 12629                           
 12630                           ; BSR set to: 1
 12631  005A9A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12632  005A9C  D010               	goto	l21806
 12633  005A9E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12634  005AA0  E103               	bnz	u25340
 12635  005AA2  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12636  005AA4  A0D8               	btfss	status,0,c
 12637  005AA6  D00B               	goto	l21806
 12638  005AA8                     u25340:
 12639                           
 12640                           ; BSR set to: 1
 12641  005AA8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12642  005AAA  B4D8               	btfsc	status,2,c
 12643  005AAC  D008               	goto	l21806
 12644                           
 12645                           ; BSR set to: 1
 12646                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12647  005AAE  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12648  005AB0  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12649  005AB2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12650  005AB4  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12651  005AB6  A0D8               	btfss	status,0,c
 12652  005AB8  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12653  005ABA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12654  005ABC  D7EB               	goto	l21796
 12655  005ABE                     l21806:
 12656                           
 12657                           ; BSR set to: 1
 12658                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12659  005ABE  0E00               	movlw	0
 12660  005AC0  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12661  005AC2  0E00               	movlw	0
 12662  005AC4  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12663                           
 12664                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12665  005AC6  0E00               	movlw	0
 12666  005AC8  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12667  005ACA  0E00               	movlw	0
 12668  005ACC  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12669                           
 12670                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12671  005ACE  0E00               	movlw	0
 12672  005AD0  6F7B               	movwf	_powerControl_st& (0+255),b
 12673  005AD2                     l2311:
 12674  005AD2  0012               	return		;funcret
 12675  005AD4                     __end_of_controlVelocity:
 12676                           	callstack 0
 12677                           
 12678 ;; *************** function _getStateOpenPosition *****************
 12679 ;; Defined at:
 12680 ;;		line 470 in file "outputs_MC50.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  stateMotor      1    wreg     enum E10381
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12685 ;;  state           1    0[BANK0 ] _Bool 
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      _Bool 
 12688 ;; Registers used:
 12689 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12690 ;; Tracked objects:
 12691 ;;		On entry : 3F/1
 12692 ;;		On exit  : 3F/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12699 ;;Total ram usage:       11 bytes
 12700 ;; Hardware stack levels used: 1
 12701 ;; Hardware stack levels required when called: 6
 12702 ;; This function calls:
 12703 ;;		___lmul
 12704 ;;		_getTimeDecelaration
 12705 ;; This function is called by:
 12706 ;;		_controlVelocity
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text27
 12711  0072DE                     __ptext27:
 12712                           	callstack 0
 12713  0072DE                     _getStateOpenPosition:
 12714                           	callstack 21
 12715                           
 12716                           ;incstack = 0
 12717                           ;getStateOpenPosition@stateMotor stored from wreg
 12718  0072DE  0100               	movlb	0	; () banked
 12719  0072E0  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12720                           
 12721                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12722  0072E2  0E00               	movlw	0
 12723  0072E4  0100               	movlb	0	; () banked
 12724  0072E6  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12728  0072E8  0101               	movlb	1	; () banked
 12729  0072EA  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12730  0072EC  A4D8               	btfss	status,2,c
 12731  0072EE  D002               	goto	l21040
 12732  0072F0                     u24180:
 12733                           
 12734                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12735  0072F0  0E01               	movlw	1
 12736  0072F2  D046               	goto	L71
 12737  0072F4                     l21040:
 12738                           
 12739                           ; BSR set to: 1
 12740  0072F4  0100               	movlb	0	; () banked
 12741  0072F6  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12742  0072F8  0D14               	mullw	20
 12743  0072FA  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12744  0072FE  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12745  007302  0E00               	movlw	0
 12746  007304  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12747  007306  0EFF               	movlw	255
 12748  007308  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12749  00730A  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12750  00730C  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12751  00730E  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12752  007310  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12753  007312  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12754  007314  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12755  007316  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12756  007318  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12757  00731A  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12758  00731C  B0D8               	btfsc	status,0,c
 12759  00731E  D033               	goto	l21054
 12760                           
 12761                           ; BSR set to: 0
 12762  007320  0E02               	movlw	2
 12763  007322  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12764  007324  A4D8               	btfss	status,2,c
 12765  007326  D02F               	goto	l21054
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12769  007328  90D8               	bcf	status,0,c
 12770  00732A  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12771  00732C  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12772  00732E  D001               	goto	l21048
 12773  007330  D7DF               	goto	u24180
 12774  007332                     l21048:
 12775                           
 12776                           ; BSR set to: 0
 12777  007332  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12778  007334  0D14               	mullw	20
 12779  007336  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12780  00733A  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12781  00733E  0E00               	movlw	0
 12782  007340  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12783  007342  0EFF               	movlw	255
 12784  007344  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12785  007346  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12786  007348  0ED8               	movlw	216
 12787  00734A  2432               	addwf	??_getStateOpenPosition^0,w,c
 12788  00734C  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12789  00734E  0EFF               	movlw	255
 12790  007350  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12791  007352  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12792  007354  0EFF               	movlw	255
 12793  007356  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12794  007358  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12795  00735A  0EFF               	movlw	255
 12796  00735C  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12797  00735E  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12798  007360  0101               	movlb	1	; () banked
 12799  007362  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12800  007364  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12801  007366  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12802  007368  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12803  00736A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12804  00736C  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12805  00736E  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12806  007370  0A80               	xorlw	128
 12807  007372  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12808  007374  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12809  007376  0A80               	xorlw	128
 12810  007378  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12811  00737A  A0D8               	btfss	status,0,c
 12812  00737C  D7B9               	goto	u24180
 12813                           
 12814                           ; BSR set to: 1
 12815                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12816  00737E  0E00               	movlw	0
 12817  007380                     L71:
 12818  007380  0100               	movlb	0	; () banked
 12819  007382  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12820  007384  D032               	goto	l2254
 12821  007386                     l21054:
 12822                           
 12823                           ; BSR set to: 0
 12824  007386  0E02               	movlw	2
 12825  007388  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12826  00738A  B4D8               	btfsc	status,2,c
 12827  00738C  D003               	goto	u24240
 12828                           
 12829                           ; BSR set to: 0
 12830  00738E  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12831  007390  A4D8               	btfss	status,2,c
 12832  007392  D02B               	goto	l2254
 12833  007394                     u24240:
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12837  007394  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12838  007396  6E1D               	movwf	___lmul@multiplier^0,c
 12839  007398  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12840  00739A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12841  00739C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12842  00739E  0E0A               	movlw	10
 12843  0073A0  6E21               	movwf	___lmul@multiplicand^0,c
 12844  0073A2  0E00               	movlw	0
 12845  0073A4  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12846  0073A6  0E00               	movlw	0
 12847  0073A8  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12848  0073AA  0E00               	movlw	0
 12849  0073AC  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12850  0073AE  ECB5  F048         	call	___lmul	;wreg free
 12851  0073B2  501D               	movf	?___lmul^0,w,c
 12852  0073B4  0100               	movlb	0	; () banked
 12853  0073B6  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12854  0073B8  501E               	movf	(?___lmul+1)^0,w,c
 12855  0073BA  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12856  0073BC  501F               	movf	(?___lmul+2)^0,w,c
 12857  0073BE  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12858  0073C0  5020               	movf	(?___lmul+3)^0,w,c
 12859  0073C2  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12860  0073C4  A0D8               	btfss	status,0,c
 12861  0073C6  D794               	goto	u24180
 12862                           
 12863                           ; BSR set to: 0
 12864  0073C8  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12865  0073CA  EC7C  F03C         	call	_getTimeDecelaration
 12866  0073CE  0101               	movlb	1	; () banked
 12867  0073D0  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12868  0073D2  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12869  0073D4  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12870  0073D6  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12871  0073D8  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12872  0073DA  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12873  0073DC  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12874  0073DE  0A80               	xorlw	128
 12875  0073E0  6E32               	movwf	??_getStateOpenPosition^0,c
 12876  0073E2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12877  0073E4  0A80               	xorlw	128
 12878  0073E6  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12879  0073E8  D7C8               	goto	L72
 12880  0073EA                     l2254:
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;outputs_MC50.c: 507:     return state;
 12884  0073EA  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12885                           
 12886                           ; BSR set to: 0
 12887  0073EC  0012               	return		;funcret
 12888  0073EE                     __end_of_getStateOpenPosition:
 12889                           	callstack 0
 12890                           
 12891 ;; *************** function _InitSoftStop *****************
 12892 ;; Defined at:
 12893 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;		None
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;		None
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  1    wreg      void 
 12900 ;; Registers used:
 12901 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 3F/1
 12904 ;;		On exit  : 3E/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12911 ;;Total ram usage:        1 bytes
 12912 ;; Hardware stack levels used: 1
 12913 ;; Hardware stack levels required when called: 5
 12914 ;; This function calls:
 12915 ;;		_GetMotorPower
 12916 ;; This function is called by:
 12917 ;;		_controlVelocity
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921                           	psect	text28
 12922  0093F8                     __ptext28:
 12923                           	callstack 0
 12924  0093F8                     _InitSoftStop:
 12925                           	callstack 22
 12926                           
 12927                           ; BSR set to: 1
 12928                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;incstack = 0
 12932  0093F8  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12933  0093FA  B4D8               	btfsc	status,2,c
 12934  0093FC  D003               	goto	u24280
 12935                           
 12936                           ; BSR set to: 1
 12937  0093FE  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12938  009400  A4D8               	btfss	status,2,c
 12939  009402  0012               	return	
 12940  009404                     u24280:
 12941                           
 12942                           ; BSR set to: 1
 12943  009404  0100               	movlb	0	; () banked
 12944  009406  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12945  009408  B4D8               	btfsc	status,2,c
 12946  00940A  0012               	return	
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12950  00940C  0E00               	movlw	0
 12951  00940E  0101               	movlb	1	; () banked
 12952  009410  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12953  009412  0E00               	movlw	0
 12954  009414  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12955                           
 12956                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12957  009416  0E00               	movlw	0
 12958  009418  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12959  00941A  0E00               	movlw	0
 12960  00941C  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12961                           
 12962                           ; BSR set to: 1
 12963                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12964  00941E  ECC4  F03D         	call	_GetMotorPower	;wreg free
 12965  009422  6E14               	movwf	??_InitSoftStop^0,c
 12966  009424  5014               	movf	??_InitSoftStop^0,w,c
 12967  009426  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12968  009428  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12969                           
 12970                           ; BSR set to: 1
 12971                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12972  00942A  0E01               	movlw	1
 12973  00942C  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12974  00942E  6FB6               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12975  009430  0E00               	movlw	0
 12976  009432  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12977  009434  6FB7               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12978                           
 12979                           ; BSR set to: 1
 12980                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12981  009436  0100               	movlb	0	; () banked
 12982  009438  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12983  00943A  080A               	sublw	10
 12984  00943C  0101               	movlb	1	; () banked
 12985  00943E  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12986  009440  0012               	return		;funcret
 12987  009442                     __end_of_InitSoftStop:
 12988                           	callstack 0
 12989                           
 12990 ;; *************** function _ControlDecelarationFactor *****************
 12991 ;; Defined at:
 12992 ;;		line 463 in file "outputs_MC50.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;		None
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  1    wreg      void 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0, prodl, prodh
 13001 ;; Tracked objects:
 13002 ;;		On entry : 3E/1
 13003 ;;		On exit  : 3F/1
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13010 ;;Total ram usage:        0 bytes
 13011 ;; Hardware stack levels used: 1
 13012 ;; Hardware stack levels required when called: 4
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_controlVelocity
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text29
 13021  009D8A                     __ptext29:
 13022                           	callstack 0
 13023  009D8A                     _ControlDecelarationFactor:
 13024                           	callstack 23
 13025                           
 13026                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13027                           
 13028                           ;incstack = 0
 13029  009D8A  0E01               	movlw	1
 13030  009D8C  0101               	movlb	1	; () banked
 13031  009D8E  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13032                           
 13033                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13034  009D90  0E02               	movlw	2
 13035  009D92  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13036                           
 13037                           ; BSR set to: 1
 13038                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13039  009D94  0100               	movlb	0	; () banked
 13040  009D96  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13041  009D98  0101               	movlb	1	; () banked
 13042  009D9A  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13043  009D9C  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13044                           
 13045                           ; BSR set to: 1
 13046  009DA0  0012               	return		;funcret
 13047  009DA2                     __end_of_ControlDecelarationFactor:
 13048                           	callstack 0
 13049                           
 13050 ;; *************** function _actionZone_Opened *****************
 13051 ;; Defined at:
 13052 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13057 ;;  securityClos    1   31[COMRAM] enum E10397
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 3F/0
 13064 ;;		On exit  : 3E/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13071 ;;Total ram usage:        2 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 7
 13074 ;; This function calls:
 13075 ;;		_CloseOrder
 13076 ;;		_GetOpenOrder
 13077 ;;		_GetSecurityStateInClosing
 13078 ;;		_InitFullAutoTime
 13079 ;;		_InitWalkAutoTime
 13080 ;;		_OpenFullOrder
 13081 ;;		_OpenWalkOrder
 13082 ;;		_VerifyFollowMe
 13083 ;; This function is called by:
 13084 ;;		_sm_execute_ControlGate
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text30
 13089  005AD4                     __ptext30:
 13090                           	callstack 0
 13091  005AD4                     _actionZone_Opened:
 13092                           	callstack 22
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13096                           
 13097                           ; BSR set to: 1
 13098                           ;incstack = 0
 13099  005AD4  EC91  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13100  005AD8  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13101                           
 13102                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13103  005ADA  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13104  005ADC  B4D8               	btfsc	status,2,c
 13105  005ADE  D007               	goto	l23502
 13106  005AE0  0101               	movlb	1	; () banked
 13107  005AE2  5191               	movf	_Abertura_pedonal& (0+255),w,b
 13108  005AE4  A4D8               	btfss	status,2,c
 13109  005AE6  D003               	goto	l23502
 13110                           
 13111                           ; BSR set to: 1
 13112                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13113  005AE8  EC9E  F04E         	call	_InitFullAutoTime	;wreg free
 13114                           
 13115                           ;sm_ControlGate_MC50.c: 519:     }
 13116  005AEC  D008               	goto	l2727
 13117  005AEE                     l23502:
 13118  005AEE  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13119  005AF0  B4D8               	btfsc	status,2,c
 13120  005AF2  D005               	goto	l2727
 13121  005AF4  0101               	movlb	1	; () banked
 13122  005AF6  0591               	decf	_Abertura_pedonal& (0+255),w,b
 13123  005AF8  B4D8               	btfsc	status,2,c
 13124                           
 13125                           ; BSR set to: 1
 13126                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13127  005AFA  EC23  F04F         	call	_InitWalkAutoTime	;wreg free
 13128  005AFE                     l2727:
 13129                           
 13130                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13131  005AFE  EC4A  F02F         	call	_GetOpenOrder	;wreg free
 13132  005B02  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13133                           
 13134                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13135  005B04  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13136  005B06  ECF6  F04D         	call	_VerifyFollowMe
 13137                           
 13138                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13139  005B0A  B28E               	btfsc	142,1,c	;volatile
 13140  005B0C  D013               	goto	l2729
 13141  005B0E  0100               	movlb	0	; () banked
 13142  005B10  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13143  005B12  B4D8               	btfsc	status,2,c
 13144  005B14  D00F               	goto	l2729
 13145                           
 13146                           ; BSR set to: 0
 13147  005B16  0101               	movlb	1	; () banked
 13148  005B18  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13149  005B1A  B4D8               	btfsc	status,2,c
 13150  005B1C  D00B               	goto	l2729
 13151                           
 13152                           ; BSR set to: 1
 13153  005B1E  0E35               	movlw	53
 13154  005B20  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13155  005B22  B4D8               	btfsc	status,2,c
 13156  005B24  D007               	goto	l2729
 13157                           
 13158                           ; BSR set to: 1
 13159  005B26  0E02               	movlw	2
 13160  005B28  0100               	movlb	0	; () banked
 13161  005B2A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13162  005B2C  A4D8               	btfss	status,2,c
 13163  005B2E  D002               	goto	l2729
 13164                           
 13165                           ; BSR set to: 0
 13166                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13167  005B30  0E00               	movlw	0
 13168  005B32  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13169  005B34                     l2729:
 13170                           
 13171                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13172  005B34  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13173  005B36  B4D8               	btfsc	status,2,c
 13174  005B38  D05D               	goto	l2730
 13175                           
 13176                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13177  005B3A  0E00               	movlw	0
 13178  005B3C  0101               	movlb	1	; () banked
 13179  005B3E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13180  005B40  0E3C               	movlw	60
 13181  005B42  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13182                           
 13183                           ; BSR set to: 1
 13184                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13185  005B44  0E02               	movlw	2
 13186  005B46  0100               	movlb	0	; () banked
 13187  005B48  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13188  005B4A  A4D8               	btfss	status,2,c
 13189  005B4C  D00D               	goto	l23534
 13190                           
 13191                           ; BSR set to: 0
 13192  005B4E  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13193  005B50  A4D8               	btfss	status,2,c
 13194  005B52  D00A               	goto	l23534
 13195                           
 13196                           ; BSR set to: 0
 13197  005B54  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13198  005B56  B4D8               	btfsc	status,2,c
 13199  005B58  D004               	goto	u27590
 13200                           
 13201                           ; BSR set to: 0
 13202  005B5A  0E04               	movlw	4
 13203  005B5C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13204  005B5E  A4D8               	btfss	status,2,c
 13205  005B60  D003               	goto	l23534
 13206  005B62                     u27590:
 13207                           
 13208                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13209  005B62  EC97  F04D         	call	_CloseOrder	;wreg free
 13210                           
 13211                           ;sm_ControlGate_MC50.c: 546:         }
 13212  005B66  0012               	return	
 13213  005B68                     l23534:
 13214                           
 13215                           ; BSR set to: 0
 13216  005B68  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13217  005B6A  B4D8               	btfsc	status,2,c
 13218  005B6C  D014               	goto	l23548
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13222  005B6E  0E03               	movlw	3
 13223  005B70  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13224  005B72  A4D8               	btfss	status,2,c
 13225  005B74  D00B               	goto	l23544
 13226                           
 13227                           ; BSR set to: 0
 13228  005B76  0101               	movlb	1	; () banked
 13229  005B78  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13230  005B7A  A4D8               	btfss	status,2,c
 13231  005B7C  D007               	goto	l23544
 13232                           
 13233                           ; BSR set to: 1
 13234  005B7E  0E04               	movlw	4
 13235  005B80  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13236  005B82  B4D8               	btfsc	status,2,c
 13237  005B84  D003               	goto	l23544
 13238  005B86                     u27630:
 13239                           
 13240                           ; BSR set to: 1
 13241                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13242  005B86  ECAA  F04D         	call	_OpenFullOrder	;wreg free
 13243                           
 13244                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13245  005B8A  0012               	return	
 13246  005B8C                     l23544:
 13247  005B8C  0E04               	movlw	4
 13248  005B8E  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13249  005B90  A4D8               	btfss	status,2,c
 13250  005B92  0012               	return	
 13251  005B94  D7E6               	goto	u27590
 13252  005B96                     l23548:
 13253                           
 13254                           ; BSR set to: 0
 13255  005B96  0E03               	movlw	3
 13256  005B98  0101               	movlb	1	; () banked
 13257  005B9A  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13258  005B9C  A4D8               	btfss	status,2,c
 13259  005B9E  D009               	goto	l23556
 13260                           
 13261                           ; BSR set to: 1
 13262  005BA0  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13263  005BA2  A4D8               	btfss	status,2,c
 13264  005BA4  D006               	goto	l23556
 13265  005BA6                     u27660:
 13266                           
 13267                           ; BSR set to: 1
 13268                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13269  005BA6  ECAA  F04D         	call	_OpenFullOrder	;wreg free
 13270  005BAA                     l23554:
 13271                           
 13272                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13273  005BAA  0E00               	movlw	0
 13274  005BAC  0101               	movlb	1	; () banked
 13275  005BAE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13276                           
 13277                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13278  005BB0  0012               	return	
 13279  005BB2                     l23556:
 13280                           
 13281                           ; BSR set to: 1
 13282  005BB2  0E03               	movlw	3
 13283  005BB4  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13284  005BB6  A4D8               	btfss	status,2,c
 13285  005BB8  D007               	goto	l23564
 13286                           
 13287                           ; BSR set to: 1
 13288  005BBA  0E02               	movlw	2
 13289  005BBC  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13290  005BBE  A4D8               	btfss	status,2,c
 13291  005BC0  D003               	goto	l23564
 13292                           
 13293                           ; BSR set to: 1
 13294                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13295  005BC2  EC0F  F046         	call	_OpenWalkOrder	;wreg free
 13296  005BC6  D7F1               	goto	l23554
 13297  005BC8                     l23564:
 13298                           
 13299                           ; BSR set to: 1
 13300  005BC8  0E03               	movlw	3
 13301  005BCA  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13302  005BCC  A4D8               	btfss	status,2,c
 13303  005BCE  D005               	goto	l23574
 13304                           
 13305                           ; BSR set to: 1
 13306                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13307  005BD0  0E04               	movlw	4
 13308  005BD2  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13309  005BD4  B4D8               	btfsc	status,2,c
 13310  005BD6  0012               	return	
 13311  005BD8  D7E6               	goto	u27660
 13312  005BDA                     l23574:
 13313                           
 13314                           ; BSR set to: 1
 13315  005BDA  0100               	movlb	0	; () banked
 13316  005BDC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13317  005BDE  B4D8               	btfsc	status,2,c
 13318  005BE0  D007               	goto	l23580
 13319                           
 13320                           ; BSR set to: 0
 13321  005BE2  0E02               	movlw	2
 13322  005BE4  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13323  005BE6  A4D8               	btfss	status,2,c
 13324  005BE8  D003               	goto	l23580
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13328  005BEA  EC9E  F04E         	call	_InitFullAutoTime	;wreg free
 13329                           
 13330                           ;sm_ControlGate_MC50.c: 586:         }
 13331  005BEE  0012               	return	
 13332  005BF0                     l23580:
 13333                           
 13334                           ; BSR set to: 0
 13335  005BF0  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13336  005BF2  D7CE               	goto	L73
 13337  005BF4                     l2730:
 13338  005BF4  B28E               	btfsc	142,1,c	;volatile
 13339  005BF6  D00B               	goto	l23588
 13340  005BF8  0100               	movlb	0	; () banked
 13341  005BFA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13342  005BFC  B4D8               	btfsc	status,2,c
 13343  005BFE  D007               	goto	l23588
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13347  005C00  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13348  005C02  0D14               	mullw	20
 13349  005C04  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 13350  005C08  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 13351                           
 13352                           ;sm_ControlGate_MC50.c: 599:     }
 13353  005C0C  0012               	return	
 13354  005C0E                     l23588:
 13355  005C0E  0101               	movlb	1	; () banked
 13356  005C10  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13357  005C12  A4D8               	btfss	status,2,c
 13358  005C14  D00F               	goto	l23598
 13359                           
 13360                           ; BSR set to: 1
 13361  005C16  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13362  005C18  A4D8               	btfss	status,2,c
 13363  005C1A  D00C               	goto	l23598
 13364                           
 13365                           ; BSR set to: 1
 13366                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13367  005C1C  0E00               	movlw	0
 13368  005C1E  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13369                           
 13370                           ; BSR set to: 1
 13371                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13372  005C20  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13373                           
 13374                           ; BSR set to: 1
 13375                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13376  005C24  0100               	movlb	0	; () banked
 13377  005C26  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13378  005C28  0D14               	mullw	20
 13379  005C2A  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 13380  005C2E  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 13381                           
 13382                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13383  005C32  0012               	return	
 13384  005C34                     l23598:
 13385                           
 13386                           ; BSR set to: 1
 13387  005C34  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13388  005C36  D005               	goto	u27780
 13389  005C38  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13390  005C3A  E113               	bnz	l23610
 13391  005C3C  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13392  005C3E  B0D8               	btfsc	status,0,c
 13393  005C40  D010               	goto	l23610
 13394  005C42                     u27780:
 13395                           
 13396                           ; BSR set to: 1
 13397  005C42  0100               	movlb	0	; () banked
 13398  005C44  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13399  005C46  A4D8               	btfss	status,2,c
 13400  005C48  D00C               	goto	l23610
 13401                           
 13402                           ; BSR set to: 0
 13403  005C4A  0101               	movlb	1	; () banked
 13404  005C4C  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13405  005C4E  A4D8               	btfss	status,2,c
 13406  005C50  D008               	goto	l23610
 13407                           
 13408                           ; BSR set to: 1
 13409  005C52  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13410  005C54  B4D8               	btfsc	status,2,c
 13411  005C56  D005               	goto	l23610
 13412                           
 13413                           ; BSR set to: 1
 13414                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13415  005C58  0E00               	movlw	0
 13416  005C5A  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13417                           
 13418                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13419  005C5C  0E00               	movlw	0
 13420  005C5E  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13421  005C60  D780               	goto	u27590
 13422  005C62                     l23610:
 13423  005C62  0101               	movlb	1	; () banked
 13424  005C64  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13425  005C66  D005               	goto	u27820
 13426  005C68  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13427  005C6A  E119               	bnz	l23628
 13428  005C6C  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13429  005C6E  B0D8               	btfsc	status,0,c
 13430  005C70  D016               	goto	l23628
 13431  005C72                     u27820:
 13432                           
 13433                           ; BSR set to: 1
 13434  005C72  0100               	movlb	0	; () banked
 13435  005C74  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13436  005C76  B4D8               	btfsc	status,2,c
 13437  005C78  D012               	goto	l23628
 13438                           
 13439                           ; BSR set to: 0
 13440  005C7A  0101               	movlb	1	; () banked
 13441  005C7C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13442  005C7E  B4D8               	btfsc	status,2,c
 13443  005C80  D00E               	goto	l23628
 13444                           
 13445                           ; BSR set to: 1
 13446                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13447  005C82  0E00               	movlw	0
 13448  005C84  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13449                           
 13450                           ; BSR set to: 1
 13451                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13452  005C86  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13453  005C88  A4D8               	btfss	status,2,c
 13454  005C8A  D003               	goto	l23624
 13455                           
 13456                           ; BSR set to: 1
 13457                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13458  005C8C  0E00               	movlw	0
 13459  005C8E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13460  005C90  D77A               	goto	u27630
 13461  005C92                     l23624:
 13462                           
 13463                           ; BSR set to: 1
 13464                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13465  005C92  EC97  F04D         	call	_CloseOrder	;wreg free
 13466                           
 13467                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13468  005C96  0E00               	movlw	0
 13469  005C98  0101               	movlb	1	; () banked
 13470  005C9A  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13471  005C9C  0012               	return	
 13472  005C9E                     l23628:
 13473  005C9E  0101               	movlb	1	; () banked
 13474  005CA0  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13475  005CA2  A4D8               	btfss	status,2,c
 13476  005CA4  0012               	return	
 13477                           
 13478                           ; BSR set to: 1
 13479  005CA6  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13480  005CA8  A4D8               	btfss	status,2,c
 13481  005CAA  0012               	return	
 13482                           
 13483                           ; BSR set to: 1
 13484                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13485  005CAC  BFAB               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13486  005CAE  D006               	goto	u27880
 13487  005CB0  51AB               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13488  005CB2  E103               	bnz	u27881
 13489  005CB4  0E02               	movlw	2
 13490  005CB6  5DAA               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13491  005CB8  B0D8               	btfsc	status,0,c
 13492  005CBA                     u27881:
 13493  005CBA  0012               	return	
 13494  005CBC                     u27880:
 13495                           
 13496                           ; BSR set to: 1
 13497                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13498  005CBC  0E00               	movlw	0
 13499  005CBE  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13500  005CC0  0012               	return		;funcret
 13501  005CC2                     __end_of_actionZone_Opened:
 13502                           	callstack 0
 13503                           
 13504 ;; *************** function _VerifyFollowMe *****************
 13505 ;; Defined at:
 13506 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;  securityClos    1    wreg     enum E10397
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  securityClos    1   15[COMRAM] enum E10397
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      void 
 13513 ;; Registers used:
 13514 ;;		wreg, status,2, status,0
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 3E/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;Total ram usage:        1 bytes
 13525 ;; Hardware stack levels used: 1
 13526 ;; Hardware stack levels required when called: 4
 13527 ;; This function calls:
 13528 ;;		Nothing
 13529 ;; This function is called by:
 13530 ;;		_actionZone_Opening
 13531 ;;		_actionZone_Opened
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text31
 13536  009BEC                     __ptext31:
 13537                           	callstack 0
 13538  009BEC                     _VerifyFollowMe:
 13539                           	callstack 24
 13540                           
 13541                           ;incstack = 0
 13542                           ;VerifyFollowMe@securityClose stored from wreg
 13543  009BEC  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13544                           
 13545                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13546  009BEE  0100               	movlb	0	; () banked
 13547  009BF0  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13548  009BF2  B4D8               	btfsc	status,2,c
 13549  009BF4  0012               	return	
 13550                           
 13551                           ; BSR set to: 0
 13552  009BF6  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13553  009BF8  A4D8               	btfss	status,2,c
 13554  009BFA  0012               	return	
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13558  009BFC  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13559  009BFE  A4D8               	btfss	status,2,c
 13560  009C00  0012               	return	
 13561                           
 13562                           ; BSR set to: 0
 13563  009C02  0101               	movlb	1	; () banked
 13564  009C04  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13565  009C06  A4D8               	btfss	status,2,c
 13566  009C08  0012               	return	
 13567                           
 13568                           ; BSR set to: 1
 13569                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13570  009C0A  0E01               	movlw	1
 13571  009C0C  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13572  009C0E  0012               	return		;funcret
 13573  009C10                     __end_of_VerifyFollowMe:
 13574                           	callstack 0
 13575                           
 13576 ;; *************** function _CloseOrder *****************
 13577 ;; Defined at:
 13578 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;		None
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;		None
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13587 ;; Tracked objects:
 13588 ;;		On entry : 3E/1
 13589 ;;		On exit  : 3E/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13596 ;;Total ram usage:        0 bytes
 13597 ;; Hardware stack levels used: 1
 13598 ;; Hardware stack levels required when called: 6
 13599 ;; This function calls:
 13600 ;;		_InitSoftStart
 13601 ;;		_sm_send_event
 13602 ;; This function is called by:
 13603 ;;		_actionZone_Opening
 13604 ;;		_actionZone_Opened
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           	psect	text32
 13609  009B2E                     __ptext32:
 13610                           	callstack 0
 13611  009B2E                     _CloseOrder:
 13612                           	callstack 22
 13613                           
 13614                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13615                           
 13616                           ;incstack = 0
 13617  009B2E  0E03               	movlw	3
 13618  009B30  0101               	movlb	1	; () banked
 13619  009B32  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13620                           
 13621                           ; BSR set to: 1
 13622                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13623  009B34  0EE6               	movlw	low _controlGate_stateMachine
 13624  009B36  6E12               	movwf	sm_send_event@psm^0,c
 13625  009B38  0E01               	movlw	high _controlGate_stateMachine
 13626  009B3A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13627  009B3C  0E00               	movlw	0
 13628  009B3E  6E15               	movwf	(sm_send_event@event+1)^0,c
 13629  009B40  0E0E               	movlw	14
 13630  009B42  6E14               	movwf	sm_send_event@event^0,c
 13631  009B44  EC7A  F047         	call	_sm_send_event	;wreg free
 13632                           
 13633                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13634  009B48  0E03               	movlw	3
 13635  009B4A  0101               	movlb	1	; () banked
 13636  009B4C  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13637                           
 13638                           ; BSR set to: 1
 13639                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13640  009B4E  ECA8  F047         	call	_InitSoftStart	;wreg free
 13641  009B52  0012               	return		;funcret
 13642  009B54                     __end_of_CloseOrder:
 13643                           	callstack 0
 13644                           
 13645 ;; *************** function _actionZone_Closing *****************
 13646 ;; Defined at:
 13647 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;		None
 13650 ;; Auto vars:     Size  Location     Type
 13651 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13652 ;;  securityClos    1   49[COMRAM] enum E10397
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 3F/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13666 ;;Total ram usage:        2 bytes
 13667 ;; Hardware stack levels used: 1
 13668 ;; Hardware stack levels required when called: 7
 13669 ;; This function calls:
 13670 ;;		_GetOpenOrder
 13671 ;;		_GetSecurityStateInClosing
 13672 ;;		_InitFullAutoTime
 13673 ;;		_InitWalkAutoTime
 13674 ;;		_OpenFullOrder
 13675 ;;		_OpenWalkOrder
 13676 ;;		_SetSegmentValueIntermitent
 13677 ;;		_StopOrder
 13678 ;;		___lmul
 13679 ;;		_setPositionInvertionInClosing
 13680 ;;		_sm_send_event
 13681 ;; This function is called by:
 13682 ;;		_sm_execute_ControlGate
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text33
 13687  004CF4                     __ptext33:
 13688                           	callstack 0
 13689  004CF4                     _actionZone_Closing:
 13690                           	callstack 22
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13694                           
 13695                           ;incstack = 0
 13696  004CF4  EC4A  F02F         	call	_GetOpenOrder	;wreg free
 13697  004CF8  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13698                           
 13699                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13700  004CFA  EC91  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13701  004CFE  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13702                           
 13703                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13704  004D00  0E00               	movlw	0
 13705  004D02  0101               	movlb	1	; () banked
 13706  004D04  6F91               	movwf	_Abertura_pedonal& (0+255),b
 13707                           
 13708                           ; BSR set to: 1
 13709                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13710  004D06  EC9E  F04E         	call	_InitFullAutoTime	;wreg free
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13714  004D0A  0E00               	movlw	0
 13715  004D0C  0101               	movlb	1	; () banked
 13716  004D0E  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13720  004D10  0E03               	movlw	3
 13721  004D12  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13722  004D14  D00D               	goto	l23652
 13723                           
 13724                           ; BSR set to: 1
 13725                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13726  004D16  0E00               	movlw	0
 13727  004D18  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13728  004D1A                     l23650:
 13729                           
 13730                           ; BSR set to: 1
 13731                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13732  004D1A  0EE6               	movlw	low _controlGate_stateMachine
 13733  004D1C  6E12               	movwf	sm_send_event@psm^0,c
 13734  004D1E  0E01               	movlw	high _controlGate_stateMachine
 13735  004D20  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13736  004D22  0E00               	movlw	0
 13737  004D24  6E15               	movwf	(sm_send_event@event+1)^0,c
 13738  004D26  0E10               	movlw	16
 13739  004D28  6E14               	movwf	sm_send_event@event^0,c
 13740  004D2A  EC7A  F047         	call	_sm_send_event	;wreg free
 13741                           
 13742                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13743  004D2E  0012               	return	
 13744  004D30                     l23652:
 13745                           
 13746                           ; BSR set to: 1
 13747  004D30  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13748  004D32  B4D8               	btfsc	status,2,c
 13749  004D34  D00C               	goto	u27930
 13750                           
 13751                           ; BSR set to: 1
 13752  004D36  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13753  004D38  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13754  004D3A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13755  004D3C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13756  004D3E  A4D8               	btfss	status,2,c
 13757  004D40  D05F               	goto	l23684
 13758                           
 13759                           ; BSR set to: 1
 13760  004D42  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13761  004D44  A4D8               	btfss	status,2,c
 13762  004D46  D05C               	goto	l23684
 13763                           
 13764                           ; BSR set to: 1
 13765  004D48  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13766  004D4A  A4D8               	btfss	status,2,c
 13767  004D4C  D059               	goto	l23684
 13768  004D4E                     u27930:
 13769                           
 13770                           ; BSR set to: 1
 13771                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13772  004D4E  0E02               	movlw	2
 13773  004D50  0100               	movlb	0	; () banked
 13774  004D52  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13775  004D54  A4D8               	btfss	status,2,c
 13776  004D56  D018               	goto	l23664
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13780  004D58  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13781  004D5A  6E1D               	movwf	___lmul@multiplier^0,c
 13782  004D5C  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13783  004D5E  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13784  004D60  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13785  004D62  0EB0               	movlw	176
 13786  004D64  6E21               	movwf	___lmul@multiplicand^0,c
 13787  004D66  0E04               	movlw	4
 13788  004D68  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13789  004D6A  0E00               	movlw	0
 13790  004D6C  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13791  004D6E  0E00               	movlw	0
 13792  004D70  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13793  004D72  ECB5  F048         	call	___lmul	;wreg free
 13794  004D76  C01D  F1BE         	movff	?___lmul,_ts_system+32	;volatile
 13795  004D7A  C01E  F1BF         	movff	?___lmul+1,_ts_system+33	;volatile
 13796  004D7E  C01F  F1C0         	movff	?___lmul+2,_ts_system+34	;volatile
 13797  004D82  C020  F1C1         	movff	?___lmul+3,_ts_system+35	;volatile
 13798                           
 13799                           ;sm_ControlGate_MC50.c: 668:         }
 13800  004D86  D009               	goto	l2773
 13801  004D88                     l23664:
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13805  004D88  0E00               	movlw	0
 13806  004D8A  0101               	movlb	1	; () banked
 13807  004D8C  6FBE               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13808  004D8E  0E00               	movlw	0
 13809  004D90  6FBF               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13810  004D92  0E00               	movlw	0
 13811  004D94  6FC0               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13812  004D96  0E00               	movlw	0
 13813  004D98  6FC1               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13814  004D9A                     l2773:
 13815                           
 13816                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13817  004D9A  0E00               	movlw	0
 13818  004D9C  0101               	movlb	1	; () banked
 13819  004D9E  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13820                           
 13821                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13822  004DA0  0E01               	movlw	1
 13823  004DA2  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13824                           
 13825                           ; BSR set to: 1
 13826                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13827  004DA4  0E01               	movlw	1
 13828  004DA6  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13829  004DA8  0E00               	movlw	0
 13830  004DAA  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13831  004DAC  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13832  004DAE  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13836  004DB0  0E00               	movlw	0
 13837  004DB2  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13838                           
 13839                           ; BSR set to: 1
 13840                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13841  004DB4  0E00               	movlw	0
 13842  004DB6  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13843  004DB8  0E00               	movlw	0
 13844  004DBA  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13845  004DBC  0E00               	movlw	0
 13846  004DBE  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13847  004DC0  0E00               	movlw	0
 13848  004DC2  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13849                           
 13850                           ; BSR set to: 1
 13851                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13852  004DC4  0E00               	movlw	0
 13853  004DC6  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13854                           
 13855                           ; BSR set to: 1
 13856                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13857  004DC8  0E00               	movlw	0
 13858  004DCA  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13859                           
 13860                           ; BSR set to: 1
 13861                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13862  004DCC  0E00               	movlw	0
 13863  004DCE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13867  004DD0  0E00               	movlw	0
 13868  004DD2  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13869  004DD4  0E28               	movlw	40
 13870  004DD6  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13874  004DD8  0E0C               	movlw	12
 13875  004DDA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13876  004DDC  0E00               	movlw	0
 13877  004DDE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13878  004DE0  0E04               	movlw	4
 13879  004DE2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13880  004DE4  0E0F               	movlw	15
 13881  004DE6  EC51  F04C         	call	_SetSegmentValueIntermitent
 13882                           
 13883                           ; BSR set to: 1
 13884                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13885  004DEA  0EE6               	movlw	low _controlGate_stateMachine
 13886  004DEC  6E12               	movwf	sm_send_event@psm^0,c
 13887  004DEE  0E01               	movlw	high _controlGate_stateMachine
 13888  004DF0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13889  004DF2  0E00               	movlw	0
 13890  004DF4  6E15               	movwf	(sm_send_event@event+1)^0,c
 13891  004DF6  0E0F               	movlw	15
 13892  004DF8  6E14               	movwf	sm_send_event@event^0,c
 13893  004DFA  EC7A  F047         	call	_sm_send_event	;wreg free
 13894                           
 13895                           ;sm_ControlGate_MC50.c: 691:     }
 13896  004DFE  0012               	return	
 13897  004E00                     l23684:
 13898                           
 13899                           ; BSR set to: 1
 13900  004E00  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13901  004E02  B4D8               	btfsc	status,2,c
 13902  004E04  D011               	goto	u27980
 13903                           
 13904                           ; BSR set to: 1
 13905  004E06  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13906  004E08  D021               	goto	l23704
 13907  004E0A  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13908  004E0C  E103               	bnz	u27960
 13909  004E0E  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13910  004E10  A0D8               	btfss	status,0,c
 13911  004E12  D01C               	goto	l23704
 13912  004E14                     u27960:
 13913                           
 13914                           ; BSR set to: 1
 13915  004E14  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13916  004E16  A4D8               	btfss	status,2,c
 13917  004E18  D019               	goto	l23704
 13918                           
 13919                           ; BSR set to: 1
 13920  004E1A  BFCF               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13921  004E1C  D005               	goto	u27980
 13922  004E1E  51CF               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13923  004E20  E115               	bnz	l23704
 13924  004E22  05CE               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13925  004E24  B0D8               	btfsc	status,0,c
 13926  004E26  D012               	goto	l23704
 13927  004E28                     u27980:
 13928                           
 13929                           ; BSR set to: 1
 13930  004E28  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13931  004E2A  A4D8               	btfss	status,2,c
 13932  004E2C  D00F               	goto	l23704
 13933                           
 13934                           ; BSR set to: 1
 13935                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13936  004E2E  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13937  004E30  A4D8               	btfss	status,2,c
 13938                           
 13939                           ; BSR set to: 1
 13940                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13941  004E32  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13942                           
 13943                           ; BSR set to: 1
 13944                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13945                           
 13946                           ;sm_ControlGate_MC50.c: 696:         }
 13947  004E34  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13948                           
 13949                           ; BSR set to: 1
 13950                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13951  004E36  0E01               	movlw	1
 13952  004E38  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13953                           
 13954                           ; BSR set to: 1
 13955                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13956  004E3A  0E00               	movlw	0
 13957  004E3C  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13958  004E3E  0E0A               	movlw	10
 13959  004E40  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13960                           
 13961                           ; BSR set to: 1
 13962                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13963  004E42  0E00               	movlw	0
 13964  004E44  6FDF               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13965  004E46  0E1E               	movlw	30
 13966  004E48  6FDE               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13967                           
 13968                           ;sm_ControlGate_MC50.c: 702:     }
 13969  004E4A  0012               	return	
 13970  004E4C                     l23704:
 13971                           
 13972                           ; BSR set to: 1
 13973  004E4C  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13974  004E4E  D02E               	goto	l23734
 13975  004E50  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13976  004E52  E103               	bnz	u28010
 13977  004E54  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13978  004E56  A0D8               	btfss	status,0,c
 13979  004E58  D029               	goto	l23734
 13980  004E5A                     u28010:
 13981                           
 13982                           ; BSR set to: 1
 13983  004E5A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13984  004E5C  A4D8               	btfss	status,2,c
 13985  004E5E  D026               	goto	l23734
 13986                           
 13987                           ; BSR set to: 1
 13988                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13989  004E60  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13990  004E62  A4D8               	btfss	status,2,c
 13991  004E64  D005               	goto	l23716
 13992  004E66                     u28030:
 13993                           
 13994                           ; BSR set to: 1
 13995                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13996  004E66  0E00               	movlw	0
 13997  004E68  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13998                           
 13999                           ; BSR set to: 1
 14000                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14001  004E6A  EC49  F038         	call	_setPositionInvertionInClosing	;wreg free
 14002  004E6E  D755               	goto	l23650
 14003  004E70                     l23716:
 14004                           
 14005                           ; BSR set to: 1
 14006  004E70  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14007  004E72  D005               	goto	u28040
 14008  004E74  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14009  004E76  E117               	bnz	l23732
 14010  004E78  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14011  004E7A  B0D8               	btfsc	status,0,c
 14012  004E7C  D014               	goto	l23732
 14013  004E7E                     u28040:
 14014                           
 14015                           ; BSR set to: 1
 14016                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14017  004E7E  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14018  004E80  A4D8               	btfss	status,2,c
 14019  004E82  D003               	goto	l23722
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14023  004E84  EC0F  F046         	call	_OpenWalkOrder	;wreg free
 14024                           
 14025                           ;sm_ControlGate_MC50.c: 713:             }
 14026  004E88  D004               	goto	l23726
 14027  004E8A                     l23722:
 14028                           
 14029                           ; BSR set to: 1
 14030                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14031  004E8A  ECAA  F04D         	call	_OpenFullOrder	;wreg free
 14032                           
 14033                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14034  004E8E  EC49  F038         	call	_setPositionInvertionInClosing	;wreg free
 14035  004E92                     l23726:
 14036                           
 14037                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14038  004E92  0E00               	movlw	0
 14039  004E94  0101               	movlb	1	; () banked
 14040  004E96  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14041                           
 14042                           ; BSR set to: 1
 14043                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14044  004E98  0E01               	movlw	1
 14045  004E9A  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14046                           
 14047                           ; BSR set to: 1
 14048                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14049  004E9C  0E00               	movlw	0
 14050  004E9E  6FCF               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14051  004EA0  0E14               	movlw	20
 14052  004EA2  6FCE               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14053                           
 14054                           ;sm_ControlGate_MC50.c: 726:         } else
 14055  004EA4  0012               	return	
 14056  004EA6                     l23732:
 14057                           
 14058                           ; BSR set to: 1
 14059                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14060  004EA6  0E00               	movlw	0
 14061  004EA8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14062  004EAA  0012               	return	
 14063  004EAC                     l23734:
 14064                           
 14065                           ; BSR set to: 1
 14066  004EAC  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14067  004EAE  A4D8               	btfss	status,2,c
 14068  004EB0  D017               	goto	l23750
 14069                           
 14070                           ; BSR set to: 1
 14071                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14072  004EB2  0E00               	movlw	0
 14073  004EB4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14074                           
 14075                           ; BSR set to: 1
 14076                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14077  004EB6  BFC3               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14078  004EB8  D005               	goto	u28070
 14079  004EBA  51C3               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14080  004EBC  E160               	bnz	l2810
 14081  004EBE  05C2               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14082  004EC0  B0D8               	btfsc	status,0,c
 14083  004EC2  0012               	return	
 14084  004EC4                     u28070:
 14085                           
 14086                           ; BSR set to: 1
 14087                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14088  004EC4  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14089  004EC6  A4D8               	btfss	status,2,c
 14090  004EC8  D003               	goto	l23744
 14091                           
 14092                           ; BSR set to: 1
 14093                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14094  004ECA  EC0F  F046         	call	_OpenWalkOrder	;wreg free
 14095                           
 14096                           ;sm_ControlGate_MC50.c: 741:             }
 14097  004ECE  D004               	goto	l23748
 14098  004ED0                     l23744:
 14099                           
 14100                           ; BSR set to: 1
 14101                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14102  004ED0  ECAA  F04D         	call	_OpenFullOrder	;wreg free
 14103                           
 14104                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14105  004ED4  EC49  F038         	call	_setPositionInvertionInClosing	;wreg free
 14106  004ED8                     l23748:
 14107                           
 14108                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14109  004ED8  0E00               	movlw	0
 14110  004EDA  0101               	movlb	1	; () banked
 14111  004EDC  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14112  004EDE  0012               	return	
 14113  004EE0                     l23750:
 14114                           
 14115                           ; BSR set to: 1
 14116  004EE0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14117  004EE2  A4D8               	btfss	status,2,c
 14118  004EE4  D00B               	goto	l23766
 14119                           
 14120                           ; BSR set to: 1
 14121                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14122  004EE6  0E02               	movlw	2
 14123  004EE8  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14124  004EEA  B4D8               	btfsc	status,2,c
 14125  004EEC  D002               	goto	l23762
 14126                           
 14127                           ; BSR set to: 1
 14128                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14129  004EEE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14130  004EF0  D7BA               	goto	u28030
 14131  004EF2                     l23762:
 14132                           
 14133                           ; BSR set to: 1
 14134                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14135  004EF2  EC49  F038         	call	_setPositionInvertionInClosing	;wreg free
 14136  004EF6                     l23764:
 14137                           
 14138                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14139  004EF6  EC4C  F04E         	call	_StopOrder	;wreg free
 14140  004EFA  0012               	return	
 14141  004EFC                     l23766:
 14142                           
 14143                           ; BSR set to: 1
 14144  004EFC  BFD1               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14145  004EFE  D005               	goto	u28110
 14146  004F00  51D1               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14147  004F02  E10B               	bnz	l23776
 14148  004F04  05D0               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14149  004F06  B0D8               	btfsc	status,0,c
 14150  004F08  D008               	goto	l23776
 14151  004F0A                     u28110:
 14152                           
 14153                           ; BSR set to: 1
 14154  004F0A  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14155  004F0C  A4D8               	btfss	status,2,c
 14156  004F0E  D005               	goto	l23776
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14160  004F10  EC49  F038         	call	_setPositionInvertionInClosing	;wreg free
 14161                           
 14162                           ; BSR set to: 1
 14163                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14164  004F14  0E00               	movlw	0
 14165  004F16  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14166  004F18  D7EE               	goto	l23764
 14167  004F1A                     l23776:
 14168                           
 14169                           ; BSR set to: 1
 14170  004F1A  0100               	movlb	0	; () banked
 14171  004F1C  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14172  004F1E  B4D8               	btfsc	status,2,c
 14173  004F20  D004               	goto	u28140
 14174                           
 14175                           ; BSR set to: 0
 14176  004F22  0E02               	movlw	2
 14177  004F24  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14178  004F26  A4D8               	btfss	status,2,c
 14179  004F28  D005               	goto	l23784
 14180  004F2A                     u28140:
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14184  004F2A  0E04               	movlw	4
 14185  004F2C  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14186  004F2E  B4D8               	btfsc	status,2,c
 14187  004F30  0012               	return	
 14188  004F32  D7E1               	goto	l23764
 14189  004F34                     l23784:
 14190                           
 14191                           ; BSR set to: 0
 14192  004F34  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14193  004F36  B4D8               	btfsc	status,2,c
 14194  004F38  0012               	return	
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14198  004F3A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14199  004F3C  A4D8               	btfss	status,2,c
 14200  004F3E  D013               	goto	l23800
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14204  004F40  EC49  F038         	call	_setPositionInvertionInClosing	;wreg free
 14205                           
 14206                           ; BSR set to: 1
 14207                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14208  004F44  EC4C  F04E         	call	_StopOrder	;wreg free
 14209                           
 14210                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14211  004F48  0E02               	movlw	2
 14212  004F4A  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14213  004F4C  A4D8               	btfss	status,2,c
 14214  004F4E  0012               	return	
 14215  004F50  0E02               	movlw	2
 14216  004F52  0100               	movlb	0	; () banked
 14217  004F54  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14218  004F56  B4D8               	btfsc	status,2,c
 14219  004F58  0012               	return	
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14223  004F5A  EC23  F04F         	call	_InitWalkAutoTime	;wreg free
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14227  004F5E  0E01               	movlw	1
 14228  004F60  0101               	movlb	1	; () banked
 14229  004F62  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14230  004F64  0012               	return	
 14231  004F66                     l23800:
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14235  004F66  0E04               	movlw	4
 14236  004F68  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14237  004F6A  B4D8               	btfsc	status,2,c
 14238  004F6C  D7C4               	goto	l23764
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14242  004F6E  0E01               	movlw	1
 14243  004F70  0101               	movlb	1	; () banked
 14244  004F72  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14245                           
 14246                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14247  004F74  0E00               	movlw	0
 14248  004F76  6FC3               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14249  004F78  0E0A               	movlw	10
 14250  004F7A  6FC2               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14251                           
 14252                           ;sm_ControlGate_MC50.c: 806:             }
 14253  004F7C  0012               	return	
 14254  004F7E                     l2810:
 14255  004F7E  0012               	return		;funcret
 14256  004F80                     __end_of_actionZone_Closing:
 14257                           	callstack 0
 14258                           
 14259 ;; *************** function _setPositionInvertionInClosing *****************
 14260 ;; Defined at:
 14261 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;		None
 14264 ;; Auto vars:     Size  Location     Type
 14265 ;;		None
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  1    wreg      void 
 14268 ;; Registers used:
 14269 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14270 ;; Tracked objects:
 14271 ;;		On entry : 3E/1
 14272 ;;		On exit  : 3F/1
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14277 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14278 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14279 ;;Total ram usage:       12 bytes
 14280 ;; Hardware stack levels used: 1
 14281 ;; Hardware stack levels required when called: 6
 14282 ;; This function calls:
 14283 ;;		_getTimeDecelaration
 14284 ;; This function is called by:
 14285 ;;		_actionZone_Opening
 14286 ;;		_actionZone_Closing
 14287 ;; This function uses a non-reentrant model
 14288 ;;
 14289                           
 14290                           	psect	text34
 14291  007092                     __ptext34:
 14292                           	callstack 0
 14293  007092                     _setPositionInvertionInClosing:
 14294                           	callstack 22
 14295                           
 14296                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14297                           
 14298                           ;incstack = 0
 14299  007092  0E02               	movlw	2
 14300  007094  0100               	movlb	0	; () banked
 14301  007096  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14302  007098  B4D8               	btfsc	status,2,c
 14303  00709A  D007               	goto	l21902
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14307  00709C  0E02               	movlw	2
 14308  00709E  0101               	movlb	1	; () banked
 14309  0070A0  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14310  0070A2  0E00               	movlw	0
 14311  0070A4  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14312  0070A6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14313  0070A8  D008               	goto	L74
 14314  0070AA                     l21902:
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14318  0070AA  0EFF               	movlw	255
 14319  0070AC  0101               	movlb	1	; () banked
 14320  0070AE  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14321  0070B0  0EFF               	movlw	255
 14322  0070B2  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14323  0070B4  0EFF               	movlw	255
 14324  0070B6  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14325  0070B8  0EFF               	movlw	255
 14326  0070BA                     L74:
 14327  0070BA  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14328                           
 14329                           ; BSR set to: 1
 14330                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14331  0070BC  0E01               	movlw	1
 14332  0070BE  EC7C  F03C         	call	_getTimeDecelaration
 14333  0070C2  0101               	movlb	1	; () banked
 14334  0070C4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14335  0070C6  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14336  0070C8  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14337  0070CA  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14338  0070CC  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14339  0070CE  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14340  0070D0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14341  0070D2  0A80               	xorlw	128
 14342  0070D4  0100               	movlb	0	; () banked
 14343  0070D6  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14344  0070D8  0101               	movlb	1	; () banked
 14345  0070DA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14346  0070DC  0A80               	xorlw	128
 14347  0070DE  0100               	movlb	0	; () banked
 14348  0070E0  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14349  0070E2  B0D8               	btfsc	status,0,c
 14350  0070E4  D008               	goto	l21910
 14351                           
 14352                           ; BSR set to: 0
 14353  0070E6  0E02               	movlw	2
 14354  0070E8  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14355  0070EA  B4D8               	btfsc	status,2,c
 14356  0070EC  D004               	goto	l21910
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14360  0070EE  0E01               	movlw	1
 14361  0070F0  EC7C  F03C         	call	_getTimeDecelaration
 14362  0070F4  D01A               	goto	L75
 14363  0070F6                     l21910:
 14364                           
 14365                           ; BSR set to: 0
 14366  0070F6  0E03               	movlw	3
 14367  0070F8  EC7C  F03C         	call	_getTimeDecelaration
 14368  0070FC  5029               	movf	?_getTimeDecelaration^0,w,c
 14369  0070FE  0101               	movlb	1	; () banked
 14370  007100  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14371  007102  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14372  007104  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14373  007106  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14374  007108  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14375  00710A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14376  00710C  0A80               	xorlw	128
 14377  00710E  0100               	movlb	0	; () banked
 14378  007110  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14379  007112  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14380  007114  0A80               	xorlw	128
 14381  007116  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14382  007118  B0D8               	btfsc	status,0,c
 14383  00711A  D00F               	goto	l21916
 14384                           
 14385                           ; BSR set to: 0
 14386  00711C  0E02               	movlw	2
 14387  00711E  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14388  007120  B4D8               	btfsc	status,2,c
 14389  007122  D00B               	goto	l21916
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14393  007124  0E03               	movlw	3
 14394  007126  EC7C  F03C         	call	_getTimeDecelaration
 14395  00712A                     L75:
 14396  00712A  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14397  00712E  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14398  007132  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14399  007136  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14400  00713A                     l21916:
 14401                           
 14402                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14403  00713A  0100               	movlb	0	; () banked
 14404  00713C  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14405  00713E  0D0A               	mullw	10
 14406  007140  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14407  007144  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14408  007148  0E00               	movlw	0
 14409  00714A  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14410  00714C  0EFF               	movlw	255
 14411  00714E  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14412  007150  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14413  007152  0101               	movlb	1	; () banked
 14414  007154  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14415  007156  0100               	movlb	0	; () banked
 14416  007158  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14417  00715A  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14418  00715C  0101               	movlb	1	; () banked
 14419  00715E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14420  007160  0100               	movlb	0	; () banked
 14421  007162  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14422  007164  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14423  007166  0101               	movlb	1	; () banked
 14424  007168  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14425  00716A  0100               	movlb	0	; () banked
 14426  00716C  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14427  00716E  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14428  007170  0101               	movlb	1	; () banked
 14429  007172  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14430  007174  0100               	movlb	0	; () banked
 14431  007176  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14432  007178  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14433  00717A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14434  00717C  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14435  00717E  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14436  007180  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14437  007182  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14438  007184  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14439  007186  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14440  007188  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14441  00718A  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14442  00718C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14443  00718E  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14444  007190  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14445  007192  0EC8               	movlw	200
 14446  007194  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14447  007196  0101               	movlb	1	; () banked
 14448  007198  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14449  00719A  0E00               	movlw	0
 14450  00719C  0100               	movlb	0	; () banked
 14451  00719E  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14452  0071A0  0101               	movlb	1	; () banked
 14453  0071A2  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14454  0071A4  0E00               	movlw	0
 14455  0071A6  0100               	movlb	0	; () banked
 14456  0071A8  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14457  0071AA  0101               	movlb	1	; () banked
 14458  0071AC  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14459  0071AE  0E00               	movlw	0
 14460  0071B0  0100               	movlb	0	; () banked
 14461  0071B2  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14462  0071B4  0101               	movlb	1	; () banked
 14463  0071B6  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14464                           
 14465                           ; BSR set to: 1
 14466  0071B8  0012               	return		;funcret
 14467  0071BA                     __end_of_setPositionInvertionInClosing:
 14468                           	callstack 0
 14469                           
 14470 ;; *************** function _getTimeDecelaration *****************
 14471 ;; Defined at:
 14472 ;;		line 641 in file "outputs_MC50.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;  state           1    wreg     enum E10381
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;  state           1   48[COMRAM] enum E10381
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  4   40[COMRAM] long 
 14479 ;; Registers used:
 14480 ;;		wreg, status,2, status,0, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 3E/1
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14489 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14490 ;;Total ram usage:        9 bytes
 14491 ;; Hardware stack levels used: 1
 14492 ;; Hardware stack levels required when called: 5
 14493 ;; This function calls:
 14494 ;;		___lmul
 14495 ;; This function is called by:
 14496 ;;		_getStateOpenPosition
 14497 ;;		_controlVelocity
 14498 ;;		_setPositionInvertionInClosing
 14499 ;;		_setPositionInvertionInOpening
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text35
 14504  0078F8                     __ptext35:
 14505                           	callstack 0
 14506  0078F8                     _getTimeDecelaration:
 14507                           	callstack 22
 14508                           
 14509                           ; BSR set to: 1
 14510                           ;incstack = 0
 14511                           ;getTimeDecelaration@state stored from wreg
 14512  0078F8  6E31               	movwf	getTimeDecelaration@state^0,c
 14513                           
 14514                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14515  0078FA  0E03               	movlw	3
 14516  0078FC  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14517  0078FE  A4D8               	btfss	status,2,c
 14518  007900  D033               	goto	l20714
 14519                           
 14520                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14521  007902  0E02               	movlw	2
 14522  007904  0100               	movlb	0	; () banked
 14523  007906  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14524  007908  B4D8               	btfsc	status,2,c
 14525  00790A  D018               	goto	l20710
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14529  00790C  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14530  00790E  6E1D               	movwf	___lmul@multiplier^0,c
 14531  007910  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14532  007912  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14533  007914  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14534  007916  0E0A               	movlw	10
 14535  007918  6E21               	movwf	___lmul@multiplicand^0,c
 14536  00791A  0E00               	movlw	0
 14537  00791C  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14538  00791E  0E00               	movlw	0
 14539  007920  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14540  007922  0E00               	movlw	0
 14541  007924  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14542  007926  ECB5  F048         	call	___lmul	;wreg free
 14543  00792A  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14544  00792E  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14545  007932  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14546  007936  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14547  00793A  0012               	return	
 14548  00793C                     l20710:
 14549                           
 14550                           ; BSR set to: 0
 14551  00793C  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14552  007940  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14553  007942  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14554  007944  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14555  007946  0E02               	movlw	2
 14556  007948                     u23755:
 14557  007948  90D8               	bcf	status,0,c
 14558  00794A  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14559  00794C  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14560  00794E  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14561  007950  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14562  007952  2EE8               	decfsz	wreg,f,c
 14563  007954  D7F9               	goto	u23755
 14564  007956  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14565  00795A  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14566  00795E  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14567  007962  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14568  007966  0012               	return	
 14569  007968                     l20714:
 14570                           
 14571                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14572  007968  0E02               	movlw	2
 14573  00796A  0100               	movlb	0	; () banked
 14574  00796C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14575  00796E  B4D8               	btfsc	status,2,c
 14576  007970  D01D               	goto	l20722
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14580  007972  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14581  007974  6E1D               	movwf	___lmul@multiplier^0,c
 14582  007976  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14583  007978  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14584  00797A  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14585  00797C  0EF6               	movlw	246
 14586  00797E  6E21               	movwf	___lmul@multiplicand^0,c
 14587  007980  0EFF               	movlw	255
 14588  007982  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14589  007984  0EFF               	movlw	255
 14590  007986  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14591  007988  0EFF               	movlw	255
 14592  00798A  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14593  00798C  ECB5  F048         	call	___lmul	;wreg free
 14594  007990  0100               	movlb	0	; () banked
 14595  007992  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14596  007994  241D               	addwf	?___lmul^0,w,c
 14597  007996  6E29               	movwf	?_getTimeDecelaration^0,c
 14598  007998  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14599  00799A  201E               	addwfc	(?___lmul+1)^0,w,c
 14600  00799C  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14601  00799E  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14602  0079A0  201F               	addwfc	(?___lmul+2)^0,w,c
 14603  0079A2  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14604  0079A4  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14605  0079A6  2020               	addwfc	(?___lmul+3)^0,w,c
 14606  0079A8  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14607  0079AA  0012               	return	
 14608  0079AC                     l20722:
 14609                           
 14610                           ; BSR set to: 0
 14611  0079AC  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14612  0079B0  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14613  0079B2  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14614  0079B4  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14615  0079B6  0E02               	movlw	2
 14616  0079B8                     u23775:
 14617  0079B8  90D8               	bcf	status,0,c
 14618  0079BA  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14619  0079BC  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14620  0079BE  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14621  0079C0  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14622  0079C2  2EE8               	decfsz	wreg,f,c
 14623  0079C4  D7F9               	goto	u23775
 14624  0079C6  502D               	movf	??_getTimeDecelaration^0,w,c
 14625  0079C8  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14626  0079CA  6E29               	movwf	?_getTimeDecelaration^0,c
 14627  0079CC  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14628  0079CE  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14629  0079D0  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14630  0079D2  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14631  0079D4  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14632  0079D6  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14633  0079D8  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14634  0079DA  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14635  0079DC  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14636  0079DE  0012               	return		;funcret
 14637  0079E0                     __end_of_getTimeDecelaration:
 14638                           	callstack 0
 14639                           
 14640 ;; *************** function ___lmul *****************
 14641 ;; Defined at:
 14642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;  multiplier      4   28[COMRAM] unsigned long 
 14645 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;  product         4   36[COMRAM] unsigned long 
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  4   28[COMRAM] unsigned long 
 14650 ;; Registers used:
 14651 ;;		wreg, status,2, status,0
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/1
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14658 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14660 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14661 ;;Total ram usage:       12 bytes
 14662 ;; Hardware stack levels used: 1
 14663 ;; Hardware stack levels required when called: 4
 14664 ;; This function calls:
 14665 ;;		Nothing
 14666 ;; This function is called by:
 14667 ;;		_getStateOpenPosition
 14668 ;;		_getTimeDecelaration
 14669 ;;		_actionZone_Closing
 14670 ;;		_sm_execute_menuConfiguration
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text36
 14675  00916A                     __ptext36:
 14676                           	callstack 0
 14677  00916A                     ___lmul:
 14678                           	callstack 24
 14679                           
 14680                           ;incstack = 0
 14681  00916A  0E00               	movlw	0
 14682  00916C  6E25               	movwf	___lmul@product^0,c
 14683  00916E  0E00               	movlw	0
 14684  009170  6E26               	movwf	(___lmul@product+1)^0,c
 14685  009172  0E00               	movlw	0
 14686  009174  6E27               	movwf	(___lmul@product+2)^0,c
 14687  009176  0E00               	movlw	0
 14688  009178  6E28               	movwf	(___lmul@product+3)^0,c
 14689  00917A                     l20562:
 14690  00917A  A01D               	btfss	___lmul@multiplier^0,0,c
 14691  00917C  D008               	goto	l20566
 14692  00917E  5021               	movf	___lmul@multiplicand^0,w,c
 14693  009180  2625               	addwf	___lmul@product^0,f,c
 14694  009182  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14695  009184  2226               	addwfc	(___lmul@product+1)^0,f,c
 14696  009186  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14697  009188  2227               	addwfc	(___lmul@product+2)^0,f,c
 14698  00918A  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14699  00918C  2228               	addwfc	(___lmul@product+3)^0,f,c
 14700  00918E                     l20566:
 14701  00918E  90D8               	bcf	status,0,c
 14702  009190  3621               	rlcf	___lmul@multiplicand^0,f,c
 14703  009192  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14704  009194  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14705  009196  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14706  009198  90D8               	bcf	status,0,c
 14707  00919A  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14708  00919C  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14709  00919E  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14710  0091A0  321D               	rrcf	___lmul@multiplier^0,f,c
 14711  0091A2  501D               	movf	___lmul@multiplier^0,w,c
 14712  0091A4  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14713  0091A6  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14714  0091A8  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14715  0091AA  A4D8               	btfss	status,2,c
 14716  0091AC  D7E6               	goto	l20562
 14717  0091AE  C025  F01D         	movff	___lmul@product,?___lmul
 14718  0091B2  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14719  0091B6  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14720  0091BA  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14721  0091BE  0012               	return		;funcret
 14722  0091C0                     __end_of___lmul:
 14723                           	callstack 0
 14724                           
 14725 ;; *************** function _StopOrder *****************
 14726 ;; Defined at:
 14727 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;		None
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;		None
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14736 ;; Tracked objects:
 14737 ;;		On entry : 3E/1
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14745 ;;Total ram usage:        0 bytes
 14746 ;; Hardware stack levels used: 1
 14747 ;; Hardware stack levels required when called: 6
 14748 ;; This function calls:
 14749 ;;		_sm_send_event
 14750 ;; This function is called by:
 14751 ;;		_actionZone_Opening
 14752 ;;		_actionZone_Closing
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text37
 14757  009C98                     __ptext37:
 14758                           	callstack 0
 14759  009C98                     _StopOrder:
 14760                           	callstack 22
 14761                           
 14762                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14763                           
 14764                           ;incstack = 0
 14765  009C98  0E00               	movlw	0
 14766  009C9A  0101               	movlb	1	; () banked
 14767  009C9C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14768                           
 14769                           ; BSR set to: 1
 14770                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14771  009C9E  0EE6               	movlw	low _controlGate_stateMachine
 14772  009CA0  6E12               	movwf	sm_send_event@psm^0,c
 14773  009CA2  0E01               	movlw	high _controlGate_stateMachine
 14774  009CA4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14775  009CA6  0E00               	movlw	0
 14776  009CA8  6E15               	movwf	(sm_send_event@event+1)^0,c
 14777  009CAA  0E0D               	movlw	13
 14778  009CAC  6E14               	movwf	sm_send_event@event^0,c
 14779  009CAE  EC7A  F047         	call	_sm_send_event	;wreg free
 14780  009CB2  0012               	return		;funcret
 14781  009CB4                     __end_of_StopOrder:
 14782                           	callstack 0
 14783                           
 14784 ;; *************** function _GetSecurityStateInClosing *****************
 14785 ;; Defined at:
 14786 ;;		line 776 in file "inputs_MC50.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      enum E10564
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 3E/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14804 ;;Total ram usage:        0 bytes
 14805 ;; Hardware stack levels used: 1
 14806 ;; Hardware stack levels required when called: 5
 14807 ;; This function calls:
 14808 ;;		_SetSegmentValueIntermitent
 14809 ;; This function is called by:
 14810 ;;		_actionZone_Opening
 14811 ;;		_actionZone_Opened
 14812 ;;		_actionZone_Closing
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text38
 14817  007F22                     __ptext38:
 14818                           	callstack 0
 14819  007F22                     _GetSecurityStateInClosing:
 14820                           	callstack 23
 14821                           
 14822                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14823                           
 14824                           ;incstack = 0
 14825  007F22  0100               	movlb	0	; () banked
 14826  007F24  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14827  007F26  A4D8               	btfss	status,2,c
 14828  007F28  D01B               	goto	l21578
 14829                           
 14830                           ; BSR set to: 0
 14831  007F2A  0101               	movlb	1	; () banked
 14832  007F2C  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14833  007F2E  A4D8               	btfss	status,2,c
 14834  007F30  D017               	goto	l21578
 14835                           
 14836                           ; BSR set to: 1
 14837  007F32  0100               	movlb	0	; () banked
 14838  007F34  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14839  007F36  A4D8               	btfss	status,2,c
 14840  007F38  D013               	goto	l21578
 14841                           
 14842                           ; BSR set to: 0
 14843  007F3A  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14844  007F3C  A4D8               	btfss	status,2,c
 14845  007F3E  D010               	goto	l21578
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14849  007F40  0E00               	movlw	0
 14850  007F42  0101               	movlb	1	; () banked
 14851  007F44  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14852  007F46  0E04               	movlw	4
 14853  007F48  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14854                           
 14855                           ; BSR set to: 1
 14856                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14857  007F4A  0E0A               	movlw	10
 14858  007F4C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14859  007F4E  0E00               	movlw	0
 14860  007F50  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14861  007F52  0E14               	movlw	20
 14862  007F54  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14863  007F56  0E12               	movlw	18
 14864  007F58  EC51  F04C         	call	_SetSegmentValueIntermitent
 14865  007F5C                     l21572:
 14866                           
 14867                           ; BSR set to: 1
 14868                           ;inputs_MC50.c: 792:         return YES;
 14869  007F5C  0E01               	movlw	1
 14870  007F5E  0012               	return	
 14871  007F60                     l21578:
 14872  007F60  0100               	movlb	0	; () banked
 14873  007F62  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14874  007F64  A4D8               	btfss	status,2,c
 14875  007F66  D013               	goto	l21592
 14876                           
 14877                           ; BSR set to: 0
 14878  007F68  0101               	movlb	1	; () banked
 14879  007F6A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14880  007F6C  A4D8               	btfss	status,2,c
 14881  007F6E  D00F               	goto	l21592
 14882                           
 14883                           ; BSR set to: 1
 14884                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14885  007F70  0E00               	movlw	0
 14886  007F72  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14887  007F74  0E04               	movlw	4
 14888  007F76  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14889                           
 14890                           ; BSR set to: 1
 14891                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14892  007F78  0E15               	movlw	21
 14893  007F7A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14894  007F7C  0E00               	movlw	0
 14895  007F7E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14896  007F80  0E14               	movlw	20
 14897  007F82  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14898  007F84  0E05               	movlw	5
 14899  007F86  EC51  F04C         	call	_SetSegmentValueIntermitent
 14900                           
 14901                           ; BSR set to: 1
 14902                           ;inputs_MC50.c: 799:         return ST;
 14903  007F8A  0E02               	movlw	2
 14904  007F8C  0012               	return	
 14905  007F8E                     l21592:
 14906  007F8E  0100               	movlb	0	; () banked
 14907  007F90  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14908  007F92  A4D8               	btfss	status,2,c
 14909  007F94  D017               	goto	l21608
 14910                           
 14911                           ; BSR set to: 0
 14912  007F96  0101               	movlb	1	; () banked
 14913  007F98  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14914  007F9A  A4D8               	btfss	status,2,c
 14915  007F9C  D013               	goto	l21608
 14916                           
 14917                           ; BSR set to: 1
 14918  007F9E  0100               	movlb	0	; () banked
 14919  007FA0  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14920  007FA2  A4D8               	btfss	status,2,c
 14921  007FA4  D00F               	goto	l21608
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14925  007FA6  0E00               	movlw	0
 14926  007FA8  0101               	movlb	1	; () banked
 14927  007FAA  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14928  007FAC  0E04               	movlw	4
 14929  007FAE  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14930                           
 14931                           ; BSR set to: 1
 14932                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14933  007FB0  0E0E               	movlw	14
 14934  007FB2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14935  007FB4  0E00               	movlw	0
 14936  007FB6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14937  007FB8  0E14               	movlw	20
 14938  007FBA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14939  007FBC  0E12               	movlw	18
 14940  007FBE  EC51  F04C         	call	_SetSegmentValueIntermitent
 14941  007FC2  D7CC               	goto	l21572
 14942  007FC4                     l21608:
 14943                           
 14944                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14945  007FC4  0E00               	movlw	0
 14946  007FC6  0012               	return		;funcret
 14947  007FC8                     __end_of_GetSecurityStateInClosing:
 14948                           	callstack 0
 14949                           
 14950 ;; *************** function _actionZone_Closed *****************
 14951 ;; Defined at:
 14952 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14957 ;;  securityOpen    1   31[COMRAM] enum E10397
 14958 ;; Return value:  Size  Location     Type
 14959 ;;                  1    wreg      void 
 14960 ;; Registers used:
 14961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14962 ;; Tracked objects:
 14963 ;;		On entry : 3F/0
 14964 ;;		On exit  : 0/0
 14965 ;;		Unchanged: 0/0
 14966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14971 ;;Total ram usage:        2 bytes
 14972 ;; Hardware stack levels used: 1
 14973 ;; Hardware stack levels required when called: 8
 14974 ;; This function calls:
 14975 ;;		_GetOpenOrder
 14976 ;;		_GetSecurityStateInOpening
 14977 ;;		_InitFullAutoTime
 14978 ;;		_InitWalkAutoTime
 14979 ;;		_OpenFullOrder
 14980 ;;		_OpenWalkOrder
 14981 ;;		_WaitPreFlash
 14982 ;;		_sm_send_event
 14983 ;; This function is called by:
 14984 ;;		_sm_execute_ControlGate
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text39
 14989  007E78                     __ptext39:
 14990                           	callstack 0
 14991  007E78                     _actionZone_Closed:
 14992                           	callstack 21
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14996                           
 14997                           ;incstack = 0
 14998  007E78  0101               	movlb	1	; () banked
 14999  007E7A  05F1               	decf	_main_stateMachine& (0+255),w,b
 15000  007E7C  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15001  007E7E  B4D8               	btfsc	status,2,c
 15002  007E80  0012               	return	
 15003                           
 15004                           ; BSR set to: 1
 15005                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15006  007E82  EC4A  F02F         	call	_GetOpenOrder	;wreg free
 15007  007E86  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15008                           
 15009                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15010  007E88  ECE4  F03F         	call	_GetSecurityStateInOpening	;wreg free
 15011  007E8C  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15012                           
 15013                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15014  007E8E  0100               	movlb	0	; () banked
 15015  007E90  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15016  007E92  A4D8               	btfss	status,2,c
 15017  007E94  D018               	goto	l23292
 15018                           
 15019                           ; BSR set to: 0
 15020                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15021  007E96  0E03               	movlw	3
 15022  007E98  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15023  007E9A  A4D8               	btfss	status,2,c
 15024  007E9C  0012               	return	
 15025                           
 15026                           ; BSR set to: 0
 15027  007E9E  0101               	movlb	1	; () banked
 15028  007EA0  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15029  007EA2  A4D8               	btfss	status,2,c
 15030  007EA4  0012               	return	
 15031                           
 15032                           ; BSR set to: 1
 15033  007EA6  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15034  007EA8  A4D8               	btfss	status,2,c
 15035  007EAA  0012               	return	
 15036                           
 15037                           ; BSR set to: 1
 15038                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15039  007EAC  ECAA  F04D         	call	_OpenFullOrder	;wreg free
 15040  007EB0                     l23290:
 15041                           
 15042                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15043  007EB0  0EF1               	movlw	low _main_stateMachine
 15044  007EB2  6E12               	movwf	sm_send_event@psm^0,c
 15045  007EB4  0E01               	movlw	high _main_stateMachine
 15046  007EB6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15047  007EB8  0E00               	movlw	0
 15048  007EBA  6E15               	movwf	(sm_send_event@event+1)^0,c
 15049  007EBC  0E11               	movlw	17
 15050  007EBE  6E14               	movwf	sm_send_event@event^0,c
 15051  007EC0  EC7A  F047         	call	_sm_send_event	;wreg free
 15052  007EC4  0012               	return	
 15053  007EC6                     l23292:
 15054                           
 15055                           ; BSR set to: 0
 15056  007EC6  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15057  007EC8  B4D8               	btfsc	status,2,c
 15058  007ECA  D004               	goto	u27070
 15059                           
 15060                           ; BSR set to: 0
 15061  007ECC  0E03               	movlw	3
 15062  007ECE  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15063  007ED0  A4D8               	btfss	status,2,c
 15064  007ED2  D017               	goto	l23312
 15065  007ED4                     u27070:
 15066                           
 15067                           ; BSR set to: 0
 15068  007ED4  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15069  007ED6  A4D8               	btfss	status,2,c
 15070  007ED8  D014               	goto	l23312
 15071                           
 15072                           ; BSR set to: 0
 15073  007EDA  0101               	movlb	1	; () banked
 15074  007EDC  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15075  007EDE  A4D8               	btfss	status,2,c
 15076  007EE0  D010               	goto	l23312
 15077                           
 15078                           ; BSR set to: 1
 15079                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15080  007EE2  0E02               	movlw	2
 15081  007EE4  0100               	movlb	0	; () banked
 15082  007EE6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15083  007EE8  A4D8               	btfss	status,2,c
 15084  007EEA  D006               	goto	l23306
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15088  007EEC  0E01               	movlw	1
 15089  007EEE  0101               	movlb	1	; () banked
 15090  007EF0  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15091                           
 15092                           ; BSR set to: 1
 15093                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15094  007EF2  EC67  F045         	call	_WaitPreFlash	;wreg free
 15095                           
 15096                           ;sm_ControlGate_MC50.c: 356:             }
 15097  007EF6  0012               	return	
 15098  007EF8                     l23306:
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15102  007EF8  ECAA  F04D         	call	_OpenFullOrder	;wreg free
 15103                           
 15104                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15105  007EFC  EC9E  F04E         	call	_InitFullAutoTime	;wreg free
 15106  007F00  D7D7               	goto	l23290
 15107  007F02                     l23312:
 15108  007F02  0E02               	movlw	2
 15109  007F04  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15110  007F06  A4D8               	btfss	status,2,c
 15111  007F08  0012               	return	
 15112  007F0A  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15113  007F0C  A4D8               	btfss	status,2,c
 15114  007F0E  0012               	return	
 15115  007F10  0100               	movlb	0	; () banked
 15116  007F12  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15117  007F14  B4D8               	btfsc	status,2,c
 15118  007F16  0012               	return	
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15122  007F18  EC0F  F046         	call	_OpenWalkOrder	;wreg free
 15123                           
 15124                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15125  007F1C  EC23  F04F         	call	_InitWalkAutoTime	;wreg free
 15126  007F20  D7C7               	goto	l23290
 15127  007F22                     __end_of_actionZone_Closed:
 15128                           	callstack 0
 15129                           
 15130 ;; *************** function _WaitPreFlash *****************
 15131 ;; Defined at:
 15132 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 3F/1
 15143 ;;		On exit  : 3F/1
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15150 ;;Total ram usage:        0 bytes
 15151 ;; Hardware stack levels used: 1
 15152 ;; Hardware stack levels required when called: 7
 15153 ;; This function calls:
 15154 ;;		_InitFullAutoTime
 15155 ;;		_OpenFullOrder
 15156 ;;		_sm_send_event
 15157 ;; This function is called by:
 15158 ;;		_sm_execute_ControlGate
 15159 ;;		_actionZone_Closed
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           	psect	text40
 15164  008ACE                     __ptext40:
 15165                           	callstack 0
 15166  008ACE                     _WaitPreFlash:
 15167                           	callstack 21
 15168                           
 15169                           ; BSR set to: 1
 15170                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15171                           
 15172                           ;incstack = 0
 15173  008ACE  0E02               	movlw	2
 15174  008AD0  0100               	movlb	0	; () banked
 15175  008AD2  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15176  008AD4  A4D8               	btfss	status,2,c
 15177  008AD6  D014               	goto	l21822
 15178                           
 15179                           ; BSR set to: 0
 15180  008AD8  0101               	movlb	1	; () banked
 15181  008ADA  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15182  008ADC  A4D8               	btfss	status,2,c
 15183  008ADE  D010               	goto	l21822
 15184                           
 15185                           ; BSR set to: 1
 15186  008AE0  BFE5               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15187  008AE2  D005               	goto	u25380
 15188  008AE4  51E5               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15189  008AE6  E10C               	bnz	l21822
 15190  008AE8  05E4               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15191  008AEA  B0D8               	btfsc	status,0,c
 15192  008AEC  D009               	goto	l21822
 15193  008AEE                     u25380:
 15194                           
 15195                           ; BSR set to: 1
 15196  008AEE  5190               	movf	_aux_i& (0+255),w,b
 15197  008AF0  A4D8               	btfss	status,2,c
 15198  008AF2  D006               	goto	l21822
 15199                           
 15200                           ; BSR set to: 1
 15201                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15202  008AF4  0E00               	movlw	0
 15203  008AF6  6FE5               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15204  008AF8  0E3C               	movlw	60
 15205  008AFA  6FE4               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15206                           
 15207                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15208  008AFC  0E01               	movlw	1
 15209  008AFE  6F90               	movwf	_aux_i& (0+255),b
 15210  008B00                     l21822:
 15211                           
 15212                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15213  008B00  0101               	movlb	1	; () banked
 15214  008B02  BFE5               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15215  008B04  D005               	goto	u25400
 15216  008B06  51E5               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15217  008B08  E119               	bnz	l2585
 15218  008B0A  05E4               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15219  008B0C  B0D8               	btfsc	status,0,c
 15220  008B0E  0012               	return	
 15221  008B10                     u25400:
 15222                           
 15223                           ; BSR set to: 1
 15224  008B10  0590               	decf	_aux_i& (0+255),w,b
 15225  008B12  A4D8               	btfss	status,2,c
 15226  008B14  0012               	return	
 15227                           
 15228                           ; BSR set to: 1
 15229                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15230  008B16  0E00               	movlw	0
 15231  008B18  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15232                           
 15233                           ; BSR set to: 1
 15234                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15235  008B1A  ECAA  F04D         	call	_OpenFullOrder	;wreg free
 15236                           
 15237                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15238  008B1E  EC9E  F04E         	call	_InitFullAutoTime	;wreg free
 15239                           
 15240                           ; BSR set to: 0
 15241                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15242  008B22  0EF1               	movlw	low _main_stateMachine
 15243  008B24  6E12               	movwf	sm_send_event@psm^0,c
 15244  008B26  0E01               	movlw	high _main_stateMachine
 15245  008B28  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15246  008B2A  0E00               	movlw	0
 15247  008B2C  6E15               	movwf	(sm_send_event@event+1)^0,c
 15248  008B2E  0E11               	movlw	17
 15249  008B30  6E14               	movwf	sm_send_event@event^0,c
 15250  008B32  EC7A  F047         	call	_sm_send_event	;wreg free
 15251                           
 15252                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15253  008B36  0E00               	movlw	0
 15254  008B38  0101               	movlb	1	; () banked
 15255  008B3A  6F90               	movwf	_aux_i& (0+255),b
 15256  008B3C                     l2585:
 15257                           
 15258                           ; BSR set to: 1
 15259  008B3C  0012               	return		;funcret
 15260  008B3E                     __end_of_WaitPreFlash:
 15261                           	callstack 0
 15262                           
 15263 ;; *************** function _OpenFullOrder *****************
 15264 ;; Defined at:
 15265 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15266 ;; Parameters:    Size  Location     Type
 15267 ;;		None
 15268 ;; Auto vars:     Size  Location     Type
 15269 ;;		None
 15270 ;; Return value:  Size  Location     Type
 15271 ;;                  1    wreg      void 
 15272 ;; Registers used:
 15273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15274 ;; Tracked objects:
 15275 ;;		On entry : 3E/1
 15276 ;;		On exit  : 3E/0
 15277 ;;		Unchanged: 0/0
 15278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15283 ;;Total ram usage:        0 bytes
 15284 ;; Hardware stack levels used: 1
 15285 ;; Hardware stack levels required when called: 6
 15286 ;; This function calls:
 15287 ;;		_InitSoftStart
 15288 ;;		_sm_send_event
 15289 ;; This function is called by:
 15290 ;;		_WaitPreFlash
 15291 ;;		_actionZone_Closed
 15292 ;;		_actionZone_Opened
 15293 ;;		_actionZone_Closing
 15294 ;; This function uses a non-reentrant model
 15295 ;;
 15296                           
 15297                           	psect	text41
 15298  009B54                     __ptext41:
 15299                           	callstack 0
 15300  009B54                     _OpenFullOrder:
 15301                           	callstack 22
 15302                           
 15303                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15304                           
 15305                           ; BSR set to: 1
 15306                           ;incstack = 0
 15307  009B54  0E01               	movlw	1
 15308  009B56  0101               	movlb	1	; () banked
 15309  009B58  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15313  009B5A  0EE6               	movlw	low _controlGate_stateMachine
 15314  009B5C  6E12               	movwf	sm_send_event@psm^0,c
 15315  009B5E  0E01               	movlw	high _controlGate_stateMachine
 15316  009B60  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15317  009B62  0E00               	movlw	0
 15318  009B64  6E15               	movwf	(sm_send_event@event+1)^0,c
 15319  009B66  0E0C               	movlw	12
 15320  009B68  6E14               	movwf	sm_send_event@event^0,c
 15321  009B6A  EC7A  F047         	call	_sm_send_event	;wreg free
 15322                           
 15323                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15324  009B6E  0E01               	movlw	1
 15325  009B70  0101               	movlb	1	; () banked
 15326  009B72  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15327                           
 15328                           ; BSR set to: 1
 15329                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15330  009B74  ECA8  F047         	call	_InitSoftStart	;wreg free
 15331  009B78  0012               	return		;funcret
 15332  009B7A                     __end_of_OpenFullOrder:
 15333                           	callstack 0
 15334                           
 15335 ;; *************** function _InitFullAutoTime *****************
 15336 ;; Defined at:
 15337 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15338 ;; Parameters:    Size  Location     Type
 15339 ;;		None
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;		None
 15342 ;; Return value:  Size  Location     Type
 15343 ;;                  1    wreg      void 
 15344 ;; Registers used:
 15345 ;;		wreg, status,2, status,0, prodl, prodh
 15346 ;; Tracked objects:
 15347 ;;		On entry : 3E/0
 15348 ;;		On exit  : 3F/0
 15349 ;;		Unchanged: 0/0
 15350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15355 ;;Total ram usage:        0 bytes
 15356 ;; Hardware stack levels used: 1
 15357 ;; Hardware stack levels required when called: 4
 15358 ;; This function calls:
 15359 ;;		Nothing
 15360 ;; This function is called by:
 15361 ;;		_WaitPreFlash
 15362 ;;		_actionZone_Closed
 15363 ;;		_actionZone_Opening
 15364 ;;		_actionZone_Opened
 15365 ;;		_actionZone_Closing
 15366 ;; This function uses a non-reentrant model
 15367 ;;
 15368                           
 15369                           	psect	text42
 15370  009D3C                     __ptext42:
 15371                           	callstack 0
 15372  009D3C                     _InitFullAutoTime:
 15373                           	callstack 24
 15374                           
 15375                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15376                           
 15377                           ;incstack = 0
 15378  009D3C  0100               	movlb	0	; () banked
 15379  009D3E  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15380  009D40  A4D8               	btfss	status,2,c
 15381  009D42  0012               	return	
 15382                           
 15383                           ; BSR set to: 0
 15384                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15385  009D44  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15386  009D46  0D14               	mullw	20
 15387  009D48  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 15388  009D4C  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15392  009D50  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15393                           
 15394                           ; BSR set to: 0
 15395  009D54  0012               	return		;funcret
 15396  009D56                     __end_of_InitFullAutoTime:
 15397                           	callstack 0
 15398                           
 15399 ;; *************** function _OpenWalkOrder *****************
 15400 ;; Defined at:
 15401 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;		None
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  diffTime        2   25[COMRAM] int 
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15410 ;; Tracked objects:
 15411 ;;		On entry : 3E/1
 15412 ;;		On exit  : 3E/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;Total ram usage:        4 bytes
 15420 ;; Hardware stack levels used: 1
 15421 ;; Hardware stack levels required when called: 6
 15422 ;; This function calls:
 15423 ;;		_InitSoftStart
 15424 ;;		_sm_send_event
 15425 ;; This function is called by:
 15426 ;;		_actionZone_Closed
 15427 ;;		_actionZone_Opened
 15428 ;;		_actionZone_Closing
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           	psect	text43
 15433  008C1E                     __ptext43:
 15434                           	callstack 0
 15435  008C1E                     _OpenWalkOrder:
 15436                           	callstack 22
 15437                           
 15438                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;incstack = 0
 15442  008C1E  0100               	movlb	0	; () banked
 15443  008C20  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15444  008C22  0D14               	mullw	20
 15445  008C24  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15446  008C28  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15447  008C2C  0101               	movlb	1	; () banked
 15448  008C2E  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15449  008C30  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15450  008C32  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15451  008C34  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15452  008C36  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15453  008C38  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15454                           
 15455                           ; BSR set to: 1
 15456                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15457  008C3A  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15458  008C3C  D022               	goto	l21860
 15459  008C3E  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15460  008C40  E103               	bnz	u25420
 15461  008C42  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15462  008C44  A0D8               	btfss	status,0,c
 15463  008C46  D01D               	goto	l21860
 15464  008C48                     u25420:
 15465                           
 15466                           ; BSR set to: 1
 15467                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15468  008C48  0EE6               	movlw	low _controlGate_stateMachine
 15469  008C4A  6E12               	movwf	sm_send_event@psm^0,c
 15470  008C4C  0E01               	movlw	high _controlGate_stateMachine
 15471  008C4E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15472  008C50  0E00               	movlw	0
 15473  008C52  6E15               	movwf	(sm_send_event@event+1)^0,c
 15474  008C54  0E0C               	movlw	12
 15475  008C56  6E14               	movwf	sm_send_event@event^0,c
 15476  008C58  EC7A  F047         	call	_sm_send_event	;wreg free
 15477                           
 15478                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15479  008C5C  0101               	movlb	1	; () banked
 15480  008C5E  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15481  008C60  A4D8               	btfss	status,2,c
 15482  008C62  D005               	goto	l21854
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15486  008C64  C01A  F1AE         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15487  008C68  C01B  F1AF         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15488                           
 15489                           ;sm_ControlGate_MC50.c: 79:         }
 15490  008C6C  D006               	goto	l21856
 15491  008C6E                     l21854:
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15495  008C6E  0E14               	movlw	20
 15496  008C70  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15497  008C72  6FAE               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15498  008C74  0E00               	movlw	0
 15499  008C76  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15500  008C78  6FAF               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15501  008C7A                     l21856:
 15502                           
 15503                           ; BSR set to: 1
 15504                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15505  008C7A  0E02               	movlw	2
 15506  008C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15507                           
 15508                           ; BSR set to: 1
 15509                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15510  008C7E  0E01               	movlw	1
 15511  008C80  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15512  008C82                     l21860:
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15516  008C82  0E02               	movlw	2
 15517  008C84  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15518                           
 15519                           ; BSR set to: 1
 15520                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15521  008C86  ECA8  F047         	call	_InitSoftStart	;wreg free
 15522  008C8A  0012               	return		;funcret
 15523  008C8C                     __end_of_OpenWalkOrder:
 15524                           	callstack 0
 15525                           
 15526 ;; *************** function _sm_send_event *****************
 15527 ;; Defined at:
 15528 ;;		line 34 in file "sm_common_MC50.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  psm             2   17[COMRAM] PTR struct .
 15531 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15532 ;;  event           2   19[COMRAM] int 
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;		None
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15548 ;;Total ram usage:        6 bytes
 15549 ;; Hardware stack levels used: 1
 15550 ;; Hardware stack levels required when called: 5
 15551 ;; This function calls:
 15552 ;;		_sm_get_current_state
 15553 ;; This function is called by:
 15554 ;;		_OpenFullOrder
 15555 ;;		_WaitPreFlash
 15556 ;;		_CloseOrder
 15557 ;;		_OpenWalkOrder
 15558 ;;		_StopOrder
 15559 ;;		_sm_execute_ControlGate
 15560 ;;		_actionZone_Closed
 15561 ;;		_actionZone_Opening
 15562 ;;		_actionZone_Closing
 15563 ;;		_sm_execute_ControlLearning
 15564 ;;		_sm_execute_main
 15565 ;;		_sm_execute_menuConfiguration
 15566 ;;		_setValueToEdit
 15567 ;;		_controlSelectRemote
 15568 ;;		_controlSaveRemote
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572                           	psect	text44
 15573  008EF4                     __ptext44:
 15574                           	callstack 0
 15575  008EF4                     _sm_send_event:
 15576                           	callstack 24
 15577                           
 15578                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15579                           
 15580                           ;incstack = 0
 15581  008EF4  EE20 F007          	lfsr	2,7
 15582  008EF8  5012               	movf	sm_send_event@psm^0,w,c
 15583  008EFA  26D9               	addwf	fsr2l,f,c
 15584  008EFC  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15585  008EFE  22DA               	addwfc	fsr2h,f,c
 15586  008F00  50DE               	movf	postinc2,w,c
 15587  008F02  10DE               	iorwf	postinc2,w,c
 15588  008F04  B4D8               	btfsc	status,2,c
 15589  008F06  D019               	goto	u23790
 15590  008F08  EE20 F007          	lfsr	2,7
 15591  008F0C  5012               	movf	sm_send_event@psm^0,w,c
 15592  008F0E  26D9               	addwf	fsr2l,f,c
 15593  008F10  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15594  008F12  22DA               	addwfc	fsr2h,f,c
 15595  008F14  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15596  008F18  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15597  008F1C  EC41  F04F         	call	_sm_get_current_state	;wreg free
 15598  008F20  EE20 F009          	lfsr	2,9
 15599  008F24  5012               	movf	sm_send_event@psm^0,w,c
 15600  008F26  26D9               	addwf	fsr2l,f,c
 15601  008F28  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15602  008F2A  22DA               	addwfc	fsr2h,f,c
 15603  008F2C  50DE               	movf	postinc2,w,c
 15604  008F2E  1810               	xorwf	?_sm_get_current_state^0,w,c
 15605  008F30  E10E               	bnz	l3517
 15606  008F32  50DE               	movf	postinc2,w,c
 15607  008F34  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15608  008F36  A4D8               	btfss	status,2,c
 15609  008F38  0012               	return	
 15610  008F3A                     u23790:
 15611                           
 15612                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15613  008F3A  EE20 F004          	lfsr	2,4
 15614  008F3E  5012               	movf	sm_send_event@psm^0,w,c
 15615  008F40  26D9               	addwf	fsr2l,f,c
 15616  008F42  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15617  008F44  22DA               	addwfc	fsr2h,f,c
 15618  008F46  C014  FFDE         	movff	sm_send_event@event,postinc2
 15619  008F4A  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15620  008F4E                     l3517:
 15621  008F4E  0012               	return		;funcret
 15622  008F50                     __end_of_sm_send_event:
 15623                           	callstack 0
 15624                           
 15625 ;; *************** function _sm_get_current_state *****************
 15626 ;; Defined at:
 15627 ;;		line 30 in file "sm_common_MC50.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  psm             2   15[COMRAM] PTR struct .
 15630 ;;		 -> NULL(0), 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  2   15[COMRAM] int 
 15635 ;; Registers used:
 15636 ;;		fsr2l, fsr2h
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15646 ;;Total ram usage:        2 bytes
 15647 ;; Hardware stack levels used: 1
 15648 ;; Hardware stack levels required when called: 4
 15649 ;; This function calls:
 15650 ;;		Nothing
 15651 ;; This function is called by:
 15652 ;;		_sm_send_event
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text45
 15657  009E82                     __ptext45:
 15658                           	callstack 0
 15659  009E82                     _sm_get_current_state:
 15660                           	callstack 24
 15661                           
 15662                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15663                           
 15664                           ;incstack = 0
 15665  009E82  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15666  009E86  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15667  009E8A  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15668  009E8E  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15669  009E92  0012               	return		;funcret
 15670  009E94                     __end_of_sm_get_current_state:
 15671                           	callstack 0
 15672                           
 15673 ;; *************** function _InitSoftStart *****************
 15674 ;; Defined at:
 15675 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;		None
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;		None
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      void 
 15682 ;; Registers used:
 15683 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 3F/1
 15686 ;;		On exit  : 3E/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;Total ram usage:        1 bytes
 15694 ;; Hardware stack levels used: 1
 15695 ;; Hardware stack levels required when called: 5
 15696 ;; This function calls:
 15697 ;;		_GetMotorPower
 15698 ;; This function is called by:
 15699 ;;		_OpenFullOrder
 15700 ;;		_CloseOrder
 15701 ;;		_OpenWalkOrder
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text46
 15706  008F50                     __ptext46:
 15707                           	callstack 0
 15708  008F50                     _InitSoftStart:
 15709                           	callstack 22
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15713                           
 15714                           ;incstack = 0
 15715  008F50  0100               	movlb	0	; () banked
 15716  008F52  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15717  008F54  B4D8               	btfsc	status,2,c
 15718  008F56  0012               	return	
 15719                           
 15720                           ; BSR set to: 0
 15721  008F58  0101               	movlb	1	; () banked
 15722  008F5A  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15723  008F5C  A4D8               	btfss	status,2,c
 15724  008F5E  0012               	return	
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15728  008F60  0E00               	movlw	0
 15729  008F62  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15730  008F64  0E00               	movlw	0
 15731  008F66  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15732                           
 15733                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15734  008F68  0E00               	movlw	0
 15735  008F6A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15736  008F6C  0E00               	movlw	0
 15737  008F6E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15738                           
 15739                           ; BSR set to: 1
 15740                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15741  008F70  ECC4  F03D         	call	_GetMotorPower	;wreg free
 15742  008F74  6E14               	movwf	??_InitSoftStart^0,c
 15743  008F76  5014               	movf	??_InitSoftStart^0,w,c
 15744  008F78  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15745  008F7A  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15746                           
 15747                           ; BSR set to: 1
 15748                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15749  008F7C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15750  008F7E  D00A               	goto	l20744
 15751  008F80  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15752  008F82  E104               	bnz	u23820
 15753  008F84  0E52               	movlw	82
 15754  008F86  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15755  008F88  A0D8               	btfss	status,0,c
 15756  008F8A  D004               	goto	l20744
 15757  008F8C                     u23820:
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15761  008F8C  0E00               	movlw	0
 15762  008F8E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15763  008F90  0E51               	movlw	81
 15764  008F92  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15765  008F94                     l20744:
 15766                           
 15767                           ; BSR set to: 1
 15768                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15769  008F94  0E01               	movlw	1
 15770  008F96  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15771  008F98  6FB4               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15772  008F9A  0E00               	movlw	0
 15773  008F9C  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15774  008F9E  6FB5               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15775                           
 15776                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15777  008FA0  0100               	movlb	0	; () banked
 15778  008FA2  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15779  008FA4  080A               	sublw	10
 15780  008FA6  0101               	movlb	1	; () banked
 15781  008FA8  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15782  008FAA  0012               	return		;funcret
 15783  008FAC                     __end_of_InitSoftStart:
 15784                           	callstack 0
 15785                           
 15786 ;; *************** function _InitWalkAutoTime *****************
 15787 ;; Defined at:
 15788 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      void 
 15795 ;; Registers used:
 15796 ;;		wreg, status,2, status,0, prodl, prodh
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/1
 15799 ;;		On exit  : 3F/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;Total ram usage:        0 bytes
 15807 ;; Hardware stack levels used: 1
 15808 ;; Hardware stack levels required when called: 4
 15809 ;; This function calls:
 15810 ;;		Nothing
 15811 ;; This function is called by:
 15812 ;;		_actionZone_Closed
 15813 ;;		_actionZone_Opening
 15814 ;;		_actionZone_Opened
 15815 ;;		_actionZone_Closing
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text47
 15820  009E46                     __ptext47:
 15821                           	callstack 0
 15822  009E46                     _InitWalkAutoTime:
 15823                           	callstack 24
 15824                           
 15825                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15826                           
 15827                           ;incstack = 0
 15828  009E46  0100               	movlb	0	; () banked
 15829  009E48  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15830  009E4A  0D14               	mullw	20
 15831  009E4C  CFF3 F1B0          	movff	prodl,_ts_system+18	;volatile
 15832  009E50  CFF4 F1B1          	movff	prodh,_ts_system+19	;volatile
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15836  009E54  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15837                           
 15838                           ; BSR set to: 0
 15839  009E58  0012               	return		;funcret
 15840  009E5A                     __end_of_InitWalkAutoTime:
 15841                           	callstack 0
 15842                           
 15843 ;; *************** function _GetSecurityStateInOpening *****************
 15844 ;; Defined at:
 15845 ;;		line 738 in file "inputs_MC50.c"
 15846 ;; Parameters:    Size  Location     Type
 15847 ;;		None
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;		None
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  1    wreg      enum E10564
 15852 ;; Registers used:
 15853 ;;		wreg, status,2, status,0, cstack
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 3E/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15863 ;;Total ram usage:        0 bytes
 15864 ;; Hardware stack levels used: 1
 15865 ;; Hardware stack levels required when called: 5
 15866 ;; This function calls:
 15867 ;;		_SetSegmentValueIntermitent
 15868 ;; This function is called by:
 15869 ;;		_actionZone_Closed
 15870 ;;		_actionZone_Opening
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           	psect	text48
 15875  007FC8                     __ptext48:
 15876                           	callstack 0
 15877  007FC8                     _GetSecurityStateInOpening:
 15878                           	callstack 23
 15879                           
 15880                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15881                           
 15882                           ; BSR set to: 0
 15883                           ;incstack = 0
 15884  007FC8  0100               	movlb	0	; () banked
 15885  007FCA  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15886  007FCC  A4D8               	btfss	status,2,c
 15887  007FCE  D01B               	goto	l21526
 15888                           
 15889                           ; BSR set to: 0
 15890  007FD0  0101               	movlb	1	; () banked
 15891  007FD2  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15892  007FD4  A4D8               	btfss	status,2,c
 15893  007FD6  D017               	goto	l21526
 15894                           
 15895                           ; BSR set to: 1
 15896  007FD8  0100               	movlb	0	; () banked
 15897  007FDA  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15898  007FDC  A4D8               	btfss	status,2,c
 15899  007FDE  D013               	goto	l21526
 15900                           
 15901                           ; BSR set to: 0
 15902  007FE0  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15903  007FE2  A4D8               	btfss	status,2,c
 15904  007FE4  D010               	goto	l21526
 15905                           
 15906                           ; BSR set to: 0
 15907                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15908  007FE6  0E00               	movlw	0
 15909  007FE8  0101               	movlb	1	; () banked
 15910  007FEA  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15911  007FEC  0E04               	movlw	4
 15912  007FEE  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15913                           
 15914                           ; BSR set to: 1
 15915                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15916  007FF0  0E0A               	movlw	10
 15917  007FF2  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15918  007FF4  0E00               	movlw	0
 15919  007FF6  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15920  007FF8  0E14               	movlw	20
 15921  007FFA  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15922  007FFC  0E12               	movlw	18
 15923  007FFE  EC51  F04C         	call	_SetSegmentValueIntermitent
 15924  008002                     l21520:
 15925                           
 15926                           ; BSR set to: 1
 15927                           ;inputs_MC50.c: 752:         return YES;
 15928  008002  0E01               	movlw	1
 15929  008004  0012               	return	
 15930  008006                     l21526:
 15931  008006  0100               	movlb	0	; () banked
 15932  008008  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15933  00800A  A4D8               	btfss	status,2,c
 15934  00800C  D013               	goto	l21540
 15935                           
 15936                           ; BSR set to: 0
 15937  00800E  0101               	movlb	1	; () banked
 15938  008010  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15939  008012  A4D8               	btfss	status,2,c
 15940  008014  D00F               	goto	l21540
 15941                           
 15942                           ; BSR set to: 1
 15943                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15944  008016  0E00               	movlw	0
 15945  008018  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15946  00801A  0E04               	movlw	4
 15947  00801C  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15948                           
 15949                           ; BSR set to: 1
 15950                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15951  00801E  0E15               	movlw	21
 15952  008020  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15953  008022  0E00               	movlw	0
 15954  008024  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15955  008026  0E14               	movlw	20
 15956  008028  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15957  00802A  0E05               	movlw	5
 15958  00802C  EC51  F04C         	call	_SetSegmentValueIntermitent
 15959                           
 15960                           ; BSR set to: 1
 15961                           ;inputs_MC50.c: 760:         return ST;
 15962  008030  0E02               	movlw	2
 15963  008032  0012               	return	
 15964  008034                     l21540:
 15965  008034  0100               	movlb	0	; () banked
 15966  008036  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15967  008038  A4D8               	btfss	status,2,c
 15968  00803A  D017               	goto	l21556
 15969                           
 15970                           ; BSR set to: 0
 15971  00803C  0101               	movlb	1	; () banked
 15972  00803E  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15973  008040  A4D8               	btfss	status,2,c
 15974  008042  D013               	goto	l21556
 15975                           
 15976                           ; BSR set to: 1
 15977  008044  0100               	movlb	0	; () banked
 15978  008046  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15979  008048  A4D8               	btfss	status,2,c
 15980  00804A  D00F               	goto	l21556
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15984  00804C  0E00               	movlw	0
 15985  00804E  0101               	movlb	1	; () banked
 15986  008050  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15987  008052  0E04               	movlw	4
 15988  008054  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15989                           
 15990                           ; BSR set to: 1
 15991                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15992  008056  0E0E               	movlw	14
 15993  008058  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15994  00805A  0E00               	movlw	0
 15995  00805C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15996  00805E  0E14               	movlw	20
 15997  008060  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15998  008062  0E12               	movlw	18
 15999  008064  EC51  F04C         	call	_SetSegmentValueIntermitent
 16000  008068  D7CC               	goto	l21520
 16001  00806A                     l21556:
 16002                           
 16003                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16004  00806A  0E00               	movlw	0
 16005  00806C  0012               	return		;funcret
 16006  00806E                     __end_of_GetSecurityStateInOpening:
 16007                           	callstack 0
 16008                           
 16009 ;; *************** function _SetSegmentValueIntermitent *****************
 16010 ;; Defined at:
 16011 ;;		line 201 in file "outputs_MC50.c"
 16012 ;; Parameters:    Size  Location     Type
 16013 ;;  d1              1    wreg     unsigned char 
 16014 ;;  d2              1   15[COMRAM] unsigned char 
 16015 ;;  time            2   16[COMRAM] int 
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;  d1              1   18[COMRAM] unsigned char 
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  1    wreg      void 
 16020 ;; Registers used:
 16021 ;;		wreg, status,2, status,0
 16022 ;; Tracked objects:
 16023 ;;		On entry : 3E/0
 16024 ;;		On exit  : 3F/1
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16031 ;;Total ram usage:        4 bytes
 16032 ;; Hardware stack levels used: 1
 16033 ;; Hardware stack levels required when called: 4
 16034 ;; This function calls:
 16035 ;;		Nothing
 16036 ;; This function is called by:
 16037 ;;		_GetSecurityStateInOpening
 16038 ;;		_GetSecurityStateInClosing
 16039 ;;		_sm_execute_ControlGate
 16040 ;;		_actionZone_Opening
 16041 ;;		_actionZone_Closing
 16042 ;; This function uses a non-reentrant model
 16043 ;;
 16044                           
 16045                           	psect	text49
 16046  0098A2                     __ptext49:
 16047                           	callstack 0
 16048  0098A2                     _SetSegmentValueIntermitent:
 16049                           	callstack 24
 16050                           
 16051                           ;incstack = 0
 16052                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16053  0098A2  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16054                           
 16055                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16056  0098A4  0101               	movlb	1	; () banked
 16057  0098A6  05F1               	decf	_main_stateMachine& (0+255),w,b
 16058  0098A8  11F2               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16059  0098AA  B4D8               	btfsc	status,2,c
 16060  0098AC  0012               	return	
 16061                           
 16062                           ; BSR set to: 1
 16063  0098AE  51AC               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16064  0098B0  11AD               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16065  0098B2  A4D8               	btfss	status,2,c
 16066  0098B4  0012               	return	
 16067                           
 16068                           ; BSR set to: 1
 16069  0098B6  0E14               	movlw	20
 16070  0098B8  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16071  0098BA  0012               	return	
 16072                           
 16073                           ; BSR set to: 1
 16074                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16075  0098BC  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16076                           
 16077                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16078  0098C0  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16079                           
 16080                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16081  0098C4  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16082  0098C8  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16083                           
 16084                           ; BSR set to: 1
 16085  0098CC  0012               	return		;funcret
 16086  0098CE                     __end_of_SetSegmentValueIntermitent:
 16087                           	callstack 0
 16088                           
 16089 ;; *************** function _GetOpenOrder *****************
 16090 ;; Defined at:
 16091 ;;		line 330 in file "inputs_MC50.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;		None
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;		None
 16096 ;; Return value:  Size  Location     Type
 16097 ;;                  1    wreg      enum E10539
 16098 ;; Registers used:
 16099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16100 ;; Tracked objects:
 16101 ;;		On entry : 3E/1
 16102 ;;		On exit  : 0/0
 16103 ;;		Unchanged: 0/0
 16104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16109 ;;Total ram usage:        0 bytes
 16110 ;; Hardware stack levels used: 1
 16111 ;; Hardware stack levels required when called: 5
 16112 ;; This function calls:
 16113 ;;		_SetSegmentValueIntermitentMain
 16114 ;;		___lbdiv
 16115 ;; This function is called by:
 16116 ;;		_sm_execute_ControlGate
 16117 ;;		_actionZone_Closed
 16118 ;;		_actionZone_Opening
 16119 ;;		_actionZone_Opened
 16120 ;;		_actionZone_Closing
 16121 ;;		_sm_execute_ControlLearning
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text50
 16126  005E94                     __ptext50:
 16127                           	callstack 0
 16128  005E94                     _GetOpenOrder:
 16129                           	callstack 23
 16130                           
 16131                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16132                           
 16133                           ; BSR set to: 1
 16134                           ;incstack = 0
 16135  005E94  0101               	movlb	1	; () banked
 16136  005E96  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16137  005E98  A4D8               	btfss	status,2,c
 16138  005E9A  D0C0               	goto	l21496
 16139                           
 16140                           ; BSR set to: 1
 16141                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16142  005E9C  BFC9               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16143  005E9E  D019               	goto	l21388
 16144  005EA0  51C9               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16145  005EA2  E103               	bnz	u24630
 16146  005EA4  05C8               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16147  005EA6  A0D8               	btfss	status,0,c
 16148  005EA8  D014               	goto	l21388
 16149  005EAA                     u24630:
 16150                           
 16151                           ; BSR set to: 1
 16152                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16153  005EAA  0E01               	movlw	1
 16154  005EAC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16155  005EAE  0E00               	movlw	0
 16156  005EB0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16157  005EB2  0E14               	movlw	20
 16158  005EB4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16159  005EB6  0E12               	movlw	18
 16160  005EB8  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16161                           
 16162                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16163  005EBC  0E00               	movlw	0
 16164  005EBE  0101               	movlb	1	; () banked
 16165  005EC0  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16166  005EC2  0E0A               	movlw	10
 16167  005EC4  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16168                           
 16169                           ; BSR set to: 1
 16170                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16171  005EC6  0E01               	movlw	1
 16172  005EC8  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16173                           
 16174                           ; BSR set to: 1
 16175                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16176  005ECA  0E01               	movlw	1
 16177  005ECC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16178  005ECE                     l21382:
 16179                           
 16180                           ;inputs_MC50.c: 341:             return NoCMD;
 16181  005ECE  0E00               	movlw	0
 16182  005ED0  0012               	return	
 16183  005ED2                     l21388:
 16184                           
 16185                           ; BSR set to: 1
 16186  005ED2  0100               	movlb	0	; () banked
 16187  005ED4  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16188  005ED6  B4D8               	btfsc	status,2,c
 16189  005ED8  D02F               	goto	l21422
 16190                           
 16191                           ; BSR set to: 0
 16192                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16193  005EDA  0E35               	movlw	53
 16194  005EDC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16195  005EDE  A4D8               	btfss	status,2,c
 16196  005EE0  D017               	goto	l21406
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16200  005EE2  0E00               	movlw	0
 16201  005EE4  0101               	movlb	1	; () banked
 16202  005EE6  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16203  005EE8  0E0A               	movlw	10
 16204  005EEA  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16205                           
 16206                           ; BSR set to: 1
 16207                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16208  005EEC  0E00               	movlw	0
 16209  005EEE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16210  005EF0  0E00               	movlw	0
 16211  005EF2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16212  005EF4  0E04               	movlw	4
 16213  005EF6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16214  005EF8  0E12               	movlw	18
 16215  005EFA  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16216                           
 16217                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16218  005EFE  0E02               	movlw	2
 16219  005F00  0100               	movlb	0	; () banked
 16220  005F02  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16221  005F04  A4D8               	btfss	status,2,c
 16222  005F06  D002               	goto	l21400
 16223  005F08                     u24660:
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16227  005F08  0E01               	movlw	1
 16228  005F0A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16229  005F0C                     l21400:
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16233  005F0C  0E03               	movlw	3
 16234  005F0E  0012               	return	
 16235  005F10                     l21406:
 16236                           
 16237                           ; BSR set to: 0
 16238  005F10  0E33               	movlw	51
 16239  005F12  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16240  005F14  A4D8               	btfss	status,2,c
 16241  005F16  D7DB               	goto	l21382
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16245  005F18  0E00               	movlw	0
 16246  005F1A  0101               	movlb	1	; () banked
 16247  005F1C  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16248  005F1E  0E0A               	movlw	10
 16249  005F20  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16250                           
 16251                           ; BSR set to: 1
 16252                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16253  005F22  0E05               	movlw	5
 16254  005F24  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16255  005F26  0E00               	movlw	0
 16256  005F28  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16257  005F2A  0E04               	movlw	4
 16258  005F2C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16259  005F2E  0E12               	movlw	18
 16260  005F30  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16261  005F34                     l21412:
 16262                           
 16263                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16264  005F34  0E04               	movlw	4
 16265  005F36  0012               	return	
 16266  005F38                     l21422:
 16267                           
 16268                           ; BSR set to: 0
 16269  005F38  0E35               	movlw	53
 16270  005F3A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16271  005F3C  A4D8               	btfss	status,2,c
 16272  005F3E  D016               	goto	l21444
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16276  005F40  0E00               	movlw	0
 16277  005F42  0101               	movlb	1	; () banked
 16278  005F44  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16279  005F46  0E28               	movlw	40
 16280  005F48  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16281                           
 16282                           ; BSR set to: 1
 16283                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16284  005F4A  0E00               	movlw	0
 16285  005F4C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16286  005F4E  0E00               	movlw	0
 16287  005F50  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16288  005F52  0E04               	movlw	4
 16289  005F54  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16290  005F56  0E12               	movlw	18
 16291  005F58  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16292                           
 16293                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16294  005F5C  0100               	movlb	0	; () banked
 16295  005F5E  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16296  005F60  B4D8               	btfsc	status,2,c
 16297  005F62  D7D2               	goto	u24660
 16298  005F64                     l21438:
 16299                           
 16300                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16301  005F64  0E01               	movlw	1
 16302  005F66  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16303                           
 16304                           ;inputs_MC50.c: 382:                 return TypeFull;
 16305  005F68  0E01               	movlw	1
 16306  005F6A  0012               	return	
 16307  005F6C                     l21444:
 16308                           
 16309                           ; BSR set to: 0
 16310  005F6C  0E33               	movlw	51
 16311  005F6E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16312  005F70  A4D8               	btfss	status,2,c
 16313  005F72  D019               	goto	l21466
 16314                           
 16315                           ; BSR set to: 0
 16316                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16317  005F74  0E00               	movlw	0
 16318  005F76  0101               	movlb	1	; () banked
 16319  005F78  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16320  005F7A  0E28               	movlw	40
 16321  005F7C  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16322                           
 16323                           ; BSR set to: 1
 16324                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16325  005F7E  0E05               	movlw	5
 16326  005F80  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16327  005F82  0E00               	movlw	0
 16328  005F84  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16329  005F86  0E04               	movlw	4
 16330  005F88  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16331  005F8A  0E12               	movlw	18
 16332  005F8C  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16333                           
 16334                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16335  005F90  0100               	movlb	0	; () banked
 16336  005F92  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16337  005F94  A4D8               	btfss	status,2,c
 16338  005F96  D003               	goto	l21460
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16342  005F98  0E01               	movlw	1
 16343  005F9A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16344  005F9C  D7CB               	goto	l21412
 16345  005F9E                     l21460:
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16349  005F9E  0E01               	movlw	1
 16350  005FA0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16354  005FA2  0E02               	movlw	2
 16355  005FA4  0012               	return	
 16356  005FA6                     l21466:
 16357                           
 16358                           ; BSR set to: 0
 16359  005FA6  0E36               	movlw	54
 16360  005FA8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16361  005FAA  A4D8               	btfss	status,2,c
 16362  005FAC  D00F               	goto	l21480
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16366  005FAE  0E00               	movlw	0
 16367  005FB0  0101               	movlb	1	; () banked
 16368  005FB2  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16369  005FB4  0E28               	movlw	40
 16370  005FB6  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16371                           
 16372                           ; BSR set to: 1
 16373                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16374  005FB8  0E13               	movlw	19
 16375  005FBA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16376  005FBC  0E00               	movlw	0
 16377  005FBE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16378  005FC0  0E04               	movlw	4
 16379  005FC2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16380  005FC4  0E10               	movlw	16
 16381  005FC6  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16382  005FCA  D7CC               	goto	l21438
 16383  005FCC                     l21480:
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16387  005FCC  503B               	movf	_rfCMD^0,w,c	;volatile
 16388  005FCE  B4D8               	btfsc	status,2,c
 16389  005FD0  D023               	goto	l21492
 16390                           
 16391                           ; BSR set to: 0
 16392  005FD2  0E06               	movlw	6
 16393  005FD4  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16394  005FD6  B4D8               	btfsc	status,2,c
 16395  005FD8  D01F               	goto	l21492
 16396                           
 16397                           ; BSR set to: 0
 16398  005FDA  0E05               	movlw	5
 16399  005FDC  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16400  005FDE  B4D8               	btfsc	status,2,c
 16401  005FE0  D01B               	goto	l21492
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16405  005FE2  0E0A               	movlw	10
 16406  005FE4  6E10               	movwf	___lbdiv@divisor^0,c
 16407  005FE6  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16408  005FE8  EC6B  F04B         	call	___lbdiv
 16409  005FEC  0DF6               	mullw	246
 16410  005FEE  50F3               	movf	243,w,c
 16411  005FF0  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16412  005FF2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16413  005FF4  0E00               	movlw	0
 16414  005FF6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16415  005FF8  0E04               	movlw	4
 16416  005FFA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16417  005FFC  0E0A               	movlw	10
 16418  005FFE  6E10               	movwf	___lbdiv@divisor^0,c
 16419  006000  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16420  006002  EC6B  F04B         	call	___lbdiv
 16421  006006  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16422                           
 16423                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16424  00600A  0E00               	movlw	0
 16425  00600C  0101               	movlb	1	; () banked
 16426  00600E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16427  006010  0E28               	movlw	40
 16428  006012  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16429                           
 16430                           ; BSR set to: 1
 16431                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16432  006014  0E01               	movlw	1
 16433  006016  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16434  006018                     l21492:
 16435                           
 16436                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16437  006018  503B               	movf	_rfCMD^0,w,c	;volatile
 16438  00601A  0012               	return	
 16439  00601C                     l21496:
 16440                           
 16441                           ; BSR set to: 1
 16442                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16443  00601C  503B               	movf	_rfCMD^0,w,c	;volatile
 16444  00601E  B4D8               	btfsc	status,2,c
 16445  006020  D01B               	goto	l21504
 16446                           
 16447                           ; BSR set to: 1
 16448                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16449  006022  0E0A               	movlw	10
 16450  006024  6E10               	movwf	___lbdiv@divisor^0,c
 16451  006026  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16452  006028  EC6B  F04B         	call	___lbdiv
 16453  00602C  0DF6               	mullw	246
 16454  00602E  50F3               	movf	243,w,c
 16455  006030  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16456  006032  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16457  006034  0E00               	movlw	0
 16458  006036  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16459  006038  0E04               	movlw	4
 16460  00603A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16461  00603C  0E0A               	movlw	10
 16462  00603E  6E10               	movwf	___lbdiv@divisor^0,c
 16463  006040  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16464  006042  EC6B  F04B         	call	___lbdiv
 16465  006046  EC2D  F04F         	call	_SetSegmentValueIntermitentMain
 16466                           
 16467                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16468  00604A  0E00               	movlw	0
 16469  00604C  0101               	movlb	1	; () banked
 16470  00604E  6FAB               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16471  006050  0E14               	movlw	20
 16472  006052  6FAA               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16473                           
 16474                           ; BSR set to: 1
 16475                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16476  006054  0E01               	movlw	1
 16477  006056  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16478  006058                     l21504:
 16479                           
 16480                           ; BSR set to: 1
 16481                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16482  006058  503B               	movf	_rfCMD^0,w,c	;volatile
 16483  00605A  0012               	return		;funcret
 16484  00605C                     __end_of_GetOpenOrder:
 16485                           	callstack 0
 16486                           
 16487 ;; *************** function ___lbdiv *****************
 16488 ;; Defined at:
 16489 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;  dividend        1    wreg     unsigned char 
 16492 ;;  divisor         1   15[COMRAM] unsigned char 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  dividend        1   16[COMRAM] unsigned char 
 16495 ;;  quotient        1   18[COMRAM] unsigned char 
 16496 ;;  counter         1   17[COMRAM] unsigned char 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  1    wreg      unsigned char 
 16499 ;; Registers used:
 16500 ;;		wreg, status,2, status,0
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16510 ;;Total ram usage:        4 bytes
 16511 ;; Hardware stack levels used: 1
 16512 ;; Hardware stack levels required when called: 4
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		_GetOpenOrder
 16517 ;;		_sm_execute_menuConfiguration
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text51
 16522  0096D6                     __ptext51:
 16523                           	callstack 0
 16524  0096D6                     ___lbdiv:
 16525                           	callstack 24
 16526                           
 16527                           ;incstack = 0
 16528                           ;___lbdiv@dividend stored from wreg
 16529  0096D6  6E11               	movwf	___lbdiv@dividend^0,c
 16530  0096D8  0E00               	movlw	0
 16531  0096DA  6E13               	movwf	___lbdiv@quotient^0,c
 16532  0096DC  5010               	movf	___lbdiv@divisor^0,w,c
 16533  0096DE  B4D8               	btfsc	status,2,c
 16534  0096E0  D015               	goto	l21252
 16535  0096E2  0E01               	movlw	1
 16536  0096E4  6E12               	movwf	___lbdiv@counter^0,c
 16537  0096E6  D003               	goto	l21240
 16538  0096E8                     l21236:
 16539  0096E8  90D8               	bcf	status,0,c
 16540  0096EA  3610               	rlcf	___lbdiv@divisor^0,f,c
 16541  0096EC  2A12               	incf	___lbdiv@counter^0,f,c
 16542  0096EE                     l21240:
 16543  0096EE  AE10               	btfss	___lbdiv@divisor^0,7,c
 16544  0096F0  D7FB               	goto	l21236
 16545  0096F2                     u24460:
 16546  0096F2  90D8               	bcf	status,0,c
 16547  0096F4  3613               	rlcf	___lbdiv@quotient^0,f,c
 16548  0096F6  5010               	movf	___lbdiv@divisor^0,w,c
 16549  0096F8  5C11               	subwf	___lbdiv@dividend^0,w,c
 16550  0096FA  A0D8               	btfss	status,0,c
 16551  0096FC  D003               	goto	l21248
 16552  0096FE  5010               	movf	___lbdiv@divisor^0,w,c
 16553  009700  5E11               	subwf	___lbdiv@dividend^0,f,c
 16554  009702  8013               	bsf	___lbdiv@quotient^0,0,c
 16555  009704                     l21248:
 16556  009704  90D8               	bcf	status,0,c
 16557  009706  3210               	rrcf	___lbdiv@divisor^0,f,c
 16558  009708  2E12               	decfsz	___lbdiv@counter^0,f,c
 16559  00970A  D7F3               	goto	u24460
 16560  00970C                     l21252:
 16561  00970C  5013               	movf	___lbdiv@quotient^0,w,c
 16562  00970E  0012               	return		;funcret
 16563  009710                     __end_of___lbdiv:
 16564                           	callstack 0
 16565                           
 16566 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16567 ;; Defined at:
 16568 ;;		line 193 in file "outputs_MC50.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;  d1              1    wreg     unsigned char 
 16571 ;;  d2              1   27[COMRAM] unsigned char 
 16572 ;;  time            2   28[COMRAM] int 
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;  d1              1   30[COMRAM] unsigned char 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      void 
 16577 ;; Registers used:
 16578 ;;		wreg
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/1
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16584 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16588 ;;Total ram usage:        4 bytes
 16589 ;; Hardware stack levels used: 1
 16590 ;; Hardware stack levels required when called: 4
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_GetOpenOrder
 16595 ;;		_sm_execute_main
 16596 ;;		_sm_execute_menuConfiguration
 16597 ;;		_load_New_Menu
 16598 ;;		_controlSelectRemote
 16599 ;;		_controlSaveRemote
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           	psect	text52
 16604  009E5A                     __ptext52:
 16605                           	callstack 0
 16606  009E5A                     _SetSegmentValueIntermitentMain:
 16607                           	callstack 22
 16608                           
 16609                           ;incstack = 0
 16610                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16611  009E5A  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16612                           
 16613                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16614  009E5C  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16615                           
 16616                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16617  009E60  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16618                           
 16619                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16620  009E64  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16621  009E68  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16622  009E6C  0012               	return		;funcret
 16623  009E6E                     __end_of_SetSegmentValueIntermitentMain:
 16624                           	callstack 0
 16625                           
 16626 ;; *************** function _readbutton *****************
 16627 ;; Defined at:
 16628 ;;		line 471 in file "inputs_MC50.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;		None
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;		None
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  1    wreg      void 
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0
 16637 ;; Tracked objects:
 16638 ;;		On entry : 3F/1
 16639 ;;		On exit  : 3F/1
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16646 ;;Total ram usage:        0 bytes
 16647 ;; Hardware stack levels used: 1
 16648 ;; Hardware stack levels required when called: 4
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		_main
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           	psect	text53
 16657  008CFA                     __ptext53:
 16658                           	callstack 0
 16659  008CFA                     _readbutton:
 16660                           	callstack 26
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16664                           
 16665                           ;incstack = 0
 16666  008CFA  508E               	movf	142,w,c	;volatile
 16667  008CFC  0B37               	andlw	55
 16668  008CFE  6F9A               	movwf	readbutton@key2& (0+255),b
 16669  008D00  F000               	nop		;# 
 16670  008D02  F000               	nop		;# 
 16671  008D04  F000               	nop		;# 
 16672                           
 16673                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16674  008D06  508E               	movf	142,w,c	;volatile
 16675  008D08  0B37               	andlw	55
 16676  008D0A  0100               	movlb	0	; () banked
 16677  008D0C  6F86               	movwf	readbutton@key1& (0+255),b
 16678                           
 16679                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16680  008D0E  5186               	movf	readbutton@key1& (0+255),w,b
 16681  008D10  0101               	movlb	1	; () banked
 16682  008D12  199A               	xorwf	readbutton@key2& (0+255),w,b
 16683  008D14  A4D8               	btfss	status,2,c
 16684  008D16  D003               	goto	l24836
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16688  008D18  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16689                           
 16690                           ;inputs_MC50.c: 488:  }
 16691  008D1C  D002               	goto	l24838
 16692  008D1E                     l24836:
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16696  008D1E  0E37               	movlw	55
 16697  008D20  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16698  008D22                     l24838:
 16699                           
 16700                           ; BSR set to: 1
 16701                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16702  008D22  0E37               	movlw	55
 16703  008D24  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16704  008D26  B4D8               	btfsc	status,2,c
 16705  008D28  D007               	goto	u30190
 16706                           
 16707                           ; BSR set to: 1
 16708  008D2A  504C               	movf	_button_struct^0,w,c	;volatile
 16709  008D2C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16710  008D2E  B4D8               	btfsc	status,2,c
 16711  008D30  D007               	goto	l24846
 16712                           
 16713                           ; BSR set to: 1
 16714  008D32  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16715  008D34  A4D8               	btfss	status,2,c
 16716  008D36  D004               	goto	l24846
 16717  008D38                     u30190:
 16718                           
 16719                           ; BSR set to: 1
 16720                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16721  008D38  0E00               	movlw	0
 16722  008D3A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16723                           
 16724                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16725  008D3C  0E00               	movlw	0
 16726  008D3E  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16727  008D40                     l24846:
 16728                           
 16729                           ; BSR set to: 1
 16730                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16731  008D40  0E37               	movlw	55
 16732  008D42  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16733  008D44  B4D8               	btfsc	status,2,c
 16734  008D46  D007               	goto	l24854
 16735                           
 16736                           ; BSR set to: 1
 16737                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16738  008D48  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16742  008D4C  0EFA               	movlw	250
 16743  008D4E  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16744  008D50  D004               	goto	l24856
 16745                           
 16746                           ; BSR set to: 1
 16747                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16748  008D52  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16749  008D54  D002               	goto	l24856
 16750  008D56                     l24854:
 16751                           
 16752                           ; BSR set to: 1
 16753                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16754  008D56  0E00               	movlw	0
 16755  008D58  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16756  008D5A                     l24856:
 16757                           
 16758                           ; BSR set to: 1
 16759                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16760  008D5A  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16761  008D5C  A4D8               	btfss	status,2,c
 16762  008D5E  0012               	return	
 16763                           
 16764                           ; BSR set to: 1
 16765                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16766  008D60  0E37               	movlw	55
 16767  008D62  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16768                           
 16769                           ; BSR set to: 1
 16770  008D64  0012               	return		;funcret
 16771  008D66                     __end_of_readbutton:
 16772                           	callstack 0
 16773                           
 16774 ;; *************** function _read_package *****************
 16775 ;; Defined at:
 16776 ;;		line 21 in file "eusartpackage.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;		None
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  package         7   23[COMRAM] struct package_t
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  7   16[COMRAM] struct package_t
 16783 ;; Registers used:
 16784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16785 ;; Tracked objects:
 16786 ;;		On entry : 3F/0
 16787 ;;		On exit  : 3F/E
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16790 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16791 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16794 ;;Total ram usage:       14 bytes
 16795 ;; Hardware stack levels used: 1
 16796 ;; Hardware stack levels required when called: 5
 16797 ;; This function calls:
 16798 ;;		_EUSART1_Read
 16799 ;; This function is called by:
 16800 ;;		_main
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text54
 16805  0092BC                     __ptext54:
 16806                           	callstack 0
 16807  0092BC                     _read_package:
 16808                           	callstack 25
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16812                           
 16813                           ; BSR set to: 1
 16814                           ;incstack = 0
 16815  0092BC  EC21  F04A         	call	_EUSART1_Read	;wreg free
 16816  0092C0  0A0A               	xorlw	10
 16817  0092C2  B4D8               	btfsc	status,2,c
 16818  0092C4  D00C               	goto	l25014
 16819  0092C6                     u30720:
 16820                           
 16821                           ; BSR set to: 14
 16822                           ;eusartpackage.c: 25:             package.valid=0;
 16823  0092C6  0E00               	movlw	0
 16824  0092C8  6E1E               	movwf	(read_package@package+6)^0,c
 16825                           
 16826                           ; BSR set to: 14
 16827                           ;eusartpackage.c: 26:             return package;
 16828  0092CA  EE20  F018         	lfsr	2,read_package@package
 16829  0092CE  EE00  F011         	lfsr	0,?_read_package
 16830  0092D2  0E06               	movlw	6
 16831  0092D4                     u30731:
 16832  0092D4  CFDB FFEB          	movff	plusw2,plusw0
 16833  0092D8  06E8               	decf	wreg,f,c
 16834  0092DA  E2FC               	bc	u30731
 16835  0092DC  0012               	return	
 16836  0092DE                     l25014:
 16837                           
 16838                           ; BSR set to: 14
 16839                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16840  0092DE  0E0A               	movlw	10
 16841  0092E0  6E1C               	movwf	(read_package@package+4)^0,c
 16842                           
 16843                           ; BSR set to: 14
 16844                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16845  0092E2  EC21  F04A         	call	_EUSART1_Read	;wreg free
 16846  0092E6  6E18               	movwf	read_package@package^0,c
 16847                           
 16848                           ; BSR set to: 14
 16849                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16850  0092E8  EC21  F04A         	call	_EUSART1_Read	;wreg free
 16851  0092EC  6E19               	movwf	(read_package@package+1)^0,c
 16852                           
 16853                           ; BSR set to: 14
 16854                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16855  0092EE  EC21  F04A         	call	_EUSART1_Read	;wreg free
 16856  0092F2  6E1A               	movwf	(read_package@package+2)^0,c
 16857                           
 16858                           ; BSR set to: 14
 16859                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16860  0092F4  EC21  F04A         	call	_EUSART1_Read	;wreg free
 16861  0092F8  6E1B               	movwf	(read_package@package+3)^0,c
 16862                           
 16863                           ; BSR set to: 14
 16864                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16865  0092FA  EC21  F04A         	call	_EUSART1_Read	;wreg free
 16866  0092FE  0A0D               	xorlw	13
 16867  009300  A4D8               	btfss	status,2,c
 16868  009302  D7E1               	goto	u30720
 16869                           
 16870                           ; BSR set to: 14
 16871                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16872  009304  0E0D               	movlw	13
 16873  009306  6E1D               	movwf	(read_package@package+5)^0,c
 16874                           
 16875                           ; BSR set to: 14
 16876                           ;eusartpackage.c: 46:         package.valid=1;
 16877  009308  0E01               	movlw	1
 16878  00930A  D7DE               	goto	L76
 16879  00930C                     __end_of_read_package:
 16880                           	callstack 0
 16881                           
 16882 ;; *************** function _EUSART1_Read *****************
 16883 ;; Defined at:
 16884 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16885 ;; Parameters:    Size  Location     Type
 16886 ;;		None
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;  readValue       1   15[COMRAM] unsigned char 
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      unsigned char 
 16891 ;; Registers used:
 16892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16893 ;; Tracked objects:
 16894 ;;		On entry : 31/0
 16895 ;;		On exit  : 3F/E
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16902 ;;Total ram usage:        1 bytes
 16903 ;; Hardware stack levels used: 1
 16904 ;; Hardware stack levels required when called: 4
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_read_package
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912                           	psect	text55
 16913  009442                     __ptext55:
 16914                           	callstack 0
 16915  009442                     _EUSART1_Read:
 16916                           	callstack 25
 16917                           
 16918                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16919                           
 16920                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16921                           
 16922                           ; BSR set to: 14
 16923                           ;incstack = 0
 16924  009442  0100               	movlb	0	; () banked
 16925  009444  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16926  009446  B4D8               	btfsc	status,2,c
 16927  009448  D7FC               	goto	__ptext55
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16931  00944A  0E74               	movlw	low _eusart1RxStatusBuffer
 16932  00944C  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16933  00944E  6ED9               	movwf	fsr2l,c
 16934  009450  6ADA               	clrf	fsr2h,c
 16935  009452  0E02               	movlw	high _eusart1RxStatusBuffer
 16936  009454  22DA               	addwfc	fsr2h,f,c
 16937  009456  50DF               	movf	indf2,w,c
 16938  009458  0101               	movlb	1	; () banked
 16939  00945A  6F9D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16940                           
 16941                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16942  00945C  0E7C               	movlw	low _eusart1RxBuffer
 16943  00945E  0100               	movlb	0	; () banked
 16944  009460  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16945  009462  6ED9               	movwf	fsr2l,c
 16946  009464  6ADA               	clrf	fsr2h,c
 16947  009466  0E02               	movlw	high _eusart1RxBuffer
 16948  009468  22DA               	addwfc	fsr2h,f,c
 16949  00946A  50DF               	movf	indf2,w,c
 16950  00946C  6E10               	movwf	EUSART1_Read@readValue^0,c
 16951                           
 16952                           ; BSR set to: 0
 16953  00946E  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16957  009470  0E07               	movlw	7
 16958  009472  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16959  009474  D002               	goto	l22802
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16963  009476  0E00               	movlw	0
 16964  009478  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16965  00947A                     l22802:
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16969  00947A  010E               	movlb	14	; () banked
 16970  00947C  9BC5               	bcf	197,5,b	;volatile
 16971                           
 16972                           ; BSR set to: 14
 16973                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16974  00947E  0100               	movlb	0	; () banked
 16975  009480  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16979  009482  010E               	movlb	14	; () banked
 16980  009484  8BC5               	bsf	197,5,b	;volatile
 16981                           
 16982                           ; BSR set to: 14
 16983                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16984  009486  5010               	movf	EUSART1_Read@readValue^0,w,c
 16985                           
 16986                           ; BSR set to: 14
 16987  009488  0012               	return		;funcret
 16988  00948A                     __end_of_EUSART1_Read:
 16989                           	callstack 0
 16990                           
 16991 ;; *************** function _readRFButtons *****************
 16992 ;; Defined at:
 16993 ;;		line 231 in file "inputs_MC50.c"
 16994 ;; Parameters:    Size  Location     Type
 16995 ;;		None
 16996 ;; Auto vars:     Size  Location     Type
 16997 ;;		None
 16998 ;; Return value:  Size  Location     Type
 16999 ;;                  1    wreg      void 
 17000 ;; Registers used:
 17001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17002 ;; Tracked objects:
 17003 ;;		On entry : 3F/1
 17004 ;;		On exit  : 3E/0
 17005 ;;		Unchanged: 0/0
 17006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17011 ;;Total ram usage:        0 bytes
 17012 ;; Hardware stack levels used: 1
 17013 ;; Hardware stack levels required when called: 15
 17014 ;; This function calls:
 17015 ;;		_DecryptPacket_12BIT
 17016 ;;		_keeloqDecryptPacket
 17017 ;; This function is called by:
 17018 ;;		_main
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022                           	psect	text56
 17023  0066CC                     __ptext56:
 17024                           	callstack 0
 17025  0066CC                     _readRFButtons:
 17026                           	callstack 15
 17027                           
 17028                           ; BSR set to: 1
 17029                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17030                           
 17031                           ; BSR set to: 14
 17032                           ;incstack = 0
 17033  0066CC  0100               	movlb	0	; () banked
 17034  0066CE  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17035  0066D0  B4D8               	btfsc	status,2,c
 17036  0066D2  D0B9               	goto	l24822
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17040  0066D4  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17041  0066D6  A4D8               	btfss	status,2,c
 17042  0066D8  D00B               	goto	l24768
 17043                           
 17044                           ; BSR set to: 0
 17045                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17046  0066DA  0EC8               	movlw	low _BufferRF
 17047  0066DC  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17048  0066DE  0E02               	movlw	high _BufferRF
 17049  0066E0  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17050  0066E2  0E92               	movlw	low _classic_data
 17051  0066E4  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17052  0066E6  0E02               	movlw	high _classic_data
 17053  0066E8  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17054  0066EA  EC61  F02E         	call	_keeloqDecryptPacket	;wreg free
 17055  0066EE  D00A               	goto	L77
 17056  0066F0                     l24768:
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17060  0066F0  0EC8               	movlw	low _BufferRF
 17061  0066F2  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17062  0066F4  0E02               	movlw	high _BufferRF
 17063  0066F6  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17064  0066F8  0E92               	movlw	low _classic_data
 17065  0066FA  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17066  0066FC  0E02               	movlw	high _classic_data
 17067  0066FE  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17068  006700  EC61  F041         	call	_DecryptPacket_12BIT	;wreg free
 17069  006704                     L77:
 17070  006704  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17074  006706  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17075                           
 17076                           ; BSR set to: 0
 17077                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17078  00670A  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17079  00670E  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17080  006712  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17081  006716  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17082                           
 17083                           ; BSR set to: 0
 17084                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17085  00671A  C29A  F187         	movff	_classic_data+8,readRFButtons@rollingCode
 17086  00671E  C29B  F188         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17090  006722  C2A0  F19B         	movff	_classic_data+14,readRFButtons@typeRemote
 17091                           
 17092                           ; BSR set to: 0
 17093                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17094  006726  0101               	movlb	1	; () banked
 17095  006728  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17096  00672A  A4D8               	btfss	status,2,c
 17097  00672C  D01E               	goto	l24790
 17098                           
 17099                           ; BSR set to: 1
 17100                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17101  00672E  0100               	movlb	0	; () banked
 17102  006730  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17103  006732  B4D8               	btfsc	status,2,c
 17104  006734  D044               	goto	u30060
 17105                           
 17106                           ; BSR set to: 0
 17107  006736  5188               	movf	readRFButtons@key1& (0+255),w,b
 17108  006738  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17109  00673A  A4D8               	btfss	status,2,c
 17110  00673C  D040               	goto	u30060
 17111                           
 17112                           ; BSR set to: 0
 17113  00673E  0101               	movlb	1	; () banked
 17114  006740  5181               	movf	readRFButtons@serial& (0+255),w,b
 17115  006742  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17116  006744  E13C               	bnz	l24802
 17117  006746  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17118  006748  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17119  00674A  E139               	bnz	l24802
 17120  00674C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17121  00674E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17122  006750  E136               	bnz	l24802
 17123  006752  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17124  006754  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17125  006756  A4D8               	btfss	status,2,c
 17126  006758  D032               	goto	u30060
 17127                           
 17128                           ; BSR set to: 1
 17129  00675A  0100               	movlb	0	; () banked
 17130  00675C  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17131  00675E  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17132  006760  A4D8               	btfss	status,2,c
 17133  006762  D02D               	goto	u30060
 17134  006764                     l1654:
 17135                           
 17136                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17137  006764  0E00               	movlw	0
 17138  006766  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17139                           
 17140                           ;inputs_MC50.c: 275:         }
 17141  006768  D038               	goto	l1657
 17142  00676A                     l24790:
 17143                           
 17144                           ; BSR set to: 1
 17145  00676A  0100               	movlb	0	; () banked
 17146  00676C  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17147  00676E  B4D8               	btfsc	status,2,c
 17148  006770  D026               	goto	u30060
 17149                           
 17150                           ; BSR set to: 0
 17151  006772  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17152  006774  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17153  006776  B4D8               	btfsc	status,2,c
 17154  006778  D00F               	goto	u30040
 17155                           
 17156                           ; BSR set to: 0
 17157  00677A  0101               	movlb	1	; () banked
 17158  00677C  BFB3               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17159  00677E  D005               	goto	u30030
 17160  006780  51B3               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17161  006782  E10A               	bnz	l24798
 17162  006784  05B2               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17163  006786  B0D8               	btfsc	status,0,c
 17164  006788  D007               	goto	u30040
 17165  00678A                     u30030:
 17166                           
 17167                           ; BSR set to: 1
 17168  00678A  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17169  00678C  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17170  00678E  E117               	bnz	l24802
 17171  006790  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17172  006792  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17173  006794  A4D8               	btfss	status,2,c
 17174  006796  D013               	goto	u30060
 17175  006798                     u30040:
 17176  006798                     l24798:
 17177  006798  0100               	movlb	0	; () banked
 17178  00679A  5188               	movf	readRFButtons@key1& (0+255),w,b
 17179  00679C  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17180  00679E  A4D8               	btfss	status,2,c
 17181  0067A0  D00E               	goto	u30060
 17182                           
 17183                           ; BSR set to: 0
 17184  0067A2  0101               	movlb	1	; () banked
 17185  0067A4  5181               	movf	readRFButtons@serial& (0+255),w,b
 17186  0067A6  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17187  0067A8  E10A               	bnz	u30060
 17188  0067AA  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17189  0067AC  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17190  0067AE  E107               	bnz	u30060
 17191  0067B0  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17192  0067B2  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17193  0067B4  E104               	bnz	u30060
 17194  0067B6  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17195  0067B8  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17196  0067BA  B4D8               	btfsc	status,2,c
 17197  0067BC  D003               	goto	l24804
 17198  0067BE                     u30060:
 17199  0067BE                     l24802:
 17200                           
 17201                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17202  0067BE  0E00               	movlw	0
 17203  0067C0  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17204  0067C2  D7D0               	goto	l1654
 17205  0067C4                     l24804:
 17206                           
 17207                           ; BSR set to: 1
 17208  0067C4  BFB3               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17209  0067C6  D005               	goto	u30070
 17210  0067C8  51B3               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17211  0067CA  E107               	bnz	l1657
 17212  0067CC  05B2               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17213  0067CE  B0D8               	btfsc	status,0,c
 17214  0067D0  D004               	goto	l1657
 17215  0067D2                     u30070:
 17216                           
 17217                           ; BSR set to: 1
 17218  0067D2  0E02               	movlw	2
 17219  0067D4  199B               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17220  0067D6  B4D8               	btfsc	status,2,c
 17221  0067D8  D7F2               	goto	u30060
 17222  0067DA                     l1657:
 17223                           
 17224                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17225  0067DA  0E00               	movlw	0
 17226  0067DC  0101               	movlb	1	; () banked
 17227  0067DE  6FB3               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17228  0067E0  0E0A               	movlw	10
 17229  0067E2  6FB2               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17230                           
 17231                           ; BSR set to: 1
 17232                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17233  0067E4  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17234                           
 17235                           ;inputs_MC50.c: 292:         if
 17236  0067E8  503B               	movf	_rfCMD^0,w,c	;volatile
 17237  0067EA  B4D8               	btfsc	status,2,c
 17238  0067EC  D01A               	goto	u30120
 17239                           
 17240                           ; BSR set to: 1
 17241  0067EE  0100               	movlb	0	; () banked
 17242  0067F0  5188               	movf	readRFButtons@key1& (0+255),w,b
 17243  0067F2  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17244  0067F4  A4D8               	btfss	status,2,c
 17245  0067F6  D015               	goto	u30120
 17246                           
 17247                           ; BSR set to: 0
 17248  0067F8  0101               	movlb	1	; () banked
 17249  0067FA  5181               	movf	readRFButtons@serial& (0+255),w,b
 17250  0067FC  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17251  0067FE  E111               	bnz	l1667
 17252  006800  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17253  006802  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17254  006804  E10E               	bnz	l1667
 17255  006806  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17256  006808  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17257  00680A  E10B               	bnz	l1667
 17258  00680C  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17259  00680E  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17260  006810  A4D8               	btfss	status,2,c
 17261  006812  D007               	goto	u30120
 17262                           
 17263                           ; BSR set to: 1
 17264  006814  5187               	movf	readRFButtons@rollingCode& (0+255),w,b
 17265  006816  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17266  006818  E104               	bnz	u30120
 17267  00681A  5188               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17268  00681C  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17269  00681E  B4D8               	btfsc	status,2,c
 17270  006820  D00E               	goto	l24820
 17271  006822                     u30120:
 17272  006822                     l1667:
 17273                           
 17274                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17275  006822  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17276                           
 17277                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17278  006826  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17279  00682A  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17280  00682E  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17281  006832  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17282                           
 17283                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17284  006836  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17285                           
 17286                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17287  00683A  0E00               	movlw	0
 17288  00683C  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17289  00683E                     l24820:
 17290                           
 17291                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17292  00683E  C187  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17293  006842  C188  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17294  006846                     l24822:
 17295                           
 17296                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17297  006846  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17298  006848  A4D8               	btfss	status,2,c
 17299  00684A  D003               	goto	l24826
 17300                           
 17301                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17302  00684C  0E00               	movlw	0
 17303  00684E  6E3B               	movwf	_rfCMD^0,c	;volatile
 17304                           
 17305                           ;inputs_MC50.c: 313:     }
 17306  006850  0012               	return	
 17307  006852                     l24826:
 17308  006852  503B               	movf	_rfCMD^0,w,c	;volatile
 17309  006854  B4D8               	btfsc	status,2,c
 17310  006856  0012               	return	
 17311                           
 17312                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17313  006858  0EFA               	movlw	250
 17314  00685A  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17315  00685C  0012               	return	
 17316                           
 17317                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17318  00685E  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17319  006860  0012               	return		;funcret
 17320  006862                     __end_of_readRFButtons:
 17321                           	callstack 0
 17322                           
 17323 ;; *************** function _keeloqDecryptPacket *****************
 17324 ;; Defined at:
 17325 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17328 ;;		 -> BufferRF(9), 
 17329 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17330 ;;		 -> classic_data(16), 
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;  commandType     1   17[BANK0 ] enum E10539
 17333 ;;  hop_error       1   16[BANK0 ] enum E10730
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  1    wreg      enum E10539
 17336 ;; Registers used:
 17337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17338 ;; Tracked objects:
 17339 ;;		On entry : 3F/0
 17340 ;;		On exit  : 3F/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17343 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17345 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17346 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17347 ;;Total ram usage:       10 bytes
 17348 ;; Hardware stack levels used: 1
 17349 ;; Hardware stack levels required when called: 14
 17350 ;; This function calls:
 17351 ;;		_DecCHK
 17352 ;;		_HopCHK
 17353 ;;		_keeloq_classic_decrypt_packet
 17354 ;;		_memcpy
 17355 ;;		_validateRemoteSerialNumber
 17356 ;;		_verifyProgramingMode
 17357 ;; This function is called by:
 17358 ;;		_readRFButtons
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           	psect	text57
 17363  005CC2                     __ptext57:
 17364                           	callstack 0
 17365  005CC2                     _keeloqDecryptPacket:
 17366                           	callstack 15
 17367                           
 17368                           ; BSR set to: 0
 17369                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17370                           
 17371                           ;incstack = 0
 17372  005CC2  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17373  005CC6  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17374  005CCA  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17375  005CCE  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17376  005CD2  0E00               	movlw	0
 17377  005CD4  6E15               	movwf	(memcpy@n+1)^0,c
 17378  005CD6  0E08               	movlw	8
 17379  005CD8  6E14               	movwf	memcpy@n^0,c
 17380  005CDA  EC8A  F04A         	call	_memcpy	;wreg free
 17381                           
 17382                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17383  005CDE  0E08               	movlw	8
 17384  005CE0  0100               	movlb	0	; () banked
 17385  005CE2  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17386  005CE4  6E10               	movwf	memcpy@d1^0,c
 17387  005CE6  0E00               	movlw	0
 17388  005CE8  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17389  005CEA  6E11               	movwf	(memcpy@d1+1)^0,c
 17390  005CEC  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17391  005CF0  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17392  005CF4  0E00               	movlw	0
 17393  005CF6  6E15               	movwf	(memcpy@n+1)^0,c
 17394  005CF8  0E04               	movlw	4
 17395  005CFA  6E14               	movwf	memcpy@n^0,c
 17396  005CFC  EC8A  F04A         	call	_memcpy	;wreg free
 17397                           
 17398                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17399  005D00  0100               	movlb	0	; () banked
 17400  005D02  EE20 F00C          	lfsr	2,12
 17401  005D06  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17402  005D08  26D9               	addwf	fsr2l,f,c
 17403  005D0A  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17404  005D0C  22DA               	addwfc	fsr2h,f,c
 17405  005D0E  EE10 F007          	lfsr	1,7
 17406  005D12  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17407  005D14  26E1               	addwf	fsr1l,f,c
 17408  005D16  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17409  005D18  22E2               	addwfc	fsr1h,f,c
 17410  005D1A  50E7               	movf	indf1,w,c
 17411  005D1C  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17412  005D1E  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17413  005D20  0B0F               	andlw	15
 17414  005D22  6EDF               	movwf	indf2,c
 17415                           
 17416                           ; BSR set to: 0
 17417                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17418  005D24  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17419  005D28  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17420  005D2C  ECA4  F04B         	call	_verifyProgramingMode	;wreg free
 17421  005D30  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17425  005D32  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17426  005D34  A4D8               	btfss	status,2,c
 17427  005D36  D019               	goto	l23126
 17428                           
 17429                           ; BSR set to: 0
 17430                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17431  005D38  EE20 F004          	lfsr	2,4
 17432  005D3C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17433  005D3E  26D9               	addwf	fsr2l,f,c
 17434  005D40  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17435  005D42  22DA               	addwfc	fsr2h,f,c
 17436  005D44  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17437  005D48  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17438  005D4C  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17439  005D50  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17440  005D54  0E00               	movlw	0
 17441  005D56  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17442  005D58  0E0F               	movlw	15
 17443  005D5A  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17444  005D5C  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17445  005D5E  0E00               	movlw	0
 17446  005D60  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17447  005D62  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17448  005D64  ECFE  F030         	call	_validateRemoteSerialNumber	;wreg free
 17449  005D68  D004               	goto	L78
 17450  005D6A                     l23126:
 17451                           
 17452                           ; BSR set to: 0
 17453  005D6A  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17454  005D6C  A4D8               	btfss	status,2,c
 17455  005D6E  D002               	goto	l23130
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17459  005D70  0E00               	movlw	0
 17460  005D72                     L78:
 17461  005D72  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17462  005D74                     l23130:
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17466  005D74  EE20 F004          	lfsr	2,4
 17467  005D78  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17468  005D7A  26D9               	addwf	fsr2l,f,c
 17469  005D7C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17470  005D7E  22DA               	addwfc	fsr2h,f,c
 17471  005D80  0EFF               	movlw	255
 17472  005D82  14DE               	andwf	postinc2,w,c
 17473  005D84  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17474  005D86  0EFF               	movlw	255
 17475  005D88  14DE               	andwf	postinc2,w,c
 17476  005D8A  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17477  005D8C  0EFF               	movlw	255
 17478  005D8E  14DE               	andwf	postinc2,w,c
 17479  005D90  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17480  005D92  0E0F               	movlw	15
 17481  005D94  14DE               	andwf	postinc2,w,c
 17482  005D96  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17483  005D98  EE20 F004          	lfsr	2,4
 17484  005D9C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17485  005D9E  26D9               	addwf	fsr2l,f,c
 17486  005DA0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17487  005DA2  22DA               	addwfc	fsr2h,f,c
 17488  005DA4  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17489  005DA8  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17490  005DAC  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17491  005DB0  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17495  005DB4  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17496  005DB8  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17497  005DBC  EC5E  F048         	call	_keeloq_classic_decrypt_packet	;wreg free
 17498                           
 17499                           ; BSR set to: 0
 17500                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17501  005DC0  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17502  005DC2  A4D8               	btfss	status,2,c
 17503  005DC4  D01B               	goto	l23148
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17507  005DC6  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17508  005DCA  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17509  005DCE  ECBE  F04B         	call	_DecCHK	;wreg free
 17510  005DD2  0900               	iorlw	0
 17511  005DD4  A4D8               	btfss	status,2,c
 17512  005DD6  D008               	goto	l23140
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17516  005DD8  EE20 F00E          	lfsr	2,14
 17517  005DDC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17518  005DDE  26D9               	addwf	fsr2l,f,c
 17519  005DE0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17520  005DE2  22DA               	addwfc	fsr2h,f,c
 17521  005DE4  0E01               	movlw	1
 17522  005DE6  D007               	goto	L79
 17523  005DE8                     l23140:
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17527  005DE8  EE20 F00E          	lfsr	2,14
 17528  005DEC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17529  005DEE  26D9               	addwf	fsr2l,f,c
 17530  005DF0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17531  005DF2  22DA               	addwfc	fsr2h,f,c
 17532  005DF4  0E00               	movlw	0
 17533  005DF6                     L79:
 17534  005DF6  6EDF               	movwf	indf2,c
 17535  005DF8                     l23142:
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17539  005DF8  0E00               	movlw	0
 17540  005DFA  0012               	return	
 17541  005DFC                     l23148:
 17542                           
 17543                           ; BSR set to: 0
 17544  005DFC  0E06               	movlw	6
 17545  005DFE  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17546  005E00  B4D8               	btfsc	status,2,c
 17547  005E02  D004               	goto	u26800
 17548                           
 17549                           ; BSR set to: 0
 17550  005E04  0E05               	movlw	5
 17551  005E06  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17552  005E08  A4D8               	btfss	status,2,c
 17553  005E0A  D01B               	goto	l23158
 17554  005E0C                     u26800:
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17558  005E0C  EE20 F004          	lfsr	2,4
 17559  005E10  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17560  005E12  26D9               	addwf	fsr2l,f,c
 17561  005E14  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17562  005E16  22DA               	addwfc	fsr2h,f,c
 17563  005E18  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17564  005E1C  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17565  005E20  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17566  005E24  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17567  005E28  0E01               	movlw	1
 17568  005E2A  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17569  005E2C  0E0F               	movlw	15
 17570  005E2E  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17571  005E30  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17572  005E32  0E00               	movlw	0
 17573  005E34  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17574  005E36  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17575  005E38  ECFE  F030         	call	_validateRemoteSerialNumber	;wreg free
 17576  005E3C  0900               	iorlw	0
 17577  005E3E  B4D8               	btfsc	status,2,c
 17578  005E40  D7DB               	goto	l23142
 17579  005E42                     l23158:
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17583  005E42  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17584  005E46  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17585  005E4A  ECBE  F04B         	call	_DecCHK	;wreg free
 17586  005E4E  0900               	iorlw	0
 17587  005E50  A4D8               	btfss	status,2,c
 17588  005E52  D00D               	goto	l23174
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17592  005E54  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17593  005E56  B4D8               	btfsc	status,2,c
 17594  005E58  D7CF               	goto	l23142
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17598  005E5A  EE20 F00E          	lfsr	2,14
 17599  005E5E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17600  005E60  26D9               	addwf	fsr2l,f,c
 17601  005E62  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17602  005E64  22DA               	addwfc	fsr2h,f,c
 17603  005E66  0E01               	movlw	1
 17604  005E68  6EDF               	movwf	indf2,c
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17608  005E6A  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17609  005E6C  0012               	return	
 17610  005E6E                     l23174:
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17614  005E6E  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17615  005E72  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17616  005E76  EC33  F042         	call	_HopCHK	;wreg free
 17617  005E7A  0100               	movlb	0	; () banked
 17618  005E7C  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17622  005E7E  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17623  005E80  A4D8               	btfss	status,2,c
 17624  005E82  D7BA               	goto	l23142
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17628  005E84  EE20 F00E          	lfsr	2,14
 17629  005E88  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17630  005E8A  26D9               	addwf	fsr2l,f,c
 17631  005E8C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17632  005E8E  22DA               	addwfc	fsr2h,f,c
 17633  005E90  0E00               	movlw	0
 17634  005E92  D7EA               	goto	L80
 17635  005E94                     __end_of_keeloqDecryptPacket:
 17636                           	callstack 0
 17637                           
 17638 ;; *************** function _verifyProgramingMode *****************
 17639 ;; Defined at:
 17640 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17641 ;; Parameters:    Size  Location     Type
 17642 ;;  classic_data    2   15[COMRAM] PTR struct .
 17643 ;;		 -> classic_data(16), 
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;		None
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      enum E10539
 17648 ;; Registers used:
 17649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17650 ;; Tracked objects:
 17651 ;;		On entry : 3F/0
 17652 ;;		On exit  : 3F/0
 17653 ;;		Unchanged: 3F/0
 17654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17658 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17659 ;;Total ram usage:        3 bytes
 17660 ;; Hardware stack levels used: 1
 17661 ;; Hardware stack levels required when called: 4
 17662 ;; This function calls:
 17663 ;;		Nothing
 17664 ;; This function is called by:
 17665 ;;		_keeloqDecryptPacket
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           	psect	text58
 17670  009748                     __ptext58:
 17671                           	callstack 0
 17672  009748                     _verifyProgramingMode:
 17673                           	callstack 24
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;incstack = 0
 17680  009748  EE20 F00C          	lfsr	2,12
 17681  00974C  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17682  00974E  26D9               	addwf	fsr2l,f,c
 17683  009750  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17684  009752  22DA               	addwfc	fsr2h,f,c
 17685  009754  0E0A               	movlw	10
 17686  009756  18DE               	xorwf	postinc2,w,c
 17687  009758  A4D8               	btfss	status,2,c
 17688  00975A  D002               	goto	l21664
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17692  00975C  0E06               	movlw	6
 17693  00975E  0012               	return	
 17694  009760                     l21664:
 17695                           
 17696                           ; BSR set to: 0
 17697  009760  EE20 F00C          	lfsr	2,12
 17698  009764  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17699  009766  26D9               	addwf	fsr2l,f,c
 17700  009768  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17701  00976A  22DA               	addwfc	fsr2h,f,c
 17702  00976C  0E05               	movlw	5
 17703  00976E  18DE               	xorwf	postinc2,w,c
 17704  009770  A4D8               	btfss	status,2,c
 17705  009772  D002               	goto	l21672
 17706                           
 17707                           ; BSR set to: 0
 17708                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17709  009774  0E05               	movlw	5
 17710  009776  0012               	return	
 17711  009778                     l21672:
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17715  009778  0E00               	movlw	0
 17716                           
 17717                           ; BSR set to: 0
 17718  00977A  0012               	return		;funcret
 17719  00977C                     __end_of_verifyProgramingMode:
 17720                           	callstack 0
 17721                           
 17722 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17723 ;; Defined at:
 17724 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17725 ;; Parameters:    Size  Location     Type
 17726 ;;  data            2   55[COMRAM] PTR struct .
 17727 ;;		 -> classic_data(16), 
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;		None
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  1    wreg      void 
 17732 ;; Registers used:
 17733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17734 ;; Tracked objects:
 17735 ;;		On entry : 3F/0
 17736 ;;		On exit  : 3F/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17741 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17743 ;;Total ram usage:        5 bytes
 17744 ;; Hardware stack levels used: 1
 17745 ;; Hardware stack levels required when called: 7
 17746 ;; This function calls:
 17747 ;;		_Decrypt
 17748 ;;		_NormalKeyGen
 17749 ;; This function is called by:
 17750 ;;		_keeloqDecryptPacket
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text59
 17755  0090BC                     __ptext59:
 17756                           	callstack 0
 17757  0090BC                     _keeloq_classic_decrypt_packet:
 17758                           	callstack 21
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;incstack = 0
 17765  0090BC  0E04               	movlw	4
 17766  0090BE  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17767  0090C0  6E26               	movwf	NormalKeyGen@serial^0,c
 17768  0090C2  0E00               	movlw	0
 17769  0090C4  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17770  0090C6  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17771  0090C8  ECF7  F039         	call	_NormalKeyGen	;wreg free
 17772                           
 17773                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17774  0090CC  0E08               	movlw	8
 17775  0090CE  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17776  0090D0  6E1B               	movwf	Decrypt@packet^0,c
 17777  0090D2  0E00               	movlw	0
 17778  0090D4  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17779  0090D6  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17780  0090D8  EC5E  F03D         	call	_Decrypt	;wreg free
 17781                           
 17782                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17783  0090DC  EE20 F00D          	lfsr	2,13
 17784  0090E0  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17785  0090E2  26D9               	addwf	fsr2l,f,c
 17786  0090E4  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17787  0090E6  22DA               	addwfc	fsr2h,f,c
 17788  0090E8  EE10 F00A          	lfsr	1,10
 17789  0090EC  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17790  0090EE  26E1               	addwf	fsr1l,f,c
 17791  0090F0  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17792  0090F2  22E2               	addwfc	fsr1h,f,c
 17793  0090F4  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17794  0090F8  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17795  0090FC  0E0C               	movlw	12
 17796  0090FE  0100               	movlb	0	; () banked
 17797  009100  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17798  009102                     u25025:
 17799  009102  90D8               	bcf	status,0,c
 17800  009104  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17801  009106  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17802  009108  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17803  00910A  D7FB               	goto	u25025
 17804  00910C  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17805  00910E  0B0F               	andlw	15
 17806  009110  6EDF               	movwf	indf2,c
 17807                           
 17808                           ; BSR set to: 0
 17809  009112  0012               	return		;funcret
 17810  009114                     __end_of_keeloq_classic_decrypt_packet:
 17811                           	callstack 0
 17812                           
 17813 ;; *************** function _NormalKeyGen *****************
 17814 ;; Defined at:
 17815 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17818 ;;		 -> classic_data(16), 
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17821 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17822 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  1    wreg      void 
 17825 ;; Registers used:
 17826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17827 ;; Tracked objects:
 17828 ;;		On entry : 3F/0
 17829 ;;		On exit  : 0/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17833 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17835 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17836 ;;Total ram usage:       18 bytes
 17837 ;; Hardware stack levels used: 1
 17838 ;; Hardware stack levels required when called: 6
 17839 ;; This function calls:
 17840 ;;		_Decrypt
 17841 ;;		_LoadManufCode
 17842 ;;		_memcpy
 17843 ;; This function is called by:
 17844 ;;		_keeloq_classic_decrypt_packet
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           	psect	text60
 17849  0073EE                     __ptext60:
 17850                           	callstack 0
 17851  0073EE                     _NormalKeyGen:
 17852                           	callstack 21
 17853                           
 17854                           ; BSR set to: 0
 17855                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;incstack = 0
 17859  0073EE  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17860  0073F0  6E10               	movwf	memcpy@d1^0,c
 17861  0073F2  6A11               	clrf	(memcpy@d1+1)^0,c
 17862  0073F4  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17863  0073F8  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17864  0073FC  0E00               	movlw	0
 17865  0073FE  6E15               	movwf	(memcpy@n+1)^0,c
 17866  007400  0E04               	movlw	4
 17867  007402  6E14               	movwf	memcpy@n^0,c
 17868  007404  EC8A  F04A         	call	_memcpy	;wreg free
 17869                           
 17870                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17871  007408  0E28               	movlw	low NormalKeyGen@HOPtemp
 17872  00740A  6E10               	movwf	memcpy@d1^0,c
 17873  00740C  6A11               	clrf	(memcpy@d1+1)^0,c
 17874  00740E  0E30               	movlw	low NormalKeyGen@Buffer
 17875  007410  6E12               	movwf	memcpy@s1^0,c
 17876  007412  6A13               	clrf	(memcpy@s1+1)^0,c
 17877  007414  0E00               	movlw	0
 17878  007416  6E15               	movwf	(memcpy@n+1)^0,c
 17879  007418  0E04               	movlw	4
 17880  00741A  6E14               	movwf	memcpy@n^0,c
 17881  00741C  EC8A  F04A         	call	_memcpy	;wreg free
 17882                           
 17883                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17884  007420  0ED9               	movlw	low NormalKeyGen@SEED
 17885  007422  6E10               	movwf	memcpy@d1^0,c
 17886  007424  0E02               	movlw	high NormalKeyGen@SEED
 17887  007426  6E11               	movwf	(memcpy@d1+1)^0,c
 17888  007428  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17889  00742A  6E12               	movwf	memcpy@s1^0,c
 17890  00742C  6A13               	clrf	(memcpy@s1+1)^0,c
 17891  00742E  0E00               	movlw	0
 17892  007430  6E15               	movwf	(memcpy@n+1)^0,c
 17893  007432  0E04               	movlw	4
 17894  007434  6E14               	movwf	memcpy@n^0,c
 17895  007436  EC8A  F04A         	call	_memcpy	;wreg free
 17896                           
 17897                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17898  00743A  0E0F               	movlw	15
 17899  00743C  0102               	movlb	2	; () banked
 17900  00743E  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17901                           
 17902                           ; BSR set to: 2
 17903                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17904  007440  0E30               	movlw	low NormalKeyGen@Buffer
 17905  007442  6E10               	movwf	memcpy@d1^0,c
 17906  007444  6A11               	clrf	(memcpy@d1+1)^0,c
 17907  007446  0ED9               	movlw	low NormalKeyGen@SEED
 17908  007448  6E12               	movwf	memcpy@s1^0,c
 17909  00744A  0E02               	movlw	high NormalKeyGen@SEED
 17910  00744C  6E13               	movwf	(memcpy@s1+1)^0,c
 17911  00744E  0E00               	movlw	0
 17912  007450  6E15               	movwf	(memcpy@n+1)^0,c
 17913  007452  0E04               	movlw	4
 17914  007454  6E14               	movwf	memcpy@n^0,c
 17915  007456  EC8A  F04A         	call	_memcpy	;wreg free
 17916                           
 17917                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17918  00745A  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17919                           
 17920                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17921  00745C  EC08  F04E         	call	_LoadManufCode	;wreg free
 17922                           
 17923                           ; BSR set to: 2
 17924                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17925  007460  0E30               	movlw	low NormalKeyGen@Buffer
 17926  007462  6E1B               	movwf	Decrypt@packet^0,c
 17927  007464  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17928  007466  EC5E  F03D         	call	_Decrypt	;wreg free
 17929                           
 17930                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17931  00746A  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17932  00746C  6E10               	movwf	memcpy@d1^0,c
 17933  00746E  6A11               	clrf	(memcpy@d1+1)^0,c
 17934  007470  0E30               	movlw	low NormalKeyGen@Buffer
 17935  007472  6E12               	movwf	memcpy@s1^0,c
 17936  007474  6A13               	clrf	(memcpy@s1+1)^0,c
 17937  007476  0E00               	movlw	0
 17938  007478  6E15               	movwf	(memcpy@n+1)^0,c
 17939  00747A  0E04               	movlw	4
 17940  00747C  6E14               	movwf	memcpy@n^0,c
 17941  00747E  EC8A  F04A         	call	_memcpy	;wreg free
 17942                           
 17943                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17944  007482  0E30               	movlw	low NormalKeyGen@Buffer
 17945  007484  6E10               	movwf	memcpy@d1^0,c
 17946  007486  6A11               	clrf	(memcpy@d1+1)^0,c
 17947  007488  0ED9               	movlw	low NormalKeyGen@SEED
 17948  00748A  6E12               	movwf	memcpy@s1^0,c
 17949  00748C  0E02               	movlw	high NormalKeyGen@SEED
 17950  00748E  6E13               	movwf	(memcpy@s1+1)^0,c
 17951  007490  0E00               	movlw	0
 17952  007492  6E15               	movwf	(memcpy@n+1)^0,c
 17953  007494  0E04               	movlw	4
 17954  007496  6E14               	movwf	memcpy@n^0,c
 17955  007498  EC8A  F04A         	call	_memcpy	;wreg free
 17956                           
 17957                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17958  00749C  0E60               	movlw	96
 17959  00749E  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17960                           
 17961                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17962  0074A0  EC08  F04E         	call	_LoadManufCode	;wreg free
 17963                           
 17964                           ; BSR set to: 2
 17965                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17966  0074A4  0E30               	movlw	low NormalKeyGen@Buffer
 17967  0074A6  6E1B               	movwf	Decrypt@packet^0,c
 17968  0074A8  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17969  0074AA  EC5E  F03D         	call	_Decrypt	;wreg free
 17970                           
 17971                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17972  0074AE  0ED5               	movlw	low (_DKEY+4)
 17973  0074B0  6E10               	movwf	memcpy@d1^0,c
 17974  0074B2  0E02               	movlw	high (_DKEY+4)
 17975  0074B4  6E11               	movwf	(memcpy@d1+1)^0,c
 17976  0074B6  0E30               	movlw	low NormalKeyGen@Buffer
 17977  0074B8  6E12               	movwf	memcpy@s1^0,c
 17978  0074BA  6A13               	clrf	(memcpy@s1+1)^0,c
 17979  0074BC  0E00               	movlw	0
 17980  0074BE  6E15               	movwf	(memcpy@n+1)^0,c
 17981  0074C0  0E04               	movlw	4
 17982  0074C2  6E14               	movwf	memcpy@n^0,c
 17983  0074C4  EC8A  F04A         	call	_memcpy	;wreg free
 17984                           
 17985                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17986  0074C8  0ED1               	movlw	low _DKEY
 17987  0074CA  6E10               	movwf	memcpy@d1^0,c
 17988  0074CC  0E02               	movlw	high _DKEY
 17989  0074CE  6E11               	movwf	(memcpy@d1+1)^0,c
 17990  0074D0  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17991  0074D2  6E12               	movwf	memcpy@s1^0,c
 17992  0074D4  6A13               	clrf	(memcpy@s1+1)^0,c
 17993  0074D6  0E00               	movlw	0
 17994  0074D8  6E15               	movwf	(memcpy@n+1)^0,c
 17995  0074DA  0E04               	movlw	4
 17996  0074DC  6E14               	movwf	memcpy@n^0,c
 17997  0074DE  EC8A  F04A         	call	_memcpy	;wreg free
 17998                           
 17999                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18000  0074E2  0E30               	movlw	low NormalKeyGen@Buffer
 18001  0074E4  6E10               	movwf	memcpy@d1^0,c
 18002  0074E6  6A11               	clrf	(memcpy@d1+1)^0,c
 18003  0074E8  0E28               	movlw	low NormalKeyGen@HOPtemp
 18004  0074EA  6E12               	movwf	memcpy@s1^0,c
 18005  0074EC  6A13               	clrf	(memcpy@s1+1)^0,c
 18006  0074EE  0E00               	movlw	0
 18007  0074F0  6E15               	movwf	(memcpy@n+1)^0,c
 18008  0074F2  0E04               	movlw	4
 18009  0074F4  6E14               	movwf	memcpy@n^0,c
 18010  0074F6  EC8A  F04A         	call	_memcpy	;wreg free
 18011  0074FA  0012               	return		;funcret
 18012  0074FC                     __end_of_NormalKeyGen:
 18013                           	callstack 0
 18014                           
 18015 ;; *************** function _LoadManufCode *****************
 18016 ;; Defined at:
 18017 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;		None
 18020 ;; Auto vars:     Size  Location     Type
 18021 ;;		None
 18022 ;; Return value:  Size  Location     Type
 18023 ;;                  1    wreg      void 
 18024 ;; Registers used:
 18025 ;;		wreg, status,2
 18026 ;; Tracked objects:
 18027 ;;		On entry : 0/2
 18028 ;;		On exit  : 3F/2
 18029 ;;		Unchanged: 0/0
 18030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;Total ram usage:        0 bytes
 18036 ;; Hardware stack levels used: 1
 18037 ;; Hardware stack levels required when called: 4
 18038 ;; This function calls:
 18039 ;;		Nothing
 18040 ;; This function is called by:
 18041 ;;		_NormalKeyGen
 18042 ;; This function uses a non-reentrant model
 18043 ;;
 18044                           
 18045                           	psect	text61
 18046  009C10                     __ptext61:
 18047                           	callstack 0
 18048  009C10                     _LoadManufCode:
 18049                           	callstack 22
 18050                           
 18051                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18052                           
 18053                           ;incstack = 0
 18054  009C10  0102               	movlb	2	; () banked
 18055  009C12  69D1               	setf	_DKEY& (0+255),b
 18056                           
 18057                           ; BSR set to: 2
 18058                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18059  009C14  0ECA               	movlw	202
 18060  009C16  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18061                           
 18062                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18063  009C18  0E76               	movlw	118
 18064  009C1A  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18065                           
 18066                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18067  009C1C  0E94               	movlw	148
 18068  009C1E  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18069                           
 18070                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18071  009C20  0E22               	movlw	34
 18072  009C22  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18073                           
 18074                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18075  009C24  0E68               	movlw	104
 18076  009C26  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18077                           
 18078                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18079  009C28  0E27               	movlw	39
 18080  009C2A  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18081                           
 18082                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18083  009C2C  0E57               	movlw	87
 18084  009C2E  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18085                           
 18086                           ; BSR set to: 2
 18087  009C30  0012               	return		;funcret
 18088  009C32                     __end_of_LoadManufCode:
 18089                           	callstack 0
 18090                           
 18091 ;; *************** function _Decrypt *****************
 18092 ;; Defined at:
 18093 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18096 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18099 ;;  aux             1   32[COMRAM] unsigned char 
 18100 ;;  p               1   31[COMRAM] char 
 18101 ;;  j               1   30[COMRAM] unsigned char 
 18102 ;;  i               1   29[COMRAM] unsigned char 
 18103 ;;  key             1   28[COMRAM] unsigned char 
 18104 ;; Return value:  Size  Location     Type
 18105 ;;                  1    wreg      void 
 18106 ;; Registers used:
 18107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/0
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18114 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18116 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18117 ;;Total ram usage:       11 bytes
 18118 ;; Hardware stack levels used: 1
 18119 ;; Hardware stack levels required when called: 5
 18120 ;; This function calls:
 18121 ;;		_memcpy
 18122 ;; This function is called by:
 18123 ;;		_NormalKeyGen
 18124 ;;		_keeloq_classic_decrypt_packet
 18125 ;; This function uses a non-reentrant model
 18126 ;;
 18127                           
 18128                           	psect	text62
 18129  007ABC                     __ptext62:
 18130                           	callstack 0
 18131  007ABC                     _Decrypt:
 18132                           	callstack 21
 18133                           
 18134                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18135                           
 18136                           ; BSR set to: 2
 18137                           ;incstack = 0
 18138  007ABC  0E22               	movlw	low Decrypt@Buffer
 18139  007ABE  6E10               	movwf	memcpy@d1^0,c
 18140  007AC0  6A11               	clrf	(memcpy@d1+1)^0,c
 18141  007AC2  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18142  007AC6  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18143  007ACA  0E00               	movlw	0
 18144  007ACC  6E15               	movwf	(memcpy@n+1)^0,c
 18145  007ACE  0E04               	movlw	4
 18146  007AD0  6E14               	movwf	memcpy@n^0,c
 18147  007AD2  EC8A  F04A         	call	_memcpy	;wreg free
 18148                           
 18149                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18150  007AD6  0E01               	movlw	1
 18151  007AD8  6E20               	movwf	Decrypt@p^0,c
 18152                           
 18153                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18154  007ADA  0E42               	movlw	66
 18155  007ADC  6E1F               	movwf	Decrypt@j^0,c
 18156  007ADE                     l20640:
 18157                           
 18158                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18159  007ADE  0ED1               	movlw	low _DKEY
 18160  007AE0  2420               	addwf	Decrypt@p^0,w,c
 18161  007AE2  6ED9               	movwf	fsr2l,c
 18162  007AE4  6ADA               	clrf	fsr2h,c
 18163  007AE6  0E02               	movlw	high _DKEY
 18164  007AE8  22DA               	addwfc	fsr2h,f,c
 18165  007AEA  50DF               	movf	indf2,w,c
 18166  007AEC  6E1D               	movwf	Decrypt@key^0,c
 18167  007AEE  0620               	decf	Decrypt@p^0,f,c
 18168                           
 18169                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18170  007AF0  AE20               	btfss	Decrypt@p^0,7,c
 18171  007AF2  D002               	goto	l20648
 18172                           
 18173                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18174  007AF4  0E08               	movlw	8
 18175  007AF6  2620               	addwf	Decrypt@p^0,f,c
 18176  007AF8                     l20648:
 18177                           
 18178                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18179  007AF8  0E08               	movlw	8
 18180  007AFA  6E1E               	movwf	Decrypt@i^0,c
 18181  007AFC                     l1859:
 18182                           
 18183                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18184  007AFC  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18185  007AFE  D006               	goto	l1861
 18186                           
 18187                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18188  007B00  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18189  007B02  D002               	goto	l20658
 18190                           
 18191                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18192  007B04  0E3A               	movlw	58
 18193  007B06  D007               	goto	L81
 18194  007B08                     l20658:
 18195                           
 18196                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18197  007B08  0E5C               	movlw	92
 18198  007B0A  D005               	goto	L81
 18199  007B0C                     l1861:
 18200                           
 18201                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18202  007B0C  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18203  007B0E  D002               	goto	l20662
 18204                           
 18205                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18206  007B10  0E74               	movlw	116
 18207  007B12  D001               	goto	L81
 18208  007B14                     l20662:
 18209                           
 18210                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18211  007B14  0E2E               	movlw	46
 18212  007B16                     L81:
 18213  007B16  6E21               	movwf	Decrypt@aux^0,c
 18214                           
 18215                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18216  007B18  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18217                           
 18218                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18219  007B1A  3A21               	swapf	Decrypt@aux^0,f,c
 18220                           
 18221                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18222  007B1C  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18223  007B1E  D004               	goto	l20670
 18224                           
 18225                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18226  007B20  90D8               	bcf	status,0,c
 18227  007B22  3621               	rlcf	Decrypt@aux^0,f,c
 18228  007B24  90D8               	bcf	status,0,c
 18229  007B26  3621               	rlcf	Decrypt@aux^0,f,c
 18230  007B28                     l20670:
 18231                           
 18232                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18233  007B28  A022               	btfss	Decrypt@Buffer^0,0,c
 18234  007B2A  D002               	goto	l1869
 18235                           
 18236                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18237  007B2C  90D8               	bcf	status,0,c
 18238  007B2E  3621               	rlcf	Decrypt@aux^0,f,c
 18239  007B30                     l1869:
 18240                           
 18241                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18242  007B30  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18243  007B32  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18244  007B34  181D               	xorwf	Decrypt@key^0,w,c
 18245  007B36  1A21               	xorwf	Decrypt@aux^0,f,c
 18246                           
 18247                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18248  007B38  90D8               	bcf	status,0,c
 18249  007B3A  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18250  007B3C  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18251  007B3E  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18252                           
 18253                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18254  007B40  90D8               	bcf	status,0,c
 18255  007B42  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18256  007B44  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18257  007B46  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18258                           
 18259                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18260  007B48  90D8               	bcf	status,0,c
 18261  007B4A  3422               	rlcf	Decrypt@Buffer^0,w,c
 18262  007B4C  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18263  007B4E  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18264                           
 18265                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18266  007B50  90D8               	bcf	status,0,c
 18267  007B52  3421               	rlcf	Decrypt@aux^0,w,c
 18268  007B54  3422               	rlcf	Decrypt@Buffer^0,w,c
 18269  007B56  6E22               	movwf	Decrypt@Buffer^0,c
 18270                           
 18271                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18272  007B58  90D8               	bcf	status,0,c
 18273  007B5A  361D               	rlcf	Decrypt@key^0,f,c
 18274                           
 18275                           ;keeloqDecrypt_MC50.c: 189:         }
 18276  007B5C  061E               	decf	Decrypt@i^0,f,c
 18277  007B5E  501E               	movf	Decrypt@i^0,w,c
 18278  007B60  A4D8               	btfss	status,2,c
 18279  007B62  D7CC               	goto	l1859
 18280                           
 18281                           ;keeloqDecrypt_MC50.c: 190:     }
 18282  007B64  061F               	decf	Decrypt@j^0,f,c
 18283  007B66  501F               	movf	Decrypt@j^0,w,c
 18284  007B68  A4D8               	btfss	status,2,c
 18285  007B6A  D7B9               	goto	l20640
 18286                           
 18287                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18288  007B6C  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18289  007B70  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18290  007B74  0E22               	movlw	low Decrypt@Buffer
 18291  007B76  6E12               	movwf	memcpy@s1^0,c
 18292  007B78  6A13               	clrf	(memcpy@s1+1)^0,c
 18293  007B7A  0E00               	movlw	0
 18294  007B7C  6E15               	movwf	(memcpy@n+1)^0,c
 18295  007B7E  0E04               	movlw	4
 18296  007B80  6E14               	movwf	memcpy@n^0,c
 18297  007B82  EC8A  F04A         	call	_memcpy	;wreg free
 18298  007B86  0012               	return		;funcret
 18299  007B88                     __end_of_Decrypt:
 18300                           	callstack 0
 18301                           
 18302 ;; *************** function _HopCHK *****************
 18303 ;; Defined at:
 18304 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;  data            2   35[COMRAM] PTR struct .
 18307 ;;		 -> classic_data(16), 
 18308 ;; Auto vars:     Size  Location     Type
 18309 ;;  hopDiff         2   37[COMRAM] short 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  1    wreg      enum E10730
 18312 ;; Registers used:
 18313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18314 ;; Tracked objects:
 18315 ;;		On entry : 3F/0
 18316 ;;		On exit  : 3C/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;Total ram usage:        4 bytes
 18324 ;; Hardware stack levels used: 1
 18325 ;; Hardware stack levels required when called: 6
 18326 ;; This function calls:
 18327 ;;		_ReqResync
 18328 ;;		_getHopCode
 18329 ;; This function is called by:
 18330 ;;		_keeloqDecryptPacket
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           	psect	text63
 18335  008466                     __ptext63:
 18336                           	callstack 0
 18337  008466                     _HopCHK:
 18338                           	callstack 22
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18342                           
 18343                           ;incstack = 0
 18344  008466  EE20 F008          	lfsr	2,8
 18345  00846A  5024               	movf	HopCHK@data^0,w,c
 18346  00846C  26D9               	addwf	fsr2l,f,c
 18347  00846E  5025               	movf	(HopCHK@data+1)^0,w,c
 18348  008470  22DA               	addwfc	fsr2h,f,c
 18349  008472  CFDE F07C          	movff	postinc2,_Hop
 18350  008476  CFDD F07D          	movff	postdec2,_Hop+1
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18354  00847A  C024  F016         	movff	HopCHK@data,getHopCode@data
 18355  00847E  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18356  008482  EC1B  F037         	call	_getHopCode	;wreg free
 18357  008486  C016  F28C         	movff	?_getHopCode,_EHop
 18358  00848A  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18359                           
 18360                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18361  00848E  0101               	movlb	1	; () banked
 18362  008490  5199               	movf	_F2Chance& (0+255),w,b
 18363  008492  B4D8               	btfsc	status,2,c
 18364  008494  D010               	goto	l21636
 18365                           
 18366                           ; BSR set to: 1
 18367                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18368  008496  0100               	movlb	0	; () banked
 18369  008498  517C               	movf	_Hop& (0+255),w,b
 18370  00849A  0102               	movlb	2	; () banked
 18371  00849C  198E               	xorwf	_NextHop& (0+255),w,b
 18372  00849E  E10B               	bnz	l21636
 18373  0084A0  0100               	movlb	0	; () banked
 18374  0084A2  517D               	movf	(_Hop+1)& (0+255),w,b
 18375  0084A4  0102               	movlb	2	; () banked
 18376  0084A6  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18377  0084A8  A4D8               	btfss	status,2,c
 18378  0084AA  D005               	goto	l21636
 18379                           
 18380                           ; BSR set to: 2
 18381                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18382  0084AC  0E00               	movlw	0
 18383  0084AE  0101               	movlb	1	; () banked
 18384  0084B0  6F99               	movwf	_F2Chance& (0+255),b
 18385  0084B2                     l21632:
 18386                           
 18387                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18388  0084B2  0E01               	movlw	1
 18389  0084B4  0012               	return	
 18390  0084B6                     l21636:
 18391                           
 18392                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18393  0084B6  0102               	movlb	2	; () banked
 18394  0084B8  518C               	movf	_EHop& (0+255),w,b
 18395  0084BA  0100               	movlb	0	; () banked
 18396  0084BC  5D7C               	subwf	_Hop& (0+255),w,b
 18397  0084BE  6E26               	movwf	HopCHK@hopDiff^0,c
 18398  0084C0  0102               	movlb	2	; () banked
 18399  0084C2  518D               	movf	(_EHop+1)& (0+255),w,b
 18400  0084C4  0100               	movlb	0	; () banked
 18401  0084C6  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18402  0084C8  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18403                           
 18404                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18405  0084CA  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18406  0084CC  D002               	goto	l21644
 18407                           
 18408                           ; BSR set to: 0
 18409                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18410  0084CE  0E0A               	movlw	10
 18411  0084D0  0012               	return	
 18412  0084D2                     l21644:
 18413                           
 18414                           ; BSR set to: 0
 18415  0084D2  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18416  0084D4  D7EE               	goto	l21632
 18417  0084D6  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18418  0084D8  E104               	bnz	u24990
 18419  0084DA  0E11               	movlw	17
 18420  0084DC  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18421  0084DE  A0D8               	btfss	status,0,c
 18422  0084E0  D7E8               	goto	l21632
 18423  0084E2                     u24990:
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18427  0084E2  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18428  0084E6  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18429  0084EA  ECD1  F04E         	call	_ReqResync	;wreg free
 18430  0084EE  0012               	return		;funcret
 18431  0084F0                     __end_of_HopCHK:
 18432                           	callstack 0
 18433                           
 18434 ;; *************** function _getHopCode *****************
 18435 ;; Defined at:
 18436 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;  data            2   21[COMRAM] PTR struct .
 18439 ;;		 -> classic_data(16), 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  tempHop         2   31[COMRAM] unsigned short 
 18442 ;;  i               1   34[COMRAM] unsigned char 
 18443 ;;  tempPos         1   33[COMRAM] char 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  2   21[COMRAM] unsigned short 
 18446 ;; Registers used:
 18447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18448 ;; Tracked objects:
 18449 ;;		On entry : 3F/0
 18450 ;;		On exit  : 3D/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18454 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18456 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;Total ram usage:       14 bytes
 18458 ;; Hardware stack levels used: 1
 18459 ;; Hardware stack levels required when called: 5
 18460 ;; This function calls:
 18461 ;;		_ReqResync
 18462 ;;		___wmul
 18463 ;; This function is called by:
 18464 ;;		_HopCHK
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text64
 18469  006E36                     __ptext64:
 18470                           	callstack 0
 18471  006E36                     _getHopCode:
 18472                           	callstack 22
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18476                           
 18477                           ;incstack = 0
 18478  006E36  0E00               	movlw	0
 18479  006E38  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18480  006E3A  0E00               	movlw	0
 18481  006E3C  6E20               	movwf	getHopCode@tempHop^0,c
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18485  006E3E  6822               	setf	getHopCode@tempPos^0,c
 18486                           
 18487                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18488  006E40  0E00               	movlw	0
 18489  006E42  6E23               	movwf	getHopCode@i^0,c
 18490  006E44                     l20920:
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18494  006E44  EE20 F004          	lfsr	2,4
 18495  006E48  5016               	movf	getHopCode@data^0,w,c
 18496  006E4A  26D9               	addwf	fsr2l,f,c
 18497  006E4C  5017               	movf	(getHopCode@data+1)^0,w,c
 18498  006E4E  22DA               	addwfc	fsr2h,f,c
 18499  006E50  5023               	movf	getHopCode@i^0,w,c
 18500  006E52  0D06               	mullw	6
 18501  006E54  0E00               	movlw	low _listSyncValues
 18502  006E56  24F3               	addwf	243,w,c
 18503  006E58  6EE1               	movwf	fsr1l,c
 18504  006E5A  0E03               	movlw	high _listSyncValues
 18505  006E5C  20F4               	addwfc	prodh,w,c
 18506  006E5E  6EE2               	movwf	fsr1h,c
 18507  006E60  50DE               	movf	postinc2,w,c
 18508  006E62  18E6               	xorwf	postinc1,w,c
 18509  006E64  E118               	bnz	l20926
 18510  006E66  50DE               	movf	postinc2,w,c
 18511  006E68  18E6               	xorwf	postinc1,w,c
 18512  006E6A  E115               	bnz	l20926
 18513  006E6C  50DE               	movf	postinc2,w,c
 18514  006E6E  18E6               	xorwf	postinc1,w,c
 18515  006E70  E112               	bnz	l20926
 18516  006E72  50DE               	movf	postinc2,w,c
 18517  006E74  18E6               	xorwf	postinc1,w,c
 18518  006E76  A4D8               	btfss	status,2,c
 18519  006E78  D00E               	goto	l20926
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18523  006E7A  5023               	movf	getHopCode@i^0,w,c
 18524  006E7C  0D06               	mullw	6
 18525  006E7E  0E04               	movlw	low (_listSyncValues+4)
 18526  006E80  24F3               	addwf	243,w,c
 18527  006E82  6ED9               	movwf	fsr2l,c
 18528  006E84  0E03               	movlw	high (_listSyncValues+4)
 18529  006E86  20F4               	addwfc	prodh,w,c
 18530  006E88  6EDA               	movwf	fsr2h,c
 18531  006E8A  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18532  006E8E  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18536  006E92  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18537  006E96                     l20926:
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;keeloqDecrypt_MC50.c: 278:     }
 18541  006E96  2A23               	incf	getHopCode@i^0,f,c
 18542                           
 18543                           ; BSR set to: 0
 18544  006E98  0E18               	movlw	24
 18545  006E9A  6423               	cpfsgt	getHopCode@i^0,c
 18546  006E9C  D7D3               	goto	l20920
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18550  006E9E  AE22               	btfss	getHopCode@tempPos^0,7,c
 18551  006EA0  D050               	goto	l20946
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18555  006EA2  EE20 F004          	lfsr	2,4
 18556  006EA6  5016               	movf	getHopCode@data^0,w,c
 18557  006EA8  26D9               	addwf	fsr2l,f,c
 18558  006EAA  5017               	movf	(getHopCode@data+1)^0,w,c
 18559  006EAC  22DA               	addwfc	fsr2h,f,c
 18560  006EAE  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18561  006EB2  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18562  006EB6  0E00               	movlw	0
 18563  006EB8  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18564  006EBA  0E06               	movlw	6
 18565  006EBC  6E12               	movwf	___wmul@multiplicand^0,c
 18566  006EBE  ECBD  F04D         	call	___wmul	;wreg free
 18567  006EC2  0E00               	movlw	low _listSyncValues
 18568  006EC4  2410               	addwf	?___wmul^0,w,c
 18569  006EC6  6EE1               	movwf	fsr1l,c
 18570  006EC8  0E03               	movlw	high _listSyncValues
 18571  006ECA  2011               	addwfc	(?___wmul+1)^0,w,c
 18572  006ECC  6EE2               	movwf	fsr1h,c
 18573  006ECE  CFDE FFE6          	movff	postinc2,postinc1
 18574  006ED2  CFDE FFE6          	movff	postinc2,postinc1
 18575  006ED6  CFDE FFE6          	movff	postinc2,postinc1
 18576  006EDA  CFDE FFE6          	movff	postinc2,postinc1
 18577                           
 18578                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18579  006EDE  EE20 F008          	lfsr	2,8
 18580  006EE2  5016               	movf	getHopCode@data^0,w,c
 18581  006EE4  26D9               	addwf	fsr2l,f,c
 18582  006EE6  5017               	movf	(getHopCode@data+1)^0,w,c
 18583  006EE8  22DA               	addwfc	fsr2h,f,c
 18584  006EEA  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18585  006EEE  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18586  006EF2  0E00               	movlw	0
 18587  006EF4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18588  006EF6  0E06               	movlw	6
 18589  006EF8  6E12               	movwf	___wmul@multiplicand^0,c
 18590  006EFA  ECBD  F04D         	call	___wmul	;wreg free
 18591  006EFE  0E04               	movlw	low (_listSyncValues+4)
 18592  006F00  2410               	addwf	?___wmul^0,w,c
 18593  006F02  6EE1               	movwf	fsr1l,c
 18594  006F04  0E03               	movlw	high (_listSyncValues+4)
 18595  006F06  2011               	addwfc	(?___wmul+1)^0,w,c
 18596  006F08  6EE2               	movwf	fsr1h,c
 18597  006F0A  CFDE FFE6          	movff	postinc2,postinc1
 18598  006F0E  CFDD FFE5          	movff	postdec2,postdec1
 18599                           
 18600                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18601  006F12  0100               	movlb	0	; () banked
 18602  006F14  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18603  006F16  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18607  006F18  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18608  006F1A  E104               	bnz	u24030
 18609  006F1C  0E19               	movlw	25
 18610  006F1E  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18611  006F20  A0D8               	btfss	status,0,c
 18612  006F22  D004               	goto	l20940
 18613  006F24                     u24030:
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18617  006F24  0E00               	movlw	0
 18618  006F26  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18619  006F28  0E00               	movlw	0
 18620  006F2A  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18621  006F2C                     l20940:
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18625  006F2C  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18626  006F30  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18627  006F34  ECD1  F04E         	call	_ReqResync	;wreg free
 18628  006F38  6E18               	movwf	??_getHopCode^0,c
 18629  006F3A  5018               	movf	??_getHopCode^0,w,c
 18630  006F3C  6E16               	movwf	?_getHopCode^0,c
 18631  006F3E  6A17               	clrf	(?_getHopCode+1)^0,c
 18632  006F40  0012               	return	
 18633  006F42                     l20946:
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18637  006F42  5022               	movf	getHopCode@tempPos^0,w,c
 18638  006F44  0D06               	mullw	6
 18639  006F46  0E04               	movlw	low (_listSyncValues+4)
 18640  006F48  24F3               	addwf	243,w,c
 18641  006F4A  6ED9               	movwf	fsr2l,c
 18642  006F4C  0E03               	movlw	high (_listSyncValues+4)
 18643  006F4E  20F4               	addwfc	prodh,w,c
 18644  006F50  6EDA               	movwf	fsr2h,c
 18645  006F52  C07C  FFDE         	movff	_Hop,postinc2
 18646  006F56  C07D  FFDD         	movff	_Hop+1,postdec2
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18650  006F5A  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18651  006F5E  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18652  006F62  0012               	return		;funcret
 18653  006F64                     __end_of_getHopCode:
 18654                           	callstack 0
 18655                           
 18656 ;; *************** function _ReqResync *****************
 18657 ;; Defined at:
 18658 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18659 ;; Parameters:    Size  Location     Type
 18660 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18661 ;; Auto vars:     Size  Location     Type
 18662 ;;		None
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  1    wreg      enum E10730
 18665 ;; Registers used:
 18666 ;;		wreg, status,2, status,0
 18667 ;; Tracked objects:
 18668 ;;		On entry : 3F/0
 18669 ;;		On exit  : 3F/2
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;Total ram usage:        2 bytes
 18677 ;; Hardware stack levels used: 1
 18678 ;; Hardware stack levels required when called: 4
 18679 ;; This function calls:
 18680 ;;		Nothing
 18681 ;; This function is called by:
 18682 ;;		_HopCHK
 18683 ;;		_getHopCode
 18684 ;; This function uses a non-reentrant model
 18685 ;;
 18686                           
 18687                           	psect	text65
 18688  009DA2                     __ptext65:
 18689                           	callstack 0
 18690  009DA2                     _ReqResync:
 18691                           	callstack 22
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18695                           
 18696                           ;incstack = 0
 18697  009DA2  0E01               	movlw	1
 18698  009DA4  0101               	movlb	1	; () banked
 18699  009DA6  6F99               	movwf	_F2Chance& (0+255),b
 18700                           
 18701                           ; BSR set to: 1
 18702                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18703  009DA8  0E01               	movlw	1
 18704  009DAA  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18705  009DAC  0102               	movlb	2	; () banked
 18706  009DAE  6F8E               	movwf	_NextHop& (0+255),b
 18707  009DB0  0E00               	movlw	0
 18708  009DB2  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18709  009DB4  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18710                           
 18711                           ; BSR set to: 2
 18712                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18713  009DB6  0E09               	movlw	9
 18714                           
 18715                           ; BSR set to: 2
 18716  009DB8  0012               	return		;funcret
 18717  009DBA                     __end_of_ReqResync:
 18718                           	callstack 0
 18719                           
 18720 ;; *************** function _DecCHK *****************
 18721 ;; Defined at:
 18722 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;  data            2   15[COMRAM] PTR struct .
 18725 ;;		 -> classic_data(16), 
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;		None
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1    wreg      _Bool 
 18730 ;; Registers used:
 18731 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18732 ;; Tracked objects:
 18733 ;;		On entry : 3F/0
 18734 ;;		On exit  : 3F/0
 18735 ;;		Unchanged: 3F/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18741 ;;Total ram usage:        4 bytes
 18742 ;; Hardware stack levels used: 1
 18743 ;; Hardware stack levels required when called: 4
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_keeloqDecryptPacket
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text66
 18752  00977C                     __ptext66:
 18753                           	callstack 0
 18754  00977C                     _DecCHK:
 18755                           	callstack 24
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18759                           
 18760                           ; BSR set to: 2
 18761                           ;incstack = 0
 18762  00977C  EE20 F00D          	lfsr	2,13
 18763  009780  5010               	movf	DecCHK@data^0,w,c
 18764  009782  26D9               	addwf	fsr2l,f,c
 18765  009784  5011               	movf	(DecCHK@data+1)^0,w,c
 18766  009786  22DA               	addwfc	fsr2h,f,c
 18767  009788  50DF               	movf	indf2,w,c
 18768  00978A  6E12               	movwf	??_DecCHK^0,c
 18769  00978C  EE20 F00C          	lfsr	2,12
 18770  009790  5010               	movf	DecCHK@data^0,w,c
 18771  009792  26D9               	addwf	fsr2l,f,c
 18772  009794  5011               	movf	(DecCHK@data+1)^0,w,c
 18773  009796  22DA               	addwfc	fsr2h,f,c
 18774  009798  50DF               	movf	indf2,w,c
 18775  00979A  1812               	xorwf	??_DecCHK^0,w,c
 18776  00979C  6E13               	movwf	(??_DecCHK+1)^0,c
 18777  00979E  0E0F               	movlw	15
 18778  0097A0  1613               	andwf	(??_DecCHK+1)^0,f,c
 18779  0097A2  B4D8               	btfsc	status,2,c
 18780  0097A4  D002               	goto	l21618
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18784  0097A6  0E00               	movlw	0
 18785  0097A8  0012               	return	
 18786  0097AA                     l21618:
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18790  0097AA  0E01               	movlw	1
 18791                           
 18792                           ; BSR set to: 0
 18793  0097AC  0012               	return		;funcret
 18794  0097AE                     __end_of_DecCHK:
 18795                           	callstack 0
 18796                           
 18797 ;; *************** function _DecryptPacket_12BIT *****************
 18798 ;; Defined at:
 18799 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18802 ;;		 -> BufferRF(9), 
 18803 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18804 ;;		 -> classic_data(16), 
 18805 ;; Auto vars:     Size  Location     Type
 18806 ;;  commandType     1   12[BANK0 ] enum E10539
 18807 ;; Return value:  Size  Location     Type
 18808 ;;                  1    wreg      enum E10539
 18809 ;; Registers used:
 18810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18811 ;; Tracked objects:
 18812 ;;		On entry : 3F/0
 18813 ;;		On exit  : 3F/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18820 ;;Total ram usage:        5 bytes
 18821 ;; Hardware stack levels used: 1
 18822 ;; Hardware stack levels required when called: 14
 18823 ;; This function calls:
 18824 ;;		_memcpy
 18825 ;;		_validateRemoteSerialNumber
 18826 ;; This function is called by:
 18827 ;;		_readRFButtons
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text67
 18832  0082C2                     __ptext67:
 18833                           	callstack 0
 18834  0082C2                     _DecryptPacket_12BIT:
 18835                           	callstack 15
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18839                           
 18840                           ; BSR set to: 0
 18841                           ;incstack = 0
 18842  0082C2  0E04               	movlw	4
 18843  0082C4  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18844  0082C6  6E10               	movwf	memcpy@d1^0,c
 18845  0082C8  0E00               	movlw	0
 18846  0082CA  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18847  0082CC  6E11               	movwf	(memcpy@d1+1)^0,c
 18848  0082CE  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18849  0082D2  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18850  0082D6  0E00               	movlw	0
 18851  0082D8  6E15               	movwf	(memcpy@n+1)^0,c
 18852  0082DA  0E04               	movlw	4
 18853  0082DC  6E14               	movwf	memcpy@n^0,c
 18854  0082DE  EC8A  F04A         	call	_memcpy	;wreg free
 18855                           
 18856                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18857  0082E2  0100               	movlb	0	; () banked
 18858  0082E4  EE20 F004          	lfsr	2,4
 18859  0082E8  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18860  0082EA  26D9               	addwf	fsr2l,f,c
 18861  0082EC  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18862  0082EE  22DA               	addwfc	fsr2h,f,c
 18863  0082F0  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18864  0082F4  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18865  0082F8  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18866  0082FC  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18867  008300  0E00               	movlw	0
 18868  008302  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18869  008304  0E0F               	movlw	15
 18870  008306  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18871  008308  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18872  00830A  0E00               	movlw	0
 18873  00830C  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18874  00830E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18875  008310  ECFE  F030         	call	_validateRemoteSerialNumber	;wreg free
 18876  008314  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18880  008316  EE20 F00C          	lfsr	2,12
 18881  00831A  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18882  00831C  26D9               	addwf	fsr2l,f,c
 18883  00831E  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18884  008320  22DA               	addwfc	fsr2h,f,c
 18885  008322  0E00               	movlw	0
 18886  008324  6EDF               	movwf	indf2,c
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18890  008326  EE20 F008          	lfsr	2,8
 18891  00832A  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18892  00832C  26D9               	addwf	fsr2l,f,c
 18893  00832E  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18894  008330  22DA               	addwfc	fsr2h,f,c
 18895  008332  0E00               	movlw	0
 18896  008334  6EDE               	movwf	postinc2,c
 18897  008336  0E00               	movlw	0
 18898  008338  6EDD               	movwf	postdec2,c
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18902  00833A  EE20 F00E          	lfsr	2,14
 18903  00833E  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18904  008340  26D9               	addwf	fsr2l,f,c
 18905  008342  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18906  008344  22DA               	addwfc	fsr2h,f,c
 18907  008346  0E02               	movlw	2
 18908  008348  6EDF               	movwf	indf2,c
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18912  00834A  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18913                           
 18914                           ; BSR set to: 0
 18915  00834C  0012               	return		;funcret
 18916  00834E                     __end_of_DecryptPacket_12BIT:
 18917                           	callstack 0
 18918                           
 18919 ;; *************** function _readInputs *****************
 18920 ;; Defined at:
 18921 ;;		line 528 in file "inputs_MC50.c"
 18922 ;; Parameters:    Size  Location     Type
 18923 ;;		None
 18924 ;; Auto vars:     Size  Location     Type
 18925 ;;		None
 18926 ;; Return value:  Size  Location     Type
 18927 ;;                  1    wreg      void 
 18928 ;; Registers used:
 18929 ;;		wreg, status,2, status,0
 18930 ;; Tracked objects:
 18931 ;;		On entry : 3F/1
 18932 ;;		On exit  : 3E/0
 18933 ;;		Unchanged: 0/0
 18934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18939 ;;Total ram usage:        0 bytes
 18940 ;; Hardware stack levels used: 1
 18941 ;; Hardware stack levels required when called: 4
 18942 ;; This function calls:
 18943 ;;		Nothing
 18944 ;; This function is called by:
 18945 ;;		_main
 18946 ;; This function uses a non-reentrant model
 18947 ;;
 18948                           
 18949                           	psect	text68
 18950  0074FC                     __ptext68:
 18951                           	callstack 0
 18952  0074FC                     _readInputs:
 18953                           	callstack 26
 18954                           
 18955                           ; BSR set to: 1
 18956                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;incstack = 0
 18960  0074FC  0100               	movlb	0	; () banked
 18961  0074FE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18962  007500  A4D8               	btfss	status,2,c
 18963  007502  D006               	goto	l24864
 18964                           
 18965                           ; BSR set to: 0
 18966  007504  0E00               	movlw	0
 18967  007506  B28D               	btfsc	141,1,c	;volatile
 18968  007508  0E01               	movlw	1
 18969  00750A  0101               	movlb	1	; () banked
 18970  00750C  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18971  00750E  D005               	goto	l24866
 18972  007510                     l24864:
 18973                           
 18974                           ; BSR set to: 0
 18975  007510  0E00               	movlw	0
 18976  007512  B48D               	btfsc	141,2,c	;volatile
 18977  007514  0E01               	movlw	1
 18978  007516  0101               	movlb	1	; () banked
 18979  007518  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18980  00751A                     l24866:
 18981                           
 18982                           ; BSR set to: 1
 18983                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18984  00751A  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18985  00751C  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18986  00751E  A4D8               	btfss	status,2,c
 18987  007520  D002               	goto	l1731
 18988                           
 18989                           ; BSR set to: 1
 18990                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18991  007522  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18992                           
 18993                           ;inputs_MC50.c: 544:     }
 18994  007524  D004               	goto	l1732
 18995  007526                     l1731:
 18996                           
 18997                           ; BSR set to: 1
 18998                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18999  007526  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19000                           
 19001                           ; BSR set to: 1
 19002                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19003  00752A  0E00               	movlw	0
 19004  00752C  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19005  00752E                     l1732:
 19006                           
 19007                           ; BSR set to: 1
 19008                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19009  00752E  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19010  007530  A4D8               	btfss	status,2,c
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19014  007532  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19015                           
 19016                           ; BSR set to: 1
 19017                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19018  007536  0100               	movlb	0	; () banked
 19019  007538  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19020  00753A  A4D8               	btfss	status,2,c
 19021  00753C  D006               	goto	l24878
 19022                           
 19023                           ; BSR set to: 0
 19024  00753E  0E00               	movlw	0
 19025  007540  B48D               	btfsc	141,2,c	;volatile
 19026  007542  0E01               	movlw	1
 19027  007544  0101               	movlb	1	; () banked
 19028  007546  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19029  007548  D005               	goto	l24880
 19030  00754A                     l24878:
 19031                           
 19032                           ; BSR set to: 0
 19033  00754A  0E00               	movlw	0
 19034  00754C  B28D               	btfsc	141,1,c	;volatile
 19035  00754E  0E01               	movlw	1
 19036  007550  0101               	movlb	1	; () banked
 19037  007552  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19038  007554                     l24880:
 19039                           
 19040                           ; BSR set to: 1
 19041                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19042  007554  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19043  007556  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19044  007558  A4D8               	btfss	status,2,c
 19045  00755A  D002               	goto	l1736
 19046                           
 19047                           ; BSR set to: 1
 19048                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19049  00755C  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19050                           
 19051                           ;inputs_MC50.c: 573:     }
 19052  00755E  D004               	goto	l1737
 19053  007560                     l1736:
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19057  007560  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19061  007564  0E00               	movlw	0
 19062  007566  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19063  007568                     l1737:
 19064                           
 19065                           ; BSR set to: 1
 19066                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19067  007568  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19068  00756A  A4D8               	btfss	status,2,c
 19069                           
 19070                           ; BSR set to: 1
 19071                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19072  00756C  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19073                           
 19074                           ; BSR set to: 1
 19075                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19076  007570  0E00               	movlw	0
 19077  007572  B88D               	btfsc	141,4,c	;volatile
 19078  007574  0E01               	movlw	1
 19079  007576  6F6A               	movwf	_security& (0+255),b	;volatile
 19080                           
 19081                           ; BSR set to: 1
 19082                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19083  007578  516A               	movf	_security& (0+255),w,b	;volatile
 19084  00757A  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19085  00757C  A4D8               	btfss	status,2,c
 19086  00757E  D002               	goto	l1739
 19087                           
 19088                           ; BSR set to: 1
 19089                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19090  007580  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19091                           
 19092                           ;inputs_MC50.c: 597:     }
 19093  007582  D004               	goto	l1740
 19094  007584                     l1739:
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19098  007584  C16A  F16B         	movff	_security,_security+1	;volatile
 19099                           
 19100                           ; BSR set to: 1
 19101                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19102  007588  0E00               	movlw	0
 19103  00758A  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19104  00758C                     l1740:
 19105                           
 19106                           ; BSR set to: 1
 19107                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19108  00758C  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19109  00758E  A4D8               	btfss	status,2,c
 19110                           
 19111                           ; BSR set to: 1
 19112                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19113  007590  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19114                           
 19115                           ; BSR set to: 1
 19116                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19117  007594  0E00               	movlw	0
 19118  007596  BA8D               	btfsc	141,5,c	;volatile
 19119  007598  0E01               	movlw	1
 19120  00759A  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19121                           
 19122                           ; BSR set to: 1
 19123                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19124  00759C  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19125  00759E  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19126  0075A0  A4D8               	btfss	status,2,c
 19127  0075A2  D002               	goto	l1742
 19128                           
 19129                           ; BSR set to: 1
 19130                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19131  0075A4  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19132                           
 19133                           ;inputs_MC50.c: 619:     }
 19134  0075A6  D004               	goto	l1743
 19135  0075A8                     l1742:
 19136                           
 19137                           ; BSR set to: 1
 19138                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19139  0075A8  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19143  0075AC  0E00               	movlw	0
 19144  0075AE  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19145  0075B0                     l1743:
 19146                           
 19147                           ; BSR set to: 1
 19148                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19149  0075B0  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19150  0075B2  A4D8               	btfss	status,2,c
 19151                           
 19152                           ; BSR set to: 1
 19153                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19154  0075B4  C16D  F170         	movff	_security+3,_security+6	;volatile
 19155                           
 19156                           ; BSR set to: 1
 19157                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19158  0075B8  0E00               	movlw	0
 19159  0075BA  BC8D               	btfsc	141,6,c	;volatile
 19160  0075BC  0E01               	movlw	1
 19161  0075BE  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19162                           
 19163                           ; BSR set to: 1
 19164                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19165  0075C0  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19166  0075C2  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19167  0075C4  A4D8               	btfss	status,2,c
 19168  0075C6  D002               	goto	l1745
 19169                           
 19170                           ; BSR set to: 1
 19171                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19172  0075C8  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19173                           
 19174                           ;inputs_MC50.c: 640:     }
 19175  0075CA  D004               	goto	l1746
 19176  0075CC                     l1745:
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19180  0075CC  C171  F172         	movff	_security+7,_security+8	;volatile
 19181                           
 19182                           ; BSR set to: 1
 19183                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19184  0075D0  0E00               	movlw	0
 19185  0075D2  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19186  0075D4                     l1746:
 19187                           
 19188                           ; BSR set to: 1
 19189                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19190  0075D4  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19191  0075D6  A4D8               	btfss	status,2,c
 19192                           
 19193                           ; BSR set to: 1
 19194                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19195  0075D8  C171  F174         	movff	_security+7,_security+10	;volatile
 19196                           
 19197                           ; BSR set to: 1
 19198                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19199  0075DC  0100               	movlb	0	; () banked
 19200  0075DE  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19201  0075E0  A4D8               	btfss	status,2,c
 19202  0075E2  D00D               	goto	l1748
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19206  0075E4  0101               	movlb	1	; () banked
 19207  0075E6  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19208  0075E8  A4D8               	btfss	status,2,c
 19209  0075EA  D006               	goto	l24926
 19210                           
 19211                           ; BSR set to: 1
 19212  0075EC  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19213  0075EE  A4D8               	btfss	status,2,c
 19214  0075F0  D003               	goto	l24926
 19215                           
 19216                           ; BSR set to: 1
 19217                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19218  0075F2  0E00               	movlw	0
 19219  0075F4  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19220                           
 19221                           ;inputs_MC50.c: 660:         }
 19222  0075F6  0012               	return	
 19223  0075F8                     l24926:
 19224                           
 19225                           ; BSR set to: 1
 19226                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19227  0075F8  0E01               	movlw	1
 19228  0075FA  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19229  0075FC  0012               	return	
 19230  0075FE                     l1748:
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19234  0075FE  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19235  007602  0012               	return		;funcret
 19236  007604                     __end_of_readInputs:
 19237                           	callstack 0
 19238                           
 19239 ;; *************** function _loadNVM_VarSystem *****************
 19240 ;; Defined at:
 19241 ;;		line 151 in file "controlMemory_MC50.c"
 19242 ;; Parameters:    Size  Location     Type
 19243 ;;		None
 19244 ;; Auto vars:     Size  Location     Type
 19245 ;;		None
 19246 ;; Return value:  Size  Location     Type
 19247 ;;                  1    wreg      void 
 19248 ;; Registers used:
 19249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19250 ;; Tracked objects:
 19251 ;;		On entry : 3F/0
 19252 ;;		On exit  : 0/0
 19253 ;;		Unchanged: 0/0
 19254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19259 ;;Total ram usage:        0 bytes
 19260 ;; Hardware stack levels used: 1
 19261 ;; Hardware stack levels required when called: 15
 19262 ;; This function calls:
 19263 ;;		_I2C1_Read1ByteRegister
 19264 ;;		_ResetDefaultMemory
 19265 ;;		_SaveNVM_VarSystem
 19266 ;;		_checkNVM_VarSystem
 19267 ;;		_i2c_readDataBlock
 19268 ;; This function is called by:
 19269 ;;		_main
 19270 ;; This function uses a non-reentrant model
 19271 ;;
 19272                           
 19273                           	psect	text69
 19274  006F64                     __ptext69:
 19275                           	callstack 0
 19276  006F64                     _loadNVM_VarSystem:
 19277                           	callstack 15
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19281                           
 19282                           ;incstack = 0
 19283  006F64  0E00               	movlw	0
 19284  006F66  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19285  006F68  0E50               	movlw	80
 19286  006F6A  ECD6  F047         	call	_I2C1_Read1ByteRegister
 19287  006F6E  0AFF               	xorlw	255
 19288  006F70  A4D8               	btfss	status,2,c
 19289  006F72  D04C               	goto	l24730
 19290  006F74  0E10               	movlw	16
 19291  006F76  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19292  006F78  0E50               	movlw	80
 19293  006F7A  ECD6  F047         	call	_I2C1_Read1ByteRegister
 19294  006F7E  0AFF               	xorlw	255
 19295  006F80  A4D8               	btfss	status,2,c
 19296  006F82  D044               	goto	l24730
 19297                           
 19298                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19299  006F84  0E00               	movlw	0
 19300  006F86  EC31  F034         	call	_ResetDefaultMemory
 19301                           
 19302                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19303  006F8A  0E00               	movlw	0
 19304  006F8C  0100               	movlb	0	; () banked
 19305  006F8E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19306  006F90  0E00               	movlw	0
 19307  006F92  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19308  006F94  0E00               	movlw	0
 19309  006F96  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19310  006F98  0E00               	movlw	0
 19311  006F9A  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19315  006F9C  0E00               	movlw	0
 19316  006F9E  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19317  006FA0  0E00               	movlw	0
 19318  006FA2  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19319  006FA4  0E00               	movlw	0
 19320  006FA6  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19321  006FA8  0E00               	movlw	0
 19322  006FAA  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19326  006FAC  0E00               	movlw	0
 19327  006FAE  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19328  006FB0  0E00               	movlw	0
 19329  006FB2  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19333  006FB4  0E00               	movlw	0
 19334  006FB6  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19335  006FB8  0E00               	movlw	0
 19336  006FBA  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19340  006FBC  0E00               	movlw	0
 19341  006FBE  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19342  006FC0  0E00               	movlw	0
 19343  006FC2  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19344  006FC4  0E00               	movlw	0
 19345  006FC6  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19346  006FC8  0E00               	movlw	0
 19347  006FCA  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19348                           
 19349                           ; BSR set to: 0
 19350                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19351  006FCC  0E00               	movlw	0
 19352  006FCE  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19353  006FD0  0E00               	movlw	0
 19354  006FD2  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19355  006FD4  0E00               	movlw	0
 19356  006FD6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19357  006FD8  0E00               	movlw	0
 19358  006FDA  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19359                           
 19360                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19361  006FDC  0E03               	movlw	3
 19362  006FDE  EC88  F04B         	call	_SaveNVM_VarSystem
 19363                           
 19364                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19365  006FE2  0E00               	movlw	0
 19366  006FE4  0100               	movlb	0	; () banked
 19367  006FE6  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19371  006FE8  0E00               	movlw	0
 19372  006FEA  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19376  006FEC  0E00               	movlw	0
 19377  006FEE  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19378                           
 19379                           ; BSR set to: 0
 19380                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19381  006FF0  0E00               	movlw	0
 19382  006FF2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19383  006FF4  0E00               	movlw	0
 19384  006FF6  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19385  006FF8  0E00               	movlw	0
 19386  006FFA  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19387  006FFC  0E00               	movlw	0
 19388  006FFE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19389                           
 19390                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19391  007000  0E02               	movlw	2
 19392  007002  EC88  F04B         	call	_SaveNVM_VarSystem
 19393                           
 19394                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19395  007006  0E00               	movlw	0
 19396  007008  0100               	movlb	0	; () banked
 19397  00700A  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19398  00700C                     l24730:
 19399                           
 19400                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19401  00700C  0E00               	movlw	0
 19402  00700E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19403  007010  0E00               	movlw	0
 19404  007012  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19405  007014  0E98               	movlw	low _var_sys_NVM
 19406  007016  6E24               	movwf	i2c_readDataBlock@data^0,c
 19407  007018  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19408  00701A  0E00               	movlw	0
 19409  00701C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19410  00701E  0E10               	movlw	16
 19411  007020  6E26               	movwf	i2c_readDataBlock@len^0,c
 19412  007022  0E50               	movlw	80
 19413  007024  ECF2  F044         	call	_i2c_readDataBlock
 19414                           
 19415                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19416  007028  0E00               	movlw	0
 19417  00702A  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19418  00702C  0E10               	movlw	16
 19419  00702E  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19420  007030  0EA8               	movlw	low (_var_sys_NVM+16)
 19421  007032  6E24               	movwf	i2c_readDataBlock@data^0,c
 19422  007034  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19423  007036  0E00               	movlw	0
 19424  007038  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19425  00703A  0E10               	movlw	16
 19426  00703C  6E26               	movwf	i2c_readDataBlock@len^0,c
 19427  00703E  0E50               	movlw	80
 19428  007040  ECF2  F044         	call	_i2c_readDataBlock
 19429                           
 19430                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19431  007044  0E00               	movlw	0
 19432  007046  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19433  007048  0E20               	movlw	32
 19434  00704A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19435  00704C  0EB8               	movlw	low (_var_sys_NVM+32)
 19436  00704E  6E24               	movwf	i2c_readDataBlock@data^0,c
 19437  007050  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19438  007052  0E00               	movlw	0
 19439  007054  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19440  007056  0E10               	movlw	16
 19441  007058  6E26               	movwf	i2c_readDataBlock@len^0,c
 19442  00705A  0E50               	movlw	80
 19443  00705C  ECF2  F044         	call	_i2c_readDataBlock
 19444                           
 19445                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19446  007060  0E00               	movlw	0
 19447  007062  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19448  007064  0E30               	movlw	48
 19449  007066  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19450  007068  0EC8               	movlw	low (_var_sys_NVM+48)
 19451  00706A  6E24               	movwf	i2c_readDataBlock@data^0,c
 19452  00706C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19453  00706E  0E00               	movlw	0
 19454  007070  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19455  007072  0E10               	movlw	16
 19456  007074  6E26               	movwf	i2c_readDataBlock@len^0,c
 19457  007076  0E50               	movlw	80
 19458  007078  ECF2  F044         	call	_i2c_readDataBlock
 19459                           
 19460                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19461  00707C  EC2E  F030         	call	_checkNVM_VarSystem	;wreg free
 19462                           
 19463                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19464  007080  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19465  007084  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19466  007088  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19467  00708C  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19468  007090  0012               	return		;funcret
 19469  007092                     __end_of_loadNVM_VarSystem:
 19470                           	callstack 0
 19471                           
 19472 ;; *************** function _checkNVM_VarSystem *****************
 19473 ;; Defined at:
 19474 ;;		line 326 in file "controlMemory_MC50.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;		None
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;  saveParam       1   57[COMRAM] unsigned char 
 19479 ;; Return value:  Size  Location     Type
 19480 ;;                  1    wreg      void 
 19481 ;; Registers used:
 19482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19483 ;; Tracked objects:
 19484 ;;		On entry : 0/2
 19485 ;;		On exit  : 0/0
 19486 ;;		Unchanged: 0/0
 19487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19491 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19492 ;;Total ram usage:        1 bytes
 19493 ;; Hardware stack levels used: 1
 19494 ;; Hardware stack levels required when called: 14
 19495 ;; This function calls:
 19496 ;;		_SaveNVM_VarSystem
 19497 ;; This function is called by:
 19498 ;;		_loadNVM_VarSystem
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502                           	psect	text70
 19503  00605C                     __ptext70:
 19504                           	callstack 0
 19505  00605C                     _checkNVM_VarSystem:
 19506                           	callstack 15
 19507                           
 19508                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19509                           
 19510                           ;incstack = 0
 19511  00605C  0E00               	movlw	0
 19512  00605E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19513                           
 19514                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19515  006060  0E2D               	movlw	45
 19516  006062  0100               	movlb	0	; () banked
 19517  006064  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19518  006066  D004               	goto	l23010
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19522  006068  0E03               	movlw	3
 19523  00606A  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19524                           
 19525                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19526  00606C  0E01               	movlw	1
 19527  00606E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19528  006070                     l23010:
 19529                           
 19530                           ; BSR set to: 0
 19531                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19532  006070  0E2D               	movlw	45
 19533  006072  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19534  006074  D004               	goto	l1495
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19538  006076  0E03               	movlw	3
 19539  006078  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19540                           
 19541                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19542  00607A  0E01               	movlw	1
 19543  00607C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19544  00607E                     l1495:
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19548  00607E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19549  006080  B4D8               	btfsc	status,2,c
 19550  006082  D003               	goto	u26480
 19551                           
 19552                           ; BSR set to: 0
 19553  006084  0E09               	movlw	9
 19554  006086  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19555  006088  D004               	goto	l23018
 19556  00608A                     u26480:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19560  00608A  0E09               	movlw	9
 19561  00608C  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19562                           
 19563                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19564  00608E  0E01               	movlw	1
 19565  006090  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19566  006092                     l23018:
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19570  006092  0E09               	movlw	9
 19571  006094  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19572  006096  D004               	goto	l23022
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19576  006098  0E00               	movlw	0
 19577  00609A  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19578                           
 19579                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19580  00609C  0E01               	movlw	1
 19581  00609E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19582  0060A0                     l23022:
 19583                           
 19584                           ; BSR set to: 0
 19585                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19586  0060A0  0E63               	movlw	99
 19587  0060A2  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19588  0060A4  D004               	goto	l23026
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19592  0060A6  0E0A               	movlw	10
 19593  0060A8  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19594                           
 19595                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19596  0060AA  0E01               	movlw	1
 19597  0060AC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19598  0060AE                     l23026:
 19599                           
 19600                           ; BSR set to: 0
 19601                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19602  0060AE  0E63               	movlw	99
 19603  0060B0  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19604  0060B2  D004               	goto	l23030
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19608  0060B4  0E00               	movlw	0
 19609  0060B6  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19610                           
 19611                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19612  0060B8  0E01               	movlw	1
 19613  0060BA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19614  0060BC                     l23030:
 19615                           
 19616                           ; BSR set to: 0
 19617                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19618  0060BC  0E63               	movlw	99
 19619  0060BE  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19620  0060C0  D004               	goto	l23034
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19624  0060C2  0E00               	movlw	0
 19625  0060C4  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19626                           
 19627                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19628  0060C6  0E01               	movlw	1
 19629  0060C8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19630  0060CA                     l23034:
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19634  0060CA  0E01               	movlw	1
 19635  0060CC  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19636  0060CE  D004               	goto	l23038
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19640  0060D0  0E00               	movlw	0
 19641  0060D2  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19642                           
 19643                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19644  0060D4  0E01               	movlw	1
 19645  0060D6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19646  0060D8                     l23038:
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19650  0060D8  0E01               	movlw	1
 19651  0060DA  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19652  0060DC  D004               	goto	l23042
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19656  0060DE  0E00               	movlw	0
 19657  0060E0  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19658                           
 19659                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19660  0060E2  0E01               	movlw	1
 19661  0060E4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19662  0060E6                     l23042:
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19666  0060E6  0E01               	movlw	1
 19667  0060E8  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19668  0060EA  D004               	goto	l23046
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19672  0060EC  0E00               	movlw	0
 19673  0060EE  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19674                           
 19675                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19676  0060F0  0E01               	movlw	1
 19677  0060F2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19678  0060F4                     l23046:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19682  0060F4  0E01               	movlw	1
 19683  0060F6  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19684  0060F8  D004               	goto	l23050
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19688  0060FA  0E01               	movlw	1
 19689  0060FC  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19690                           
 19691                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19692  0060FE  0E01               	movlw	1
 19693  006100  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19694  006102                     l23050:
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19698  006102  0E01               	movlw	1
 19699  006104  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19700  006106  D004               	goto	l23054
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19704  006108  0E00               	movlw	0
 19705  00610A  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19706                           
 19707                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19708  00610C  0E01               	movlw	1
 19709  00610E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19710  006110                     l23054:
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19714  006110  0E02               	movlw	2
 19715  006112  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19716  006114  D004               	goto	l23058
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19720  006116  0E00               	movlw	0
 19721  006118  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19722                           
 19723                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19724  00611A  0E01               	movlw	1
 19725  00611C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19726  00611E                     l23058:
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19730  00611E  0E03               	movlw	3
 19731  006120  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19732  006122  D004               	goto	l23062
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19736  006124  0E00               	movlw	0
 19737  006126  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19738                           
 19739                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19740  006128  0E01               	movlw	1
 19741  00612A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19742  00612C                     l23062:
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19746  00612C  0E01               	movlw	1
 19747  00612E  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19748  006130  D004               	goto	l23066
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19752  006132  0E00               	movlw	0
 19753  006134  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19754                           
 19755                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19756  006136  0E01               	movlw	1
 19757  006138  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19758  00613A                     l23066:
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19762  00613A  0E09               	movlw	9
 19763  00613C  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19764  00613E  D004               	goto	l23070
 19765                           
 19766                           ; BSR set to: 0
 19767                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19768  006140  0E00               	movlw	0
 19769  006142  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19770                           
 19771                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19772  006144  0E01               	movlw	1
 19773  006146  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19774  006148                     l23070:
 19775                           
 19776                           ; BSR set to: 0
 19777                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19778  006148  0E02               	movlw	2
 19779  00614A  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19780  00614C  D004               	goto	l23074
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19784  00614E  0E00               	movlw	0
 19785  006150  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19786                           
 19787                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19788  006152  0E01               	movlw	1
 19789  006154  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19790  006156                     l23074:
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19794  006156  0E01               	movlw	1
 19795  006158  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19796  00615A  D004               	goto	l23078
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19800  00615C  0E00               	movlw	0
 19801  00615E  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19802                           
 19803                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19804  006160  0E01               	movlw	1
 19805  006162  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19806  006164                     l23078:
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19810  006164  0E09               	movlw	9
 19811  006166  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19812  006168  D004               	goto	l23082
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19816  00616A  0E00               	movlw	0
 19817  00616C  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19818                           
 19819                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19820  00616E  0E01               	movlw	1
 19821  006170  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19822  006172                     l23082:
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19826  006172  0E63               	movlw	99
 19827  006174  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19828  006176  D004               	goto	l23086
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19832  006178  0E03               	movlw	3
 19833  00617A  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19834                           
 19835                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19836  00617C  0E01               	movlw	1
 19837  00617E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19838  006180                     l23086:
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19842  006180  0E09               	movlw	9
 19843  006182  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19844  006184  D004               	goto	l23090
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19848  006186  0E00               	movlw	0
 19849  006188  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19850                           
 19851                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19852  00618A  0E01               	movlw	1
 19853  00618C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19854  00618E                     l23090:
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19858  00618E  0E01               	movlw	1
 19859  006190  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19860  006192  D004               	goto	l1517
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19864  006194  0E00               	movlw	0
 19865  006196  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19866                           
 19867                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19868  006198  0E01               	movlw	1
 19869  00619A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19870  00619C                     l1517:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19874  00619C  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19875  00619E  B4D8               	btfsc	status,2,c
 19876  0061A0  D003               	goto	u26690
 19877                           
 19878                           ; BSR set to: 0
 19879  0061A2  0E09               	movlw	9
 19880  0061A4  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19881  0061A6  D004               	goto	l23098
 19882  0061A8                     u26690:
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19886  0061A8  0E05               	movlw	5
 19887  0061AA  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19888                           
 19889                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19890  0061AC  0E01               	movlw	1
 19891  0061AE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19892  0061B0                     l23098:
 19893                           
 19894                           ; BSR set to: 0
 19895                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19896  0061B0  0E03               	movlw	3
 19897  0061B2  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19898  0061B4  D004               	goto	l23102
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19902  0061B6  0E03               	movlw	3
 19903  0061B8  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19904                           
 19905                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19906  0061BA  0E01               	movlw	1
 19907  0061BC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19908  0061BE                     l23102:
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19912  0061BE  0E01               	movlw	1
 19913  0061C0  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19914  0061C2  D004               	goto	l23106
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19918  0061C4  0E00               	movlw	0
 19919  0061C6  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19920                           
 19921                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19922  0061C8  0E01               	movlw	1
 19923  0061CA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19924  0061CC                     l23106:
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19928  0061CC  0E01               	movlw	1
 19929  0061CE  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19930  0061D0  D004               	goto	l23110
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19934  0061D2  0E01               	movlw	1
 19935  0061D4  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19936                           
 19937                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19938  0061D6  0E01               	movlw	1
 19939  0061D8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19940  0061DA                     l23110:
 19941                           
 19942                           ; BSR set to: 0
 19943                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19944  0061DA  0E09               	movlw	9
 19945  0061DC  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19946  0061DE  D004               	goto	l1524
 19947                           
 19948                           ; BSR set to: 0
 19949                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19950  0061E0  0E00               	movlw	0
 19951  0061E2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19952                           
 19953                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19954  0061E4  0E01               	movlw	1
 19955  0061E6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19956  0061E8                     l1524:
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19960  0061E8  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19961  0061EA  B4D8               	btfsc	status,2,c
 19962  0061EC  0012               	return	
 19963                           
 19964                           ; BSR set to: 0
 19965                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19966  0061EE  0E00               	movlw	0
 19967  0061F0  EC88  F04B         	call	_SaveNVM_VarSystem
 19968                           
 19969                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19970  0061F4  0E01               	movlw	1
 19971  0061F6  EC88  F04B         	call	_SaveNVM_VarSystem
 19972  0061FA  0012               	return		;funcret
 19973  0061FC                     __end_of_checkNVM_VarSystem:
 19974                           	callstack 0
 19975                           
 19976 ;; *************** function _ResetDefaultMemory *****************
 19977 ;; Defined at:
 19978 ;;		line 198 in file "controlMemory_MC50.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;  type            1    wreg     unsigned char 
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;  type            1   57[COMRAM] unsigned char 
 19983 ;; Return value:  Size  Location     Type
 19984 ;;                  1    wreg      void 
 19985 ;; Registers used:
 19986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19987 ;; Tracked objects:
 19988 ;;		On entry : 31/0
 19989 ;;		On exit  : 0/0
 19990 ;;		Unchanged: 0/0
 19991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19996 ;;Total ram usage:        1 bytes
 19997 ;; Hardware stack levels used: 1
 19998 ;; Hardware stack levels required when called: 14
 19999 ;; This function calls:
 20000 ;;		_SaveNVM_VarSystem
 20001 ;; This function is called by:
 20002 ;;		_loadNVM_VarSystem
 20003 ;;		_sm_execute_menuConfiguration
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           	psect	text71
 20008  006862                     __ptext71:
 20009                           	callstack 0
 20010  006862                     _ResetDefaultMemory:
 20011                           	callstack 14
 20012                           
 20013                           ;incstack = 0
 20014                           ;ResetDefaultMemory@type stored from wreg
 20015  006862  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20016                           
 20017                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 20018  006864  0E03               	movlw	3
 20019  006866  0100               	movlb	0	; () banked
 20020  006868  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20021                           
 20022                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 20023  00686A  0E09               	movlw	9
 20024  00686C  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20025                           
 20026                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 20027  00686E  0E03               	movlw	3
 20028  006870  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20029                           
 20030                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 20031  006872  0E00               	movlw	0
 20032  006874  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20033                           
 20034                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 20035  006876  0E00               	movlw	0
 20036  006878  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20037                           
 20038                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 20039  00687A  0E00               	movlw	0
 20040  00687C  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20041                           
 20042                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 20043  00687E  0E01               	movlw	1
 20044  006880  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20045                           
 20046                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 20047  006882  0E00               	movlw	0
 20048  006884  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20049                           
 20050                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 20051  006886  0E00               	movlw	0
 20052  006888  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20053                           
 20054                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 20055  00688A  0E00               	movlw	0
 20056  00688C  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20057                           
 20058                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 20059  00688E  0E00               	movlw	0
 20060  006890  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20061                           
 20062                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 20063  006892  0E00               	movlw	0
 20064  006894  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20065                           
 20066                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 20067  006896  0E00               	movlw	0
 20068  006898  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20069                           
 20070                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 20071  00689A  0E03               	movlw	3
 20072  00689C  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20073                           
 20074                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 20075  00689E  0E00               	movlw	0
 20076  0068A0  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20077                           
 20078                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 20079  0068A2  0E00               	movlw	0
 20080  0068A4  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20081                           
 20082                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20083  0068A6  0E00               	movlw	0
 20084  0068A8  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20085                           
 20086                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20087  0068AA  0E01               	movlw	1
 20088  0068AC  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20092  0068AE  503A               	movf	ResetDefaultMemory@type^0,w,c
 20093  0068B0  A4D8               	btfss	status,2,c
 20094  0068B2  D014               	goto	l21344
 20095                           
 20096                           ; BSR set to: 0
 20097                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20098  0068B4  0E00               	movlw	0
 20099  0068B6  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20100                           
 20101                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20102  0068B8  0E00               	movlw	0
 20103  0068BA  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20104                           
 20105                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20106  0068BC  0E00               	movlw	0
 20107  0068BE  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20108                           
 20109                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20110  0068C0  0E00               	movlw	0
 20111  0068C2  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20112                           
 20113                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20114  0068C4  0E00               	movlw	0
 20115  0068C6  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20116                           
 20117                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20118  0068C8  0E05               	movlw	5
 20119  0068CA  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20120                           
 20121                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20122  0068CC  0E03               	movlw	3
 20123  0068CE  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20124                           
 20125                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20126  0068D0  0E00               	movlw	0
 20127  0068D2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20128                           
 20129                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20130  0068D4  0E00               	movlw	0
 20131  0068D6  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20132                           
 20133                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20134  0068D8  0E0A               	movlw	10
 20135  0068DA  D039               	goto	L82
 20136  0068DC                     l21344:
 20137                           
 20138                           ; BSR set to: 0
 20139  0068DC  043A               	decf	ResetDefaultMemory@type^0,w,c
 20140  0068DE  A4D8               	btfss	status,2,c
 20141  0068E0  D01B               	goto	l21348
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20145  0068E2  0E04               	movlw	4
 20146  0068E4  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20147                           
 20148                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20149  0068E6  0E04               	movlw	4
 20150  0068E8  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20151                           
 20152                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20153  0068EA  0E04               	movlw	4
 20154  0068EC  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20155                           
 20156                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20157  0068EE  0E01               	movlw	1
 20158  0068F0  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20159                           
 20160                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20161  0068F2  0E01               	movlw	1
 20162  0068F4  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20163                           
 20164                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20165  0068F6  0E00               	movlw	0
 20166  0068F8  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20167                           
 20168                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20169  0068FA  0E00               	movlw	0
 20170  0068FC  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20171                           
 20172                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20173  0068FE  0E05               	movlw	5
 20174  006900  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20175                           
 20176                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20177  006902  0E03               	movlw	3
 20178  006904  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20179                           
 20180                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20181  006906  0E00               	movlw	0
 20182  006908  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20183                           
 20184                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20185  00690A  0E05               	movlw	5
 20186  00690C  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20187                           
 20188                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20189  00690E  0E00               	movlw	0
 20190  006910  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20191                           
 20192                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20193  006912  0E00               	movlw	0
 20194  006914  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20195                           
 20196                           ;controlMemory_MC50.c: 251:     }
 20197  006916  D01C               	goto	l21352
 20198  006918                     l21348:
 20199                           
 20200                           ; BSR set to: 0
 20201  006918  0E02               	movlw	2
 20202  00691A  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20203  00691C  A4D8               	btfss	status,2,c
 20204  00691E  D018               	goto	l21352
 20205                           
 20206                           ; BSR set to: 0
 20207                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20208  006920  0E06               	movlw	6
 20209  006922  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20210                           
 20211                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20212  006924  0E02               	movlw	2
 20213  006926  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20214                           
 20215                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20216  006928  0E00               	movlw	0
 20217  00692A  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20218                           
 20219                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20220  00692C  0E00               	movlw	0
 20221  00692E  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20222                           
 20223                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20224  006930  0E00               	movlw	0
 20225  006932  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20226                           
 20227                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20228  006934  0E00               	movlw	0
 20229  006936  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20230                           
 20231                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20232  006938  0E02               	movlw	2
 20233  00693A  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20234                           
 20235                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20236  00693C  0E05               	movlw	5
 20237  00693E  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20238                           
 20239                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20240  006940  0E01               	movlw	1
 20241  006942  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20242                           
 20243                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20244  006944  0E05               	movlw	5
 20245  006946  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20246                           
 20247                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20248  006948  0E00               	movlw	0
 20249  00694A  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20250                           
 20251                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20252  00694C  0E00               	movlw	0
 20253  00694E                     L82:
 20254  00694E  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20255  006950                     l21352:
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20259  006950  0E01               	movlw	1
 20260  006952  EC88  F04B         	call	_SaveNVM_VarSystem
 20261                           
 20262                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20263  006956  0E00               	movlw	0
 20264  006958  EC88  F04B         	call	_SaveNVM_VarSystem
 20265                           
 20266                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20267  00695C  0E00               	movlw	0
 20268  00695E  0100               	movlb	0	; () banked
 20269  006960  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20270  006962  0E00               	movlw	0
 20271  006964  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20272  006966  0E00               	movlw	0
 20273  006968  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20274  00696A  0E00               	movlw	0
 20275  00696C  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20276                           
 20277                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20278  00696E  0E00               	movlw	0
 20279  006970  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20280  006972  0E00               	movlw	0
 20281  006974  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20282  006976  0E00               	movlw	0
 20283  006978  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20284  00697A  0E00               	movlw	0
 20285  00697C  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20286                           
 20287                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20288  00697E  0E00               	movlw	0
 20289  006980  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20290  006982  0E00               	movlw	0
 20291  006984  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20292                           
 20293                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20294  006986  0E00               	movlw	0
 20295  006988  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20296  00698A  0E00               	movlw	0
 20297  00698C  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20298                           
 20299                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20300  00698E  0E00               	movlw	0
 20301  006990  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20302  006992  0E00               	movlw	0
 20303  006994  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20304  006996  0E00               	movlw	0
 20305  006998  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20306  00699A  0E00               	movlw	0
 20307  00699C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20308                           
 20309                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20310  00699E  0E00               	movlw	0
 20311  0069A0  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20312  0069A2  0E00               	movlw	0
 20313  0069A4  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20314  0069A6  0E00               	movlw	0
 20315  0069A8  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20316  0069AA  0E00               	movlw	0
 20317  0069AC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20318                           
 20319                           ; BSR set to: 0
 20320                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20321  0069AE  A48D               	btfss	141,2,c	;volatile
 20322                           
 20323                           ; BSR set to: 0
 20324  0069B0  B28D               	btfsc	141,1,c	;volatile
 20325  0069B2  D015               	goto	l21366
 20326                           
 20327                           ; BSR set to: 0
 20328  0069B4  A08E               	btfss	142,0,c	;volatile
 20329                           
 20330                           ; BSR set to: 0
 20331  0069B6  BA8D               	btfsc	141,5,c	;volatile
 20332  0069B8  D012               	goto	l21366
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20336  0069BA  0E00               	movlw	0
 20337  0069BC  0101               	movlb	1	; () banked
 20338  0069BE  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20339  0069C0  0E00               	movlw	0
 20340  0069C2  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20341  0069C4  0E00               	movlw	0
 20342  0069C6  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20343  0069C8  0E00               	movlw	0
 20344  0069CA  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20345                           
 20346                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20347  0069CC  0E00               	movlw	0
 20348  0069CE  0100               	movlb	0	; () banked
 20349  0069D0  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20350  0069D2  0E00               	movlw	0
 20351  0069D4  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20352  0069D6  0E00               	movlw	0
 20353  0069D8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20354  0069DA  0E00               	movlw	0
 20355  0069DC  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20356  0069DE                     l21366:
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20360  0069DE  0E02               	movlw	2
 20361  0069E0  EC88  F04B         	call	_SaveNVM_VarSystem
 20362                           
 20363                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20364  0069E4  0E03               	movlw	3
 20365  0069E6  EC88  F04B         	call	_SaveNVM_VarSystem
 20366  0069EA  0012               	return		;funcret
 20367  0069EC                     __end_of_ResetDefaultMemory:
 20368                           	callstack 0
 20369                           
 20370 ;; *************** function _I2C1_Read1ByteRegister *****************
 20371 ;; Defined at:
 20372 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20373 ;; Parameters:    Size  Location     Type
 20374 ;;  address         1    wreg     unsigned char 
 20375 ;;  reg             1   33[COMRAM] unsigned char 
 20376 ;; Auto vars:     Size  Location     Type
 20377 ;;  address         1   34[COMRAM] unsigned char 
 20378 ;;  returnValue     1   35[COMRAM] unsigned char 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      unsigned char 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20383 ;; Tracked objects:
 20384 ;;		On entry : 31/0
 20385 ;;		On exit  : 33/2
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20392 ;;Total ram usage:        3 bytes
 20393 ;; Hardware stack levels used: 1
 20394 ;; Hardware stack levels required when called: 12
 20395 ;; This function calls:
 20396 ;;		_I2C1_Close
 20397 ;;		_I2C1_MasterWrite
 20398 ;;		_I2C1_Open
 20399 ;;		_I2C1_SetAddressNackCallback
 20400 ;;		_I2C1_SetBuffer
 20401 ;;		_I2C1_SetDataCompleteCallback
 20402 ;; This function is called by:
 20403 ;;		_loadNVM_VarSystem
 20404 ;; This function uses a non-reentrant model
 20405 ;;
 20406                           
 20407                           	psect	text72
 20408  008FAC                     __ptext72:
 20409                           	callstack 0
 20410  008FAC                     _I2C1_Read1ByteRegister:
 20411                           	callstack 17
 20412                           
 20413                           ;incstack = 0
 20414                           ;I2C1_Read1ByteRegister@address stored from wreg
 20415  008FAC  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20416                           
 20417                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20418  008FAE  0E00               	movlw	0
 20419  008FB0  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20420  008FB2                     l22814:
 20421  008FB2  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20422  008FB4  ECFD  F042         	call	_I2C1_Open
 20423  008FB8  0900               	iorlw	0
 20424  008FBA  B4D8               	btfsc	status,2,c
 20425  008FBC  D7FA               	goto	l22814
 20426                           
 20427                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20428  008FBE  0EAA               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20429  008FC0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20430  008FC2  0E99               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20431  008FC4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20432  008FC6  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20433  008FC8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20434  008FCA  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20435  008FCC  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20436                           
 20437                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20438  008FD0  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20439  008FD2  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20440  008FD4  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20441  008FD6  0E00               	movlw	0
 20442  008FD8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20443  008FDA  0E01               	movlw	1
 20444  008FDC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20445  008FDE  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 20446                           
 20447                           ; BSR set to: 2
 20448                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20449  008FE2  0E00               	movlw	0
 20450  008FE4  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20451  008FE6  0E00               	movlw	0
 20452  008FE8  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20453  008FEA  0E00               	movlw	0
 20454  008FEC  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20455  008FEE  0E00               	movlw	0
 20456  008FF0  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20457  008FF2  ECE9  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 20458                           
 20459                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20460  008FF6  ECB7  F04F         	call	_I2C1_MasterWrite	;wreg free
 20461  008FFA                     l22824:
 20462  008FFA  EC2A  F04E         	call	_I2C1_Close	;wreg free
 20463  008FFE  06E8               	decf	wreg,f,c
 20464  009000  B4D8               	btfsc	status,2,c
 20465  009002  D7FB               	goto	l22824
 20466                           
 20467                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20468  009004  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20469  009006  0012               	return		;funcret
 20470  009008                     __end_of_I2C1_Read1ByteRegister:
 20471                           	callstack 0
 20472                           
 20473 ;; *************** function _getKeyPressed *****************
 20474 ;; Defined at:
 20475 ;;		line 217 in file "inputs_MC50.c"
 20476 ;; Parameters:    Size  Location     Type
 20477 ;;		None
 20478 ;; Auto vars:     Size  Location     Type
 20479 ;;  temp            1   15[COMRAM] char 
 20480 ;; Return value:  Size  Location     Type
 20481 ;;                  1    wreg      char 
 20482 ;; Registers used:
 20483 ;;		wreg, status,2, status,0
 20484 ;; Tracked objects:
 20485 ;;		On entry : 3E/1
 20486 ;;		On exit  : 3D/0
 20487 ;;		Unchanged: 0/0
 20488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;Total ram usage:        1 bytes
 20494 ;; Hardware stack levels used: 1
 20495 ;; Hardware stack levels required when called: 4
 20496 ;; This function calls:
 20497 ;;		Nothing
 20498 ;; This function is called by:
 20499 ;;		_main
 20500 ;; This function uses a non-reentrant model
 20501 ;;
 20502                           
 20503                           	psect	text73
 20504  009DBA                     __ptext73:
 20505                           	callstack 0
 20506  009DBA                     _getKeyPressed:
 20507                           	callstack 26
 20508                           
 20509                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20510                           
 20511                           ;incstack = 0
 20512  009DBA  6810               	setf	getKeyPressed@temp^0,c
 20513                           
 20514                           ;inputs_MC50.c: 219:     if(RFFull)
 20515  009DBC  0100               	movlb	0	; () banked
 20516  009DBE  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20517  009DC0  B4D8               	btfsc	status,2,c
 20518  009DC2  D005               	goto	l24758
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20522  009DC4  0102               	movlb	2	; () banked
 20523  009DC6  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 20524  009DC8  0B0F               	andlw	15
 20525  009DCA  0B0F               	andlw	15
 20526  009DCC  6E10               	movwf	getKeyPressed@temp^0,c
 20527  009DCE                     l24758:
 20528                           
 20529                           ;inputs_MC50.c: 223:     return temp;
 20530  009DCE  5010               	movf	getKeyPressed@temp^0,w,c
 20531  009DD0  0012               	return		;funcret
 20532  009DD2                     __end_of_getKeyPressed:
 20533                           	callstack 0
 20534                           
 20535 ;; *************** function _eusartparser *****************
 20536 ;; Defined at:
 20537 ;;		line 391 in file "eusartparser.c"
 20538 ;; Parameters:    Size  Location     Type
 20539 ;;  package         2    8[BANK0 ] PTR struct package_t
 20540 ;;		 -> main@package(7), 
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;  i               1   28[BANK0 ] unsigned char 
 20543 ;;  i               1   25[BANK0 ] unsigned char 
 20544 ;;  i               1   29[BANK0 ] unsigned char 
 20545 ;;  i               1   26[BANK0 ] unsigned char 
 20546 ;;  i               1   30[BANK0 ] unsigned char 
 20547 ;;  i               1   24[BANK0 ] unsigned char 
 20548 ;;  i               1   23[BANK0 ] unsigned char 
 20549 ;;  i               1   19[BANK0 ] unsigned char 
 20550 ;;  i               1   18[BANK0 ] unsigned char 
 20551 ;;  i               1   27[BANK0 ] unsigned char 
 20552 ;;  i               1   22[BANK0 ] unsigned char 
 20553 ;;  i               1   21[BANK0 ] unsigned char 
 20554 ;;  i               1   17[BANK0 ] unsigned char 
 20555 ;;  i               1   16[BANK0 ] unsigned char 
 20556 ;;  a               7    0        struct package_t
 20557 ;;  serial          4   32[BANK0 ] unsigned long 
 20558 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20559 ;;  pos             1   20[BANK0 ] unsigned char 
 20560 ;; Return value:  Size  Location     Type
 20561 ;;                  1    wreg      void 
 20562 ;; Registers used:
 20563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20564 ;; Tracked objects:
 20565 ;;		On entry : 3F/0
 20566 ;;		On exit  : 0/0
 20567 ;;		Unchanged: 0/0
 20568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20570 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20571 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20572 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20573 ;;Total ram usage:       28 bytes
 20574 ;; Hardware stack levels used: 1
 20575 ;; Hardware stack levels required when called: 14
 20576 ;; This function calls:
 20577 ;;		_ReadSerial
 20578 ;;		_RemoveSerial
 20579 ;;		_SaveNVM_VarSystem
 20580 ;;		_cmdMemoryIsEmpty
 20581 ;;		_confirmpackage
 20582 ;;		_read_eusartparser
 20583 ;;		_saveNewSerial
 20584 ;;		_updateChangesToUart
 20585 ;;		_validateRemoteSerialNumber
 20586 ;;		_write_eusartparser
 20587 ;;		_write_package
 20588 ;; This function is called by:
 20589 ;;		_main
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text74
 20594  000F22                     __ptext74:
 20595                           	callstack 0
 20596  000F22                     _eusartparser:
 20597                           	callstack 16
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;eusartparser.c: 392:     struct package_t a;;eusartparser.c: 393:     uint8_t relcounte
      +                          r;;eusartparser.c: 394:     static _Bool save_f=0;;eusartparser.c: 395:     static uint1
      +                          6_t buffer=0x0000;;eusartparser.c: 396:     uint32_t serial;;eusartparser.c: 397:     ch
      +                          ar pos;;eusartparser.c: 399:     switch(package->functioncode){
 20601                           
 20602                           ;incstack = 0
 20603  000F22  EF12  F00C         	goto	l28020
 20604  000F26                     l27574:
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;eusartparser.c: 401:             read_eusartparser(package);
 20608  000F26  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20609  000F2A  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 20610  000F2E  EC9C  F014         	call	_read_eusartparser	;wreg free
 20611  000F32                     l27576:
 20612                           
 20613                           ;eusartparser.c: 402:             confirmpackage(package, 1);
 20614  000F32  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20615  000F36  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20616  000F3A  0E01               	movlw	1
 20617  000F3C  6E14               	movwf	confirmpackage@confirm^0,c
 20618  000F3E  EC04  F048         	call	_confirmpackage	;wreg free
 20619  000F42                     l27578:
 20620                           
 20621                           ;eusartparser.c: 403:             write_package(*package);
 20622  000F42  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20623  000F46  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20624  000F4A  EE00  F011         	lfsr	0,write_package@package
 20625  000F4E  0E06               	movlw	6
 20626  000F50                     u33581:
 20627  000F50  CFDB FFEB          	movff	plusw2,plusw0
 20628  000F54  06E8               	decf	wreg,f,c
 20629  000F56  E2FC               	bc	u33581
 20630  000F58  EC67  F04C         	call	_write_package	;wreg free
 20631                           
 20632                           ;eusartparser.c: 404:             break;
 20633  000F5C  0012               	return	
 20634  000F5E                     l27580:
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;eusartparser.c: 407:             done_changes=1;
 20638  000F5E  0E01               	movlw	1
 20639  000F60  0101               	movlb	1	; () banked
 20640  000F62  6F8E               	movwf	_done_changes& (0+255),b
 20641                           
 20642                           ;eusartparser.c: 408:             if(programmer_enable){
 20643  000F64  0100               	movlb	0	; () banked
 20644  000F66  5185               	movf	_programmer_enable& (0+255),w,b
 20645  000F68  B4D8               	btfsc	status,2,c
 20646  000F6A  D00E               	goto	l27588
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;eusartparser.c: 409:                 write_eusartparser(*package);
 20650  000F6C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20651  000F70  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20652  000F74  EE00  F010         	lfsr	0,write_eusartparser@package
 20653  000F78  0E06               	movlw	6
 20654  000F7A                     u33601:
 20655  000F7A  CFDB FFEB          	movff	plusw2,plusw0
 20656  000F7E  06E8               	decf	wreg,f,c
 20657  000F80  E2FC               	bc	u33601
 20658  000F82  ECE2  F017         	call	_write_eusartparser	;wreg free
 20659  000F86  D7D5               	goto	l27576
 20660  000F88                     l27588:
 20661                           
 20662                           ;eusartparser.c: 414:                 confirmpackage(package, 0);
 20663  000F88  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20664  000F8C  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20665  000F90  0E00               	movlw	0
 20666  000F92  6E14               	movwf	confirmpackage@confirm^0,c
 20667  000F94  EC04  F048         	call	_confirmpackage	;wreg free
 20668  000F98  D7D4               	goto	l27578
 20669  000F9A                     l27592:
 20670                           
 20671                           ; BSR set to: 0
 20672                           ;eusartparser.c: 420:             if(programmer_enable){
 20673  000F9A  5185               	movf	_programmer_enable& (0+255),w,b
 20674  000F9C  B4D8               	btfsc	status,2,c
 20675  000F9E  D010               	goto	l27604
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;eusartparser.c: 421:                 SaveNVM_VarSystem(pageMemoryE);
 20679  000FA0  0E01               	movlw	1
 20680  000FA2  EC88  F04B         	call	_SaveNVM_VarSystem
 20681                           
 20682                           ;eusartparser.c: 422:                 SaveNVM_VarSystem(pageMemoryP);
 20683  000FA6  0E00               	movlw	0
 20684  000FA8  EC88  F04B         	call	_SaveNVM_VarSystem
 20685                           
 20686                           ;eusartparser.c: 423:                 if(done_changes==1)
 20687  000FAC  0101               	movlb	1	; () banked
 20688  000FAE  058E               	decf	_done_changes& (0+255),w,b
 20689  000FB0  B4D8               	btfsc	status,2,c
 20690                           
 20691                           ; BSR set to: 1
 20692                           ;eusartparser.c: 424:                     updateChangesToUart();
 20693  000FB2  ECD7  F04B         	call	_updateChangesToUart	;wreg free
 20694                           
 20695                           ;eusartparser.c: 425:                 done_changes=0;
 20696  000FB6  0E00               	movlw	0
 20697  000FB8  0101               	movlb	1	; () banked
 20698  000FBA  6F8E               	movwf	_done_changes& (0+255),b
 20699                           
 20700                           ; BSR set to: 1
 20701                           ;eusartparser.c: 426:                 programmer_enable=0;
 20702  000FBC  0E00               	movlw	0
 20703  000FBE  D005               	goto	L83
 20704  000FC0                     l27604:
 20705                           
 20706                           ; BSR set to: 0
 20707                           ;eusartparser.c: 429:                 if((sm_state_Main_t)main_stateMachine.current_stat
      +                          e==st_standBy)
 20708  000FC0  0101               	movlb	1	; () banked
 20709  000FC2  51F1               	movf	_main_stateMachine& (0+255),w,b
 20710  000FC4  A4D8               	btfss	status,2,c
 20711  000FC6  D004               	goto	l27608
 20712                           
 20713                           ; BSR set to: 1
 20714                           ;eusartparser.c: 430:                     programmer_enable=1;
 20715  000FC8  0E01               	movlw	1
 20716  000FCA                     L83:
 20717  000FCA  0100               	movlb	0	; () banked
 20718  000FCC  6F85               	movwf	_programmer_enable& (0+255),b
 20719  000FCE  D019               	goto	l27616
 20720  000FD0                     l27608:
 20721                           
 20722                           ; BSR set to: 1
 20723                           ;eusartparser.c: 432:                     package->data.data16=(uint16_t)2;
 20724  000FD0  0100               	movlb	0	; () banked
 20725  000FD2  EE20 F002          	lfsr	2,2
 20726  000FD6  51E0               	movf	eusartparser@package& (0+255),w,b
 20727  000FD8  26D9               	addwf	fsr2l,f,c
 20728  000FDA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20729  000FDC  22DA               	addwfc	fsr2h,f,c
 20730  000FDE  0E02               	movlw	2
 20731  000FE0  6EDE               	movwf	postinc2,c
 20732  000FE2  0E00               	movlw	0
 20733  000FE4  6EDD               	movwf	postdec2,c
 20734                           
 20735                           ; BSR set to: 0
 20736                           ;eusartparser.c: 433:                     write_package(*package);
 20737  000FE6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20738  000FEA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20739  000FEE  EE00  F011         	lfsr	0,write_package@package
 20740  000FF2  0E06               	movlw	6
 20741  000FF4                     u33641:
 20742  000FF4  CFDB FFEB          	movff	plusw2,plusw0
 20743  000FF8  06E8               	decf	wreg,f,c
 20744  000FFA  E2FC               	bc	u33641
 20745  000FFC  EC67  F04C         	call	_write_package	;wreg free
 20746  001000  D7C3               	goto	l27588
 20747  001002                     l27616:
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;eusartparser.c: 440:             package->data.data16=(uint16_t)programmer_enable;
 20751  001002  5185               	movf	_programmer_enable& (0+255),w,b
 20752  001004  6FE2               	movwf	??_eusartparser& (0+255),b
 20753  001006  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20754  001008  EE20 F002          	lfsr	2,2
 20755  00100C  51E0               	movf	eusartparser@package& (0+255),w,b
 20756  00100E  26D9               	addwf	fsr2l,f,c
 20757  001010  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20758  001012  22DA               	addwfc	fsr2h,f,c
 20759  001014  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20760  001018  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20761  00101C                     l27618:
 20762                           
 20763                           ; BSR set to: 0
 20764                           ;eusartparser.c: 441:             write_package(*package);
 20765  00101C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20766  001020  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20767  001024  EE00  F011         	lfsr	0,write_package@package
 20768  001028  0E06               	movlw	6
 20769  00102A                     u33651:
 20770  00102A  CFDB FFEB          	movff	plusw2,plusw0
 20771  00102E  06E8               	decf	wreg,f,c
 20772  001030  E2FC               	bc	u33651
 20773  001032  EC67  F04C         	call	_write_package	;wreg free
 20774  001036  D77D               	goto	l27576
 20775  001038                     l27628:
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;eusartparser.c: 450:                 package->address=0x00;
 20779  001038  EE20 F001          	lfsr	2,1
 20780  00103C  51E0               	movf	eusartparser@package& (0+255),w,b
 20781  00103E  26D9               	addwf	fsr2l,f,c
 20782  001040  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20783  001042  22DA               	addwfc	fsr2h,f,c
 20784  001044  0E00               	movlw	0
 20785  001046  6EDF               	movwf	indf2,c
 20786                           
 20787                           ;eusartparser.c: 451:                 package->data.data16=var_sys_NVM.positionRemotesFu
      +                          ll;
 20788  001048  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20789  00104A  6FE2               	movwf	??_eusartparser& (0+255),b
 20790  00104C  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20791  00104E  EE20 F002          	lfsr	2,2
 20792  001052  51E0               	movf	eusartparser@package& (0+255),w,b
 20793  001054  26D9               	addwf	fsr2l,f,c
 20794  001056  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20795  001058  22DA               	addwfc	fsr2h,f,c
 20796  00105A  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20797  00105E  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;eusartparser.c: 452:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20801  001062  0E00               	movlw	0
 20802  001064  6FE8               	movwf	eusartparser@i& (0+255),b
 20803  001066  D014               	goto	l27638
 20804  001068                     l27632:
 20805                           
 20806                           ; BSR set to: 0
 20807                           ;eusartparser.c: 453:                 if(cmdMemoryIsEmpty(0,i)==1)
 20808  001068  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20809  00106C  0E00               	movlw	0
 20810  00106E  ECD0  F040         	call	_cmdMemoryIsEmpty
 20811  001072  06E8               	decf	wreg,f,c
 20812  001074  A4D8               	btfss	status,2,c
 20813  001076  D00A               	goto	l27636
 20814                           
 20815                           ;eusartparser.c: 454:                     package->data.data16--;
 20816  001078  0100               	movlb	0	; () banked
 20817  00107A  EE20 F002          	lfsr	2,2
 20818  00107E  51E0               	movf	eusartparser@package& (0+255),w,b
 20819  001080  26D9               	addwf	fsr2l,f,c
 20820  001082  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20821  001084  22DA               	addwfc	fsr2h,f,c
 20822  001086  06DE               	decf	postinc2,f,c
 20823  001088  0E00               	movlw	0
 20824  00108A  5ADD               	subwfb	postdec2,f,c
 20825  00108C                     l27636:
 20826  00108C  0100               	movlb	0	; () banked
 20827  00108E  2BE8               	incf	eusartparser@i& (0+255),f,b
 20828  001090                     l27638:
 20829                           
 20830                           ; BSR set to: 0
 20831  001090  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20832  001092  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20833  001094  B0D8               	btfsc	status,0,c
 20834  001096  D7C2               	goto	l27618
 20835  001098  D7E7               	goto	l27632
 20836  00109A                     l27646:
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;eusartparser.c: 461:             package->address=0x00;
 20840  00109A  EE20 F001          	lfsr	2,1
 20841  00109E  51E0               	movf	eusartparser@package& (0+255),w,b
 20842  0010A0  26D9               	addwf	fsr2l,f,c
 20843  0010A2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20844  0010A4  22DA               	addwfc	fsr2h,f,c
 20845  0010A6  0E00               	movlw	0
 20846  0010A8  6EDF               	movwf	indf2,c
 20847                           
 20848                           ;eusartparser.c: 462:             package->data.data16=0;
 20849  0010AA  EE20 F002          	lfsr	2,2
 20850  0010AE  51E0               	movf	eusartparser@package& (0+255),w,b
 20851  0010B0  26D9               	addwf	fsr2l,f,c
 20852  0010B2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20853  0010B4  22DA               	addwfc	fsr2h,f,c
 20854  0010B6  0E00               	movlw	0
 20855  0010B8  6EDE               	movwf	postinc2,c
 20856  0010BA  0E00               	movlw	0
 20857  0010BC  6EDD               	movwf	postdec2,c
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;eusartparser.c: 463:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 20861  0010BE  0E00               	movlw	0
 20862  0010C0  6FE9               	movwf	eusartparser@i_7378& (0+255),b
 20863  0010C2  D014               	goto	l27656
 20864  0010C4                     l27650:
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;eusartparser.c: 464:             if(cmdMemoryIsEmpty(0,i)==1)
 20868  0010C4  C0E9  F02E         	movff	eusartparser@i_7378,cmdMemoryIsEmpty@position
 20869  0010C8  0E00               	movlw	0
 20870  0010CA  ECD0  F040         	call	_cmdMemoryIsEmpty
 20871  0010CE  06E8               	decf	wreg,f,c
 20872  0010D0  A4D8               	btfss	status,2,c
 20873  0010D2  D00A               	goto	l27654
 20874                           
 20875                           ;eusartparser.c: 465:                 package->data.data16++;
 20876  0010D4  0100               	movlb	0	; () banked
 20877  0010D6  EE20 F002          	lfsr	2,2
 20878  0010DA  51E0               	movf	eusartparser@package& (0+255),w,b
 20879  0010DC  26D9               	addwf	fsr2l,f,c
 20880  0010DE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20881  0010E0  22DA               	addwfc	fsr2h,f,c
 20882  0010E2  2ADE               	incf	postinc2,f,c
 20883  0010E4  0E00               	movlw	0
 20884  0010E6  22DD               	addwfc	postdec2,f,c
 20885  0010E8                     l27654:
 20886  0010E8  0100               	movlb	0	; () banked
 20887  0010EA  2BE9               	incf	eusartparser@i_7378& (0+255),f,b
 20888  0010EC                     l27656:
 20889                           
 20890                           ; BSR set to: 0
 20891  0010EC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20892  0010EE  5DE9               	subwf	eusartparser@i_7378& (0+255),w,b
 20893  0010F0  B0D8               	btfsc	status,0,c
 20894  0010F2  D794               	goto	l27618
 20895  0010F4  D7E7               	goto	l27650
 20896  0010F6                     l27664:
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;eusartparser.c: 471:             relcounter=0;
 20900  0010F6  0E00               	movlw	0
 20901  0010F8  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20902                           
 20903                           ;eusartparser.c: 472:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 20904  0010FA  0E00               	movlw	0
 20905  0010FC  6FED               	movwf	eusartparser@i_7379& (0+255),b
 20906  0010FE  D02E               	goto	l27676
 20907  001100                     l27666:
 20908                           
 20909                           ; BSR set to: 0
 20910                           ;eusartparser.c: 473:                 if(cmdMemoryIsEmpty(0,i)==0){
 20911  001100  C0ED  F02E         	movff	eusartparser@i_7379,cmdMemoryIsEmpty@position
 20912  001104  0E00               	movlw	0
 20913  001106  ECD0  F040         	call	_cmdMemoryIsEmpty
 20914  00110A  0900               	iorlw	0
 20915  00110C  A4D8               	btfss	status,2,c
 20916  00110E  D024               	goto	l27674
 20917                           
 20918                           ;eusartparser.c: 474:                     package->data.data16=(uint16_t)i;
 20919  001110  0100               	movlb	0	; () banked
 20920  001112  51ED               	movf	eusartparser@i_7379& (0+255),w,b
 20921  001114  6FE2               	movwf	??_eusartparser& (0+255),b
 20922  001116  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20923  001118  EE20 F002          	lfsr	2,2
 20924  00111C  51E0               	movf	eusartparser@package& (0+255),w,b
 20925  00111E  26D9               	addwf	fsr2l,f,c
 20926  001120  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20927  001122  22DA               	addwfc	fsr2h,f,c
 20928  001124  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20929  001128  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20930                           
 20931                           ;eusartparser.c: 475:                     package->address=relcounter;
 20932  00112C  EE20 F001          	lfsr	2,1
 20933  001130  51E0               	movf	eusartparser@package& (0+255),w,b
 20934  001132  26D9               	addwf	fsr2l,f,c
 20935  001134  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20936  001136  22DA               	addwfc	fsr2h,f,c
 20937  001138  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20938                           
 20939                           ; BSR set to: 0
 20940                           ;eusartparser.c: 476:                     relcounter++;
 20941  00113C  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20942                           
 20943                           ; BSR set to: 0
 20944                           ;eusartparser.c: 477:                     write_package(*package);
 20945  00113E  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20946  001142  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20947  001146  EE00  F011         	lfsr	0,write_package@package
 20948  00114A  0E06               	movlw	6
 20949  00114C                     u33711:
 20950  00114C  CFDB FFEB          	movff	plusw2,plusw0
 20951  001150  06E8               	decf	wreg,f,c
 20952  001152  E2FC               	bc	u33711
 20953  001154  EC67  F04C         	call	_write_package	;wreg free
 20954  001158                     l27674:
 20955  001158  0100               	movlb	0	; () banked
 20956  00115A  2BED               	incf	eusartparser@i_7379& (0+255),f,b
 20957  00115C                     l27676:
 20958                           
 20959                           ; BSR set to: 0
 20960  00115C  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20961  00115E  5DED               	subwf	eusartparser@i_7379& (0+255),w,b
 20962  001160  B0D8               	btfsc	status,0,c
 20963  001162  D6E7               	goto	l27576
 20964  001164  D7CD               	goto	l27666
 20965  001166                     l27682:
 20966                           
 20967                           ; BSR set to: 0
 20968                           ;eusartparser.c: 483:             relcounter=0;
 20969  001166  0E00               	movlw	0
 20970  001168  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20971                           
 20972                           ;eusartparser.c: 484:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;i++)
 20973  00116A  0E00               	movlw	0
 20974  00116C  6FEE               	movwf	eusartparser@i_7380& (0+255),b
 20975  00116E  D02E               	goto	l27694
 20976  001170                     l27684:
 20977                           
 20978                           ; BSR set to: 0
 20979                           ;eusartparser.c: 485:                 if(cmdMemoryIsEmpty(0,i)==1){
 20980  001170  C0EE  F02E         	movff	eusartparser@i_7380,cmdMemoryIsEmpty@position
 20981  001174  0E00               	movlw	0
 20982  001176  ECD0  F040         	call	_cmdMemoryIsEmpty
 20983  00117A  06E8               	decf	wreg,f,c
 20984  00117C  A4D8               	btfss	status,2,c
 20985  00117E  D024               	goto	l27692
 20986                           
 20987                           ;eusartparser.c: 486:                     package->data.data16=(uint16_t)i;
 20988  001180  0100               	movlb	0	; () banked
 20989  001182  51EE               	movf	eusartparser@i_7380& (0+255),w,b
 20990  001184  6FE2               	movwf	??_eusartparser& (0+255),b
 20991  001186  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20992  001188  EE20 F002          	lfsr	2,2
 20993  00118C  51E0               	movf	eusartparser@package& (0+255),w,b
 20994  00118E  26D9               	addwf	fsr2l,f,c
 20995  001190  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20996  001192  22DA               	addwfc	fsr2h,f,c
 20997  001194  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20998  001198  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20999                           
 21000                           ;eusartparser.c: 487:                     package->address=relcounter;
 21001  00119C  EE20 F001          	lfsr	2,1
 21002  0011A0  51E0               	movf	eusartparser@package& (0+255),w,b
 21003  0011A2  26D9               	addwf	fsr2l,f,c
 21004  0011A4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21005  0011A6  22DA               	addwfc	fsr2h,f,c
 21006  0011A8  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;eusartparser.c: 488:                     relcounter++;
 21010  0011AC  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21011                           
 21012                           ; BSR set to: 0
 21013                           ;eusartparser.c: 489:                     write_package(*package);
 21014  0011AE  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21015  0011B2  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21016  0011B6  EE00  F011         	lfsr	0,write_package@package
 21017  0011BA  0E06               	movlw	6
 21018  0011BC                     u33741:
 21019  0011BC  CFDB FFEB          	movff	plusw2,plusw0
 21020  0011C0  06E8               	decf	wreg,f,c
 21021  0011C2  E2FC               	bc	u33741
 21022  0011C4  EC67  F04C         	call	_write_package	;wreg free
 21023  0011C8                     l27692:
 21024  0011C8  0100               	movlb	0	; () banked
 21025  0011CA  2BEE               	incf	eusartparser@i_7380& (0+255),f,b
 21026  0011CC                     l27694:
 21027                           
 21028                           ; BSR set to: 0
 21029  0011CC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21030  0011CE  5DEE               	subwf	eusartparser@i_7380& (0+255),w,b
 21031  0011D0  B0D8               	btfsc	status,0,c
 21032  0011D2  D6AF               	goto	l27576
 21033  0011D4  D7CD               	goto	l27684
 21034  0011D6                     l27700:
 21035                           
 21036                           ; BSR set to: 0
 21037                           ;eusartparser.c: 495:             done_changes=1;
 21038  0011D6  0E01               	movlw	1
 21039  0011D8  0101               	movlb	1	; () banked
 21040  0011DA  6F8E               	movwf	_done_changes& (0+255),b
 21041                           
 21042                           ;eusartparser.c: 496:             if(programmer_enable){
 21043  0011DC  0100               	movlb	0	; () banked
 21044  0011DE  5185               	movf	_programmer_enable& (0+255),w,b
 21045  0011E0  B4D8               	btfsc	status,2,c
 21046  0011E2  D6D2               	goto	l27588
 21047                           
 21048                           ; BSR set to: 0
 21049                           ;eusartparser.c: 497:                 if(save_f==0){
 21050  0011E4  0101               	movlb	1	; () banked
 21051  0011E6  518D               	movf	eusartparser@save_f& (0+255),w,b
 21052  0011E8  A4D8               	btfss	status,2,c
 21053  0011EA  D024               	goto	l27712
 21054  0011EC                     u33770:
 21055                           
 21056                           ; BSR set to: 1
 21057                           ;eusartparser.c: 498:                     buffer=package->data.data16;
 21058  0011EC  0100               	movlb	0	; () banked
 21059  0011EE  EE20 F002          	lfsr	2,2
 21060  0011F2  51E0               	movf	eusartparser@package& (0+255),w,b
 21061  0011F4  26D9               	addwf	fsr2l,f,c
 21062  0011F6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21063  0011F8  22DA               	addwfc	fsr2h,f,c
 21064  0011FA  CFDE F185          	movff	postinc2,eusartparser@buffer
 21065  0011FE  CFDD F186          	movff	postdec2,eusartparser@buffer+1
 21066                           
 21067                           ; BSR set to: 0
 21068                           ;eusartparser.c: 499:                     confirmpackage(package, 1);
 21069  001202  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21070  001206  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21071  00120A  0E01               	movlw	1
 21072  00120C  6E14               	movwf	confirmpackage@confirm^0,c
 21073  00120E  EC04  F048         	call	_confirmpackage	;wreg free
 21074                           
 21075                           ;eusartparser.c: 500:                     write_package(*package);
 21076  001212  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21077  001216  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21078  00121A  EE00  F011         	lfsr	0,write_package@package
 21079  00121E  0E06               	movlw	6
 21080  001220                     u33781:
 21081  001220  CFDB FFEB          	movff	plusw2,plusw0
 21082  001224  06E8               	decf	wreg,f,c
 21083  001226  E2FC               	bc	u33781
 21084  001228  EC67  F04C         	call	_write_package	;wreg free
 21085                           
 21086                           ;eusartparser.c: 501:                     save_f=1;
 21087  00122C  0E01               	movlw	1
 21088  00122E  0101               	movlb	1	; () banked
 21089  001230  6F8D               	movwf	eusartparser@save_f& (0+255),b
 21090                           
 21091                           ;eusartparser.c: 502:                 }
 21092  001232  0012               	return	
 21093  001234                     l27712:
 21094                           
 21095                           ; BSR set to: 1
 21096                           ;eusartparser.c: 504:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 21097  001234  0100               	movlb	0	; () banked
 21098  001236  EE20 F002          	lfsr	2,2
 21099  00123A  51E0               	movf	eusartparser@package& (0+255),w,b
 21100  00123C  26D9               	addwf	fsr2l,f,c
 21101  00123E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21102  001240  22DA               	addwfc	fsr2h,f,c
 21103  001242  CFDE F0E2          	movff	postinc2,??_eusartparser
 21104  001246  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21105  00124A  0101               	movlb	1	; () banked
 21106  00124C  5185               	movf	eusartparser@buffer& (0+255),w,b
 21107  00124E  0100               	movlb	0	; () banked
 21108  001250  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21109  001252  0101               	movlb	1	; () banked
 21110  001254  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21111  001256  0100               	movlb	0	; () banked
 21112  001258  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21113  00125A  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21114  00125C  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21115  00125E  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21116  001262  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21117  001266  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21118  001268  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21119  00126A  51E2               	movf	??_eusartparser& (0+255),w,b
 21120  00126C  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21121  00126E  6FF8               	movwf	eusartparser@serial& (0+255),b
 21122  001270  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21123  001272  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21124  001274  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21125  001276  0E00               	movlw	0
 21126  001278  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21127  00127A  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21128  00127C  0E00               	movlw	0
 21129  00127E  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21130  001280  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21131                           
 21132                           ; BSR set to: 0
 21133                           ;eusartparser.c: 505:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 21134  001282  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21135  001286  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21136  00128A  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21137  00128E  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21138  001292  0E00               	movlw	0
 21139  001294  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21140  001296  0EEC               	movlw	low eusartparser@pos
 21141  001298  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21142  00129A  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21143  00129C  ECFE  F030         	call	_validateRemoteSerialNumber	;wreg free
 21144  0012A0  0900               	iorlw	0
 21145  0012A2  A4D8               	btfss	status,2,c
 21146  0012A4  D04D               	goto	u33840
 21147                           
 21148                           ; BSR set to: 0
 21149                           ;eusartparser.c: 506:                         for(uint8_t i=0;;i++)
 21150  0012A6  0E00               	movlw	0
 21151  0012A8  6FF1               	movwf	eusartparser@i_7381& (0+255),b
 21152  0012AA                     l27718:
 21153                           
 21154                           ; BSR set to: 0
 21155                           ;eusartparser.c: 507:                             if(cmdMemoryIsEmpty(0,i)==1&&package->
      +                          address==0){
 21156  0012AA  C0F1  F02E         	movff	eusartparser@i_7381,cmdMemoryIsEmpty@position
 21157  0012AE  0E00               	movlw	0
 21158  0012B0  ECD0  F040         	call	_cmdMemoryIsEmpty
 21159  0012B4  06E8               	decf	wreg,f,c
 21160  0012B6  A4D8               	btfss	status,2,c
 21161  0012B8  D02D               	goto	l27730
 21162  0012BA  0100               	movlb	0	; () banked
 21163  0012BC  EE20 F001          	lfsr	2,1
 21164  0012C0  51E0               	movf	eusartparser@package& (0+255),w,b
 21165  0012C2  26D9               	addwf	fsr2l,f,c
 21166  0012C4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21167  0012C6  22DA               	addwfc	fsr2h,f,c
 21168  0012C8  50DF               	movf	indf2,w,c
 21169  0012CA  A4D8               	btfss	status,2,c
 21170  0012CC  D023               	goto	l27730
 21171                           
 21172                           ; BSR set to: 0
 21173                           ;eusartparser.c: 508:                                 saveNewSerial(0,serial,i);
 21174  0012CE  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21175  0012D2  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21176  0012D6  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21177  0012DA  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21178  0012DE  C0F1  F0DC         	movff	eusartparser@i_7381,saveNewSerial@position
 21179  0012E2  0E00               	movlw	0
 21180  0012E4  EC9F  F045         	call	_saveNewSerial
 21181  0012E8                     l27724:
 21182                           
 21183                           ;eusartparser.c: 509:                                 confirmpackage(package, 1);
 21184  0012E8  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21185  0012EC  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21186  0012F0  0E01               	movlw	1
 21187  0012F2  6E14               	movwf	confirmpackage@confirm^0,c
 21188  0012F4  EC04  F048         	call	_confirmpackage	;wreg free
 21189  0012F8                     l27726:
 21190                           
 21191                           ;eusartparser.c: 510:                                 write_package(*package);
 21192  0012F8  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21193  0012FC  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21194  001300  EE00  F011         	lfsr	0,write_package@package
 21195  001304  0E06               	movlw	6
 21196  001306                     u33821:
 21197  001306  CFDB FFEB          	movff	plusw2,plusw0
 21198  00130A  06E8               	decf	wreg,f,c
 21199  00130C  E2FC               	bc	u33821
 21200  00130E  EC67  F04C         	call	_write_package	;wreg free
 21201                           
 21202                           ;eusartparser.c: 511:                                 break;
 21203  001312  D021               	goto	l27746
 21204  001314                     l27730:
 21205  001314  C0F1  F02E         	movff	eusartparser@i_7381,cmdMemoryIsEmpty@position
 21206  001318  0E00               	movlw	0
 21207  00131A  ECD0  F040         	call	_cmdMemoryIsEmpty
 21208  00131E  06E8               	decf	wreg,f,c
 21209  001320  A4D8               	btfss	status,2,c
 21210  001322  D009               	goto	l27734
 21211                           
 21212                           ;eusartparser.c: 514:                                 package->address--;
 21213  001324  0100               	movlb	0	; () banked
 21214  001326  EE20 F001          	lfsr	2,1
 21215  00132A  51E0               	movf	eusartparser@package& (0+255),w,b
 21216  00132C  26D9               	addwf	fsr2l,f,c
 21217  00132E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21218  001330  22DA               	addwfc	fsr2h,f,c
 21219  001332  06DF               	decf	indf2,f,c
 21220                           
 21221                           ;eusartparser.c: 515:                             }
 21222  001334  D00E               	goto	l27740
 21223  001336                     l27734:
 21224  001336  0100               	movlb	0	; () banked
 21225  001338  51F1               	movf	eusartparser@i_7381& (0+255),w,b
 21226  00133A  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21227  00133C  A4D8               	btfss	status,2,c
 21228  00133E  D009               	goto	l27740
 21229  001340                     u33840:
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;eusartparser.c: 517:                                 confirmpackage(package, 0);
 21233  001340  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21234  001344  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21235  001348  0E00               	movlw	0
 21236  00134A  6E14               	movwf	confirmpackage@confirm^0,c
 21237  00134C  EC04  F048         	call	_confirmpackage	;wreg free
 21238  001350  D7D3               	goto	l27726
 21239  001352                     l27740:
 21240                           
 21241                           ; BSR set to: 0
 21242  001352  2BF1               	incf	eusartparser@i_7381& (0+255),f,b
 21243  001354  D7AA               	goto	l27718
 21244  001356                     l27746:
 21245                           
 21246                           ;eusartparser.c: 526:                     save_f=0;
 21247  001356  0E00               	movlw	0
 21248  001358  0101               	movlb	1	; () banked
 21249  00135A  6F8D               	movwf	eusartparser@save_f& (0+255),b
 21250  00135C  0012               	return	
 21251  00135E                     l27752:
 21252                           
 21253                           ; BSR set to: 0
 21254                           ;eusartparser.c: 535:             done_changes=1;
 21255  00135E  0E01               	movlw	1
 21256  001360  0101               	movlb	1	; () banked
 21257  001362  6F8E               	movwf	_done_changes& (0+255),b
 21258                           
 21259                           ;eusartparser.c: 536:             if(programmer_enable){
 21260  001364  0100               	movlb	0	; () banked
 21261  001366  5185               	movf	_programmer_enable& (0+255),w,b
 21262  001368  B4D8               	btfsc	status,2,c
 21263  00136A  D60E               	goto	l27588
 21264                           
 21265                           ; BSR set to: 0
 21266                           ;eusartparser.c: 537:                 for(uint8_t i=0;;i++)
 21267  00136C  0E00               	movlw	0
 21268  00136E  6FF2               	movwf	eusartparser@i_7382& (0+255),b
 21269  001370                     l27756:
 21270                           
 21271                           ; BSR set to: 0
 21272                           ;eusartparser.c: 538:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21273  001370  C0F2  F02E         	movff	eusartparser@i_7382,cmdMemoryIsEmpty@position
 21274  001374  0E00               	movlw	0
 21275  001376  ECD0  F040         	call	_cmdMemoryIsEmpty
 21276  00137A  0900               	iorlw	0
 21277  00137C  A4D8               	btfss	status,2,c
 21278  00137E  D010               	goto	l27770
 21279  001380  0100               	movlb	0	; () banked
 21280  001382  EE20 F001          	lfsr	2,1
 21281  001386  51E0               	movf	eusartparser@package& (0+255),w,b
 21282  001388  26D9               	addwf	fsr2l,f,c
 21283  00138A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21284  00138C  22DA               	addwfc	fsr2h,f,c
 21285  00138E  50DF               	movf	indf2,w,c
 21286  001390  A4D8               	btfss	status,2,c
 21287  001392  D006               	goto	l27770
 21288                           
 21289                           ; BSR set to: 0
 21290                           ;eusartparser.c: 539:                         RemoveSerial(0, i);
 21291  001394  C0F2  F03A         	movff	eusartparser@i_7382,RemoveSerial@position
 21292  001398  0E00               	movlw	0
 21293  00139A  EC80  F043         	call	_RemoveSerial
 21294  00139E  D7A4               	goto	l27724
 21295  0013A0                     l27770:
 21296  0013A0  C0F2  F02E         	movff	eusartparser@i_7382,cmdMemoryIsEmpty@position
 21297  0013A4  0E00               	movlw	0
 21298  0013A6  ECD0  F040         	call	_cmdMemoryIsEmpty
 21299  0013AA  0900               	iorlw	0
 21300  0013AC  A4D8               	btfss	status,2,c
 21301  0013AE  D009               	goto	l27774
 21302                           
 21303                           ;eusartparser.c: 546:                         package->address--;
 21304  0013B0  0100               	movlb	0	; () banked
 21305  0013B2  EE20 F001          	lfsr	2,1
 21306  0013B6  51E0               	movf	eusartparser@package& (0+255),w,b
 21307  0013B8  26D9               	addwf	fsr2l,f,c
 21308  0013BA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21309  0013BC  22DA               	addwfc	fsr2h,f,c
 21310  0013BE  06DF               	decf	indf2,f,c
 21311                           
 21312                           ;eusartparser.c: 547:                     }
 21313  0013C0  D005               	goto	l27782
 21314  0013C2                     l27774:
 21315  0013C2  0100               	movlb	0	; () banked
 21316  0013C4  51F2               	movf	eusartparser@i_7382& (0+255),w,b
 21317  0013C6  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21318  0013C8  B4D8               	btfsc	status,2,c
 21319  0013CA  D7BA               	goto	u33840
 21320  0013CC                     l27782:
 21321                           
 21322                           ; BSR set to: 0
 21323  0013CC  2BF2               	incf	eusartparser@i_7382& (0+255),f,b
 21324  0013CE  D7D0               	goto	l27756
 21325  0013D0                     l27788:
 21326                           
 21327                           ; BSR set to: 0
 21328                           ;eusartparser.c: 561:             for(uint8_t i=0;;i++)
 21329  0013D0  0E00               	movlw	0
 21330  0013D2  6FF3               	movwf	eusartparser@i_7383& (0+255),b
 21331  0013D4                     l27790:
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;eusartparser.c: 562:                 if(cmdMemoryIsEmpty(0,i)==0&&package->address==0){
 21335  0013D4  C0F3  F02E         	movff	eusartparser@i_7383,cmdMemoryIsEmpty@position
 21336  0013D8  0E00               	movlw	0
 21337  0013DA  ECD0  F040         	call	_cmdMemoryIsEmpty
 21338  0013DE  0900               	iorlw	0
 21339  0013E0  A4D8               	btfss	status,2,c
 21340  0013E2  D02A               	goto	l27810
 21341  0013E4  0100               	movlb	0	; () banked
 21342  0013E6  EE20 F001          	lfsr	2,1
 21343  0013EA  51E0               	movf	eusartparser@package& (0+255),w,b
 21344  0013EC  26D9               	addwf	fsr2l,f,c
 21345  0013EE  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21346  0013F0  22DA               	addwfc	fsr2h,f,c
 21347  0013F2  50DF               	movf	indf2,w,c
 21348  0013F4  A4D8               	btfss	status,2,c
 21349  0013F6  D020               	goto	l27810
 21350                           
 21351                           ; BSR set to: 0
 21352                           ;eusartparser.c: 563:                     ReadSerial(0, &serial, i);
 21353  0013F8  0EF8               	movlw	low eusartparser@serial
 21354  0013FA  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21355  0013FC  C0F3  F02F         	movff	eusartparser@i_7383,ReadSerial@position
 21356  001400  0E00               	movlw	0
 21357  001402  ECD7  F045         	call	_ReadSerial
 21358                           
 21359                           ;eusartparser.c: 564:                     package->data.data16=(uint16_t)serial;
 21360  001406  0100               	movlb	0	; () banked
 21361  001408  EE20 F002          	lfsr	2,2
 21362  00140C  51E0               	movf	eusartparser@package& (0+255),w,b
 21363  00140E  26D9               	addwf	fsr2l,f,c
 21364  001410  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21365  001412  22DA               	addwfc	fsr2h,f,c
 21366  001414  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21367  001418  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21368                           
 21369                           ; BSR set to: 0
 21370                           ;eusartparser.c: 565:                     write_package(*package);
 21371  00141C  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21372  001420  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21373  001424  EE00  F011         	lfsr	0,write_package@package
 21374  001428  0E06               	movlw	6
 21375  00142A                     u33921:
 21376  00142A  CFDB FFEB          	movff	plusw2,plusw0
 21377  00142E  06E8               	decf	wreg,f,c
 21378  001430  E2FC               	bc	u33921
 21379  001432  EC67  F04C         	call	_write_package	;wreg free
 21380  001436  D1D1               	goto	l27994
 21381  001438                     l27810:
 21382  001438  C0F3  F02E         	movff	eusartparser@i_7383,cmdMemoryIsEmpty@position
 21383  00143C  0E00               	movlw	0
 21384  00143E  ECD0  F040         	call	_cmdMemoryIsEmpty
 21385  001442  0900               	iorlw	0
 21386  001444  A4D8               	btfss	status,2,c
 21387  001446  D009               	goto	l27814
 21388                           
 21389                           ;eusartparser.c: 573:                     package->address--;
 21390  001448  0100               	movlb	0	; () banked
 21391  00144A  EE20 F001          	lfsr	2,1
 21392  00144E  51E0               	movf	eusartparser@package& (0+255),w,b
 21393  001450  26D9               	addwf	fsr2l,f,c
 21394  001452  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21395  001454  22DA               	addwfc	fsr2h,f,c
 21396  001456  06DF               	decf	indf2,f,c
 21397                           
 21398                           ;eusartparser.c: 574:                 }
 21399  001458  D005               	goto	l27820
 21400  00145A                     l27814:
 21401  00145A  0100               	movlb	0	; () banked
 21402  00145C  51F3               	movf	eusartparser@i_7383& (0+255),w,b
 21403  00145E  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21404  001460  B4D8               	btfsc	status,2,c
 21405  001462  D592               	goto	l27588
 21406  001464                     l27820:
 21407                           
 21408                           ; BSR set to: 0
 21409  001464  2BF3               	incf	eusartparser@i_7383& (0+255),f,b
 21410  001466  D7B6               	goto	l27790
 21411  001468                     l27822:
 21412                           
 21413                           ; BSR set to: 0
 21414                           ;eusartparser.c: 582:                 package->address=0x00;
 21415  001468  EE20 F001          	lfsr	2,1
 21416  00146C  51E0               	movf	eusartparser@package& (0+255),w,b
 21417  00146E  26D9               	addwf	fsr2l,f,c
 21418  001470  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21419  001472  22DA               	addwfc	fsr2h,f,c
 21420  001474  0E00               	movlw	0
 21421  001476  6EDF               	movwf	indf2,c
 21422                           
 21423                           ;eusartparser.c: 583:                 package->data.data16=var_sys_NVM.positionRemotesWa
      +                          lk;
 21424  001478  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21425  00147A  6FE2               	movwf	??_eusartparser& (0+255),b
 21426  00147C  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21427  00147E  EE20 F002          	lfsr	2,2
 21428  001482  51E0               	movf	eusartparser@package& (0+255),w,b
 21429  001484  26D9               	addwf	fsr2l,f,c
 21430  001486  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21431  001488  22DA               	addwfc	fsr2h,f,c
 21432  00148A  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21433  00148E  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21434                           
 21435                           ; BSR set to: 0
 21436                           ;eusartparser.c: 584:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21437  001492  0E00               	movlw	0
 21438  001494  6FEA               	movwf	eusartparser@i_7385& (0+255),b
 21439  001496  D014               	goto	l27832
 21440  001498                     l27826:
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;eusartparser.c: 585:                 if(cmdMemoryIsEmpty(1,i)==1)
 21444  001498  C0EA  F02E         	movff	eusartparser@i_7385,cmdMemoryIsEmpty@position
 21445  00149C  0E01               	movlw	1
 21446  00149E  ECD0  F040         	call	_cmdMemoryIsEmpty
 21447  0014A2  06E8               	decf	wreg,f,c
 21448  0014A4  A4D8               	btfss	status,2,c
 21449  0014A6  D00A               	goto	l27830
 21450                           
 21451                           ;eusartparser.c: 586:                     package->data.data16--;
 21452  0014A8  0100               	movlb	0	; () banked
 21453  0014AA  EE20 F002          	lfsr	2,2
 21454  0014AE  51E0               	movf	eusartparser@package& (0+255),w,b
 21455  0014B0  26D9               	addwf	fsr2l,f,c
 21456  0014B2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21457  0014B4  22DA               	addwfc	fsr2h,f,c
 21458  0014B6  06DE               	decf	postinc2,f,c
 21459  0014B8  0E00               	movlw	0
 21460  0014BA  5ADD               	subwfb	postdec2,f,c
 21461  0014BC                     l27830:
 21462  0014BC  0100               	movlb	0	; () banked
 21463  0014BE  2BEA               	incf	eusartparser@i_7385& (0+255),f,b
 21464  0014C0                     l27832:
 21465                           
 21466                           ; BSR set to: 0
 21467  0014C0  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21468  0014C2  5DEA               	subwf	eusartparser@i_7385& (0+255),w,b
 21469  0014C4  B0D8               	btfsc	status,0,c
 21470  0014C6  D5AA               	goto	l27618
 21471  0014C8  D7E7               	goto	l27826
 21472  0014CA                     l27840:
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;eusartparser.c: 593:             package->address=0x00;
 21476  0014CA  EE20 F001          	lfsr	2,1
 21477  0014CE  51E0               	movf	eusartparser@package& (0+255),w,b
 21478  0014D0  26D9               	addwf	fsr2l,f,c
 21479  0014D2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21480  0014D4  22DA               	addwfc	fsr2h,f,c
 21481  0014D6  0E00               	movlw	0
 21482  0014D8  6EDF               	movwf	indf2,c
 21483                           
 21484                           ;eusartparser.c: 594:             package->data.data16=0;
 21485  0014DA  EE20 F002          	lfsr	2,2
 21486  0014DE  51E0               	movf	eusartparser@package& (0+255),w,b
 21487  0014E0  26D9               	addwf	fsr2l,f,c
 21488  0014E2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21489  0014E4  22DA               	addwfc	fsr2h,f,c
 21490  0014E6  0E00               	movlw	0
 21491  0014E8  6EDE               	movwf	postinc2,c
 21492  0014EA  0E00               	movlw	0
 21493  0014EC  6EDD               	movwf	postdec2,c
 21494                           
 21495                           ; BSR set to: 0
 21496                           ;eusartparser.c: 595:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21497  0014EE  0E00               	movlw	0
 21498  0014F0  6FEB               	movwf	eusartparser@i_7386& (0+255),b
 21499  0014F2  D014               	goto	l27850
 21500  0014F4                     l27844:
 21501                           
 21502                           ; BSR set to: 0
 21503                           ;eusartparser.c: 596:             if(cmdMemoryIsEmpty(1,i)==1)
 21504  0014F4  C0EB  F02E         	movff	eusartparser@i_7386,cmdMemoryIsEmpty@position
 21505  0014F8  0E01               	movlw	1
 21506  0014FA  ECD0  F040         	call	_cmdMemoryIsEmpty
 21507  0014FE  06E8               	decf	wreg,f,c
 21508  001500  A4D8               	btfss	status,2,c
 21509  001502  D00A               	goto	l27848
 21510                           
 21511                           ;eusartparser.c: 597:                 package->data.data16++;
 21512  001504  0100               	movlb	0	; () banked
 21513  001506  EE20 F002          	lfsr	2,2
 21514  00150A  51E0               	movf	eusartparser@package& (0+255),w,b
 21515  00150C  26D9               	addwf	fsr2l,f,c
 21516  00150E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21517  001510  22DA               	addwfc	fsr2h,f,c
 21518  001512  2ADE               	incf	postinc2,f,c
 21519  001514  0E00               	movlw	0
 21520  001516  22DD               	addwfc	postdec2,f,c
 21521  001518                     l27848:
 21522  001518  0100               	movlb	0	; () banked
 21523  00151A  2BEB               	incf	eusartparser@i_7386& (0+255),f,b
 21524  00151C                     l27850:
 21525                           
 21526                           ; BSR set to: 0
 21527  00151C  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21528  00151E  5DEB               	subwf	eusartparser@i_7386& (0+255),w,b
 21529  001520  B0D8               	btfsc	status,0,c
 21530  001522  D57C               	goto	l27618
 21531  001524  D7E7               	goto	l27844
 21532  001526                     l27858:
 21533                           
 21534                           ; BSR set to: 0
 21535                           ;eusartparser.c: 603:             relcounter=0;
 21536  001526  0E00               	movlw	0
 21537  001528  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21538                           
 21539                           ;eusartparser.c: 604:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21540  00152A  0E00               	movlw	0
 21541  00152C  6FEF               	movwf	eusartparser@i_7387& (0+255),b
 21542  00152E  D02E               	goto	l27870
 21543  001530                     l27860:
 21544                           
 21545                           ; BSR set to: 0
 21546                           ;eusartparser.c: 605:                 if(cmdMemoryIsEmpty(1,i)==0){
 21547  001530  C0EF  F02E         	movff	eusartparser@i_7387,cmdMemoryIsEmpty@position
 21548  001534  0E01               	movlw	1
 21549  001536  ECD0  F040         	call	_cmdMemoryIsEmpty
 21550  00153A  0900               	iorlw	0
 21551  00153C  A4D8               	btfss	status,2,c
 21552  00153E  D024               	goto	l27868
 21553                           
 21554                           ;eusartparser.c: 606:                     package->data.data16=(uint16_t)i;
 21555  001540  0100               	movlb	0	; () banked
 21556  001542  51EF               	movf	eusartparser@i_7387& (0+255),w,b
 21557  001544  6FE2               	movwf	??_eusartparser& (0+255),b
 21558  001546  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21559  001548  EE20 F002          	lfsr	2,2
 21560  00154C  51E0               	movf	eusartparser@package& (0+255),w,b
 21561  00154E  26D9               	addwf	fsr2l,f,c
 21562  001550  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21563  001552  22DA               	addwfc	fsr2h,f,c
 21564  001554  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21565  001558  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21566                           
 21567                           ;eusartparser.c: 607:                     package->address=relcounter;
 21568  00155C  EE20 F001          	lfsr	2,1
 21569  001560  51E0               	movf	eusartparser@package& (0+255),w,b
 21570  001562  26D9               	addwf	fsr2l,f,c
 21571  001564  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21572  001566  22DA               	addwfc	fsr2h,f,c
 21573  001568  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21574                           
 21575                           ; BSR set to: 0
 21576                           ;eusartparser.c: 608:                     relcounter++;
 21577  00156C  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;eusartparser.c: 609:                     write_package(*package);
 21581  00156E  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21582  001572  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21583  001576  EE00  F011         	lfsr	0,write_package@package
 21584  00157A  0E06               	movlw	6
 21585  00157C                     u34001:
 21586  00157C  CFDB FFEB          	movff	plusw2,plusw0
 21587  001580  06E8               	decf	wreg,f,c
 21588  001582  E2FC               	bc	u34001
 21589  001584  EC67  F04C         	call	_write_package	;wreg free
 21590  001588                     l27868:
 21591  001588  0100               	movlb	0	; () banked
 21592  00158A  2BEF               	incf	eusartparser@i_7387& (0+255),f,b
 21593  00158C                     l27870:
 21594                           
 21595                           ; BSR set to: 0
 21596  00158C  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21597  00158E  5DEF               	subwf	eusartparser@i_7387& (0+255),w,b
 21598  001590  B0D8               	btfsc	status,0,c
 21599  001592  D4CF               	goto	l27576
 21600  001594  D7CD               	goto	l27860
 21601  001596                     l27876:
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;eusartparser.c: 615:             relcounter=0;
 21605  001596  0E00               	movlw	0
 21606  001598  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21607                           
 21608                           ;eusartparser.c: 616:             for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 21609  00159A  0E00               	movlw	0
 21610  00159C  6FF0               	movwf	eusartparser@i_7388& (0+255),b
 21611  00159E  D02E               	goto	l27888
 21612  0015A0                     l27878:
 21613                           
 21614                           ; BSR set to: 0
 21615                           ;eusartparser.c: 617:                 if(cmdMemoryIsEmpty(1,i)==1){
 21616  0015A0  C0F0  F02E         	movff	eusartparser@i_7388,cmdMemoryIsEmpty@position
 21617  0015A4  0E01               	movlw	1
 21618  0015A6  ECD0  F040         	call	_cmdMemoryIsEmpty
 21619  0015AA  06E8               	decf	wreg,f,c
 21620  0015AC  A4D8               	btfss	status,2,c
 21621  0015AE  D024               	goto	l27886
 21622                           
 21623                           ;eusartparser.c: 618:                     package->data.data16=(uint16_t)i;
 21624  0015B0  0100               	movlb	0	; () banked
 21625  0015B2  51F0               	movf	eusartparser@i_7388& (0+255),w,b
 21626  0015B4  6FE2               	movwf	??_eusartparser& (0+255),b
 21627  0015B6  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21628  0015B8  EE20 F002          	lfsr	2,2
 21629  0015BC  51E0               	movf	eusartparser@package& (0+255),w,b
 21630  0015BE  26D9               	addwf	fsr2l,f,c
 21631  0015C0  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21632  0015C2  22DA               	addwfc	fsr2h,f,c
 21633  0015C4  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21634  0015C8  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21635                           
 21636                           ;eusartparser.c: 619:                     package->address=relcounter;
 21637  0015CC  EE20 F001          	lfsr	2,1
 21638  0015D0  51E0               	movf	eusartparser@package& (0+255),w,b
 21639  0015D2  26D9               	addwf	fsr2l,f,c
 21640  0015D4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21641  0015D6  22DA               	addwfc	fsr2h,f,c
 21642  0015D8  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21643                           
 21644                           ; BSR set to: 0
 21645                           ;eusartparser.c: 620:                     relcounter++;
 21646  0015DC  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21647                           
 21648                           ; BSR set to: 0
 21649                           ;eusartparser.c: 621:                     write_package(*package);
 21650  0015DE  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21651  0015E2  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21652  0015E6  EE00  F011         	lfsr	0,write_package@package
 21653  0015EA  0E06               	movlw	6
 21654  0015EC                     u34031:
 21655  0015EC  CFDB FFEB          	movff	plusw2,plusw0
 21656  0015F0  06E8               	decf	wreg,f,c
 21657  0015F2  E2FC               	bc	u34031
 21658  0015F4  EC67  F04C         	call	_write_package	;wreg free
 21659  0015F8                     l27886:
 21660  0015F8  0100               	movlb	0	; () banked
 21661  0015FA  2BF0               	incf	eusartparser@i_7388& (0+255),f,b
 21662  0015FC                     l27888:
 21663                           
 21664                           ; BSR set to: 0
 21665  0015FC  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21666  0015FE  5DF0               	subwf	eusartparser@i_7388& (0+255),w,b
 21667  001600  B0D8               	btfsc	status,0,c
 21668  001602  D497               	goto	l27576
 21669  001604  D7CD               	goto	l27878
 21670  001606                     l27894:
 21671                           
 21672                           ; BSR set to: 0
 21673                           ;eusartparser.c: 627:             done_changes=1;
 21674  001606  0E01               	movlw	1
 21675  001608  0101               	movlb	1	; () banked
 21676  00160A  6F8E               	movwf	_done_changes& (0+255),b
 21677                           
 21678                           ;eusartparser.c: 628:             if(programmer_enable){
 21679  00160C  0100               	movlb	0	; () banked
 21680  00160E  5185               	movf	_programmer_enable& (0+255),w,b
 21681  001610  B4D8               	btfsc	status,2,c
 21682  001612  D4BA               	goto	l27588
 21683                           
 21684                           ; BSR set to: 0
 21685                           ;eusartparser.c: 629:                 if(save_f==0){
 21686  001614  0101               	movlb	1	; () banked
 21687  001616  518D               	movf	eusartparser@save_f& (0+255),w,b
 21688  001618  B4D8               	btfsc	status,2,c
 21689  00161A  D5E8               	goto	u33770
 21690                           
 21691                           ; BSR set to: 1
 21692                           ;eusartparser.c: 636:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 21693                           
 21694                           ; BSR set to: 1
 21695                           ;eusartparser.c: 630:                     buffer=package->data.data16;
 21696  00161C  0100               	movlb	0	; () banked
 21697  00161E  EE20 F002          	lfsr	2,2
 21698  001622  51E0               	movf	eusartparser@package& (0+255),w,b
 21699  001624  26D9               	addwf	fsr2l,f,c
 21700  001626  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21701  001628  22DA               	addwfc	fsr2h,f,c
 21702  00162A  CFDE F0E2          	movff	postinc2,??_eusartparser
 21703  00162E  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21704  001632  0101               	movlb	1	; () banked
 21705  001634  5185               	movf	eusartparser@buffer& (0+255),w,b
 21706  001636  0100               	movlb	0	; () banked
 21707  001638  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21708  00163A  0101               	movlb	1	; () banked
 21709  00163C  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21710  00163E  0100               	movlb	0	; () banked
 21711  001640  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21712  001642  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21713  001644  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21714  001646  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21715  00164A  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21716  00164E  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21717  001650  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21718  001652  51E2               	movf	??_eusartparser& (0+255),w,b
 21719  001654  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21720  001656  6FF8               	movwf	eusartparser@serial& (0+255),b
 21721  001658  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21722  00165A  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21723  00165C  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21724  00165E  0E00               	movlw	0
 21725  001660  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21726  001662  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21727  001664  0E00               	movlw	0
 21728  001666  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21729  001668  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21730                           
 21731                           ; BSR set to: 0
 21732                           ;eusartparser.c: 637:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 21733  00166A  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21734  00166E  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21735  001672  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21736  001676  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21737  00167A  0E00               	movlw	0
 21738  00167C  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21739  00167E  0EEC               	movlw	low eusartparser@pos
 21740  001680  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21741  001682  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21742  001684  ECFE  F030         	call	_validateRemoteSerialNumber	;wreg free
 21743  001688  0900               	iorlw	0
 21744  00168A  A4D8               	btfss	status,2,c
 21745  00168C  D659               	goto	u33840
 21746                           
 21747                           ; BSR set to: 0
 21748                           ;eusartparser.c: 638:                         for(uint8_t i=0;;i++)
 21749  00168E  0E00               	movlw	0
 21750  001690  6FF4               	movwf	eusartparser@i_7389& (0+255),b
 21751  001692                     l27912:
 21752                           
 21753                           ; BSR set to: 0
 21754                           ;eusartparser.c: 639:                             if(cmdMemoryIsEmpty(1,i)==1&&package->
      +                          address==0){
 21755  001692  C0F4  F02E         	movff	eusartparser@i_7389,cmdMemoryIsEmpty@position
 21756  001696  0E01               	movlw	1
 21757  001698  ECD0  F040         	call	_cmdMemoryIsEmpty
 21758  00169C  06E8               	decf	wreg,f,c
 21759  00169E  A4D8               	btfss	status,2,c
 21760  0016A0  D018               	goto	l27924
 21761  0016A2  0100               	movlb	0	; () banked
 21762  0016A4  EE20 F001          	lfsr	2,1
 21763  0016A8  51E0               	movf	eusartparser@package& (0+255),w,b
 21764  0016AA  26D9               	addwf	fsr2l,f,c
 21765  0016AC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21766  0016AE  22DA               	addwfc	fsr2h,f,c
 21767  0016B0  50DF               	movf	indf2,w,c
 21768  0016B2  A4D8               	btfss	status,2,c
 21769  0016B4  D00E               	goto	l27924
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;eusartparser.c: 640:                                 saveNewSerial(1,serial,i);
 21773  0016B6  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21774  0016BA  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21775  0016BE  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21776  0016C2  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21777  0016C6  C0F4  F0DC         	movff	eusartparser@i_7389,saveNewSerial@position
 21778  0016CA  0E01               	movlw	1
 21779  0016CC  EC9F  F045         	call	_saveNewSerial
 21780  0016D0  D60B               	goto	l27724
 21781  0016D2                     l27924:
 21782  0016D2  C0F4  F02E         	movff	eusartparser@i_7389,cmdMemoryIsEmpty@position
 21783  0016D6  0E01               	movlw	1
 21784  0016D8  ECD0  F040         	call	_cmdMemoryIsEmpty
 21785  0016DC  06E8               	decf	wreg,f,c
 21786  0016DE  A4D8               	btfss	status,2,c
 21787  0016E0  D009               	goto	l27928
 21788                           
 21789                           ;eusartparser.c: 646:                                 package->address--;
 21790  0016E2  0100               	movlb	0	; () banked
 21791  0016E4  EE20 F001          	lfsr	2,1
 21792  0016E8  51E0               	movf	eusartparser@package& (0+255),w,b
 21793  0016EA  26D9               	addwf	fsr2l,f,c
 21794  0016EC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21795  0016EE  22DA               	addwfc	fsr2h,f,c
 21796  0016F0  06DF               	decf	indf2,f,c
 21797                           
 21798                           ;eusartparser.c: 647:                             }
 21799  0016F2  D005               	goto	l27934
 21800  0016F4                     l27928:
 21801  0016F4  0100               	movlb	0	; () banked
 21802  0016F6  51F4               	movf	eusartparser@i_7389& (0+255),w,b
 21803  0016F8  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21804  0016FA  B4D8               	btfsc	status,2,c
 21805  0016FC  D621               	goto	u33840
 21806  0016FE                     l27934:
 21807                           
 21808                           ; BSR set to: 0
 21809  0016FE  2BF4               	incf	eusartparser@i_7389& (0+255),f,b
 21810  001700  D7C8               	goto	l27912
 21811  001702                     l27946:
 21812                           
 21813                           ; BSR set to: 0
 21814                           ;eusartparser.c: 667:             done_changes=1;
 21815  001702  0E01               	movlw	1
 21816  001704  0101               	movlb	1	; () banked
 21817  001706  6F8E               	movwf	_done_changes& (0+255),b
 21818                           
 21819                           ;eusartparser.c: 668:             if(programmer_enable){
 21820  001708  0100               	movlb	0	; () banked
 21821  00170A  5185               	movf	_programmer_enable& (0+255),w,b
 21822  00170C  B4D8               	btfsc	status,2,c
 21823  00170E  D43C               	goto	l27588
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;eusartparser.c: 669:                 for(uint8_t i=0;;i++)
 21827  001710  0E00               	movlw	0
 21828  001712  6FF5               	movwf	eusartparser@i_7390& (0+255),b
 21829  001714                     l27950:
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;eusartparser.c: 670:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 21833  001714  C0F5  F02E         	movff	eusartparser@i_7390,cmdMemoryIsEmpty@position
 21834  001718  0E01               	movlw	1
 21835  00171A  ECD0  F040         	call	_cmdMemoryIsEmpty
 21836  00171E  0900               	iorlw	0
 21837  001720  A4D8               	btfss	status,2,c
 21838  001722  D010               	goto	l27964
 21839  001724  0100               	movlb	0	; () banked
 21840  001726  EE20 F001          	lfsr	2,1
 21841  00172A  51E0               	movf	eusartparser@package& (0+255),w,b
 21842  00172C  26D9               	addwf	fsr2l,f,c
 21843  00172E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21844  001730  22DA               	addwfc	fsr2h,f,c
 21845  001732  50DF               	movf	indf2,w,c
 21846  001734  A4D8               	btfss	status,2,c
 21847  001736  D006               	goto	l27964
 21848                           
 21849                           ; BSR set to: 0
 21850                           ;eusartparser.c: 671:                         RemoveSerial(1, i);
 21851  001738  C0F5  F03A         	movff	eusartparser@i_7390,RemoveSerial@position
 21852  00173C  0E01               	movlw	1
 21853  00173E  EC80  F043         	call	_RemoveSerial
 21854  001742  D5D2               	goto	l27724
 21855  001744                     l27964:
 21856  001744  C0F5  F02E         	movff	eusartparser@i_7390,cmdMemoryIsEmpty@position
 21857  001748  0E01               	movlw	1
 21858  00174A  ECD0  F040         	call	_cmdMemoryIsEmpty
 21859  00174E  0900               	iorlw	0
 21860  001750  A4D8               	btfss	status,2,c
 21861  001752  D009               	goto	l27968
 21862                           
 21863                           ;eusartparser.c: 678:                         package->address--;
 21864  001754  0100               	movlb	0	; () banked
 21865  001756  EE20 F001          	lfsr	2,1
 21866  00175A  51E0               	movf	eusartparser@package& (0+255),w,b
 21867  00175C  26D9               	addwf	fsr2l,f,c
 21868  00175E  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21869  001760  22DA               	addwfc	fsr2h,f,c
 21870  001762  06DF               	decf	indf2,f,c
 21871                           
 21872                           ;eusartparser.c: 679:                     }
 21873  001764  D005               	goto	l27976
 21874  001766                     l27968:
 21875  001766  0100               	movlb	0	; () banked
 21876  001768  51F5               	movf	eusartparser@i_7390& (0+255),w,b
 21877  00176A  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21878  00176C  B4D8               	btfsc	status,2,c
 21879  00176E  D5E8               	goto	u33840
 21880  001770                     l27976:
 21881                           
 21882                           ; BSR set to: 0
 21883  001770  2BF5               	incf	eusartparser@i_7390& (0+255),f,b
 21884  001772  D7D0               	goto	l27950
 21885  001774                     l27982:
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;eusartparser.c: 693:             for(uint8_t i=0;;i++)
 21889  001774  0E00               	movlw	0
 21890  001776  6FF6               	movwf	eusartparser@i_7391& (0+255),b
 21891  001778                     l27984:
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;eusartparser.c: 694:                 if(cmdMemoryIsEmpty(1,i)==0&&package->address==0){
 21895  001778  C0F6  F02E         	movff	eusartparser@i_7391,cmdMemoryIsEmpty@position
 21896  00177C  0E01               	movlw	1
 21897  00177E  ECD0  F040         	call	_cmdMemoryIsEmpty
 21898  001782  0900               	iorlw	0
 21899  001784  A4D8               	btfss	status,2,c
 21900  001786  D035               	goto	l28004
 21901  001788  0100               	movlb	0	; () banked
 21902  00178A  EE20 F001          	lfsr	2,1
 21903  00178E  51E0               	movf	eusartparser@package& (0+255),w,b
 21904  001790  26D9               	addwf	fsr2l,f,c
 21905  001792  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21906  001794  22DA               	addwfc	fsr2h,f,c
 21907  001796  50DF               	movf	indf2,w,c
 21908  001798  A4D8               	btfss	status,2,c
 21909  00179A  D02B               	goto	l28004
 21910                           
 21911                           ; BSR set to: 0
 21912                           ;eusartparser.c: 695:                     ReadSerial(1, &serial, i);
 21913  00179C  0EF8               	movlw	low eusartparser@serial
 21914  00179E  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21915  0017A0  C0F6  F02F         	movff	eusartparser@i_7391,ReadSerial@position
 21916  0017A4  0E01               	movlw	1
 21917  0017A6  ECD7  F045         	call	_ReadSerial
 21918                           
 21919                           ;eusartparser.c: 696:                     package->data.data16=(uint16_t)serial;
 21920  0017AA  0100               	movlb	0	; () banked
 21921  0017AC  EE20 F002          	lfsr	2,2
 21922  0017B0  51E0               	movf	eusartparser@package& (0+255),w,b
 21923  0017B2  26D9               	addwf	fsr2l,f,c
 21924  0017B4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21925  0017B6  22DA               	addwfc	fsr2h,f,c
 21926  0017B8  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21927  0017BC  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21928                           
 21929                           ; BSR set to: 0
 21930                           ;eusartparser.c: 697:                     write_package(*package);
 21931  0017C0  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21932  0017C4  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21933  0017C8  EE00  F011         	lfsr	0,write_package@package
 21934  0017CC  0E06               	movlw	6
 21935  0017CE                     u34191:
 21936  0017CE  CFDB FFEB          	movff	plusw2,plusw0
 21937  0017D2  06E8               	decf	wreg,f,c
 21938  0017D4  E2FC               	bc	u34191
 21939  0017D6  EC67  F04C         	call	_write_package	;wreg free
 21940  0017DA                     l27994:
 21941                           
 21942                           ;eusartparser.c: 698:                     package->data.data16=(uint16_t)(serial>>16);
 21943  0017DA  0100               	movlb	0	; () banked
 21944  0017DC  EE20 F002          	lfsr	2,2
 21945  0017E0  51E0               	movf	eusartparser@package& (0+255),w,b
 21946  0017E2  26D9               	addwf	fsr2l,f,c
 21947  0017E4  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21948  0017E6  22DA               	addwfc	fsr2h,f,c
 21949  0017E8  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 21950  0017EC  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 21951  0017F0  D415               	goto	l27618
 21952  0017F2                     l28004:
 21953  0017F2  C0F6  F02E         	movff	eusartparser@i_7391,cmdMemoryIsEmpty@position
 21954  0017F6  0E01               	movlw	1
 21955  0017F8  ECD0  F040         	call	_cmdMemoryIsEmpty
 21956  0017FC  0900               	iorlw	0
 21957  0017FE  A4D8               	btfss	status,2,c
 21958  001800  D009               	goto	l28008
 21959                           
 21960                           ;eusartparser.c: 705:                     package->address--;
 21961  001802  0100               	movlb	0	; () banked
 21962  001804  EE20 F001          	lfsr	2,1
 21963  001808  51E0               	movf	eusartparser@package& (0+255),w,b
 21964  00180A  26D9               	addwf	fsr2l,f,c
 21965  00180C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21966  00180E  22DA               	addwfc	fsr2h,f,c
 21967  001810  06DF               	decf	indf2,f,c
 21968                           
 21969                           ;eusartparser.c: 706:                 }
 21970  001812  D006               	goto	l28014
 21971  001814                     l28008:
 21972  001814  0100               	movlb	0	; () banked
 21973  001816  51F6               	movf	eusartparser@i_7391& (0+255),w,b
 21974  001818  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21975  00181A  B4D8               	btfsc	status,2,c
 21976  00181C  EFC4  F007         	goto	l27588
 21977  001820                     l28014:
 21978                           
 21979                           ; BSR set to: 0
 21980  001820  2BF6               	incf	eusartparser@i_7391& (0+255),f,b
 21981  001822  D7AA               	goto	l27984
 21982  001824                     l28020:
 21983                           
 21984                           ; BSR set to: 0
 21985  001824  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21986  001828  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21987  00182C  50DF               	movf	indf2,w,c
 21988  00182E  6FE2               	movwf	??_eusartparser& (0+255),b
 21989  001830  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21990                           
 21991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21992                           ; Switch size 1, requested type "simple"
 21993                           ; Number of cases is 1, Range of values is 0 to 0
 21994                           ; switch strategies available:
 21995                           ; Name         Instructions Cycles
 21996                           ; simple_byte            4     3 (average)
 21997                           ;	Chosen strategy is simple_byte
 21998  001832  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21999  001834  0A00               	xorlw	0	; case 0
 22000  001836  A4D8               	btfss	status,2,c
 22001  001838  EFC4  F007         	goto	l27588
 22002                           
 22003                           ; BSR set to: 0
 22004                           ; Switch size 1, requested type "simple"
 22005                           ; Number of cases is 18, Range of values is 0 to 17
 22006                           ; switch strategies available:
 22007                           ; Name         Instructions Cycles
 22008                           ; simple_byte           55    28 (average)
 22009                           ;	Chosen strategy is simple_byte
 22010  00183C  51E2               	movf	??_eusartparser& (0+255),w,b
 22011  00183E  0A00               	xorlw	0	; case 0
 22012  001840  B4D8               	btfsc	status,2,c
 22013  001842  EF93  F007         	goto	l27574
 22014  001846  0A01               	xorlw	1	; case 1
 22015  001848  B4D8               	btfsc	status,2,c
 22016  00184A  EFAF  F007         	goto	l27580
 22017  00184E  0A03               	xorlw	3	; case 2
 22018  001850  B4D8               	btfsc	status,2,c
 22019  001852  EFCD  F007         	goto	l27592
 22020  001856  0A01               	xorlw	1	; case 3
 22021  001858  B4D8               	btfsc	status,2,c
 22022  00185A  EF99  F007         	goto	l27576
 22023  00185E  0A07               	xorlw	7	; case 4
 22024  001860  B4D8               	btfsc	status,2,c
 22025  001862  EF1C  F008         	goto	l27628
 22026  001866  0A01               	xorlw	1	; case 5
 22027  001868  B4D8               	btfsc	status,2,c
 22028  00186A  D417               	goto	l27646
 22029  00186C  0A03               	xorlw	3	; case 6
 22030  00186E  B4D8               	btfsc	status,2,c
 22031  001870  D442               	goto	l27664
 22032  001872  0A01               	xorlw	1	; case 7
 22033  001874  B4D8               	btfsc	status,2,c
 22034  001876  D477               	goto	l27682
 22035  001878  0A0F               	xorlw	15	; case 8
 22036  00187A  B4D8               	btfsc	status,2,c
 22037  00187C  D4AC               	goto	l27700
 22038  00187E  0A01               	xorlw	1	; case 9
 22039  001880  B4D8               	btfsc	status,2,c
 22040  001882  D56D               	goto	l27752
 22041  001884  0A03               	xorlw	3	; case 10
 22042  001886  B4D8               	btfsc	status,2,c
 22043  001888  D5A3               	goto	l27788
 22044  00188A  0A01               	xorlw	1	; case 11
 22045  00188C  B4D8               	btfsc	status,2,c
 22046  00188E  D5EC               	goto	l27822
 22047  001890  0A07               	xorlw	7	; case 12
 22048  001892  B4D8               	btfsc	status,2,c
 22049  001894  D61A               	goto	l27840
 22050  001896  0A01               	xorlw	1	; case 13
 22051  001898  B4D8               	btfsc	status,2,c
 22052  00189A  D645               	goto	l27858
 22053  00189C  0A03               	xorlw	3	; case 14
 22054  00189E  B4D8               	btfsc	status,2,c
 22055  0018A0  D67A               	goto	l27876
 22056  0018A2  0A01               	xorlw	1	; case 15
 22057  0018A4  B4D8               	btfsc	status,2,c
 22058  0018A6  D6AF               	goto	l27894
 22059  0018A8  0A1F               	xorlw	31	; case 16
 22060  0018AA  B4D8               	btfsc	status,2,c
 22061  0018AC  D72A               	goto	l27946
 22062  0018AE  0A01               	xorlw	1	; case 17
 22063  0018B0  B4D8               	btfsc	status,2,c
 22064  0018B2  D760               	goto	l27982
 22065  0018B4  EFC4  F007         	goto	l27588
 22066  0018B8                     __end_of_eusartparser:
 22067                           	callstack 0
 22068                           
 22069 ;; *************** function _write_eusartparser *****************
 22070 ;; Defined at:
 22071 ;;		line 229 in file "eusartparser.c"
 22072 ;; Parameters:    Size  Location     Type
 22073 ;;  package         7   15[COMRAM] struct package_t
 22074 ;; Auto vars:     Size  Location     Type
 22075 ;;  debug2          2   32[COMRAM] volatile int 
 22076 ;;  debug           2   30[COMRAM] volatile int 
 22077 ;; Return value:  Size  Location     Type
 22078 ;;                  1    wreg      void 
 22079 ;; Registers used:
 22080 ;;		wreg, status,2, status,0
 22081 ;; Tracked objects:
 22082 ;;		On entry : 3F/0
 22083 ;;		On exit  : 3F/0
 22084 ;;		Unchanged: 0/0
 22085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22086 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22087 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22088 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22089 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22090 ;;Total ram usage:       19 bytes
 22091 ;; Hardware stack levels used: 1
 22092 ;; Hardware stack levels required when called: 4
 22093 ;; This function calls:
 22094 ;;		Nothing
 22095 ;; This function is called by:
 22096 ;;		_eusartparser
 22097 ;; This function uses a non-reentrant model
 22098 ;;
 22099                           
 22100                           	psect	text75
 22101  002FC4                     __ptext75:
 22102                           	callstack 0
 22103  002FC4                     _write_eusartparser:
 22104                           	callstack 25
 22105                           
 22106                           ; BSR set to: 0
 22107                           ;eusartparser.c: 230:     volatile int debug=(uint8_t)package.address;
 22108                           
 22109                           ;incstack = 0
 22110  002FC4  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 22111  002FC8  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;eusartparser.c: 231:     volatile int debug2=0x10;
 22115  002FCA  0E00               	movlw	0
 22116  002FCC  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 22117  002FCE  0E10               	movlw	16
 22118  002FD0  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 22119                           
 22120                           ;eusartparser.c: 232:     switch((uint8_t)package.address){
 22121  002FD2  D240               	goto	l24568
 22122  002FD4                     l3623:
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;eusartparser.c: 235:             var_sys_NVM.decelarationOpen=package.data.data8[0];
 22126  002FD4  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 22127                           
 22128                           ;eusartparser.c: 236:             var_sys_NVM.decelarationClose=package.data.data8[1];
 22129  002FD8  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 22130                           
 22131                           ;eusartparser.c: 237:             break;
 22132  002FDC  0012               	return	
 22133  002FDE                     l3625:
 22134                           
 22135                           ; BSR set to: 0
 22136                           ;eusartparser.c: 239:             var_sys_NVM.motorPower=package.data.data8[0];
 22137  002FDE  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 22138                           
 22139                           ;eusartparser.c: 240:             var_sys_NVM.motorSensitivity=package.data.data8[1];
 22140  002FE2  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 22141                           
 22142                           ;eusartparser.c: 241:             break;
 22143  002FE6  0012               	return	
 22144  002FE8                     l3626:
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;eusartparser.c: 243:             var_sys_NVM.walkTime=package.data.data8[1];
 22148  002FE8  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 22149                           
 22150                           ;eusartparser.c: 244:             break;
 22151  002FEC  0012               	return	
 22152  002FEE                     l3628:
 22153                           
 22154                           ; BSR set to: 0
 22155                           ;eusartparser.c: 247:             var_sys_NVM.autoTimeFullClose=package.data.data8[0];
 22156  002FEE  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 22157                           
 22158                           ;eusartparser.c: 248:             var_sys_NVM.autoTimeWalkClose=package.data.data8[1];
 22159  002FF2  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 22160                           
 22161                           ;eusartparser.c: 249:             break;
 22162  002FF6  0012               	return	
 22163  002FF8                     l3630:
 22164                           
 22165                           ; BSR set to: 0
 22166                           ;eusartparser.c: 252:             var_sys_NVM.photoCellIsON=package.data.data8[0];
 22167  002FF8  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 22168                           
 22169                           ;eusartparser.c: 253:             var_sys_NVM.photoCellInOpen=package.data.data8[1];
 22170  002FFC  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 22171                           
 22172                           ;eusartparser.c: 254:             break;
 22173  003000  0012               	return	
 22174  003002                     l3631:
 22175                           
 22176                           ; BSR set to: 0
 22177                           ;eusartparser.c: 256:             var_sys_NVM.securityBandIsON=package.data.data8[0];
 22178  003002  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 22179                           
 22180                           ;eusartparser.c: 257:             var_sys_NVM.securityBandType=package.data.data8[1];
 22181  003006  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 22182                           
 22183                           ;eusartparser.c: 258:             break;
 22184  00300A  0012               	return	
 22185  00300C                     l3632:
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;eusartparser.c: 260:             var_sys_NVM.securityBandInOpen=package.data.data8[1];
 22189  00300C  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 22190                           
 22191                           ;eusartparser.c: 261:             break;
 22192  003010  0012               	return	
 22193  003012                     l3633:
 22194                           
 22195                           ; BSR set to: 0
 22196                           ;eusartparser.c: 263:             var_sys_NVM.operationMode=package.data.data8[1];
 22197  003012  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 22198                           
 22199                           ;eusartparser.c: 264:             break;
 22200  003016  0012               	return	
 22201  003018                     l3634:
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;eusartparser.c: 266:             var_sys_NVM.flashLightMode=package.data.data8[1];
 22205  003018  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 22206                           
 22207                           ;eusartparser.c: 267:             break;
 22208  00301C  0012               	return	
 22209  00301E                     l3635:
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;eusartparser.c: 269:             var_sys_NVM.programmingDistance=package.data.data8[1];
 22213  00301E  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 22214                           
 22215                           ;eusartparser.c: 270:             break;
 22216  003022  0012               	return	
 22217  003024                     l3636:
 22218                           
 22219                           ; BSR set to: 0
 22220                           ;eusartparser.c: 272:             var_sys_NVM.decelarationSensivity=package.data.data8[1
      +                          ];
 22221  003024  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 22222                           
 22223                           ;eusartparser.c: 273:             break;
 22224  003028  0012               	return	
 22225  00302A                     l3637:
 22226                           
 22227                           ; BSR set to: 0
 22228                           ;eusartparser.c: 276:             var_sys_NVM.homemPresente=package.data.data8[1];
 22229  00302A  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 22230                           
 22231                           ;eusartparser.c: 277:             break;
 22232  00302E  0012               	return	
 22233  003030                     l3639:
 22234                           
 22235                           ; BSR set to: 0
 22236                           ;eusartparser.c: 280:             var_sys_NVM.logicDigital=package.data.data8[1];
 22237  003030  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 22238                           
 22239                           ;eusartparser.c: 281:             break;
 22240  003034  0012               	return	
 22241  003036                     l3640:
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;eusartparser.c: 283:             var_sys_NVM.softStart=package.data.data8[0];
 22245  003036  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 22246                           
 22247                           ;eusartparser.c: 284:             var_sys_NVM.softstop=package.data.data8[1];
 22248  00303A  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 22249                           
 22250                           ;eusartparser.c: 285:             break;
 22251  00303E  0012               	return	
 22252  003040                     l3642:
 22253                           
 22254                           ; BSR set to: 0
 22255                           ;eusartparser.c: 288:             var_sys_NVM.ligthTime=package.data.data8[1];
 22256  003040  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 22257                           
 22258                           ;eusartparser.c: 289:             break;
 22259  003044  0012               	return	
 22260  003046                     l3644:
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;eusartparser.c: 292:             var_sys_NVM.folow_me=package.data.data8[1];
 22264  003046  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 22265                           
 22266                           ;eusartparser.c: 293:             break;
 22267  00304A  0012               	return	
 22268  00304C                     l3645:
 22269                           
 22270                           ; BSR set to: 0
 22271                           ;eusartparser.c: 295:             var_sys_NVM.Stopboton=package.data.data8[1];
 22272  00304C  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 22273                           
 22274                           ;eusartparser.c: 296:             break;
 22275  003050  0012               	return	
 22276  003052                     l3646:
 22277                           
 22278                           ; BSR set to: 0
 22279                           ;eusartparser.c: 298:             var_sys_NVM.electricBrake=package.data.data8[1];
 22280  003052  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 22281                           
 22282                           ;eusartparser.c: 299:             break;
 22283  003056  0012               	return	
 22284  003058                     l3647:
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;eusartparser.c: 301:             var_sys_NVM.velocityDecelaration=package.data.data8[1]
      +                          ;
 22288  003058  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 22289                           
 22290                           ;eusartparser.c: 302:             break;
 22291  00305C  0012               	return	
 22292  00305E                     l3649:
 22293                           
 22294                           ; BSR set to: 0
 22295                           ;eusartparser.c: 305:             var_sys_NVM.flashRGBMode=package.data.data8[1];
 22296  00305E  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 22297                           
 22298                           ;eusartparser.c: 306:             break;
 22299  003062  0012               	return	
 22300  003064                     l3650:
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;eusartparser.c: 308:             var_sys_NVM.Direction_motor=package.data.data8[1];
 22304  003064  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 22305                           
 22306                           ;eusartparser.c: 309:             break;
 22307  003068  0012               	return	
 22308  00306A                     l3651:
 22309                           
 22310                           ; BSR set to: 0
 22311                           ;eusartparser.c: 311:             var_sys_NVM.TypeofMotor=package.data.data8[1];
 22312  00306A  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 22313                           
 22314                           ;eusartparser.c: 312:             break;
 22315  00306E  0012               	return	
 22316  003070                     l3652:
 22317                           
 22318                           ; BSR set to: 0
 22319                           ;eusartparser.c: 314:             var_sys_NVM.positionRemotesFull=package.data.data8[0];
 22320  003070  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 22321                           
 22322                           ;eusartparser.c: 315:             var_sys_NVM.positionRemotesWalk=package.data.data8[1];
 22323  003074  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 22324                           
 22325                           ;eusartparser.c: 316:             break;
 22326  003078  0012               	return	
 22327  00307A                     l24546:
 22328                           
 22329                           ; BSR set to: 0
 22330                           ;eusartparser.c: 319:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|((ui
      +                          nt32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22331  00307A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22332  00307C  6E17               	movwf	??_write_eusartparser^0,c
 22333  00307E  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22334  003080  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22335  003082  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22336  003084  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22337  003086  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22338  00308A  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22339  00308E  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22340  003090  6A17               	clrf	??_write_eusartparser^0,c
 22341  003092  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22342  003094  1017               	iorwf	??_write_eusartparser^0,w,c
 22343  003096  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22344  003098  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22345  00309A  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22346  00309C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22347  00309E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22348  0030A0  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22349  0030A2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22350  0030A4  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22351  0030A6  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22352  0030A8  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22353                           
 22354                           ;eusartparser.c: 320:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&~((u
      +                          int32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22355  0030AA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22356  0030AC  6E17               	movwf	??_write_eusartparser^0,c
 22357  0030AE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22358  0030B0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22359  0030B2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22360  0030B4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22361  0030B6  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22362  0030BA  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22363  0030BE  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22364  0030C0  6A17               	clrf	??_write_eusartparser^0,c
 22365  0030C2  1C17               	comf	??_write_eusartparser^0,w,c
 22366  0030C4  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22367  0030C6  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22368  0030C8  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22369  0030CA  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22370  0030CC  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22371  0030CE  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22372  0030D0  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22373  0030D2  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22374  0030D4  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22375  0030D6  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22376  0030D8  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22377  0030DA  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22378  0030DC  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22379  0030DE  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22380  0030E0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22381  0030E2  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22382  0030E4  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22383  0030E6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22384  0030E8  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22385                           
 22386                           ;eusartparser.c: 321:             break;
 22387  0030EA  0012               	return	
 22388  0030EC                     l24548:
 22389                           
 22390                           ; BSR set to: 0
 22391                           ;eusartparser.c: 323:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|((ui
      +                          nt32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22392  0030EC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22393  0030EE  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22394  0030F0  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22395  0030F2  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22396  0030F4  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22397  0030F6  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22398  0030F8  0E00               	movlw	0
 22399  0030FA  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22400  0030FC  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22401  0030FE  0E00               	movlw	0
 22402  003100  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22403  003102  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22404                           
 22405                           ;eusartparser.c: 324:             var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&~((u
      +                          int32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22406  003104  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22407  003106  6E17               	movwf	??_write_eusartparser^0,c
 22408  003108  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22409  00310A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22410  00310C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22411  00310E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22412  003110  1C17               	comf	??_write_eusartparser^0,w,c
 22413  003112  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22414  003114  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22415  003116  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22416  003118  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22417  00311A  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22418  00311C  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22419  00311E  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22420  003120  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22421  003122  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22422  003124  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22423  003126  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22424  003128  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22425  00312A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22426  00312C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22427  00312E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22428  003130  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22429  003132  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22430  003134  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22431  003136  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22432                           
 22433                           ;eusartparser.c: 325:             break;
 22434  003138  0012               	return	
 22435  00313A                     l3655:
 22436                           
 22437                           ; BSR set to: 0
 22438                           ;eusartparser.c: 328:             var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 22439  00313A  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 22440                           
 22441                           ;eusartparser.c: 329:             break;
 22442  00313E  0012               	return	
 22443  003140                     l24550:
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;eusartparser.c: 332:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1
      +                          *16));
 22447  003140  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22448  003142  6E17               	movwf	??_write_eusartparser^0,c
 22449  003144  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22450  003146  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22451  003148  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22452  00314A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22453  00314C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22454  003150  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22455  003154  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22456  003156  6A17               	clrf	??_write_eusartparser^0,c
 22457  003158  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22458  00315A  1017               	iorwf	??_write_eusartparser^0,w,c
 22459  00315C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22460  00315E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22461  003160  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22462  003162  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22463  003164  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22464  003166  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22465  003168  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22466  00316A  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22467  00316C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22468  00316E  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22469                           
 22470                           ;eusartparser.c: 333:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 22471  003170  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22472  003172  6E17               	movwf	??_write_eusartparser^0,c
 22473  003174  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22474  003176  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22475  003178  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22476  00317A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22477  00317C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22478  003180  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22479  003184  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22480  003186  6A17               	clrf	??_write_eusartparser^0,c
 22481  003188  1C17               	comf	??_write_eusartparser^0,w,c
 22482  00318A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22483  00318C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22484  00318E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22485  003190  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22486  003192  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22487  003194  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22488  003196  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22489  003198  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22490  00319A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22491  00319C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22492  00319E  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22493  0031A0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22494  0031A2  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22495  0031A4  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22496  0031A6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22497  0031A8  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22498  0031AA  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22499  0031AC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22500  0031AE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22501                           
 22502                           ;eusartparser.c: 334:             break;
 22503  0031B0  0012               	return	
 22504  0031B2                     l24552:
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;eusartparser.c: 336:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0
      +                          *16));
 22508  0031B2  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22509  0031B4  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22510  0031B6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22511  0031B8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22512  0031BA  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22513  0031BC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22514  0031BE  0E00               	movlw	0
 22515  0031C0  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22516  0031C2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22517  0031C4  0E00               	movlw	0
 22518  0031C6  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22519  0031C8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22520                           
 22521                           ;eusartparser.c: 337:             var_sys_NVM.learningCurrentDecelarationClose=var_sys_N
      +                          VM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22522  0031CA  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22523  0031CC  6E17               	movwf	??_write_eusartparser^0,c
 22524  0031CE  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22525  0031D0  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22526  0031D2  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22527  0031D4  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22528  0031D6  1C17               	comf	??_write_eusartparser^0,w,c
 22529  0031D8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22530  0031DA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22531  0031DC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22532  0031DE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22533  0031E0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22534  0031E2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22535  0031E4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22536  0031E6  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22537  0031E8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22538  0031EA  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22539  0031EC  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22540  0031EE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22541  0031F0  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22542  0031F2  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22543  0031F4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22544  0031F6  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22545  0031F8  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22546  0031FA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22547  0031FC  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22548                           
 22549                           ;eusartparser.c: 338:             break;
 22550  0031FE  0012               	return	
 22551  003200                     l24554:
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;eusartparser.c: 341:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*1
      +                          6));
 22555  003200  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22556  003202  6E17               	movwf	??_write_eusartparser^0,c
 22557  003204  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22558  003206  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22559  003208  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22560  00320A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22561  00320C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22562  003210  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22563  003214  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22564  003216  6A17               	clrf	??_write_eusartparser^0,c
 22565  003218  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22566  00321A  1017               	iorwf	??_write_eusartparser^0,w,c
 22567  00321C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22568  00321E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22569  003220  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22570  003222  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22571  003224  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22572  003226  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22573  003228  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22574  00322A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22575  00322C  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22576  00322E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22577                           
 22578                           ;eusartparser.c: 342:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1
      +                          *16));
 22579  003230  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22580  003232  6E17               	movwf	??_write_eusartparser^0,c
 22581  003234  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22582  003236  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22583  003238  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22584  00323A  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22585  00323C  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22586  003240  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22587  003244  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22588  003246  6A17               	clrf	??_write_eusartparser^0,c
 22589  003248  1C17               	comf	??_write_eusartparser^0,w,c
 22590  00324A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22591  00324C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22592  00324E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22593  003250  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22594  003252  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22595  003254  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22596  003256  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22597  003258  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22598  00325A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22599  00325C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22600  00325E  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22601  003260  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22602  003262  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22603  003264  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22604  003266  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22605  003268  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22606  00326A  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22607  00326C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22608  00326E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22609                           
 22610                           ;eusartparser.c: 343:             break;
 22611  003270  0012               	return	
 22612  003272                     l24556:
 22613                           
 22614                           ; BSR set to: 0
 22615                           ;eusartparser.c: 345:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*1
      +                          6));
 22616  003272  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22617  003274  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22618  003276  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22619  003278  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22620  00327A  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22621  00327C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22622  00327E  0E00               	movlw	0
 22623  003280  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22624  003282  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22625  003284  0E00               	movlw	0
 22626  003286  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22627  003288  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22628                           
 22629                           ;eusartparser.c: 346:             var_sys_NVM.learningCurrentDecelarationOpen=var_sys_NV
      +                          M.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0
      +                          *16));
 22630  00328A  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22631  00328C  6E17               	movwf	??_write_eusartparser^0,c
 22632  00328E  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22633  003290  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22634  003292  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22635  003294  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22636  003296  1C17               	comf	??_write_eusartparser^0,w,c
 22637  003298  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22638  00329A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22639  00329C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22640  00329E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22641  0032A0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22642  0032A2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22643  0032A4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22644  0032A6  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22645  0032A8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22646  0032AA  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22647  0032AC  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22648  0032AE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22649  0032B0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22650  0032B2  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22651  0032B4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22652  0032B6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22653  0032B8  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22654  0032BA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22655  0032BC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22656                           
 22657                           ;eusartparser.c: 347:             break;
 22658  0032BE  0012               	return	
 22659  0032C0                     l3660:
 22660                           
 22661                           ; BSR set to: 0
 22662                           ;eusartparser.c: 350:             var_sys_NVM.learningCurrentNormalClose=package.data.da
      +                          ta16;
 22663  0032C0  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22664  0032C4  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22665                           
 22666                           ;eusartparser.c: 351:             break;
 22667  0032C8  0012               	return	
 22668  0032CA                     l3661:
 22669                           
 22670                           ; BSR set to: 0
 22671                           ;eusartparser.c: 354:             var_sys_NVM.learningCurrentNormalOpen=package.data.dat
      +                          a16;
 22672  0032CA  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22673  0032CE  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22674                           
 22675                           ;eusartparser.c: 355:             break;
 22676  0032D2  0012               	return	
 22677  0032D4                     l24558:
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;eusartparser.c: 358:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22681  0032D4  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22682  0032D6  6E17               	movwf	??_write_eusartparser^0,c
 22683  0032D8  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22684  0032DA  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22685  0032DC  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22686  0032DE  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22687  0032E0  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22688  0032E4  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22689  0032E8  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22690  0032EA  6A17               	clrf	??_write_eusartparser^0,c
 22691  0032EC  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22692  0032EE  1017               	iorwf	??_write_eusartparser^0,w,c
 22693  0032F0  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22694  0032F2  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22695  0032F4  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22696  0032F6  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22697  0032F8  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22698  0032FA  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22699  0032FC  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22700  0032FE  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22701  003300  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22702  003302  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22703                           
 22704                           ;eusartparser.c: 359:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22705  003304  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22706  003306  6E17               	movwf	??_write_eusartparser^0,c
 22707  003308  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22708  00330A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22709  00330C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22710  00330E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22711  003310  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22712  003314  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22713  003318  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22714  00331A  6A17               	clrf	??_write_eusartparser^0,c
 22715  00331C  1C17               	comf	??_write_eusartparser^0,w,c
 22716  00331E  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22717  003320  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22718  003322  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22719  003324  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22720  003326  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22721  003328  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22722  00332A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22723  00332C  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22724  00332E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22725  003330  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22726  003332  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22727  003334  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22728  003336  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22729  003338  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22730  00333A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22731  00333C  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22732  00333E  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22733  003340  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22734  003342  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22735                           
 22736                           ;eusartparser.c: 360:             break;
 22737  003344  0012               	return	
 22738  003346                     l24560:
 22739                           
 22740                           ; BSR set to: 0
 22741                           ;eusartparser.c: 362:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22742  003346  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22743  003348  11CC               	iorwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22744  00334A  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22745  00334C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22746  00334E  11CD               	iorwf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22747  003350  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22748  003352  0E00               	movlw	0
 22749  003354  11CE               	iorwf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22750  003356  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22751  003358  0E00               	movlw	0
 22752  00335A  11CF               	iorwf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22753  00335C  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22754                           
 22755                           ;eusartparser.c: 363:             var_sys_NVM.learningTimeToOpen=var_sys_NVM.learningTim
      +                          eToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22756  00335E  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22757  003360  6E17               	movwf	??_write_eusartparser^0,c
 22758  003362  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22759  003364  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22760  003366  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22761  003368  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22762  00336A  1C17               	comf	??_write_eusartparser^0,w,c
 22763  00336C  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22764  00336E  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22765  003370  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22766  003372  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22767  003374  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22768  003376  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22769  003378  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22770  00337A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22771  00337C  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22772  00337E  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22773  003380  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22774  003382  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22775  003384  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22776  003386  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22777  003388  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22778  00338A  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22779  00338C  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22780  00338E  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22781  003390  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22782                           
 22783                           ;eusartparser.c: 364:             break;
 22784  003392  0012               	return	
 22785  003394                     l24562:
 22786                           
 22787                           ; BSR set to: 0
 22788                           ;eusartparser.c: 367:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22789  003394  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22790  003396  6E17               	movwf	??_write_eusartparser^0,c
 22791  003398  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22792  00339A  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22793  00339C  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22794  00339E  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22795  0033A0  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22796  0033A4  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22797  0033A8  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22798  0033AA  6A17               	clrf	??_write_eusartparser^0,c
 22799  0033AC  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22800  0033AE  1017               	iorwf	??_write_eusartparser^0,w,c
 22801  0033B0  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22802  0033B2  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22803  0033B4  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22804  0033B6  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22805  0033B8  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22806  0033BA  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22807  0033BC  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22808  0033BE  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22809  0033C0  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22810  0033C2  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22811                           
 22812                           ;eusartparser.c: 368:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22813  0033C4  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22814  0033C6  6E17               	movwf	??_write_eusartparser^0,c
 22815  0033C8  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22816  0033CA  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22817  0033CC  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22818  0033CE  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22819  0033D0  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22820  0033D4  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22821  0033D8  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22822  0033DA  6A17               	clrf	??_write_eusartparser^0,c
 22823  0033DC  1C17               	comf	??_write_eusartparser^0,w,c
 22824  0033DE  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22825  0033E0  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22826  0033E2  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22827  0033E4  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22828  0033E6  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22829  0033E8  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22830  0033EA  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22831  0033EC  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22832  0033EE  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22833  0033F0  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22834  0033F2  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22835  0033F4  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22836  0033F6  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22837  0033F8  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22838  0033FA  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22839  0033FC  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22840  0033FE  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22841  003400  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22842  003402  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22843                           
 22844                           ;eusartparser.c: 369:             break;
 22845  003404  0012               	return	
 22846  003406                     l24564:
 22847                           
 22848                           ; BSR set to: 0
 22849                           ;eusartparser.c: 371:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22850  003406  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22851  003408  11D0               	iorwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22852  00340A  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22853  00340C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22854  00340E  11D1               	iorwf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22855  003410  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22856  003412  0E00               	movlw	0
 22857  003414  11D2               	iorwf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22858  003416  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22859  003418  0E00               	movlw	0
 22860  00341A  11D3               	iorwf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22861  00341C  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22862                           
 22863                           ;eusartparser.c: 372:             var_sys_NVM.learningTimeToClose=var_sys_NVM.learningTi
      +                          meToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22864  00341E  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22865  003420  6E17               	movwf	??_write_eusartparser^0,c
 22866  003422  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22867  003424  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22868  003426  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22869  003428  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22870  00342A  1C17               	comf	??_write_eusartparser^0,w,c
 22871  00342C  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22872  00342E  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22873  003430  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22874  003432  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22875  003434  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22876  003436  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22877  003438  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22878  00343A  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22879  00343C  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22880  00343E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22881  003440  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22882  003442  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22883  003444  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22884  003446  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22885  003448  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22886  00344A  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22887  00344C  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22888  00344E  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22889  003450  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22890                           
 22891                           ;eusartparser.c: 373:             break;
 22892  003452  0012               	return	
 22893  003454                     l24568:
 22894                           
 22895                           ; BSR set to: 0
 22896  003454  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22897  003456  6E17               	movwf	??_write_eusartparser^0,c
 22898  003458  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22899                           
 22900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22901                           ; Switch size 1, requested type "simple"
 22902                           ; Number of cases is 1, Range of values is 0 to 0
 22903                           ; switch strategies available:
 22904                           ; Name         Instructions Cycles
 22905                           ; simple_byte            4     3 (average)
 22906                           ;	Chosen strategy is simple_byte
 22907  00345A  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22908  00345C  0A00               	xorlw	0	; case 0
 22909  00345E  A4D8               	btfss	status,2,c
 22910  003460  0012               	return	
 22911                           
 22912                           ; BSR set to: 0
 22913                           ; Switch size 1, requested type "simple"
 22914                           ; Number of cases is 43, Range of values is 0 to 51
 22915                           ; switch strategies available:
 22916                           ; Name         Instructions Cycles
 22917                           ; simple_byte          130    66 (average)
 22918                           ;	Chosen strategy is simple_byte
 22919  003462  5017               	movf	??_write_eusartparser^0,w,c
 22920  003464  0A00               	xorlw	0	; case 0
 22921  003466  B4D8               	btfsc	status,2,c
 22922  003468  D5B5               	goto	l3623
 22923  00346A  0A02               	xorlw	2	; case 2
 22924  00346C  B4D8               	btfsc	status,2,c
 22925  00346E  D5BF               	goto	l3628
 22926  003470  0A01               	xorlw	1	; case 3
 22927  003472  B4D8               	btfsc	status,2,c
 22928  003474  D5E5               	goto	l3642
 22929  003476  0A06               	xorlw	6	; case 5
 22930  003478  B4D8               	btfsc	status,2,c
 22931  00347A  D5BE               	goto	l3630
 22932  00347C  0A02               	xorlw	2	; case 7
 22933  00347E  B4D8               	btfsc	status,2,c
 22934  003480  D5D7               	goto	l3639
 22935  003482  0A0F               	xorlw	15	; case 8
 22936  003484  B4D8               	btfsc	status,2,c
 22937  003486  D5EB               	goto	l3649
 22938  003488  0A02               	xorlw	2	; case 10
 22939  00348A  B4D8               	btfsc	status,2,c
 22940  00348C  D5DC               	goto	l3644
 22941  00348E  0A1A               	xorlw	26	; case 16
 22942  003490  B4D8               	btfsc	status,2,c
 22943  003492  D5A0               	goto	l3623
 22944  003494  0A01               	xorlw	1	; case 17
 22945  003496  B4D8               	btfsc	status,2,c
 22946  003498  D5A2               	goto	l3625
 22947  00349A  0A03               	xorlw	3	; case 18
 22948  00349C  B4D8               	btfsc	status,2,c
 22949  00349E  D5A4               	goto	l3626
 22950  0034A0  0A01               	xorlw	1	; case 19
 22951  0034A2  B4D8               	btfsc	status,2,c
 22952  0034A4  D5A4               	goto	l3628
 22953  0034A6  0A07               	xorlw	7	; case 20
 22954  0034A8  B4D8               	btfsc	status,2,c
 22955  0034AA  D5A6               	goto	l3630
 22956  0034AC  0A01               	xorlw	1	; case 21
 22957  0034AE  B4D8               	btfsc	status,2,c
 22958  0034B0  D5A8               	goto	l3631
 22959  0034B2  0A03               	xorlw	3	; case 22
 22960  0034B4  B4D8               	btfsc	status,2,c
 22961  0034B6  D5AA               	goto	l3632
 22962  0034B8  0A01               	xorlw	1	; case 23
 22963  0034BA  B4D8               	btfsc	status,2,c
 22964  0034BC  D5AA               	goto	l3633
 22965  0034BE  0A0F               	xorlw	15	; case 24
 22966  0034C0  B4D8               	btfsc	status,2,c
 22967  0034C2  D5AA               	goto	l3634
 22968  0034C4  0A01               	xorlw	1	; case 25
 22969  0034C6  B4D8               	btfsc	status,2,c
 22970  0034C8  D5AA               	goto	l3635
 22971  0034CA  0A03               	xorlw	3	; case 26
 22972  0034CC  B4D8               	btfsc	status,2,c
 22973  0034CE  D5AA               	goto	l3636
 22974  0034D0  0A01               	xorlw	1	; case 27
 22975  0034D2  B4D8               	btfsc	status,2,c
 22976  0034D4  D5AA               	goto	l3637
 22977  0034D6  0A07               	xorlw	7	; case 28
 22978  0034D8  B4D8               	btfsc	status,2,c
 22979  0034DA  D5AA               	goto	l3639
 22980  0034DC  0A01               	xorlw	1	; case 29
 22981  0034DE  B4D8               	btfsc	status,2,c
 22982  0034E0  D5AA               	goto	l3640
 22983  0034E2  0A03               	xorlw	3	; case 30
 22984  0034E4  B4D8               	btfsc	status,2,c
 22985  0034E6  D5AC               	goto	l3642
 22986  0034E8  0A01               	xorlw	1	; case 31
 22987  0034EA  B4D8               	btfsc	status,2,c
 22988  0034EC  D5AC               	goto	l3644
 22989  0034EE  0A3F               	xorlw	63	; case 32
 22990  0034F0  B4D8               	btfsc	status,2,c
 22991  0034F2  D5AC               	goto	l3645
 22992  0034F4  0A01               	xorlw	1	; case 33
 22993  0034F6  B4D8               	btfsc	status,2,c
 22994  0034F8  D5AC               	goto	l3646
 22995  0034FA  0A03               	xorlw	3	; case 34
 22996  0034FC  B4D8               	btfsc	status,2,c
 22997  0034FE  D5AC               	goto	l3647
 22998  003500  0A01               	xorlw	1	; case 35
 22999  003502  B4D8               	btfsc	status,2,c
 23000  003504  D5AC               	goto	l3649
 23001  003506  0A07               	xorlw	7	; case 36
 23002  003508  B4D8               	btfsc	status,2,c
 23003  00350A  D5AC               	goto	l3650
 23004  00350C  0A01               	xorlw	1	; case 37
 23005  00350E  B4D8               	btfsc	status,2,c
 23006  003510  D5AC               	goto	l3651
 23007  003512  0A03               	xorlw	3	; case 38
 23008  003514  B4D8               	btfsc	status,2,c
 23009  003516  D5AC               	goto	l3652
 23010  003518  0A01               	xorlw	1	; case 39
 23011  00351A  B4D8               	btfsc	status,2,c
 23012  00351C  D5AE               	goto	l24546
 23013  00351E  0A0F               	xorlw	15	; case 40
 23014  003520  B4D8               	btfsc	status,2,c
 23015  003522  D5E4               	goto	l24548
 23016  003524  0A01               	xorlw	1	; case 41
 23017  003526  B4D8               	btfsc	status,2,c
 23018  003528  D608               	goto	l3655
 23019  00352A  0A03               	xorlw	3	; case 42
 23020  00352C  B4D8               	btfsc	status,2,c
 23021  00352E  D608               	goto	l24550
 23022  003530  0A01               	xorlw	1	; case 43
 23023  003532  B4D8               	btfsc	status,2,c
 23024  003534  D63E               	goto	l24552
 23025  003536  0A07               	xorlw	7	; case 44
 23026  003538  B4D8               	btfsc	status,2,c
 23027  00353A  D662               	goto	l24554
 23028  00353C  0A01               	xorlw	1	; case 45
 23029  00353E  B4D8               	btfsc	status,2,c
 23030  003540  D698               	goto	l24556
 23031  003542  0A03               	xorlw	3	; case 46
 23032  003544  B4D8               	btfsc	status,2,c
 23033  003546  D6BC               	goto	l3660
 23034  003548  0A01               	xorlw	1	; case 47
 23035  00354A  B4D8               	btfsc	status,2,c
 23036  00354C  D6BE               	goto	l3661
 23037  00354E  0A1F               	xorlw	31	; case 48
 23038  003550  B4D8               	btfsc	status,2,c
 23039  003552  D6C0               	goto	l24558
 23040  003554  0A01               	xorlw	1	; case 49
 23041  003556  B4D8               	btfsc	status,2,c
 23042  003558  D6F6               	goto	l24560
 23043  00355A  0A03               	xorlw	3	; case 50
 23044  00355C  B4D8               	btfsc	status,2,c
 23045  00355E  D71A               	goto	l24562
 23046  003560  0A01               	xorlw	1	; case 51
 23047  003562  A4D8               	btfss	status,2,c
 23048  003564  0012               	return	
 23049  003566  D74F               	goto	l24564
 23050  003568                     __end_of_write_eusartparser:
 23051                           	callstack 0
 23052                           
 23053 ;; *************** function _validateRemoteSerialNumber *****************
 23054 ;; Defined at:
 23055 ;;		line 27 in file "controlMemory_MC50.c"
 23056 ;; Parameters:    Size  Location     Type
 23057 ;;  serial          4   45[COMRAM] unsigned long 
 23058 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 23059 ;;  position        2   50[COMRAM] PTR unsigned char 
 23060 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 23061 ;; Auto vars:     Size  Location     Type
 23062 ;;  mask            4   52[COMRAM] unsigned long 
 23063 ;;  i               1   57[COMRAM] unsigned char 
 23064 ;;  j               1   56[COMRAM] unsigned char 
 23065 ;; Return value:  Size  Location     Type
 23066 ;;                  1    wreg      enum E10539
 23067 ;; Registers used:
 23068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23069 ;; Tracked objects:
 23070 ;;		On entry : 3F/0
 23071 ;;		On exit  : 3F/0
 23072 ;;		Unchanged: 0/0
 23073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23074 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23075 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23076 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23077 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23078 ;;Total ram usage:       21 bytes
 23079 ;; Hardware stack levels used: 1
 23080 ;; Hardware stack levels required when called: 13
 23081 ;; This function calls:
 23082 ;;		_i2c_readDataBlock
 23083 ;; This function is called by:
 23084 ;;		_keeloqDecryptPacket
 23085 ;;		_DecryptPacket_12BIT
 23086 ;;		_controlSelectRemote
 23087 ;;		_eusartparser
 23088 ;; This function uses a non-reentrant model
 23089 ;;
 23090                           
 23091                           	psect	text76
 23092  0061FC                     __ptext76:
 23093                           	callstack 0
 23094  0061FC                     _validateRemoteSerialNumber:
 23095                           	callstack 14
 23096                           
 23097                           ; BSR set to: 0
 23098                           ;controlMemory_MC50.c: 29:     char j=0;
 23099                           
 23100                           ; BSR set to: 0
 23101                           ;incstack = 0
 23102  0061FC  0E00               	movlw	0
 23103  0061FE  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23104                           
 23105                           ; BSR set to: 0
 23106                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 23107  006200  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 23108  006202  A4D8               	btfss	status,2,c
 23109  006204  D009               	goto	l1436
 23110                           
 23111                           ; BSR set to: 0
 23112                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 23113  006206  0EFF               	movlw	255
 23114  006208  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 23115  00620A  0EFF               	movlw	255
 23116  00620C  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 23117  00620E  0EFF               	movlw	255
 23118  006210  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 23119  006212  0E0F               	movlw	15
 23120  006214  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 23121                           
 23122                           ;controlMemory_MC50.c: 36:     }
 23123  006216  D004               	goto	l20764
 23124  006218                     l1436:
 23125                           
 23126                           ; BSR set to: 0
 23127                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 23128  006218  6835               	setf	validateRemoteSerialNumber@mask^0,c
 23129  00621A  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 23130  00621C  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 23131  00621E  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 23132  006220                     l20764:
 23133                           
 23134                           ; BSR set to: 0
 23135                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 23136  006220  0E00               	movlw	0
 23137  006222  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23138  006224  D056               	goto	l20782
 23139  006226                     l20766:
 23140                           
 23141                           ; BSR set to: 0
 23142                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 23143  006226  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23144  00622A  0E03               	movlw	3
 23145  00622C  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23146  00622E  A4D8               	btfss	status,2,c
 23147  006230  D01C               	goto	l20772
 23148                           
 23149                           ; BSR set to: 0
 23150                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 23151  006232  0E00               	movlw	0
 23152  006234  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23153                           
 23154                           ; BSR set to: 0
 23155                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23156  006236  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23157  006238  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23158  00623A  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23159  00623C  90D8               	bcf	status,0,c
 23160  00623E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23161  006240  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23162  006242  90D8               	bcf	status,0,c
 23163  006244  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23164  006246  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23165  006248  0E00               	movlw	0
 23166  00624A  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23167  00624C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23168  00624E  0E02               	movlw	2
 23169  006250  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23170  006252  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23171  006254  0EA2               	movlw	low _memoryTEMP
 23172  006256  6E24               	movwf	i2c_readDataBlock@data^0,c
 23173  006258  0E02               	movlw	high _memoryTEMP
 23174  00625A  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23175  00625C  0E00               	movlw	0
 23176  00625E  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23177  006260  0E10               	movlw	16
 23178  006262  6E26               	movwf	i2c_readDataBlock@len^0,c
 23179  006264  0E50               	movlw	80
 23180  006266  ECF2  F044         	call	_i2c_readDataBlock
 23181  00626A                     l20772:
 23182                           
 23183                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23184  00626A  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23185  00626C  0D04               	mullw	4
 23186  00626E  0EA2               	movlw	low _memoryTEMP
 23187  006270  24F3               	addwf	243,w,c
 23188  006272  6ED9               	movwf	fsr2l,c
 23189  006274  0E02               	movlw	high _memoryTEMP
 23190  006276  20F4               	addwfc	prodh,w,c
 23191  006278  6EDA               	movwf	fsr2h,c
 23192  00627A  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23193  00627E  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23194  006282  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23195  006286  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23196  00628A  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23197  00628C  0100               	movlb	0	; () banked
 23198  00628E  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23199  006290  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23200  006292  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23201  006294  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23202  006296  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23203  006298  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23204  00629A  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23205  00629C  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23206  00629E  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23207  0062A0  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23208  0062A2  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23209  0062A4  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23210  0062A6  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23211  0062A8  E112               	bnz	l20780
 23212  0062AA  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23213  0062AC  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23214  0062AE  E10F               	bnz	l20780
 23215  0062B0  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23216  0062B2  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23217  0062B4  E10C               	bnz	l20780
 23218  0062B6  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23219  0062B8  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23220  0062BA  A4D8               	btfss	status,2,c
 23221  0062BC  D008               	goto	l20780
 23222                           
 23223                           ; BSR set to: 0
 23224                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 23225  0062BE  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23226  0062C2  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23227  0062C6  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23228                           
 23229                           ; BSR set to: 0
 23230                           ;controlMemory_MC50.c: 54:             return TypeFull;
 23231  0062CA  0E01               	movlw	1
 23232  0062CC  0012               	return	
 23233  0062CE                     l20780:
 23234                           
 23235                           ; BSR set to: 0
 23236                           ;controlMemory_MC50.c: 57:         j++;
 23237  0062CE  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23238                           
 23239                           ;controlMemory_MC50.c: 59:     }
 23240  0062D0  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23241  0062D2                     l20782:
 23242                           
 23243                           ; BSR set to: 0
 23244  0062D2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 23245  0062D4  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23246  0062D6  A0D8               	btfss	status,0,c
 23247  0062D8  D7A6               	goto	l20766
 23248                           
 23249                           ; BSR set to: 0
 23250                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 23251  0062DA  0E00               	movlw	0
 23252  0062DC  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23253  0062DE  D056               	goto	l20802
 23254  0062E0                     l20786:
 23255                           
 23256                           ; BSR set to: 0
 23257                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 23258  0062E0  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23259  0062E4  0E03               	movlw	3
 23260  0062E6  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23261  0062E8  A4D8               	btfss	status,2,c
 23262  0062EA  D01C               	goto	l20792
 23263                           
 23264                           ; BSR set to: 0
 23265                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 23266  0062EC  0E00               	movlw	0
 23267  0062EE  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23268                           
 23269                           ; BSR set to: 0
 23270                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23271  0062F0  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23272  0062F2  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23273  0062F4  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23274  0062F6  90D8               	bcf	status,0,c
 23275  0062F8  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23276  0062FA  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23277  0062FC  90D8               	bcf	status,0,c
 23278  0062FE  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23279  006300  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23280  006302  0E00               	movlw	0
 23281  006304  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23282  006306  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23283  006308  0E05               	movlw	5
 23284  00630A  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23285  00630C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23286  00630E  0EA2               	movlw	low _memoryTEMP
 23287  006310  6E24               	movwf	i2c_readDataBlock@data^0,c
 23288  006312  0E02               	movlw	high _memoryTEMP
 23289  006314  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23290  006316  0E00               	movlw	0
 23291  006318  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23292  00631A  0E10               	movlw	16
 23293  00631C  6E26               	movwf	i2c_readDataBlock@len^0,c
 23294  00631E  0E50               	movlw	80
 23295  006320  ECF2  F044         	call	_i2c_readDataBlock
 23296  006324                     l20792:
 23297                           
 23298                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23299  006324  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23300  006326  0D04               	mullw	4
 23301  006328  0EA2               	movlw	low _memoryTEMP
 23302  00632A  24F3               	addwf	243,w,c
 23303  00632C  6ED9               	movwf	fsr2l,c
 23304  00632E  0E02               	movlw	high _memoryTEMP
 23305  006330  20F4               	addwfc	prodh,w,c
 23306  006332  6EDA               	movwf	fsr2h,c
 23307  006334  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23308  006338  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23309  00633C  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23310  006340  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23311  006344  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23312  006346  0100               	movlb	0	; () banked
 23313  006348  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23314  00634A  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23315  00634C  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23316  00634E  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23317  006350  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23318  006352  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23319  006354  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23320  006356  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23321  006358  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23322  00635A  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23323  00635C  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23324  00635E  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23325  006360  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23326  006362  E112               	bnz	l20800
 23327  006364  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23328  006366  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23329  006368  E10F               	bnz	l20800
 23330  00636A  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23331  00636C  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23332  00636E  E10C               	bnz	l20800
 23333  006370  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23334  006372  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23335  006374  A4D8               	btfss	status,2,c
 23336  006376  D008               	goto	l20800
 23337                           
 23338                           ; BSR set to: 0
 23339                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 23340  006378  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23341  00637C  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23342  006380  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23343                           
 23344                           ; BSR set to: 0
 23345                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 23346  006384  0E02               	movlw	2
 23347  006386  0012               	return	
 23348  006388                     l20800:
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;controlMemory_MC50.c: 75:         j++;
 23352  006388  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23353                           
 23354                           ;controlMemory_MC50.c: 76:     }
 23355  00638A  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23356  00638C                     l20802:
 23357                           
 23358                           ; BSR set to: 0
 23359  00638C  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23360  00638E  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23361  006390  A0D8               	btfss	status,0,c
 23362  006392  D7A6               	goto	l20786
 23363                           
 23364                           ; BSR set to: 0
 23365                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23366  006394  0E00               	movlw	0
 23367                           
 23368                           ; BSR set to: 0
 23369  006396  0012               	return		;funcret
 23370  006398                     __end_of_validateRemoteSerialNumber:
 23371                           	callstack 0
 23372                           
 23373 ;; *************** function _updateChangesToUart *****************
 23374 ;; Defined at:
 23375 ;;		line 720 in file "eusartparser.c"
 23376 ;; Parameters:    Size  Location     Type
 23377 ;;		None
 23378 ;; Auto vars:     Size  Location     Type
 23379 ;;  i               1   27[COMRAM] unsigned char 
 23380 ;;  package         7   28[COMRAM] struct package_t
 23381 ;; Return value:  Size  Location     Type
 23382 ;;                  1    wreg      void 
 23383 ;; Registers used:
 23384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23385 ;; Tracked objects:
 23386 ;;		On entry : 3F/1
 23387 ;;		On exit  : 0/0
 23388 ;;		Unchanged: 0/0
 23389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23391 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23394 ;;Total ram usage:        8 bytes
 23395 ;; Hardware stack levels used: 1
 23396 ;; Hardware stack levels required when called: 7
 23397 ;; This function calls:
 23398 ;;		_init_package
 23399 ;;		_read_eusartparser
 23400 ;; This function is called by:
 23401 ;;		_eusartparser
 23402 ;; This function uses a non-reentrant model
 23403 ;;
 23404                           
 23405                           	psect	text77
 23406  0097AE                     __ptext77:
 23407                           	callstack 0
 23408  0097AE                     _updateChangesToUart:
 23409                           	callstack 22
 23410                           
 23411                           ; BSR set to: 1
 23412                           ;eusartparser.c: 721:     struct package_t package;;eusartparser.c: 722:     init_packag
      +                          e(&package);
 23413                           
 23414                           ; BSR set to: 0
 23415                           ;incstack = 0
 23416  0097AE  0E1D               	movlw	low updateChangesToUart@package
 23417  0097B0  6E10               	movwf	init_package@package^0,c
 23418  0097B2  6A11               	clrf	(init_package@package+1)^0,c
 23419  0097B4  ECF0  F04B         	call	_init_package	;wreg free
 23420                           
 23421                           ;eusartparser.c: 723:     package.functioncode=0x00;
 23422  0097B8  0E00               	movlw	0
 23423  0097BA  6E1D               	movwf	updateChangesToUart@package^0,c
 23424                           
 23425                           ;eusartparser.c: 724:     package.data.data16=0x0000;
 23426  0097BC  0E00               	movlw	0
 23427  0097BE  6E20               	movwf	(updateChangesToUart@package+3)^0,c
 23428  0097C0  0E00               	movlw	0
 23429  0097C2  6E1F               	movwf	(updateChangesToUart@package+2)^0,c
 23430                           
 23431                           ;eusartparser.c: 725:     for (uint8_t i=0x00;i<=0x3A;i++){
 23432  0097C4  0E00               	movlw	0
 23433  0097C6  6E1C               	movwf	updateChangesToUart@i^0,c
 23434  0097C8                     l3800:
 23435                           
 23436                           ;eusartparser.c: 726:         package.address=i;
 23437  0097C8  C01C  F01E         	movff	updateChangesToUart@i,updateChangesToUart@package+1
 23438                           
 23439                           ;eusartparser.c: 727:         read_eusartparser(&package);
 23440  0097CC  0E1D               	movlw	low updateChangesToUart@package
 23441  0097CE  6E18               	movwf	read_eusartparser@package^0,c
 23442  0097D0  6A19               	clrf	(read_eusartparser@package+1)^0,c
 23443  0097D2  EC9C  F014         	call	_read_eusartparser	;wreg free
 23444                           
 23445                           ;eusartparser.c: 728:     }
 23446  0097D6  2A1C               	incf	updateChangesToUart@i^0,f,c
 23447  0097D8  0E3A               	movlw	58
 23448  0097DA  641C               	cpfsgt	updateChangesToUart@i^0,c
 23449  0097DC  D7F5               	goto	l3800
 23450  0097DE  0012               	return	
 23451  0097E0                     __end_of_updateChangesToUart:
 23452                           	callstack 0
 23453                           
 23454 ;; *************** function _read_eusartparser *****************
 23455 ;; Defined at:
 23456 ;;		line 14 in file "eusartparser.c"
 23457 ;; Parameters:    Size  Location     Type
 23458 ;;  package         2   23[COMRAM] PTR struct package_t
 23459 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 23460 ;; Auto vars:     Size  Location     Type
 23461 ;;		None
 23462 ;; Return value:  Size  Location     Type
 23463 ;;                  1    wreg      void 
 23464 ;; Registers used:
 23465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23466 ;; Tracked objects:
 23467 ;;		On entry : 0/0
 23468 ;;		On exit  : 0/0
 23469 ;;		Unchanged: 0/0
 23470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23475 ;;Total ram usage:        4 bytes
 23476 ;; Hardware stack levels used: 1
 23477 ;; Hardware stack levels required when called: 6
 23478 ;; This function calls:
 23479 ;;		_write_package
 23480 ;; This function is called by:
 23481 ;;		_eusartparser
 23482 ;;		_updateChangesToUart
 23483 ;; This function uses a non-reentrant model
 23484 ;;
 23485                           
 23486                           	psect	text78
 23487  002938                     __ptext78:
 23488                           	callstack 0
 23489  002938                     _read_eusartparser:
 23490                           	callstack 22
 23491                           
 23492                           ;eusartparser.c: 15:     switch(package->address){
 23493                           
 23494                           ;incstack = 0
 23495  002938  D2B2               	goto	l27536
 23496  00293A                     l27374:
 23497                           
 23498                           ;eusartparser.c: 18:             package->data.data8[1]=var_sys_NVM.decelarationClose;
 23499  00293A  EE20 F003          	lfsr	2,3
 23500  00293E  5018               	movf	read_eusartparser@package^0,w,c
 23501  002940  26D9               	addwf	fsr2l,f,c
 23502  002942  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23503  002944  22DA               	addwfc	fsr2h,f,c
 23504  002946  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 23505                           
 23506                           ;eusartparser.c: 19:             package->data.data8[0]=var_sys_NVM.decelarationOpen;
 23507  00294A  EE20 F002          	lfsr	2,2
 23508  00294E  5018               	movf	read_eusartparser@package^0,w,c
 23509  002950  26D9               	addwf	fsr2l,f,c
 23510  002952  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23511  002954  22DA               	addwfc	fsr2h,f,c
 23512  002956  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 23513  00295A                     l27376:
 23514                           
 23515                           ;eusartparser.c: 20:             write_package(*package);
 23516  00295A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23517  00295E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23518  002962  EE00  F011         	lfsr	0,write_package@package
 23519  002966  0E06               	movlw	6
 23520  002968                     u33431:
 23521  002968  CFDB FFEB          	movff	plusw2,plusw0
 23522  00296C  06E8               	decf	wreg,f,c
 23523  00296E  E2FC               	bc	u33431
 23524  002970  EC67  F04C         	call	_write_package	;wreg free
 23525                           
 23526                           ;eusartparser.c: 21:             break;
 23527  002974  0012               	return	
 23528  002976                     l27378:
 23529                           
 23530                           ;eusartparser.c: 23:             package->data.data8[1]=var_sys_NVM.motorSensitivity;
 23531  002976  EE20 F003          	lfsr	2,3
 23532  00297A  5018               	movf	read_eusartparser@package^0,w,c
 23533  00297C  26D9               	addwf	fsr2l,f,c
 23534  00297E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23535  002980  22DA               	addwfc	fsr2h,f,c
 23536  002982  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 23537                           
 23538                           ;eusartparser.c: 24:             package->data.data8[0]=var_sys_NVM.motorPower;
 23539  002986  EE20 F002          	lfsr	2,2
 23540  00298A  5018               	movf	read_eusartparser@package^0,w,c
 23541  00298C  26D9               	addwf	fsr2l,f,c
 23542  00298E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23543  002990  22DA               	addwfc	fsr2h,f,c
 23544  002992  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 23545  002996  D7E1               	goto	l27376
 23546  002998                     l27382:
 23547                           
 23548                           ;eusartparser.c: 28:             package->data.data8[1]=var_sys_NVM.walkTime;
 23549  002998  EE20 F003          	lfsr	2,3
 23550  00299C  5018               	movf	read_eusartparser@package^0,w,c
 23551  00299E  26D9               	addwf	fsr2l,f,c
 23552  0029A0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23553  0029A2  22DA               	addwfc	fsr2h,f,c
 23554  0029A4  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 23555  0029A8  D22D               	goto	L101
 23556  0029AA                     l27386:
 23557                           
 23558                           ;eusartparser.c: 34:             package->data.data8[1]=var_sys_NVM.autoTimeWalkClose;
 23559  0029AA  EE20 F003          	lfsr	2,3
 23560  0029AE  5018               	movf	read_eusartparser@package^0,w,c
 23561  0029B0  26D9               	addwf	fsr2l,f,c
 23562  0029B2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23563  0029B4  22DA               	addwfc	fsr2h,f,c
 23564  0029B6  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 23565                           
 23566                           ;eusartparser.c: 35:             package->data.data8[0]=var_sys_NVM.autoTimeFullClose;
 23567  0029BA  EE20 F002          	lfsr	2,2
 23568  0029BE  5018               	movf	read_eusartparser@package^0,w,c
 23569  0029C0  26D9               	addwf	fsr2l,f,c
 23570  0029C2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23571  0029C4  22DA               	addwfc	fsr2h,f,c
 23572  0029C6  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 23573  0029CA  D7C7               	goto	l27376
 23574  0029CC                     l27390:
 23575                           
 23576                           ;eusartparser.c: 40:             package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 23577  0029CC  EE20 F003          	lfsr	2,3
 23578  0029D0  5018               	movf	read_eusartparser@package^0,w,c
 23579  0029D2  26D9               	addwf	fsr2l,f,c
 23580  0029D4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23581  0029D6  22DA               	addwfc	fsr2h,f,c
 23582  0029D8  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 23583                           
 23584                           ;eusartparser.c: 41:             package->data.data8[0]=var_sys_NVM.photoCellIsON;
 23585  0029DC  EE20 F002          	lfsr	2,2
 23586  0029E0  5018               	movf	read_eusartparser@package^0,w,c
 23587  0029E2  26D9               	addwf	fsr2l,f,c
 23588  0029E4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23589  0029E6  22DA               	addwfc	fsr2h,f,c
 23590  0029E8  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 23591  0029EC  D7B6               	goto	l27376
 23592  0029EE                     l27394:
 23593                           
 23594                           ;eusartparser.c: 45:             package->data.data8[1]=var_sys_NVM.securityBandType;
 23595  0029EE  EE20 F003          	lfsr	2,3
 23596  0029F2  5018               	movf	read_eusartparser@package^0,w,c
 23597  0029F4  26D9               	addwf	fsr2l,f,c
 23598  0029F6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23599  0029F8  22DA               	addwfc	fsr2h,f,c
 23600  0029FA  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 23601                           
 23602                           ;eusartparser.c: 46:             package->data.data8[0]=var_sys_NVM.securityBandIsON;
 23603  0029FE  EE20 F002          	lfsr	2,2
 23604  002A02  5018               	movf	read_eusartparser@package^0,w,c
 23605  002A04  26D9               	addwf	fsr2l,f,c
 23606  002A06  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23607  002A08  22DA               	addwfc	fsr2h,f,c
 23608  002A0A  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 23609  002A0E  D7A5               	goto	l27376
 23610  002A10                     l27398:
 23611                           
 23612                           ;eusartparser.c: 50:             package->data.data8[1]=var_sys_NVM.securityBandInOpen;
 23613  002A10  EE20 F003          	lfsr	2,3
 23614  002A14  5018               	movf	read_eusartparser@package^0,w,c
 23615  002A16  26D9               	addwf	fsr2l,f,c
 23616  002A18  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23617  002A1A  22DA               	addwfc	fsr2h,f,c
 23618  002A1C  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 23619  002A20  D1F1               	goto	L101
 23620  002A22                     l27402:
 23621                           
 23622                           ;eusartparser.c: 55:             package->data.data8[1]=var_sys_NVM.operationMode;
 23623  002A22  EE20 F003          	lfsr	2,3
 23624  002A26  5018               	movf	read_eusartparser@package^0,w,c
 23625  002A28  26D9               	addwf	fsr2l,f,c
 23626  002A2A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23627  002A2C  22DA               	addwfc	fsr2h,f,c
 23628  002A2E  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 23629  002A32  D1E8               	goto	L101
 23630  002A34                     l27406:
 23631                           
 23632                           ;eusartparser.c: 60:             package->data.data8[1]=var_sys_NVM.flashLightMode;
 23633  002A34  EE20 F003          	lfsr	2,3
 23634  002A38  5018               	movf	read_eusartparser@package^0,w,c
 23635  002A3A  26D9               	addwf	fsr2l,f,c
 23636  002A3C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23637  002A3E  22DA               	addwfc	fsr2h,f,c
 23638  002A40  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 23639  002A44  D1DF               	goto	L101
 23640  002A46                     l27410:
 23641                           
 23642                           ;eusartparser.c: 65:             package->data.data8[1]=var_sys_NVM.programmingDistance;
 23643  002A46  EE20 F003          	lfsr	2,3
 23644  002A4A  5018               	movf	read_eusartparser@package^0,w,c
 23645  002A4C  26D9               	addwf	fsr2l,f,c
 23646  002A4E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23647  002A50  22DA               	addwfc	fsr2h,f,c
 23648  002A52  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 23649  002A56  D1D6               	goto	L101
 23650  002A58                     l27414:
 23651                           
 23652                           ;eusartparser.c: 70:             package->data.data8[1]=var_sys_NVM.decelarationSensivit
      +                          y;
 23653  002A58  EE20 F003          	lfsr	2,3
 23654  002A5C  5018               	movf	read_eusartparser@package^0,w,c
 23655  002A5E  26D9               	addwf	fsr2l,f,c
 23656  002A60  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23657  002A62  22DA               	addwfc	fsr2h,f,c
 23658  002A64  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 23659  002A68  D1CD               	goto	L101
 23660  002A6A                     l27418:
 23661                           
 23662                           ;eusartparser.c: 76:             package->data.data8[1]=var_sys_NVM.homemPresente;
 23663  002A6A  EE20 F003          	lfsr	2,3
 23664  002A6E  5018               	movf	read_eusartparser@package^0,w,c
 23665  002A70  26D9               	addwf	fsr2l,f,c
 23666  002A72  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23667  002A74  22DA               	addwfc	fsr2h,f,c
 23668  002A76  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 23669  002A7A  D1C4               	goto	L101
 23670  002A7C                     l27422:
 23671                           
 23672                           ;eusartparser.c: 82:             package->data.data8[1]=var_sys_NVM.logicDigital;
 23673  002A7C  EE20 F003          	lfsr	2,3
 23674  002A80  5018               	movf	read_eusartparser@package^0,w,c
 23675  002A82  26D9               	addwf	fsr2l,f,c
 23676  002A84  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23677  002A86  22DA               	addwfc	fsr2h,f,c
 23678  002A88  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 23679  002A8C  D1BB               	goto	L101
 23680  002A8E                     l27426:
 23681                           
 23682                           ;eusartparser.c: 87:             package->data.data8[1]=var_sys_NVM.softstop;
 23683  002A8E  EE20 F003          	lfsr	2,3
 23684  002A92  5018               	movf	read_eusartparser@package^0,w,c
 23685  002A94  26D9               	addwf	fsr2l,f,c
 23686  002A96  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23687  002A98  22DA               	addwfc	fsr2h,f,c
 23688  002A9A  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 23689                           
 23690                           ;eusartparser.c: 88:             package->data.data8[0]=var_sys_NVM.softStart;
 23691  002A9E  EE20 F002          	lfsr	2,2
 23692  002AA2  5018               	movf	read_eusartparser@package^0,w,c
 23693  002AA4  26D9               	addwf	fsr2l,f,c
 23694  002AA6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23695  002AA8  22DA               	addwfc	fsr2h,f,c
 23696  002AAA  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 23697  002AAE  D755               	goto	l27376
 23698  002AB0                     l27430:
 23699                           
 23700                           ;eusartparser.c: 93:             package->data.data8[1]=var_sys_NVM.ligthTime;
 23701  002AB0  EE20 F003          	lfsr	2,3
 23702  002AB4  5018               	movf	read_eusartparser@package^0,w,c
 23703  002AB6  26D9               	addwf	fsr2l,f,c
 23704  002AB8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23705  002ABA  22DA               	addwfc	fsr2h,f,c
 23706  002ABC  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 23707  002AC0  D1A1               	goto	L101
 23708  002AC2                     l27434:
 23709                           
 23710                           ;eusartparser.c: 99:             package->data.data8[1]=var_sys_NVM.folow_me;
 23711  002AC2  EE20 F003          	lfsr	2,3
 23712  002AC6  5018               	movf	read_eusartparser@package^0,w,c
 23713  002AC8  26D9               	addwf	fsr2l,f,c
 23714  002ACA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23715  002ACC  22DA               	addwfc	fsr2h,f,c
 23716  002ACE  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 23717  002AD2  D198               	goto	L101
 23718  002AD4                     l27438:
 23719                           
 23720                           ;eusartparser.c: 104:             package->data.data8[1]=var_sys_NVM.Stopboton;
 23721  002AD4  EE20 F003          	lfsr	2,3
 23722  002AD8  5018               	movf	read_eusartparser@package^0,w,c
 23723  002ADA  26D9               	addwf	fsr2l,f,c
 23724  002ADC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23725  002ADE  22DA               	addwfc	fsr2h,f,c
 23726  002AE0  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 23727  002AE4  D18F               	goto	L101
 23728  002AE6                     l27442:
 23729                           
 23730                           ;eusartparser.c: 109:             package->data.data8[1]=var_sys_NVM.electricBrake;
 23731  002AE6  EE20 F003          	lfsr	2,3
 23732  002AEA  5018               	movf	read_eusartparser@package^0,w,c
 23733  002AEC  26D9               	addwf	fsr2l,f,c
 23734  002AEE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23735  002AF0  22DA               	addwfc	fsr2h,f,c
 23736  002AF2  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 23737  002AF6  D186               	goto	L101
 23738  002AF8                     l27446:
 23739                           
 23740                           ;eusartparser.c: 114:             package->data.data8[1]=var_sys_NVM.velocityDecelaratio
      +                          n;
 23741  002AF8  EE20 F003          	lfsr	2,3
 23742  002AFC  5018               	movf	read_eusartparser@package^0,w,c
 23743  002AFE  26D9               	addwf	fsr2l,f,c
 23744  002B00  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23745  002B02  22DA               	addwfc	fsr2h,f,c
 23746  002B04  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 23747  002B08  D17D               	goto	L101
 23748  002B0A                     l27450:
 23749                           
 23750                           ;eusartparser.c: 120:             package->data.data8[1]=var_sys_NVM.flashRGBMode;
 23751  002B0A  EE20 F003          	lfsr	2,3
 23752  002B0E  5018               	movf	read_eusartparser@package^0,w,c
 23753  002B10  26D9               	addwf	fsr2l,f,c
 23754  002B12  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23755  002B14  22DA               	addwfc	fsr2h,f,c
 23756  002B16  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 23757  002B1A  D174               	goto	L101
 23758  002B1C                     l27454:
 23759                           
 23760                           ;eusartparser.c: 125:             package->data.data8[1]=var_sys_NVM.Direction_motor;
 23761  002B1C  EE20 F003          	lfsr	2,3
 23762  002B20  5018               	movf	read_eusartparser@package^0,w,c
 23763  002B22  26D9               	addwf	fsr2l,f,c
 23764  002B24  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23765  002B26  22DA               	addwfc	fsr2h,f,c
 23766  002B28  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 23767  002B2C  D16B               	goto	L101
 23768  002B2E                     l27458:
 23769                           
 23770                           ;eusartparser.c: 130:             package->data.data8[1]=var_sys_NVM.TypeofMotor;
 23771  002B2E  EE20 F003          	lfsr	2,3
 23772  002B32  5018               	movf	read_eusartparser@package^0,w,c
 23773  002B34  26D9               	addwf	fsr2l,f,c
 23774  002B36  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23775  002B38  22DA               	addwfc	fsr2h,f,c
 23776  002B3A  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 23777  002B3E  D162               	goto	L101
 23778  002B40                     l27462:
 23779                           
 23780                           ;eusartparser.c: 135:             package->data.data8[1]=var_sys_NVM.positionRemotesWalk
      +                          ;
 23781  002B40  EE20 F003          	lfsr	2,3
 23782  002B44  5018               	movf	read_eusartparser@package^0,w,c
 23783  002B46  26D9               	addwf	fsr2l,f,c
 23784  002B48  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23785  002B4A  22DA               	addwfc	fsr2h,f,c
 23786  002B4C  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 23787                           
 23788                           ;eusartparser.c: 136:             package->data.data8[0]=var_sys_NVM.positionRemotesFull
      +                          ;
 23789  002B50  EE20 F002          	lfsr	2,2
 23790  002B54  5018               	movf	read_eusartparser@package^0,w,c
 23791  002B56  26D9               	addwf	fsr2l,f,c
 23792  002B58  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23793  002B5A  22DA               	addwfc	fsr2h,f,c
 23794  002B5C  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 23795  002B60  D6FC               	goto	l27376
 23796  002B62                     l27466:
 23797                           
 23798                           ;eusartparser.c: 140:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.count
      +                          erMoves))+1);
 23799  002B62  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 23800  002B66  EE10 F002          	lfsr	1,2
 23801  002B6A  5018               	movf	read_eusartparser@package^0,w,c
 23802  002B6C  26E1               	addwf	fsr1l,f,c
 23803  002B6E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23804  002B70  22E2               	addwfc	fsr1h,f,c
 23805  002B72  CFDE FFE6          	movff	postinc2,postinc1
 23806  002B76  CFDD FFE5          	movff	postdec2,postdec1
 23807                           
 23808                           ;eusartparser.c: 141:             write_package(*package);
 23809  002B7A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23810  002B7E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23811  002B82  EE00  F011         	lfsr	0,write_package@package
 23812  002B86  0E06               	movlw	6
 23813  002B88                     u33441:
 23814  002B88  CFDB FFEB          	movff	plusw2,plusw0
 23815  002B8C  06E8               	decf	wreg,f,c
 23816  002B8E  E2FC               	bc	u33441
 23817  002B90  EC67  F04C         	call	_write_package	;wreg free
 23818                           
 23819                           ;eusartparser.c: 142:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.count
      +                          erMoves))+0);
 23820  002B94  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 23821  002B98  EE10 F002          	lfsr	1,2
 23822  002B9C  5018               	movf	read_eusartparser@package^0,w,c
 23823  002B9E  26E1               	addwf	fsr1l,f,c
 23824  002BA0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23825  002BA2  22E2               	addwfc	fsr1h,f,c
 23826  002BA4  CFDE FFE6          	movff	postinc2,postinc1
 23827  002BA8  CFDD FFE5          	movff	postdec2,postdec1
 23828                           
 23829                           ;eusartparser.c: 143:             write_package(*package);
 23830  002BAC  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23831  002BB0  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23832  002BB4  EE00  F011         	lfsr	0,write_package@package
 23833  002BB8  0E06               	movlw	6
 23834  002BBA                     u33451:
 23835  002BBA  CFDB FFEB          	movff	plusw2,plusw0
 23836  002BBE  06E8               	decf	wreg,f,c
 23837  002BC0  E2FC               	bc	u33451
 23838  002BC2  EC67  F04C         	call	_write_package	;wreg free
 23839                           
 23840                           ;eusartparser.c: 144:             break;
 23841  002BC6  0012               	return	
 23842  002BC8                     l27472:
 23843                           
 23844                           ;eusartparser.c: 146:             package->data.data8[1]=var_sys_NVM.OnlyRollingCode;
 23845  002BC8  EE20 F003          	lfsr	2,3
 23846  002BCC  5018               	movf	read_eusartparser@package^0,w,c
 23847  002BCE  26D9               	addwf	fsr2l,f,c
 23848  002BD0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23849  002BD2  22DA               	addwfc	fsr2h,f,c
 23850  002BD4  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 23851  002BD8  D115               	goto	L101
 23852  002BDA                     l27476:
 23853                           
 23854                           ;eusartparser.c: 151:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationClose))+1);
 23855  002BDA  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 23856  002BDE  EE10 F002          	lfsr	1,2
 23857  002BE2  5018               	movf	read_eusartparser@package^0,w,c
 23858  002BE4  26E1               	addwf	fsr1l,f,c
 23859  002BE6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23860  002BE8  22E2               	addwfc	fsr1h,f,c
 23861  002BEA  CFDE FFE6          	movff	postinc2,postinc1
 23862  002BEE  CFDD FFE5          	movff	postdec2,postdec1
 23863                           
 23864                           ;eusartparser.c: 152:             write_package(*package);
 23865  002BF2  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23866  002BF6  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23867  002BFA  EE00  F011         	lfsr	0,write_package@package
 23868  002BFE  0E06               	movlw	6
 23869  002C00                     u33461:
 23870  002C00  CFDB FFEB          	movff	plusw2,plusw0
 23871  002C04  06E8               	decf	wreg,f,c
 23872  002C06  E2FC               	bc	u33461
 23873  002C08  EC67  F04C         	call	_write_package	;wreg free
 23874                           
 23875                           ;eusartparser.c: 153:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationClose))+0);
 23876  002C0C  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23877  002C10  EE10 F002          	lfsr	1,2
 23878  002C14  5018               	movf	read_eusartparser@package^0,w,c
 23879  002C16  26E1               	addwf	fsr1l,f,c
 23880  002C18  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23881  002C1A  22E2               	addwfc	fsr1h,f,c
 23882  002C1C  CFDE FFE6          	movff	postinc2,postinc1
 23883  002C20  CFDD FFE5          	movff	postdec2,postdec1
 23884                           
 23885                           ;eusartparser.c: 154:             write_package(*package);
 23886  002C24  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23887  002C28  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23888  002C2C  EE00  F011         	lfsr	0,write_package@package
 23889  002C30  0E06               	movlw	6
 23890  002C32                     u33471:
 23891  002C32  CFDB FFEB          	movff	plusw2,plusw0
 23892  002C36  06E8               	decf	wreg,f,c
 23893  002C38  E2FC               	bc	u33471
 23894  002C3A  EC67  F04C         	call	_write_package	;wreg free
 23895                           
 23896                           ;eusartparser.c: 155:             break;
 23897  002C3E  0012               	return	
 23898  002C40                     l27482:
 23899                           
 23900                           ;eusartparser.c: 157:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationOpen))+1);
 23901  002C40  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23902  002C44  EE10 F002          	lfsr	1,2
 23903  002C48  5018               	movf	read_eusartparser@package^0,w,c
 23904  002C4A  26E1               	addwf	fsr1l,f,c
 23905  002C4C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23906  002C4E  22E2               	addwfc	fsr1h,f,c
 23907  002C50  CFDE FFE6          	movff	postinc2,postinc1
 23908  002C54  CFDD FFE5          	movff	postdec2,postdec1
 23909                           
 23910                           ;eusartparser.c: 158:             write_package(*package);
 23911  002C58  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23912  002C5C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23913  002C60  EE00  F011         	lfsr	0,write_package@package
 23914  002C64  0E06               	movlw	6
 23915  002C66                     u33481:
 23916  002C66  CFDB FFEB          	movff	plusw2,plusw0
 23917  002C6A  06E8               	decf	wreg,f,c
 23918  002C6C  E2FC               	bc	u33481
 23919  002C6E  EC67  F04C         	call	_write_package	;wreg free
 23920                           
 23921                           ;eusartparser.c: 159:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingCurrentDecelarationOpen))+0);
 23922  002C72  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23923  002C76  EE10 F002          	lfsr	1,2
 23924  002C7A  5018               	movf	read_eusartparser@package^0,w,c
 23925  002C7C  26E1               	addwf	fsr1l,f,c
 23926  002C7E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23927  002C80  22E2               	addwfc	fsr1h,f,c
 23928  002C82  CFDE FFE6          	movff	postinc2,postinc1
 23929  002C86  CFDD FFE5          	movff	postdec2,postdec1
 23930                           
 23931                           ;eusartparser.c: 160:             write_package(*package);
 23932  002C8A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23933  002C8E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23934  002C92  EE00  F011         	lfsr	0,write_package@package
 23935  002C96  0E06               	movlw	6
 23936  002C98                     u33491:
 23937  002C98  CFDB FFEB          	movff	plusw2,plusw0
 23938  002C9C  06E8               	decf	wreg,f,c
 23939  002C9E  E2FC               	bc	u33491
 23940  002CA0  EC67  F04C         	call	_write_package	;wreg free
 23941                           
 23942                           ;eusartparser.c: 161:             break;
 23943  002CA4  0012               	return	
 23944  002CA6                     l27488:
 23945                           
 23946                           ;eusartparser.c: 163:             package->data.data16=var_sys_NVM.learningCurrentNormal
      +                          Close;
 23947  002CA6  EE20 F002          	lfsr	2,2
 23948  002CAA  5018               	movf	read_eusartparser@package^0,w,c
 23949  002CAC  26D9               	addwf	fsr2l,f,c
 23950  002CAE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23951  002CB0  22DA               	addwfc	fsr2h,f,c
 23952  002CB2  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 23953  002CB6  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 23954  002CBA  D64F               	goto	l27376
 23955  002CBC                     l27492:
 23956                           
 23957                           ;eusartparser.c: 167:             package->data.data16=var_sys_NVM.learningCurrentNormal
      +                          Open;
 23958  002CBC  EE20 F002          	lfsr	2,2
 23959  002CC0  5018               	movf	read_eusartparser@package^0,w,c
 23960  002CC2  26D9               	addwf	fsr2l,f,c
 23961  002CC4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23962  002CC6  22DA               	addwfc	fsr2h,f,c
 23963  002CC8  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 23964  002CCC  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 23965  002CD0  D644               	goto	l27376
 23966  002CD2                     l27496:
 23967                           
 23968                           ;eusartparser.c: 171:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToOpen))+1);
 23969  002CD2  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 23970  002CD6  EE10 F002          	lfsr	1,2
 23971  002CDA  5018               	movf	read_eusartparser@package^0,w,c
 23972  002CDC  26E1               	addwf	fsr1l,f,c
 23973  002CDE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23974  002CE0  22E2               	addwfc	fsr1h,f,c
 23975  002CE2  CFDE FFE6          	movff	postinc2,postinc1
 23976  002CE6  CFDD FFE5          	movff	postdec2,postdec1
 23977                           
 23978                           ;eusartparser.c: 172:             write_package(*package);
 23979  002CEA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23980  002CEE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23981  002CF2  EE00  F011         	lfsr	0,write_package@package
 23982  002CF6  0E06               	movlw	6
 23983  002CF8                     u33501:
 23984  002CF8  CFDB FFEB          	movff	plusw2,plusw0
 23985  002CFC  06E8               	decf	wreg,f,c
 23986  002CFE  E2FC               	bc	u33501
 23987  002D00  EC67  F04C         	call	_write_package	;wreg free
 23988                           
 23989                           ;eusartparser.c: 173:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToOpen))+0);
 23990  002D04  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23991  002D08  EE10 F002          	lfsr	1,2
 23992  002D0C  5018               	movf	read_eusartparser@package^0,w,c
 23993  002D0E  26E1               	addwf	fsr1l,f,c
 23994  002D10  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23995  002D12  22E2               	addwfc	fsr1h,f,c
 23996  002D14  CFDE FFE6          	movff	postinc2,postinc1
 23997  002D18  CFDD FFE5          	movff	postdec2,postdec1
 23998                           
 23999                           ;eusartparser.c: 174:             write_package(*package);
 24000  002D1C  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24001  002D20  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24002  002D24  EE00  F011         	lfsr	0,write_package@package
 24003  002D28  0E06               	movlw	6
 24004  002D2A                     u33511:
 24005  002D2A  CFDB FFEB          	movff	plusw2,plusw0
 24006  002D2E  06E8               	decf	wreg,f,c
 24007  002D30  E2FC               	bc	u33511
 24008  002D32  EC67  F04C         	call	_write_package	;wreg free
 24009                           
 24010                           ;eusartparser.c: 175:             break;
 24011  002D36  0012               	return	
 24012  002D38                     l27502:
 24013                           
 24014                           ;eusartparser.c: 177:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToClose))+1);
 24015  002D38  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 24016  002D3C  EE10 F002          	lfsr	1,2
 24017  002D40  5018               	movf	read_eusartparser@package^0,w,c
 24018  002D42  26E1               	addwf	fsr1l,f,c
 24019  002D44  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24020  002D46  22E2               	addwfc	fsr1h,f,c
 24021  002D48  CFDE FFE6          	movff	postinc2,postinc1
 24022  002D4C  CFDD FFE5          	movff	postdec2,postdec1
 24023                           
 24024                           ;eusartparser.c: 178:             write_package(*package);
 24025  002D50  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24026  002D54  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24027  002D58  EE00  F011         	lfsr	0,write_package@package
 24028  002D5C  0E06               	movlw	6
 24029  002D5E                     u33521:
 24030  002D5E  CFDB FFEB          	movff	plusw2,plusw0
 24031  002D62  06E8               	decf	wreg,f,c
 24032  002D64  E2FC               	bc	u33521
 24033  002D66  EC67  F04C         	call	_write_package	;wreg free
 24034                           
 24035                           ;eusartparser.c: 179:             package->data.data16=*(((uint16_t*)&(var_sys_NVM.learn
      +                          ingTimeToClose))+0);
 24036  002D6A  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 24037  002D6E  EE10 F002          	lfsr	1,2
 24038  002D72  5018               	movf	read_eusartparser@package^0,w,c
 24039  002D74  26E1               	addwf	fsr1l,f,c
 24040  002D76  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24041  002D78  22E2               	addwfc	fsr1h,f,c
 24042  002D7A  CFDE FFE6          	movff	postinc2,postinc1
 24043  002D7E  CFDD FFE5          	movff	postdec2,postdec1
 24044                           
 24045                           ;eusartparser.c: 180:             write_package(*package);
 24046  002D82  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24047  002D86  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24048  002D8A  EE00  F011         	lfsr	0,write_package@package
 24049  002D8E  0E06               	movlw	6
 24050  002D90                     u33531:
 24051  002D90  CFDB FFEB          	movff	plusw2,plusw0
 24052  002D94  06E8               	decf	wreg,f,c
 24053  002D96  E2FC               	bc	u33531
 24054  002D98  EC67  F04C         	call	_write_package	;wreg free
 24055                           
 24056                           ;eusartparser.c: 181:             break;
 24057  002D9C  0012               	return	
 24058  002D9E                     l27508:
 24059                           
 24060                           ;eusartparser.c: 186:             package->data.data8[1]=RFFull;
 24061  002D9E  EE20 F003          	lfsr	2,3
 24062  002DA2  5018               	movf	read_eusartparser@package^0,w,c
 24063  002DA4  26D9               	addwf	fsr2l,f,c
 24064  002DA6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24065  002DA8  22DA               	addwfc	fsr2h,f,c
 24066  002DAA  C08B  FFDF         	movff	_RFFull,indf2	;volatile
 24067  002DAE  D02A               	goto	L101
 24068  002DB0                     l27512:
 24069                           
 24070                           ;eusartparser.c: 192:             package->data.data8[1]=var_sys.photoCellIsObstructed;
 24071  002DB0  EE20 F003          	lfsr	2,3
 24072  002DB4  5018               	movf	read_eusartparser@package^0,w,c
 24073  002DB6  26D9               	addwf	fsr2l,f,c
 24074  002DB8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24075  002DBA  22DA               	addwfc	fsr2h,f,c
 24076  002DBC  C101  FFDF         	movff	_var_sys+1,indf2	;volatile
 24077                           
 24078                           ;eusartparser.c: 193:             package->data.data8[0]=var_sys.SecurityBarIsObstructed
      +                          ;
 24079  002DC0  EE20 F002          	lfsr	2,2
 24080  002DC4  5018               	movf	read_eusartparser@package^0,w,c
 24081  002DC6  26D9               	addwf	fsr2l,f,c
 24082  002DC8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24083  002DCA  22DA               	addwfc	fsr2h,f,c
 24084  002DCC  C102  FFDF         	movff	_var_sys+2,indf2	;volatile
 24085  002DD0  D5C4               	goto	l27376
 24086  002DD2                     l27516:
 24087                           
 24088                           ;eusartparser.c: 198:             package->data.data8[1]=var_sys.FimCurso_CloseIsEnabled
      +                          ;
 24089  002DD2  EE20 F003          	lfsr	2,3
 24090  002DD6  5018               	movf	read_eusartparser@package^0,w,c
 24091  002DD8  26D9               	addwf	fsr2l,f,c
 24092  002DDA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24093  002DDC  22DA               	addwfc	fsr2h,f,c
 24094  002DDE  C103  FFDF         	movff	_var_sys+3,indf2	;volatile
 24095                           
 24096                           ;eusartparser.c: 199:             package->data.data8[0]=var_sys.FimCurso_OpenIsEnabled;
 24097  002DE2  EE20 F002          	lfsr	2,2
 24098  002DE6  5018               	movf	read_eusartparser@package^0,w,c
 24099  002DE8  26D9               	addwf	fsr2l,f,c
 24100  002DEA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24101  002DEC  22DA               	addwfc	fsr2h,f,c
 24102  002DEE  C104  FFDF         	movff	_var_sys+4,indf2	;volatile
 24103  002DF2  D5B3               	goto	l27376
 24104  002DF4                     l27520:
 24105                           
 24106                           ;eusartparser.c: 204:             package->data.data8[1]=var_sys.Statedoorcontrol;
 24107  002DF4  EE20 F003          	lfsr	2,3
 24108  002DF8  5018               	movf	read_eusartparser@package^0,w,c
 24109  002DFA  26D9               	addwf	fsr2l,f,c
 24110  002DFC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24111  002DFE  22DA               	addwfc	fsr2h,f,c
 24112  002E00  C11C  FFDF         	movff	_var_sys+28,indf2	;volatile
 24113  002E04                     L101:
 24114                           
 24115                           ;eusartparser.c: 205:             package->data.data8[0]=0x00;
 24116  002E04  EE20 F002          	lfsr	2,2
 24117  002E08  5018               	movf	read_eusartparser@package^0,w,c
 24118  002E0A  26D9               	addwf	fsr2l,f,c
 24119  002E0C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24120  002E0E  22DA               	addwfc	fsr2h,f,c
 24121  002E10  0E00               	movlw	0
 24122  002E12  6EDF               	movwf	indf2,c
 24123  002E14  D5A2               	goto	l27376
 24124  002E16                     l27524:
 24125                           
 24126                           ;eusartparser.c: 210:             package->data.data16=*(((uint16_t*)&(var_sys.PositionA
      +                          ctual))+1);
 24127  002E16  EE21  F020         	lfsr	2,_var_sys+32
 24128  002E1A  EE10 F002          	lfsr	1,2
 24129  002E1E  5018               	movf	read_eusartparser@package^0,w,c
 24130  002E20  26E1               	addwf	fsr1l,f,c
 24131  002E22  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24132  002E24  22E2               	addwfc	fsr1h,f,c
 24133  002E26  CFDE FFE6          	movff	postinc2,postinc1
 24134  002E2A  CFDD FFE5          	movff	postdec2,postdec1
 24135                           
 24136                           ;eusartparser.c: 211:             write_package(*package);
 24137  002E2E  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24138  002E32  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24139  002E36  EE00  F011         	lfsr	0,write_package@package
 24140  002E3A  0E06               	movlw	6
 24141  002E3C                     u33541:
 24142  002E3C  CFDB FFEB          	movff	plusw2,plusw0
 24143  002E40  06E8               	decf	wreg,f,c
 24144  002E42  E2FC               	bc	u33541
 24145  002E44  EC67  F04C         	call	_write_package	;wreg free
 24146                           
 24147                           ;eusartparser.c: 212:             package->data.data16=*(((uint16_t*)&(var_sys.PositionA
      +                          ctual))+0);
 24148  002E48  EE21  F01E         	lfsr	2,_var_sys+30
 24149  002E4C  EE10 F002          	lfsr	1,2
 24150  002E50  5018               	movf	read_eusartparser@package^0,w,c
 24151  002E52  26E1               	addwf	fsr1l,f,c
 24152  002E54  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24153  002E56  22E2               	addwfc	fsr1h,f,c
 24154  002E58  CFDE FFE6          	movff	postinc2,postinc1
 24155  002E5C  CFDD FFE5          	movff	postdec2,postdec1
 24156                           
 24157                           ;eusartparser.c: 213:             write_package(*package);
 24158  002E60  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24159  002E64  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24160  002E68  EE00  F011         	lfsr	0,write_package@package
 24161  002E6C  0E06               	movlw	6
 24162  002E6E                     u33551:
 24163  002E6E  CFDB FFEB          	movff	plusw2,plusw0
 24164  002E72  06E8               	decf	wreg,f,c
 24165  002E74  E2FC               	bc	u33551
 24166  002E76  EC67  F04C         	call	_write_package	;wreg free
 24167                           
 24168                           ;eusartparser.c: 214:             break;
 24169  002E7A  0012               	return	
 24170  002E7C                     l27530:
 24171                           
 24172                           ;eusartparser.c: 217:             package->data.data8[1]=var_sys.PositionIsLost;
 24173  002E7C  EE20 F003          	lfsr	2,3
 24174  002E80  5018               	movf	read_eusartparser@package^0,w,c
 24175  002E82  26D9               	addwf	fsr2l,f,c
 24176  002E84  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24177  002E86  22DA               	addwfc	fsr2h,f,c
 24178  002E88  C148  FFDF         	movff	_var_sys+72,indf2	;volatile
 24179                           
 24180                           ;eusartparser.c: 218:             package->data.data8[0]=var_sys.StateVersion;
 24181  002E8C  EE20 F002          	lfsr	2,2
 24182  002E90  5018               	movf	read_eusartparser@package^0,w,c
 24183  002E92  26D9               	addwf	fsr2l,f,c
 24184  002E94  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24185  002E96  22DA               	addwfc	fsr2h,f,c
 24186  002E98  C149  FFDF         	movff	_var_sys+73,indf2	;volatile
 24187  002E9C  D55E               	goto	l27376
 24188  002E9E                     l27536:
 24189  002E9E  EE20 F001          	lfsr	2,1
 24190  002EA2  5018               	movf	read_eusartparser@package^0,w,c
 24191  002EA4  26D9               	addwf	fsr2l,f,c
 24192  002EA6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24193  002EA8  22DA               	addwfc	fsr2h,f,c
 24194  002EAA  50DF               	movf	indf2,w,c
 24195  002EAC  6E1A               	movwf	??_read_eusartparser^0,c
 24196  002EAE  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 24197                           
 24198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24199                           ; Switch size 1, requested type "simple"
 24200                           ; Number of cases is 1, Range of values is 0 to 0
 24201                           ; switch strategies available:
 24202                           ; Name         Instructions Cycles
 24203                           ; simple_byte            4     3 (average)
 24204                           ;	Chosen strategy is simple_byte
 24205  002EB0  501B               	movf	(??_read_eusartparser+1)^0,w,c
 24206  002EB2  0A00               	xorlw	0	; case 0
 24207  002EB4  A4D8               	btfss	status,2,c
 24208  002EB6  0012               	return	
 24209                           
 24210                           ; Switch size 1, requested type "simple"
 24211                           ; Number of cases is 44, Range of values is 0 to 58
 24212                           ; switch strategies available:
 24213                           ; Name         Instructions Cycles
 24214                           ; simple_byte          133    67 (average)
 24215                           ;	Chosen strategy is simple_byte
 24216  002EB8  501A               	movf	??_read_eusartparser^0,w,c
 24217  002EBA  0A00               	xorlw	0	; case 0
 24218  002EBC  B4D8               	btfsc	status,2,c
 24219  002EBE  D53D               	goto	l27374
 24220  002EC0  0A02               	xorlw	2	; case 2
 24221  002EC2  B4D8               	btfsc	status,2,c
 24222  002EC4  D572               	goto	l27386
 24223  002EC6  0A01               	xorlw	1	; case 3
 24224  002EC8  B4D8               	btfsc	status,2,c
 24225  002ECA  D5F2               	goto	l27430
 24226  002ECC  0A06               	xorlw	6	; case 5
 24227  002ECE  B4D8               	btfsc	status,2,c
 24228  002ED0  D57D               	goto	l27390
 24229  002ED2  0A02               	xorlw	2	; case 7
 24230  002ED4  B4D8               	btfsc	status,2,c
 24231  002ED6  D5D2               	goto	l27422
 24232  002ED8  0A0F               	xorlw	15	; case 8
 24233  002EDA  B4D8               	btfsc	status,2,c
 24234  002EDC  D616               	goto	l27450
 24235  002EDE  0A02               	xorlw	2	; case 10
 24236  002EE0  B4D8               	btfsc	status,2,c
 24237  002EE2  D5EF               	goto	l27434
 24238  002EE4  0A1A               	xorlw	26	; case 16
 24239  002EE6  B4D8               	btfsc	status,2,c
 24240  002EE8  D528               	goto	l27374
 24241  002EEA  0A01               	xorlw	1	; case 17
 24242  002EEC  B4D8               	btfsc	status,2,c
 24243  002EEE  D543               	goto	l27378
 24244  002EF0  0A03               	xorlw	3	; case 18
 24245  002EF2  B4D8               	btfsc	status,2,c
 24246  002EF4  D551               	goto	l27382
 24247  002EF6  0A01               	xorlw	1	; case 19
 24248  002EF8  B4D8               	btfsc	status,2,c
 24249  002EFA  D557               	goto	l27386
 24250  002EFC  0A07               	xorlw	7	; case 20
 24251  002EFE  B4D8               	btfsc	status,2,c
 24252  002F00  D565               	goto	l27390
 24253  002F02  0A01               	xorlw	1	; case 21
 24254  002F04  B4D8               	btfsc	status,2,c
 24255  002F06  D573               	goto	l27394
 24256  002F08  0A03               	xorlw	3	; case 22
 24257  002F0A  B4D8               	btfsc	status,2,c
 24258  002F0C  D581               	goto	l27398
 24259  002F0E  0A01               	xorlw	1	; case 23
 24260  002F10  B4D8               	btfsc	status,2,c
 24261  002F12  D587               	goto	l27402
 24262  002F14  0A0F               	xorlw	15	; case 24
 24263  002F16  B4D8               	btfsc	status,2,c
 24264  002F18  D58D               	goto	l27406
 24265  002F1A  0A01               	xorlw	1	; case 25
 24266  002F1C  B4D8               	btfsc	status,2,c
 24267  002F1E  D593               	goto	l27410
 24268  002F20  0A03               	xorlw	3	; case 26
 24269  002F22  B4D8               	btfsc	status,2,c
 24270  002F24  D599               	goto	l27414
 24271  002F26  0A01               	xorlw	1	; case 27
 24272  002F28  B4D8               	btfsc	status,2,c
 24273  002F2A  D59F               	goto	l27418
 24274  002F2C  0A07               	xorlw	7	; case 28
 24275  002F2E  B4D8               	btfsc	status,2,c
 24276  002F30  D5A5               	goto	l27422
 24277  002F32  0A01               	xorlw	1	; case 29
 24278  002F34  B4D8               	btfsc	status,2,c
 24279  002F36  D5AB               	goto	l27426
 24280  002F38  0A03               	xorlw	3	; case 30
 24281  002F3A  B4D8               	btfsc	status,2,c
 24282  002F3C  D5B9               	goto	l27430
 24283  002F3E  0A01               	xorlw	1	; case 31
 24284  002F40  B4D8               	btfsc	status,2,c
 24285  002F42  D5BF               	goto	l27434
 24286  002F44  0A3F               	xorlw	63	; case 32
 24287  002F46  B4D8               	btfsc	status,2,c
 24288  002F48  D5C5               	goto	l27438
 24289  002F4A  0A01               	xorlw	1	; case 33
 24290  002F4C  B4D8               	btfsc	status,2,c
 24291  002F4E  D5CB               	goto	l27442
 24292  002F50  0A03               	xorlw	3	; case 34
 24293  002F52  B4D8               	btfsc	status,2,c
 24294  002F54  D5D1               	goto	l27446
 24295  002F56  0A01               	xorlw	1	; case 35
 24296  002F58  B4D8               	btfsc	status,2,c
 24297  002F5A  D5D7               	goto	l27450
 24298  002F5C  0A07               	xorlw	7	; case 36
 24299  002F5E  B4D8               	btfsc	status,2,c
 24300  002F60  D5DD               	goto	l27454
 24301  002F62  0A01               	xorlw	1	; case 37
 24302  002F64  B4D8               	btfsc	status,2,c
 24303  002F66  D5E3               	goto	l27458
 24304  002F68  0A03               	xorlw	3	; case 38
 24305  002F6A  B4D8               	btfsc	status,2,c
 24306  002F6C  D5E9               	goto	l27462
 24307  002F6E  0A01               	xorlw	1	; case 39
 24308  002F70  B4D8               	btfsc	status,2,c
 24309  002F72  D5F7               	goto	l27466
 24310  002F74  0A0E               	xorlw	14	; case 41
 24311  002F76  B4D8               	btfsc	status,2,c
 24312  002F78  D627               	goto	l27472
 24313  002F7A  0A03               	xorlw	3	; case 42
 24314  002F7C  B4D8               	btfsc	status,2,c
 24315  002F7E  D62D               	goto	l27476
 24316  002F80  0A06               	xorlw	6	; case 44
 24317  002F82  B4D8               	btfsc	status,2,c
 24318  002F84  D65D               	goto	l27482
 24319  002F86  0A02               	xorlw	2	; case 46
 24320  002F88  B4D8               	btfsc	status,2,c
 24321  002F8A  D68D               	goto	l27488
 24322  002F8C  0A01               	xorlw	1	; case 47
 24323  002F8E  B4D8               	btfsc	status,2,c
 24324  002F90  D695               	goto	l27492
 24325  002F92  0A1F               	xorlw	31	; case 48
 24326  002F94  B4D8               	btfsc	status,2,c
 24327  002F96  D69D               	goto	l27496
 24328  002F98  0A02               	xorlw	2	; case 50
 24329  002F9A  B4D8               	btfsc	status,2,c
 24330  002F9C  D6CD               	goto	l27502
 24331  002F9E  0A06               	xorlw	6	; case 52
 24332  002FA0  B4D8               	btfsc	status,2,c
 24333  002FA2  D6FD               	goto	l27508
 24334  002FA4  0A01               	xorlw	1	; case 53
 24335  002FA6  B4D8               	btfsc	status,2,c
 24336  002FA8  D703               	goto	l27512
 24337  002FAA  0A03               	xorlw	3	; case 54
 24338  002FAC  B4D8               	btfsc	status,2,c
 24339  002FAE  D711               	goto	l27516
 24340  002FB0  0A01               	xorlw	1	; case 55
 24341  002FB2  B4D8               	btfsc	status,2,c
 24342  002FB4  D71F               	goto	l27520
 24343  002FB6  0A0F               	xorlw	15	; case 56
 24344  002FB8  B4D8               	btfsc	status,2,c
 24345  002FBA  D72D               	goto	l27524
 24346  002FBC  0A02               	xorlw	2	; case 58
 24347  002FBE  A4D8               	btfss	status,2,c
 24348  002FC0  0012               	return	
 24349  002FC2  D75C               	goto	l27530
 24350  002FC4                     __end_of_read_eusartparser:
 24351                           	callstack 0
 24352                           
 24353 ;; *************** function _write_package *****************
 24354 ;; Defined at:
 24355 ;;		line 50 in file "eusartpackage.c"
 24356 ;; Parameters:    Size  Location     Type
 24357 ;;  package         7   16[COMRAM] const struct package_t
 24358 ;; Auto vars:     Size  Location     Type
 24359 ;;		None
 24360 ;; Return value:  Size  Location     Type
 24361 ;;                  1    wreg      void 
 24362 ;; Registers used:
 24363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24364 ;; Tracked objects:
 24365 ;;		On entry : 0/0
 24366 ;;		On exit  : 0/0
 24367 ;;		Unchanged: 0/0
 24368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24369 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24372 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24373 ;;Total ram usage:        7 bytes
 24374 ;; Hardware stack levels used: 1
 24375 ;; Hardware stack levels required when called: 5
 24376 ;; This function calls:
 24377 ;;		_EUSART1_Write
 24378 ;; This function is called by:
 24379 ;;		_read_eusartparser
 24380 ;;		_eusartparser
 24381 ;; This function uses a non-reentrant model
 24382 ;;
 24383                           
 24384                           	psect	text79
 24385  0098CE                     __ptext79:
 24386                           	callstack 0
 24387  0098CE                     _write_package:
 24388                           	callstack 24
 24389                           
 24390                           ;eusartpackage.c: 52:         if(package.valid==0)
 24391                           
 24392                           ;incstack = 0
 24393  0098CE  5017               	movf	(write_package@package+6)^0,w,c
 24394  0098D0  B4D8               	btfsc	status,2,c
 24395  0098D2  0012               	return	
 24396                           
 24397                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 24398  0098D4  5015               	movf	(write_package@package+4)^0,w,c
 24399  0098D6  ECCD  F04A         	call	_EUSART1_Write
 24400                           
 24401                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 24402  0098DA  5011               	movf	write_package@package^0,w,c
 24403  0098DC  ECCD  F04A         	call	_EUSART1_Write
 24404                           
 24405                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 24406  0098E0  5012               	movf	(write_package@package+1)^0,w,c
 24407  0098E2  ECCD  F04A         	call	_EUSART1_Write
 24408                           
 24409                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 24410  0098E6  5013               	movf	(write_package@package+2)^0,w,c
 24411  0098E8  ECCD  F04A         	call	_EUSART1_Write
 24412                           
 24413                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 24414  0098EC  5014               	movf	(write_package@package+3)^0,w,c
 24415  0098EE  ECCD  F04A         	call	_EUSART1_Write
 24416                           
 24417                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 24418  0098F2  5016               	movf	(write_package@package+5)^0,w,c
 24419  0098F4  ECCD  F04A         	call	_EUSART1_Write
 24420  0098F8  0012               	return		;funcret
 24421  0098FA                     __end_of_write_package:
 24422                           	callstack 0
 24423                           
 24424 ;; *************** function _EUSART1_Write *****************
 24425 ;; Defined at:
 24426 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 24427 ;; Parameters:    Size  Location     Type
 24428 ;;  txData          1    wreg     unsigned char 
 24429 ;; Auto vars:     Size  Location     Type
 24430 ;;  txData          1   15[COMRAM] unsigned char 
 24431 ;; Return value:  Size  Location     Type
 24432 ;;                  1    wreg      void 
 24433 ;; Registers used:
 24434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24435 ;; Tracked objects:
 24436 ;;		On entry : 0/0
 24437 ;;		On exit  : 3F/E
 24438 ;;		Unchanged: 0/0
 24439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24443 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24444 ;;Total ram usage:        1 bytes
 24445 ;; Hardware stack levels used: 1
 24446 ;; Hardware stack levels required when called: 4
 24447 ;; This function calls:
 24448 ;;		Nothing
 24449 ;; This function is called by:
 24450 ;;		_write_package
 24451 ;; This function uses a non-reentrant model
 24452 ;;
 24453                           
 24454                           	psect	text80
 24455  00959A                     __ptext80:
 24456                           	callstack 0
 24457  00959A                     _EUSART1_Write:
 24458                           	callstack 24
 24459                           
 24460                           ;incstack = 0
 24461                           ;EUSART1_Write@txData stored from wreg
 24462  00959A  6E10               	movwf	EUSART1_Write@txData^0,c
 24463  00959C                     
 24464                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 24465                           
 24466                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 24467  00959C  0101               	movlb	1	; () banked
 24468  00959E  51FD               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 24469  0095A0  B4D8               	btfsc	status,2,c
 24470  0095A2  D7FC               	goto	l20570
 24471                           
 24472                           ; BSR set to: 1
 24473                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 24474  0095A4  010E               	movlb	14	; () banked
 24475  0095A6  B9C5               	btfsc	197,4,b	;volatile
 24476  0095A8  D003               	goto	l100
 24477                           
 24478                           ; BSR set to: 14
 24479                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 24480  0095AA  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 24481                           
 24482                           ;mcc_generated_files/eusart1.c: 182:     }
 24483  0095AE  D012               	goto	l20586
 24484  0095B0                     l100:
 24485                           
 24486                           ; BSR set to: 14
 24487                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 24488  0095B0  99C5               	bcf	197,4,b	;volatile
 24489                           
 24490                           ; BSR set to: 14
 24491                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 24492  0095B2  0E84               	movlw	low _eusart1TxBuffer
 24493  0095B4  0100               	movlb	0	; () banked
 24494  0095B6  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 24495  0095B8  6ED9               	movwf	fsr2l,c
 24496  0095BA  6ADA               	clrf	fsr2h,c
 24497  0095BC  0E02               	movlw	high _eusart1TxBuffer
 24498  0095BE  22DA               	addwfc	fsr2h,f,c
 24499  0095C0  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 24500                           
 24501                           ; BSR set to: 0
 24502  0095C4  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24506  0095C6  0E07               	movlw	7
 24507  0095C8  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 24508  0095CA  D002               	goto	l20584
 24509                           
 24510                           ; BSR set to: 0
 24511                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24512  0095CC  0E00               	movlw	0
 24513  0095CE  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24514  0095D0                     l20584:
 24515                           
 24516                           ; BSR set to: 0
 24517                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24518  0095D0  0101               	movlb	1	; () banked
 24519  0095D2  07FD               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 24520  0095D4                     l20586:
 24521                           
 24522                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24523  0095D4  010E               	movlb	14	; () banked
 24524  0095D6  89C5               	bsf	197,4,b	;volatile
 24525                           
 24526                           ; BSR set to: 14
 24527  0095D8  0012               	return		;funcret
 24528  0095DA                     __end_of_EUSART1_Write:
 24529                           	callstack 0
 24530                           
 24531 ;; *************** function _saveNewSerial *****************
 24532 ;; Defined at:
 24533 ;;		line 81 in file "controlMemory_MC50.c"
 24534 ;; Parameters:    Size  Location     Type
 24535 ;;  cmdType         1    wreg     unsigned char 
 24536 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 24537 ;;  position        1    4[BANK0 ] unsigned char 
 24538 ;; Auto vars:     Size  Location     Type
 24539 ;;  cmdType         1   57[COMRAM] unsigned char 
 24540 ;; Return value:  Size  Location     Type
 24541 ;;                  1    wreg      void 
 24542 ;; Registers used:
 24543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24544 ;; Tracked objects:
 24545 ;;		On entry : 3E/1
 24546 ;;		On exit  : 0/0
 24547 ;;		Unchanged: 0/0
 24548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24549 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24552 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24553 ;;Total ram usage:        8 bytes
 24554 ;; Hardware stack levels used: 1
 24555 ;; Hardware stack levels required when called: 13
 24556 ;; This function calls:
 24557 ;;		_i2c_writeNBytes
 24558 ;; This function is called by:
 24559 ;;		_controlSelectRemote
 24560 ;;		_eusartparser
 24561 ;; This function uses a non-reentrant model
 24562 ;;
 24563                           
 24564                           	psect	text81
 24565  008B3E                     __ptext81:
 24566                           	callstack 0
 24567  008B3E                     _saveNewSerial:
 24568                           	callstack 14
 24569                           
 24570                           ; BSR set to: 14
 24571                           ;incstack = 0
 24572                           ;saveNewSerial@cmdType stored from wreg
 24573  008B3E  6E3A               	movwf	saveNewSerial@cmdType^0,c
 24574                           
 24575                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 24576  008B40  503A               	movf	saveNewSerial@cmdType^0,w,c
 24577  008B42  A4D8               	btfss	status,2,c
 24578  008B44  D01A               	goto	l20812
 24579                           
 24580                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24581  008B46  0100               	movlb	0	; () banked
 24582  008B48  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24583  008B4A  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24584  008B4C  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24585  008B4E  90D8               	bcf	status,0,c
 24586  008B50  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24587  008B52  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24588  008B54  90D8               	bcf	status,0,c
 24589  008B56  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24590  008B58  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24591  008B5A  0E00               	movlw	0
 24592  008B5C  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24593  008B5E  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24594  008B60  0E02               	movlw	2
 24595  008B62  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24596  008B64  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24597  008B66  0ED8               	movlw	low saveNewSerial@tempSerial
 24598  008B68  6E24               	movwf	i2c_writeNBytes@data^0,c
 24599  008B6A  0E00               	movlw	0
 24600  008B6C  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24601  008B6E  0E04               	movlw	4
 24602  008B70  6E25               	movwf	i2c_writeNBytes@len^0,c
 24603  008B72  0E50               	movlw	80
 24604  008B74  EC2D  F045         	call	_i2c_writeNBytes
 24605                           
 24606                           ;controlMemory_MC50.c: 87:     }
 24607  008B78  0012               	return	
 24608  008B7A                     l20812:
 24609                           
 24610                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24611  008B7A  0100               	movlb	0	; () banked
 24612  008B7C  51DC               	movf	saveNewSerial@position& (0+255),w,b
 24613  008B7E  6FDD               	movwf	??_saveNewSerial& (0+255),b
 24614  008B80  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 24615  008B82  90D8               	bcf	status,0,c
 24616  008B84  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24617  008B86  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24618  008B88  90D8               	bcf	status,0,c
 24619  008B8A  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 24620  008B8C  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 24621  008B8E  0E00               	movlw	0
 24622  008B90  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 24623  008B92  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24624  008B94  0E05               	movlw	5
 24625  008B96  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 24626  008B98  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24627  008B9A  0ED8               	movlw	low saveNewSerial@tempSerial
 24628  008B9C  6E24               	movwf	i2c_writeNBytes@data^0,c
 24629  008B9E  0E00               	movlw	0
 24630  008BA0  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24631  008BA2  0E04               	movlw	4
 24632  008BA4  6E25               	movwf	i2c_writeNBytes@len^0,c
 24633  008BA6  0E50               	movlw	80
 24634  008BA8  EC2D  F045         	call	_i2c_writeNBytes
 24635  008BAC  0012               	return		;funcret
 24636  008BAE                     __end_of_saveNewSerial:
 24637                           	callstack 0
 24638                           
 24639 ;; *************** function _confirmpackage *****************
 24640 ;; Defined at:
 24641 ;;		line 381 in file "eusartparser.c"
 24642 ;; Parameters:    Size  Location     Type
 24643 ;;  package         2   17[COMRAM] PTR struct package_t
 24644 ;;		 -> main@package(7), 
 24645 ;;  confirm         1   19[COMRAM] _Bool 
 24646 ;; Auto vars:     Size  Location     Type
 24647 ;;		None
 24648 ;; Return value:  Size  Location     Type
 24649 ;;                  1    wreg      void 
 24650 ;; Registers used:
 24651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24652 ;; Tracked objects:
 24653 ;;		On entry : 0/0
 24654 ;;		On exit  : 0/0
 24655 ;;		Unchanged: 0/0
 24656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24657 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;Total ram usage:        3 bytes
 24662 ;; Hardware stack levels used: 1
 24663 ;; Hardware stack levels required when called: 5
 24664 ;; This function calls:
 24665 ;;		_init_package
 24666 ;; This function is called by:
 24667 ;;		_eusartparser
 24668 ;; This function uses a non-reentrant model
 24669 ;;
 24670                           
 24671                           	psect	text82
 24672  009008                     __ptext82:
 24673                           	callstack 0
 24674  009008                     _confirmpackage:
 24675                           	callstack 24
 24676                           
 24677                           ;eusartparser.c: 382:     init_package(package);
 24678                           
 24679                           ;incstack = 0
 24680  009008  C012  F010         	movff	confirmpackage@package,init_package@package
 24681  00900C  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24682  009010  ECF0  F04B         	call	_init_package	;wreg free
 24683                           
 24684                           ;eusartparser.c: 383:     package->functioncode=0x03;
 24685  009014  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24686  009018  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24687  00901C  0E03               	movlw	3
 24688  00901E  6EDF               	movwf	indf2,c
 24689                           
 24690                           ;eusartparser.c: 384:     package->address=0x00;
 24691  009020  EE20 F001          	lfsr	2,1
 24692  009024  5012               	movf	confirmpackage@package^0,w,c
 24693  009026  26D9               	addwf	fsr2l,f,c
 24694  009028  5013               	movf	(confirmpackage@package+1)^0,w,c
 24695  00902A  22DA               	addwfc	fsr2h,f,c
 24696  00902C  0E00               	movlw	0
 24697  00902E  6EDF               	movwf	indf2,c
 24698                           
 24699                           ;eusartparser.c: 385:     if(confirm==1)
 24700  009030  0414               	decf	confirmpackage@confirm^0,w,c
 24701  009032  A4D8               	btfss	status,2,c
 24702  009034  D00B               	goto	l27552
 24703                           
 24704                           ;eusartparser.c: 386:         package->data.data16=0x0001;
 24705  009036  EE20 F002          	lfsr	2,2
 24706  00903A  5012               	movf	confirmpackage@package^0,w,c
 24707  00903C  26D9               	addwf	fsr2l,f,c
 24708  00903E  5013               	movf	(confirmpackage@package+1)^0,w,c
 24709  009040  22DA               	addwfc	fsr2h,f,c
 24710  009042  0E01               	movlw	1
 24711  009044  6EDE               	movwf	postinc2,c
 24712  009046  0E00               	movlw	0
 24713  009048  6EDD               	movwf	postdec2,c
 24714  00904A  0012               	return	
 24715  00904C                     l27552:
 24716                           
 24717                           ;eusartparser.c: 388:         package->data.data16=0x0000;
 24718  00904C  EE20 F002          	lfsr	2,2
 24719  009050  5012               	movf	confirmpackage@package^0,w,c
 24720  009052  26D9               	addwf	fsr2l,f,c
 24721  009054  5013               	movf	(confirmpackage@package+1)^0,w,c
 24722  009056  22DA               	addwfc	fsr2h,f,c
 24723  009058  0E00               	movlw	0
 24724  00905A  6EDE               	movwf	postinc2,c
 24725  00905C  0E00               	movlw	0
 24726  00905E  6EDD               	movwf	postdec2,c
 24727  009060  0012               	return		;funcret
 24728  009062                     __end_of_confirmpackage:
 24729                           	callstack 0
 24730                           
 24731 ;; *************** function _init_package *****************
 24732 ;; Defined at:
 24733 ;;		line 11 in file "eusartpackage.c"
 24734 ;; Parameters:    Size  Location     Type
 24735 ;;  package         2   15[COMRAM] PTR struct package_t
 24736 ;;		 -> updateChangesToUart@package(7), main@package(7), 
 24737 ;; Auto vars:     Size  Location     Type
 24738 ;;		None
 24739 ;; Return value:  Size  Location     Type
 24740 ;;                  1    wreg      void 
 24741 ;; Registers used:
 24742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24743 ;; Tracked objects:
 24744 ;;		On entry : 0/1
 24745 ;;		On exit  : 0/0
 24746 ;;		Unchanged: 0/0
 24747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24752 ;;Total ram usage:        2 bytes
 24753 ;; Hardware stack levels used: 1
 24754 ;; Hardware stack levels required when called: 4
 24755 ;; This function calls:
 24756 ;;		Nothing
 24757 ;; This function is called by:
 24758 ;;		_confirmpackage
 24759 ;;		_updateChangesToUart
 24760 ;; This function uses a non-reentrant model
 24761 ;;
 24762                           
 24763                           	psect	text83
 24764  0097E0                     __ptext83:
 24765                           	callstack 0
 24766  0097E0                     _init_package:
 24767                           	callstack 24
 24768                           
 24769                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24770                           
 24771                           ;incstack = 0
 24772  0097E0  EE20 F004          	lfsr	2,4
 24773  0097E4  5010               	movf	init_package@package^0,w,c
 24774  0097E6  26D9               	addwf	fsr2l,f,c
 24775  0097E8  5011               	movf	(init_package@package+1)^0,w,c
 24776  0097EA  22DA               	addwfc	fsr2h,f,c
 24777  0097EC  0E0A               	movlw	10
 24778  0097EE  6EDF               	movwf	indf2,c
 24779                           
 24780                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24781  0097F0  EE20 F005          	lfsr	2,5
 24782  0097F4  5010               	movf	init_package@package^0,w,c
 24783  0097F6  26D9               	addwf	fsr2l,f,c
 24784  0097F8  5011               	movf	(init_package@package+1)^0,w,c
 24785  0097FA  22DA               	addwfc	fsr2h,f,c
 24786  0097FC  0E0D               	movlw	13
 24787  0097FE  6EDF               	movwf	indf2,c
 24788                           
 24789                           ;eusartpackage.c: 14:         package->valid=1;
 24790  009800  EE20 F006          	lfsr	2,6
 24791  009804  5010               	movf	init_package@package^0,w,c
 24792  009806  26D9               	addwf	fsr2l,f,c
 24793  009808  5011               	movf	(init_package@package+1)^0,w,c
 24794  00980A  22DA               	addwfc	fsr2h,f,c
 24795  00980C  0E01               	movlw	1
 24796  00980E  6EDF               	movwf	indf2,c
 24797  009810  0012               	return		;funcret
 24798  009812                     __end_of_init_package:
 24799                           	callstack 0
 24800                           
 24801 ;; *************** function _cmdMemoryIsEmpty *****************
 24802 ;; Defined at:
 24803 ;;		line 122 in file "controlMemory_MC50.c"
 24804 ;; Parameters:    Size  Location     Type
 24805 ;;  cmdType         1    wreg     unsigned char 
 24806 ;;  position        1   45[COMRAM] unsigned char 
 24807 ;; Auto vars:     Size  Location     Type
 24808 ;;  cmdType         1   48[COMRAM] unsigned char 
 24809 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24810 ;; Return value:  Size  Location     Type
 24811 ;;                  1    wreg      unsigned char 
 24812 ;; Registers used:
 24813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24814 ;; Tracked objects:
 24815 ;;		On entry : 0/1
 24816 ;;		On exit  : 0/0
 24817 ;;		Unchanged: 0/0
 24818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24819 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24820 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24823 ;;Total ram usage:        8 bytes
 24824 ;; Hardware stack levels used: 1
 24825 ;; Hardware stack levels required when called: 13
 24826 ;; This function calls:
 24827 ;;		_i2c_readDataBlock
 24828 ;; This function is called by:
 24829 ;;		_setValueToEdit
 24830 ;;		_controlSelectRemote
 24831 ;;		_eusartparser
 24832 ;; This function uses a non-reentrant model
 24833 ;;
 24834                           
 24835                           	psect	text84
 24836  0081A0                     __ptext84:
 24837                           	callstack 0
 24838  0081A0                     _cmdMemoryIsEmpty:
 24839                           	callstack 14
 24840                           
 24841                           ;incstack = 0
 24842                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24843  0081A0  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24844                           
 24845                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24846  0081A2  0E00               	movlw	0
 24847  0081A4  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24848  0081A6  0E00               	movlw	0
 24849  0081A8  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24850  0081AA  0E00               	movlw	0
 24851  0081AC  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24852  0081AE  0E00               	movlw	0
 24853  0081B0  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24854                           
 24855                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24856  0081B2  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24857  0081B4  A4D8               	btfss	status,2,c
 24858  0081B6  D01A               	goto	l20828
 24859                           
 24860                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24861  0081B8  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24862  0081BA  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24863  0081BC  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24864  0081BE  90D8               	bcf	status,0,c
 24865  0081C0  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24866  0081C2  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24867  0081C4  90D8               	bcf	status,0,c
 24868  0081C6  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24869  0081C8  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24870  0081CA  0E00               	movlw	0
 24871  0081CC  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24872  0081CE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24873  0081D0  0E02               	movlw	2
 24874  0081D2  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24875  0081D4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24876  0081D6  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24877  0081D8  6E24               	movwf	i2c_readDataBlock@data^0,c
 24878  0081DA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24879  0081DC  0E00               	movlw	0
 24880  0081DE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24881  0081E0  0E04               	movlw	4
 24882  0081E2  6E26               	movwf	i2c_readDataBlock@len^0,c
 24883  0081E4  0E50               	movlw	80
 24884  0081E6  ECF2  F044         	call	_i2c_readDataBlock
 24885                           
 24886                           ;controlMemory_MC50.c: 130:     }
 24887  0081EA  D019               	goto	l20830
 24888  0081EC                     l20828:
 24889                           
 24890                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 24891  0081EC  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24892  0081EE  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24893  0081F0  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24894  0081F2  90D8               	bcf	status,0,c
 24895  0081F4  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24896  0081F6  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24897  0081F8  90D8               	bcf	status,0,c
 24898  0081FA  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24899  0081FC  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24900  0081FE  0E00               	movlw	0
 24901  008200  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24902  008202  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24903  008204  0E05               	movlw	5
 24904  008206  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24905  008208  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24906  00820A  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24907  00820C  6E24               	movwf	i2c_readDataBlock@data^0,c
 24908  00820E  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24909  008210  0E00               	movlw	0
 24910  008212  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24911  008214  0E04               	movlw	4
 24912  008216  6E26               	movwf	i2c_readDataBlock@len^0,c
 24913  008218  0E50               	movlw	80
 24914  00821A  ECF2  F044         	call	_i2c_readDataBlock
 24915  00821E                     l20830:
 24916                           
 24917                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 24918  00821E  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 24919  008220  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 24920  008222  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 24921  008224  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 24922  008226  A4D8               	btfss	status,2,c
 24923  008228  D002               	goto	l20838
 24924                           
 24925                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 24926  00822A  0E01               	movlw	1
 24927  00822C  0012               	return	
 24928  00822E                     l20838:
 24929                           
 24930                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 24931  00822E  0E00               	movlw	0
 24932  008230  0012               	return		;funcret
 24933  008232                     __end_of_cmdMemoryIsEmpty:
 24934                           	callstack 0
 24935                           
 24936 ;; *************** function _RemoveSerial *****************
 24937 ;; Defined at:
 24938 ;;		line 95 in file "controlMemory_MC50.c"
 24939 ;; Parameters:    Size  Location     Type
 24940 ;;  cmdType         1    wreg     unsigned char 
 24941 ;;  position        1   57[COMRAM] unsigned char 
 24942 ;; Auto vars:     Size  Location     Type
 24943 ;;  cmdType         1    2[BANK0 ] unsigned char 
 24944 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 24945 ;; Return value:  Size  Location     Type
 24946 ;;                  1    wreg      void 
 24947 ;; Registers used:
 24948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24949 ;; Tracked objects:
 24950 ;;		On entry : 3E/1
 24951 ;;		On exit  : 0/0
 24952 ;;		Unchanged: 0/0
 24953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24955 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24957 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24958 ;;Total ram usage:        8 bytes
 24959 ;; Hardware stack levels used: 1
 24960 ;; Hardware stack levels required when called: 13
 24961 ;; This function calls:
 24962 ;;		_i2c_writeNBytes
 24963 ;; This function is called by:
 24964 ;;		_controlSelectRemote
 24965 ;;		_eusartparser
 24966 ;; This function uses a non-reentrant model
 24967 ;;
 24968                           
 24969                           	psect	text85
 24970  008700                     __ptext85:
 24971                           	callstack 0
 24972  008700                     _RemoveSerial:
 24973                           	callstack 14
 24974                           
 24975                           ;incstack = 0
 24976                           ;RemoveSerial@cmdType stored from wreg
 24977  008700  0100               	movlb	0	; () banked
 24978  008702  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 24979                           
 24980                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 24981  008704  0E00               	movlw	0
 24982  008706  0100               	movlb	0	; () banked
 24983  008708  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 24984  00870A  0E00               	movlw	0
 24985  00870C  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 24986  00870E  0E00               	movlw	0
 24987  008710  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 24988  008712  0E00               	movlw	0
 24989  008714  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 24990                           
 24991                           ; BSR set to: 0
 24992                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 24993  008716  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 24994  008718  A4D8               	btfss	status,2,c
 24995  00871A  D019               	goto	l20820
 24996                           
 24997                           ; BSR set to: 0
 24998                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24999  00871C  503A               	movf	RemoveSerial@position^0,w,c
 25000  00871E  6FD8               	movwf	??_RemoveSerial& (0+255),b
 25001  008720  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 25002  008722  90D8               	bcf	status,0,c
 25003  008724  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25004  008726  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25005  008728  90D8               	bcf	status,0,c
 25006  00872A  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25007  00872C  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25008  00872E  0E00               	movlw	0
 25009  008730  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 25010  008732  6E22               	movwf	i2c_writeNBytes@reg^0,c
 25011  008734  0E02               	movlw	2
 25012  008736  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 25013  008738  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 25014  00873A  0EDB               	movlw	low RemoveSerial@tempSerial
 25015  00873C  6E24               	movwf	i2c_writeNBytes@data^0,c
 25016  00873E  0E00               	movlw	0
 25017  008740  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 25018  008742  0E04               	movlw	4
 25019  008744  6E25               	movwf	i2c_writeNBytes@len^0,c
 25020  008746  0E50               	movlw	80
 25021  008748  EC2D  F045         	call	_i2c_writeNBytes
 25022                           
 25023                           ;controlMemory_MC50.c: 103:     }
 25024  00874C  0012               	return	
 25025  00874E                     l20820:
 25026                           
 25027                           ; BSR set to: 0
 25028                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 25029  00874E  503A               	movf	RemoveSerial@position^0,w,c
 25030  008750  6FD8               	movwf	??_RemoveSerial& (0+255),b
 25031  008752  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 25032  008754  90D8               	bcf	status,0,c
 25033  008756  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25034  008758  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25035  00875A  90D8               	bcf	status,0,c
 25036  00875C  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 25037  00875E  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 25038  008760  0E00               	movlw	0
 25039  008762  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 25040  008764  6E22               	movwf	i2c_writeNBytes@reg^0,c
 25041  008766  0E05               	movlw	5
 25042  008768  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 25043  00876A  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 25044  00876C  0EDB               	movlw	low RemoveSerial@tempSerial
 25045  00876E  6E24               	movwf	i2c_writeNBytes@data^0,c
 25046  008770  0E00               	movlw	0
 25047  008772  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 25048  008774  0E04               	movlw	4
 25049  008776  6E25               	movwf	i2c_writeNBytes@len^0,c
 25050  008778  0E50               	movlw	80
 25051  00877A  EC2D  F045         	call	_i2c_writeNBytes
 25052  00877E  0012               	return		;funcret
 25053  008780                     __end_of_RemoveSerial:
 25054                           	callstack 0
 25055                           
 25056 ;; *************** function _ReadSerial *****************
 25057 ;; Defined at:
 25058 ;;		line 110 in file "controlMemory_MC50.c"
 25059 ;; Parameters:    Size  Location     Type
 25060 ;;  cmdType         1    wreg     unsigned char 
 25061 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 25062 ;;		 -> eusartparser@serial(4), 
 25063 ;;  position        1   46[COMRAM] unsigned char 
 25064 ;; Auto vars:     Size  Location     Type
 25065 ;;  cmdType         1   49[COMRAM] unsigned char 
 25066 ;; Return value:  Size  Location     Type
 25067 ;;                  1    wreg      void 
 25068 ;; Registers used:
 25069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25070 ;; Tracked objects:
 25071 ;;		On entry : 3F/0
 25072 ;;		On exit  : 0/0
 25073 ;;		Unchanged: 0/0
 25074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25078 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25079 ;;Total ram usage:        5 bytes
 25080 ;; Hardware stack levels used: 1
 25081 ;; Hardware stack levels required when called: 13
 25082 ;; This function calls:
 25083 ;;		_i2c_readDataBlock
 25084 ;; This function is called by:
 25085 ;;		_eusartparser
 25086 ;; This function uses a non-reentrant model
 25087 ;;
 25088                           
 25089                           	psect	text86
 25090  008BAE                     __ptext86:
 25091                           	callstack 0
 25092  008BAE                     _ReadSerial:
 25093                           	callstack 16
 25094                           
 25095                           ;incstack = 0
 25096                           ;ReadSerial@cmdType stored from wreg
 25097  008BAE  6E32               	movwf	ReadSerial@cmdType^0,c
 25098                           
 25099                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 25100  008BB0  5032               	movf	ReadSerial@cmdType^0,w,c
 25101  008BB2  A4D8               	btfss	status,2,c
 25102  008BB4  D01A               	goto	l23002
 25103                           
 25104                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 25105  008BB6  502F               	movf	ReadSerial@position^0,w,c
 25106  008BB8  6E30               	movwf	??_ReadSerial^0,c
 25107  008BBA  6A31               	clrf	(??_ReadSerial+1)^0,c
 25108  008BBC  90D8               	bcf	status,0,c
 25109  008BBE  3630               	rlcf	??_ReadSerial^0,f,c
 25110  008BC0  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25111  008BC2  90D8               	bcf	status,0,c
 25112  008BC4  3630               	rlcf	??_ReadSerial^0,f,c
 25113  008BC6  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25114  008BC8  0E00               	movlw	0
 25115  008BCA  2430               	addwf	??_ReadSerial^0,w,c
 25116  008BCC  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25117  008BCE  0E02               	movlw	2
 25118  008BD0  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25119  008BD2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25120  008BD4  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25121  008BD8  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25122  008BDA  0E00               	movlw	0
 25123  008BDC  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25124  008BDE  0E04               	movlw	4
 25125  008BE0  6E26               	movwf	i2c_readDataBlock@len^0,c
 25126  008BE2  0E50               	movlw	80
 25127  008BE4  ECF2  F044         	call	_i2c_readDataBlock
 25128                           
 25129                           ;controlMemory_MC50.c: 115:     }
 25130  008BE8  0012               	return	
 25131  008BEA                     l23002:
 25132                           
 25133                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 25134  008BEA  502F               	movf	ReadSerial@position^0,w,c
 25135  008BEC  6E30               	movwf	??_ReadSerial^0,c
 25136  008BEE  6A31               	clrf	(??_ReadSerial+1)^0,c
 25137  008BF0  90D8               	bcf	status,0,c
 25138  008BF2  3630               	rlcf	??_ReadSerial^0,f,c
 25139  008BF4  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25140  008BF6  90D8               	bcf	status,0,c
 25141  008BF8  3630               	rlcf	??_ReadSerial^0,f,c
 25142  008BFA  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25143  008BFC  0E00               	movlw	0
 25144  008BFE  2430               	addwf	??_ReadSerial^0,w,c
 25145  008C00  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25146  008C02  0E05               	movlw	5
 25147  008C04  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25148  008C06  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25149  008C08  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25150  008C0C  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25151  008C0E  0E00               	movlw	0
 25152  008C10  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25153  008C12  0E04               	movlw	4
 25154  008C14  6E26               	movwf	i2c_readDataBlock@len^0,c
 25155  008C16  0E50               	movlw	80
 25156  008C18  ECF2  F044         	call	_i2c_readDataBlock
 25157  008C1C  0012               	return		;funcret
 25158  008C1E                     __end_of_ReadSerial:
 25159                           	callstack 0
 25160                           
 25161 ;; *************** function _i2c_readDataBlock *****************
 25162 ;; Defined at:
 25163 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 25164 ;; Parameters:    Size  Location     Type
 25165 ;;  address         1    wreg     unsigned char 
 25166 ;;  reg             2   33[COMRAM] unsigned short 
 25167 ;;  data            2   35[COMRAM] PTR void 
 25168 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 25169 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 25170 ;;  len             2   37[COMRAM] unsigned int 
 25171 ;; Auto vars:     Size  Location     Type
 25172 ;;  address         1   40[COMRAM] unsigned char 
 25173 ;;  d               4   41[COMRAM] struct .
 25174 ;; Return value:  Size  Location     Type
 25175 ;;                  1    wreg      void 
 25176 ;; Registers used:
 25177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25178 ;; Tracked objects:
 25179 ;;		On entry : 0/2
 25180 ;;		On exit  : 0/0
 25181 ;;		Unchanged: 0/0
 25182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25183 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25184 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25186 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25187 ;;Total ram usage:       12 bytes
 25188 ;; Hardware stack levels used: 1
 25189 ;; Hardware stack levels required when called: 12
 25190 ;; This function calls:
 25191 ;;		_I2C1_Close
 25192 ;;		_I2C1_MasterWrite
 25193 ;;		_I2C1_Open
 25194 ;;		_I2C1_SetAddressNackCallback
 25195 ;;		_I2C1_SetBuffer
 25196 ;;		_I2C1_SetDataCompleteCallback
 25197 ;; This function is called by:
 25198 ;;		_validateRemoteSerialNumber
 25199 ;;		_ReadSerial
 25200 ;;		_cmdMemoryIsEmpty
 25201 ;;		_loadNVM_VarSystem
 25202 ;; This function uses a non-reentrant model
 25203 ;;
 25204                           
 25205                           	psect	text87
 25206  0089E4                     __ptext87:
 25207                           	callstack 0
 25208  0089E4                     _i2c_readDataBlock:
 25209                           	callstack 14
 25210                           
 25211                           ;incstack = 0
 25212                           ;i2c_readDataBlock@address stored from wreg
 25213  0089E4  6E29               	movwf	i2c_readDataBlock@address^0,c
 25214                           
 25215                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 25216  0089E6  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 25217  0089EA  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 25218                           
 25219                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 25220  0089EE  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 25221  0089F2  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 25222  0089F6                     l20606:
 25223  0089F6  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 25224  0089F8  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 25225  0089FA  ECFD  F042         	call	_I2C1_Open
 25226  0089FE  0900               	iorlw	0
 25227  008A00  B4D8               	btfsc	status,2,c
 25228  008A02  D7F9               	goto	l20606
 25229                           
 25230                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 25231  008A04  0E1A               	movlw	low _rdBlkRegCompleteHandler
 25232  008A06  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 25233  008A08  0E96               	movlw	high _rdBlkRegCompleteHandler
 25234  008A0A  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 25235  008A0C  0E2A               	movlw	low i2c_readDataBlock@d
 25236  008A0E  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 25237  008A10  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 25238  008A12  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 25239                           
 25240                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 25241  008A16  0E22               	movlw	low i2c_readDataBlock@reg
 25242  008A18  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 25243  008A1A  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 25244  008A1C  0E00               	movlw	0
 25245  008A1E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 25246  008A20  0E01               	movlw	1
 25247  008A22  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 25248  008A24  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 25249                           
 25250                           ; BSR set to: 2
 25251                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 25252  008A28  0E00               	movlw	0
 25253  008A2A  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 25254  008A2C  0E00               	movlw	0
 25255  008A2E  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 25256  008A30  0E00               	movlw	0
 25257  008A32  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 25258  008A34  0E00               	movlw	0
 25259  008A36  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 25260  008A38  ECE9  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 25261                           
 25262                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 25263  008A3C  ECB7  F04F         	call	_I2C1_MasterWrite	;wreg free
 25264  008A40                     l20616:
 25265  008A40  EC2A  F04E         	call	_I2C1_Close	;wreg free
 25266  008A44  06E8               	decf	wreg,f,c
 25267  008A46  B4D8               	btfsc	status,2,c
 25268  008A48  D7FB               	goto	l20616
 25269                           
 25270                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 25271  008A4A  0ED0               	movlw	208
 25272  008A4C  6E28               	movwf	??_i2c_readDataBlock^0,c
 25273  008A4E  0ECA               	movlw	202
 25274  008A50                     u34297:
 25275  008A50  2EE8               	decfsz	wreg,f,c
 25276  008A52  D7FE               	bra	u34297
 25277  008A54  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 25278  008A56  D7FC               	bra	u34297
 25279  008A58  0012               	return		;funcret
 25280  008A5A                     __end_of_i2c_readDataBlock:
 25281                           	callstack 0
 25282                           
 25283 ;; *************** function _WWDT_TimerClear *****************
 25284 ;; Defined at:
 25285 ;;		line 128 in file "mcc_generated_files/mcc.c"
 25286 ;; Parameters:    Size  Location     Type
 25287 ;;		None
 25288 ;; Auto vars:     Size  Location     Type
 25289 ;;  state           1   15[COMRAM] _Bool 
 25290 ;;  readBack        1    0        unsigned char 
 25291 ;; Return value:  Size  Location     Type
 25292 ;;                  1    wreg      void 
 25293 ;; Registers used:
 25294 ;;		wreg, status,2
 25295 ;; Tracked objects:
 25296 ;;		On entry : 0/0
 25297 ;;		On exit  : 0/0
 25298 ;;		Unchanged: 0/0
 25299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25304 ;;Total ram usage:        1 bytes
 25305 ;; Hardware stack levels used: 1
 25306 ;; Hardware stack levels required when called: 4
 25307 ;; This function calls:
 25308 ;;		Nothing
 25309 ;; This function is called by:
 25310 ;;		_main
 25311 ;; This function uses a non-reentrant model
 25312 ;;
 25313                           
 25314                           	psect	text88
 25315  009CB4                     __ptext88:
 25316                           	callstack 0
 25317  009CB4                     _WWDT_TimerClear:
 25318                           	callstack 26
 25319                           
 25320                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 25321                           
 25322                           ;incstack = 0
 25323  009CB4  0E00               	movlw	0
 25324  009CB6  BEF2               	btfsc	4082,7,c	;volatile
 25325  009CB8  0E01               	movlw	1
 25326  009CBA  6E10               	movwf	WWDT_TimerClear@state^0,c
 25327                           
 25328                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 25329  009CBC  9EF2               	bcf	4082,7,c	;volatile
 25330  009CBE  010E               	movlb	14	; () banked
 25331  009CC0  51D2               	movf	210,w,b	;volatile
 25332  009CC2  0004               	clrwdt		;# 
 25333                           
 25334                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 25335  009CC4  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 25336  009CC6  D002               	bra	u29725
 25337  009CC8  9EF2               	bcf	4082,7,c	;volatile
 25338  009CCA  D001               	bra	u29726
 25339  009CCC                     u29725:
 25340  009CCC  8EF2               	bsf	4082,7,c	;volatile
 25341  009CCE                     u29726:
 25342  009CCE  0012               	return		;funcret
 25343  009CD0                     __end_of_WWDT_TimerClear:
 25344                           	callstack 0
 25345                           
 25346 ;; *************** function _WWDT_SoftEnable *****************
 25347 ;; Defined at:
 25348 ;;		line 104 in file "mcc_generated_files/mcc.c"
 25349 ;; Parameters:    Size  Location     Type
 25350 ;;		None
 25351 ;; Auto vars:     Size  Location     Type
 25352 ;;		None
 25353 ;; Return value:  Size  Location     Type
 25354 ;;                  1    wreg      void 
 25355 ;; Registers used:
 25356 ;;		None
 25357 ;; Tracked objects:
 25358 ;;		On entry : 3F/E
 25359 ;;		On exit  : 3F/E
 25360 ;;		Unchanged: 0/0
 25361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25366 ;;Total ram usage:        0 bytes
 25367 ;; Hardware stack levels used: 1
 25368 ;; Hardware stack levels required when called: 4
 25369 ;; This function calls:
 25370 ;;		Nothing
 25371 ;; This function is called by:
 25372 ;;		_main
 25373 ;; This function uses a non-reentrant model
 25374 ;;
 25375                           
 25376                           	psect	text89
 25377  009FF4                     __ptext89:
 25378                           	callstack 0
 25379  009FF4                     _WWDT_SoftEnable:
 25380                           	callstack 26
 25381                           
 25382                           ; BSR set to: 14
 25383                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 25384                           
 25385                           ;incstack = 0
 25386  009FF4  81D2               	bsf	210,0,b	;volatile
 25387                           
 25388                           ; BSR set to: 14
 25389  009FF6  0012               	return		;funcret
 25390  009FF8                     __end_of_WWDT_SoftEnable:
 25391                           	callstack 0
 25392                           
 25393 ;; *************** function _ShowVersion *****************
 25394 ;; Defined at:
 25395 ;;		line 254 in file "main_MC50.c"
 25396 ;; Parameters:    Size  Location     Type
 25397 ;;		None
 25398 ;; Auto vars:     Size  Location     Type
 25399 ;;		None
 25400 ;; Return value:  Size  Location     Type
 25401 ;;                  1    wreg      void 
 25402 ;; Registers used:
 25403 ;;		wreg, status,2, status,0, cstack
 25404 ;; Tracked objects:
 25405 ;;		On entry : 3F/1
 25406 ;;		On exit  : 3F/1
 25407 ;;		Unchanged: 0/0
 25408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25413 ;;Total ram usage:        0 bytes
 25414 ;; Hardware stack levels used: 1
 25415 ;; Hardware stack levels required when called: 5
 25416 ;; This function calls:
 25417 ;;		_SetSegmentValue
 25418 ;; This function is called by:
 25419 ;;		_main
 25420 ;; This function uses a non-reentrant model
 25421 ;;
 25422                           
 25423                           	psect	text90
 25424  008DCE                     __ptext90:
 25425                           	callstack 0
 25426  008DCE                     _ShowVersion:
 25427                           	callstack 25
 25428                           
 25429                           ; BSR set to: 1
 25430                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 25431                           
 25432                           ; BSR set to: 14
 25433                           ;incstack = 0
 25434  008DCE  BFDB               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 25435  008DD0  D005               	goto	u31390
 25436  008DD2  51DB               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 25437  008DD4  E12E               	bnz	l2044
 25438  008DD6  05DA               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 25439  008DD8  B0D8               	btfsc	status,0,c
 25440  008DDA  0012               	return	
 25441  008DDC                     u31390:
 25442                           
 25443                           ; BSR set to: 1
 25444                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 25445  008DDC  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 25446  008DDE  A4D8               	btfss	status,2,c
 25447  008DE0  D006               	goto	l25502
 25448                           
 25449                           ; BSR set to: 1
 25450                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 25451  008DE2  0E01               	movlw	1
 25452  008DE4  6E1C               	movwf	SetSegmentValue@d2^0,c
 25453  008DE6  0E00               	movlw	0
 25454  008DE8  ECAB  F04E         	call	_SetSegmentValue
 25455                           
 25456                           ;main_MC50.c: 262:             }
 25457  008DEC  D01C               	goto	l2039
 25458  008DEE                     l25502:
 25459                           
 25460                           ; BSR set to: 1
 25461  008DEE  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 25462  008DF0  A4D8               	btfss	status,2,c
 25463  008DF2  D006               	goto	l25506
 25464                           
 25465                           ; BSR set to: 1
 25466                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 25467  008DF4  0E01               	movlw	1
 25468  008DF6  6E1C               	movwf	SetSegmentValue@d2^0,c
 25469  008DF8  0E14               	movlw	20
 25470  008DFA  ECAB  F04E         	call	_SetSegmentValue
 25471                           
 25472                           ;main_MC50.c: 266:             }
 25473  008DFE  D013               	goto	l2039
 25474  008E00                     l25506:
 25475                           
 25476                           ; BSR set to: 1
 25477  008E00  0E02               	movlw	2
 25478  008E02  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25479  008E04  A4D8               	btfss	status,2,c
 25480  008E06  D006               	goto	l25510
 25481                           
 25482                           ; BSR set to: 1
 25483                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 25484  008E08  0E00               	movlw	0
 25485  008E0A  6E1C               	movwf	SetSegmentValue@d2^0,c
 25486  008E0C  0E08               	movlw	8
 25487  008E0E  ECAB  F04E         	call	_SetSegmentValue
 25488                           
 25489                           ;main_MC50.c: 270:             }
 25490  008E12  D009               	goto	l2039
 25491  008E14                     l25510:
 25492                           
 25493                           ; BSR set to: 1
 25494  008E14  0E03               	movlw	3
 25495  008E16  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25496  008E18  A4D8               	btfss	status,2,c
 25497  008E1A  D005               	goto	l2039
 25498                           
 25499                           ; BSR set to: 1
 25500                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 25501  008E1C  0E02               	movlw	2
 25502  008E1E  6E1C               	movwf	SetSegmentValue@d2^0,c
 25503  008E20  0E14               	movlw	20
 25504  008E22  ECAB  F04E         	call	_SetSegmentValue
 25505  008E26                     l2039:
 25506                           
 25507                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 25508                           
 25509                           ; BSR set to: 1
 25510  008E26  0101               	movlb	1	; () banked
 25511  008E28  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 25512                           
 25513                           ; BSR set to: 1
 25514                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 25515  008E2A  0E00               	movlw	0
 25516  008E2C  6FDB               	movwf	(_ts_system+61)& (0+255),b	;volatile
 25517  008E2E  0E14               	movlw	20
 25518  008E30  6FDA               	movwf	(_ts_system+60)& (0+255),b	;volatile
 25519  008E32                     l2044:
 25520                           
 25521                           ; BSR set to: 1
 25522  008E32  0012               	return		;funcret
 25523  008E34                     __end_of_ShowVersion:
 25524                           	callstack 0
 25525                           
 25526 ;; *************** function _SetSegmentValue *****************
 25527 ;; Defined at:
 25528 ;;		line 112 in file "outputs_MC50.c"
 25529 ;; Parameters:    Size  Location     Type
 25530 ;;  d1              1    wreg     unsigned char 
 25531 ;;  d2              1   27[COMRAM] unsigned char 
 25532 ;; Auto vars:     Size  Location     Type
 25533 ;;  d1              1   28[COMRAM] unsigned char 
 25534 ;; Return value:  Size  Location     Type
 25535 ;;                  1    wreg      void 
 25536 ;; Registers used:
 25537 ;;		wreg, status,2
 25538 ;; Tracked objects:
 25539 ;;		On entry : 0/0
 25540 ;;		On exit  : 3F/0
 25541 ;;		Unchanged: 0/0
 25542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25543 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25547 ;;Total ram usage:        2 bytes
 25548 ;; Hardware stack levels used: 1
 25549 ;; Hardware stack levels required when called: 4
 25550 ;; This function calls:
 25551 ;;		Nothing
 25552 ;; This function is called by:
 25553 ;;		_main
 25554 ;;		_ShowVersion
 25555 ;;		_controlSelectRemote
 25556 ;; This function uses a non-reentrant model
 25557 ;;
 25558                           
 25559                           	psect	text91
 25560  009D56                     __ptext91:
 25561                           	callstack 0
 25562  009D56                     _SetSegmentValue:
 25563                           	callstack 23
 25564                           
 25565                           ; BSR set to: 1
 25566                           ;incstack = 0
 25567                           ;SetSegmentValue@d1 stored from wreg
 25568  009D56  6E1D               	movwf	SetSegmentValue@d1^0,c
 25569                           
 25570                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25571  009D58  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25572                           
 25573                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25574  009D5C  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25575                           
 25576                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25577  009D60  0E00               	movlw	0
 25578  009D62  0100               	movlb	0	; () banked
 25579  009D64  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25580  009D66  0E00               	movlw	0
 25581  009D68  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25582                           
 25583                           ; BSR set to: 0
 25584                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25585  009D6A  0E00               	movlw	0
 25586  009D6C  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25587                           
 25588                           ; BSR set to: 0
 25589  009D6E  0012               	return		;funcret
 25590  009D70                     __end_of_SetSegmentValue:
 25591                           	callstack 0
 25592                           
 25593 ;; *************** function _SYSTEM_Initialize *****************
 25594 ;; Defined at:
 25595 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25596 ;; Parameters:    Size  Location     Type
 25597 ;;		None
 25598 ;; Auto vars:     Size  Location     Type
 25599 ;;		None
 25600 ;; Return value:  Size  Location     Type
 25601 ;;                  1    wreg      void 
 25602 ;; Registers used:
 25603 ;;		wreg, status,2, status,0, cstack
 25604 ;; Tracked objects:
 25605 ;;		On entry : 3F/0
 25606 ;;		On exit  : 3F/E
 25607 ;;		Unchanged: 0/0
 25608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25613 ;;Total ram usage:        0 bytes
 25614 ;; Hardware stack levels used: 1
 25615 ;; Hardware stack levels required when called: 6
 25616 ;; This function calls:
 25617 ;;		_ADCC_Initialize
 25618 ;;		_EUSART1_Initialize
 25619 ;;		_I2C1_Initialize
 25620 ;;		_INTERRUPT_Initialize
 25621 ;;		_OSCILLATOR_Initialize
 25622 ;;		_PIN_MANAGER_Initialize
 25623 ;;		_PMD_Initialize
 25624 ;;		_TMR0_Initialize
 25625 ;;		_TMR1_Initialize
 25626 ;;		_TMR2_Initialize
 25627 ;;		_WWDT_Initialize
 25628 ;; This function is called by:
 25629 ;;		_main
 25630 ;; This function uses a non-reentrant model
 25631 ;;
 25632                           
 25633                           	psect	text92
 25634  009874                     __ptext92:
 25635                           	callstack 0
 25636  009874                     _SYSTEM_Initialize:
 25637                           	callstack 24
 25638                           
 25639                           ; BSR set to: 0
 25640                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25641                           
 25642                           ; BSR set to: 0
 25643                           ;incstack = 0
 25644  009874  ECFC  F04F         	call	_INTERRUPT_Initialize	;wreg free
 25645                           
 25646                           ; BSR set to: 0
 25647                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25648  009878  EC68  F04E         	call	_PMD_Initialize	;wreg free
 25649                           
 25650                           ; BSR set to: 14
 25651                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25652  00987C  EC37  F04F         	call	_I2C1_Initialize	;wreg free
 25653                           
 25654                           ; BSR set to: 14
 25655                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25656  009880  EC84  F040         	call	_PIN_MANAGER_Initialize	;wreg free
 25657                           
 25658                           ; BSR set to: 14
 25659                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25660  009884  EC0D  F04F         	call	_OSCILLATOR_Initialize	;wreg free
 25661                           
 25662                           ; BSR set to: 14
 25663                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25664  009888  EC7B  F04F         	call	_WWDT_Initialize	;wreg free
 25665                           
 25666                           ; BSR set to: 14
 25667                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25668  00988C  EC86  F049         	call	_ADCC_Initialize	;wreg free
 25669                           
 25670                           ; BSR set to: 15
 25671                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25672  009890  EC7D  F04C         	call	_TMR2_Initialize	;wreg free
 25673                           
 25674                           ; BSR set to: 14
 25675                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25676  009894  ECAC  F04A         	call	_TMR1_Initialize	;wreg free
 25677                           
 25678                           ; BSR set to: 14
 25679                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25680  009898  EC19  F04E         	call	_TMR0_Initialize	;wreg free
 25681                           
 25682                           ; BSR set to: 14
 25683                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25684  00989C  ECC0  F043         	call	_EUSART1_Initialize	;wreg free
 25685                           
 25686                           ; BSR set to: 14
 25687  0098A0  0012               	return		;funcret
 25688  0098A2                     __end_of_SYSTEM_Initialize:
 25689                           	callstack 0
 25690                           
 25691 ;; *************** function _WWDT_Initialize *****************
 25692 ;; Defined at:
 25693 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25694 ;; Parameters:    Size  Location     Type
 25695 ;;		None
 25696 ;; Auto vars:     Size  Location     Type
 25697 ;;		None
 25698 ;; Return value:  Size  Location     Type
 25699 ;;                  1    wreg      void 
 25700 ;; Registers used:
 25701 ;;		wreg, status,2
 25702 ;; Tracked objects:
 25703 ;;		On entry : 3F/E
 25704 ;;		On exit  : 3F/E
 25705 ;;		Unchanged: 0/0
 25706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25711 ;;Total ram usage:        0 bytes
 25712 ;; Hardware stack levels used: 1
 25713 ;; Hardware stack levels required when called: 4
 25714 ;; This function calls:
 25715 ;;		Nothing
 25716 ;; This function is called by:
 25717 ;;		_SYSTEM_Initialize
 25718 ;; This function uses a non-reentrant model
 25719 ;;
 25720                           
 25721                           	psect	text93
 25722  009EF6                     __ptext93:
 25723                           	callstack 0
 25724  009EF6                     _WWDT_Initialize:
 25725                           	callstack 25
 25726                           
 25727                           ; BSR set to: 14
 25728                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25729                           
 25730                           ; BSR set to: 14
 25731                           ;incstack = 0
 25732  009EF6  0E16               	movlw	22
 25733  009EF8  6FD2               	movwf	210,b	;volatile
 25734                           
 25735                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25736  009EFA  0E27               	movlw	39
 25737  009EFC  6FD3               	movwf	211,b	;volatile
 25738                           
 25739                           ; BSR set to: 14
 25740  009EFE  0012               	return		;funcret
 25741  009F00                     __end_of_WWDT_Initialize:
 25742                           	callstack 0
 25743                           
 25744 ;; *************** function _TMR2_Initialize *****************
 25745 ;; Defined at:
 25746 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25747 ;; Parameters:    Size  Location     Type
 25748 ;;		None
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;		None
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1    wreg      void 
 25753 ;; Registers used:
 25754 ;;		wreg, status,2, status,0, cstack
 25755 ;; Tracked objects:
 25756 ;;		On entry : 3F/F
 25757 ;;		On exit  : 3F/E
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;Total ram usage:        0 bytes
 25765 ;; Hardware stack levels used: 1
 25766 ;; Hardware stack levels required when called: 5
 25767 ;; This function calls:
 25768 ;;		_TMR2_SetInterruptHandler
 25769 ;; This function is called by:
 25770 ;;		_SYSTEM_Initialize
 25771 ;; This function uses a non-reentrant model
 25772 ;;
 25773                           
 25774                           	psect	text94
 25775  0098FA                     __ptext94:
 25776                           	callstack 0
 25777  0098FA                     _TMR2_Initialize:
 25778                           	callstack 24
 25779                           
 25780                           ; BSR set to: 15
 25781                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25782                           
 25783                           ; BSR set to: 14
 25784                           ;incstack = 0
 25785  0098FA  0E02               	movlw	2
 25786  0098FC  6EBF               	movwf	191,c	;volatile
 25787                           
 25788                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25789  0098FE  0E40               	movlw	64
 25790  009900  6EBE               	movwf	190,c	;volatile
 25791                           
 25792                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25793  009902  0E00               	movlw	0
 25794  009904  6EC0               	movwf	192,c	;volatile
 25795                           
 25796                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25797  009906  0EC7               	movlw	199
 25798  009908  6EBC               	movwf	188,c	;volatile
 25799                           
 25800                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25801  00990A  0E00               	movlw	0
 25802  00990C  6EBB               	movwf	187,c	;volatile
 25803                           
 25804                           ; BSR set to: 15
 25805                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25806  00990E  010E               	movlb	14	; () banked
 25807  009910  93CE               	bcf	206,1,b	;volatile
 25808                           
 25809                           ; BSR set to: 14
 25810                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25811  009912  83C6               	bsf	198,1,b	;volatile
 25812                           
 25813                           ; BSR set to: 14
 25814                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25815  009914  0E22               	movlw	low _TMR2_DefaultInterruptHandler
 25816  009916  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25817  009918  0EA0               	movlw	high _TMR2_DefaultInterruptHandler
 25818  00991A  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25819  00991C  EC80  F04F         	call	_TMR2_SetInterruptHandler	;wreg free
 25820                           
 25821                           ; BSR set to: 14
 25822                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25823  009920  0ED9               	movlw	217
 25824  009922  6EBD               	movwf	189,c	;volatile
 25825                           
 25826                           ; BSR set to: 14
 25827  009924  0012               	return		;funcret
 25828  009926                     __end_of_TMR2_Initialize:
 25829                           	callstack 0
 25830                           
 25831 ;; *************** function _TMR2_SetInterruptHandler *****************
 25832 ;; Defined at:
 25833 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25834 ;; Parameters:    Size  Location     Type
 25835 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25836 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25837 ;; Auto vars:     Size  Location     Type
 25838 ;;		None
 25839 ;; Return value:  Size  Location     Type
 25840 ;;                  1    wreg      void 
 25841 ;; Registers used:
 25842 ;;		wreg, status,2, status,0
 25843 ;; Tracked objects:
 25844 ;;		On entry : 3F/E
 25845 ;;		On exit  : 3F/E
 25846 ;;		Unchanged: 3F/0
 25847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25852 ;;Total ram usage:        2 bytes
 25853 ;; Hardware stack levels used: 1
 25854 ;; Hardware stack levels required when called: 4
 25855 ;; This function calls:
 25856 ;;		Nothing
 25857 ;; This function is called by:
 25858 ;;		_TMR2_Initialize
 25859 ;; This function uses a non-reentrant model
 25860 ;;
 25861                           
 25862                           	psect	text95
 25863  009F00                     __ptext95:
 25864                           	callstack 0
 25865  009F00                     _TMR2_SetInterruptHandler:
 25866                           	callstack 24
 25867                           
 25868                           ; BSR set to: 14
 25869                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25870                           
 25871                           ; BSR set to: 14
 25872                           ;incstack = 0
 25873  009F00  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25874  009F04  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25875                           
 25876                           ; BSR set to: 14
 25877  009F08  0012               	return		;funcret
 25878  009F0A                     __end_of_TMR2_SetInterruptHandler:
 25879                           	callstack 0
 25880                           
 25881 ;; *************** function _TMR1_Initialize *****************
 25882 ;; Defined at:
 25883 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25884 ;; Parameters:    Size  Location     Type
 25885 ;;		None
 25886 ;; Auto vars:     Size  Location     Type
 25887 ;;		None
 25888 ;; Return value:  Size  Location     Type
 25889 ;;                  1    wreg      void 
 25890 ;; Registers used:
 25891 ;;		wreg, status,2, status,0, cstack
 25892 ;; Tracked objects:
 25893 ;;		On entry : 3F/E
 25894 ;;		On exit  : 3F/E
 25895 ;;		Unchanged: 0/0
 25896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25901 ;;Total ram usage:        2 bytes
 25902 ;; Hardware stack levels used: 1
 25903 ;; Hardware stack levels required when called: 5
 25904 ;; This function calls:
 25905 ;;		_TMR1_SetInterruptHandler
 25906 ;; This function is called by:
 25907 ;;		_SYSTEM_Initialize
 25908 ;; This function uses a non-reentrant model
 25909 ;;
 25910                           
 25911                           	psect	text96
 25912  009558                     __ptext96:
 25913                           	callstack 0
 25914  009558                     _TMR1_Initialize:
 25915                           	callstack 24
 25916                           
 25917                           ; BSR set to: 14
 25918                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 25919                           
 25920                           ; BSR set to: 14
 25921                           ;incstack = 0
 25922  009558  0E00               	movlw	0
 25923  00955A  6ED0               	movwf	208,c	;volatile
 25924                           
 25925                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 25926  00955C  0E00               	movlw	0
 25927  00955E  6ED1               	movwf	209,c	;volatile
 25928                           
 25929                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 25930  009560  0E01               	movlw	1
 25931  009562  6ED2               	movwf	210,c	;volatile
 25932                           
 25933                           ; BSR set to: 14
 25934                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 25935  009564  68CE               	setf	206,c	;volatile
 25936                           
 25937                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 25938  009566  0E38               	movlw	56
 25939  009568  6ECD               	movwf	205,c	;volatile
 25940                           
 25941                           ; BSR set to: 14
 25942                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 25943  00956A  91CE               	bcf	206,0,b	;volatile
 25944                           
 25945                           ; BSR set to: 14
 25946                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 25947  00956C  50CD               	movf	205,w,c	;volatile
 25948  00956E  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 25949  009572  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 25950  009574  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 25951  009578  6A12               	clrf	??_TMR1_Initialize^0,c
 25952  00957A  1012               	iorwf	??_TMR1_Initialize^0,w,c
 25953  00957C  0102               	movlb	2	; () banked
 25954  00957E  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 25955  009580  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 25956  009582  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 25957                           
 25958                           ; BSR set to: 2
 25959                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 25960  009584  010E               	movlb	14	; () banked
 25961  009586  81C6               	bsf	198,0,b	;volatile
 25962                           
 25963                           ; BSR set to: 14
 25964                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 25965  009588  0E24               	movlw	low _TMR1_DefaultInterruptHandler
 25966  00958A  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 25967  00958C  0EA0               	movlw	high _TMR1_DefaultInterruptHandler
 25968  00958E  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 25969  009590  EC85  F04F         	call	_TMR1_SetInterruptHandler	;wreg free
 25970                           
 25971                           ; BSR set to: 14
 25972                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 25973  009594  0E31               	movlw	49
 25974  009596  6ECF               	movwf	207,c	;volatile
 25975                           
 25976                           ; BSR set to: 14
 25977  009598  0012               	return		;funcret
 25978  00959A                     __end_of_TMR1_Initialize:
 25979                           	callstack 0
 25980                           
 25981 ;; *************** function _TMR1_SetInterruptHandler *****************
 25982 ;; Defined at:
 25983 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 25984 ;; Parameters:    Size  Location     Type
 25985 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25986 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 25987 ;; Auto vars:     Size  Location     Type
 25988 ;;		None
 25989 ;; Return value:  Size  Location     Type
 25990 ;;                  1    wreg      void 
 25991 ;; Registers used:
 25992 ;;		wreg, status,2, status,0
 25993 ;; Tracked objects:
 25994 ;;		On entry : 3F/E
 25995 ;;		On exit  : 3F/E
 25996 ;;		Unchanged: 3F/0
 25997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26002 ;;Total ram usage:        2 bytes
 26003 ;; Hardware stack levels used: 1
 26004 ;; Hardware stack levels required when called: 4
 26005 ;; This function calls:
 26006 ;;		Nothing
 26007 ;; This function is called by:
 26008 ;;		_TMR1_Initialize
 26009 ;; This function uses a non-reentrant model
 26010 ;;
 26011                           
 26012                           	psect	text97
 26013  009F0A                     __ptext97:
 26014                           	callstack 0
 26015  009F0A                     _TMR1_SetInterruptHandler:
 26016                           	callstack 24
 26017                           
 26018                           ; BSR set to: 14
 26019                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 26020                           
 26021                           ; BSR set to: 14
 26022                           ;incstack = 0
 26023  009F0A  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 26024  009F0E  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 26025                           
 26026                           ; BSR set to: 14
 26027  009F12  0012               	return		;funcret
 26028  009F14                     __end_of_TMR1_SetInterruptHandler:
 26029                           	callstack 0
 26030                           
 26031 ;; *************** function _TMR0_Initialize *****************
 26032 ;; Defined at:
 26033 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 26034 ;; Parameters:    Size  Location     Type
 26035 ;;		None
 26036 ;; Auto vars:     Size  Location     Type
 26037 ;;		None
 26038 ;; Return value:  Size  Location     Type
 26039 ;;                  1    wreg      void 
 26040 ;; Registers used:
 26041 ;;		wreg, status,2, status,0, cstack
 26042 ;; Tracked objects:
 26043 ;;		On entry : 3F/E
 26044 ;;		On exit  : 3F/E
 26045 ;;		Unchanged: 0/0
 26046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26051 ;;Total ram usage:        0 bytes
 26052 ;; Hardware stack levels used: 1
 26053 ;; Hardware stack levels required when called: 5
 26054 ;; This function calls:
 26055 ;;		_TMR0_SetInterruptHandler
 26056 ;; This function is called by:
 26057 ;;		_SYSTEM_Initialize
 26058 ;; This function uses a non-reentrant model
 26059 ;;
 26060                           
 26061                           	psect	text98
 26062  009C32                     __ptext98:
 26063                           	callstack 0
 26064  009C32                     _TMR0_Initialize:
 26065                           	callstack 24
 26066                           
 26067                           ; BSR set to: 14
 26068                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 26069                           
 26070                           ; BSR set to: 14
 26071                           ;incstack = 0
 26072  009C32  0E41               	movlw	65
 26073  009C34  6ED6               	movwf	214,c	;volatile
 26074                           
 26075                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 26076  009C36  0E84               	movlw	132
 26077  009C38  6ED4               	movwf	212,c	;volatile
 26078                           
 26079                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 26080  009C3A  0E00               	movlw	0
 26081  009C3C  6ED3               	movwf	211,c	;volatile
 26082                           
 26083                           ; BSR set to: 14
 26084                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 26085  009C3E  9BCA               	bcf	202,5,b	;volatile
 26086                           
 26087                           ; BSR set to: 14
 26088                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 26089  009C40  8BC2               	bsf	194,5,b	;volatile
 26090                           
 26091                           ; BSR set to: 14
 26092                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 26093  009C42  0E26               	movlw	low _TMR0_DefaultInterruptHandler
 26094  009C44  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 26095  009C46  0EA0               	movlw	high _TMR0_DefaultInterruptHandler
 26096  009C48  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 26097  009C4A  EC8A  F04F         	call	_TMR0_SetInterruptHandler	;wreg free
 26098                           
 26099                           ; BSR set to: 14
 26100                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 26101  009C4E  0E87               	movlw	135
 26102  009C50  6ED5               	movwf	213,c	;volatile
 26103                           
 26104                           ; BSR set to: 14
 26105  009C52  0012               	return		;funcret
 26106  009C54                     __end_of_TMR0_Initialize:
 26107                           	callstack 0
 26108                           
 26109 ;; *************** function _TMR0_SetInterruptHandler *****************
 26110 ;; Defined at:
 26111 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 26112 ;; Parameters:    Size  Location     Type
 26113 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 26114 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 26115 ;; Auto vars:     Size  Location     Type
 26116 ;;		None
 26117 ;; Return value:  Size  Location     Type
 26118 ;;                  1    wreg      void 
 26119 ;; Registers used:
 26120 ;;		wreg, status,2, status,0
 26121 ;; Tracked objects:
 26122 ;;		On entry : 3F/E
 26123 ;;		On exit  : 3F/E
 26124 ;;		Unchanged: 3F/0
 26125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26130 ;;Total ram usage:        2 bytes
 26131 ;; Hardware stack levels used: 1
 26132 ;; Hardware stack levels required when called: 4
 26133 ;; This function calls:
 26134 ;;		Nothing
 26135 ;; This function is called by:
 26136 ;;		_TMR0_Initialize
 26137 ;; This function uses a non-reentrant model
 26138 ;;
 26139                           
 26140                           	psect	text99
 26141  009F14                     __ptext99:
 26142                           	callstack 0
 26143  009F14                     _TMR0_SetInterruptHandler:
 26144                           	callstack 24
 26145                           
 26146                           ; BSR set to: 14
 26147                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 26148                           
 26149                           ; BSR set to: 14
 26150                           ;incstack = 0
 26151  009F14  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 26152  009F18  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 26153                           
 26154                           ; BSR set to: 14
 26155  009F1C  0012               	return		;funcret
 26156  009F1E                     __end_of_TMR0_SetInterruptHandler:
 26157                           	callstack 0
 26158                           
 26159 ;; *************** function _PMD_Initialize *****************
 26160 ;; Defined at:
 26161 ;;		line 79 in file "mcc_generated_files/mcc.c"
 26162 ;; Parameters:    Size  Location     Type
 26163 ;;		None
 26164 ;; Auto vars:     Size  Location     Type
 26165 ;;		None
 26166 ;; Return value:  Size  Location     Type
 26167 ;;                  1    wreg      void 
 26168 ;; Registers used:
 26169 ;;		wreg, status,2
 26170 ;; Tracked objects:
 26171 ;;		On entry : 3F/0
 26172 ;;		On exit  : 3F/E
 26173 ;;		Unchanged: 0/0
 26174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26179 ;;Total ram usage:        0 bytes
 26180 ;; Hardware stack levels used: 1
 26181 ;; Hardware stack levels required when called: 4
 26182 ;; This function calls:
 26183 ;;		Nothing
 26184 ;; This function is called by:
 26185 ;;		_SYSTEM_Initialize
 26186 ;; This function uses a non-reentrant model
 26187 ;;
 26188                           
 26189                           	psect	text100
 26190  009CD0                     __ptext100:
 26191                           	callstack 0
 26192  009CD0                     _PMD_Initialize:
 26193                           	callstack 25
 26194                           
 26195                           ; BSR set to: 0
 26196                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 26197                           
 26198                           ; BSR set to: 14
 26199                           ;incstack = 0
 26200  009CD0  0E00               	movlw	0
 26201  009CD2  010E               	movlb	14	; () banked
 26202  009CD4  6FE1               	movwf	225,b	;volatile
 26203                           
 26204                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 26205  009CD6  0E00               	movlw	0
 26206  009CD8  6FE2               	movwf	226,b	;volatile
 26207                           
 26208                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 26209  009CDA  0E00               	movlw	0
 26210  009CDC  6FE3               	movwf	227,b	;volatile
 26211                           
 26212                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 26213  009CDE  0E00               	movlw	0
 26214  009CE0  6FE4               	movwf	228,b	;volatile
 26215                           
 26216                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 26217  009CE2  0E00               	movlw	0
 26218  009CE4  6FE5               	movwf	229,b	;volatile
 26219                           
 26220                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 26221  009CE6  0E00               	movlw	0
 26222  009CE8  6FE6               	movwf	230,b	;volatile
 26223                           
 26224                           ; BSR set to: 14
 26225  009CEA  0012               	return		;funcret
 26226  009CEC                     __end_of_PMD_Initialize:
 26227                           	callstack 0
 26228                           
 26229 ;; *************** function _PIN_MANAGER_Initialize *****************
 26230 ;; Defined at:
 26231 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 26232 ;; Parameters:    Size  Location     Type
 26233 ;;		None
 26234 ;; Auto vars:     Size  Location     Type
 26235 ;;		None
 26236 ;; Return value:  Size  Location     Type
 26237 ;;                  1    wreg      void 
 26238 ;; Registers used:
 26239 ;;		wreg, status,2
 26240 ;; Tracked objects:
 26241 ;;		On entry : 3F/E
 26242 ;;		On exit  : 3F/E
 26243 ;;		Unchanged: 0/0
 26244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26249 ;;Total ram usage:        0 bytes
 26250 ;; Hardware stack levels used: 1
 26251 ;; Hardware stack levels required when called: 4
 26252 ;; This function calls:
 26253 ;;		Nothing
 26254 ;; This function is called by:
 26255 ;;		_SYSTEM_Initialize
 26256 ;; This function uses a non-reentrant model
 26257 ;;
 26258                           
 26259                           	psect	text101
 26260  008108                     __ptext101:
 26261                           	callstack 0
 26262  008108                     _PIN_MANAGER_Initialize:
 26263                           	callstack 25
 26264                           
 26265                           ; BSR set to: 14
 26266                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 26267                           
 26268                           ; BSR set to: 14
 26269                           ;incstack = 0
 26270  008108  0E00               	movlw	0
 26271  00810A  6E87               	movwf	135,c	;volatile
 26272                           
 26273                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 26274  00810C  0E00               	movlw	0
 26275  00810E  6E86               	movwf	134,c	;volatile
 26276                           
 26277                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 26278  008110  0E00               	movlw	0
 26279  008112  6E83               	movwf	131,c	;volatile
 26280                           
 26281                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 26282  008114  0E00               	movlw	0
 26283  008116  6E84               	movwf	132,c	;volatile
 26284                           
 26285                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 26286  008118  0E00               	movlw	0
 26287  00811A  6E85               	movwf	133,c	;volatile
 26288                           
 26289                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 26290  00811C  0E00               	movlw	0
 26291  00811E  6E8C               	movwf	140,c	;volatile
 26292                           
 26293                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 26294  008120  0E7F               	movlw	127
 26295  008122  6E88               	movwf	136,c	;volatile
 26296                           
 26297                           ; BSR set to: 14
 26298                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 26299  008124  6889               	setf	137,c	;volatile
 26300                           
 26301                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 26302  008126  0E58               	movlw	88
 26303  008128  6E8A               	movwf	138,c	;volatile
 26304                           
 26305                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 26306  00812A  0E00               	movlw	0
 26307  00812C  6E8B               	movwf	139,c	;volatile
 26308                           
 26309                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 26310  00812E  0E00               	movlw	0
 26311  008130  010F               	movlb	15	; () banked
 26312  008132  6F26               	movwf	38,b	;volatile
 26313                           
 26314                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 26315  008134  0E00               	movlw	0
 26316  008136  6F21               	movwf	33,b	;volatile
 26317                           
 26318                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 26319  008138  0E00               	movlw	0
 26320  00813A  6F19               	movwf	25,b	;volatile
 26321                           
 26322                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 26323  00813C  0E00               	movlw	0
 26324  00813E  6F2E               	movwf	46,b	;volatile
 26325                           
 26326                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 26327  008140  0E01               	movlw	1
 26328  008142  6F11               	movwf	17,b	;volatile
 26329                           
 26330                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 26331  008144  0E00               	movlw	0
 26332  008146  6F25               	movwf	37,b	;volatile
 26333                           
 26334                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 26335  008148  0E00               	movlw	0
 26336  00814A  6F2D               	movwf	45,b	;volatile
 26337                           
 26338                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 26339  00814C  0EF7               	movlw	247
 26340  00814E  6F18               	movwf	24,b	;volatile
 26341                           
 26342                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 26343  008150  0E00               	movlw	0
 26344  008152  6F10               	movwf	16,b	;volatile
 26345                           
 26346                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 26347  008154  0E00               	movlw	0
 26348  008156  6F20               	movwf	32,b	;volatile
 26349                           
 26350                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 26351  008158  0E00               	movlw	0
 26352  00815A  6F2C               	movwf	44,b	;volatile
 26353                           
 26354                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 26355  00815C  0E00               	movlw	0
 26356  00815E  6F0F               	movwf	15,b	;volatile
 26357                           
 26358                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 26359  008160  0E00               	movlw	0
 26360  008162  6F17               	movwf	23,b	;volatile
 26361                           
 26362                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 26363  008164  0E00               	movlw	0
 26364  008166  6F1F               	movwf	31,b	;volatile
 26365                           
 26366                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 26367  008168  0E00               	movlw	0
 26368  00816A  6F24               	movwf	36,b	;volatile
 26369                           
 26370                           ; BSR set to: 15
 26371                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 26372  00816C  690E               	setf	14,b	;volatile
 26373                           
 26374                           ; BSR set to: 15
 26375                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 26376  00816E  6916               	setf	22,b	;volatile
 26377                           
 26378                           ; BSR set to: 15
 26379                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 26380  008170  691E               	setf	30,b	;volatile
 26381                           
 26382                           ; BSR set to: 15
 26383                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 26384  008172  6923               	setf	35,b	;volatile
 26385                           
 26386                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 26387  008174  0E07               	movlw	7
 26388  008176  6F2B               	movwf	43,b	;volatile
 26389                           
 26390                           ; BSR set to: 15
 26391                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 26392  008178  690D               	setf	13,b	;volatile
 26393                           
 26394                           ; BSR set to: 15
 26395                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 26396  00817A  6915               	setf	21,b	;volatile
 26397                           
 26398                           ; BSR set to: 15
 26399                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 26400  00817C  691D               	setf	29,b	;volatile
 26401                           
 26402                           ; BSR set to: 15
 26403                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 26404  00817E  6922               	setf	34,b	;volatile
 26405                           
 26406                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 26407  008180  0E0F               	movlw	15
 26408  008182  6F2A               	movwf	42,b	;volatile
 26409                           
 26410                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 26411  008184  0E13               	movlw	19
 26412  008186  010E               	movlb	14	; () banked
 26413  008188  6FB7               	movwf	183,b	;volatile
 26414                           
 26415                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 26416  00818A  0E16               	movlw	22
 26417  00818C  6FB5               	movwf	181,b	;volatile
 26418                           
 26419                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 26420  00818E  0E0F               	movlw	15
 26421  008190  6FFA               	movwf	250,b	;volatile
 26422                           
 26423                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 26424  008192  0E10               	movlw	16
 26425  008194  6FFB               	movwf	251,b	;volatile
 26426                           
 26427                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 26428  008196  0E09               	movlw	9
 26429  008198  6FFE               	movwf	254,b	;volatile
 26430                           
 26431                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 26432  00819A  0E14               	movlw	20
 26433  00819C  6FB8               	movwf	184,b	;volatile
 26434                           
 26435                           ; BSR set to: 14
 26436  00819E  0012               	return		;funcret
 26437  0081A0                     __end_of_PIN_MANAGER_Initialize:
 26438                           	callstack 0
 26439                           
 26440 ;; *************** function _OSCILLATOR_Initialize *****************
 26441 ;; Defined at:
 26442 ;;		line 65 in file "mcc_generated_files/mcc.c"
 26443 ;; Parameters:    Size  Location     Type
 26444 ;;		None
 26445 ;; Auto vars:     Size  Location     Type
 26446 ;;		None
 26447 ;; Return value:  Size  Location     Type
 26448 ;;                  1    wreg      void 
 26449 ;; Registers used:
 26450 ;;		wreg, status,2
 26451 ;; Tracked objects:
 26452 ;;		On entry : 3F/E
 26453 ;;		On exit  : 3F/E
 26454 ;;		Unchanged: 0/0
 26455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26460 ;;Total ram usage:        0 bytes
 26461 ;; Hardware stack levels used: 1
 26462 ;; Hardware stack levels required when called: 4
 26463 ;; This function calls:
 26464 ;;		Nothing
 26465 ;; This function is called by:
 26466 ;;		_SYSTEM_Initialize
 26467 ;; This function uses a non-reentrant model
 26468 ;;
 26469                           
 26470                           	psect	text102
 26471  009E1A                     __ptext102:
 26472                           	callstack 0
 26473  009E1A                     _OSCILLATOR_Initialize:
 26474                           	callstack 25
 26475                           
 26476                           ; BSR set to: 14
 26477                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 26478                           
 26479                           ; BSR set to: 14
 26480                           ;incstack = 0
 26481  009E1A  0E60               	movlw	96
 26482  009E1C  6FD8               	movwf	216,b	;volatile
 26483                           
 26484                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 26485  009E1E  0E00               	movlw	0
 26486  009E20  6FDA               	movwf	218,b	;volatile
 26487                           
 26488                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 26489  009E22  0E00               	movlw	0
 26490  009E24  6FDC               	movwf	220,b	;volatile
 26491                           
 26492                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 26493  009E26  0E08               	movlw	8
 26494  009E28  6FDE               	movwf	222,b	;volatile
 26495                           
 26496                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 26497  009E2A  0E00               	movlw	0
 26498  009E2C  6FDD               	movwf	221,b	;volatile
 26499                           
 26500                           ; BSR set to: 14
 26501  009E2E  0012               	return		;funcret
 26502  009E30                     __end_of_OSCILLATOR_Initialize:
 26503                           	callstack 0
 26504                           
 26505 ;; *************** function _INTERRUPT_Initialize *****************
 26506 ;; Defined at:
 26507 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26508 ;; Parameters:    Size  Location     Type
 26509 ;;		None
 26510 ;; Auto vars:     Size  Location     Type
 26511 ;;		None
 26512 ;; Return value:  Size  Location     Type
 26513 ;;                  1    wreg      void 
 26514 ;; Registers used:
 26515 ;;		None
 26516 ;; Tracked objects:
 26517 ;;		On entry : 3F/0
 26518 ;;		On exit  : 3F/0
 26519 ;;		Unchanged: 3F/0
 26520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26525 ;;Total ram usage:        0 bytes
 26526 ;; Hardware stack levels used: 1
 26527 ;; Hardware stack levels required when called: 4
 26528 ;; This function calls:
 26529 ;;		Nothing
 26530 ;; This function is called by:
 26531 ;;		_SYSTEM_Initialize
 26532 ;; This function uses a non-reentrant model
 26533 ;;
 26534                           
 26535                           	psect	text103
 26536  009FF8                     __ptext103:
 26537                           	callstack 0
 26538  009FF8                     _INTERRUPT_Initialize:
 26539                           	callstack 25
 26540                           
 26541                           ; BSR set to: 0
 26542                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 26543                           
 26544                           ; BSR set to: 14
 26545                           ;incstack = 0
 26546  009FF8  9AF2               	bcf	242,5,c	;volatile
 26547                           
 26548                           ; BSR set to: 0
 26549  009FFA  0012               	return		;funcret
 26550  009FFC                     __end_of_INTERRUPT_Initialize:
 26551                           	callstack 0
 26552                           
 26553 ;; *************** function _I2C1_Initialize *****************
 26554 ;; Defined at:
 26555 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26556 ;; Parameters:    Size  Location     Type
 26557 ;;		None
 26558 ;; Auto vars:     Size  Location     Type
 26559 ;;		None
 26560 ;; Return value:  Size  Location     Type
 26561 ;;                  1    wreg      void 
 26562 ;; Registers used:
 26563 ;;		wreg, status,2
 26564 ;; Tracked objects:
 26565 ;;		On entry : 3F/E
 26566 ;;		On exit  : 3F/E
 26567 ;;		Unchanged: 3F/0
 26568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26573 ;;Total ram usage:        0 bytes
 26574 ;; Hardware stack levels used: 1
 26575 ;; Hardware stack levels required when called: 4
 26576 ;; This function calls:
 26577 ;;		Nothing
 26578 ;; This function is called by:
 26579 ;;		_SYSTEM_Initialize
 26580 ;; This function uses a non-reentrant model
 26581 ;;
 26582                           
 26583                           	psect	text104
 26584  009E6E                     __ptext104:
 26585                           	callstack 0
 26586  009E6E                     _I2C1_Initialize:
 26587                           	callstack 25
 26588                           
 26589                           ; BSR set to: 14
 26590                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26591                           
 26592                           ; BSR set to: 0
 26593                           ;incstack = 0
 26594  009E6E  0E80               	movlw	128
 26595  009E70  6E95               	movwf	149,c	;volatile
 26596                           
 26597                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26598  009E72  0E08               	movlw	8
 26599  009E74  6E96               	movwf	150,c	;volatile
 26600                           
 26601                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26602  009E76  0E00               	movlw	0
 26603  009E78  6E97               	movwf	151,c	;volatile
 26604                           
 26605                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26606  009E7A  0E9F               	movlw	159
 26607  009E7C  6E93               	movwf	147,c	;volatile
 26608                           
 26609                           ; BSR set to: 14
 26610                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26611  009E7E  9A96               	bcf	150,5,c	;volatile
 26612                           
 26613                           ; BSR set to: 14
 26614  009E80  0012               	return		;funcret
 26615  009E82                     __end_of_I2C1_Initialize:
 26616                           	callstack 0
 26617                           
 26618 ;; *************** function _EUSART1_Initialize *****************
 26619 ;; Defined at:
 26620 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26621 ;; Parameters:    Size  Location     Type
 26622 ;;		None
 26623 ;; Auto vars:     Size  Location     Type
 26624 ;;		None
 26625 ;; Return value:  Size  Location     Type
 26626 ;;                  1    wreg      void 
 26627 ;; Registers used:
 26628 ;;		wreg, status,2, status,0, cstack
 26629 ;; Tracked objects:
 26630 ;;		On entry : 3F/E
 26631 ;;		On exit  : 3F/E
 26632 ;;		Unchanged: 0/0
 26633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26638 ;;Total ram usage:        0 bytes
 26639 ;; Hardware stack levels used: 1
 26640 ;; Hardware stack levels required when called: 5
 26641 ;; This function calls:
 26642 ;;		_EUSART1_SetErrorHandler
 26643 ;;		_EUSART1_SetFramingErrorHandler
 26644 ;;		_EUSART1_SetOverrunErrorHandler
 26645 ;;		_EUSART1_SetRxInterruptHandler
 26646 ;;		_EUSART1_SetTxInterruptHandler
 26647 ;; This function is called by:
 26648 ;;		_SYSTEM_Initialize
 26649 ;; This function uses a non-reentrant model
 26650 ;;
 26651                           
 26652                           	psect	text105
 26653  008780                     __ptext105:
 26654                           	callstack 0
 26655  008780                     _EUSART1_Initialize:
 26656                           	callstack 24
 26657                           
 26658                           ; BSR set to: 14
 26659                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26660                           
 26661                           ; BSR set to: 14
 26662                           ;incstack = 0
 26663  008780  9BC5               	bcf	197,5,b	;volatile
 26664                           
 26665                           ; BSR set to: 14
 26666                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26667  008782  0E6E               	movlw	low _EUSART1_Receive_ISR
 26668  008784  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26669  008786  0E80               	movlw	high _EUSART1_Receive_ISR
 26670  008788  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26671  00878A  EC94  F04F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26672                           
 26673                           ; BSR set to: 14
 26674                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26675  00878E  99C5               	bcf	197,4,b	;volatile
 26676                           
 26677                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26678  008790  0E12               	movlw	low _EUSART1_Transmit_ISR
 26679  008792  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26680  008794  0E98               	movlw	high _EUSART1_Transmit_ISR
 26681  008796  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26682  008798  EC8F  F04F         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26683                           
 26684                           ; BSR set to: 14
 26685                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26686  00879C  0E08               	movlw	8
 26687  00879E  6E9F               	movwf	159,c	;volatile
 26688                           
 26689                           ; BSR set to: 14
 26690                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26691  0087A0  0E90               	movlw	144
 26692  0087A2  6E9D               	movwf	157,c	;volatile
 26693                           
 26694                           ; BSR set to: 14
 26695                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26696  0087A4  0E24               	movlw	36
 26697  0087A6  6E9E               	movwf	158,c	;volatile
 26698                           
 26699                           ; BSR set to: 14
 26700                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26701  0087A8  0E82               	movlw	130
 26702  0087AA  6E9B               	movwf	155,c	;volatile
 26703                           
 26704                           ; BSR set to: 14
 26705                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26706  0087AC  0E06               	movlw	6
 26707  0087AE  6E9C               	movwf	156,c	;volatile
 26708                           
 26709                           ; BSR set to: 14
 26710                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26711  0087B0  0E28               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26712  0087B2  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26713  0087B4  0EA0               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26714  0087B6  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26715  0087B8  EC9E  F04F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26716                           
 26717                           ; BSR set to: 14
 26718                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26719  0087BC  0EE8               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26720  0087BE  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26721  0087C0  0E9F               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26722  0087C2  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26723  0087C4  EC99  F04F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26724                           
 26725                           ; BSR set to: 14
 26726                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26727  0087C8  0EEE               	movlw	low _EUSART1_DefaultErrorHandler
 26728  0087CA  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26729  0087CC  0E9F               	movlw	high _EUSART1_DefaultErrorHandler
 26730  0087CE  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26731  0087D0  ECA3  F04F         	call	_EUSART1_SetErrorHandler	;wreg free
 26732                           
 26733                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26734  0087D4  0E00               	movlw	0
 26735  0087D6  0101               	movlb	1	; () banked
 26736  0087D8  6F9D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26737                           
 26738                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26739  0087DA  0E00               	movlw	0
 26740  0087DC  0100               	movlb	0	; () banked
 26741  0087DE  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26742                           
 26743                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26744  0087E0  0E00               	movlw	0
 26745  0087E2  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26746                           
 26747                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26748  0087E4  0E08               	movlw	8
 26749  0087E6  0101               	movlb	1	; () banked
 26750  0087E8  6FFD               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26751                           
 26752                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26753  0087EA  0E00               	movlw	0
 26754  0087EC  0100               	movlb	0	; () banked
 26755  0087EE  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26756                           
 26757                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26758  0087F0  0E00               	movlw	0
 26759  0087F2  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26760                           
 26761                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26762  0087F4  0E00               	movlw	0
 26763  0087F6  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26764                           
 26765                           ; BSR set to: 0
 26766                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26767  0087F8  010E               	movlb	14	; () banked
 26768  0087FA  8BC5               	bsf	197,5,b	;volatile
 26769                           
 26770                           ; BSR set to: 14
 26771  0087FC  0012               	return		;funcret
 26772  0087FE                     __end_of_EUSART1_Initialize:
 26773                           	callstack 0
 26774                           
 26775 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26776 ;; Defined at:
 26777 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26778 ;; Parameters:    Size  Location     Type
 26779 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26780 ;;		 -> EUSART1_Transmit_ISR(1), 
 26781 ;; Auto vars:     Size  Location     Type
 26782 ;;		None
 26783 ;; Return value:  Size  Location     Type
 26784 ;;                  1    wreg      void 
 26785 ;; Registers used:
 26786 ;;		wreg, status,2, status,0
 26787 ;; Tracked objects:
 26788 ;;		On entry : 3F/E
 26789 ;;		On exit  : 3F/E
 26790 ;;		Unchanged: 3F/0
 26791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26796 ;;Total ram usage:        2 bytes
 26797 ;; Hardware stack levels used: 1
 26798 ;; Hardware stack levels required when called: 4
 26799 ;; This function calls:
 26800 ;;		Nothing
 26801 ;; This function is called by:
 26802 ;;		_EUSART1_Initialize
 26803 ;; This function uses a non-reentrant model
 26804 ;;
 26805                           
 26806                           	psect	text106
 26807  009F1E                     __ptext106:
 26808                           	callstack 0
 26809  009F1E                     _EUSART1_SetTxInterruptHandler:
 26810                           	callstack 24
 26811                           
 26812                           ; BSR set to: 14
 26813                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26814                           
 26815                           ; BSR set to: 14
 26816                           ;incstack = 0
 26817  009F1E  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26818  009F22  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26819                           
 26820                           ; BSR set to: 14
 26821  009F26  0012               	return		;funcret
 26822  009F28                     __end_of_EUSART1_SetTxInterruptHandler:
 26823                           	callstack 0
 26824                           
 26825 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26826 ;; Defined at:
 26827 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26828 ;; Parameters:    Size  Location     Type
 26829 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26830 ;;		 -> EUSART1_Receive_ISR(1), 
 26831 ;; Auto vars:     Size  Location     Type
 26832 ;;		None
 26833 ;; Return value:  Size  Location     Type
 26834 ;;                  1    wreg      void 
 26835 ;; Registers used:
 26836 ;;		wreg, status,2, status,0
 26837 ;; Tracked objects:
 26838 ;;		On entry : 3F/E
 26839 ;;		On exit  : 3F/E
 26840 ;;		Unchanged: 3F/0
 26841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26846 ;;Total ram usage:        2 bytes
 26847 ;; Hardware stack levels used: 1
 26848 ;; Hardware stack levels required when called: 4
 26849 ;; This function calls:
 26850 ;;		Nothing
 26851 ;; This function is called by:
 26852 ;;		_EUSART1_Initialize
 26853 ;; This function uses a non-reentrant model
 26854 ;;
 26855                           
 26856                           	psect	text107
 26857  009F28                     __ptext107:
 26858                           	callstack 0
 26859  009F28                     _EUSART1_SetRxInterruptHandler:
 26860                           	callstack 24
 26861                           
 26862                           ; BSR set to: 14
 26863                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26864                           
 26865                           ; BSR set to: 14
 26866                           ;incstack = 0
 26867  009F28  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26868  009F2C  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26869                           
 26870                           ; BSR set to: 14
 26871  009F30  0012               	return		;funcret
 26872  009F32                     __end_of_EUSART1_SetRxInterruptHandler:
 26873                           	callstack 0
 26874                           
 26875 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26876 ;; Defined at:
 26877 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26878 ;; Parameters:    Size  Location     Type
 26879 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26880 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26881 ;; Auto vars:     Size  Location     Type
 26882 ;;		None
 26883 ;; Return value:  Size  Location     Type
 26884 ;;                  1    wreg      void 
 26885 ;; Registers used:
 26886 ;;		wreg, status,2, status,0
 26887 ;; Tracked objects:
 26888 ;;		On entry : 3F/E
 26889 ;;		On exit  : 3F/E
 26890 ;;		Unchanged: 3F/0
 26891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26896 ;;Total ram usage:        2 bytes
 26897 ;; Hardware stack levels used: 1
 26898 ;; Hardware stack levels required when called: 4
 26899 ;; This function calls:
 26900 ;;		Nothing
 26901 ;; This function is called by:
 26902 ;;		_EUSART1_Initialize
 26903 ;; This function uses a non-reentrant model
 26904 ;;
 26905                           
 26906                           	psect	text108
 26907  009F32                     __ptext108:
 26908                           	callstack 0
 26909  009F32                     _EUSART1_SetOverrunErrorHandler:
 26910                           	callstack 24
 26911                           
 26912                           ; BSR set to: 14
 26913                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 26914                           
 26915                           ; BSR set to: 14
 26916                           ;incstack = 0
 26917  009F32  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 26918  009F36  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 26919                           
 26920                           ; BSR set to: 14
 26921  009F3A  0012               	return		;funcret
 26922  009F3C                     __end_of_EUSART1_SetOverrunErrorHandler:
 26923                           	callstack 0
 26924                           
 26925 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 26926 ;; Defined at:
 26927 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 26928 ;; Parameters:    Size  Location     Type
 26929 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26930 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 26931 ;; Auto vars:     Size  Location     Type
 26932 ;;		None
 26933 ;; Return value:  Size  Location     Type
 26934 ;;                  1    wreg      void 
 26935 ;; Registers used:
 26936 ;;		wreg, status,2, status,0
 26937 ;; Tracked objects:
 26938 ;;		On entry : 3F/E
 26939 ;;		On exit  : 3F/E
 26940 ;;		Unchanged: 3F/0
 26941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26946 ;;Total ram usage:        2 bytes
 26947 ;; Hardware stack levels used: 1
 26948 ;; Hardware stack levels required when called: 4
 26949 ;; This function calls:
 26950 ;;		Nothing
 26951 ;; This function is called by:
 26952 ;;		_EUSART1_Initialize
 26953 ;; This function uses a non-reentrant model
 26954 ;;
 26955                           
 26956                           	psect	text109
 26957  009F3C                     __ptext109:
 26958                           	callstack 0
 26959  009F3C                     _EUSART1_SetFramingErrorHandler:
 26960                           	callstack 24
 26961                           
 26962                           ; BSR set to: 14
 26963                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 26964                           
 26965                           ; BSR set to: 14
 26966                           ;incstack = 0
 26967  009F3C  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 26968  009F40  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 26969                           
 26970                           ; BSR set to: 14
 26971  009F44  0012               	return		;funcret
 26972  009F46                     __end_of_EUSART1_SetFramingErrorHandler:
 26973                           	callstack 0
 26974                           
 26975 ;; *************** function _EUSART1_SetErrorHandler *****************
 26976 ;; Defined at:
 26977 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 26978 ;; Parameters:    Size  Location     Type
 26979 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26980 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 26981 ;; Auto vars:     Size  Location     Type
 26982 ;;		None
 26983 ;; Return value:  Size  Location     Type
 26984 ;;                  1    wreg      void 
 26985 ;; Registers used:
 26986 ;;		wreg, status,2, status,0
 26987 ;; Tracked objects:
 26988 ;;		On entry : 3F/E
 26989 ;;		On exit  : 3F/E
 26990 ;;		Unchanged: 3F/0
 26991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26996 ;;Total ram usage:        2 bytes
 26997 ;; Hardware stack levels used: 1
 26998 ;; Hardware stack levels required when called: 4
 26999 ;; This function calls:
 27000 ;;		Nothing
 27001 ;; This function is called by:
 27002 ;;		_EUSART1_Initialize
 27003 ;; This function uses a non-reentrant model
 27004 ;;
 27005                           
 27006                           	psect	text110
 27007  009F46                     __ptext110:
 27008                           	callstack 0
 27009  009F46                     _EUSART1_SetErrorHandler:
 27010                           	callstack 24
 27011                           
 27012                           ; BSR set to: 14
 27013                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 27014                           
 27015                           ; BSR set to: 14
 27016                           ;incstack = 0
 27017  009F46  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 27018  009F4A  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 27019                           
 27020                           ; BSR set to: 14
 27021  009F4E  0012               	return		;funcret
 27022  009F50                     __end_of_EUSART1_SetErrorHandler:
 27023                           	callstack 0
 27024                           
 27025 ;; *************** function _ADCC_Initialize *****************
 27026 ;; Defined at:
 27027 ;;		line 62 in file "mcc_generated_files/adcc.c"
 27028 ;; Parameters:    Size  Location     Type
 27029 ;;		None
 27030 ;; Auto vars:     Size  Location     Type
 27031 ;;		None
 27032 ;; Return value:  Size  Location     Type
 27033 ;;                  1    wreg      void 
 27034 ;; Registers used:
 27035 ;;		wreg, status,2
 27036 ;; Tracked objects:
 27037 ;;		On entry : 3F/E
 27038 ;;		On exit  : 3F/F
 27039 ;;		Unchanged: 0/0
 27040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27045 ;;Total ram usage:        0 bytes
 27046 ;; Hardware stack levels used: 1
 27047 ;; Hardware stack levels required when called: 4
 27048 ;; This function calls:
 27049 ;;		Nothing
 27050 ;; This function is called by:
 27051 ;;		_SYSTEM_Initialize
 27052 ;; This function uses a non-reentrant model
 27053 ;;
 27054                           
 27055                           	psect	text111
 27056  00930C                     __ptext111:
 27057                           	callstack 0
 27058  00930C                     _ADCC_Initialize:
 27059                           	callstack 25
 27060                           
 27061                           ; BSR set to: 14
 27062                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 27063                           
 27064                           ; BSR set to: 14
 27065                           ;incstack = 0
 27066  00930C  0E00               	movlw	0
 27067  00930E  6E6A               	movwf	106,c	;volatile
 27068                           
 27069                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 27070  009310  0E00               	movlw	0
 27071  009312  6E6B               	movwf	107,c	;volatile
 27072                           
 27073                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 27074  009314  0E00               	movlw	0
 27075  009316  6E6C               	movwf	108,c	;volatile
 27076                           
 27077                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 27078  009318  0E00               	movlw	0
 27079  00931A  6E6D               	movwf	109,c	;volatile
 27080                           
 27081                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 27082  00931C  0E00               	movlw	0
 27083  00931E  6E68               	movwf	104,c	;volatile
 27084                           
 27085                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 27086  009320  0E00               	movlw	0
 27087  009322  6E69               	movwf	105,c	;volatile
 27088                           
 27089                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 27090  009324  0E00               	movlw	0
 27091  009326  6E66               	movwf	102,c	;volatile
 27092                           
 27093                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 27094  009328  0E00               	movlw	0
 27095  00932A  010F               	movlb	15	; () banked
 27096  00932C  6F5F               	movwf	95,b	;volatile
 27097                           
 27098                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 27099  00932E  0E00               	movlw	0
 27100  009330  6F5D               	movwf	93,b	;volatile
 27101                           
 27102                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 27103  009332  0E00               	movlw	0
 27104  009334  6F5E               	movwf	94,b	;volatile
 27105                           
 27106                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 27107  009336  0E00               	movlw	0
 27108  009338  6F59               	movwf	89,b	;volatile
 27109                           
 27110                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 27111  00933A  0E00               	movlw	0
 27112  00933C  6F5A               	movwf	90,b	;volatile
 27113                           
 27114                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 27115  00933E  0E00               	movlw	0
 27116  009340  6F5B               	movwf	91,b	;volatile
 27117                           
 27118                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 27119  009342  0E00               	movlw	0
 27120  009344  6E65               	movwf	101,c	;volatile
 27121                           
 27122                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 27123  009346  0E00               	movlw	0
 27124  009348  6F58               	movwf	88,b	;volatile
 27125                           
 27126                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 27127  00934A  0E00               	movlw	0
 27128  00934C  6F56               	movwf	86,b	;volatile
 27129                           
 27130                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 27131  00934E  0E3F               	movlw	63
 27132  009350  6F57               	movwf	87,b	;volatile
 27133                           
 27134                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 27135  009352  0E80               	movlw	128
 27136  009354  6E60               	movwf	96,c	;volatile
 27137                           
 27138                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 27139  009356  0E00               	movlw	0
 27140  009358  6F5C               	movwf	92,b	;volatile
 27141                           
 27142                           ; BSR set to: 15
 27143  00935A  0012               	return		;funcret
 27144  00935C                     __end_of_ADCC_Initialize:
 27145                           	callstack 0
 27146                           
 27147 ;; *************** function _EUSART1_is_rx_ready *****************
 27148 ;; Defined at:
 27149 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 27150 ;; Parameters:    Size  Location     Type
 27151 ;;		None
 27152 ;; Auto vars:     Size  Location     Type
 27153 ;;		None
 27154 ;; Return value:  Size  Location     Type
 27155 ;;                  1    wreg      _Bool 
 27156 ;; Registers used:
 27157 ;;		wreg, status,2
 27158 ;; Tracked objects:
 27159 ;;		On entry : 0/1
 27160 ;;		On exit  : 3F/0
 27161 ;;		Unchanged: 0/0
 27162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27167 ;;Total ram usage:        0 bytes
 27168 ;; Hardware stack levels used: 1
 27169 ;; Hardware stack levels required when called: 4
 27170 ;; This function calls:
 27171 ;;		Nothing
 27172 ;; This function is called by:
 27173 ;;		_main
 27174 ;; This function uses a non-reentrant model
 27175 ;;
 27176                           
 27177                           	psect	text112
 27178  009E94                     __ptext112:
 27179                           	callstack 0
 27180  009E94                     _EUSART1_is_rx_ready:
 27181                           	callstack 26
 27182                           
 27183                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 27184                           
 27185                           ; BSR set to: 15
 27186                           ;incstack = 0
 27187  009E94  0100               	movlb	0	; () banked
 27188  009E96  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 27189  009E98  B4D8               	btfsc	status,2,c
 27190  009E9A  D002               	goto	u29700
 27191  009E9C  0E01               	movlw	1
 27192  009E9E  0012               	return	
 27193  009EA0                     u29700:
 27194  009EA0  0E00               	movlw	0
 27195                           
 27196                           ; BSR set to: 0
 27197  009EA2  0012               	return		;funcret
 27198  009EA4                     __end_of_EUSART1_is_rx_ready:
 27199                           	callstack 0
 27200                           
 27201 ;; *************** function _ControlMotor *****************
 27202 ;; Defined at:
 27203 ;;		line 703 in file "outputs_MC50.c"
 27204 ;; Parameters:    Size  Location     Type
 27205 ;;		None
 27206 ;; Auto vars:     Size  Location     Type
 27207 ;;  stateMotor      1   23[COMRAM] enum E10381
 27208 ;; Return value:  Size  Location     Type
 27209 ;;                  1    wreg      void 
 27210 ;; Registers used:
 27211 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27212 ;; Tracked objects:
 27213 ;;		On entry : 3E/1
 27214 ;;		On exit  : 3E/0
 27215 ;;		Unchanged: 0/0
 27216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27219 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27220 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27221 ;;Total ram usage:        7 bytes
 27222 ;; Hardware stack levels used: 1
 27223 ;; Hardware stack levels required when called: 5
 27224 ;; This function calls:
 27225 ;;		_VerifyElectricalBrake
 27226 ;; This function is called by:
 27227 ;;		_main
 27228 ;; This function uses a non-reentrant model
 27229 ;;
 27230                           
 27231                           	psect	text113
 27232  00544A                     __ptext113:
 27233                           	callstack 0
 27234  00544A                     _ControlMotor:
 27235                           	callstack 25
 27236                           
 27237                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 27238                           
 27239                           ; BSR set to: 0
 27240                           ;incstack = 0
 27241  00544A  0101               	movlb	1	; () banked
 27242  00544C  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 27243  00544E  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 27244  005450  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 27245  005452  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 27246  005454  A4D8               	btfss	status,2,c
 27247  005456  D00D               	goto	l25528
 27248                           
 27249                           ; BSR set to: 1
 27250  005458  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 27251  00545A  B4D8               	btfsc	status,2,c
 27252  00545C  D00A               	goto	l25528
 27253                           
 27254                           ; BSR set to: 1
 27255  00545E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 27256  005460  A4D8               	btfss	status,2,c
 27257  005462  D007               	goto	l25528
 27258                           
 27259                           ; BSR set to: 1
 27260  005464  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 27261  005466  A4D8               	btfss	status,2,c
 27262  005468  D004               	goto	l25528
 27263                           
 27264                           ; BSR set to: 1
 27265                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 27266  00546A  0E00               	movlw	0
 27267  00546C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27268                           
 27269                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 27270  00546E  0E02               	movlw	2
 27271  005470  D007               	goto	L102
 27272  005472                     l25528:
 27273                           
 27274                           ; BSR set to: 1
 27275  005472  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 27276  005474  A4D8               	btfss	status,2,c
 27277  005476  D005               	goto	l25534
 27278                           
 27279                           ; BSR set to: 1
 27280  005478  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27281  00547A  A4D8               	btfss	status,2,c
 27282  00547C  D002               	goto	l25534
 27283                           
 27284                           ; BSR set to: 1
 27285                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 27286  00547E  0E00               	movlw	0
 27287  005480                     L102:
 27288  005480  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 27289  005482                     l25534:
 27290                           
 27291                           ; BSR set to: 1
 27292                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 27293  005482  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27294  005484  EC7A  F044         	call	_VerifyElectricalBrake
 27295  005488  6E18               	movwf	ControlMotor@stateMotor^0,c
 27296                           
 27297                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 27298  00548A  5018               	movf	ControlMotor@stateMotor^0,w,c
 27299  00548C  A4D8               	btfss	status,2,c
 27300  00548E  D00A               	goto	l25544
 27301                           
 27302                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 27303  005490  0E01               	movlw	1
 27304  005492  0101               	movlb	1	; () banked
 27305  005494  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27306                           
 27307                           ; BSR set to: 1
 27308                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 27309  005496  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 27310  005498  0012               	return	
 27311                           
 27312                           ; BSR set to: 1
 27313                           
 27314                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 27315  00549A  9287               	bcf	135,1,c	;volatile
 27316                           
 27317                           ; BSR set to: 1
 27318                           
 27319                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 27320  00549C  9087               	bcf	135,0,c	;volatile
 27321  00549E                     l25542:
 27322                           
 27323                           ; BSR set to: 1
 27324                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 27325  00549E  0E00               	movlw	0
 27326  0054A0  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27327  0054A2  0012               	return	
 27328  0054A4                     l25544:
 27329  0054A4  0100               	movlb	0	; () banked
 27330  0054A6  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27331  0054A8  A4D8               	btfss	status,2,c
 27332  0054AA  D022               	goto	l25560
 27333                           
 27334                           ; BSR set to: 0
 27335  0054AC  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27336  0054AE  A4D8               	btfss	status,2,c
 27337  0054B0  D01F               	goto	l25560
 27338                           
 27339                           ; BSR set to: 0
 27340  0054B2  0101               	movlb	1	; () banked
 27341  0054B4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27342  0054B6  A4D8               	btfss	status,2,c
 27343  0054B8  D01B               	goto	l25560
 27344                           
 27345                           ; BSR set to: 1
 27346  0054BA  5018               	movf	ControlMotor@stateMotor^0,w,c
 27347  0054BC  A4D8               	btfss	status,2,c
 27348                           
 27349                           ; BSR set to: 1
 27350  0054BE  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27351  0054C0  D017               	goto	l25560
 27352  0054C2  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27353  0054C4  E103               	bnz	u31560
 27354  0054C6  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27355  0054C8  A0D8               	btfss	status,0,c
 27356  0054CA  D012               	goto	l25560
 27357  0054CC                     u31560:
 27358                           
 27359                           ; BSR set to: 1
 27360  0054CC  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27361  0054CE  D005               	goto	u31570
 27362  0054D0  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27363  0054D2  E10E               	bnz	l25560
 27364  0054D4  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27365  0054D6  B0D8               	btfsc	status,0,c
 27366  0054D8  D00B               	goto	l25560
 27367  0054DA                     u31570:
 27368                           
 27369                           ; BSR set to: 1
 27370                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 27371  0054DA  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27372  0054DC  D006               	goto	u31580
 27373  0054DE  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27374  0054E0  E103               	bnz	u31581
 27375  0054E2  0E12               	movlw	18
 27376  0054E4  5DC6               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 27377  0054E6  B0D8               	btfsc	status,0,c
 27378  0054E8                     u31581:
 27379  0054E8  0012               	return	
 27380  0054EA                     u31580:
 27381                           
 27382                           ; BSR set to: 1
 27383                           
 27384                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 27385  0054EA  8287               	bsf	135,1,c	;volatile
 27386                           
 27387                           ; BSR set to: 1
 27388                           
 27389                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 27390  0054EC  8087               	bsf	135,0,c	;volatile
 27391  0054EE  D7D7               	goto	l25542
 27392  0054F0                     l25560:
 27393  0054F0  0418               	decf	ControlMotor@stateMotor^0,w,c
 27394  0054F2  B4D8               	btfsc	status,2,c
 27395  0054F4  D004               	goto	u31600
 27396  0054F6  0E02               	movlw	2
 27397  0054F8  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27398  0054FA  A4D8               	btfss	status,2,c
 27399  0054FC  D063               	goto	l25590
 27400  0054FE                     u31600:
 27401  0054FE  0101               	movlb	1	; () banked
 27402  005500  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 27403  005502  A4D8               	btfss	status,2,c
 27404  005504  D05F               	goto	l25590
 27405                           
 27406                           ; BSR set to: 1
 27407                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 27408  005506  B291               	btfsc	145,1,c	;volatile
 27409  005508  D004               	goto	u31630
 27410                           
 27411                           ; BSR set to: 1
 27412  00550A  0100               	movlb	0	; () banked
 27413  00550C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27414  00550E  B4D8               	btfsc	status,2,c
 27415  005510  D006               	goto	u31650
 27416  005512                     u31630:
 27417  005512  B091               	btfsc	145,0,c	;volatile
 27418  005514  D04F               	goto	l2353
 27419  005516  0100               	movlb	0	; () banked
 27420  005518  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27421  00551A  A4D8               	btfss	status,2,c
 27422  00551C  D04B               	goto	l2353
 27423  00551E                     u31650:
 27424                           
 27425                           ; BSR set to: 0
 27426                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27427  00551E  B091               	btfsc	145,0,c	;volatile
 27428  005520  D003               	goto	u31670
 27429                           
 27430                           ; BSR set to: 0
 27431  005522  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27432  005524  B4D8               	btfsc	status,2,c
 27433  005526  D005               	goto	u31690
 27434  005528                     u31670:
 27435                           
 27436                           ; BSR set to: 0
 27437  005528  B291               	btfsc	145,1,c	;volatile
 27438  00552A  D03A               	goto	l25586
 27439                           
 27440                           ; BSR set to: 0
 27441  00552C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27442  00552E  A4D8               	btfss	status,2,c
 27443  005530  D037               	goto	l25586
 27444  005532                     u31690:
 27445                           
 27446                           ; BSR set to: 0
 27447                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 27448  005532  0E00               	movlw	0
 27449  005534  0101               	movlb	1	; () banked
 27450  005536  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27451                           
 27452                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 27453  005538  0E00               	movlw	0
 27454  00553A  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27455  00553C  0EC8               	movlw	200
 27456  00553E  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27457                           
 27458                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 27459  005540  0E00               	movlw	0
 27460  005542  6FB9               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27461  005544  0E14               	movlw	20
 27462  005546  6FB8               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27463                           
 27464                           ; BSR set to: 1
 27465                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 27466  005548  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27467  00554A  B4D8               	btfsc	status,2,c
 27468  00554C  D003               	goto	u31710
 27469                           
 27470                           ; BSR set to: 1
 27471  00554E  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 27472  005550  A4D8               	btfss	status,2,c
 27473  005552  D024               	goto	l25584
 27474  005554                     u31710:
 27475                           
 27476                           ; BSR set to: 1
 27477                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 27478  005554  0100               	movlb	0	; () banked
 27479  005556  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 27480  005558  0D0A               	mullw	10
 27481  00555A  CFF3 F012          	movff	prodl,??_ControlMotor
 27482  00555E  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27483  005562  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27484  005564  2612               	addwf	??_ControlMotor^0,f,c
 27485  005566  0E00               	movlw	0
 27486  005568  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27487  00556A  5012               	movf	??_ControlMotor^0,w,c
 27488  00556C  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 27489  00556E  6E14               	movwf	(??_ControlMotor+2)^0,c
 27490  005570  5013               	movf	(??_ControlMotor+1)^0,w,c
 27491  005572  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 27492  005574  6E15               	movwf	(??_ControlMotor+3)^0,c
 27493  005576  0E00               	movlw	0
 27494  005578  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 27495  00557A  6E16               	movwf	(??_ControlMotor+4)^0,c
 27496  00557C  0E00               	movlw	0
 27497  00557E  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 27498  005580  6E17               	movwf	(??_ControlMotor+5)^0,c
 27499  005582  0E50               	movlw	80
 27500  005584  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27501  005586  0101               	movlb	1	; () banked
 27502  005588  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27503  00558A  0E00               	movlw	0
 27504  00558C  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27505  00558E  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27506  005590  0E00               	movlw	0
 27507  005592  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27508  005594  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27509  005596  0E00               	movlw	0
 27510  005598  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27511  00559A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27512  00559C                     l25584:
 27513                           
 27514                           ; BSR set to: 1
 27515                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 27516  00559C  0E02               	movlw	2
 27517  00559E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27518  0055A0                     l25586:
 27519                           
 27520                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 27521  0055A0  0100               	movlb	0	; () banked
 27522  0055A2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27523  0055A4  A4D8               	btfss	status,2,c
 27524  0055A6  D002               	goto	l2370
 27525                           
 27526                           ; BSR set to: 0
 27527  0055A8  8087               	bsf	135,0,c	;volatile
 27528  0055AA  D001               	goto	l25588
 27529  0055AC                     l2370:
 27530                           
 27531                           ; BSR set to: 0
 27532  0055AC  8287               	bsf	135,1,c	;volatile
 27533  0055AE                     l25588:
 27534                           
 27535                           ; BSR set to: 0
 27536                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27537  0055AE  0E01               	movlw	1
 27538  0055B0  0101               	movlb	1	; () banked
 27539  0055B2  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27540  0055B4                     l2353:
 27541                           
 27542                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27543  0055B4  0100               	movlb	0	; () banked
 27544  0055B6  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27545  0055B8  A4D8               	btfss	status,2,c
 27546  0055BA  D002               	goto	l2376
 27547                           
 27548                           ; BSR set to: 0
 27549  0055BC  9287               	bcf	135,1,c	;volatile
 27550  0055BE  0012               	return	
 27551  0055C0                     l2376:
 27552                           
 27553                           ; BSR set to: 0
 27554  0055C0  9087               	bcf	135,0,c	;volatile
 27555  0055C2  0012               	return	
 27556  0055C4                     l25590:
 27557  0055C4  0E03               	movlw	3
 27558  0055C6  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27559  0055C8  A4D8               	btfss	status,2,c
 27560  0055CA  0012               	return	
 27561  0055CC  0101               	movlb	1	; () banked
 27562  0055CE  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27563  0055D0  A4D8               	btfss	status,2,c
 27564  0055D2  0012               	return	
 27565                           
 27566                           ; BSR set to: 1
 27567                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27568  0055D4  B091               	btfsc	145,0,c	;volatile
 27569  0055D6  D004               	goto	u31770
 27570                           
 27571                           ; BSR set to: 1
 27572  0055D8  0100               	movlb	0	; () banked
 27573  0055DA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27574  0055DC  B4D8               	btfsc	status,2,c
 27575  0055DE  D006               	goto	u31790
 27576  0055E0                     u31770:
 27577  0055E0  B291               	btfsc	145,1,c	;volatile
 27578  0055E2  D050               	goto	l2380
 27579  0055E4  0100               	movlb	0	; () banked
 27580  0055E6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27581  0055E8  A4D8               	btfss	status,2,c
 27582  0055EA  D04C               	goto	l2380
 27583  0055EC                     u31790:
 27584                           
 27585                           ; BSR set to: 0
 27586                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27587  0055EC  B291               	btfsc	145,1,c	;volatile
 27588  0055EE  D003               	goto	u31810
 27589                           
 27590                           ; BSR set to: 0
 27591  0055F0  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27592  0055F2  B4D8               	btfsc	status,2,c
 27593  0055F4  D005               	goto	u31830
 27594  0055F6                     u31810:
 27595                           
 27596                           ; BSR set to: 0
 27597  0055F6  B091               	btfsc	145,0,c	;volatile
 27598  0055F8  D03B               	goto	l25614
 27599                           
 27600                           ; BSR set to: 0
 27601  0055FA  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27602  0055FC  A4D8               	btfss	status,2,c
 27603  0055FE  D038               	goto	l25614
 27604  005600                     u31830:
 27605                           
 27606                           ; BSR set to: 0
 27607                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27608  005600  0E00               	movlw	0
 27609  005602  0101               	movlb	1	; () banked
 27610  005604  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27611                           
 27612                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27613  005606  0E00               	movlw	0
 27614  005608  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27615  00560A  0EC8               	movlw	200
 27616  00560C  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27617                           
 27618                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27619  00560E  0E00               	movlw	0
 27620  005610  6FB9               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27621  005612  0E14               	movlw	20
 27622  005614  6FB8               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27623                           
 27624                           ; BSR set to: 1
 27625                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27626  005616  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27627  005618  B4D8               	btfsc	status,2,c
 27628  00561A  D004               	goto	u31850
 27629                           
 27630                           ; BSR set to: 1
 27631  00561C  0E04               	movlw	4
 27632  00561E  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27633  005620  A4D8               	btfss	status,2,c
 27634  005622  D024               	goto	l25612
 27635  005624                     u31850:
 27636                           
 27637                           ; BSR set to: 1
 27638                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27639  005624  0100               	movlb	0	; () banked
 27640  005626  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27641  005628  0D0A               	mullw	10
 27642  00562A  CFF3 F012          	movff	prodl,??_ControlMotor
 27643  00562E  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27644  005632  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27645  005634  2612               	addwf	??_ControlMotor^0,f,c
 27646  005636  0E00               	movlw	0
 27647  005638  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27648  00563A  5012               	movf	??_ControlMotor^0,w,c
 27649  00563C  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27650  00563E  6E14               	movwf	(??_ControlMotor+2)^0,c
 27651  005640  5013               	movf	(??_ControlMotor+1)^0,w,c
 27652  005642  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27653  005644  6E15               	movwf	(??_ControlMotor+3)^0,c
 27654  005646  0E00               	movlw	0
 27655  005648  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27656  00564A  6E16               	movwf	(??_ControlMotor+4)^0,c
 27657  00564C  0E00               	movlw	0
 27658  00564E  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27659  005650  6E17               	movwf	(??_ControlMotor+5)^0,c
 27660  005652  0E50               	movlw	80
 27661  005654  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27662  005656  0101               	movlb	1	; () banked
 27663  005658  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27664  00565A  0E00               	movlw	0
 27665  00565C  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27666  00565E  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27667  005660  0E00               	movlw	0
 27668  005662  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27669  005664  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27670  005666  0E00               	movlw	0
 27671  005668  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27672  00566A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27673  00566C                     l25612:
 27674                           
 27675                           ; BSR set to: 1
 27676                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27677  00566C  0E03               	movlw	3
 27678  00566E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27679  005670                     l25614:
 27680                           
 27681                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27682  005670  0100               	movlb	0	; () banked
 27683  005672  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27684  005674  A4D8               	btfss	status,2,c
 27685  005676  D002               	goto	l2397
 27686                           
 27687                           ; BSR set to: 0
 27688  005678  8287               	bsf	135,1,c	;volatile
 27689  00567A  D001               	goto	l25616
 27690  00567C                     l2397:
 27691                           
 27692                           ; BSR set to: 0
 27693  00567C  8087               	bsf	135,0,c	;volatile
 27694  00567E                     l25616:
 27695                           
 27696                           ; BSR set to: 0
 27697                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27698  00567E  0E02               	movlw	2
 27699  005680  0101               	movlb	1	; () banked
 27700  005682  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27701  005684                     l2380:
 27702                           
 27703                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27704  005684  0100               	movlb	0	; () banked
 27705  005686  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27706  005688  A4D8               	btfss	status,2,c
 27707  00568A  D002               	goto	l2403
 27708                           
 27709                           ; BSR set to: 0
 27710  00568C  9087               	bcf	135,0,c	;volatile
 27711  00568E  0012               	return	
 27712  005690                     l2403:
 27713                           
 27714                           ; BSR set to: 0
 27715  005690  9287               	bcf	135,1,c	;volatile
 27716  005692  0012               	return		;funcret
 27717  005694                     __end_of_ControlMotor:
 27718                           	callstack 0
 27719                           
 27720 ;; *************** function _VerifyElectricalBrake *****************
 27721 ;; Defined at:
 27722 ;;		line 658 in file "outputs_MC50.c"
 27723 ;; Parameters:    Size  Location     Type
 27724 ;;  actualState     1    wreg     enum E10381
 27725 ;; Auto vars:     Size  Location     Type
 27726 ;;  actualState     1   16[COMRAM] enum E10381
 27727 ;;  tempState       1   15[COMRAM] enum E10381
 27728 ;; Return value:  Size  Location     Type
 27729 ;;                  1    wreg      enum E10381
 27730 ;; Registers used:
 27731 ;;		wreg, status,2, status,0
 27732 ;; Tracked objects:
 27733 ;;		On entry : 3F/1
 27734 ;;		On exit  : 3E/0
 27735 ;;		Unchanged: 0/0
 27736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27741 ;;Total ram usage:        2 bytes
 27742 ;; Hardware stack levels used: 1
 27743 ;; Hardware stack levels required when called: 4
 27744 ;; This function calls:
 27745 ;;		Nothing
 27746 ;; This function is called by:
 27747 ;;		_ControlMotor
 27748 ;; This function uses a non-reentrant model
 27749 ;;
 27750                           
 27751                           	psect	text114
 27752  0088F4                     __ptext114:
 27753                           	callstack 0
 27754  0088F4                     _VerifyElectricalBrake:
 27755                           	callstack 25
 27756                           
 27757                           ;incstack = 0
 27758                           ;VerifyElectricalBrake@actualState stored from wreg
 27759  0088F4  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27760                           
 27761                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27762  0088F6  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27763                           
 27764                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27765  0088FA  0100               	movlb	0	; () banked
 27766  0088FC  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27767  0088FE  A4D8               	btfss	status,2,c
 27768  008900  D02E               	goto	l2323
 27769                           
 27770                           ; BSR set to: 0
 27771  008902  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27772  008904  A4D8               	btfss	status,2,c
 27773  008906  D02B               	goto	l2323
 27774                           
 27775                           ; BSR set to: 0
 27776  008908  0101               	movlb	1	; () banked
 27777  00890A  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27778  00890C  D005               	goto	u26870
 27779  00890E  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27780  008910  E126               	bnz	l2323
 27781  008912  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27782  008914  B0D8               	btfsc	status,0,c
 27783  008916  D023               	goto	l2323
 27784  008918                     u26870:
 27785                           
 27786                           ; BSR set to: 1
 27787                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27788  008918  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27789  00891A  0100               	movlb	0	; () banked
 27790  00891C  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 27791  00891E  B4D8               	btfsc	status,2,c
 27792  008920  D00B               	goto	l23216
 27793                           
 27794                           ; BSR set to: 0
 27795  008922  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27796  008924  A4D8               	btfss	status,2,c
 27797  008926  D008               	goto	l23216
 27798                           
 27799                           ; BSR set to: 0
 27800                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27801  008928  0E01               	movlw	1
 27802  00892A  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27803                           
 27804                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27805  00892C  0E00               	movlw	0
 27806  00892E  0101               	movlb	1	; () banked
 27807  008930  6FC7               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27808  008932  0E16               	movlw	22
 27809  008934  6FC6               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27810                           
 27811                           ;outputs_MC50.c: 670:         }
 27812  008936  D018               	goto	l2328
 27813  008938                     l23216:
 27814                           
 27815                           ; BSR set to: 0
 27816  008938  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27817  00893A  A4D8               	btfss	status,2,c
 27818  00893C  D00B               	goto	l23222
 27819                           
 27820                           ; BSR set to: 0
 27821  00893E  0101               	movlb	1	; () banked
 27822  008940  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27823  008942  D008               	goto	l23222
 27824  008944  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27825  008946  E103               	bnz	u26910
 27826  008948  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27827  00894A  A0D8               	btfss	status,0,c
 27828  00894C  D003               	goto	l23222
 27829  00894E                     u26910:
 27830                           
 27831                           ; BSR set to: 1
 27832                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27833  00894E  0E01               	movlw	1
 27834  008950  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27835                           
 27836                           ;outputs_MC50.c: 686:         }
 27837  008952  D00A               	goto	l2328
 27838  008954                     l23222:
 27839                           
 27840                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27841  008954  0E00               	movlw	0
 27842  008956  0100               	movlb	0	; () banked
 27843  008958  6F78               	movwf	_brakeElectric_st& (0+255),b
 27844                           
 27845                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27846  00895A  0E00               	movlw	0
 27847  00895C  D004               	goto	L103
 27848  00895E                     l2323:
 27849                           
 27850                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27851  00895E  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27852                           
 27853                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27854  008962  0E00               	movlw	0
 27855  008964  0100               	movlb	0	; () banked
 27856  008966                     L103:
 27857  008966  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27858  008968                     l2328:
 27859                           
 27860                           ;outputs_MC50.c: 700:     return tempState;
 27861  008968  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27862  00896A  0012               	return		;funcret
 27863  00896C                     __end_of_VerifyElectricalBrake:
 27864                           	callstack 0
 27865                           
 27866 ;; *************** function _ControlLights *****************
 27867 ;; Defined at:
 27868 ;;		line 816 in file "outputs_MC50.c"
 27869 ;; Parameters:    Size  Location     Type
 27870 ;;		None
 27871 ;; Auto vars:     Size  Location     Type
 27872 ;;		None
 27873 ;; Return value:  Size  Location     Type
 27874 ;;                  1    wreg      void 
 27875 ;; Registers used:
 27876 ;;		wreg, status,2, status,0, cstack
 27877 ;; Tracked objects:
 27878 ;;		On entry : 3E/1
 27879 ;;		On exit  : 3E/0
 27880 ;;		Unchanged: 0/0
 27881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27886 ;;Total ram usage:        0 bytes
 27887 ;; Hardware stack levels used: 1
 27888 ;; Hardware stack levels required when called: 6
 27889 ;; This function calls:
 27890 ;;		_setFlashLigth_ON
 27891 ;;		_setRGB_ON
 27892 ;; This function is called by:
 27893 ;;		_main
 27894 ;; This function uses a non-reentrant model
 27895 ;;
 27896                           
 27897                           	psect	text115
 27898  0046DA                     __ptext115:
 27899                           	callstack 0
 27900  0046DA                     _ControlLights:
 27901                           	callstack 24
 27902                           
 27903                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 27904                           
 27905                           ;incstack = 0
 27906  0046DA  0101               	movlb	1	; () banked
 27907  0046DC  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 27908  0046DE  A4D8               	btfss	status,2,c
 27909  0046E0  D007               	goto	l25622
 27910                           
 27911                           ; BSR set to: 1
 27912                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 27913  0046E2  0E00               	movlw	0
 27914  0046E4  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27915  0046E6  0E14               	movlw	20
 27916  0046E8  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27917  0046EA  EC4D  F04B         	call	_setFlashLigth_ON	;wreg free
 27918                           
 27919                           ;outputs_MC50.c: 821:     }
 27920  0046EE  D010               	goto	l25628
 27921  0046F0                     l25622:
 27922                           
 27923                           ; BSR set to: 1
 27924  0046F0  51E6               	movf	_controlGate_stateMachine& (0+255),w,b
 27925  0046F2  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27926  0046F4  A4D8               	btfss	status,2,c
 27927  0046F6  D00C               	goto	l25628
 27928                           
 27929                           ; BSR set to: 1
 27930                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27931  0046F8  0E00               	movlw	0
 27932  0046FA  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27933                           
 27934                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 27935  0046FC  0E00               	movlw	0
 27936  0046FE  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27937                           
 27938                           ; BSR set to: 1
 27939                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 27940  004700  0E03               	movlw	3
 27941  004702  0100               	movlb	0	; () banked
 27942  004704  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27943  004706  B4D8               	btfsc	status,2,c
 27944  004708  D002               	goto	l2415
 27945                           
 27946                           ; BSR set to: 0
 27947                           
 27948                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 27949  00470A  9487               	bcf	135,2,c	;volatile
 27950  00470C  D001               	goto	l25628
 27951  00470E                     l2415:
 27952                           
 27953                           ; BSR set to: 0
 27954  00470E  8487               	bsf	135,2,c	;volatile
 27955  004710                     l25628:
 27956                           
 27957                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 27958  004710  0101               	movlb	1	; () banked
 27959  004712  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27960  004714  B4D8               	btfsc	status,2,c
 27961  004716  D005               	goto	u31920
 27962                           
 27963                           ; BSR set to: 1
 27964  004718  0E04               	movlw	4
 27965  00471A  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27966  00471C  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27967  00471E  A4D8               	btfss	status,2,c
 27968  004720  D01C               	goto	l25640
 27969  004722                     u31920:
 27970                           
 27971                           ; BSR set to: 1
 27972  004722  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27973  004724  D01A               	goto	l25640
 27974  004726  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27975  004728  E103               	bnz	u31930
 27976  00472A  05B0               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 27977  00472C  A0D8               	btfss	status,0,c
 27978  00472E  D015               	goto	l25640
 27979  004730                     u31930:
 27980                           
 27981                           ; BSR set to: 1
 27982  004730  BFB1               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27983  004732  D006               	goto	u31940
 27984  004734  51B1               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27985  004736  E111               	bnz	l25640
 27986  004738  0E3D               	movlw	61
 27987  00473A  5DB0               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 27988  00473C  B0D8               	btfsc	status,0,c
 27989  00473E  D00D               	goto	l25640
 27990  004740                     u31940:
 27991                           
 27992                           ; BSR set to: 1
 27993  004740  0E02               	movlw	2
 27994  004742  0100               	movlb	0	; () banked
 27995  004744  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27996  004746  A4D8               	btfss	status,2,c
 27997  004748  D008               	goto	l25640
 27998                           
 27999                           ; BSR set to: 0
 28000                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 28001  00474A  0E00               	movlw	0
 28002  00474C  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28003  00474E  0E04               	movlw	4
 28004  004750  6E11               	movwf	setRGB_ON@Freq^0,c
 28005  004752  0E01               	movlw	1
 28006  004754  EC19  F041         	call	_setRGB_ON
 28007                           
 28008                           ;outputs_MC50.c: 838:     }
 28009  004758  0012               	return	
 28010  00475A                     l25640:
 28011  00475A  0E03               	movlw	3
 28012  00475C  0101               	movlb	1	; () banked
 28013  00475E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28014  004760  A4D8               	btfss	status,2,c
 28015  004762  D04F               	goto	l25670
 28016                           
 28017                           ; BSR set to: 1
 28018                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 28019  004764  0E00               	movlw	0
 28020  004766  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28021                           
 28022                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 28023  004768  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 28024  00476A  A4D8               	btfss	status,2,c
 28025  00476C  D013               	goto	l25652
 28026                           
 28027                           ; BSR set to: 1
 28028  00476E  0E03               	movlw	3
 28029  004770  0100               	movlb	0	; () banked
 28030  004772  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28031  004774  A4D8               	btfss	status,2,c
 28032  004776  D00E               	goto	l25652
 28033                           
 28034                           ; BSR set to: 0
 28035                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28036  004778  0E00               	movlw	0
 28037  00477A  0101               	movlb	1	; () banked
 28038  00477C  6FE1               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28039  00477E  0E28               	movlw	40
 28040  004780  6FE0               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28041                           
 28042                           ; BSR set to: 1
 28043                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 28044  004782  0E00               	movlw	0
 28045  004784  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28046  004786  0E00               	movlw	0
 28047  004788  6E11               	movwf	setRGB_ON@Freq^0,c
 28048  00478A  0E04               	movlw	4
 28049  00478C  EC19  F041         	call	_setRGB_ON
 28050                           
 28051                           ; BSR set to: 1
 28052                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 28053  004790  0E01               	movlw	1
 28054  004792  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28055  004794                     l25652:
 28056                           
 28057                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 28058  004794  0101               	movlb	1	; () banked
 28059  004796  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28060  004798  D005               	goto	u31990
 28061  00479A  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28062  00479C  E105               	bnz	l25656
 28063  00479E  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28064  0047A0  B0D8               	btfsc	status,0,c
 28065  0047A2  D002               	goto	l25656
 28066  0047A4                     u31990:
 28067                           
 28068                           ; BSR set to: 1
 28069  0047A4  0100               	movlb	0	; () banked
 28070  0047A6  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28071  0047A8                     l25656:
 28072                           
 28073                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 28074  0047A8  0100               	movlb	0	; () banked
 28075  0047AA  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28076  0047AC  A4D8               	btfss	status,2,c
 28077  0047AE  D010               	goto	l25662
 28078                           
 28079                           ; BSR set to: 0
 28080  0047B0  0101               	movlb	1	; () banked
 28081  0047B2  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28082  0047B4  D005               	goto	u32010
 28083  0047B6  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28084  0047B8  E10B               	bnz	l25662
 28085  0047BA  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28086  0047BC  B0D8               	btfsc	status,0,c
 28087  0047BE  D008               	goto	l25662
 28088  0047C0                     u32010:
 28089                           
 28090                           ; BSR set to: 1
 28091                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 28092  0047C0  0E00               	movlw	0
 28093  0047C2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28094  0047C4  0E05               	movlw	5
 28095  0047C6  6E11               	movwf	setRGB_ON@Freq^0,c
 28096  0047C8  0E03               	movlw	3
 28097  0047CA  EC19  F041         	call	_setRGB_ON
 28098                           
 28099                           ;outputs_MC50.c: 862:         }
 28100  0047CE  D007               	goto	l25664
 28101  0047D0                     l25662:
 28102                           
 28103                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 28104  0047D0  0E00               	movlw	0
 28105  0047D2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28106  0047D4  0E00               	movlw	0
 28107  0047D6  6E11               	movwf	setRGB_ON@Freq^0,c
 28108  0047D8  0E03               	movlw	3
 28109  0047DA  EC19  F041         	call	_setRGB_ON
 28110  0047DE                     l25664:
 28111                           
 28112                           ; BSR set to: 1
 28113                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 28114  0047DE  0100               	movlb	0	; () banked
 28115  0047E0  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28116  0047E2  A4D8               	btfss	status,2,c
 28117  0047E4  D007               	goto	l25668
 28118                           
 28119                           ; BSR set to: 0
 28120                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 28121  0047E6  0E00               	movlw	0
 28122  0047E8  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28123  0047EA  0E0A               	movlw	10
 28124  0047EC  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28125  0047EE  EC4D  F04B         	call	_setFlashLigth_ON	;wreg free
 28126                           
 28127                           ;outputs_MC50.c: 873:         }
 28128  0047F2  0012               	return	
 28129  0047F4                     l25668:
 28130                           
 28131                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 28132  0047F4  0E00               	movlw	0
 28133  0047F6  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28134  0047F8  0E00               	movlw	0
 28135  0047FA  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28136  0047FC  EC4D  F04B         	call	_setFlashLigth_ON	;wreg free
 28137  004800  0012               	return	
 28138  004802                     l25670:
 28139                           
 28140                           ; BSR set to: 1
 28141  004802  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28142  004804  A4D8               	btfss	status,2,c
 28143  004806  D042               	goto	l25698
 28144                           
 28145                           ; BSR set to: 1
 28146  004808  05E6               	decf	_controlGate_stateMachine& (0+255),w,b
 28147  00480A  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28148  00480C  A4D8               	btfss	status,2,c
 28149  00480E  D03E               	goto	l25698
 28150                           
 28151                           ; BSR set to: 1
 28152                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 28153  004810  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 28154  004812  A4D8               	btfss	status,2,c
 28155                           
 28156                           ; BSR set to: 1
 28157                           
 28158                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 28159  004814  8E83               	bsf	131,7,c	;volatile
 28160                           
 28161                           ; BSR set to: 1
 28162                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 28163  004816  0100               	movlb	0	; () banked
 28164  004818  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28165  00481A  A4D8               	btfss	status,2,c
 28166  00481C  D017               	goto	l25686
 28167                           
 28168                           ; BSR set to: 0
 28169                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 28170  00481E  0E02               	movlw	2
 28171  004820  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28172  004822  B4D8               	btfsc	status,2,c
 28173  004824  D003               	goto	u32080
 28174                           
 28175                           ; BSR set to: 0
 28176  004826  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28177  004828  A4D8               	btfss	status,2,c
 28178  00482A  D008               	goto	l25684
 28179  00482C                     u32080:
 28180                           
 28181                           ; BSR set to: 0
 28182  00482C  0E00               	movlw	0
 28183  00482E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28184  004830  0E00               	movlw	0
 28185  004832  6E11               	movwf	setRGB_ON@Freq^0,c
 28186  004834  0E04               	movlw	4
 28187  004836  EC19  F041         	call	_setRGB_ON
 28188  00483A  D013               	goto	l25690
 28189  00483C                     l25684:
 28190                           
 28191                           ; BSR set to: 0
 28192  00483C  0E00               	movlw	0
 28193  00483E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28194  004840  0E28               	movlw	40
 28195  004842  6E11               	movwf	setRGB_ON@Freq^0,c
 28196  004844  0E04               	movlw	4
 28197  004846  EC19  F041         	call	_setRGB_ON
 28198  00484A  D00B               	goto	l25690
 28199  00484C                     l25686:
 28200                           
 28201                           ; BSR set to: 0
 28202  00484C  0E03               	movlw	3
 28203  00484E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28204  004850  B4D8               	btfsc	status,2,c
 28205  004852  D007               	goto	l25690
 28206                           
 28207                           ; BSR set to: 0
 28208  004854  0E00               	movlw	0
 28209  004856  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28210  004858  0E00               	movlw	0
 28211  00485A  6E11               	movwf	setRGB_ON@Freq^0,c
 28212  00485C  0E04               	movlw	4
 28213  00485E  EC19  F041         	call	_setRGB_ON
 28214  004862                     l25690:
 28215                           
 28216                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 28217  004862  0E03               	movlw	3
 28218  004864  0100               	movlb	0	; () banked
 28219  004866  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28220  004868  B4D8               	btfsc	status,2,c
 28221  00486A  0012               	return	
 28222                           
 28223                           ; BSR set to: 0
 28224                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 28225  00486C  0101               	movlb	1	; () banked
 28226  00486E  BFC1               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 28227  004870  D007               	goto	l2443
 28228  004872  51C1               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 28229  004874  11C0               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 28230  004876  11BF               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 28231  004878  E1BD               	bnz	l25668
 28232  00487A  05BE               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 28233  00487C  B0D8               	btfsc	status,0,c
 28234  00487E  D7BA               	goto	l25668
 28235  004880                     l2443:
 28236                           
 28237                           ; BSR set to: 1
 28238  004880  9487               	bcf	135,2,c	;volatile
 28239                           
 28240                           ; BSR set to: 1
 28241                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 28242  004882  0E00               	movlw	0
 28243  004884  6FBD               	movwf	(_ts_system+31)& (0+255),b	;volatile
 28244  004886  0E00               	movlw	0
 28245  004888  6FBC               	movwf	(_ts_system+30)& (0+255),b	;volatile
 28246                           
 28247                           ; BSR set to: 0
 28248                           ;outputs_MC50.c: 907:     }
 28249                           
 28250                           ;outputs_MC50.c: 906:         }
 28251  00488A  0012               	return	
 28252  00488C                     l25698:
 28253                           
 28254                           ; BSR set to: 1
 28255  00488C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28256  00488E  A4D8               	btfss	status,2,c
 28257  004890  D048               	goto	l25732
 28258                           
 28259                           ; BSR set to: 1
 28260                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 28261  004892  0100               	movlb	0	; () banked
 28262  004894  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28263  004896  A4D8               	btfss	status,2,c
 28264  004898  D004               	goto	u32140
 28265                           
 28266                           ; BSR set to: 0
 28267  00489A  0101               	movlb	1	; () banked
 28268  00489C  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28269  00489E  B4D8               	btfsc	status,2,c
 28270  0048A0  D00C               	goto	u32170
 28271  0048A2                     u32140:
 28272  0048A2  0100               	movlb	0	; () banked
 28273  0048A4  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28274  0048A6  A4D8               	btfss	status,2,c
 28275  0048A8  D017               	goto	l25716
 28276                           
 28277                           ; BSR set to: 0
 28278  0048AA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28279  0048AC  B4D8               	btfsc	status,2,c
 28280  0048AE  D014               	goto	l25716
 28281                           
 28282                           ; BSR set to: 0
 28283  0048B0  0E02               	movlw	2
 28284  0048B2  0101               	movlb	1	; () banked
 28285  0048B4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28286  0048B6  A4D8               	btfss	status,2,c
 28287  0048B8  D00F               	goto	l25716
 28288  0048BA                     u32170:
 28289                           
 28290                           ; BSR set to: 1
 28291                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28292  0048BA  0E00               	movlw	0
 28293  0048BC  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28294                           
 28295                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 28296  0048BE  0E00               	movlw	0
 28297  0048C0  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28298                           
 28299                           ; BSR set to: 1
 28300                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 28301  0048C2  0E03               	movlw	3
 28302  0048C4  0100               	movlb	0	; () banked
 28303  0048C6  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28304  0048C8  B4D8               	btfsc	status,2,c
 28305  0048CA  0012               	return	
 28306                           
 28307                           ; BSR set to: 0
 28308  0048CC  0E02               	movlw	2
 28309  0048CE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28310  0048D0  B4D8               	btfsc	status,2,c
 28311  0048D2  0012               	return	
 28312                           
 28313                           ; BSR set to: 0
 28314                           
 28315                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 28316  0048D4  9487               	bcf	135,2,c	;volatile
 28317  0048D6  0012               	return	
 28318  0048D8                     l25716:
 28319                           
 28320                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28321  0048D8  0100               	movlb	0	; () banked
 28322  0048DA  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28323  0048DC  A4D8               	btfss	status,2,c
 28324  0048DE  D008               	goto	l25720
 28325                           
 28326                           ; BSR set to: 0
 28327                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 28328  0048E0  0E00               	movlw	0
 28329  0048E2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28330  0048E4  0E14               	movlw	20
 28331  0048E6  6E11               	movwf	setRGB_ON@Freq^0,c
 28332  0048E8  0E01               	movlw	1
 28333  0048EA  EC19  F041         	call	_setRGB_ON
 28334                           
 28335                           ;outputs_MC50.c: 932:             }
 28336  0048EE  D007               	goto	l25722
 28337  0048F0                     l25720:
 28338                           
 28339                           ; BSR set to: 0
 28340                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 28341  0048F0  0E00               	movlw	0
 28342  0048F2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28343  0048F4  0E00               	movlw	0
 28344  0048F6  6E11               	movwf	setRGB_ON@Freq^0,c
 28345  0048F8  0E01               	movlw	1
 28346  0048FA  EC19  F041         	call	_setRGB_ON
 28347  0048FE                     l25722:
 28348                           
 28349                           ; BSR set to: 1
 28350                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 28351  0048FE  0100               	movlb	0	; () banked
 28352  004900  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28353  004902  B4D8               	btfsc	status,2,c
 28354  004904  D004               	goto	u32220
 28355                           
 28356                           ; BSR set to: 0
 28357  004906  0E03               	movlw	3
 28358  004908  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28359  00490A  A4D8               	btfss	status,2,c
 28360  00490C  D002               	goto	l25726
 28361  00490E                     u32220:
 28362                           
 28363                           ; BSR set to: 0
 28364                           
 28365                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 28366  00490E  9487               	bcf	135,2,c	;volatile
 28367  004910  0012               	return	
 28368  004912                     l25726:
 28369                           
 28370                           ; BSR set to: 0
 28371  004912  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28372  004914  B4D8               	btfsc	status,2,c
 28373  004916  D76E               	goto	l25668
 28374                           
 28375                           ; BSR set to: 0
 28376  004918  0E02               	movlw	2
 28377  00491A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28378  00491C  A4D8               	btfss	status,2,c
 28379  00491E  0012               	return	
 28380  004920  D769               	goto	l25668
 28381  004922                     l25732:
 28382                           
 28383                           ; BSR set to: 1
 28384                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 28385  004922  0E00               	movlw	0
 28386  004924  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28387                           
 28388                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 28389  004926  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 28390  004928  A4D8               	btfss	status,2,c
 28391  00492A  D00C               	goto	l25738
 28392                           
 28393                           ; BSR set to: 1
 28394  00492C  0E03               	movlw	3
 28395  00492E  0100               	movlb	0	; () banked
 28396  004930  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28397  004932  A4D8               	btfss	status,2,c
 28398  004934  D007               	goto	l25738
 28399                           
 28400                           ; BSR set to: 0
 28401                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28402  004936  0E00               	movlw	0
 28403  004938  0101               	movlb	1	; () banked
 28404  00493A  6FE1               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28405  00493C  0E28               	movlw	40
 28406  00493E  6FE0               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28407                           
 28408                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 28409  004940  0E01               	movlw	1
 28410  004942  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28411  004944                     l25738:
 28412                           
 28413                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 28414  004944  0101               	movlb	1	; () banked
 28415  004946  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28416  004948  D005               	goto	u32270
 28417  00494A  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28418  00494C  E105               	bnz	l25742
 28419  00494E  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28420  004950  B0D8               	btfsc	status,0,c
 28421  004952  D002               	goto	l25742
 28422  004954                     u32270:
 28423                           
 28424                           ; BSR set to: 1
 28425  004954  0100               	movlb	0	; () banked
 28426  004956  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28427  004958                     l25742:
 28428                           
 28429                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 28430  004958  0E04               	movlw	4
 28431  00495A  0101               	movlb	1	; () banked
 28432  00495C  19E6               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28433  00495E  11E7               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28434  004960  A4D8               	btfss	status,2,c
 28435  004962  D01B               	goto	l25754
 28436                           
 28437                           ; BSR set to: 1
 28438                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28439  004964  0E00               	movlw	0
 28440  004966  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28441                           
 28442                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 28443  004968  0E00               	movlw	0
 28444  00496A  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28445                           
 28446                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 28447  00496C  0100               	movlb	0	; () banked
 28448  00496E  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28449  004970  A4D8               	btfss	status,2,c
 28450  004972  D00A               	goto	u32320
 28451                           
 28452                           ; BSR set to: 0
 28453  004974  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28454  004976  B4D8               	btfsc	status,2,c
 28455  004978  D003               	goto	u32310
 28456                           
 28457                           ; BSR set to: 0
 28458  00497A  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28459  00497C  A4D8               	btfss	status,2,c
 28460  00497E  D004               	goto	u32320
 28461  004980                     u32310:
 28462                           
 28463                           ; BSR set to: 0
 28464  004980  0E02               	movlw	2
 28465  004982  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 28466  004984  A4D8               	btfss	status,2,c
 28467  004986  D007               	goto	l2477
 28468  004988                     u32320:
 28469                           
 28470                           ; BSR set to: 0
 28471                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 28472  004988  0E00               	movlw	0
 28473  00498A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28474  00498C  0E00               	movlw	0
 28475  00498E  6E11               	movwf	setRGB_ON@Freq^0,c
 28476  004990  0E01               	movlw	1
 28477  004992  EC19  F041         	call	_setRGB_ON
 28478  004996                     l2477:
 28479  004996  9487               	bcf	135,2,c	;volatile
 28480  004998  0012               	return	
 28481  00499A                     l25754:
 28482                           
 28483                           ; BSR set to: 1
 28484                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28485  00499A  0100               	movlb	0	; () banked
 28486  00499C  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28487  00499E  A4D8               	btfss	status,2,c
 28488  0049A0  D008               	goto	l25758
 28489                           
 28490                           ; BSR set to: 0
 28491                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 28492  0049A2  0E00               	movlw	0
 28493  0049A4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28494  0049A6  0E0A               	movlw	10
 28495  0049A8  6E11               	movwf	setRGB_ON@Freq^0,c
 28496  0049AA  0E02               	movlw	2
 28497  0049AC  EC19  F041         	call	_setRGB_ON
 28498                           
 28499                           ;outputs_MC50.c: 999:             }
 28500  0049B0  D007               	goto	l25760
 28501  0049B2                     l25758:
 28502                           
 28503                           ; BSR set to: 0
 28504                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 28505  0049B2  0E00               	movlw	0
 28506  0049B4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28507  0049B6  0E00               	movlw	0
 28508  0049B8  6E11               	movwf	setRGB_ON@Freq^0,c
 28509  0049BA  0E02               	movlw	2
 28510  0049BC  EC19  F041         	call	_setRGB_ON
 28511  0049C0                     l25760:
 28512                           
 28513                           ; BSR set to: 1
 28514                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 28515  0049C0  0100               	movlb	0	; () banked
 28516  0049C2  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28517  0049C4  A4D8               	btfss	status,2,c
 28518  0049C6  D007               	goto	l25764
 28519                           
 28520                           ; BSR set to: 0
 28521                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 28522  0049C8  0E00               	movlw	0
 28523  0049CA  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28524  0049CC  0E14               	movlw	20
 28525  0049CE  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28526  0049D0  EC4D  F04B         	call	_setFlashLigth_ON	;wreg free
 28527                           
 28528                           ;outputs_MC50.c: 1011:             }
 28529  0049D4  D00D               	goto	l25770
 28530  0049D6                     l25764:
 28531                           
 28532                           ; BSR set to: 0
 28533  0049D6  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28534  0049D8  B4D8               	btfsc	status,2,c
 28535  0049DA  D004               	goto	u32360
 28536                           
 28537                           ; BSR set to: 0
 28538  0049DC  0E02               	movlw	2
 28539  0049DE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28540  0049E0  A4D8               	btfss	status,2,c
 28541  0049E2  D006               	goto	l25770
 28542  0049E4                     u32360:
 28543                           
 28544                           ; BSR set to: 0
 28545                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28546  0049E4  0E00               	movlw	0
 28547  0049E6  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28548  0049E8  0E00               	movlw	0
 28549  0049EA  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28550  0049EC  EC4D  F04B         	call	_setFlashLigth_ON	;wreg free
 28551  0049F0                     l25770:
 28552                           
 28553                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28554  0049F0  0E03               	movlw	3
 28555  0049F2  0100               	movlb	0	; () banked
 28556  0049F4  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28557  0049F6  A4D8               	btfss	status,2,c
 28558  0049F8  0012               	return	
 28559                           
 28560                           ; BSR set to: 0
 28561                           
 28562                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28563  0049FA  9487               	bcf	135,2,c	;volatile
 28564  0049FC  0012               	return		;funcret
 28565  0049FE                     __end_of_ControlLights:
 28566                           	callstack 0
 28567                           
 28568 ;; *************** function _setRGB_ON *****************
 28569 ;; Defined at:
 28570 ;;		line 1028 in file "outputs_MC50.c"
 28571 ;; Parameters:    Size  Location     Type
 28572 ;;  RGBLigth        1    wreg     enum E10611
 28573 ;;  Freq            2   16[COMRAM] int 
 28574 ;; Auto vars:     Size  Location     Type
 28575 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28576 ;; Return value:  Size  Location     Type
 28577 ;;                  1    wreg      void 
 28578 ;; Registers used:
 28579 ;;		wreg, status,2, status,0, cstack
 28580 ;; Tracked objects:
 28581 ;;		On entry : 3E/0
 28582 ;;		On exit  : 3F/1
 28583 ;;		Unchanged: 0/0
 28584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28589 ;;Total ram usage:        5 bytes
 28590 ;; Hardware stack levels used: 1
 28591 ;; Hardware stack levels required when called: 5
 28592 ;; This function calls:
 28593 ;;		_RGB_Set
 28594 ;; This function is called by:
 28595 ;;		_ControlLights
 28596 ;; This function uses a non-reentrant model
 28597 ;;
 28598                           
 28599                           	psect	text116
 28600  008232                     __ptext116:
 28601                           	callstack 0
 28602  008232                     _setRGB_ON:
 28603                           	callstack 24
 28604                           
 28605                           ;incstack = 0
 28606                           ;setRGB_ON@RGBLigth stored from wreg
 28607  008232  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28608                           
 28609                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28610  008234  8E83               	bsf	131,7,c	;volatile
 28611                           
 28612                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28613  008236  5011               	movf	setRGB_ON@Freq^0,w,c
 28614  008238  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28615  00823A  B4D8               	btfsc	status,2,c
 28616  00823C  D015               	goto	l23254
 28617  00823E  0101               	movlb	1	; () banked
 28618  008240  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28619  008242  B4D8               	btfsc	status,2,c
 28620  008244  D011               	goto	l23254
 28621  008246  D024               	goto	l23256
 28622  008248                     l23244:
 28623                           
 28624                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28625  008248  0E20               	movlw	32
 28626  00824A  EC5A  F04F         	call	_RGB_Set
 28627                           
 28628                           ;outputs_MC50.c: 1044:             break;
 28629  00824E  D020               	goto	l23256
 28630  008250                     l23246:
 28631                           
 28632                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28633  008250  0E04               	movlw	4
 28634  008252  EC5A  F04F         	call	_RGB_Set
 28635                           
 28636                           ;outputs_MC50.c: 1048:             break;
 28637  008256  D01C               	goto	l23256
 28638  008258                     l23248:
 28639                           
 28640                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28641  008258  0E00               	movlw	0
 28642  00825A  EC5A  F04F         	call	_RGB_Set
 28643                           
 28644                           ;outputs_MC50.c: 1052:             break;
 28645  00825E  D018               	goto	l23256
 28646  008260                     l23250:
 28647                           
 28648                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28649  008260  0E24               	movlw	36
 28650  008262  EC5A  F04F         	call	_RGB_Set
 28651                           
 28652                           ;outputs_MC50.c: 1056:             break;
 28653  008266  D014               	goto	l23256
 28654  008268                     l23254:
 28655  008268  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28656  00826A  6E13               	movwf	??_setRGB_ON^0,c
 28657  00826C  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28658                           
 28659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28660                           ; Switch size 1, requested type "simple"
 28661                           ; Number of cases is 1, Range of values is 0 to 0
 28662                           ; switch strategies available:
 28663                           ; Name         Instructions Cycles
 28664                           ; simple_byte            4     3 (average)
 28665                           ;	Chosen strategy is simple_byte
 28666  00826E  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28667  008270  0A00               	xorlw	0	; case 0
 28668  008272  A4D8               	btfss	status,2,c
 28669  008274  D00D               	goto	l23256
 28670                           
 28671                           ; Switch size 1, requested type "simple"
 28672                           ; Number of cases is 4, Range of values is 1 to 4
 28673                           ; switch strategies available:
 28674                           ; Name         Instructions Cycles
 28675                           ; simple_byte           13     7 (average)
 28676                           ;	Chosen strategy is simple_byte
 28677  008276  5013               	movf	??_setRGB_ON^0,w,c
 28678  008278  0A01               	xorlw	1	; case 1
 28679  00827A  B4D8               	btfsc	status,2,c
 28680  00827C  D7ED               	goto	l23248
 28681  00827E  0A03               	xorlw	3	; case 2
 28682  008280  B4D8               	btfsc	status,2,c
 28683  008282  D7E6               	goto	l23246
 28684  008284  0A01               	xorlw	1	; case 3
 28685  008286  B4D8               	btfsc	status,2,c
 28686  008288  D7DF               	goto	l23244
 28687  00828A  0A07               	xorlw	7	; case 4
 28688  00828C  B4D8               	btfsc	status,2,c
 28689  00828E  D7E8               	goto	l23250
 28690  008290                     l23256:
 28691                           
 28692                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28693  008290  0101               	movlb	1	; () banked
 28694  008292  BFBB               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28695  008294  D005               	goto	u26980
 28696  008296  51BB               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28697  008298  E113               	bnz	l2507
 28698  00829A  05BA               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28699  00829C  B0D8               	btfsc	status,0,c
 28700  00829E  0012               	return	
 28701  0082A0                     u26980:
 28702                           
 28703                           ; BSR set to: 1
 28704  0082A0  5011               	movf	setRGB_ON@Freq^0,w,c
 28705  0082A2  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28706  0082A4  B4D8               	btfsc	status,2,c
 28707  0082A6  0012               	return	
 28708                           
 28709                           ; BSR set to: 1
 28710                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28711  0082A8  C011  F1BA         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28712  0082AC  C012  F1BB         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28713                           
 28714                           ; BSR set to: 1
 28715                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28716  0082B0  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28717  0082B2  A4D8               	btfss	status,2,c
 28718  0082B4  D003               	goto	l23266
 28719                           
 28720                           ; BSR set to: 1
 28721                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28722  0082B6  0E00               	movlw	0
 28723  0082B8  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28724                           
 28725                           ;outputs_MC50.c: 1067:         }
 28726  0082BA  0012               	return	
 28727  0082BC                     l23266:
 28728                           
 28729                           ; BSR set to: 1
 28730                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28731  0082BC  0E01               	movlw	1
 28732  0082BE  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28733  0082C0                     l2507:
 28734                           
 28735                           ; BSR set to: 1
 28736  0082C0  0012               	return		;funcret
 28737  0082C2                     __end_of_setRGB_ON:
 28738                           	callstack 0
 28739                           
 28740 ;; *************** function _RGB_Set *****************
 28741 ;; Defined at:
 28742 ;;		line 98 in file "outputs_MC50.c"
 28743 ;; Parameters:    Size  Location     Type
 28744 ;;  value           1    wreg     unsigned char 
 28745 ;; Auto vars:     Size  Location     Type
 28746 ;;  value           1   15[COMRAM] unsigned char 
 28747 ;; Return value:  Size  Location     Type
 28748 ;;                  1    wreg      void 
 28749 ;; Registers used:
 28750 ;;		wreg, status,2, status,0
 28751 ;; Tracked objects:
 28752 ;;		On entry : 0/0
 28753 ;;		On exit  : 0/0
 28754 ;;		Unchanged: 0/0
 28755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28760 ;;Total ram usage:        1 bytes
 28761 ;; Hardware stack levels used: 1
 28762 ;; Hardware stack levels required when called: 4
 28763 ;; This function calls:
 28764 ;;		Nothing
 28765 ;; This function is called by:
 28766 ;;		_setRGB_ON
 28767 ;; This function uses a non-reentrant model
 28768 ;;
 28769                           
 28770                           	psect	text117
 28771  009EB4                     __ptext117:
 28772                           	callstack 0
 28773  009EB4                     _RGB_Set:
 28774                           	callstack 24
 28775                           
 28776                           ; BSR set to: 1
 28777                           ;incstack = 0
 28778                           ;RGB_Set@value stored from wreg
 28779  009EB4  6E10               	movwf	RGB_Set@value^0,c
 28780                           
 28781                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28782  009EB6  0EDB               	movlw	219
 28783  009EB8  1685               	andwf	133,f,c	;volatile
 28784                           
 28785                           ;outputs_MC50.c: 101:    LATC |= value;
 28786  009EBA  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28787  009EBC  1285               	iorwf	133,f,c	;volatile
 28788  009EBE  9E83               	bcf	131,7,c	;volatile
 28789  009EC0  0012               	return		;funcret
 28790  009EC2                     __end_of_RGB_Set:
 28791                           	callstack 0
 28792                           
 28793 ;; *************** function _setFlashLigth_ON *****************
 28794 ;; Defined at:
 28795 ;;		line 1077 in file "outputs_MC50.c"
 28796 ;; Parameters:    Size  Location     Type
 28797 ;;  Freq            2   15[COMRAM] int 
 28798 ;; Auto vars:     Size  Location     Type
 28799 ;;		None
 28800 ;; Return value:  Size  Location     Type
 28801 ;;                  1    wreg      void 
 28802 ;; Registers used:
 28803 ;;		wreg, status,2, status,0
 28804 ;; Tracked objects:
 28805 ;;		On entry : 3E/1
 28806 ;;		On exit  : 3F/1
 28807 ;;		Unchanged: 0/0
 28808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28812 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28813 ;;Total ram usage:        2 bytes
 28814 ;; Hardware stack levels used: 1
 28815 ;; Hardware stack levels required when called: 4
 28816 ;; This function calls:
 28817 ;;		Nothing
 28818 ;; This function is called by:
 28819 ;;		_ControlLights
 28820 ;; This function uses a non-reentrant model
 28821 ;;
 28822                           
 28823                           	psect	text118
 28824  00969A                     __ptext118:
 28825                           	callstack 0
 28826  00969A                     _setFlashLigth_ON:
 28827                           	callstack 25
 28828                           
 28829                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28830                           
 28831                           ;incstack = 0
 28832  00969A  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28833  00969C  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28834  00969E  B4D8               	btfsc	status,2,c
 28835  0096A0  D004               	goto	u26930
 28836  0096A2  0101               	movlb	1	; () banked
 28837  0096A4  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28838  0096A6  A4D8               	btfss	status,2,c
 28839  0096A8  D002               	goto	l2516
 28840  0096AA                     u26930:
 28841                           
 28842                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28843  0096AA  8487               	bsf	135,2,c	;volatile
 28844  0096AC  D001               	goto	l23232
 28845  0096AE                     l2516:
 28846                           
 28847                           ; BSR set to: 1
 28848  0096AE  9487               	bcf	135,2,c	;volatile
 28849  0096B0                     l23232:
 28850                           
 28851                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28852  0096B0  0101               	movlb	1	; () banked
 28853  0096B2  BFBD               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28854  0096B4  D005               	goto	u26940
 28855  0096B6  51BD               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28856  0096B8  E10D               	bnz	l2519
 28857  0096BA  05BC               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28858  0096BC  B0D8               	btfsc	status,0,c
 28859  0096BE  0012               	return	
 28860  0096C0                     u26940:
 28861                           
 28862                           ; BSR set to: 1
 28863  0096C0  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28864  0096C2  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28865  0096C4  B4D8               	btfsc	status,2,c
 28866  0096C6  0012               	return	
 28867                           
 28868                           ; BSR set to: 1
 28869                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28870  0096C8  C010  F1BC         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28871  0096CC  C011  F1BD         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28872                           
 28873                           ; BSR set to: 1
 28874                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28875  0096D0  0E01               	movlw	1
 28876  0096D2  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28877  0096D4                     l2519:
 28878                           
 28879                           ; BSR set to: 1
 28880  0096D4  0012               	return		;funcret
 28881  0096D6                     __end_of_setFlashLigth_ON:
 28882                           	callstack 0
 28883                           
 28884 ;; *************** function _ControlInputs *****************
 28885 ;; Defined at:
 28886 ;;		line 674 in file "inputs_MC50.c"
 28887 ;; Parameters:    Size  Location     Type
 28888 ;;		None
 28889 ;; Auto vars:     Size  Location     Type
 28890 ;;		None
 28891 ;; Return value:  Size  Location     Type
 28892 ;;                  1    wreg      void 
 28893 ;; Registers used:
 28894 ;;		wreg, status,2, status,0
 28895 ;; Tracked objects:
 28896 ;;		On entry : 3E/1
 28897 ;;		On exit  : 3E/0
 28898 ;;		Unchanged: 0/0
 28899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28904 ;;Total ram usage:        0 bytes
 28905 ;; Hardware stack levels used: 1
 28906 ;; Hardware stack levels required when called: 4
 28907 ;; This function calls:
 28908 ;;		Nothing
 28909 ;; This function is called by:
 28910 ;;		_main
 28911 ;; This function uses a non-reentrant model
 28912 ;;
 28913                           
 28914                           	psect	text119
 28915  0071BA                     __ptext119:
 28916                           	callstack 0
 28917  0071BA                     _ControlInputs:
 28918                           	callstack 26
 28919                           
 28920                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 28921                           
 28922                           ; BSR set to: 1
 28923                           ;incstack = 0
 28924  0071BA  0E03               	movlw	3
 28925  0071BC  0101               	movlb	1	; () banked
 28926  0071BE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28927  0071C0  B4D8               	btfsc	status,2,c
 28928  0071C2  D00C               	goto	u30420
 28929                           
 28930                           ; BSR set to: 1
 28931  0071C4  A291               	btfss	145,1,c	;volatile
 28932  0071C6  D004               	goto	u30400
 28933                           
 28934                           ; BSR set to: 1
 28935  0071C8  0100               	movlb	0	; () banked
 28936  0071CA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28937  0071CC  B4D8               	btfsc	status,2,c
 28938  0071CE  D006               	goto	u30420
 28939  0071D0                     u30400:
 28940  0071D0  A091               	btfss	145,0,c	;volatile
 28941  0071D2  D00A               	goto	l24940
 28942  0071D4  0100               	movlb	0	; () banked
 28943  0071D6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28944  0071D8  A4D8               	btfss	status,2,c
 28945  0071DA  D006               	goto	l24940
 28946  0071DC                     u30420:
 28947  0071DC  0101               	movlb	1	; () banked
 28948  0071DE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 28949  0071E0  A4D8               	btfss	status,2,c
 28950  0071E2  D002               	goto	l24940
 28951                           
 28952                           ; BSR set to: 1
 28953                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 28954  0071E4  0E00               	movlw	0
 28955  0071E6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28956  0071E8                     l24940:
 28957                           
 28958                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 28959  0071E8  0101               	movlb	1	; () banked
 28960  0071EA  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28961  0071EC  B4D8               	btfsc	status,2,c
 28962  0071EE  D010               	goto	u30490
 28963                           
 28964                           ; BSR set to: 1
 28965  0071F0  0E02               	movlw	2
 28966  0071F2  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28967  0071F4  B4D8               	btfsc	status,2,c
 28968  0071F6  D00C               	goto	u30490
 28969                           
 28970                           ; BSR set to: 1
 28971  0071F8  A091               	btfss	145,0,c	;volatile
 28972  0071FA  D004               	goto	u30470
 28973                           
 28974                           ; BSR set to: 1
 28975  0071FC  0100               	movlb	0	; () banked
 28976  0071FE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28977  007200  B4D8               	btfsc	status,2,c
 28978  007202  D006               	goto	u30490
 28979  007204                     u30470:
 28980  007204  A291               	btfss	145,1,c	;volatile
 28981  007206  D00A               	goto	l24954
 28982  007208  0100               	movlb	0	; () banked
 28983  00720A  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28984  00720C  A4D8               	btfss	status,2,c
 28985  00720E  D006               	goto	l24954
 28986  007210                     u30490:
 28987  007210  0101               	movlb	1	; () banked
 28988  007212  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 28989  007214  A4D8               	btfss	status,2,c
 28990  007216  D002               	goto	l24954
 28991                           
 28992                           ; BSR set to: 1
 28993                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 28994  007218  0E00               	movlw	0
 28995  00721A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28996  00721C                     l24954:
 28997                           
 28998                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 28999  00721C  0101               	movlb	1	; () banked
 29000  00721E  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 29001  007220  B4D8               	btfsc	status,2,c
 29002  007222  0012               	return	
 29003                           
 29004                           ; BSR set to: 1
 29005                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 29006  007224  0100               	movlb	0	; () banked
 29007  007226  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 29008  007228  A4D8               	btfss	status,2,c
 29009  00722A  D02B               	goto	l24980
 29010                           
 29011                           ; BSR set to: 0
 29012  00722C  0101               	movlb	1	; () banked
 29013  00722E  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 29014  007230  A4D8               	btfss	status,2,c
 29015  007232  D027               	goto	l24980
 29016                           
 29017                           ; BSR set to: 1
 29018  007234  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 29019  007236  A4D8               	btfss	status,2,c
 29020  007238  D024               	goto	l24980
 29021                           
 29022                           ; BSR set to: 1
 29023                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 29024  00723A  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29025  00723C  B4D8               	btfsc	status,2,c
 29026  00723E  D004               	goto	u30560
 29027                           
 29028                           ; BSR set to: 1
 29029  007240  0E02               	movlw	2
 29030  007242  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29031  007244  A4D8               	btfss	status,2,c
 29032  007246  D007               	goto	l24970
 29033  007248                     u30560:
 29034                           
 29035                           ; BSR set to: 1
 29036  007248  0100               	movlb	0	; () banked
 29037  00724A  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 29038  00724C  A4D8               	btfss	status,2,c
 29039  00724E  D003               	goto	l24970
 29040                           
 29041                           ; BSR set to: 0
 29042                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 29043  007250  0E00               	movlw	0
 29044  007252  0101               	movlb	1	; () banked
 29045  007254  D015               	goto	L104
 29046  007256                     l24970:
 29047  007256  0E03               	movlw	3
 29048  007258  0101               	movlb	1	; () banked
 29049  00725A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29050  00725C  A4D8               	btfss	status,2,c
 29051  00725E  D011               	goto	l24980
 29052                           
 29053                           ; BSR set to: 1
 29054  007260  0100               	movlb	0	; () banked
 29055  007262  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 29056  007264  A4D8               	btfss	status,2,c
 29057  007266  D00D               	goto	l24980
 29058                           
 29059                           ; BSR set to: 0
 29060  007268  0101               	movlb	1	; () banked
 29061  00726A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29062  00726C  D005               	goto	u30600
 29063  00726E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29064  007270  E108               	bnz	l24980
 29065  007272  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29066  007274  B0D8               	btfsc	status,0,c
 29067  007276  D005               	goto	l24980
 29068  007278                     u30600:
 29069                           
 29070                           ; BSR set to: 1
 29071  007278  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 29072  00727A  A4D8               	btfss	status,2,c
 29073  00727C  D002               	goto	l24980
 29074                           
 29075                           ; BSR set to: 1
 29076                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 29077  00727E  0E00               	movlw	0
 29078  007280                     L104:
 29079  007280  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29080  007282                     l24980:
 29081                           
 29082                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 29083  007282  0100               	movlb	0	; () banked
 29084  007284  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 29085  007286  B4D8               	btfsc	status,2,c
 29086  007288  D003               	goto	u30630
 29087                           
 29088                           ; BSR set to: 0
 29089  00728A  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 29090  00728C  A4D8               	btfss	status,2,c
 29091  00728E  0012               	return	
 29092  007290                     u30630:
 29093                           
 29094                           ; BSR set to: 0
 29095  007290  0101               	movlb	1	; () banked
 29096  007292  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 29097  007294  A4D8               	btfss	status,2,c
 29098  007296  0012               	return	
 29099                           
 29100                           ; BSR set to: 1
 29101  007298  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 29102  00729A  A4D8               	btfss	status,2,c
 29103  00729C  0012               	return	
 29104                           
 29105                           ; BSR set to: 1
 29106                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 29107  00729E  0E03               	movlw	3
 29108  0072A0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29109  0072A2  A4D8               	btfss	status,2,c
 29110  0072A4  D008               	goto	l24994
 29111                           
 29112                           ; BSR set to: 1
 29113  0072A6  0100               	movlb	0	; () banked
 29114  0072A8  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29115  0072AA  A4D8               	btfss	status,2,c
 29116  0072AC  D004               	goto	l24994
 29117                           
 29118                           ; BSR set to: 0
 29119                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 29120  0072AE  0E00               	movlw	0
 29121  0072B0  0101               	movlb	1	; () banked
 29122  0072B2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29123                           
 29124                           ;inputs_MC50.c: 727:             }
 29125  0072B4  0012               	return	
 29126  0072B6                     l24994:
 29127  0072B6  0101               	movlb	1	; () banked
 29128  0072B8  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29129  0072BA  B4D8               	btfsc	status,2,c
 29130  0072BC  D004               	goto	u30690
 29131                           
 29132                           ; BSR set to: 1
 29133  0072BE  0E02               	movlw	2
 29134  0072C0  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29135  0072C2  A4D8               	btfss	status,2,c
 29136  0072C4  D004               	goto	u30700
 29137  0072C6                     u30690:
 29138                           
 29139                           ; BSR set to: 1
 29140  0072C6  0100               	movlb	0	; () banked
 29141  0072C8  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29142  0072CA  B4D8               	btfsc	status,2,c
 29143  0072CC  D004               	goto	u30710
 29144  0072CE                     u30700:
 29145  0072CE  0100               	movlb	0	; () banked
 29146  0072D0  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 29147  0072D2  A4D8               	btfss	status,2,c
 29148  0072D4  0012               	return	
 29149  0072D6                     u30710:
 29150                           
 29151                           ; BSR set to: 0
 29152                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 29153  0072D6  0E00               	movlw	0
 29154  0072D8  0101               	movlb	1	; () banked
 29155  0072DA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29156  0072DC  0012               	return	
 29157  0072DE                     __end_of_ControlInputs:
 29158                           	callstack 0
 29159                           
 29160 ;; *************** function _ControlCurrent *****************
 29161 ;; Defined at:
 29162 ;;		line 342 in file "controlCurrent_MC50.c"
 29163 ;; Parameters:    Size  Location     Type
 29164 ;;		None
 29165 ;; Auto vars:     Size  Location     Type
 29166 ;;		None
 29167 ;; Return value:  Size  Location     Type
 29168 ;;                  1    wreg      void 
 29169 ;; Registers used:
 29170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29171 ;; Tracked objects:
 29172 ;;		On entry : 3E/1
 29173 ;;		On exit  : 3E/0
 29174 ;;		Unchanged: 0/0
 29175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29178 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29180 ;;Total ram usage:        4 bytes
 29181 ;; Hardware stack levels used: 1
 29182 ;; Hardware stack levels required when called: 6
 29183 ;; This function calls:
 29184 ;;		_GetMotorPower
 29185 ;;		_getCurrentComparator
 29186 ;;		_refreshADCZeroOffset
 29187 ;;		_refreshCurrent
 29188 ;; This function is called by:
 29189 ;;		_main
 29190 ;; This function uses a non-reentrant model
 29191 ;;
 29192                           
 29193                           	psect	text120
 29194  006B74                     __ptext120:
 29195                           	callstack 0
 29196  006B74                     _ControlCurrent:
 29197                           	callstack 24
 29198                           
 29199                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 29200                           
 29201                           ;incstack = 0
 29202  006B74  EC45  F04A         	call	_refreshCurrent	;wreg free
 29203                           
 29204                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 29205  006B78  EC02  F03B         	call	_refreshADCZeroOffset	;wreg free
 29206                           
 29207                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 29208  006B7C  ECC4  F03D         	call	_GetMotorPower	;wreg free
 29209  006B80  6E23               	movwf	??_ControlCurrent^0,c
 29210  006B82  5023               	movf	??_ControlCurrent^0,w,c
 29211  006B84  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 29212  006B86  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 29213                           
 29214                           ; BSR set to: 1
 29215                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 29216  006B88  ECCC  F031         	call	_getCurrentComparator	;wreg free
 29217  006B8C  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 29218  006B90  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 29219  006B94  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 29220  006B98  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 29221                           
 29222                           ; BSR set to: 1
 29223                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 29224  006B9C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29225  006B9E  A4D8               	btfss	status,2,c
 29226  006BA0  D00F               	goto	l24650
 29227                           
 29228                           ; BSR set to: 1
 29229                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 29230  006BA2  0E00               	movlw	0
 29231  006BA4  0100               	movlb	0	; () banked
 29232  006BA6  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29233                           
 29234                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 29235  006BA8  0E00               	movlw	0
 29236  006BAA  0101               	movlb	1	; () banked
 29237  006BAC  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29238                           
 29239                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 29240  006BAE  0E00               	movlw	0
 29241  006BB0  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29242                           
 29243                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 29244  006BB2  0E00               	movlw	0
 29245  006BB4  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29246                           
 29247                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 29248  006BB6  0E00               	movlw	0
 29249  006BB8  6FD7               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29250  006BBA  0E14               	movlw	20
 29251  006BBC  6FD6               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29252                           
 29253                           ;controlCurrent_MC50.c: 365:     }
 29254  006BBE  0012               	return	
 29255  006BC0                     l24650:
 29256                           
 29257                           ; BSR set to: 1
 29258  006BC0  517B               	movf	_powerControl_st& (0+255),w,b
 29259  006BC2  A4D8               	btfss	status,2,c
 29260  006BC4  D05D               	goto	l24684
 29261                           
 29262                           ; BSR set to: 1
 29263                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 29264  006BC6  0E00               	movlw	0
 29265  006BC8  6FD7               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29266  006BCA  0E14               	movlw	20
 29267  006BCC  6FD6               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29268                           
 29269                           ; BSR set to: 1
 29270                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 29271  006BCE  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 29272  006BD0  6E23               	movwf	??_ControlCurrent^0,c
 29273  006BD2  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 29274  006BD4  6E24               	movwf	(??_ControlCurrent+1)^0,c
 29275  006BD6  6A25               	clrf	(??_ControlCurrent+2)^0,c
 29276  006BD8  6A26               	clrf	(??_ControlCurrent+3)^0,c
 29277  006BDA  5023               	movf	??_ControlCurrent^0,w,c
 29278  006BDC  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29279  006BDE  5024               	movf	(??_ControlCurrent+1)^0,w,c
 29280  006BE0  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29281  006BE2  5025               	movf	(??_ControlCurrent+2)^0,w,c
 29282  006BE4  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29283  006BE6  5026               	movf	(??_ControlCurrent+3)^0,w,c
 29284  006BE8  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29285  006BEA  B0D8               	btfsc	status,0,c
 29286  006BEC  D03E               	goto	l24682
 29287                           
 29288                           ; BSR set to: 1
 29289  006BEE  BFB9               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29290  006BF0  D005               	goto	u29760
 29291  006BF2  51B9               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29292  006BF4  E13A               	bnz	l24682
 29293  006BF6  05B8               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29294  006BF8  B0D8               	btfsc	status,0,c
 29295  006BFA  D037               	goto	l24682
 29296  006BFC                     u29760:
 29297                           
 29298                           ; BSR set to: 1
 29299  006BFC  0100               	movlb	0	; () banked
 29300  006BFE  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 29301  006C00  B4D8               	btfsc	status,2,c
 29302  006C02  D033               	goto	l24682
 29303                           
 29304                           ; BSR set to: 0
 29305  006C04  0101               	movlb	1	; () banked
 29306  006C06  BFE1               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 29307  006C08  D005               	goto	u29780
 29308  006C0A  51E1               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 29309  006C0C  E12E               	bnz	l24682
 29310  006C0E  05E0               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 29311  006C10  B0D8               	btfsc	status,0,c
 29312  006C12  D02B               	goto	l24682
 29313  006C14                     u29780:
 29314                           
 29315                           ; BSR set to: 1
 29316                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 29317  006C14  0100               	movlb	0	; () banked
 29318  006C16  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 29319  006C18  B4D8               	btfsc	status,2,c
 29320  006C1A  D00B               	goto	l24668
 29321                           
 29322                           ; BSR set to: 0
 29323                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 29324  006C1C  0101               	movlb	1	; () banked
 29325  006C1E  518B               	movf	_erroranterior& (0+255),w,b	;volatile
 29326  006C20  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 29327  006C22  518C               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 29328  006C24  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 29329  006C26  B0D8               	btfsc	status,0,c
 29330  006C28  D004               	goto	l24668
 29331                           
 29332                           ; BSR set to: 1
 29333                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 29334  006C2A  0E00               	movlw	0
 29335  006C2C  0100               	movlb	0	; () banked
 29336  006C2E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29337                           
 29338                           ;controlCurrent_MC50.c: 384:                  }
 29339  006C30  D002               	goto	l24670
 29340  006C32                     l24668:
 29341                           
 29342                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 29343  006C32  0100               	movlb	0	; () banked
 29344  006C34  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29345  006C36                     l24670:
 29346                           
 29347                           ; BSR set to: 0
 29348                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 29349  006C36  C12E  F18B         	movff	_var_sys+46,_erroranterior	;volatile
 29350  006C3A  C12F  F18C         	movff	_var_sys+47,_erroranterior+1	;volatile
 29351                           
 29352                           ; BSR set to: 0
 29353                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 29354                           
 29355                           ;controlCurrent_MC50.c: 390:              }
 29356  006C3E  0101               	movlb	1	; () banked
 29357  006C40  BFCD               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29358  006C42  D005               	goto	u29810
 29359  006C44  51CD               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29360  006C46  E14F               	bnz	l1405
 29361  006C48  05CC               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29362  006C4A  B0D8               	btfsc	status,0,c
 29363  006C4C  0012               	return	
 29364  006C4E                     u29810:
 29365                           
 29366                           ; BSR set to: 1
 29367  006C4E  0E01               	movlw	1
 29368  006C50  0100               	movlb	0	; () banked
 29369  006C52  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29370  006C54  0012               	return	
 29371                           
 29372                           ; BSR set to: 0
 29373                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 29374  006C56  0E00               	movlw	0
 29375  006C58  0101               	movlb	1	; () banked
 29376  006C5A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29377                           
 29378                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29379  006C5C  0E00               	movlw	0
 29380  006C5E  6FC9               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29381  006C60  0EC8               	movlw	200
 29382  006C62  6FC8               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29383                           
 29384                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 29385  006C64  0E01               	movlw	1
 29386  006C66  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29387  006C68  0012               	return	
 29388  006C6A                     l24682:
 29389                           
 29390                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 29391  006C6A  0E00               	movlw	0
 29392  006C6C  0100               	movlb	0	; () banked
 29393  006C6E  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29394                           
 29395                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 29396  006C70  0E00               	movlw	0
 29397  006C72  0101               	movlb	1	; () banked
 29398  006C74  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29399                           
 29400                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 29401  006C76  0E00               	movlw	0
 29402  006C78  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29403                           
 29404                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 29405  006C7A  0E00               	movlw	0
 29406  006C7C  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29407  006C7E  0012               	return	
 29408  006C80                     l24684:
 29409                           
 29410                           ; BSR set to: 1
 29411                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 29412  006C80  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29413  006C82  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 29414  006C84  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29415  006C86  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 29416  006C88  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29417  006C8A  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 29418  006C8C  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29419  006C8E  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 29420  006C90  B0D8               	btfsc	status,0,c
 29421  006C92  D7EB               	goto	l24682
 29422                           
 29423                           ; BSR set to: 1
 29424  006C94  BFB9               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29425  006C96  D005               	goto	u29840
 29426  006C98  51B9               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29427  006C9A  E1E7               	bnz	l24682
 29428  006C9C  05B8               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29429  006C9E  B0D8               	btfsc	status,0,c
 29430  006CA0  D7E4               	goto	l24682
 29431  006CA2                     u29840:
 29432                           
 29433                           ; BSR set to: 1
 29434  006CA2  BFD7               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 29435  006CA4  D005               	goto	u29850
 29436  006CA6  51D7               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 29437  006CA8  E1E0               	bnz	l24682
 29438  006CAA  05D6               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 29439  006CAC  B0D8               	btfsc	status,0,c
 29440  006CAE  D7DD               	goto	l24682
 29441  006CB0                     u29850:
 29442                           
 29443                           ; BSR set to: 1
 29444  006CB0  0100               	movlb	0	; () banked
 29445  006CB2  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 29446  006CB4  B4D8               	btfsc	status,2,c
 29447  006CB6  D7D9               	goto	l24682
 29448                           
 29449                           ; BSR set to: 0
 29450                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 29451  006CB8  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29452                           
 29453                           ; BSR set to: 0
 29454                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 29455  006CBA  0101               	movlb	1	; () banked
 29456  006CBC  BFCD               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29457  006CBE  D005               	goto	u29870
 29458  006CC0  51CD               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29459  006CC2  E111               	bnz	l1405
 29460  006CC4  05CC               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29461  006CC6  B0D8               	btfsc	status,0,c
 29462  006CC8  0012               	return	
 29463  006CCA                     u29870:
 29464                           
 29465                           ; BSR set to: 1
 29466  006CCA  0E02               	movlw	2
 29467  006CCC  0100               	movlb	0	; () banked
 29468  006CCE  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29469  006CD0  0012               	return	
 29470                           
 29471                           ; BSR set to: 0
 29472                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 29473  006CD2  0E00               	movlw	0
 29474  006CD4  0101               	movlb	1	; () banked
 29475  006CD6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29476                           
 29477                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29478  006CD8  0E00               	movlw	0
 29479  006CDA  6FC9               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29480  006CDC  0EC8               	movlw	200
 29481  006CDE  6FC8               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29482                           
 29483                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 29484  006CE0  0E01               	movlw	1
 29485  006CE2  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29486  006CE4  0012               	return	
 29487  006CE6                     l1405:
 29488  006CE6  0012               	return		;funcret
 29489  006CE8                     __end_of_ControlCurrent:
 29490                           	callstack 0
 29491                           
 29492 ;; *************** function _refreshCurrent *****************
 29493 ;; Defined at:
 29494 ;;		line 233 in file "controlCurrent_MC50.c"
 29495 ;; Parameters:    Size  Location     Type
 29496 ;;		None
 29497 ;; Auto vars:     Size  Location     Type
 29498 ;;		None
 29499 ;; Return value:  Size  Location     Type
 29500 ;;                  1    wreg      void 
 29501 ;; Registers used:
 29502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29503 ;; Tracked objects:
 29504 ;;		On entry : 3E/1
 29505 ;;		On exit  : 3F/0
 29506 ;;		Unchanged: 0/0
 29507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29512 ;;Total ram usage:        0 bytes
 29513 ;; Hardware stack levels used: 1
 29514 ;; Hardware stack levels required when called: 5
 29515 ;; This function calls:
 29516 ;;		_saveEnergyADCHist
 29517 ;;		_sumEnergyADC
 29518 ;;		_sumHIST
 29519 ;; This function is called by:
 29520 ;;		_ControlCurrent
 29521 ;; This function uses a non-reentrant model
 29522 ;;
 29523                           
 29524                           	psect	text121
 29525  00948A                     __ptext121:
 29526                           	callstack 0
 29527  00948A                     _refreshCurrent:
 29528                           	callstack 24
 29529                           
 29530                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 29531                           
 29532                           ;incstack = 0
 29533  00948A  0100               	movlb	0	; () banked
 29534  00948C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 29535  00948E  A4D8               	btfss	status,2,c
 29536  009490  D008               	goto	l22956
 29537                           
 29538                           ; BSR set to: 0
 29539  009492  0101               	movlb	1	; () banked
 29540  009494  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 29541  009496  D005               	goto	l22956
 29542  009498  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 29543  00949A  E109               	bnz	l1372
 29544  00949C  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29545  00949E  B0D8               	btfsc	status,0,c
 29546  0094A0  D006               	goto	l1372
 29547  0094A2                     l22956:
 29548                           
 29549                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29550  0094A2  ECA7  F041         	call	_sumEnergyADC	;wreg free
 29551  0094A6  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29552  0094AA  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29553  0094AE                     l1372:
 29554                           
 29555                           ; BSR set to: 1
 29556                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29557  0094AE  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29558  0094B2  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29559  0094B6  EC83  F04D         	call	_saveEnergyADCHist	;wreg free
 29560                           
 29561                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29562  0094BA  ECFF  F03B         	call	_sumHIST	;wreg free
 29563  0094BE  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 29564  0094C2  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29565  0094C6  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29566  0094CA  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29567                           
 29568                           ; BSR set to: 0
 29569  0094CE  0012               	return		;funcret
 29570  0094D0                     __end_of_refreshCurrent:
 29571                           	callstack 0
 29572                           
 29573 ;; *************** function _sumHIST *****************
 29574 ;; Defined at:
 29575 ;;		line 199 in file "controlCurrent_MC50.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;		None
 29578 ;; Auto vars:     Size  Location     Type
 29579 ;;  sumH            4   27[COMRAM] unsigned long 
 29580 ;;  min             2   25[COMRAM] unsigned int 
 29581 ;;  max             2   23[COMRAM] unsigned int 
 29582 ;;  i               1   31[COMRAM] unsigned char 
 29583 ;; Return value:  Size  Location     Type
 29584 ;;                  4   15[COMRAM] unsigned long 
 29585 ;; Registers used:
 29586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29587 ;; Tracked objects:
 29588 ;;		On entry : 3F/0
 29589 ;;		On exit  : 3F/0
 29590 ;;		Unchanged: 3F/0
 29591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29593 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29595 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29596 ;;Total ram usage:       17 bytes
 29597 ;; Hardware stack levels used: 1
 29598 ;; Hardware stack levels required when called: 4
 29599 ;; This function calls:
 29600 ;;		Nothing
 29601 ;; This function is called by:
 29602 ;;		_refreshCurrent
 29603 ;; This function uses a non-reentrant model
 29604 ;;
 29605                           
 29606                           	psect	text122
 29607  0077FE                     __ptext122:
 29608                           	callstack 0
 29609  0077FE                     _sumHIST:
 29610                           	callstack 24
 29611                           
 29612                           ; BSR set to: 0
 29613                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29614                           
 29615                           ; BSR set to: 0
 29616                           ;incstack = 0
 29617  0077FE  0E00               	movlw	0
 29618  007800  6E1C               	movwf	sumHIST@sumH^0,c
 29619  007802  0E00               	movlw	0
 29620  007804  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29621  007806  0E00               	movlw	0
 29622  007808  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29623  00780A  0E00               	movlw	0
 29624  00780C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29625                           
 29626                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29627  00780E  0E00               	movlw	0
 29628  007810  6E19               	movwf	(sumHIST@max+1)^0,c
 29629  007812  0E00               	movlw	0
 29630  007814  6E18               	movwf	sumHIST@max^0,c
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29634  007816  681A               	setf	sumHIST@min^0,c
 29635  007818  681B               	setf	(sumHIST@min+1)^0,c
 29636                           
 29637                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29638  00781A  0E00               	movlw	0
 29639  00781C  6E20               	movwf	sumHIST@i^0,c
 29640  00781E                     l21322:
 29641                           
 29642                           ; BSR set to: 0
 29643                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29644  00781E  5020               	movf	sumHIST@i^0,w,c
 29645  007820  0D02               	mullw	2
 29646  007822  0E60               	movlw	low _SumEnergyADCHist_array
 29647  007824  24F3               	addwf	243,w,c
 29648  007826  6ED9               	movwf	fsr2l,c
 29649  007828  0E02               	movlw	high _SumEnergyADCHist_array
 29650  00782A  20F4               	addwfc	prodh,w,c
 29651  00782C  6EDA               	movwf	fsr2h,c
 29652  00782E  CFDE F014          	movff	postinc2,??_sumHIST
 29653  007832  CFDD F015          	movff	postdec2,??_sumHIST+1
 29654  007836  5014               	movf	??_sumHIST^0,w,c
 29655  007838  241C               	addwf	sumHIST@sumH^0,w,c
 29656  00783A  6E1C               	movwf	sumHIST@sumH^0,c
 29657  00783C  5015               	movf	(??_sumHIST+1)^0,w,c
 29658  00783E  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29659  007840  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29660  007842  0E00               	movlw	0
 29661  007844  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29662  007846  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29663  007848  0E00               	movlw	0
 29664  00784A  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29665  00784C  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29666                           
 29667                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29668  00784E  5020               	movf	sumHIST@i^0,w,c
 29669  007850  0D02               	mullw	2
 29670  007852  0E60               	movlw	low _SumEnergyADCHist_array
 29671  007854  24F3               	addwf	243,w,c
 29672  007856  6ED9               	movwf	fsr2l,c
 29673  007858  0E02               	movlw	high _SumEnergyADCHist_array
 29674  00785A  20F4               	addwfc	prodh,w,c
 29675  00785C  6EDA               	movwf	fsr2h,c
 29676  00785E  50DE               	movf	postinc2,w,c
 29677  007860  5C18               	subwf	sumHIST@max^0,w,c
 29678  007862  50DE               	movf	postinc2,w,c
 29679  007864  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29680  007866  B0D8               	btfsc	status,0,c
 29681  007868  D00C               	goto	l1366
 29682                           
 29683                           ; BSR set to: 0
 29684                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29685  00786A  5020               	movf	sumHIST@i^0,w,c
 29686  00786C  0D02               	mullw	2
 29687  00786E  0E60               	movlw	low _SumEnergyADCHist_array
 29688  007870  24F3               	addwf	243,w,c
 29689  007872  6ED9               	movwf	fsr2l,c
 29690  007874  0E02               	movlw	high _SumEnergyADCHist_array
 29691  007876  20F4               	addwfc	prodh,w,c
 29692  007878  6EDA               	movwf	fsr2h,c
 29693  00787A  CFDE F018          	movff	postinc2,sumHIST@max
 29694  00787E  CFDD F019          	movff	postdec2,sumHIST@max+1
 29695  007882                     l1366:
 29696                           
 29697                           ; BSR set to: 0
 29698                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29699  007882  5020               	movf	sumHIST@i^0,w,c
 29700  007884  0D02               	mullw	2
 29701  007886  0E60               	movlw	low _SumEnergyADCHist_array
 29702  007888  24F3               	addwf	243,w,c
 29703  00788A  6ED9               	movwf	fsr2l,c
 29704  00788C  0E02               	movlw	high _SumEnergyADCHist_array
 29705  00788E  20F4               	addwfc	prodh,w,c
 29706  007890  6EDA               	movwf	fsr2h,c
 29707  007892  501A               	movf	sumHIST@min^0,w,c
 29708  007894  5CDE               	subwf	postinc2,w,c
 29709  007896  501B               	movf	(sumHIST@min+1)^0,w,c
 29710  007898  58DE               	subwfb	postinc2,w,c
 29711  00789A  B0D8               	btfsc	status,0,c
 29712  00789C  D00C               	goto	l21328
 29713                           
 29714                           ; BSR set to: 0
 29715                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29716  00789E  5020               	movf	sumHIST@i^0,w,c
 29717  0078A0  0D02               	mullw	2
 29718  0078A2  0E60               	movlw	low _SumEnergyADCHist_array
 29719  0078A4  24F3               	addwf	243,w,c
 29720  0078A6  6ED9               	movwf	fsr2l,c
 29721  0078A8  0E02               	movlw	high _SumEnergyADCHist_array
 29722  0078AA  20F4               	addwfc	prodh,w,c
 29723  0078AC  6EDA               	movwf	fsr2h,c
 29724  0078AE  CFDE F01A          	movff	postinc2,sumHIST@min
 29725  0078B2  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29726  0078B6                     l21328:
 29727                           
 29728                           ; BSR set to: 0
 29729                           ;controlCurrent_MC50.c: 222:     }
 29730  0078B6  2A20               	incf	sumHIST@i^0,f,c
 29731                           
 29732                           ; BSR set to: 0
 29733  0078B8  0E09               	movlw	9
 29734  0078BA  6420               	cpfsgt	sumHIST@i^0,c
 29735  0078BC  D7B0               	goto	l21322
 29736                           
 29737                           ; BSR set to: 0
 29738                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29739  0078BE  501A               	movf	sumHIST@min^0,w,c
 29740  0078C0  2418               	addwf	sumHIST@max^0,w,c
 29741  0078C2  6E14               	movwf	??_sumHIST^0,c
 29742  0078C4  501B               	movf	(sumHIST@min+1)^0,w,c
 29743  0078C6  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29744  0078C8  6E15               	movwf	(??_sumHIST+1)^0,c
 29745  0078CA  6A16               	clrf	(??_sumHIST+2)^0,c
 29746  0078CC  6A17               	clrf	(??_sumHIST+3)^0,c
 29747  0078CE  5014               	movf	??_sumHIST^0,w,c
 29748  0078D0  5C1C               	subwf	sumHIST@sumH^0,w,c
 29749  0078D2  6E1C               	movwf	sumHIST@sumH^0,c
 29750  0078D4  5015               	movf	(??_sumHIST+1)^0,w,c
 29751  0078D6  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29752  0078D8  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29753  0078DA  5016               	movf	(??_sumHIST+2)^0,w,c
 29754  0078DC  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29755  0078DE  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29756  0078E0  5017               	movf	(??_sumHIST+3)^0,w,c
 29757  0078E2  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29758  0078E4  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29759                           
 29760                           ; BSR set to: 0
 29761                           ;controlCurrent_MC50.c: 226:     return sumH;
 29762  0078E6  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29763  0078EA  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29764  0078EE  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29765  0078F2  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29766                           
 29767                           ; BSR set to: 0
 29768  0078F6  0012               	return		;funcret
 29769  0078F8                     __end_of_sumHIST:
 29770                           	callstack 0
 29771                           
 29772 ;; *************** function _sumEnergyADC *****************
 29773 ;; Defined at:
 29774 ;;		line 59 in file "controlCurrent_MC50.c"
 29775 ;; Parameters:    Size  Location     Type
 29776 ;;		None
 29777 ;; Auto vars:     Size  Location     Type
 29778 ;;  auxValue        2   21[COMRAM] unsigned int 
 29779 ;;  sumE            2   19[COMRAM] unsigned int 
 29780 ;;  i               1   23[COMRAM] unsigned char 
 29781 ;; Return value:  Size  Location     Type
 29782 ;;                  2   15[COMRAM] unsigned int 
 29783 ;; Registers used:
 29784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29785 ;; Tracked objects:
 29786 ;;		On entry : 3E/0
 29787 ;;		On exit  : 3F/1
 29788 ;;		Unchanged: 0/0
 29789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29791 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29793 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29794 ;;Total ram usage:        9 bytes
 29795 ;; Hardware stack levels used: 1
 29796 ;; Hardware stack levels required when called: 4
 29797 ;; This function calls:
 29798 ;;		Nothing
 29799 ;; This function is called by:
 29800 ;;		_refreshCurrent
 29801 ;; This function uses a non-reentrant model
 29802 ;;
 29803                           
 29804                           	psect	text123
 29805  00834E                     __ptext123:
 29806                           	callstack 0
 29807  00834E                     _sumEnergyADC:
 29808                           	callstack 24
 29809                           
 29810                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29811                           
 29812                           ; BSR set to: 0
 29813                           ;incstack = 0
 29814  00834E  0E00               	movlw	0
 29815  008350  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29816  008352  0E00               	movlw	0
 29817  008354  6E14               	movwf	sumEnergyADC@sumE^0,c
 29818                           
 29819                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29820  008356  0E00               	movlw	0
 29821  008358  6E18               	movwf	sumEnergyADC@i^0,c
 29822  00835A                     l21294:
 29823                           
 29824                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29825  00835A  5018               	movf	sumEnergyADC@i^0,w,c
 29826  00835C  0D02               	mullw	2
 29827  00835E  0E00               	movlw	low _ADC_array
 29828  008360  24F3               	addwf	243,w,c
 29829  008362  6ED9               	movwf	fsr2l,c
 29830  008364  0E02               	movlw	high _ADC_array
 29831  008366  20F4               	addwfc	prodh,w,c
 29832  008368  6EDA               	movwf	fsr2h,c
 29833  00836A  50DE               	movf	postinc2,w,c
 29834  00836C  0101               	movlb	1	; () banked
 29835  00836E  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29836  008370  50DE               	movf	postinc2,w,c
 29837  008372  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29838  008374  B0D8               	btfsc	status,0,c
 29839  008376  D012               	goto	l21298
 29840                           
 29841                           ; BSR set to: 1
 29842                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29843  008378  5018               	movf	sumEnergyADC@i^0,w,c
 29844  00837A  0D02               	mullw	2
 29845  00837C  0E00               	movlw	low _ADC_array
 29846  00837E  24F3               	addwf	243,w,c
 29847  008380  6ED9               	movwf	fsr2l,c
 29848  008382  0E02               	movlw	high _ADC_array
 29849  008384  20F4               	addwfc	prodh,w,c
 29850  008386  6EDA               	movwf	fsr2h,c
 29851  008388  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29852  00838C  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29853  008390  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29854  008392  5C12               	subwf	??_sumEnergyADC^0,w,c
 29855  008394  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29856  008396  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29857  008398  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29858  00839A  D011               	goto	L105
 29859  00839C                     l21298:
 29860                           
 29861                           ; BSR set to: 1
 29862                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29863  00839C  5018               	movf	sumEnergyADC@i^0,w,c
 29864  00839E  0D02               	mullw	2
 29865  0083A0  0E00               	movlw	low _ADC_array
 29866  0083A2  24F3               	addwf	243,w,c
 29867  0083A4  6ED9               	movwf	fsr2l,c
 29868  0083A6  0E02               	movlw	high _ADC_array
 29869  0083A8  20F4               	addwfc	prodh,w,c
 29870  0083AA  6EDA               	movwf	fsr2h,c
 29871  0083AC  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29872  0083B0  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29873  0083B4  5012               	movf	??_sumEnergyADC^0,w,c
 29874  0083B6  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29875  0083B8  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29876  0083BA  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29877  0083BC  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29878  0083BE                     L105:
 29879  0083BE  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29880                           
 29881                           ; BSR set to: 1
 29882                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29883  0083C0  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29884  0083C2  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29885  0083C4  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29886  0083C6  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29887                           
 29888                           ; BSR set to: 1
 29889                           ;controlCurrent_MC50.c: 94:     }
 29890  0083C8  2A18               	incf	sumEnergyADC@i^0,f,c
 29891                           
 29892                           ; BSR set to: 1
 29893  0083CA  0E1D               	movlw	29
 29894  0083CC  6418               	cpfsgt	sumEnergyADC@i^0,c
 29895  0083CE  D7C5               	goto	l21294
 29896                           
 29897                           ; BSR set to: 1
 29898                           ;controlCurrent_MC50.c: 96:     return sumE;
 29899  0083D0  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 29900  0083D4  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 29901                           
 29902                           ; BSR set to: 1
 29903  0083D8  0012               	return		;funcret
 29904  0083DA                     __end_of_sumEnergyADC:
 29905                           	callstack 0
 29906                           
 29907 ;; *************** function _saveEnergyADCHist *****************
 29908 ;; Defined at:
 29909 ;;		line 182 in file "controlCurrent_MC50.c"
 29910 ;; Parameters:    Size  Location     Type
 29911 ;;  valueToSave     2   15[COMRAM] unsigned int 
 29912 ;; Auto vars:     Size  Location     Type
 29913 ;;		None
 29914 ;; Return value:  Size  Location     Type
 29915 ;;                  1    wreg      void 
 29916 ;; Registers used:
 29917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29918 ;; Tracked objects:
 29919 ;;		On entry : 3F/1
 29920 ;;		On exit  : 3F/0
 29921 ;;		Unchanged: 0/0
 29922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29927 ;;Total ram usage:        2 bytes
 29928 ;; Hardware stack levels used: 1
 29929 ;; Hardware stack levels required when called: 4
 29930 ;; This function calls:
 29931 ;;		Nothing
 29932 ;; This function is called by:
 29933 ;;		_refreshCurrent
 29934 ;; This function uses a non-reentrant model
 29935 ;;
 29936                           
 29937                           	psect	text124
 29938  009B06                     __ptext124:
 29939                           	callstack 0
 29940  009B06                     _saveEnergyADCHist:
 29941                           	callstack 24
 29942                           
 29943                           ; BSR set to: 1
 29944                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 29945                           
 29946                           ; BSR set to: 1
 29947                           ;incstack = 0
 29948  009B06  0E09               	movlw	9
 29949  009B08  0100               	movlb	0	; () banked
 29950  009B0A  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29951  009B0C  D002               	goto	l21310
 29952                           
 29953                           ; BSR set to: 0
 29954                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 29955  009B0E  0E00               	movlw	0
 29956  009B10  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29957  009B12                     l21310:
 29958                           
 29959                           ; BSR set to: 0
 29960                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 29961  009B12  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 29962  009B14  0D02               	mullw	2
 29963  009B16  0E60               	movlw	low _SumEnergyADCHist_array
 29964  009B18  24F3               	addwf	243,w,c
 29965  009B1A  6ED9               	movwf	fsr2l,c
 29966  009B1C  0E02               	movlw	high _SumEnergyADCHist_array
 29967  009B1E  20F4               	addwfc	prodh,w,c
 29968  009B20  6EDA               	movwf	fsr2h,c
 29969  009B22  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 29970  009B26  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 29971                           
 29972                           ; BSR set to: 0
 29973                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 29974  009B2A  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 29975                           
 29976                           ; BSR set to: 0
 29977  009B2C  0012               	return		;funcret
 29978  009B2E                     __end_of_saveEnergyADCHist:
 29979                           	callstack 0
 29980                           
 29981 ;; *************** function _refreshADCZeroOffset *****************
 29982 ;; Defined at:
 29983 ;;		line 103 in file "controlCurrent_MC50.c"
 29984 ;; Parameters:    Size  Location     Type
 29985 ;;		None
 29986 ;; Auto vars:     Size  Location     Type
 29987 ;;  media           2   23[COMRAM] unsigned int 
 29988 ;;  i               1   22[COMRAM] unsigned char 
 29989 ;; Return value:  Size  Location     Type
 29990 ;;                  1    wreg      void 
 29991 ;; Registers used:
 29992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29993 ;; Tracked objects:
 29994 ;;		On entry : 3F/0
 29995 ;;		On exit  : 3C/0
 29996 ;;		Unchanged: 0/0
 29997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29999 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30001 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30002 ;;Total ram usage:        3 bytes
 30003 ;; Hardware stack levels used: 1
 30004 ;; Hardware stack levels required when called: 5
 30005 ;; This function calls:
 30006 ;;		___lwdiv
 30007 ;; This function is called by:
 30008 ;;		_ControlCurrent
 30009 ;; This function uses a non-reentrant model
 30010 ;;
 30011                           
 30012                           	psect	text125
 30013  007604                     __ptext125:
 30014                           	callstack 0
 30015  007604                     _refreshADCZeroOffset:
 30016                           	callstack 24
 30017                           
 30018                           ; BSR set to: 0
 30019                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 30020                           
 30021                           ; BSR set to: 0
 30022                           ;incstack = 0
 30023  007604  0E00               	movlw	0
 30024  007606  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30025  007608  0E00               	movlw	0
 30026  00760A  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30027                           
 30028                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 30029  00760C  0101               	movlb	1	; () banked
 30030  00760E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 30031  007610  A4D8               	btfss	status,2,c
 30032  007612  0012               	return	
 30033                           
 30034                           ; BSR set to: 1
 30035                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 30036  007614  BFDD               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 30037  007616  D005               	goto	u26280
 30038  007618  51DD               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 30039  00761A  E172               	bnz	l1357
 30040  00761C  05DC               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 30041  00761E  B0D8               	btfsc	status,0,c
 30042  007620  0012               	return	
 30043  007622                     u26280:
 30044                           
 30045                           ; BSR set to: 1
 30046                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 30047  007622  0E00               	movlw	0
 30048  007624  6FDD               	movwf	(_ts_system+63)& (0+255),b	;volatile
 30049  007626  0E14               	movlw	20
 30050  007628  6FDC               	movwf	(_ts_system+62)& (0+255),b	;volatile
 30051                           
 30052                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 30053  00762A  0E00               	movlw	0
 30054  00762C  6E17               	movwf	refreshADCZeroOffset@i^0,c
 30055  00762E                     l22908:
 30056                           
 30057                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 30058  00762E  5017               	movf	refreshADCZeroOffset@i^0,w,c
 30059  007630  0D02               	mullw	2
 30060  007632  0E00               	movlw	low _ADC_array
 30061  007634  24F3               	addwf	243,w,c
 30062  007636  6ED9               	movwf	fsr2l,c
 30063  007638  0E02               	movlw	high _ADC_array
 30064  00763A  20F4               	addwfc	prodh,w,c
 30065  00763C  6EDA               	movwf	fsr2h,c
 30066  00763E  50DE               	movf	postinc2,w,c
 30067  007640  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 30068  007642  50DD               	movf	postdec2,w,c
 30069  007644  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 30070                           
 30071                           ;controlCurrent_MC50.c: 128:             }
 30072  007646  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 30073  007648  0E1D               	movlw	29
 30074  00764A  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 30075  00764C  D7F0               	goto	l22908
 30076                           
 30077                           ;controlCurrent_MC50.c: 130:             media = media/30;
 30078  00764E  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 30079  007652  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 30080  007656  0E00               	movlw	0
 30081  007658  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 30082  00765A  0E1E               	movlw	30
 30083  00765C  6E12               	movwf	___lwdiv@divisor^0,c
 30084  00765E  EC35  F049         	call	___lwdiv	;wreg free
 30085  007662  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 30086  007666  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 30087                           
 30088                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 30089  00766A  0EEB               	movlw	235
 30090  00766C  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 30091  00766E  0E01               	movlw	1
 30092  007670  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 30093  007672  A0D8               	btfss	status,0,c
 30094  007674  D006               	goto	l22922
 30095  007676  0E12               	movlw	18
 30096  007678  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 30097  00767A  0E02               	movlw	2
 30098  00767C  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 30099  00767E  A0D8               	btfss	status,0,c
 30100  007680  D004               	goto	l22924
 30101  007682                     l22922:
 30102                           
 30103                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 30104  007682  0E01               	movlw	1
 30105  007684  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30106  007686  0EFE               	movlw	254
 30107  007688  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30108  00768A                     l22924:
 30109                           
 30110                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 30111  00768A  0E1D               	movlw	29
 30112  00768C  0100               	movlb	0	; () banked
 30113  00768E  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 30114  007690  D002               	goto	l22928
 30115                           
 30116                           ; BSR set to: 0
 30117                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 30118  007692  0E00               	movlw	0
 30119  007694  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 30120  007696                     l22928:
 30121                           
 30122                           ; BSR set to: 0
 30123                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 30124  007696  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 30125  007698  0D02               	mullw	2
 30126  00769A  0E96               	movlw	low _ADC_zero_array
 30127  00769C  24F3               	addwf	243,w,c
 30128  00769E  6ED9               	movwf	fsr2l,c
 30129  0076A0  0E03               	movlw	high _ADC_zero_array
 30130  0076A2  20F4               	addwfc	prodh,w,c
 30131  0076A4  6EDA               	movwf	fsr2h,c
 30132  0076A6  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 30133  0076AA  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 30134                           
 30135                           ; BSR set to: 0
 30136                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 30137  0076AE  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 30138                           
 30139                           ; BSR set to: 0
 30140                           ;controlCurrent_MC50.c: 150:             media = 0;
 30141  0076B0  0E00               	movlw	0
 30142  0076B2  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30143  0076B4  0E00               	movlw	0
 30144  0076B6  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30145                           
 30146                           ; BSR set to: 0
 30147                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 30148  0076B8  0E00               	movlw	0
 30149  0076BA  6E17               	movwf	refreshADCZeroOffset@i^0,c
 30150  0076BC                     l22940:
 30151                           
 30152                           ; BSR set to: 0
 30153                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 30154  0076BC  5017               	movf	refreshADCZeroOffset@i^0,w,c
 30155  0076BE  0D02               	mullw	2
 30156  0076C0  0E96               	movlw	low _ADC_zero_array
 30157  0076C2  24F3               	addwf	243,w,c
 30158  0076C4  6ED9               	movwf	fsr2l,c
 30159  0076C6  0E03               	movlw	high _ADC_zero_array
 30160  0076C8  20F4               	addwfc	prodh,w,c
 30161  0076CA  6EDA               	movwf	fsr2h,c
 30162  0076CC  50DE               	movf	postinc2,w,c
 30163  0076CE  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 30164  0076D0  50DD               	movf	postdec2,w,c
 30165  0076D2  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 30166                           
 30167                           ; BSR set to: 0
 30168                           ;controlCurrent_MC50.c: 159:             }
 30169  0076D4  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 30170                           
 30171                           ; BSR set to: 0
 30172  0076D6  0E1D               	movlw	29
 30173  0076D8  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 30174  0076DA  D7F0               	goto	l22940
 30175                           
 30176                           ; BSR set to: 0
 30177                           ;controlCurrent_MC50.c: 160:             media = media/30;
 30178  0076DC  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 30179  0076E0  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 30180  0076E4  0E00               	movlw	0
 30181  0076E6  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 30182  0076E8  0E1E               	movlw	30
 30183  0076EA  6E12               	movwf	___lwdiv@divisor^0,c
 30184  0076EC  EC35  F049         	call	___lwdiv	;wreg free
 30185  0076F0  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 30186  0076F4  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 30187                           
 30188                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 30189  0076F8  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 30190  0076FC  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 30191  007700                     l1357:
 30192  007700  0012               	return		;funcret
 30193  007702                     __end_of_refreshADCZeroOffset:
 30194                           	callstack 0
 30195                           
 30196 ;; *************** function ___lwdiv *****************
 30197 ;; Defined at:
 30198 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 30199 ;; Parameters:    Size  Location     Type
 30200 ;;  dividend        2   15[COMRAM] unsigned int 
 30201 ;;  divisor         2   17[COMRAM] unsigned int 
 30202 ;; Auto vars:     Size  Location     Type
 30203 ;;  quotient        2   20[COMRAM] unsigned int 
 30204 ;;  counter         1   19[COMRAM] unsigned char 
 30205 ;; Return value:  Size  Location     Type
 30206 ;;                  2   15[COMRAM] unsigned int 
 30207 ;; Registers used:
 30208 ;;		wreg, status,2, status,0
 30209 ;; Tracked objects:
 30210 ;;		On entry : 3C/2
 30211 ;;		On exit  : 3C/0
 30212 ;;		Unchanged: 3C/0
 30213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30215 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30217 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30218 ;;Total ram usage:        7 bytes
 30219 ;; Hardware stack levels used: 1
 30220 ;; Hardware stack levels required when called: 4
 30221 ;; This function calls:
 30222 ;;		Nothing
 30223 ;; This function is called by:
 30224 ;;		_refreshADCZeroOffset
 30225 ;;		_sm_execute_menuConfiguration
 30226 ;; This function uses a non-reentrant model
 30227 ;;
 30228                           
 30229                           	psect	text126
 30230  00926A                     __ptext126:
 30231                           	callstack 0
 30232  00926A                     ___lwdiv:
 30233                           	callstack 24
 30234                           
 30235                           ;incstack = 0
 30236  00926A  0E00               	movlw	0
 30237  00926C  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 30238  00926E  0E00               	movlw	0
 30239  009270  6E15               	movwf	___lwdiv@quotient^0,c
 30240  009272  5012               	movf	___lwdiv@divisor^0,w,c
 30241  009274  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 30242  009276  B4D8               	btfsc	status,2,c
 30243  009278  D01C               	goto	l4296
 30244  00927A  0E01               	movlw	1
 30245  00927C  6E14               	movwf	___lwdiv@counter^0,c
 30246  00927E  D004               	goto	l22752
 30247  009280                     l22750:
 30248  009280  90D8               	bcf	status,0,c
 30249  009282  3612               	rlcf	___lwdiv@divisor^0,f,c
 30250  009284  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 30251  009286  2A14               	incf	___lwdiv@counter^0,f,c
 30252  009288                     l22752:
 30253  009288  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 30254  00928A  D7FA               	goto	l22750
 30255  00928C                     u26210:
 30256  00928C  90D8               	bcf	status,0,c
 30257  00928E  3615               	rlcf	___lwdiv@quotient^0,f,c
 30258  009290  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 30259  009292  5012               	movf	___lwdiv@divisor^0,w,c
 30260  009294  5C10               	subwf	___lwdiv@dividend^0,w,c
 30261  009296  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30262  009298  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 30263  00929A  A0D8               	btfss	status,0,c
 30264  00929C  D005               	goto	l22762
 30265  00929E  5012               	movf	___lwdiv@divisor^0,w,c
 30266  0092A0  5E10               	subwf	___lwdiv@dividend^0,f,c
 30267  0092A2  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30268  0092A4  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 30269  0092A6  8015               	bsf	___lwdiv@quotient^0,0,c
 30270  0092A8                     l22762:
 30271  0092A8  90D8               	bcf	status,0,c
 30272  0092AA  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 30273  0092AC  3212               	rrcf	___lwdiv@divisor^0,f,c
 30274  0092AE  2E14               	decfsz	___lwdiv@counter^0,f,c
 30275  0092B0  D7ED               	goto	u26210
 30276  0092B2                     l4296:
 30277  0092B2  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 30278  0092B6  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30279  0092BA  0012               	return		;funcret
 30280  0092BC                     __end_of___lwdiv:
 30281                           	callstack 0
 30282                           
 30283 ;; *************** function _getCurrentComparator *****************
 30284 ;; Defined at:
 30285 ;;		line 264 in file "controlCurrent_MC50.c"
 30286 ;; Parameters:    Size  Location     Type
 30287 ;;		None
 30288 ;; Auto vars:     Size  Location     Type
 30289 ;;  x               1   33[COMRAM] unsigned char 
 30290 ;;  tempOffset      2   31[COMRAM] unsigned int 
 30291 ;; Return value:  Size  Location     Type
 30292 ;;                  4   21[COMRAM] unsigned long 
 30293 ;; Registers used:
 30294 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30295 ;; Tracked objects:
 30296 ;;		On entry : 3F/1
 30297 ;;		On exit  : 3F/1
 30298 ;;		Unchanged: 0/0
 30299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30301 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30303 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30304 ;;Total ram usage:       13 bytes
 30305 ;; Hardware stack levels used: 1
 30306 ;; Hardware stack levels required when called: 5
 30307 ;; This function calls:
 30308 ;;		___wmul
 30309 ;; This function is called by:
 30310 ;;		_ControlCurrent
 30311 ;; This function uses a non-reentrant model
 30312 ;;
 30313                           
 30314                           	psect	text127
 30315  006398                     __ptext127:
 30316                           	callstack 0
 30317  006398                     _getCurrentComparator:
 30318                           	callstack 24
 30319                           
 30320                           ; BSR set to: 1
 30321                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 30322                           
 30323                           ; BSR set to: 1
 30324                           
 30325                           ;incstack = 0
 30326  006398  BFB5               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 30327  00639A  D00A               	goto	l22964
 30328  00639C  51B5               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 30329  00639E  E103               	bnz	u26360
 30330  0063A0  05B4               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 30331  0063A2  A0D8               	btfss	status,0,c
 30332  0063A4  D005               	goto	l22964
 30333  0063A6                     u26360:
 30334                           
 30335                           ; BSR set to: 1
 30336                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 30337  0063A6  0E00               	movlw	0
 30338  0063A8  6FD9               	movwf	(_ts_system+59)& (0+255),b	;volatile
 30339  0063AA  0E14               	movlw	20
 30340  0063AC  6FD8               	movwf	(_ts_system+58)& (0+255),b	;volatile
 30341  0063AE  D007               	goto	u26370
 30342  0063B0                     l22964:
 30343                           
 30344                           ; BSR set to: 1
 30345  0063B0  BFD9               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 30346  0063B2  D009               	goto	l22968
 30347  0063B4  51D9               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 30348  0063B6  E103               	bnz	u26370
 30349  0063B8  05D8               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 30350  0063BA  A0D8               	btfss	status,0,c
 30351  0063BC  D004               	goto	l22968
 30352  0063BE                     u26370:
 30353                           
 30354                           ; BSR set to: 1
 30355                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 30356  0063BE  0E04               	movlw	4
 30357  0063C0  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30358  0063C2  0EB0               	movlw	176
 30359  0063C4  D003               	goto	L106
 30360  0063C6                     l22968:
 30361                           
 30362                           ; BSR set to: 1
 30363                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 30364  0063C6  0E00               	movlw	0
 30365  0063C8  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30366  0063CA  0E00               	movlw	0
 30367  0063CC                     L106:
 30368  0063CC  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 30369                           
 30370                           ; BSR set to: 1
 30371                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 30372  0063CE  517B               	movf	_powerControl_st& (0+255),w,b
 30373  0063D0  A4D8               	btfss	status,2,c
 30374  0063D2  D05B               	goto	l22984
 30375                           
 30376                           ; BSR set to: 1
 30377                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 30378  0063D4  0E03               	movlw	3
 30379  0063D6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30380  0063D8  A4D8               	btfss	status,2,c
 30381  0063DA  D005               	goto	l22974
 30382                           
 30383                           ; BSR set to: 1
 30384                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 30385  0063DC  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 30386  0063E0  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 30387  0063E4  D004               	goto	L107
 30388  0063E6                     l22974:
 30389                           
 30390                           ; BSR set to: 1
 30391                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 30392  0063E6  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 30393  0063EA  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 30394  0063EE                     L107:
 30395  0063EE  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 30396  0063F0  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 30397                           
 30398                           ; BSR set to: 1
 30399                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 30400  0063F2  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30401  0063F4  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30402  0063F6  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 30403  0063F8  E104               	bnz	u26400
 30404  0063FA  0E65               	movlw	101
 30405  0063FC  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30406  0063FE  A0D8               	btfss	status,0,c
 30407  006400  D009               	goto	u26410
 30408  006402                     u26400:
 30409                           
 30410                           ; BSR set to: 1
 30411  006402  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30412  006404  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30413  006406  E106               	bnz	u26410
 30414  006408  0EC5               	movlw	197
 30415  00640A  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30416  00640C  0E3B               	movlw	59
 30417  00640E  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30418  006410  A0D8               	btfss	status,0,c
 30419  006412  D004               	goto	l1383
 30420  006414                     u26410:
 30421                           
 30422                           ; BSR set to: 1
 30423                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 30424  006414  0EC4               	movlw	196
 30425  006416  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30426  006418  0E3B               	movlw	59
 30427  00641A  D058               	goto	L109
 30428  00641C                     l1383:
 30429                           
 30430                           ; BSR set to: 1
 30431                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 30432  00641C  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 30433                           
 30434                           ; BSR set to: 1
 30435                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 30436  006420  5022               	movf	getCurrentComparator@x^0,w,c
 30437  006422  0222               	mulwf	getCurrentComparator@x^0,c
 30438  006424  CFF3 F010          	movff	prodl,___wmul@multiplier
 30439  006428  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 30440  00642C  0E00               	movlw	0
 30441  00642E  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30442  006430  0E0A               	movlw	10
 30443  006432  6E12               	movwf	___wmul@multiplicand^0,c
 30444  006434  ECBD  F04D         	call	___wmul	;wreg free
 30445  006438  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 30446  00643C  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 30447  006440  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 30448  006444  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30449  006446  0EFF               	movlw	255
 30450  006448  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30451  00644A  0E38               	movlw	56
 30452  00644C  6E12               	movwf	___wmul@multiplicand^0,c
 30453  00644E  ECBD  F04D         	call	___wmul	;wreg free
 30454  006452  5010               	movf	?___wmul^0,w,c
 30455  006454  261A               	addwf	??_getCurrentComparator^0,f,c
 30456  006456  5011               	movf	(?___wmul+1)^0,w,c
 30457  006458  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 30458  00645A  0E14               	movlw	20
 30459  00645C  241A               	addwf	??_getCurrentComparator^0,w,c
 30460  00645E  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 30461  006460  0E05               	movlw	5
 30462  006462  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 30463  006464  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30464  006466  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 30465  006468  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 30466  00646A  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 30467  00646C  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 30468  00646E  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 30469  006470  0101               	movlb	1	; () banked
 30470  006472  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 30471  006474  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 30472  006476  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30473  006478  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 30474  00647A  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 30475  00647C  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30476  00647E  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 30477  006480  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 30478  006482  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30479  006484  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30480  006486  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 30481  006488  D046               	goto	L108
 30482  00648A                     l22984:
 30483                           
 30484                           ; BSR set to: 1
 30485                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 30486  00648A  0E03               	movlw	3
 30487  00648C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30488  00648E  A4D8               	btfss	status,2,c
 30489  006490  D009               	goto	l1388
 30490                           
 30491                           ; BSR set to: 1
 30492                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 30493  006492  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 30494  006496  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 30495  00649A  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 30496  00649E  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 30497                           
 30498                           ;controlCurrent_MC50.c: 315:         }
 30499  0064A2  D008               	goto	l22988
 30500  0064A4                     l1388:
 30501                           
 30502                           ; BSR set to: 1
 30503                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 30504  0064A4  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 30505  0064A8  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 30506  0064AC  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 30507  0064B0  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 30508  0064B4                     l22988:
 30509                           
 30510                           ; BSR set to: 1
 30511                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 30512  0064B4  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30513  0064B6  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30514  0064B8  E10E               	bnz	l22992
 30515  0064BA  0E89               	movlw	137
 30516  0064BC  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30517  0064BE  0E13               	movlw	19
 30518  0064C0  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30519  0064C2  B0D8               	btfsc	status,0,c
 30520  0064C4  D008               	goto	l22992
 30521                           
 30522                           ; BSR set to: 1
 30523                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 30524  0064C6  0E88               	movlw	136
 30525  0064C8  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30526  0064CA  0E13               	movlw	19
 30527  0064CC                     L109:
 30528  0064CC  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30529  0064CE  0E00               	movlw	0
 30530  0064D0  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30531  0064D2  0E00               	movlw	0
 30532  0064D4  D020               	goto	L108
 30533  0064D6                     l22992:
 30534                           
 30535                           ; BSR set to: 1
 30536                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 30537  0064D6  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 30538  0064DA  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30539  0064DC  0EFE               	movlw	254
 30540  0064DE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30541  0064E0  0E0C               	movlw	12
 30542  0064E2  6E12               	movwf	___wmul@multiplicand^0,c
 30543  0064E4  ECBD  F04D         	call	___wmul	;wreg free
 30544  0064E8  0E38               	movlw	56
 30545  0064EA  2410               	addwf	?___wmul^0,w,c
 30546  0064EC  6E1A               	movwf	??_getCurrentComparator^0,c
 30547  0064EE  0E18               	movlw	24
 30548  0064F0  2011               	addwfc	(?___wmul+1)^0,w,c
 30549  0064F2  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30550  0064F4  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30551  0064F6  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30552  0064F8  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30553  0064FA  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30554  0064FC  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30555  0064FE  501A               	movf	??_getCurrentComparator^0,w,c
 30556  006500  0101               	movlb	1	; () banked
 30557  006502  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30558  006504  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30559  006506  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30560  006508  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30561  00650A  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30562  00650C  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30563  00650E  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30564  006510  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30565  006512  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30566  006514  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30567  006516                     L108:
 30568  006516  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30569                           
 30570                           ; BSR set to: 1
 30571                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30572  006518  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30573  00651A  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30574  00651C  6E16               	movwf	?_getCurrentComparator^0,c
 30575  00651E  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30576  006520  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30577  006522  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30578  006524  0E00               	movlw	0
 30579  006526  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30580  006528  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30581  00652A  0E00               	movlw	0
 30582  00652C  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30583  00652E  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30584                           
 30585                           ; BSR set to: 1
 30586  006530  0012               	return		;funcret
 30587  006532                     __end_of_getCurrentComparator:
 30588                           	callstack 0
 30589                           
 30590 ;; *************** function ___wmul *****************
 30591 ;; Defined at:
 30592 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30593 ;; Parameters:    Size  Location     Type
 30594 ;;  multiplier      2   15[COMRAM] unsigned int 
 30595 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30596 ;; Auto vars:     Size  Location     Type
 30597 ;;  product         2   19[COMRAM] unsigned int 
 30598 ;; Return value:  Size  Location     Type
 30599 ;;                  2   15[COMRAM] unsigned int 
 30600 ;; Registers used:
 30601 ;;		wreg, status,2, status,0, prodl, prodh
 30602 ;; Tracked objects:
 30603 ;;		On entry : 0/0
 30604 ;;		On exit  : 0/0
 30605 ;;		Unchanged: 0/0
 30606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30611 ;;Total ram usage:        6 bytes
 30612 ;; Hardware stack levels used: 1
 30613 ;; Hardware stack levels required when called: 4
 30614 ;; This function calls:
 30615 ;;		Nothing
 30616 ;; This function is called by:
 30617 ;;		_getCurrentComparator
 30618 ;;		_getHopCode
 30619 ;; This function uses a non-reentrant model
 30620 ;;
 30621                           
 30622                           	psect	text128
 30623  009B7A                     __ptext128:
 30624                           	callstack 0
 30625  009B7A                     ___wmul:
 30626                           	callstack 22
 30627                           
 30628                           ; BSR set to: 1
 30629                           ;incstack = 0
 30630  009B7A  5010               	movf	___wmul@multiplier^0,w,c
 30631  009B7C  0212               	mulwf	___wmul@multiplicand^0,c
 30632  009B7E  CFF3 F014          	movff	prodl,___wmul@product
 30633  009B82  CFF4 F015          	movff	prodh,___wmul@product+1
 30634  009B86  5010               	movf	___wmul@multiplier^0,w,c
 30635  009B88  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30636  009B8A  50F3               	movf	243,w,c
 30637  009B8C  2615               	addwf	(___wmul@product+1)^0,f,c
 30638  009B8E  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30639  009B90  0212               	mulwf	___wmul@multiplicand^0,c
 30640  009B92  50F3               	movf	243,w,c
 30641  009B94  2615               	addwf	(___wmul@product+1)^0,f,c
 30642  009B96  C014  F010         	movff	___wmul@product,?___wmul
 30643  009B9A  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30644  009B9E  0012               	return		;funcret
 30645  009BA0                     __end_of___wmul:
 30646                           	callstack 0
 30647                           
 30648 ;; *************** function _GetMotorPower *****************
 30649 ;; Defined at:
 30650 ;;		line 405 in file "outputs_MC50.c"
 30651 ;; Parameters:    Size  Location     Type
 30652 ;;		None
 30653 ;; Auto vars:     Size  Location     Type
 30654 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30655 ;; Return value:  Size  Location     Type
 30656 ;;                  1    wreg      unsigned char 
 30657 ;; Registers used:
 30658 ;;		wreg, status,2, status,0, prodl, prodh
 30659 ;; Tracked objects:
 30660 ;;		On entry : 3C/1
 30661 ;;		On exit  : 3F/1
 30662 ;;		Unchanged: 0/0
 30663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30666 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30668 ;;Total ram usage:        4 bytes
 30669 ;; Hardware stack levels used: 1
 30670 ;; Hardware stack levels required when called: 4
 30671 ;; This function calls:
 30672 ;;		Nothing
 30673 ;; This function is called by:
 30674 ;;		_ControlCurrent
 30675 ;;		_InitSoftStart
 30676 ;;		_InitSoftStop
 30677 ;; This function uses a non-reentrant model
 30678 ;;
 30679                           
 30680                           	psect	text129
 30681  007B88                     __ptext129:
 30682                           	callstack 0
 30683  007B88                     _GetMotorPower:
 30684                           	callstack 22
 30685                           
 30686                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30687                           
 30688                           ;incstack = 0
 30689  007B88  0101               	movlb	1	; () banked
 30690  007B8A  057B               	decf	_powerControl_st& (0+255),w,b
 30691  007B8C  A4D8               	btfss	status,2,c
 30692  007B8E  D006               	goto	l20520
 30693                           
 30694                           ; BSR set to: 1
 30695                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30696  007B90  0100               	movlb	0	; () banked
 30697  007B92  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30698  007B94  0D06               	mullw	6
 30699  007B96  CFF3 F192          	movff	prodl,_temppower
 30700                           
 30701                           ;outputs_MC50.c: 416:     }
 30702  007B9A  D043               	goto	l2240
 30703  007B9C                     l20520:
 30704                           
 30705                           ; BSR set to: 1
 30706                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30707  007B9C  0100               	movlb	0	; () banked
 30708  007B9E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30709  007BA0  0D06               	mullw	6
 30710  007BA2  CFF3 F082          	movff	prodl,_fullmotorPower
 30711                           
 30712                           ; BSR set to: 0
 30713                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30714  007BA6  0101               	movlb	1	; () banked
 30715  007BA8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30716  007BAA  D01C               	goto	l20530
 30717  007BAC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30718  007BAE  E103               	bnz	u23470
 30719  007BB0  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30720  007BB2  A0D8               	btfss	status,0,c
 30721  007BB4  D017               	goto	l20530
 30722  007BB6                     u23470:
 30723                           
 30724                           ; BSR set to: 1
 30725                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30726  007BB6  0100               	movlb	0	; () banked
 30727  007BB8  5182               	movf	_fullmotorPower& (0+255),w,b
 30728  007BBA  6E10               	movwf	??_GetMotorPower^0,c
 30729  007BBC  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30730  007BBE  0101               	movlb	1	; () banked
 30731  007BC0  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30732  007BC2  5C10               	subwf	??_GetMotorPower^0,w,c
 30733  007BC4  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30734  007BC6  0A80               	xorlw	128
 30735  007BC8  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30736  007BCA  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30737  007BCC  0A80               	xorlw	128
 30738  007BCE  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30739  007BD0  B0D8               	btfsc	status,0,c
 30740  007BD2  D002               	goto	l20528
 30741                           
 30742                           ; BSR set to: 1
 30743                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30744  007BD4  0E01               	movlw	1
 30745  007BD6  D004               	goto	L111
 30746  007BD8                     l20528:
 30747                           
 30748                           ; BSR set to: 1
 30749                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30750  007BD8  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30751  007BDA  0100               	movlb	0	; () banked
 30752  007BDC  5D82               	subwf	_fullmotorPower& (0+255),w,b
 30753  007BDE  D017               	goto	L112
 30754  007BE0                     L111:
 30755  007BE0  6F92               	movwf	_temppower& (0+255),b
 30756  007BE2  D01F               	goto	l2240
 30757  007BE4                     l20530:
 30758                           
 30759                           ; BSR set to: 1
 30760  007BE4  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30761  007BE6  D005               	goto	u23490
 30762  007BE8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30763  007BEA  E113               	bnz	l20540
 30764  007BEC  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30765  007BEE  B0D8               	btfsc	status,0,c
 30766  007BF0  D010               	goto	l20540
 30767  007BF2                     u23490:
 30768                           
 30769                           ; BSR set to: 1
 30770  007BF2  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30771  007BF4  D005               	goto	u23500
 30772  007BF6  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30773  007BF8  E10C               	bnz	l20540
 30774  007BFA  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30775  007BFC  B0D8               	btfsc	status,0,c
 30776  007BFE  D009               	goto	l20540
 30777  007C00                     u23500:
 30778                           
 30779                           ; BSR set to: 1
 30780                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30781  007C00  C082  F192         	movff	_fullmotorPower,_temppower
 30782                           
 30783                           ; BSR set to: 1
 30784                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30785  007C04  0E08               	movlw	8
 30786  007C06  0100               	movlb	0	; () banked
 30787  007C08  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30788  007C0A  D00B               	goto	l2240
 30789                           
 30790                           ; BSR set to: 0
 30791                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30792  007C0C  0E3A               	movlw	58
 30793  007C0E                     L112:
 30794  007C0E  0101               	movlb	1	; () banked
 30795  007C10  D7E7               	goto	L111
 30796  007C12                     l20540:
 30797                           
 30798                           ; BSR set to: 1
 30799  007C12  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30800  007C14  D006               	goto	l2240
 30801  007C16  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30802  007C18  E102               	bnz	u23520
 30803  007C1A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30804  007C1C  B0D8               	btfsc	status,0,c
 30805  007C1E                     u23520:
 30806                           
 30807                           ; BSR set to: 1
 30808                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30809  007C1E  C110  F192         	movff	_var_sys+16,_temppower	;volatile
 30810  007C22                     l2240:
 30811                           
 30812                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30813  007C22  0101               	movlb	1	; () banked
 30814  007C24  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30815  007C26  D00E               	goto	l20550
 30816  007C28  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30817  007C2A  E103               	bnz	u23530
 30818  007C2C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30819  007C2E  A0D8               	btfss	status,0,c
 30820  007C30  D009               	goto	l20550
 30821  007C32                     u23530:
 30822                           
 30823                           ; BSR set to: 1
 30824  007C32  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30825  007C34  D005               	goto	u23540
 30826  007C36  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30827  007C38  E105               	bnz	l20550
 30828  007C3A  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30829  007C3C  B0D8               	btfsc	status,0,c
 30830  007C3E  D002               	goto	l20550
 30831  007C40                     u23540:
 30832                           
 30833                           ; BSR set to: 1
 30834                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30835  007C40  0E05               	movlw	5
 30836  007C42  D001               	goto	L110
 30837  007C44                     l20550:
 30838                           
 30839                           ; BSR set to: 1
 30840                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30841  007C44  0E17               	movlw	23
 30842  007C46                     L110:
 30843  007C46  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30844                           
 30845                           ; BSR set to: 1
 30846                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30847  007C48  5192               	movf	_temppower& (0+255),w,b
 30848  007C4A  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30849                           
 30850                           ; BSR set to: 1
 30851  007C4C  0012               	return		;funcret
 30852  007C4E                     __end_of_GetMotorPower:
 30853                           	callstack 0
 30854                           
 30855 ;; *************** function _ControlCounterMoves *****************
 30856 ;; Defined at:
 30857 ;;		line 305 in file "controlMemory_MC50.c"
 30858 ;; Parameters:    Size  Location     Type
 30859 ;;		None
 30860 ;; Auto vars:     Size  Location     Type
 30861 ;;		None
 30862 ;; Return value:  Size  Location     Type
 30863 ;;                  1    wreg      void 
 30864 ;; Registers used:
 30865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30866 ;; Tracked objects:
 30867 ;;		On entry : 3E/1
 30868 ;;		On exit  : 0/0
 30869 ;;		Unchanged: 0/0
 30870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30875 ;;Total ram usage:        0 bytes
 30876 ;; Hardware stack levels used: 1
 30877 ;; Hardware stack levels required when called: 14
 30878 ;; This function calls:
 30879 ;;		_SaveNVM_VarSystem
 30880 ;; This function is called by:
 30881 ;;		_main
 30882 ;; This function uses a non-reentrant model
 30883 ;;
 30884                           
 30885                           	psect	text130
 30886  009062                     __ptext130:
 30887                           	callstack 0
 30888  009062                     _ControlCounterMoves:
 30889                           	callstack 16
 30890                           
 30891                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 30892                           
 30893                           ; BSR set to: 1
 30894                           ;incstack = 0
 30895  009062  0101               	movlb	1	; () banked
 30896  009064  BFC5               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 30897  009066  D005               	goto	u29910
 30898  009068  51C5               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 30899  00906A  E127               	bnz	l1491
 30900  00906C  05C4               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 30901  00906E  B0D8               	btfsc	status,0,c
 30902  009070  0012               	return	
 30903  009072                     u29910:
 30904                           
 30905                           ; BSR set to: 1
 30906                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 30907  009072  0E17               	movlw	23
 30908  009074  6FC5               	movwf	(_ts_system+39)& (0+255),b	;volatile
 30909  009076  0E70               	movlw	112
 30910  009078  6FC4               	movwf	(_ts_system+38)& (0+255),b	;volatile
 30911                           
 30912                           ; BSR set to: 1
 30913                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 30914  00907A  0100               	movlb	0	; () banked
 30915  00907C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 30916  00907E  0101               	movlb	1	; () banked
 30917  009080  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 30918  009082  E110               	bnz	u29920
 30919  009084  0100               	movlb	0	; () banked
 30920  009086  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 30921  009088  0101               	movlb	1	; () banked
 30922  00908A  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 30923  00908C  E10B               	bnz	u29920
 30924  00908E  0100               	movlb	0	; () banked
 30925  009090  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 30926  009092  0101               	movlb	1	; () banked
 30927  009094  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 30928  009096  E106               	bnz	u29920
 30929  009098  0100               	movlb	0	; () banked
 30930  00909A  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 30931  00909C  0101               	movlb	1	; () banked
 30932  00909E  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 30933  0090A0  B4D8               	btfsc	status,2,c
 30934  0090A2  0012               	return	
 30935  0090A4                     u29920:
 30936                           
 30937                           ; BSR set to: 1
 30938                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 30939  0090A4  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 30940  0090A8  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 30941  0090AC  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 30942  0090B0  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 30943                           
 30944                           ; BSR set to: 1
 30945                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 30946  0090B4  0E02               	movlw	2
 30947  0090B6  EC88  F04B         	call	_SaveNVM_VarSystem
 30948  0090BA                     l1491:
 30949  0090BA  0012               	return		;funcret
 30950  0090BC                     __end_of_ControlCounterMoves:
 30951                           	callstack 0
 30952                           
 30953 ;; *************** function _SaveNVM_VarSystem *****************
 30954 ;; Defined at:
 30955 ;;		line 187 in file "controlMemory_MC50.c"
 30956 ;; Parameters:    Size  Location     Type
 30957 ;;  page            1    wreg     unsigned char 
 30958 ;; Auto vars:     Size  Location     Type
 30959 ;;  page            1    0[BANK0 ] unsigned char 
 30960 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 30961 ;;  point           1    3[BANK0 ] PTR unsigned char 
 30962 ;;		 -> var_sys_NVM(64), 
 30963 ;; Return value:  Size  Location     Type
 30964 ;;                  1    wreg      void 
 30965 ;; Registers used:
 30966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30967 ;; Tracked objects:
 30968 ;;		On entry : 0/0
 30969 ;;		On exit  : 0/0
 30970 ;;		Unchanged: 0/0
 30971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30973 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30976 ;;Total ram usage:        4 bytes
 30977 ;; Hardware stack levels used: 1
 30978 ;; Hardware stack levels required when called: 13
 30979 ;; This function calls:
 30980 ;;		_i2c_writeNBytes
 30981 ;; This function is called by:
 30982 ;;		_loadNVM_VarSystem
 30983 ;;		_ResetDefaultMemory
 30984 ;;		_ControlCounterMoves
 30985 ;;		_checkNVM_VarSystem
 30986 ;;		_sm_execute_ControlLearning
 30987 ;;		_sm_execute_menuConfiguration
 30988 ;;		_setValueToEdit
 30989 ;;		_controlSelectRemote
 30990 ;;		_eusartparser
 30991 ;; This function uses a non-reentrant model
 30992 ;;
 30993                           
 30994                           	psect	text131
 30995  009710                     __ptext131:
 30996                           	callstack 0
 30997  009710                     _SaveNVM_VarSystem:
 30998                           	callstack 14
 30999                           
 31000                           ;incstack = 0
 31001                           ;SaveNVM_VarSystem@page stored from wreg
 31002  009710  0100               	movlb	0	; () banked
 31003  009712  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 31004                           
 31005                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 31006  009714  0100               	movlb	0	; () banked
 31007  009716  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 31008  009718  0D10               	mullw	16
 31009  00971A  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 31010  00971E  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 31011                           
 31012                           ; BSR set to: 0
 31013                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 31014  009722  0E98               	movlw	low _var_sys_NVM
 31015  009724  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 31016                           
 31017                           ; BSR set to: 0
 31018                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 31019  009726  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 31020  009728  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 31021  00972A  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 31022                           
 31023                           ; BSR set to: 0
 31024                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 31025  00972C  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 31026  009730  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 31027  009734  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 31028  009738  0E00               	movlw	0
 31029  00973A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 31030  00973C  0E10               	movlw	16
 31031  00973E  6E25               	movwf	i2c_writeNBytes@len^0,c
 31032  009740  0E50               	movlw	80
 31033  009742  EC2D  F045         	call	_i2c_writeNBytes
 31034  009746  0012               	return		;funcret
 31035  009748                     __end_of_SaveNVM_VarSystem:
 31036                           	callstack 0
 31037                           
 31038 ;; *************** function _i2c_writeNBytes *****************
 31039 ;; Defined at:
 31040 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 31041 ;; Parameters:    Size  Location     Type
 31042 ;;  address         1    wreg     unsigned char 
 31043 ;;  reg             2   33[COMRAM] unsigned short 
 31044 ;;  data            1   35[COMRAM] PTR void 
 31045 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31046 ;;  len             2   36[COMRAM] unsigned int 
 31047 ;; Auto vars:     Size  Location     Type
 31048 ;;  address         1   56[COMRAM] unsigned char 
 31049 ;;  dat            17   39[COMRAM] unsigned char [17]
 31050 ;; Return value:  Size  Location     Type
 31051 ;;                  1    wreg      void 
 31052 ;; Registers used:
 31053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31054 ;; Tracked objects:
 31055 ;;		On entry : 3F/0
 31056 ;;		On exit  : 0/0
 31057 ;;		Unchanged: 0/0
 31058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31059 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31060 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31062 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31063 ;;Total ram usage:       24 bytes
 31064 ;; Hardware stack levels used: 1
 31065 ;; Hardware stack levels required when called: 12
 31066 ;; This function calls:
 31067 ;;		_I2C1_Close
 31068 ;;		_I2C1_MasterWrite
 31069 ;;		_I2C1_Open
 31070 ;;		_I2C1_SetAddressNackCallback
 31071 ;;		_I2C1_SetBuffer
 31072 ;;		_memcpy
 31073 ;; This function is called by:
 31074 ;;		_saveNewSerial
 31075 ;;		_RemoveSerial
 31076 ;;		_SaveNVM_VarSystem
 31077 ;; This function uses a non-reentrant model
 31078 ;;
 31079                           
 31080                           	psect	text132
 31081  008A5A                     __ptext132:
 31082                           	callstack 0
 31083  008A5A                     _i2c_writeNBytes:
 31084                           	callstack 14
 31085                           
 31086                           ;incstack = 0
 31087                           ;i2c_writeNBytes@address stored from wreg
 31088  008A5A  6E39               	movwf	i2c_writeNBytes@address^0,c
 31089                           
 31090                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 31091  008A5C  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 31092                           
 31093                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 31094  008A60  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 31095  008A62  6E10               	movwf	memcpy@d1^0,c
 31096  008A64  6A11               	clrf	(memcpy@d1+1)^0,c
 31097  008A66  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 31098  008A6A  6A13               	clrf	(memcpy@s1+1)^0,c
 31099  008A6C  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 31100  008A70  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 31101  008A74  EC8A  F04A         	call	_memcpy	;wreg free
 31102  008A78                     l20592:
 31103  008A78  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 31104  008A7A  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 31105  008A7C  ECFD  F042         	call	_I2C1_Open
 31106  008A80  0900               	iorlw	0
 31107  008A82  B4D8               	btfsc	status,2,c
 31108  008A84  D7F9               	goto	l20592
 31109                           
 31110                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 31111  008A86  0E28               	movlw	low i2c_writeNBytes@dat
 31112  008A88  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 31113  008A8A  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 31114  008A8C  0E01               	movlw	1
 31115  008A8E  2425               	addwf	i2c_writeNBytes@len^0,w,c
 31116  008A90  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31117  008A92  0E00               	movlw	0
 31118  008A94  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 31119  008A96  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31120  008A98  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 31121                           
 31122                           ; BSR set to: 2
 31123                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 31124  008A9C  0E00               	movlw	0
 31125  008A9E  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 31126  008AA0  0E00               	movlw	0
 31127  008AA2  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 31128  008AA4  0E00               	movlw	0
 31129  008AA6  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 31130  008AA8  0E00               	movlw	0
 31131  008AAA  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 31132  008AAC  ECE9  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 31133                           
 31134                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 31135  008AB0  ECB7  F04F         	call	_I2C1_MasterWrite	;wreg free
 31136  008AB4                     l20600:
 31137  008AB4  EC2A  F04E         	call	_I2C1_Close	;wreg free
 31138  008AB8  06E8               	decf	wreg,f,c
 31139  008ABA  B4D8               	btfsc	status,2,c
 31140  008ABC  D7FB               	goto	l20600
 31141                           
 31142                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 31143  008ABE  0ED0               	movlw	208
 31144  008AC0  6E27               	movwf	??_i2c_writeNBytes^0,c
 31145  008AC2  0ECA               	movlw	202
 31146  008AC4                     u34307:
 31147  008AC4  2EE8               	decfsz	wreg,f,c
 31148  008AC6  D7FE               	bra	u34307
 31149  008AC8  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 31150  008ACA  D7FC               	bra	u34307
 31151  008ACC  0012               	return		;funcret
 31152  008ACE                     __end_of_i2c_writeNBytes:
 31153                           	callstack 0
 31154                           
 31155 ;; *************** function _memcpy *****************
 31156 ;; Defined at:
 31157 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 31158 ;; Parameters:    Size  Location     Type
 31159 ;;  d1              2   15[COMRAM] PTR void 
 31160 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31161 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31162 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31163 ;;		 -> i2c_writeNBytes@dat(17), 
 31164 ;;  s1              2   17[COMRAM] PTR const void 
 31165 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31166 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31167 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31168 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31169 ;;  n               2   19[COMRAM] unsigned int 
 31170 ;; Auto vars:     Size  Location     Type
 31171 ;;  s               2   24[COMRAM] PTR const unsigned char 
 31172 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31173 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31174 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31175 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31176 ;;  d               2   22[COMRAM] PTR unsigned char 
 31177 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31178 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31179 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31180 ;;		 -> i2c_writeNBytes@dat(17), 
 31181 ;;  tmp             1   21[COMRAM] unsigned char 
 31182 ;; Return value:  Size  Location     Type
 31183 ;;                  2   15[COMRAM] PTR void 
 31184 ;; Registers used:
 31185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31186 ;; Tracked objects:
 31187 ;;		On entry : 0/0
 31188 ;;		On exit  : 0/0
 31189 ;;		Unchanged: 0/0
 31190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31191 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31192 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31194 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31195 ;;Total ram usage:       11 bytes
 31196 ;; Hardware stack levels used: 1
 31197 ;; Hardware stack levels required when called: 4
 31198 ;; This function calls:
 31199 ;;		Nothing
 31200 ;; This function is called by:
 31201 ;;		_i2c_writeNBytes
 31202 ;;		_getSerialCmd
 31203 ;;		_NormalKeyGen
 31204 ;;		_Decrypt
 31205 ;;		_keeloqDecryptPacket
 31206 ;;		_DecryptPacket_12BIT
 31207 ;; This function uses a non-reentrant model
 31208 ;;
 31209                           
 31210                           	psect	text133
 31211  009514                     __ptext133:
 31212                           	callstack 0
 31213  009514                     _memcpy:
 31214                           	callstack 21
 31215                           
 31216                           ;incstack = 0
 31217  009514  C012  F019         	movff	memcpy@s1,memcpy@s
 31218  009518  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 31219  00951C  C010  F017         	movff	memcpy@d1,memcpy@d
 31220  009520  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 31221  009524  D010               	goto	l20514
 31222  009526                     l20506:
 31223  009526  C019  FFD9         	movff	memcpy@s,fsr2l
 31224  00952A  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 31225  00952E  50DF               	movf	indf2,w,c
 31226  009530  6E16               	movwf	memcpy@tmp^0,c
 31227  009532  4A19               	infsnz	memcpy@s^0,f,c
 31228  009534  2A1A               	incf	(memcpy@s+1)^0,f,c
 31229  009536  C017  FFD9         	movff	memcpy@d,fsr2l
 31230  00953A  C018  FFDA         	movff	memcpy@d+1,fsr2h
 31231  00953E  C016  FFDF         	movff	memcpy@tmp,indf2
 31232  009542  4A17               	infsnz	memcpy@d^0,f,c
 31233  009544  2A18               	incf	(memcpy@d+1)^0,f,c
 31234  009546                     l20514:
 31235  009546  0614               	decf	memcpy@n^0,f,c
 31236  009548  A0D8               	btfss	status,0,c
 31237  00954A  0615               	decf	(memcpy@n+1)^0,f,c
 31238  00954C  2814               	incf	memcpy@n^0,w,c
 31239  00954E  E1EB               	bnz	l20506
 31240  009550  2815               	incf	(memcpy@n+1)^0,w,c
 31241  009552  B4D8               	btfsc	status,2,c
 31242  009554  0012               	return	
 31243  009556  D7E7               	goto	l20506
 31244  009558                     __end_of_memcpy:
 31245                           	callstack 0
 31246                           
 31247 ;; *************** function _I2C1_SetAddressNackCallback *****************
 31248 ;; Defined at:
 31249 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 31250 ;; Parameters:    Size  Location     Type
 31251 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 31252 ;;		 -> Absolute function(1), 
 31253 ;;  ptr             2   22[COMRAM] PTR void 
 31254 ;;		 -> NULL(0), 
 31255 ;; Auto vars:     Size  Location     Type
 31256 ;;		None
 31257 ;; Return value:  Size  Location     Type
 31258 ;;                  1    wreg      void 
 31259 ;; Registers used:
 31260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31261 ;; Tracked objects:
 31262 ;;		On entry : 3F/2
 31263 ;;		On exit  : 0/0
 31264 ;;		Unchanged: 0/0
 31265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31270 ;;Total ram usage:        4 bytes
 31271 ;; Hardware stack levels used: 1
 31272 ;; Hardware stack levels required when called: 5
 31273 ;; This function calls:
 31274 ;;		_I2C1_SetCallback
 31275 ;; This function is called by:
 31276 ;;		_i2c_writeNBytes
 31277 ;;		_i2c_readDataBlock
 31278 ;;		_I2C1_Read1ByteRegister
 31279 ;; This function uses a non-reentrant model
 31280 ;;
 31281                           
 31282                           	psect	text134
 31283  009DD2                     __ptext134:
 31284                           	callstack 0
 31285  009DD2                     _I2C1_SetAddressNackCallback:
 31286                           	callstack 20
 31287                           
 31288                           ; BSR set to: 2
 31289                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 31290                           
 31291                           ;incstack = 0
 31292  009DD2  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 31293  009DD6  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 31294  009DDA  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 31295  009DDE  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 31296  009DE2  0E02               	movlw	2
 31297  009DE4  EC46  F046         	call	_I2C1_SetCallback
 31298  009DE8  0012               	return		;funcret
 31299  009DEA                     __end_of_I2C1_SetAddressNackCallback:
 31300                           	callstack 0
 31301                           
 31302 ;; *************** function _I2C1_Open *****************
 31303 ;; Defined at:
 31304 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 31305 ;; Parameters:    Size  Location     Type
 31306 ;;  address         1    wreg     unsigned char 
 31307 ;; Auto vars:     Size  Location     Type
 31308 ;;  address         1   15[COMRAM] unsigned char 
 31309 ;;  returnValue     1   16[COMRAM] enum E355
 31310 ;; Return value:  Size  Location     Type
 31311 ;;                  1    wreg      enum E355
 31312 ;; Registers used:
 31313 ;;		wreg, status,2, status,0, cstack
 31314 ;; Tracked objects:
 31315 ;;		On entry : 0/0
 31316 ;;		On exit  : 33/2
 31317 ;;		Unchanged: 0/0
 31318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31323 ;;Total ram usage:        2 bytes
 31324 ;; Hardware stack levels used: 1
 31325 ;; Hardware stack levels required when called: 5
 31326 ;; This function calls:
 31327 ;;		_I2C1_MasterClearIrq
 31328 ;;		_I2C1_MasterOpen
 31329 ;; This function is called by:
 31330 ;;		_i2c_writeNBytes
 31331 ;;		_i2c_readDataBlock
 31332 ;;		_I2C1_Read1ByteRegister
 31333 ;; This function uses a non-reentrant model
 31334 ;;
 31335                           
 31336                           	psect	text135
 31337  0085FA                     __ptext135:
 31338                           	callstack 0
 31339  0085FA                     _I2C1_Open:
 31340                           	callstack 20
 31341                           
 31342                           ;incstack = 0
 31343                           ;I2C1_Open@address stored from wreg
 31344  0085FA  6E10               	movwf	I2C1_Open@address^0,c
 31345                           
 31346                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 31347  0085FC  0E01               	movlw	1
 31348  0085FE  6E11               	movwf	I2C1_Open@returnValue^0,c
 31349                           
 31350                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 31351  008600  0102               	movlb	2	; () banked
 31352  008602  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 31353  008604  D03A               	goto	l20480
 31354                           
 31355                           ; BSR set to: 2
 31356                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 31357  008606  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 31358                           
 31359                           ; BSR set to: 2
 31360                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 31361  00860A  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31362                           
 31363                           ; BSR set to: 2
 31364                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 31365  00860C  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 31366                           
 31367                           ; BSR set to: 2
 31368                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 31369  00860E  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31370                           
 31371                           ; BSR set to: 2
 31372                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 31373  008610  0E0E               	movlw	14
 31374  008612  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31375                           
 31376                           ; BSR set to: 2
 31377                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 31378  008614  0E01               	movlw	1
 31379  008616  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 31380  008618  0EF4               	movlw	244
 31381  00861A  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 31382                           
 31383                           ; BSR set to: 2
 31384                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 31385  00861C  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31386                           
 31387                           ; BSR set to: 2
 31388                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 31389  00861E  0E08               	movlw	low _I2C1_CallbackReturnStop
 31390  008620  6F3C               	movwf	_I2C1_Status& (0+255),b
 31391  008622  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31392  008624  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 31393                           
 31394                           ; BSR set to: 2
 31395                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 31396  008626  0E00               	movlw	0
 31397  008628  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 31398  00862A  0E00               	movlw	0
 31399  00862C  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 31400                           
 31401                           ; BSR set to: 2
 31402                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 31403  00862E  0E08               	movlw	low _I2C1_CallbackReturnStop
 31404  008630  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 31405  008632  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31406  008634  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 31407                           
 31408                           ; BSR set to: 2
 31409                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 31410  008636  0E00               	movlw	0
 31411  008638  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 31412  00863A  0E00               	movlw	0
 31413  00863C  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 31414                           
 31415                           ; BSR set to: 2
 31416                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31417  00863E  0E08               	movlw	low _I2C1_CallbackReturnStop
 31418  008640  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 31419  008642  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31420  008644  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 31421                           
 31422                           ; BSR set to: 2
 31423                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 31424  008646  0E00               	movlw	0
 31425  008648  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 31426  00864A  0E00               	movlw	0
 31427  00864C  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 31428                           
 31429                           ; BSR set to: 2
 31430                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31431  00864E  0E08               	movlw	low _I2C1_CallbackReturnStop
 31432  008650  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 31433  008652  0EA0               	movlw	high _I2C1_CallbackReturnStop
 31434  008654  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 31435                           
 31436                           ; BSR set to: 2
 31437                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 31438  008656  0E00               	movlw	0
 31439  008658  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 31440  00865A  0E00               	movlw	0
 31441  00865C  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 31442                           
 31443                           ; BSR set to: 2
 31444                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 31445  00865E  0E04               	movlw	low _I2C1_CallbackReturnReset
 31446  008660  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 31447  008662  0EA0               	movlw	high _I2C1_CallbackReturnReset
 31448  008664  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 31449                           
 31450                           ; BSR set to: 2
 31451                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 31452  008666  0E00               	movlw	0
 31453  008668  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 31454  00866A  0E00               	movlw	0
 31455  00866C  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 31456                           
 31457                           ; BSR set to: 2
 31458                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 31459  00866E  ECF1  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31460                           
 31461                           ; BSR set to: 14
 31462                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 31463  008672  ECF5  F04E         	call	_I2C1_MasterOpen	;wreg free
 31464                           
 31465                           ; BSR set to: 14
 31466                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 31467  008676  0E00               	movlw	0
 31468  008678  6E11               	movwf	I2C1_Open@returnValue^0,c
 31469  00867A                     l20480:
 31470                           
 31471                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 31472  00867A  5011               	movf	I2C1_Open@returnValue^0,w,c
 31473  00867C  0012               	return		;funcret
 31474  00867E                     __end_of_I2C1_Open:
 31475                           	callstack 0
 31476                           
 31477 ;; *************** function _I2C1_MasterOpen *****************
 31478 ;; Defined at:
 31479 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 31480 ;; Parameters:    Size  Location     Type
 31481 ;;		None
 31482 ;; Auto vars:     Size  Location     Type
 31483 ;;		None
 31484 ;; Return value:  Size  Location     Type
 31485 ;;                  1    wreg      _Bool 
 31486 ;; Registers used:
 31487 ;;		wreg, status,2
 31488 ;; Tracked objects:
 31489 ;;		On entry : 3F/E
 31490 ;;		On exit  : 3F/E
 31491 ;;		Unchanged: 3F/0
 31492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31497 ;;Total ram usage:        0 bytes
 31498 ;; Hardware stack levels used: 1
 31499 ;; Hardware stack levels required when called: 4
 31500 ;; This function calls:
 31501 ;;		Nothing
 31502 ;; This function is called by:
 31503 ;;		_I2C1_Open
 31504 ;; This function uses a non-reentrant model
 31505 ;;
 31506                           
 31507                           	psect	text136
 31508  009DEA                     __ptext136:
 31509                           	callstack 0
 31510  009DEA                     _I2C1_MasterOpen:
 31511                           	callstack 20
 31512                           
 31513                           ; BSR set to: 14
 31514                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 31515                           
 31516                           ;incstack = 0
 31517  009DEA  BA96               	btfsc	150,5,c	;volatile
 31518  009DEC  0012               	return	
 31519                           
 31520                           ; BSR set to: 14
 31521                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 31522  009DEE  0E80               	movlw	128
 31523  009DF0  6E95               	movwf	149,c	;volatile
 31524                           
 31525                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 31526  009DF2  0E08               	movlw	8
 31527  009DF4  6E96               	movwf	150,c	;volatile
 31528                           
 31529                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 31530  009DF6  0E00               	movlw	0
 31531  009DF8  6E97               	movwf	151,c	;volatile
 31532                           
 31533                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 31534  009DFA  0E9F               	movlw	159
 31535  009DFC  6E93               	movwf	147,c	;volatile
 31536                           
 31537                           ; BSR set to: 14
 31538                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 31539  009DFE  8A96               	bsf	150,5,c	;volatile
 31540                           
 31541                           ; BSR set to: 14
 31542  009E00  0012               	return		;funcret
 31543  009E02                     __end_of_I2C1_MasterOpen:
 31544                           	callstack 0
 31545                           
 31546 ;; *************** function _I2C1_MasterWrite *****************
 31547 ;; Defined at:
 31548 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31549 ;; Parameters:    Size  Location     Type
 31550 ;;		None
 31551 ;; Auto vars:     Size  Location     Type
 31552 ;;		None
 31553 ;; Return value:  Size  Location     Type
 31554 ;;                  1    wreg      enum E355
 31555 ;; Registers used:
 31556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31557 ;; Tracked objects:
 31558 ;;		On entry : 0/2
 31559 ;;		On exit  : 3F/2
 31560 ;;		Unchanged: 0/0
 31561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31566 ;;Total ram usage:        0 bytes
 31567 ;; Hardware stack levels used: 1
 31568 ;; Hardware stack levels required when called: 11
 31569 ;; This function calls:
 31570 ;;		_I2C1_MasterOperation
 31571 ;; This function is called by:
 31572 ;;		_i2c_writeNBytes
 31573 ;;		_i2c_readDataBlock
 31574 ;;		_I2C1_Read1ByteRegister
 31575 ;; This function uses a non-reentrant model
 31576 ;;
 31577                           
 31578                           	psect	text137
 31579  009F6E                     __ptext137:
 31580                           	callstack 0
 31581  009F6E                     _I2C1_MasterWrite:
 31582                           	callstack 14
 31583                           
 31584                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31585                           
 31586                           ; BSR set to: 14
 31587                           ;incstack = 0
 31588  009F6E  0E00               	movlw	0
 31589  009F70  EC93  F04C         	call	_I2C1_MasterOperation
 31590                           
 31591                           ; BSR set to: 2
 31592  009F74  0012               	return		;funcret
 31593  009F76                     __end_of_I2C1_MasterWrite:
 31594                           	callstack 0
 31595                           
 31596 ;; *************** function _I2C1_MasterOperation *****************
 31597 ;; Defined at:
 31598 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31599 ;; Parameters:    Size  Location     Type
 31600 ;;  read            1    wreg     _Bool 
 31601 ;; Auto vars:     Size  Location     Type
 31602 ;;  read            1   31[COMRAM] _Bool 
 31603 ;;  returnValue     1   32[COMRAM] enum E355
 31604 ;; Return value:  Size  Location     Type
 31605 ;;                  1    wreg      enum E355
 31606 ;; Registers used:
 31607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31608 ;; Tracked objects:
 31609 ;;		On entry : 0/2
 31610 ;;		On exit  : 3F/2
 31611 ;;		Unchanged: 0/0
 31612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31617 ;;Total ram usage:        2 bytes
 31618 ;; Hardware stack levels used: 1
 31619 ;; Hardware stack levels required when called: 10
 31620 ;; This function calls:
 31621 ;;		_I2C1_MasterStart
 31622 ;;		_I2C1_Poller
 31623 ;; This function is called by:
 31624 ;;		_I2C1_MasterWrite
 31625 ;; This function uses a non-reentrant model
 31626 ;;
 31627                           
 31628                           	psect	text138
 31629  009926                     __ptext138:
 31630                           	callstack 0
 31631  009926                     _I2C1_MasterOperation:
 31632                           	callstack 14
 31633                           
 31634                           ; BSR set to: 2
 31635                           ;incstack = 0
 31636                           ;I2C1_MasterOperation@read stored from wreg
 31637  009926  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31638                           
 31639                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31640  009928  0E01               	movlw	1
 31641  00992A  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31642                           
 31643                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31644  00992C  0102               	movlb	2	; () banked
 31645  00992E  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31646  009930  D00E               	goto	l20432
 31647                           
 31648                           ; BSR set to: 2
 31649                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31650  009932  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31651                           
 31652                           ; BSR set to: 2
 31653                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31654  009934  0E00               	movlw	0
 31655  009936  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31656                           
 31657                           ; BSR set to: 2
 31658                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31659  009938  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31660  00993A  B4D8               	btfsc	status,2,c
 31661  00993C  D002               	goto	l20426
 31662                           
 31663                           ; BSR set to: 2
 31664                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31665  00993E  0E01               	movlw	1
 31666  009940  D001               	goto	L113
 31667  009942                     l20426:
 31668                           
 31669                           ; BSR set to: 2
 31670                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31671  009942  0E02               	movlw	2
 31672  009944                     L113:
 31673  009944  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31674                           
 31675                           ; BSR set to: 2
 31676                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31677  009946  EC0A  F050         	call	_I2C1_MasterStart	;wreg free
 31678                           
 31679                           ; BSR set to: 2
 31680                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31681  00994A  EC52  F04F         	call	_I2C1_Poller	;wreg free
 31682  00994E                     l20432:
 31683                           
 31684                           ; BSR set to: 2
 31685                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31686  00994E  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31687                           
 31688                           ; BSR set to: 2
 31689  009950  0012               	return		;funcret
 31690  009952                     __end_of_I2C1_MasterOperation:
 31691                           	callstack 0
 31692                           
 31693 ;; *************** function _I2C1_Poller *****************
 31694 ;; Defined at:
 31695 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31696 ;; Parameters:    Size  Location     Type
 31697 ;;		None
 31698 ;; Auto vars:     Size  Location     Type
 31699 ;;		None
 31700 ;; Return value:  Size  Location     Type
 31701 ;;                  1    wreg      void 
 31702 ;; Registers used:
 31703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31704 ;; Tracked objects:
 31705 ;;		On entry : 3F/2
 31706 ;;		On exit  : 3F/2
 31707 ;;		Unchanged: 0/0
 31708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31713 ;;Total ram usage:        0 bytes
 31714 ;; Hardware stack levels used: 1
 31715 ;; Hardware stack levels required when called: 9
 31716 ;; This function calls:
 31717 ;;		_I2C1_MasterFsm
 31718 ;;		_I2C1_MasterWaitForEvent
 31719 ;; This function is called by:
 31720 ;;		_I2C1_MasterOperation
 31721 ;; This function uses a non-reentrant model
 31722 ;;
 31723                           
 31724                           	psect	text139
 31725  009EA4                     __ptext139:
 31726                           	callstack 0
 31727  009EA4                     _I2C1_Poller:
 31728                           	callstack 14
 31729                           
 31730                           ; BSR set to: 2
 31731                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31732                           
 31733                           ; BSR set to: 2
 31734                           ;incstack = 0
 31735  009EA4  D004               	goto	l20400
 31736  009EA6                     l20396:
 31737                           
 31738                           ; BSR set to: 2
 31739                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31740  009EA6  ECBB  F04F         	call	_I2C1_MasterWaitForEvent	;wreg free
 31741                           
 31742                           ; BSR set to: 14
 31743                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31744  009EAA  EC0B  F049         	call	_I2C1_MasterFsm	;wreg free
 31745  009EAE                     l20400:
 31746                           
 31747                           ; BSR set to: 2
 31748                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31749  009EAE  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31750  009EB0  0012               	return	
 31751  009EB2  D7F9               	goto	l20396
 31752  009EB4                     __end_of_I2C1_Poller:
 31753                           	callstack 0
 31754                           
 31755 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31756 ;; Defined at:
 31757 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31758 ;; Parameters:    Size  Location     Type
 31759 ;;		None
 31760 ;; Auto vars:     Size  Location     Type
 31761 ;;		None
 31762 ;; Return value:  Size  Location     Type
 31763 ;;                  1    wreg      void 
 31764 ;; Registers used:
 31765 ;;		None
 31766 ;; Tracked objects:
 31767 ;;		On entry : 3F/2
 31768 ;;		On exit  : 3F/E
 31769 ;;		Unchanged: 0/0
 31770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31775 ;;Total ram usage:        0 bytes
 31776 ;; Hardware stack levels used: 1
 31777 ;; Hardware stack levels required when called: 4
 31778 ;; This function calls:
 31779 ;;		Nothing
 31780 ;; This function is called by:
 31781 ;;		_I2C1_Poller
 31782 ;; This function uses a non-reentrant model
 31783 ;;
 31784                           
 31785                           	psect	text140
 31786  009F76                     __ptext140:
 31787                           	callstack 0
 31788  009F76                     _I2C1_MasterWaitForEvent:
 31789                           	callstack 18
 31790                           
 31791                           ; BSR set to: 2
 31792                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31793                           
 31794                           ; BSR set to: 2
 31795                           ;incstack = 0
 31796                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31797  009F76  010E               	movlb	14	; () banked
 31798  009F78  B1CD               	btfsc	205,0,b	;volatile
 31799  009F7A  0012               	return	
 31800  009F7C  D7FC               	goto	__ptext140
 31801  009F7E                     __end_of_I2C1_MasterWaitForEvent:
 31802                           	callstack 0
 31803                           
 31804 ;; *************** function _I2C1_MasterFsm *****************
 31805 ;; Defined at:
 31806 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31807 ;; Parameters:    Size  Location     Type
 31808 ;;		None
 31809 ;; Auto vars:     Size  Location     Type
 31810 ;;		None
 31811 ;; Return value:  Size  Location     Type
 31812 ;;                  1    wreg      void 
 31813 ;; Registers used:
 31814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31815 ;; Tracked objects:
 31816 ;;		On entry : 3F/E
 31817 ;;		On exit  : 3F/2
 31818 ;;		Unchanged: 0/0
 31819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31822 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31824 ;;Total ram usage:        3 bytes
 31825 ;; Hardware stack levels used: 1
 31826 ;; Hardware stack levels required when called: 8
 31827 ;; This function calls:
 31828 ;;		_I2C1_DO_ADDRESS_NACK
 31829 ;;		_I2C1_DO_IDLE
 31830 ;;		_I2C1_DO_RCEN
 31831 ;;		_I2C1_DO_RESET
 31832 ;;		_I2C1_DO_RX
 31833 ;;		_I2C1_DO_RX_ACK
 31834 ;;		_I2C1_DO_RX_NACK_RESTART
 31835 ;;		_I2C1_DO_RX_NACK_STOP
 31836 ;;		_I2C1_DO_SEND_ADR_READ
 31837 ;;		_I2C1_DO_SEND_ADR_WRITE
 31838 ;;		_I2C1_DO_SEND_RESTART
 31839 ;;		_I2C1_DO_SEND_RESTART_READ
 31840 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31841 ;;		_I2C1_DO_SEND_STOP
 31842 ;;		_I2C1_DO_TX
 31843 ;;		_I2C1_DO_TX_EMPTY
 31844 ;;		_I2C1_MasterClearIrq
 31845 ;;		_I2C1_MasterIsNack
 31846 ;; This function is called by:
 31847 ;;		_I2C1_Poller
 31848 ;; This function uses a non-reentrant model
 31849 ;;
 31850                           
 31851                           	psect	text141
 31852  009216                     __ptext141:
 31853                           	callstack 0
 31854  009216                     _I2C1_MasterFsm:
 31855                           	callstack 14
 31856                           
 31857                           ; BSR set to: 14
 31858                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31859                           
 31860                           ; BSR set to: 14
 31861                           ;incstack = 0
 31862  009216  ECF1  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31863                           
 31864                           ; BSR set to: 14
 31865                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31866  00921A  0102               	movlb	2	; () banked
 31867  00921C  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31868  00921E  D007               	goto	l20390
 31869                           
 31870                           ; BSR set to: 2
 31871  009220  EC6F  F04F         	call	_I2C1_MasterIsNack	;wreg free
 31872  009224  0900               	iorlw	0
 31873  009226  B4D8               	btfsc	status,2,c
 31874  009228  D002               	goto	l20390
 31875                           
 31876                           ; BSR set to: 2
 31877                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31878  00922A  0E0F               	movlw	15
 31879  00922C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31880  00922E                     l20390:
 31881                           
 31882                           ; BSR set to: 2
 31883                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31884  00922E  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31885  009230  0D02               	mullw	2
 31886  009232  50F3               	movf	243,w,c
 31887  009234  0F01               	addlw	low _i2c1_fsmStateTable
 31888  009236  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 31889  009238  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 31890  00923C                     	if	1	;There is more than 1 active tblptr byte
 31891  00923C  0E0F               	movlw	high __smallconst
 31892  00923E  6EF7               	movwf	tblptrh,c
 31893  009240                     	endif
 31894  009240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31895  009240  6AF8               	clrf	tblptru,c
 31896  009242                     	endif
 31897  009242                     	if	0	;tblptru may be non-zero
 31898  009242                     	endif
 31899  009242  0009               	tblrd		*+
 31900  009244  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 31901  009248  0009               	tblrd		*+
 31902  00924A  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 31903  00924E  D801               	call	u23388
 31904  009250  D009               	goto	u23389
 31905  009252                     u23388:
 31906  009252  0005               	push	
 31907  009254  6EFA               	movwf	pclath,c
 31908  009256  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 31909  009258  6EFD               	movwf	tosl,c
 31910  00925A  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 31911  00925C  6EFE               	movwf	tosh,c
 31912  00925E  6AFF               	clrf	tosu,c
 31913  009260  50FA               	movf	pclath,w,c
 31914  009262  0012               	return		;indir
 31915  009264                     u23389:
 31916  009264  0102               	movlb	2	; () banked
 31917  009266  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31918                           
 31919                           ; BSR set to: 2
 31920  009268  0012               	return		;funcret
 31921  00926A                     __end_of_I2C1_MasterFsm:
 31922                           	callstack 0
 31923                           
 31924 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 31925 ;; Defined at:
 31926 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 31927 ;; Parameters:    Size  Location     Type
 31928 ;;		None
 31929 ;; Auto vars:     Size  Location     Type
 31930 ;;		None
 31931 ;; Return value:  Size  Location     Type
 31932 ;;                  1    wreg      enum E10442
 31933 ;; Registers used:
 31934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31935 ;; Tracked objects:
 31936 ;;		On entry : 3F/2
 31937 ;;		On exit  : 0/0
 31938 ;;		Unchanged: 0/0
 31939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31944 ;;Total ram usage:        2 bytes
 31945 ;; Hardware stack levels used: 1
 31946 ;; Hardware stack levels required when called: 7
 31947 ;; This function calls:
 31948 ;;		Absolute function
 31949 ;;		_I2C1_CallbackReturnReset
 31950 ;;		_I2C1_CallbackReturnStop
 31951 ;;		_I2C1_DO_SEND_RESTART
 31952 ;;		_I2C1_DO_SEND_STOP
 31953 ;;		_rd1RegCompleteHandler
 31954 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31955 ;;		_rd2RegCompleteHandler
 31956 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31957 ;;		_rdBlkRegCompleteHandler
 31958 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31959 ;;		_wr1RegCompleteHandler
 31960 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31961 ;;		_wr2RegCompleteHandler
 31962 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31963 ;; This function is called by:
 31964 ;;		_I2C1_MasterFsm
 31965 ;; This function uses a non-reentrant model
 31966 ;;
 31967                           
 31968                           	psect	text142
 31969  0093AA                     __ptext142:
 31970                           	callstack 0
 31971  0093AA                     _I2C1_DO_ADDRESS_NACK:
 31972                           	callstack 14
 31973                           
 31974                           ; BSR set to: 2
 31975                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 31976                           
 31977                           ; BSR set to: 2
 31978                           ;incstack = 0
 31979  0093AA  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31980                           
 31981                           ; BSR set to: 2
 31982                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 31983  0093AC  0E02               	movlw	2
 31984  0093AE  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31985                           
 31986                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 31987  0093B0  D006               	goto	l20374
 31988  0093B2                     l20364:
 31989                           
 31990                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 31991  0093B2  ECCF  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31992  0093B6  0012               	return	
 31993  0093B8                     l20368:
 31994                           
 31995                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 31996  0093B8  ECCB  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 31997  0093BC  0012               	return	
 31998  0093BE                     l20374:
 31999                           
 32000                           ; BSR set to: 2
 32001  0093BE  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 32002  0093C2  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 32003  0093C6  D801               	call	u23348
 32004  0093C8  D009               	goto	u23349
 32005  0093CA                     u23348:
 32006  0093CA  0005               	push	
 32007  0093CC  6EFA               	movwf	pclath,c
 32008  0093CE  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 32009  0093D0  6EFD               	movwf	tosl,c
 32010  0093D2  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 32011  0093D4  6EFE               	movwf	tosh,c
 32012  0093D6  6AFF               	clrf	tosu,c
 32013  0093D8  50FA               	movf	pclath,w,c
 32014  0093DA  0012               	return		;indir
 32015  0093DC                     u23349:
 32016  0093DC  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 32017  0093DE  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 32018                           
 32019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32020                           ; Switch size 1, requested type "simple"
 32021                           ; Number of cases is 1, Range of values is 0 to 0
 32022                           ; switch strategies available:
 32023                           ; Name         Instructions Cycles
 32024                           ; simple_byte            4     3 (average)
 32025                           ;	Chosen strategy is simple_byte
 32026  0093E0  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 32027  0093E2  0A00               	xorlw	0	; case 0
 32028  0093E4  A4D8               	btfss	status,2,c
 32029  0093E6  D7E8               	goto	l20368
 32030                           
 32031                           ; Switch size 1, requested type "simple"
 32032                           ; Number of cases is 2, Range of values is 2 to 3
 32033                           ; switch strategies available:
 32034                           ; Name         Instructions Cycles
 32035                           ; simple_byte            7     4 (average)
 32036                           ;	Chosen strategy is simple_byte
 32037  0093E8  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 32038  0093EA  0A02               	xorlw	2	; case 2
 32039  0093EC  B4D8               	btfsc	status,2,c
 32040  0093EE  D7E1               	goto	l20364
 32041  0093F0  0A01               	xorlw	1	; case 3
 32042  0093F2  B4D8               	btfsc	status,2,c
 32043  0093F4  D7DE               	goto	l20364
 32044  0093F6  D7E0               	goto	l20368
 32045  0093F8                     __end_of_I2C1_DO_ADDRESS_NACK:
 32046                           	callstack 0
 32047                           
 32048 ;; *************** function _I2C1_DO_RESET *****************
 32049 ;; Defined at:
 32050 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 32051 ;; Parameters:    Size  Location     Type
 32052 ;;		None
 32053 ;; Auto vars:     Size  Location     Type
 32054 ;;		None
 32055 ;; Return value:  Size  Location     Type
 32056 ;;                  1    wreg      enum E10442
 32057 ;; Registers used:
 32058 ;;		wreg, status,2
 32059 ;; Tracked objects:
 32060 ;;		On entry : 3F/2
 32061 ;;		On exit  : 3F/2
 32062 ;;		Unchanged: 0/0
 32063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32068 ;;Total ram usage:        0 bytes
 32069 ;; Hardware stack levels used: 1
 32070 ;; Hardware stack levels required when called: 4
 32071 ;; This function calls:
 32072 ;;		Nothing
 32073 ;; This function is called by:
 32074 ;;		_I2C1_MasterFsm
 32075 ;; This function uses a non-reentrant model
 32076 ;;
 32077                           
 32078                           	psect	text143
 32079  009F50                     __ptext143:
 32080                           	callstack 0
 32081  009F50                     _I2C1_DO_RESET:
 32082                           	callstack 17
 32083                           
 32084                           ; BSR set to: 2
 32085                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 32086                           
 32087                           ;incstack = 0
 32088  009F50  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32089                           
 32090                           ; BSR set to: 2
 32091                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 32092  009F52  0E00               	movlw	0
 32093  009F54  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32094                           
 32095                           ; BSR set to: 2
 32096                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 32097  009F56  0E0E               	movlw	14
 32098                           
 32099                           ; BSR set to: 2
 32100  009F58  0012               	return		;funcret
 32101  009F5A                     __end_of_I2C1_DO_RESET:
 32102                           	callstack 0
 32103                           
 32104 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 32105 ;; Defined at:
 32106 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 32107 ;; Parameters:    Size  Location     Type
 32108 ;;		None
 32109 ;; Auto vars:     Size  Location     Type
 32110 ;;		None
 32111 ;; Return value:  Size  Location     Type
 32112 ;;                  1    wreg      enum E10442
 32113 ;; Registers used:
 32114 ;;		wreg, cstack
 32115 ;; Tracked objects:
 32116 ;;		On entry : 0/2
 32117 ;;		On exit  : 0/0
 32118 ;;		Unchanged: 0/0
 32119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32124 ;;Total ram usage:        0 bytes
 32125 ;; Hardware stack levels used: 1
 32126 ;; Hardware stack levels required when called: 5
 32127 ;; This function calls:
 32128 ;;		_I2C1_MasterSendNack
 32129 ;; This function is called by:
 32130 ;;		_I2C1_DO_RX
 32131 ;;		_I2C1_MasterFsm
 32132 ;; This function uses a non-reentrant model
 32133 ;;
 32134                           
 32135                           	psect	text144
 32136  009F7E                     __ptext144:
 32137                           	callstack 0
 32138  009F7E                     _I2C1_DO_RX_NACK_RESTART:
 32139                           	callstack 16
 32140                           
 32141                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 32142                           
 32143                           ; BSR set to: 2
 32144                           ;incstack = 0
 32145  009F7E  ECEE  F04F         	call	_I2C1_MasterSendNack	;wreg free
 32146                           
 32147                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 32148  009F82  0E09               	movlw	9
 32149  009F84  0012               	return		;funcret
 32150  009F86                     __end_of_I2C1_DO_RX_NACK_RESTART:
 32151                           	callstack 0
 32152                           
 32153 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 32154 ;; Defined at:
 32155 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 32156 ;; Parameters:    Size  Location     Type
 32157 ;;		None
 32158 ;; Auto vars:     Size  Location     Type
 32159 ;;		None
 32160 ;; Return value:  Size  Location     Type
 32161 ;;                  1    wreg      enum E10442
 32162 ;; Registers used:
 32163 ;;		wreg, cstack
 32164 ;; Tracked objects:
 32165 ;;		On entry : 0/2
 32166 ;;		On exit  : 0/0
 32167 ;;		Unchanged: 0/0
 32168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32173 ;;Total ram usage:        0 bytes
 32174 ;; Hardware stack levels used: 1
 32175 ;; Hardware stack levels required when called: 5
 32176 ;; This function calls:
 32177 ;;		_I2C1_MasterSendNack
 32178 ;; This function is called by:
 32179 ;;		_I2C1_DO_RX
 32180 ;;		_I2C1_MasterFsm
 32181 ;; This function uses a non-reentrant model
 32182 ;;
 32183                           
 32184                           	psect	text145
 32185  009F86                     __ptext145:
 32186                           	callstack 0
 32187  009F86                     _I2C1_DO_RX_NACK_STOP:
 32188                           	callstack 16
 32189                           
 32190                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 32191                           
 32192                           ;incstack = 0
 32193  009F86  ECEE  F04F         	call	_I2C1_MasterSendNack	;wreg free
 32194                           
 32195                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 32196  009F8A  0E0A               	movlw	10
 32197  009F8C  0012               	return		;funcret
 32198  009F8E                     __end_of_I2C1_DO_RX_NACK_STOP:
 32199                           	callstack 0
 32200                           
 32201 ;; *************** function _I2C1_DO_RX_ACK *****************
 32202 ;; Defined at:
 32203 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 32204 ;; Parameters:    Size  Location     Type
 32205 ;;		None
 32206 ;; Auto vars:     Size  Location     Type
 32207 ;;		None
 32208 ;; Return value:  Size  Location     Type
 32209 ;;                  1    wreg      enum E10442
 32210 ;; Registers used:
 32211 ;;		wreg, cstack
 32212 ;; Tracked objects:
 32213 ;;		On entry : 3F/2
 32214 ;;		On exit  : 3F/2
 32215 ;;		Unchanged: 3F/0
 32216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32221 ;;Total ram usage:        0 bytes
 32222 ;; Hardware stack levels used: 1
 32223 ;; Hardware stack levels required when called: 5
 32224 ;; This function calls:
 32225 ;;		_I2C1_MasterSendAck
 32226 ;; This function is called by:
 32227 ;;		_I2C1_MasterFsm
 32228 ;; This function uses a non-reentrant model
 32229 ;;
 32230                           
 32231                           	psect	text146
 32232  009F8E                     __ptext146:
 32233                           	callstack 0
 32234  009F8E                     _I2C1_DO_RX_ACK:
 32235                           	callstack 16
 32236                           
 32237                           ; BSR set to: 2
 32238                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 32239                           
 32240                           ;incstack = 0
 32241  009F8E  ECEB  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32242                           
 32243                           ; BSR set to: 2
 32244                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 32245  009F92  0E05               	movlw	5
 32246                           
 32247                           ; BSR set to: 2
 32248  009F94  0012               	return		;funcret
 32249  009F96                     __end_of_I2C1_DO_RX_ACK:
 32250                           	callstack 0
 32251                           
 32252 ;; *************** function _I2C1_DO_SEND_STOP *****************
 32253 ;; Defined at:
 32254 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 32255 ;; Parameters:    Size  Location     Type
 32256 ;;		None
 32257 ;; Auto vars:     Size  Location     Type
 32258 ;;		None
 32259 ;; Return value:  Size  Location     Type
 32260 ;;                  1    wreg      enum E10442
 32261 ;; Registers used:
 32262 ;;		wreg, cstack
 32263 ;; Tracked objects:
 32264 ;;		On entry : 0/2
 32265 ;;		On exit  : 0/0
 32266 ;;		Unchanged: 0/0
 32267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32272 ;;Total ram usage:        0 bytes
 32273 ;; Hardware stack levels used: 1
 32274 ;; Hardware stack levels required when called: 5
 32275 ;; This function calls:
 32276 ;;		_I2C1_MasterStop
 32277 ;; This function is called by:
 32278 ;;		_I2C1_DO_TX
 32279 ;;		_I2C1_DO_TX_EMPTY
 32280 ;;		_I2C1_DO_ADDRESS_NACK
 32281 ;;		_I2C1_MasterFsm
 32282 ;; This function uses a non-reentrant model
 32283 ;;
 32284                           
 32285                           	psect	text147
 32286  009F96                     __ptext147:
 32287                           	callstack 0
 32288  009F96                     _I2C1_DO_SEND_STOP:
 32289                           	callstack 15
 32290                           
 32291                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 32292                           
 32293                           ; BSR set to: 2
 32294                           ;incstack = 0
 32295  009F96  EC06  F050         	call	_I2C1_MasterStop	;wreg free
 32296                           
 32297                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 32298  009F9A  0E00               	movlw	0
 32299  009F9C  0012               	return		;funcret
 32300  009F9E                     __end_of_I2C1_DO_SEND_STOP:
 32301                           	callstack 0
 32302                           
 32303 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 32304 ;; Defined at:
 32305 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 32306 ;; Parameters:    Size  Location     Type
 32307 ;;		None
 32308 ;; Auto vars:     Size  Location     Type
 32309 ;;		None
 32310 ;; Return value:  Size  Location     Type
 32311 ;;                  1    wreg      enum E10442
 32312 ;; Registers used:
 32313 ;;		wreg, cstack
 32314 ;; Tracked objects:
 32315 ;;		On entry : 0/2
 32316 ;;		On exit  : 0/0
 32317 ;;		Unchanged: 0/0
 32318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32323 ;;Total ram usage:        0 bytes
 32324 ;; Hardware stack levels used: 1
 32325 ;; Hardware stack levels required when called: 5
 32326 ;; This function calls:
 32327 ;;		_I2C1_MasterEnableRestart
 32328 ;; This function is called by:
 32329 ;;		_I2C1_DO_TX_EMPTY
 32330 ;;		_I2C1_DO_ADDRESS_NACK
 32331 ;;		_I2C1_MasterFsm
 32332 ;; This function uses a non-reentrant model
 32333 ;;
 32334                           
 32335                           	psect	text148
 32336  009F9E                     __ptext148:
 32337                           	callstack 0
 32338  009F9E                     _I2C1_DO_SEND_RESTART:
 32339                           	callstack 15
 32340                           
 32341                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 32342                           
 32343                           ;incstack = 0
 32344  009F9E  EC08  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32345                           
 32346                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 32347  009FA2  0E01               	movlw	1
 32348  009FA4  0012               	return		;funcret
 32349  009FA6                     __end_of_I2C1_DO_SEND_RESTART:
 32350                           	callstack 0
 32351                           
 32352 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 32353 ;; Defined at:
 32354 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 32355 ;; Parameters:    Size  Location     Type
 32356 ;;		None
 32357 ;; Auto vars:     Size  Location     Type
 32358 ;;		None
 32359 ;; Return value:  Size  Location     Type
 32360 ;;                  1    wreg      enum E10442
 32361 ;; Registers used:
 32362 ;;		wreg, cstack
 32363 ;; Tracked objects:
 32364 ;;		On entry : 0/2
 32365 ;;		On exit  : 0/0
 32366 ;;		Unchanged: 0/0
 32367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32372 ;;Total ram usage:        0 bytes
 32373 ;; Hardware stack levels used: 1
 32374 ;; Hardware stack levels required when called: 5
 32375 ;; This function calls:
 32376 ;;		_I2C1_MasterEnableRestart
 32377 ;; This function is called by:
 32378 ;;		_I2C1_DO_TX
 32379 ;;		_I2C1_MasterFsm
 32380 ;; This function uses a non-reentrant model
 32381 ;;
 32382                           
 32383                           	psect	text149
 32384  009FA6                     __ptext149:
 32385                           	callstack 0
 32386  009FA6                     _I2C1_DO_SEND_RESTART_WRITE:
 32387                           	callstack 15
 32388                           
 32389                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 32390                           
 32391                           ;incstack = 0
 32392  009FA6  EC08  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32393                           
 32394                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 32395  009FAA  0E02               	movlw	2
 32396  009FAC  0012               	return		;funcret
 32397  009FAE                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 32398                           	callstack 0
 32399                           
 32400 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 32401 ;; Defined at:
 32402 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 32403 ;; Parameters:    Size  Location     Type
 32404 ;;		None
 32405 ;; Auto vars:     Size  Location     Type
 32406 ;;		None
 32407 ;; Return value:  Size  Location     Type
 32408 ;;                  1    wreg      enum E10442
 32409 ;; Registers used:
 32410 ;;		wreg, cstack
 32411 ;; Tracked objects:
 32412 ;;		On entry : 0/2
 32413 ;;		On exit  : 0/0
 32414 ;;		Unchanged: 0/0
 32415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32420 ;;Total ram usage:        0 bytes
 32421 ;; Hardware stack levels used: 1
 32422 ;; Hardware stack levels required when called: 5
 32423 ;; This function calls:
 32424 ;;		_I2C1_MasterEnableRestart
 32425 ;; This function is called by:
 32426 ;;		_I2C1_DO_TX
 32427 ;;		_I2C1_MasterFsm
 32428 ;; This function uses a non-reentrant model
 32429 ;;
 32430                           
 32431                           	psect	text150
 32432  009FAE                     __ptext150:
 32433                           	callstack 0
 32434  009FAE                     _I2C1_DO_SEND_RESTART_READ:
 32435                           	callstack 15
 32436                           
 32437                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 32438                           
 32439                           ;incstack = 0
 32440  009FAE  EC08  F050         	call	_I2C1_MasterEnableRestart	;wreg free
 32441                           
 32442                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 32443  009FB2  0E01               	movlw	1
 32444  009FB4  0012               	return		;funcret
 32445  009FB6                     __end_of_I2C1_DO_SEND_RESTART_READ:
 32446                           	callstack 0
 32447                           
 32448 ;; *************** function _I2C1_DO_RCEN *****************
 32449 ;; Defined at:
 32450 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 32451 ;; Parameters:    Size  Location     Type
 32452 ;;		None
 32453 ;; Auto vars:     Size  Location     Type
 32454 ;;		None
 32455 ;; Return value:  Size  Location     Type
 32456 ;;                  1    wreg      enum E10442
 32457 ;; Registers used:
 32458 ;;		wreg, cstack
 32459 ;; Tracked objects:
 32460 ;;		On entry : 3F/2
 32461 ;;		On exit  : 3F/2
 32462 ;;		Unchanged: 0/0
 32463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32468 ;;Total ram usage:        0 bytes
 32469 ;; Hardware stack levels used: 1
 32470 ;; Hardware stack levels required when called: 5
 32471 ;; This function calls:
 32472 ;;		_I2C1_MasterStartRx
 32473 ;; This function is called by:
 32474 ;;		_I2C1_MasterFsm
 32475 ;; This function uses a non-reentrant model
 32476 ;;
 32477                           
 32478                           	psect	text151
 32479  009F5A                     __ptext151:
 32480                           	callstack 0
 32481  009F5A                     _I2C1_DO_RCEN:
 32482                           	callstack 16
 32483                           
 32484                           ; BSR set to: 2
 32485                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 32486                           
 32487                           ;incstack = 0
 32488  009F5A  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32489                           
 32490                           ; BSR set to: 2
 32491                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 32492  009F5C  EC00  F050         	call	_I2C1_MasterStartRx	;wreg free
 32493                           
 32494                           ; BSR set to: 2
 32495                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 32496  009F60  0E04               	movlw	4
 32497                           
 32498                           ; BSR set to: 2
 32499  009F62  0012               	return		;funcret
 32500  009F64                     __end_of_I2C1_DO_RCEN:
 32501                           	callstack 0
 32502                           
 32503 ;; *************** function _I2C1_DO_RX *****************
 32504 ;; Defined at:
 32505 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 32506 ;; Parameters:    Size  Location     Type
 32507 ;;		None
 32508 ;; Auto vars:     Size  Location     Type
 32509 ;;		None
 32510 ;; Return value:  Size  Location     Type
 32511 ;;                  1    wreg      enum E10442
 32512 ;; Registers used:
 32513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32514 ;; Tracked objects:
 32515 ;;		On entry : 3F/2
 32516 ;;		On exit  : 0/0
 32517 ;;		Unchanged: 0/0
 32518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32523 ;;Total ram usage:        2 bytes
 32524 ;; Hardware stack levels used: 1
 32525 ;; Hardware stack levels required when called: 7
 32526 ;; This function calls:
 32527 ;;		Absolute function
 32528 ;;		_I2C1_CallbackReturnReset
 32529 ;;		_I2C1_CallbackReturnStop
 32530 ;;		_I2C1_DO_RX_NACK_RESTART
 32531 ;;		_I2C1_DO_RX_NACK_STOP
 32532 ;;		_I2C1_MasterGetRxData
 32533 ;;		_I2C1_MasterSendAck
 32534 ;;		_rd1RegCompleteHandler
 32535 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32536 ;;		_rd2RegCompleteHandler
 32537 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32538 ;;		_rdBlkRegCompleteHandler
 32539 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32540 ;;		_wr1RegCompleteHandler
 32541 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32542 ;;		_wr2RegCompleteHandler
 32543 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32544 ;; This function is called by:
 32545 ;;		_I2C1_MasterFsm
 32546 ;; This function uses a non-reentrant model
 32547 ;;
 32548                           
 32549                           	psect	text152
 32550  00887A                     __ptext152:
 32551                           	callstack 0
 32552  00887A                     _I2C1_DO_RX:
 32553                           	callstack 14
 32554                           
 32555                           ; BSR set to: 2
 32556                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32557                           
 32558                           ; BSR set to: 2
 32559                           ;incstack = 0
 32560  00887A  ECFE  F04F         	call	_I2C1_MasterGetRxData	;wreg free
 32561  00887E  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32562  008882  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32563  008886  6EDF               	movwf	indf2,c
 32564                           
 32565                           ; BSR set to: 2
 32566  008888  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32567  00888A  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32568                           
 32569                           ; BSR set to: 2
 32570                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32571  00888C  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32572  00888E  A0D8               	btfss	status,0,c
 32573  008890  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32574  008892  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32575  008894  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32576  008896  B4D8               	btfsc	status,2,c
 32577  008898  D004               	goto	l690
 32578                           
 32579                           ; BSR set to: 2
 32580                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32581  00889A  ECEB  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32582                           
 32583                           ; BSR set to: 2
 32584                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32585  00889E  0E05               	movlw	5
 32586  0088A0  0012               	return	
 32587  0088A2                     l690:
 32588                           
 32589                           ; BSR set to: 2
 32590                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32591  0088A2  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32592                           
 32593                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32594  0088A4  D006               	goto	l20308
 32595  0088A6                     l20298:
 32596                           
 32597                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32598  0088A6  ECBF  F04F         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32599  0088AA  0012               	return	
 32600  0088AC                     l20302:
 32601                           
 32602                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32603  0088AC  ECC3  F04F         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32604  0088B0  0012               	return	
 32605  0088B2                     l20308:
 32606                           
 32607                           ; BSR set to: 2
 32608  0088B2  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32609  0088B6  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32610  0088BA  D801               	call	u23328
 32611  0088BC  D009               	goto	u23329
 32612  0088BE                     u23328:
 32613  0088BE  0005               	push	
 32614  0088C0  6EFA               	movwf	pclath,c
 32615  0088C2  513C               	movf	_I2C1_Status& (0+255),w,b
 32616  0088C4  6EFD               	movwf	tosl,c
 32617  0088C6  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32618  0088C8  6EFE               	movwf	tosh,c
 32619  0088CA  6AFF               	clrf	tosu,c
 32620  0088CC  50FA               	movf	pclath,w,c
 32621  0088CE  0012               	return		;indir
 32622  0088D0                     u23329:
 32623  0088D0  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32624  0088D2  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32625                           
 32626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32627                           ; Switch size 1, requested type "simple"
 32628                           ; Number of cases is 1, Range of values is 0 to 0
 32629                           ; switch strategies available:
 32630                           ; Name         Instructions Cycles
 32631                           ; simple_byte            4     3 (average)
 32632                           ;	Chosen strategy is simple_byte
 32633  0088D4  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32634  0088D6  0A00               	xorlw	0	; case 0
 32635  0088D8  A4D8               	btfss	status,2,c
 32636  0088DA  D7E8               	goto	l20302
 32637                           
 32638                           ; Switch size 1, requested type "simple"
 32639                           ; Number of cases is 4, Range of values is 1 to 4
 32640                           ; switch strategies available:
 32641                           ; Name         Instructions Cycles
 32642                           ; simple_byte           13     7 (average)
 32643                           ;	Chosen strategy is simple_byte
 32644  0088DC  501B               	movf	??_I2C1_DO_RX^0,w,c
 32645  0088DE  0A01               	xorlw	1	; case 1
 32646  0088E0  B4D8               	btfsc	status,2,c
 32647  0088E2  D7E4               	goto	l20302
 32648  0088E4  0A03               	xorlw	3	; case 2
 32649  0088E6  B4D8               	btfsc	status,2,c
 32650  0088E8  D7DE               	goto	l20298
 32651  0088EA  0A01               	xorlw	1	; case 3
 32652  0088EC  B4D8               	btfsc	status,2,c
 32653  0088EE  D7DB               	goto	l20298
 32654  0088F0  0A07               	xorlw	7	; case 4
 32655  0088F2  D7DC               	goto	l20302
 32656  0088F4                     __end_of_I2C1_DO_RX:
 32657                           	callstack 0
 32658                           
 32659 ;; *************** function _I2C1_DO_TX *****************
 32660 ;; Defined at:
 32661 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32662 ;; Parameters:    Size  Location     Type
 32663 ;;		None
 32664 ;; Auto vars:     Size  Location     Type
 32665 ;;		None
 32666 ;; Return value:  Size  Location     Type
 32667 ;;                  1    wreg      enum E10442
 32668 ;; Registers used:
 32669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32670 ;; Tracked objects:
 32671 ;;		On entry : 3F/2
 32672 ;;		On exit  : 0/0
 32673 ;;		Unchanged: 0/0
 32674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32679 ;;Total ram usage:        2 bytes
 32680 ;; Hardware stack levels used: 1
 32681 ;; Hardware stack levels required when called: 7
 32682 ;; This function calls:
 32683 ;;		Absolute function
 32684 ;;		_I2C1_CallbackReturnReset
 32685 ;;		_I2C1_CallbackReturnStop
 32686 ;;		_I2C1_DO_SEND_RESTART_READ
 32687 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32688 ;;		_I2C1_DO_SEND_STOP
 32689 ;;		_I2C1_MasterIsNack
 32690 ;;		_I2C1_MasterSendTxData
 32691 ;;		_rd1RegCompleteHandler
 32692 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32693 ;;		_rd2RegCompleteHandler
 32694 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32695 ;;		_rdBlkRegCompleteHandler
 32696 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32697 ;;		_wr1RegCompleteHandler
 32698 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32699 ;;		_wr2RegCompleteHandler
 32700 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32701 ;; This function is called by:
 32702 ;;		_I2C1_MasterFsm
 32703 ;; This function uses a non-reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text153
 32707  0083DA                     __ptext153:
 32708                           	callstack 0
 32709  0083DA                     _I2C1_DO_TX:
 32710                           	callstack 14
 32711                           
 32712                           ; BSR set to: 2
 32713                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32714                           
 32715                           ;incstack = 0
 32716  0083DA  EC6F  F04F         	call	_I2C1_MasterIsNack	;wreg free
 32717  0083DE  0900               	iorlw	0
 32718  0083E0  A4D8               	btfss	status,2,c
 32719  0083E2  D00A               	goto	l20268
 32720  0083E4  D02A               	goto	l674
 32721  0083E6                     l20254:
 32722                           
 32723                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32724  0083E6  ECD7  F04F         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32725  0083EA  0012               	return	
 32726  0083EC                     l20258:
 32727                           
 32728                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32729  0083EC  ECD3  F04F         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32730  0083F0  0012               	return	
 32731  0083F2                     l20262:
 32732                           
 32733                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32734  0083F2  ECCB  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 32735  0083F6  0012               	return	
 32736  0083F8                     l20268:
 32737                           
 32738                           ; BSR set to: 2
 32739  0083F8  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32740  0083FC  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32741  008400  D801               	call	u23298
 32742  008402  D009               	goto	u23299
 32743  008404                     u23298:
 32744  008404  0005               	push	
 32745  008406  6EFA               	movwf	pclath,c
 32746  008408  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32747  00840A  6EFD               	movwf	tosl,c
 32748  00840C  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32749  00840E  6EFE               	movwf	tosh,c
 32750  008410  6AFF               	clrf	tosu,c
 32751  008412  50FA               	movf	pclath,w,c
 32752  008414  0012               	return		;indir
 32753  008416                     u23299:
 32754  008416  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32755  008418  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32756                           
 32757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32758                           ; Switch size 1, requested type "simple"
 32759                           ; Number of cases is 1, Range of values is 0 to 0
 32760                           ; switch strategies available:
 32761                           ; Name         Instructions Cycles
 32762                           ; simple_byte            4     3 (average)
 32763                           ;	Chosen strategy is simple_byte
 32764  00841A  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32765  00841C  0A00               	xorlw	0	; case 0
 32766  00841E  A4D8               	btfss	status,2,c
 32767  008420  D7E8               	goto	l20262
 32768                           
 32769                           ; Switch size 1, requested type "simple"
 32770                           ; Number of cases is 4, Range of values is 1 to 4
 32771                           ; switch strategies available:
 32772                           ; Name         Instructions Cycles
 32773                           ; simple_byte           13     7 (average)
 32774                           ;	Chosen strategy is simple_byte
 32775  008422  501B               	movf	??_I2C1_DO_TX^0,w,c
 32776  008424  0A01               	xorlw	1	; case 1
 32777  008426  B4D8               	btfsc	status,2,c
 32778  008428  D7E4               	goto	l20262
 32779  00842A  0A03               	xorlw	3	; case 2
 32780  00842C  B4D8               	btfsc	status,2,c
 32781  00842E  D7DB               	goto	l20254
 32782  008430  0A01               	xorlw	1	; case 3
 32783  008432  B4D8               	btfsc	status,2,c
 32784  008434  D7DB               	goto	l20258
 32785  008436  0A07               	xorlw	7	; case 4
 32786  008438  D7DC               	goto	l20262
 32787  00843A                     l674:
 32788                           
 32789                           ; BSR set to: 2
 32790                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32791  00843A  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32792                           
 32793                           ; BSR set to: 2
 32794                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32795  00843C  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32796  008440  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32797  008444  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32798  008446  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32799  008448  50DF               	movf	indf2,w,c
 32800  00844A  ECDB  F04F         	call	_I2C1_MasterSendTxData
 32801                           
 32802                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32803  00844E  0102               	movlb	2	; () banked
 32804  008450  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32805  008452  A0D8               	btfss	status,0,c
 32806  008454  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32807  008456  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32808  008458  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32809  00845A  A4D8               	btfss	status,2,c
 32810  00845C  D002               	goto	l20276
 32811                           
 32812                           ; BSR set to: 2
 32813  00845E  0E06               	movlw	6
 32814  008460  0012               	return	
 32815  008462                     l20276:
 32816                           
 32817                           ; BSR set to: 2
 32818  008462  0E03               	movlw	3
 32819  008464  0012               	return		;funcret
 32820  008466                     __end_of_I2C1_DO_TX:
 32821                           	callstack 0
 32822                           
 32823 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32824 ;; Defined at:
 32825 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32826 ;; Parameters:    Size  Location     Type
 32827 ;;		None
 32828 ;; Auto vars:     Size  Location     Type
 32829 ;;		None
 32830 ;; Return value:  Size  Location     Type
 32831 ;;                  1    wreg      enum E10442
 32832 ;; Registers used:
 32833 ;;		wreg, status,2, status,0, cstack
 32834 ;; Tracked objects:
 32835 ;;		On entry : 3F/2
 32836 ;;		On exit  : 0/0
 32837 ;;		Unchanged: 0/0
 32838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32843 ;;Total ram usage:        0 bytes
 32844 ;; Hardware stack levels used: 1
 32845 ;; Hardware stack levels required when called: 5
 32846 ;; This function calls:
 32847 ;;		_I2C1_MasterSendTxData
 32848 ;; This function is called by:
 32849 ;;		_I2C1_MasterFsm
 32850 ;; This function uses a non-reentrant model
 32851 ;;
 32852                           
 32853                           	psect	text154
 32854  009EC2                     __ptext154:
 32855                           	callstack 0
 32856  009EC2                     _I2C1_DO_SEND_ADR_WRITE:
 32857                           	callstack 16
 32858                           
 32859                           ; BSR set to: 2
 32860                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32861                           
 32862                           ;incstack = 0
 32863  009EC2  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32864                           
 32865                           ; BSR set to: 2
 32866                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32867  009EC4  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32868  009EC6  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32869  009EC8  ECDB  F04F         	call	_I2C1_MasterSendTxData
 32870                           
 32871                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32872  009ECC  0E03               	movlw	3
 32873  009ECE  0012               	return		;funcret
 32874  009ED0                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32875                           	callstack 0
 32876                           
 32877 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32878 ;; Defined at:
 32879 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32880 ;; Parameters:    Size  Location     Type
 32881 ;;		None
 32882 ;; Auto vars:     Size  Location     Type
 32883 ;;		None
 32884 ;; Return value:  Size  Location     Type
 32885 ;;                  1    wreg      enum E10442
 32886 ;; Registers used:
 32887 ;;		wreg, status,0, cstack
 32888 ;; Tracked objects:
 32889 ;;		On entry : 3F/2
 32890 ;;		On exit  : 0/0
 32891 ;;		Unchanged: 0/0
 32892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32897 ;;Total ram usage:        0 bytes
 32898 ;; Hardware stack levels used: 1
 32899 ;; Hardware stack levels required when called: 5
 32900 ;; This function calls:
 32901 ;;		_I2C1_MasterSendTxData
 32902 ;; This function is called by:
 32903 ;;		_I2C1_MasterFsm
 32904 ;; This function uses a non-reentrant model
 32905 ;;
 32906                           
 32907                           	psect	text155
 32908  009ED0                     __ptext155:
 32909                           	callstack 0
 32910  009ED0                     _I2C1_DO_SEND_ADR_READ:
 32911                           	callstack 16
 32912                           
 32913                           ; BSR set to: 2
 32914                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 32915                           
 32916                           ;incstack = 0
 32917  009ED0  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32918                           
 32919                           ; BSR set to: 2
 32920                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 32921  009ED2  80D8               	bsf	status,0,c
 32922  009ED4  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 32923  009ED6  ECDB  F04F         	call	_I2C1_MasterSendTxData
 32924                           
 32925                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 32926  009EDA  0E05               	movlw	5
 32927  009EDC  0012               	return		;funcret
 32928  009EDE                     __end_of_I2C1_DO_SEND_ADR_READ:
 32929                           	callstack 0
 32930                           
 32931 ;; *************** function _I2C1_DO_IDLE *****************
 32932 ;; Defined at:
 32933 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 32934 ;; Parameters:    Size  Location     Type
 32935 ;;		None
 32936 ;; Auto vars:     Size  Location     Type
 32937 ;;		None
 32938 ;; Return value:  Size  Location     Type
 32939 ;;                  1    wreg      enum E10442
 32940 ;; Registers used:
 32941 ;;		wreg, status,2
 32942 ;; Tracked objects:
 32943 ;;		On entry : 3F/2
 32944 ;;		On exit  : 3F/2
 32945 ;;		Unchanged: 0/0
 32946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32951 ;;Total ram usage:        0 bytes
 32952 ;; Hardware stack levels used: 1
 32953 ;; Hardware stack levels required when called: 4
 32954 ;; This function calls:
 32955 ;;		Nothing
 32956 ;; This function is called by:
 32957 ;;		_I2C1_MasterFsm
 32958 ;; This function uses a non-reentrant model
 32959 ;;
 32960                           
 32961                           	psect	text156
 32962  009F64                     __ptext156:
 32963                           	callstack 0
 32964  009F64                     _I2C1_DO_IDLE:
 32965                           	callstack 17
 32966                           
 32967                           ; BSR set to: 2
 32968                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 32969                           
 32970                           ;incstack = 0
 32971  009F64  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32972                           
 32973                           ; BSR set to: 2
 32974                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 32975  009F66  0E00               	movlw	0
 32976  009F68  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32977                           
 32978                           ; BSR set to: 2
 32979                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 32980  009F6A  0E0E               	movlw	14
 32981                           
 32982                           ; BSR set to: 2
 32983  009F6C  0012               	return		;funcret
 32984  009F6E                     __end_of_I2C1_DO_IDLE:
 32985                           	callstack 0
 32986                           
 32987 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 32988 ;; Defined at:
 32989 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 32990 ;; Parameters:    Size  Location     Type
 32991 ;;		None
 32992 ;; Auto vars:     Size  Location     Type
 32993 ;;		None
 32994 ;; Return value:  Size  Location     Type
 32995 ;;                  1    wreg      enum E10442
 32996 ;; Registers used:
 32997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32998 ;; Tracked objects:
 32999 ;;		On entry : 3F/2
 33000 ;;		On exit  : 0/0
 33001 ;;		Unchanged: 0/0
 33002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33007 ;;Total ram usage:        2 bytes
 33008 ;; Hardware stack levels used: 1
 33009 ;; Hardware stack levels required when called: 7
 33010 ;; This function calls:
 33011 ;;		Absolute function
 33012 ;;		_I2C1_CallbackReturnReset
 33013 ;;		_I2C1_CallbackReturnStop
 33014 ;;		_I2C1_DO_SEND_RESTART
 33015 ;;		_I2C1_DO_SEND_STOP
 33016 ;;		_I2C1_MasterSetIrq
 33017 ;;		_rd1RegCompleteHandler
 33018 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33019 ;;		_rd2RegCompleteHandler
 33020 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33021 ;;		_rdBlkRegCompleteHandler
 33022 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33023 ;;		_wr1RegCompleteHandler
 33024 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33025 ;;		_wr2RegCompleteHandler
 33026 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33027 ;; This function is called by:
 33028 ;;		_I2C1_MasterFsm
 33029 ;; This function uses a non-reentrant model
 33030 ;;
 33031                           
 33032                           	psect	text157
 33033  008E96                     __ptext157:
 33034                           	callstack 0
 33035  008E96                     _I2C1_DO_TX_EMPTY:
 33036                           	callstack 14
 33037                           
 33038                           ; BSR set to: 2
 33039                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 33040                           
 33041                           ; BSR set to: 2
 33042                           ;incstack = 0
 33043  008E96  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 33044                           
 33045                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 33046  008E98  D00A               	goto	l20340
 33047  008E9A                     l20324:
 33048                           
 33049                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 33050  008E9A  ECCF  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 33051  008E9E  0012               	return	
 33052  008EA0                     l20328:
 33053                           
 33054                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 33055  008EA0  ECE8  F04F         	call	_I2C1_MasterSetIrq	;wreg free
 33056                           
 33057                           ; BSR set to: 14
 33058                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 33059  008EA4  0E03               	movlw	3
 33060  008EA6  0012               	return	
 33061  008EA8                     l20334:
 33062                           
 33063                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 33064  008EA8  ECCB  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 33065  008EAC  0012               	return	
 33066  008EAE                     l20340:
 33067                           
 33068                           ; BSR set to: 2
 33069  008EAE  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 33070  008EB2  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 33071  008EB6  D801               	call	u23338
 33072  008EB8  D009               	goto	u23339
 33073  008EBA                     u23338:
 33074  008EBA  0005               	push	
 33075  008EBC  6EFA               	movwf	pclath,c
 33076  008EBE  513C               	movf	_I2C1_Status& (0+255),w,b
 33077  008EC0  6EFD               	movwf	tosl,c
 33078  008EC2  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 33079  008EC4  6EFE               	movwf	tosh,c
 33080  008EC6  6AFF               	clrf	tosu,c
 33081  008EC8  50FA               	movf	pclath,w,c
 33082  008ECA  0012               	return		;indir
 33083  008ECC                     u23339:
 33084  008ECC  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 33085  008ECE  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 33086                           
 33087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33088                           ; Switch size 1, requested type "simple"
 33089                           ; Number of cases is 1, Range of values is 0 to 0
 33090                           ; switch strategies available:
 33091                           ; Name         Instructions Cycles
 33092                           ; simple_byte            4     3 (average)
 33093                           ;	Chosen strategy is simple_byte
 33094  008ED0  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 33095  008ED2  0A00               	xorlw	0	; case 0
 33096  008ED4  A4D8               	btfss	status,2,c
 33097  008ED6  D7E8               	goto	l20334
 33098                           
 33099                           ; Switch size 1, requested type "simple"
 33100                           ; Number of cases is 4, Range of values is 1 to 4
 33101                           ; switch strategies available:
 33102                           ; Name         Instructions Cycles
 33103                           ; simple_byte           13     7 (average)
 33104                           ;	Chosen strategy is simple_byte
 33105  008ED8  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 33106  008EDA  0A01               	xorlw	1	; case 1
 33107  008EDC  B4D8               	btfsc	status,2,c
 33108  008EDE  D7E4               	goto	l20334
 33109  008EE0  0A03               	xorlw	3	; case 2
 33110  008EE2  B4D8               	btfsc	status,2,c
 33111  008EE4  D7DA               	goto	l20324
 33112  008EE6  0A01               	xorlw	1	; case 3
 33113  008EE8  B4D8               	btfsc	status,2,c
 33114  008EEA  D7D7               	goto	l20324
 33115  008EEC  0A07               	xorlw	7	; case 4
 33116  008EEE  B4D8               	btfsc	status,2,c
 33117  008EF0  D7D7               	goto	l20328
 33118  008EF2  D7DA               	goto	l20334
 33119  008EF4                     __end_of_I2C1_DO_TX_EMPTY:
 33120                           	callstack 0
 33121                           
 33122 ;; *************** function _I2C1_MasterSetIrq *****************
 33123 ;; Defined at:
 33124 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 33125 ;; Parameters:    Size  Location     Type
 33126 ;;		None
 33127 ;; Auto vars:     Size  Location     Type
 33128 ;;		None
 33129 ;; Return value:  Size  Location     Type
 33130 ;;                  1    wreg      void 
 33131 ;; Registers used:
 33132 ;;		None
 33133 ;; Tracked objects:
 33134 ;;		On entry : 0/2
 33135 ;;		On exit  : 3F/E
 33136 ;;		Unchanged: 0/0
 33137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33142 ;;Total ram usage:        0 bytes
 33143 ;; Hardware stack levels used: 1
 33144 ;; Hardware stack levels required when called: 4
 33145 ;; This function calls:
 33146 ;;		Nothing
 33147 ;; This function is called by:
 33148 ;;		_I2C1_DO_TX_EMPTY
 33149 ;; This function uses a non-reentrant model
 33150 ;;
 33151                           
 33152                           	psect	text158
 33153  009FD0                     __ptext158:
 33154                           	callstack 0
 33155  009FD0                     _I2C1_MasterSetIrq:
 33156                           	callstack 16
 33157                           
 33158                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 33159                           
 33160                           ;incstack = 0
 33161  009FD0  010E               	movlb	14	; () banked
 33162  009FD2  81CD               	bsf	205,0,b	;volatile
 33163                           
 33164                           ; BSR set to: 14
 33165  009FD4  0012               	return		;funcret
 33166  009FD6                     __end_of_I2C1_MasterSetIrq:
 33167                           	callstack 0
 33168                           
 33169 ;; *************** function _I2C1_MasterIsNack *****************
 33170 ;; Defined at:
 33171 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 33172 ;; Parameters:    Size  Location     Type
 33173 ;;		None
 33174 ;; Auto vars:     Size  Location     Type
 33175 ;;		None
 33176 ;; Return value:  Size  Location     Type
 33177 ;;                  1    wreg      _Bool 
 33178 ;; Registers used:
 33179 ;;		wreg
 33180 ;; Tracked objects:
 33181 ;;		On entry : 3F/2
 33182 ;;		On exit  : 3F/2
 33183 ;;		Unchanged: 3F/0
 33184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33189 ;;Total ram usage:        0 bytes
 33190 ;; Hardware stack levels used: 1
 33191 ;; Hardware stack levels required when called: 4
 33192 ;; This function calls:
 33193 ;;		Nothing
 33194 ;; This function is called by:
 33195 ;;		_I2C1_MasterFsm
 33196 ;;		_I2C1_DO_TX
 33197 ;; This function uses a non-reentrant model
 33198 ;;
 33199                           
 33200                           	psect	text159
 33201  009EDE                     __ptext159:
 33202                           	callstack 0
 33203  009EDE                     _I2C1_MasterIsNack:
 33204                           	callstack 17
 33205                           
 33206                           ; BSR set to: 2
 33207                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 33208                           
 33209                           ; BSR set to: 14
 33210                           ;incstack = 0
 33211  009EDE  AC97               	btfss	151,6,c	;volatile
 33212  009EE0  D002               	goto	u23270
 33213  009EE2  0E01               	movlw	1
 33214  009EE4  0012               	return	
 33215  009EE6                     u23270:
 33216  009EE6  0E00               	movlw	0
 33217                           
 33218                           ; BSR set to: 2
 33219  009EE8  0012               	return		;funcret
 33220  009EEA                     __end_of_I2C1_MasterIsNack:
 33221                           	callstack 0
 33222                           
 33223 ;; *************** function _I2C1_MasterSendTxData *****************
 33224 ;; Defined at:
 33225 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 33226 ;; Parameters:    Size  Location     Type
 33227 ;;  data            1    wreg     unsigned char 
 33228 ;; Auto vars:     Size  Location     Type
 33229 ;;  data            1   15[COMRAM] unsigned char 
 33230 ;; Return value:  Size  Location     Type
 33231 ;;                  1    wreg      void 
 33232 ;; Registers used:
 33233 ;;		wreg
 33234 ;; Tracked objects:
 33235 ;;		On entry : 3F/2
 33236 ;;		On exit  : 0/0
 33237 ;;		Unchanged: 0/0
 33238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33243 ;;Total ram usage:        1 bytes
 33244 ;; Hardware stack levels used: 1
 33245 ;; Hardware stack levels required when called: 4
 33246 ;; This function calls:
 33247 ;;		Nothing
 33248 ;; This function is called by:
 33249 ;;		_I2C1_DO_SEND_ADR_READ
 33250 ;;		_I2C1_DO_SEND_ADR_WRITE
 33251 ;;		_I2C1_DO_TX
 33252 ;; This function uses a non-reentrant model
 33253 ;;
 33254                           
 33255                           	psect	text160
 33256  009FB6                     __ptext160:
 33257                           	callstack 0
 33258  009FB6                     _I2C1_MasterSendTxData:
 33259                           	callstack 16
 33260                           
 33261                           ; BSR set to: 2
 33262                           ;incstack = 0
 33263                           ;I2C1_MasterSendTxData@data stored from wreg
 33264  009FB6  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 33265                           
 33266                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 33267  009FB8  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 33268  009FBC  0012               	return		;funcret
 33269  009FBE                     __end_of_I2C1_MasterSendTxData:
 33270                           	callstack 0
 33271                           
 33272 ;; *************** function _I2C1_MasterSendAck *****************
 33273 ;; Defined at:
 33274 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 33275 ;; Parameters:    Size  Location     Type
 33276 ;;		None
 33277 ;; Auto vars:     Size  Location     Type
 33278 ;;		None
 33279 ;; Return value:  Size  Location     Type
 33280 ;;                  1    wreg      void 
 33281 ;; Registers used:
 33282 ;;		None
 33283 ;; Tracked objects:
 33284 ;;		On entry : 3F/2
 33285 ;;		On exit  : 3F/2
 33286 ;;		Unchanged: 3F/0
 33287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33292 ;;Total ram usage:        0 bytes
 33293 ;; Hardware stack levels used: 1
 33294 ;; Hardware stack levels required when called: 4
 33295 ;; This function calls:
 33296 ;;		Nothing
 33297 ;; This function is called by:
 33298 ;;		_I2C1_DO_RX
 33299 ;;		_I2C1_DO_RX_ACK
 33300 ;; This function uses a non-reentrant model
 33301 ;;
 33302                           
 33303                           	psect	text161
 33304  009FD6                     __ptext161:
 33305                           	callstack 0
 33306  009FD6                     _I2C1_MasterSendAck:
 33307                           	callstack 16
 33308                           
 33309                           ; BSR set to: 2
 33310                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 33311                           
 33312                           ;incstack = 0
 33313  009FD6  9A97               	bcf	151,5,c	;volatile
 33314                           
 33315                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 33316  009FD8  8897               	bsf	151,4,c	;volatile
 33317                           
 33318                           ; BSR set to: 2
 33319  009FDA  0012               	return		;funcret
 33320  009FDC                     __end_of_I2C1_MasterSendAck:
 33321                           	callstack 0
 33322                           
 33323 ;; *************** function _I2C1_MasterGetRxData *****************
 33324 ;; Defined at:
 33325 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 33326 ;; Parameters:    Size  Location     Type
 33327 ;;		None
 33328 ;; Auto vars:     Size  Location     Type
 33329 ;;		None
 33330 ;; Return value:  Size  Location     Type
 33331 ;;                  1    wreg      unsigned char 
 33332 ;; Registers used:
 33333 ;;		wreg, status,2
 33334 ;; Tracked objects:
 33335 ;;		On entry : 3F/2
 33336 ;;		On exit  : 3F/2
 33337 ;;		Unchanged: 3F/0
 33338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33343 ;;Total ram usage:        0 bytes
 33344 ;; Hardware stack levels used: 1
 33345 ;; Hardware stack levels required when called: 4
 33346 ;; This function calls:
 33347 ;;		Nothing
 33348 ;; This function is called by:
 33349 ;;		_I2C1_DO_RX
 33350 ;; This function uses a non-reentrant model
 33351 ;;
 33352                           
 33353                           	psect	text162
 33354  009FFC                     __ptext162:
 33355                           	callstack 0
 33356  009FFC                     _I2C1_MasterGetRxData:
 33357                           	callstack 16
 33358                           
 33359                           ; BSR set to: 2
 33360                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 33361                           
 33362                           ; BSR set to: 2
 33363                           ;incstack = 0
 33364  009FFC  5092               	movf	146,w,c	;volatile
 33365                           
 33366                           ; BSR set to: 2
 33367  009FFE  0012               	return		;funcret
 33368  00A000                     __end_of_I2C1_MasterGetRxData:
 33369                           	callstack 0
 33370                           
 33371 ;; *************** function _I2C1_MasterSendNack *****************
 33372 ;; Defined at:
 33373 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 33374 ;; Parameters:    Size  Location     Type
 33375 ;;		None
 33376 ;; Auto vars:     Size  Location     Type
 33377 ;;		None
 33378 ;; Return value:  Size  Location     Type
 33379 ;;                  1    wreg      void 
 33380 ;; Registers used:
 33381 ;;		None
 33382 ;; Tracked objects:
 33383 ;;		On entry : 0/2
 33384 ;;		On exit  : 0/0
 33385 ;;		Unchanged: 0/0
 33386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33391 ;;Total ram usage:        0 bytes
 33392 ;; Hardware stack levels used: 1
 33393 ;; Hardware stack levels required when called: 4
 33394 ;; This function calls:
 33395 ;;		Nothing
 33396 ;; This function is called by:
 33397 ;;		_I2C1_DO_RX_NACK_STOP
 33398 ;;		_I2C1_DO_RX_NACK_RESTART
 33399 ;; This function uses a non-reentrant model
 33400 ;;
 33401                           
 33402                           	psect	text163
 33403  009FDC                     __ptext163:
 33404                           	callstack 0
 33405  009FDC                     _I2C1_MasterSendNack:
 33406                           	callstack 16
 33407                           
 33408                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 33409                           
 33410                           ; BSR set to: 2
 33411                           ;incstack = 0
 33412  009FDC  8A97               	bsf	151,5,c	;volatile
 33413                           
 33414                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 33415  009FDE  8897               	bsf	151,4,c	;volatile
 33416  009FE0  0012               	return		;funcret
 33417  009FE2                     __end_of_I2C1_MasterSendNack:
 33418                           	callstack 0
 33419                           
 33420 ;; *************** function _I2C1_MasterStartRx *****************
 33421 ;; Defined at:
 33422 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 33423 ;; Parameters:    Size  Location     Type
 33424 ;;		None
 33425 ;; Auto vars:     Size  Location     Type
 33426 ;;		None
 33427 ;; Return value:  Size  Location     Type
 33428 ;;                  1    wreg      void 
 33429 ;; Registers used:
 33430 ;;		None
 33431 ;; Tracked objects:
 33432 ;;		On entry : 3F/2
 33433 ;;		On exit  : 3F/2
 33434 ;;		Unchanged: 3F/0
 33435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33440 ;;Total ram usage:        0 bytes
 33441 ;; Hardware stack levels used: 1
 33442 ;; Hardware stack levels required when called: 4
 33443 ;; This function calls:
 33444 ;;		Nothing
 33445 ;; This function is called by:
 33446 ;;		_I2C1_DO_RCEN
 33447 ;; This function uses a non-reentrant model
 33448 ;;
 33449                           
 33450                           	psect	text164
 33451  00A000                     __ptext164:
 33452                           	callstack 0
 33453  00A000                     _I2C1_MasterStartRx:
 33454                           	callstack 16
 33455                           
 33456                           ; BSR set to: 2
 33457                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 33458                           
 33459                           ;incstack = 0
 33460  00A000  8697               	bsf	151,3,c	;volatile
 33461                           
 33462                           ; BSR set to: 2
 33463  00A002  0012               	return		;funcret
 33464  00A004                     __end_of_I2C1_MasterStartRx:
 33465                           	callstack 0
 33466                           
 33467 ;; *************** function _I2C1_CallbackReturnReset *****************
 33468 ;; Defined at:
 33469 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 33470 ;; Parameters:    Size  Location     Type
 33471 ;;  funPtr          2   24[COMRAM] PTR void 
 33472 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33473 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33474 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33475 ;; Auto vars:     Size  Location     Type
 33476 ;;		None
 33477 ;; Return value:  Size  Location     Type
 33478 ;;                  1    wreg      enum E360
 33479 ;; Registers used:
 33480 ;;		wreg
 33481 ;; Tracked objects:
 33482 ;;		On entry : 3F/2
 33483 ;;		On exit  : 3F/2
 33484 ;;		Unchanged: 3F/0
 33485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33490 ;;Total ram usage:        2 bytes
 33491 ;; Hardware stack levels used: 1
 33492 ;; Hardware stack levels required when called: 4
 33493 ;; This function calls:
 33494 ;;		Nothing
 33495 ;; This function is called by:
 33496 ;;		_I2C1_Open
 33497 ;;		_I2C1_DO_TX
 33498 ;;		_I2C1_DO_RX
 33499 ;;		_I2C1_DO_TX_EMPTY
 33500 ;;		_I2C1_DO_ADDRESS_NACK
 33501 ;; This function uses a non-reentrant model
 33502 ;;
 33503                           
 33504                           	psect	text165
 33505  00A004                     __ptext165:
 33506                           	callstack 0
 33507  00A004                     _I2C1_CallbackReturnReset:
 33508                           	callstack 16
 33509                           
 33510                           ; BSR set to: 2
 33511                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 33512                           
 33513                           ; BSR set to: 2
 33514                           ;incstack = 0
 33515  00A004  0E05               	movlw	5
 33516                           
 33517                           ; BSR set to: 2
 33518  00A006  0012               	return		;funcret
 33519  00A008                     __end_of_I2C1_CallbackReturnReset:
 33520                           	callstack 0
 33521                           
 33522 ;; *************** function _I2C1_CallbackReturnStop *****************
 33523 ;; Defined at:
 33524 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;  funPtr          2   24[COMRAM] PTR void 
 33527 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33528 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33529 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33530 ;; Auto vars:     Size  Location     Type
 33531 ;;		None
 33532 ;; Return value:  Size  Location     Type
 33533 ;;                  1    wreg      enum E360
 33534 ;; Registers used:
 33535 ;;		wreg
 33536 ;; Tracked objects:
 33537 ;;		On entry : 3F/2
 33538 ;;		On exit  : 3F/2
 33539 ;;		Unchanged: 3F/0
 33540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33545 ;;Total ram usage:        2 bytes
 33546 ;; Hardware stack levels used: 1
 33547 ;; Hardware stack levels required when called: 4
 33548 ;; This function calls:
 33549 ;;		Nothing
 33550 ;; This function is called by:
 33551 ;;		_I2C1_Open
 33552 ;;		_I2C1_SetCallback
 33553 ;;		_I2C1_DO_TX
 33554 ;;		_I2C1_DO_RX
 33555 ;;		_I2C1_DO_TX_EMPTY
 33556 ;;		_I2C1_DO_ADDRESS_NACK
 33557 ;; This function uses a non-reentrant model
 33558 ;;
 33559                           
 33560                           	psect	text166
 33561  00A008                     __ptext166:
 33562                           	callstack 0
 33563  00A008                     _I2C1_CallbackReturnStop:
 33564                           	callstack 16
 33565                           
 33566                           ; BSR set to: 2
 33567                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33568                           
 33569                           ; BSR set to: 2
 33570                           ;incstack = 0
 33571  00A008  0E01               	movlw	1
 33572                           
 33573                           ; BSR set to: 2
 33574  00A00A  0012               	return		;funcret
 33575  00A00C                     __end_of_I2C1_CallbackReturnStop:
 33576                           	callstack 0
 33577                           
 33578 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33579 ;; Defined at:
 33580 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33581 ;; Parameters:    Size  Location     Type
 33582 ;;  ptr             2   24[COMRAM] PTR void 
 33583 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33584 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33585 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33586 ;; Auto vars:     Size  Location     Type
 33587 ;;		None
 33588 ;; Return value:  Size  Location     Type
 33589 ;;                  1    wreg      enum E527
 33590 ;; Registers used:
 33591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33592 ;; Tracked objects:
 33593 ;;		On entry : 3F/2
 33594 ;;		On exit  : 0/0
 33595 ;;		Unchanged: 0/0
 33596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33601 ;;Total ram usage:        2 bytes
 33602 ;; Hardware stack levels used: 1
 33603 ;; Hardware stack levels required when called: 6
 33604 ;; This function calls:
 33605 ;;		_I2C1_SetBuffer
 33606 ;;		_I2C1_SetDataCompleteCallback
 33607 ;; This function is called by:
 33608 ;;		_I2C1_DO_TX
 33609 ;;		_I2C1_DO_RX
 33610 ;;		_I2C1_DO_TX_EMPTY
 33611 ;;		_I2C1_DO_ADDRESS_NACK
 33612 ;; This function uses a non-reentrant model
 33613 ;;
 33614                           
 33615                           	psect	text167
 33616  0095DA                     __ptext167:
 33617                           	callstack 0
 33618  0095DA                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33619                           	callstack 14
 33620                           
 33621                           ; BSR set to: 2
 33622                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33623                           
 33624                           ; BSR set to: 2
 33625                           ;incstack = 0
 33626  0095DA  EE20 F002          	lfsr	2,2
 33627  0095DE  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33628  0095E0  26D9               	addwf	fsr2l,f,c
 33629  0095E2  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33630  0095E4  22DA               	addwfc	fsr2h,f,c
 33631  0095E6  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33632  0095EA  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33633  0095EE  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33634  0095F2  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33635  0095F6  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33636  0095FA  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33637  0095FE  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 33638                           
 33639                           ; BSR set to: 2
 33640                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33641  009602  0E00               	movlw	0
 33642  009604  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33643  009606  0E00               	movlw	0
 33644  009608  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33645  00960A  0E00               	movlw	0
 33646  00960C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33647  00960E  0E00               	movlw	0
 33648  009610  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33649  009612  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33650                           
 33651                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33652  009616  0E02               	movlw	2
 33653  009618  0012               	return		;funcret
 33654  00961A                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33655                           	callstack 0
 33656                           
 33657 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33658 ;; Defined at:
 33659 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33660 ;; Parameters:    Size  Location     Type
 33661 ;;  ptr             2   24[COMRAM] PTR void 
 33662 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33663 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33664 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33665 ;; Auto vars:     Size  Location     Type
 33666 ;;		None
 33667 ;; Return value:  Size  Location     Type
 33668 ;;                  1    wreg      enum E527
 33669 ;; Registers used:
 33670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33671 ;; Tracked objects:
 33672 ;;		On entry : 3F/2
 33673 ;;		On exit  : 0/0
 33674 ;;		Unchanged: 0/0
 33675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33680 ;;Total ram usage:        2 bytes
 33681 ;; Hardware stack levels used: 1
 33682 ;; Hardware stack levels required when called: 6
 33683 ;; This function calls:
 33684 ;;		_I2C1_SetBuffer
 33685 ;;		_I2C1_SetDataCompleteCallback
 33686 ;; This function is called by:
 33687 ;;		_I2C1_DO_TX
 33688 ;;		_I2C1_DO_RX
 33689 ;;		_I2C1_DO_TX_EMPTY
 33690 ;;		_I2C1_DO_ADDRESS_NACK
 33691 ;; This function uses a non-reentrant model
 33692 ;;
 33693                           
 33694                           	psect	text168
 33695  009952                     __ptext168:
 33696                           	callstack 0
 33697  009952                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33698                           	callstack 14
 33699                           
 33700                           ; BSR set to: 2
 33701                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33702                           
 33703                           ;incstack = 0
 33704  009952  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33705  009956  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33706  00995A  0E00               	movlw	0
 33707  00995C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33708  00995E  0E01               	movlw	1
 33709  009960  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33710  009962  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 33711                           
 33712                           ; BSR set to: 2
 33713                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33714  009966  0E00               	movlw	0
 33715  009968  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33716  00996A  0E00               	movlw	0
 33717  00996C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33718  00996E  0E00               	movlw	0
 33719  009970  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33720  009972  0E00               	movlw	0
 33721  009974  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33722  009976  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33723                           
 33724                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33725  00997A  0E04               	movlw	4
 33726  00997C  0012               	return		;funcret
 33727  00997E                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33728                           	callstack 0
 33729                           
 33730 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33731 ;; Defined at:
 33732 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33733 ;; Parameters:    Size  Location     Type
 33734 ;;  ptr             2   24[COMRAM] PTR void 
 33735 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33736 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33737 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33738 ;; Auto vars:     Size  Location     Type
 33739 ;;		None
 33740 ;; Return value:  Size  Location     Type
 33741 ;;                  1    wreg      enum E527
 33742 ;; Registers used:
 33743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33744 ;; Tracked objects:
 33745 ;;		On entry : 3F/2
 33746 ;;		On exit  : 0/0
 33747 ;;		Unchanged: 0/0
 33748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33753 ;;Total ram usage:        2 bytes
 33754 ;; Hardware stack levels used: 1
 33755 ;; Hardware stack levels required when called: 6
 33756 ;; This function calls:
 33757 ;;		_I2C1_SetBuffer
 33758 ;;		_I2C1_SetDataCompleteCallback
 33759 ;; This function is called by:
 33760 ;;		_I2C1_DO_TX
 33761 ;;		_I2C1_DO_RX
 33762 ;;		_I2C1_DO_TX_EMPTY
 33763 ;;		_I2C1_DO_ADDRESS_NACK
 33764 ;; This function uses a non-reentrant model
 33765 ;;
 33766                           
 33767                           	psect	text169
 33768  00997E                     __ptext169:
 33769                           	callstack 0
 33770  00997E                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33771                           	callstack 14
 33772                           
 33773                           ; BSR set to: 2
 33774                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33775                           
 33776                           ;incstack = 0
 33777  00997E  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33778  009982  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33779  009986  0E00               	movlw	0
 33780  009988  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33781  00998A  0E02               	movlw	2
 33782  00998C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33783  00998E  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 33784                           
 33785                           ; BSR set to: 2
 33786                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33787  009992  0E00               	movlw	0
 33788  009994  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33789  009996  0E00               	movlw	0
 33790  009998  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33791  00999A  0E00               	movlw	0
 33792  00999C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33793  00999E  0E00               	movlw	0
 33794  0099A0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33795  0099A2  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33796                           
 33797                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33798  0099A6  0E02               	movlw	2
 33799  0099A8  0012               	return		;funcret
 33800  0099AA                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33801                           	callstack 0
 33802                           
 33803 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33804 ;; Defined at:
 33805 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33806 ;; Parameters:    Size  Location     Type
 33807 ;;  ptr             2   24[COMRAM] PTR void 
 33808 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33809 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33810 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33811 ;; Auto vars:     Size  Location     Type
 33812 ;;		None
 33813 ;; Return value:  Size  Location     Type
 33814 ;;                  1    wreg      enum E527
 33815 ;; Registers used:
 33816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33817 ;; Tracked objects:
 33818 ;;		On entry : 3F/2
 33819 ;;		On exit  : 0/0
 33820 ;;		Unchanged: 0/0
 33821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33826 ;;Total ram usage:        2 bytes
 33827 ;; Hardware stack levels used: 1
 33828 ;; Hardware stack levels required when called: 6
 33829 ;; This function calls:
 33830 ;;		_I2C1_SetBuffer
 33831 ;;		_I2C1_SetDataCompleteCallback
 33832 ;; This function is called by:
 33833 ;;		_I2C1_Read1ByteRegister
 33834 ;;		_I2C1_DO_TX
 33835 ;;		_I2C1_DO_RX
 33836 ;;		_I2C1_DO_TX_EMPTY
 33837 ;;		_I2C1_DO_ADDRESS_NACK
 33838 ;; This function uses a non-reentrant model
 33839 ;;
 33840                           
 33841                           	psect	text170
 33842  0099AA                     __ptext170:
 33843                           	callstack 0
 33844  0099AA                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33845                           	callstack 14
 33846                           
 33847                           ; BSR set to: 2
 33848                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33849                           
 33850                           ;incstack = 0
 33851  0099AA  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33852  0099AE  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33853  0099B2  0E00               	movlw	0
 33854  0099B4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33855  0099B6  0E01               	movlw	1
 33856  0099B8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33857  0099BA  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 33858                           
 33859                           ; BSR set to: 2
 33860                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33861  0099BE  0E00               	movlw	0
 33862  0099C0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33863  0099C2  0E00               	movlw	0
 33864  0099C4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33865  0099C6  0E00               	movlw	0
 33866  0099C8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33867  0099CA  0E00               	movlw	0
 33868  0099CC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33869  0099CE  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33870                           
 33871                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33872  0099D2  0E02               	movlw	2
 33873  0099D4  0012               	return		;funcret
 33874  0099D6                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33875                           	callstack 0
 33876                           
 33877 ;; *************** function _rdBlkRegCompleteHandler *****************
 33878 ;; Defined at:
 33879 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33880 ;; Parameters:    Size  Location     Type
 33881 ;;  p               2   24[COMRAM] PTR void 
 33882 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33883 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33884 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33885 ;; Auto vars:     Size  Location     Type
 33886 ;;		None
 33887 ;; Return value:  Size  Location     Type
 33888 ;;                  1    wreg      enum E360
 33889 ;; Registers used:
 33890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33891 ;; Tracked objects:
 33892 ;;		On entry : 3F/2
 33893 ;;		On exit  : 0/0
 33894 ;;		Unchanged: 0/0
 33895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33900 ;;Total ram usage:        2 bytes
 33901 ;; Hardware stack levels used: 1
 33902 ;; Hardware stack levels required when called: 6
 33903 ;; This function calls:
 33904 ;;		_I2C1_SetBuffer
 33905 ;;		_I2C1_SetDataCompleteCallback
 33906 ;; This function is called by:
 33907 ;;		_i2c_readDataBlock
 33908 ;;		_I2C1_DO_TX
 33909 ;;		_I2C1_DO_RX
 33910 ;;		_I2C1_DO_TX_EMPTY
 33911 ;;		_I2C1_DO_ADDRESS_NACK
 33912 ;; This function uses a non-reentrant model
 33913 ;;
 33914                           
 33915                           	psect	text171
 33916  00961A                     __ptext171:
 33917                           	callstack 0
 33918  00961A                     _rdBlkRegCompleteHandler:
 33919                           	callstack 14
 33920                           
 33921                           ; BSR set to: 2
 33922                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 33923                           
 33924                           ;incstack = 0
 33925  00961A  EE20 F002          	lfsr	2,2
 33926  00961E  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 33927  009620  26D9               	addwf	fsr2l,f,c
 33928  009622  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 33929  009624  22DA               	addwfc	fsr2h,f,c
 33930  009626  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33931  00962A  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33932  00962E  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 33933  009632  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 33934  009636  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33935  00963A  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33936  00963E  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 33937                           
 33938                           ; BSR set to: 2
 33939                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33940  009642  0E00               	movlw	0
 33941  009644  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33942  009646  0E00               	movlw	0
 33943  009648  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33944  00964A  0E00               	movlw	0
 33945  00964C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33946  00964E  0E00               	movlw	0
 33947  009650  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33948  009652  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33949                           
 33950                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 33951  009656  0E02               	movlw	2
 33952  009658  0012               	return		;funcret
 33953  00965A                     __end_of_rdBlkRegCompleteHandler:
 33954                           	callstack 0
 33955                           
 33956 ;; *************** function _wr2RegCompleteHandler *****************
 33957 ;; Defined at:
 33958 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33959 ;; Parameters:    Size  Location     Type
 33960 ;;  p               2   24[COMRAM] PTR void 
 33961 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33962 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33963 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33964 ;; Auto vars:     Size  Location     Type
 33965 ;;		None
 33966 ;; Return value:  Size  Location     Type
 33967 ;;                  1    wreg      enum E360
 33968 ;; Registers used:
 33969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33970 ;; Tracked objects:
 33971 ;;		On entry : 3F/2
 33972 ;;		On exit  : 0/0
 33973 ;;		Unchanged: 0/0
 33974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33979 ;;Total ram usage:        2 bytes
 33980 ;; Hardware stack levels used: 1
 33981 ;; Hardware stack levels required when called: 6
 33982 ;; This function calls:
 33983 ;;		_I2C1_SetBuffer
 33984 ;;		_I2C1_SetDataCompleteCallback
 33985 ;; This function is called by:
 33986 ;;		_I2C1_DO_TX
 33987 ;;		_I2C1_DO_RX
 33988 ;;		_I2C1_DO_TX_EMPTY
 33989 ;;		_I2C1_DO_ADDRESS_NACK
 33990 ;; This function uses a non-reentrant model
 33991 ;;
 33992                           
 33993                           	psect	text172
 33994  0099D6                     __ptext172:
 33995                           	callstack 0
 33996  0099D6                     _wr2RegCompleteHandler:
 33997                           	callstack 14
 33998                           
 33999                           ; BSR set to: 2
 34000                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 34001                           
 34002                           ;incstack = 0
 34003  0099D6  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34004  0099DA  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34005  0099DE  0E00               	movlw	0
 34006  0099E0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34007  0099E2  0E02               	movlw	2
 34008  0099E4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34009  0099E6  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 34010                           
 34011                           ; BSR set to: 2
 34012                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 34013  0099EA  0E00               	movlw	0
 34014  0099EC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34015  0099EE  0E00               	movlw	0
 34016  0099F0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34017  0099F2  0E00               	movlw	0
 34018  0099F4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34019  0099F6  0E00               	movlw	0
 34020  0099F8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34021  0099FA  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34022                           
 34023                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 34024  0099FE  0E04               	movlw	4
 34025  009A00  0012               	return		;funcret
 34026  009A02                     __end_of_wr2RegCompleteHandler:
 34027                           	callstack 0
 34028                           
 34029 ;; *************** function _rd2RegCompleteHandler *****************
 34030 ;; Defined at:
 34031 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34032 ;; Parameters:    Size  Location     Type
 34033 ;;  p               2   24[COMRAM] PTR void 
 34034 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34035 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34036 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34037 ;; Auto vars:     Size  Location     Type
 34038 ;;		None
 34039 ;; Return value:  Size  Location     Type
 34040 ;;                  1    wreg      enum E360
 34041 ;; Registers used:
 34042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34043 ;; Tracked objects:
 34044 ;;		On entry : 3F/2
 34045 ;;		On exit  : 0/0
 34046 ;;		Unchanged: 0/0
 34047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34052 ;;Total ram usage:        2 bytes
 34053 ;; Hardware stack levels used: 1
 34054 ;; Hardware stack levels required when called: 6
 34055 ;; This function calls:
 34056 ;;		_I2C1_SetBuffer
 34057 ;;		_I2C1_SetDataCompleteCallback
 34058 ;; This function is called by:
 34059 ;;		_I2C1_DO_TX
 34060 ;;		_I2C1_DO_RX
 34061 ;;		_I2C1_DO_TX_EMPTY
 34062 ;;		_I2C1_DO_ADDRESS_NACK
 34063 ;; This function uses a non-reentrant model
 34064 ;;
 34065                           
 34066                           	psect	text173
 34067  009A02                     __ptext173:
 34068                           	callstack 0
 34069  009A02                     _rd2RegCompleteHandler:
 34070                           	callstack 14
 34071                           
 34072                           ; BSR set to: 2
 34073                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 34074                           
 34075                           ;incstack = 0
 34076  009A02  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34077  009A06  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34078  009A0A  0E00               	movlw	0
 34079  009A0C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34080  009A0E  0E02               	movlw	2
 34081  009A10  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34082  009A12  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 34083                           
 34084                           ; BSR set to: 2
 34085                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34086  009A16  0E00               	movlw	0
 34087  009A18  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34088  009A1A  0E00               	movlw	0
 34089  009A1C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34090  009A1E  0E00               	movlw	0
 34091  009A20  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34092  009A22  0E00               	movlw	0
 34093  009A24  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34094  009A26  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34095                           
 34096                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 34097  009A2A  0E02               	movlw	2
 34098  009A2C  0012               	return		;funcret
 34099  009A2E                     __end_of_rd2RegCompleteHandler:
 34100                           	callstack 0
 34101                           
 34102 ;; *************** function _rd1RegCompleteHandler *****************
 34103 ;; Defined at:
 34104 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34105 ;; Parameters:    Size  Location     Type
 34106 ;;  p               2   24[COMRAM] PTR void 
 34107 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34108 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34109 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34110 ;; Auto vars:     Size  Location     Type
 34111 ;;		None
 34112 ;; Return value:  Size  Location     Type
 34113 ;;                  1    wreg      enum E360
 34114 ;; Registers used:
 34115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34116 ;; Tracked objects:
 34117 ;;		On entry : 3F/2
 34118 ;;		On exit  : 0/0
 34119 ;;		Unchanged: 0/0
 34120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34125 ;;Total ram usage:        2 bytes
 34126 ;; Hardware stack levels used: 1
 34127 ;; Hardware stack levels required when called: 6
 34128 ;; This function calls:
 34129 ;;		_I2C1_SetBuffer
 34130 ;;		_I2C1_SetDataCompleteCallback
 34131 ;; This function is called by:
 34132 ;;		_I2C1_DO_TX
 34133 ;;		_I2C1_DO_RX
 34134 ;;		_I2C1_DO_TX_EMPTY
 34135 ;;		_I2C1_DO_ADDRESS_NACK
 34136 ;; This function uses a non-reentrant model
 34137 ;;
 34138                           
 34139                           	psect	text174
 34140  009A2E                     __ptext174:
 34141                           	callstack 0
 34142  009A2E                     _rd1RegCompleteHandler:
 34143                           	callstack 14
 34144                           
 34145                           ; BSR set to: 2
 34146                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 34147                           
 34148                           ;incstack = 0
 34149  009A2E  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34150  009A32  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34151  009A36  0E00               	movlw	0
 34152  009A38  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34153  009A3A  0E01               	movlw	1
 34154  009A3C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34155  009A3E  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 34156                           
 34157                           ; BSR set to: 2
 34158                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34159  009A42  0E00               	movlw	0
 34160  009A44  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34161  009A46  0E00               	movlw	0
 34162  009A48  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34163  009A4A  0E00               	movlw	0
 34164  009A4C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34165  009A4E  0E00               	movlw	0
 34166  009A50  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34167  009A52  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34168                           
 34169                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 34170  009A56  0E02               	movlw	2
 34171  009A58  0012               	return		;funcret
 34172  009A5A                     __end_of_rd1RegCompleteHandler:
 34173                           	callstack 0
 34174                           
 34175 ;; *************** function _wr1RegCompleteHandler *****************
 34176 ;; Defined at:
 34177 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34178 ;; Parameters:    Size  Location     Type
 34179 ;;  p               2   24[COMRAM] PTR void 
 34180 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34181 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34182 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34183 ;; Auto vars:     Size  Location     Type
 34184 ;;		None
 34185 ;; Return value:  Size  Location     Type
 34186 ;;                  1    wreg      enum E360
 34187 ;; Registers used:
 34188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34189 ;; Tracked objects:
 34190 ;;		On entry : 3F/2
 34191 ;;		On exit  : 0/0
 34192 ;;		Unchanged: 0/0
 34193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34198 ;;Total ram usage:        2 bytes
 34199 ;; Hardware stack levels used: 1
 34200 ;; Hardware stack levels required when called: 6
 34201 ;; This function calls:
 34202 ;;		_I2C1_SetBuffer
 34203 ;;		_I2C1_SetDataCompleteCallback
 34204 ;; This function is called by:
 34205 ;;		_I2C1_DO_TX
 34206 ;;		_I2C1_DO_RX
 34207 ;;		_I2C1_DO_TX_EMPTY
 34208 ;;		_I2C1_DO_ADDRESS_NACK
 34209 ;; This function uses a non-reentrant model
 34210 ;;
 34211                           
 34212                           	psect	text175
 34213  009A5A                     __ptext175:
 34214                           	callstack 0
 34215  009A5A                     _wr1RegCompleteHandler:
 34216                           	callstack 14
 34217                           
 34218                           ; BSR set to: 2
 34219                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 34220                           
 34221                           ;incstack = 0
 34222  009A5A  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34223  009A5E  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34224  009A62  0E00               	movlw	0
 34225  009A64  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34226  009A66  0E01               	movlw	1
 34227  009A68  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34228  009A6A  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 34229                           
 34230                           ; BSR set to: 2
 34231                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34232  009A6E  0E00               	movlw	0
 34233  009A70  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34234  009A72  0E00               	movlw	0
 34235  009A74  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34236  009A76  0E00               	movlw	0
 34237  009A78  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34238  009A7A  0E00               	movlw	0
 34239  009A7C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34240  009A7E  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34241                           
 34242                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 34243  009A82  0E04               	movlw	4
 34244  009A84  0012               	return		;funcret
 34245  009A86                     __end_of_wr1RegCompleteHandler:
 34246                           	callstack 0
 34247                           
 34248 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 34249 ;; Defined at:
 34250 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 34251 ;; Parameters:    Size  Location     Type
 34252 ;;  ptr             2   24[COMRAM] PTR void 
 34253 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34254 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34255 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34256 ;; Auto vars:     Size  Location     Type
 34257 ;;		None
 34258 ;; Return value:  Size  Location     Type
 34259 ;;                  1    wreg      enum E527
 34260 ;; Registers used:
 34261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34262 ;; Tracked objects:
 34263 ;;		On entry : 3F/2
 34264 ;;		On exit  : 0/0
 34265 ;;		Unchanged: 0/0
 34266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34271 ;;Total ram usage:        2 bytes
 34272 ;; Hardware stack levels used: 1
 34273 ;; Hardware stack levels required when called: 6
 34274 ;; This function calls:
 34275 ;;		_I2C1_SetBuffer
 34276 ;;		_I2C1_SetDataCompleteCallback
 34277 ;; This function is called by:
 34278 ;;		_I2C1_DO_TX
 34279 ;;		_I2C1_DO_RX
 34280 ;;		_I2C1_DO_TX_EMPTY
 34281 ;;		_I2C1_DO_ADDRESS_NACK
 34282 ;; This function uses a non-reentrant model
 34283 ;;
 34284                           
 34285                           	psect	text176
 34286  009A86                     __ptext176:
 34287                           	callstack 0
 34288  009A86                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 34289                           	callstack 14
 34290                           
 34291                           ; BSR set to: 2
 34292                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 34293                           
 34294                           ;incstack = 0
 34295  009A86  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 34296  009A8A  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 34297  009A8E  0E00               	movlw	0
 34298  009A90  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34299  009A92  0E02               	movlw	2
 34300  009A94  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34301  009A96  ECB8  F04E         	call	_I2C1_SetBuffer	;wreg free
 34302                           
 34303                           ; BSR set to: 2
 34304                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 34305  009A9A  0E00               	movlw	0
 34306  009A9C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34307  009A9E  0E00               	movlw	0
 34308  009AA0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34309  009AA2  0E00               	movlw	0
 34310  009AA4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34311  009AA6  0E00               	movlw	0
 34312  009AA8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34313  009AAA  EC01  F04F         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34314                           
 34315                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 34316  009AAE  0E04               	movlw	4
 34317  009AB0  0012               	return		;funcret
 34318  009AB2                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 34319                           	callstack 0
 34320                           
 34321 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 34322 ;; Defined at:
 34323 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 34324 ;; Parameters:    Size  Location     Type
 34325 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 34326 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34327 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34328 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34329 ;;  ptr             2   22[COMRAM] PTR void 
 34330 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34331 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34332 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34333 ;; Auto vars:     Size  Location     Type
 34334 ;;		None
 34335 ;; Return value:  Size  Location     Type
 34336 ;;                  1    wreg      void 
 34337 ;; Registers used:
 34338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34339 ;; Tracked objects:
 34340 ;;		On entry : 33/2
 34341 ;;		On exit  : 0/0
 34342 ;;		Unchanged: 0/0
 34343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34347 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34348 ;;Total ram usage:        4 bytes
 34349 ;; Hardware stack levels used: 1
 34350 ;; Hardware stack levels required when called: 5
 34351 ;; This function calls:
 34352 ;;		_I2C1_SetCallback
 34353 ;; This function is called by:
 34354 ;;		_wr1RegCompleteHandler
 34355 ;;		_rd1RegCompleteHandler
 34356 ;;		_rd2RegCompleteHandler
 34357 ;;		_wr2RegCompleteHandler
 34358 ;;		_rdBlkRegCompleteHandler
 34359 ;;		_i2c_readDataBlock
 34360 ;;		_I2C1_Read1ByteRegister
 34361 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34362 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34363 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34364 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34365 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34366 ;; This function uses a non-reentrant model
 34367 ;;
 34368                           
 34369                           	psect	text177
 34370  009E02                     __ptext177:
 34371                           	callstack 0
 34372  009E02                     _I2C1_SetDataCompleteCallback:
 34373                           	callstack 20
 34374                           
 34375                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 34376                           
 34377                           ;incstack = 0
 34378  009E02  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 34379  009E06  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 34380  009E0A  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 34381  009E0E  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 34382  009E12  0E00               	movlw	0
 34383  009E14  EC46  F046         	call	_I2C1_SetCallback
 34384  009E18  0012               	return		;funcret
 34385  009E1A                     __end_of_I2C1_SetDataCompleteCallback:
 34386                           	callstack 0
 34387                           
 34388 ;; *************** function _I2C1_SetCallback *****************
 34389 ;; Defined at:
 34390 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 34391 ;; Parameters:    Size  Location     Type
 34392 ;;  idx             1    wreg     enum E10460
 34393 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 34394 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34395 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34396 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34397 ;;  ptr             2   17[COMRAM] PTR void 
 34398 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34399 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34400 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34401 ;; Auto vars:     Size  Location     Type
 34402 ;;  idx             1   19[COMRAM] enum E10460
 34403 ;; Return value:  Size  Location     Type
 34404 ;;                  1    wreg      void 
 34405 ;; Registers used:
 34406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34407 ;; Tracked objects:
 34408 ;;		On entry : 33/2
 34409 ;;		On exit  : 0/0
 34410 ;;		Unchanged: 0/0
 34411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34415 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34416 ;;Total ram usage:        5 bytes
 34417 ;; Hardware stack levels used: 1
 34418 ;; Hardware stack levels required when called: 4
 34419 ;; This function calls:
 34420 ;;		Nothing
 34421 ;; This function is called by:
 34422 ;;		_I2C1_SetDataCompleteCallback
 34423 ;;		_I2C1_SetAddressNackCallback
 34424 ;; This function uses a non-reentrant model
 34425 ;;
 34426                           
 34427                           	psect	text178
 34428  008C8C                     __ptext178:
 34429                           	callstack 0
 34430  008C8C                     _I2C1_SetCallback:
 34431                           	callstack 20
 34432                           
 34433                           ;incstack = 0
 34434                           ;I2C1_SetCallback@idx stored from wreg
 34435  008C8C  6E14               	movwf	I2C1_SetCallback@idx^0,c
 34436                           
 34437                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 34438  008C8E  5010               	movf	I2C1_SetCallback@cb^0,w,c
 34439  008C90  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 34440  008C92  B4D8               	btfsc	status,2,c
 34441  008C94  D019               	goto	l20066
 34442                           
 34443                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 34444  008C96  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34445  008C98  0D02               	mullw	2
 34446  008C9A  0E3C               	movlw	low _I2C1_Status
 34447  008C9C  24F3               	addwf	243,w,c
 34448  008C9E  6ED9               	movwf	fsr2l,c
 34449  008CA0  0E02               	movlw	high _I2C1_Status
 34450  008CA2  20F4               	addwfc	prodh,w,c
 34451  008CA4  6EDA               	movwf	fsr2h,c
 34452  008CA6  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 34453  008CAA  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 34454                           
 34455                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 34456  008CAE  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34457  008CB0  0D02               	mullw	2
 34458  008CB2  0E48               	movlw	low (_I2C1_Status+12)
 34459  008CB4  24F3               	addwf	243,w,c
 34460  008CB6  6ED9               	movwf	fsr2l,c
 34461  008CB8  0E02               	movlw	high (_I2C1_Status+12)
 34462  008CBA  20F4               	addwfc	prodh,w,c
 34463  008CBC  6EDA               	movwf	fsr2h,c
 34464  008CBE  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 34465  008CC2  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 34466                           
 34467                           ;mcc_generated_files/i2c1_master.c: 304:     }
 34468  008CC6  0012               	return	
 34469  008CC8                     l20066:
 34470                           
 34471                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 34472  008CC8  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34473  008CCA  0D02               	mullw	2
 34474  008CCC  0E3C               	movlw	low _I2C1_Status
 34475  008CCE  24F3               	addwf	243,w,c
 34476  008CD0  6ED9               	movwf	fsr2l,c
 34477  008CD2  0E02               	movlw	high _I2C1_Status
 34478  008CD4  20F4               	addwfc	prodh,w,c
 34479  008CD6  6EDA               	movwf	fsr2h,c
 34480  008CD8  0E08               	movlw	low _I2C1_CallbackReturnStop
 34481  008CDA  6EDE               	movwf	postinc2,c
 34482  008CDC  0EA0               	movlw	high _I2C1_CallbackReturnStop
 34483  008CDE  6EDD               	movwf	postdec2,c
 34484                           
 34485                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 34486  008CE0  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34487  008CE2  0D02               	mullw	2
 34488  008CE4  0E48               	movlw	low (_I2C1_Status+12)
 34489  008CE6  24F3               	addwf	243,w,c
 34490  008CE8  6ED9               	movwf	fsr2l,c
 34491  008CEA  0E02               	movlw	high (_I2C1_Status+12)
 34492  008CEC  20F4               	addwfc	prodh,w,c
 34493  008CEE  6EDA               	movwf	fsr2h,c
 34494  008CF0  0E00               	movlw	0
 34495  008CF2  6EDE               	movwf	postinc2,c
 34496  008CF4  0E00               	movlw	0
 34497  008CF6  6EDD               	movwf	postdec2,c
 34498  008CF8  0012               	return		;funcret
 34499  008CFA                     __end_of_I2C1_SetCallback:
 34500                           	callstack 0
 34501                           
 34502 ;; *************** function _I2C1_SetBuffer *****************
 34503 ;; Defined at:
 34504 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 34505 ;; Parameters:    Size  Location     Type
 34506 ;;  buffer          2   15[COMRAM] PTR void 
 34507 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 34508 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 34509 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 34510 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 34511 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 34512 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 34513 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34514 ;;  bufferSize      2   17[COMRAM] unsigned int 
 34515 ;; Auto vars:     Size  Location     Type
 34516 ;;		None
 34517 ;; Return value:  Size  Location     Type
 34518 ;;                  1    wreg      void 
 34519 ;; Registers used:
 34520 ;;		wreg, status,2, status,0
 34521 ;; Tracked objects:
 34522 ;;		On entry : 0/2
 34523 ;;		On exit  : 3F/2
 34524 ;;		Unchanged: 0/0
 34525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34530 ;;Total ram usage:        4 bytes
 34531 ;; Hardware stack levels used: 1
 34532 ;; Hardware stack levels required when called: 4
 34533 ;; This function calls:
 34534 ;;		Nothing
 34535 ;; This function is called by:
 34536 ;;		_wr1RegCompleteHandler
 34537 ;;		_i2c_writeNBytes
 34538 ;;		_rd1RegCompleteHandler
 34539 ;;		_rd2RegCompleteHandler
 34540 ;;		_wr2RegCompleteHandler
 34541 ;;		_rdBlkRegCompleteHandler
 34542 ;;		_i2c_readDataBlock
 34543 ;;		_I2C1_Read1ByteRegister
 34544 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34545 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34546 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34547 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34548 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34549 ;; This function uses a non-reentrant model
 34550 ;;
 34551                           
 34552                           	psect	text179
 34553  009D70                     __ptext179:
 34554                           	callstack 0
 34555  009D70                     _I2C1_SetBuffer:
 34556                           	callstack 21
 34557                           
 34558                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34559                           
 34560                           ;incstack = 0
 34561  009D70  0102               	movlb	2	; () banked
 34562  009D72  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34563  009D74  0012               	return	
 34564                           
 34565                           ; BSR set to: 2
 34566                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34567  009D76  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34568  009D7A  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34569                           
 34570                           ; BSR set to: 2
 34571                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34572  009D7E  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34573  009D82  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34574                           
 34575                           ; BSR set to: 2
 34576                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34577  009D86  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34578                           
 34579                           ; BSR set to: 2
 34580  009D88  0012               	return		;funcret
 34581  009D8A                     __end_of_I2C1_SetBuffer:
 34582                           	callstack 0
 34583                           
 34584 ;; *************** function _I2C1_MasterStop *****************
 34585 ;; Defined at:
 34586 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34587 ;; Parameters:    Size  Location     Type
 34588 ;;		None
 34589 ;; Auto vars:     Size  Location     Type
 34590 ;;		None
 34591 ;; Return value:  Size  Location     Type
 34592 ;;                  1    wreg      void 
 34593 ;; Registers used:
 34594 ;;		None
 34595 ;; Tracked objects:
 34596 ;;		On entry : 0/2
 34597 ;;		On exit  : 0/0
 34598 ;;		Unchanged: 0/0
 34599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34604 ;;Total ram usage:        0 bytes
 34605 ;; Hardware stack levels used: 1
 34606 ;; Hardware stack levels required when called: 4
 34607 ;; This function calls:
 34608 ;;		Nothing
 34609 ;; This function is called by:
 34610 ;;		_I2C1_DO_SEND_STOP
 34611 ;; This function uses a non-reentrant model
 34612 ;;
 34613                           
 34614                           	psect	text180
 34615  00A00C                     __ptext180:
 34616                           	callstack 0
 34617  00A00C                     _I2C1_MasterStop:
 34618                           	callstack 15
 34619                           
 34620                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34621                           
 34622                           ; BSR set to: 2
 34623                           ;incstack = 0
 34624  00A00C  8497               	bsf	151,2,c	;volatile
 34625  00A00E  0012               	return		;funcret
 34626  00A010                     __end_of_I2C1_MasterStop:
 34627                           	callstack 0
 34628                           
 34629 ;; *************** function _I2C1_MasterEnableRestart *****************
 34630 ;; Defined at:
 34631 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34632 ;; Parameters:    Size  Location     Type
 34633 ;;		None
 34634 ;; Auto vars:     Size  Location     Type
 34635 ;;		None
 34636 ;; Return value:  Size  Location     Type
 34637 ;;                  1    wreg      void 
 34638 ;; Registers used:
 34639 ;;		None
 34640 ;; Tracked objects:
 34641 ;;		On entry : 0/2
 34642 ;;		On exit  : 0/0
 34643 ;;		Unchanged: 0/0
 34644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34649 ;;Total ram usage:        0 bytes
 34650 ;; Hardware stack levels used: 1
 34651 ;; Hardware stack levels required when called: 4
 34652 ;; This function calls:
 34653 ;;		Nothing
 34654 ;; This function is called by:
 34655 ;;		_I2C1_DO_SEND_RESTART_READ
 34656 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34657 ;;		_I2C1_DO_SEND_RESTART
 34658 ;; This function uses a non-reentrant model
 34659 ;;
 34660                           
 34661                           	psect	text181
 34662  00A010                     __ptext181:
 34663                           	callstack 0
 34664  00A010                     _I2C1_MasterEnableRestart:
 34665                           	callstack 15
 34666                           
 34667                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34668                           
 34669                           ;incstack = 0
 34670  00A010  8297               	bsf	151,1,c	;volatile
 34671  00A012  0012               	return		;funcret
 34672  00A014                     __end_of_I2C1_MasterEnableRestart:
 34673                           	callstack 0
 34674                           
 34675 ;; *************** function _I2C1_MasterStart *****************
 34676 ;; Defined at:
 34677 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34678 ;; Parameters:    Size  Location     Type
 34679 ;;		None
 34680 ;; Auto vars:     Size  Location     Type
 34681 ;;		None
 34682 ;; Return value:  Size  Location     Type
 34683 ;;                  1    wreg      void 
 34684 ;; Registers used:
 34685 ;;		None
 34686 ;; Tracked objects:
 34687 ;;		On entry : 3F/2
 34688 ;;		On exit  : 3F/2
 34689 ;;		Unchanged: 3F/0
 34690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34695 ;;Total ram usage:        0 bytes
 34696 ;; Hardware stack levels used: 1
 34697 ;; Hardware stack levels required when called: 4
 34698 ;; This function calls:
 34699 ;;		Nothing
 34700 ;; This function is called by:
 34701 ;;		_I2C1_MasterOperation
 34702 ;; This function uses a non-reentrant model
 34703 ;;
 34704                           
 34705                           	psect	text182
 34706  00A014                     __ptext182:
 34707                           	callstack 0
 34708  00A014                     _I2C1_MasterStart:
 34709                           	callstack 19
 34710                           
 34711                           ; BSR set to: 2
 34712                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34713                           
 34714                           ;incstack = 0
 34715  00A014  8097               	bsf	151,0,c	;volatile
 34716                           
 34717                           ; BSR set to: 2
 34718  00A016  0012               	return		;funcret
 34719  00A018                     __end_of_I2C1_MasterStart:
 34720                           	callstack 0
 34721                           
 34722 ;; *************** function _I2C1_Close *****************
 34723 ;; Defined at:
 34724 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34725 ;; Parameters:    Size  Location     Type
 34726 ;;		None
 34727 ;; Auto vars:     Size  Location     Type
 34728 ;;  returnValue     1   15[COMRAM] enum E355
 34729 ;; Return value:  Size  Location     Type
 34730 ;;                  1    wreg      enum E355
 34731 ;; Registers used:
 34732 ;;		wreg, status,2, cstack
 34733 ;; Tracked objects:
 34734 ;;		On entry : 0/2
 34735 ;;		On exit  : 33/2
 34736 ;;		Unchanged: 0/0
 34737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34742 ;;Total ram usage:        1 bytes
 34743 ;; Hardware stack levels used: 1
 34744 ;; Hardware stack levels required when called: 5
 34745 ;; This function calls:
 34746 ;;		_I2C1_MasterClearIrq
 34747 ;;		_I2C1_MasterClose
 34748 ;;		_I2C1_MasterDisableIrq
 34749 ;; This function is called by:
 34750 ;;		_i2c_writeNBytes
 34751 ;;		_i2c_readDataBlock
 34752 ;;		_I2C1_Read1ByteRegister
 34753 ;; This function uses a non-reentrant model
 34754 ;;
 34755                           
 34756                           	psect	text183
 34757  009C54                     __ptext183:
 34758                           	callstack 0
 34759  009C54                     _I2C1_Close:
 34760                           	callstack 20
 34761                           
 34762                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34763                           
 34764                           ; BSR set to: 2
 34765                           ;incstack = 0
 34766  009C54  0E01               	movlw	1
 34767  009C56  6E10               	movwf	I2C1_Close@returnValue^0,c
 34768                           
 34769                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34770  009C58  0102               	movlb	2	; () banked
 34771  009C5A  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34772  009C5C  D00A               	goto	l20500
 34773                           
 34774                           ; BSR set to: 2
 34775                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34776  009C5E  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34777                           
 34778                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34779  009C60  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34780                           
 34781                           ; BSR set to: 2
 34782                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34783  009C62  ECF1  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 34784                           
 34785                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34786  009C66  EC0C  F050         	call	_I2C1_MasterDisableIrq	;wreg free
 34787                           
 34788                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34789  009C6A  EC0E  F050         	call	_I2C1_MasterClose	;wreg free
 34790                           
 34791                           ; BSR set to: 14
 34792                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34793  009C6E  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34794  009C72                     l20500:
 34795                           
 34796                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34797  009C72  5010               	movf	I2C1_Close@returnValue^0,w,c
 34798  009C74  0012               	return		;funcret
 34799  009C76                     __end_of_I2C1_Close:
 34800                           	callstack 0
 34801                           
 34802 ;; *************** function _I2C1_MasterDisableIrq *****************
 34803 ;; Defined at:
 34804 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34805 ;; Parameters:    Size  Location     Type
 34806 ;;		None
 34807 ;; Auto vars:     Size  Location     Type
 34808 ;;		None
 34809 ;; Return value:  Size  Location     Type
 34810 ;;                  1    wreg      void 
 34811 ;; Registers used:
 34812 ;;		None
 34813 ;; Tracked objects:
 34814 ;;		On entry : 3F/E
 34815 ;;		On exit  : 3F/E
 34816 ;;		Unchanged: 0/0
 34817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34822 ;;Total ram usage:        0 bytes
 34823 ;; Hardware stack levels used: 1
 34824 ;; Hardware stack levels required when called: 4
 34825 ;; This function calls:
 34826 ;;		Nothing
 34827 ;; This function is called by:
 34828 ;;		_I2C1_Close
 34829 ;; This function uses a non-reentrant model
 34830 ;;
 34831                           
 34832                           	psect	text184
 34833  00A018                     __ptext184:
 34834                           	callstack 0
 34835  00A018                     _I2C1_MasterDisableIrq:
 34836                           	callstack 20
 34837                           
 34838                           ; BSR set to: 14
 34839                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34840                           
 34841                           ;incstack = 0
 34842  00A018  91C5               	bcf	197,0,b	;volatile
 34843                           
 34844                           ; BSR set to: 14
 34845  00A01A  0012               	return		;funcret
 34846  00A01C                     __end_of_I2C1_MasterDisableIrq:
 34847                           	callstack 0
 34848                           
 34849 ;; *************** function _I2C1_MasterClose *****************
 34850 ;; Defined at:
 34851 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34852 ;; Parameters:    Size  Location     Type
 34853 ;;		None
 34854 ;; Auto vars:     Size  Location     Type
 34855 ;;		None
 34856 ;; Return value:  Size  Location     Type
 34857 ;;                  1    wreg      void 
 34858 ;; Registers used:
 34859 ;;		None
 34860 ;; Tracked objects:
 34861 ;;		On entry : 3F/E
 34862 ;;		On exit  : 3F/E
 34863 ;;		Unchanged: 3F/0
 34864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34869 ;;Total ram usage:        0 bytes
 34870 ;; Hardware stack levels used: 1
 34871 ;; Hardware stack levels required when called: 4
 34872 ;; This function calls:
 34873 ;;		Nothing
 34874 ;; This function is called by:
 34875 ;;		_I2C1_Close
 34876 ;; This function uses a non-reentrant model
 34877 ;;
 34878                           
 34879                           	psect	text185
 34880  00A01C                     __ptext185:
 34881                           	callstack 0
 34882  00A01C                     _I2C1_MasterClose:
 34883                           	callstack 20
 34884                           
 34885                           ; BSR set to: 14
 34886                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34887                           
 34888                           ; BSR set to: 14
 34889                           ;incstack = 0
 34890  00A01C  9A96               	bcf	150,5,c	;volatile
 34891                           
 34892                           ; BSR set to: 14
 34893  00A01E  0012               	return		;funcret
 34894  00A020                     __end_of_I2C1_MasterClose:
 34895                           	callstack 0
 34896                           
 34897 ;; *************** function _I2C1_MasterClearIrq *****************
 34898 ;; Defined at:
 34899 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 34900 ;; Parameters:    Size  Location     Type
 34901 ;;		None
 34902 ;; Auto vars:     Size  Location     Type
 34903 ;;		None
 34904 ;; Return value:  Size  Location     Type
 34905 ;;                  1    wreg      void 
 34906 ;; Registers used:
 34907 ;;		None
 34908 ;; Tracked objects:
 34909 ;;		On entry : 33/2
 34910 ;;		On exit  : 3F/E
 34911 ;;		Unchanged: 0/0
 34912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34917 ;;Total ram usage:        0 bytes
 34918 ;; Hardware stack levels used: 1
 34919 ;; Hardware stack levels required when called: 4
 34920 ;; This function calls:
 34921 ;;		Nothing
 34922 ;; This function is called by:
 34923 ;;		_I2C1_Open
 34924 ;;		_I2C1_Close
 34925 ;;		_I2C1_MasterFsm
 34926 ;; This function uses a non-reentrant model
 34927 ;;
 34928                           
 34929                           	psect	text186
 34930  009FE2                     __ptext186:
 34931                           	callstack 0
 34932  009FE2                     _I2C1_MasterClearIrq:
 34933                           	callstack 20
 34934                           
 34935                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 34936                           
 34937                           ; BSR set to: 14
 34938                           ;incstack = 0
 34939  009FE2  010E               	movlb	14	; () banked
 34940  009FE4  91CD               	bcf	205,0,b	;volatile
 34941                           
 34942                           ; BSR set to: 14
 34943  009FE6  0012               	return		;funcret
 34944  009FE8                     __end_of_I2C1_MasterClearIrq:
 34945                           	callstack 0
 34946                           
 34947 ;; *************** function _INTERRUPT_InterruptManager *****************
 34948 ;; Defined at:
 34949 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 34950 ;; Parameters:    Size  Location     Type
 34951 ;;		None
 34952 ;; Auto vars:     Size  Location     Type
 34953 ;;		None
 34954 ;; Return value:  Size  Location     Type
 34955 ;;                  1    wreg      void 
 34956 ;; Registers used:
 34957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34958 ;; Tracked objects:
 34959 ;;		On entry : 0/0
 34960 ;;		On exit  : 0/0
 34961 ;;		Unchanged: 0/0
 34962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34965 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34966 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34967 ;;Total ram usage:        6 bytes
 34968 ;; Hardware stack levels used: 1
 34969 ;; Hardware stack levels required when called: 3
 34970 ;; This function calls:
 34971 ;;		Absolute function
 34972 ;;		_EUSART1_Receive_ISR
 34973 ;;		_EUSART1_Transmit_ISR
 34974 ;;		_TMR0_ISR
 34975 ;;		_TMR1_ISR
 34976 ;;		_TMR2_ISR
 34977 ;; This function is called by:
 34978 ;;		Interrupt level 2
 34979 ;; This function uses a non-reentrant model
 34980 ;;
 34981                           
 34982                           	psect	intcode
 34983  000008                     __pintcode:
 34984                           	callstack 0
 34985  000008                     _INTERRUPT_InterruptManager:
 34986                           	callstack 14
 34987                           
 34988                           ; BSR set to: 14
 34989                           ;incstack = 0
 34990  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34991  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 34992  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 34993  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 34994  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 34995  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 34996  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 34997                           
 34998                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 34999  000022  010E               	movlb	14	; () banked
 35000  000024  BBC2               	btfsc	194,5,b	;volatile
 35001                           
 35002                           ; BSR set to: 14
 35003  000026  ABCA               	btfss	202,5,b	;volatile
 35004  000028  D003               	goto	i2l867
 35005                           
 35006                           ; BSR set to: 14
 35007                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 35008  00002A  ECD0  F04D         	call	_TMR0_ISR	;wreg free
 35009                           
 35010                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 35011  00002E  D028               	goto	i2l873
 35012  000030                     i2l867:
 35013                           
 35014                           ; BSR set to: 14
 35015  000030  ACF2               	btfss	242,6,c	;volatile
 35016  000032  D026               	goto	i2l873
 35017                           
 35018                           ; BSR set to: 14
 35019                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 35020  000034  B9C5               	btfsc	197,4,b	;volatile
 35021                           
 35022                           ; BSR set to: 14
 35023  000036  A9CD               	btfss	205,4,b	;volatile
 35024  000038  D009               	goto	i2l870
 35025                           
 35026                           ; BSR set to: 14
 35027                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 35028  00003A  D801               	call	i2u2310_48
 35029  00003C  D021               	goto	i2l873
 35030  00003E                     i2u2310_48:
 35031  00003E  0005               	push	
 35032  000040  6EFA               	movwf	pclath,c
 35033  000042  0102               	movlb	2	; () banked
 35034  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 35035  000046  6EFD               	movwf	tosl,c
 35036  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 35037  00004A  D00B               	goto	L114
 35038  00004C                     i2l870:
 35039                           
 35040                           ; BSR set to: 14
 35041  00004C  BBC5               	btfsc	197,5,b	;volatile
 35042                           
 35043                           ; BSR set to: 14
 35044  00004E  ABCD               	btfss	205,5,b	;volatile
 35045  000050  D00C               	goto	i2l872
 35046                           
 35047                           ; BSR set to: 14
 35048                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 35049  000052  D801               	call	i2u2313_48
 35050  000054  D015               	goto	i2l873
 35051  000056                     i2u2313_48:
 35052  000056  0005               	push	
 35053  000058  6EFA               	movwf	pclath,c
 35054  00005A  0102               	movlb	2	; () banked
 35055  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 35056  00005E  6EFD               	movwf	tosl,c
 35057  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 35058  000062                     L114:
 35059  000062  6EFE               	movwf	tosh,c
 35060  000064  6AFF               	clrf	tosu,c
 35061  000066  50FA               	movf	pclath,w,c
 35062  000068  0012               	return		;indir
 35063  00006A                     i2l872:
 35064                           
 35065                           ; BSR set to: 14
 35066  00006A  B1C6               	btfsc	198,0,b	;volatile
 35067                           
 35068                           ; BSR set to: 14
 35069  00006C  A1CE               	btfss	206,0,b	;volatile
 35070  00006E  D003               	goto	i2l874
 35071                           
 35072                           ; BSR set to: 14
 35073                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 35074  000070  EC2D  F04B         	call	_TMR1_ISR	;wreg free
 35075                           
 35076                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 35077  000074  D005               	goto	i2l873
 35078  000076                     i2l874:
 35079                           
 35080                           ; BSR set to: 14
 35081  000076  B3C6               	btfsc	198,1,b	;volatile
 35082                           
 35083                           ; BSR set to: 14
 35084  000078  A3CE               	btfss	206,1,b	;volatile
 35085  00007A  D002               	goto	i2l873
 35086                           
 35087                           ; BSR set to: 14
 35088                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 35089  00007C  EC74  F036         	call	_TMR2_ISR	;wreg free
 35090  000080                     i2l873:
 35091                           
 35092                           ; BSR set to: 14
 35093  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 35094  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 35095  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 35096  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 35097  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 35098  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 35099  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 35100  00009A  0011               	retfie		f
 35101  00009C                     __end_of_INTERRUPT_InterruptManager:
 35102                           	callstack 0
 35103                           
 35104 ;; *************** function _TMR2_ISR *****************
 35105 ;; Defined at:
 35106 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 35107 ;; Parameters:    Size  Location     Type
 35108 ;;		None
 35109 ;; Auto vars:     Size  Location     Type
 35110 ;;		None
 35111 ;; Return value:  Size  Location     Type
 35112 ;;                  1    wreg      void 
 35113 ;; Registers used:
 35114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35115 ;; Tracked objects:
 35116 ;;		On entry : 3F/E
 35117 ;;		On exit  : 0/0
 35118 ;;		Unchanged: 0/0
 35119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35124 ;;Total ram usage:        0 bytes
 35125 ;; Hardware stack levels used: 1
 35126 ;; Hardware stack levels required when called: 2
 35127 ;; This function calls:
 35128 ;;		Absolute function
 35129 ;;		_ReadADC
 35130 ;;		_TMR2_DefaultInterruptHandler
 35131 ;;		_controlTimeslots
 35132 ;;		_refreshSegment
 35133 ;; This function is called by:
 35134 ;;		_INTERRUPT_InterruptManager
 35135 ;; This function uses a non-reentrant model
 35136 ;;
 35137                           
 35138                           	psect	text188
 35139  006CE8                     __ptext188:
 35140                           	callstack 0
 35141  006CE8                     _TMR2_ISR:
 35142                           	callstack 14
 35143                           
 35144                           ; BSR set to: 14
 35145                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 35146                           
 35147                           ;incstack = 0
 35148  006CE8  93CE               	bcf	206,1,b	;volatile
 35149                           
 35150                           ; BSR set to: 14
 35151                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 35152  006CEA  ECE0  F048         	call	_ReadADC	;wreg free
 35153                           
 35154                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 35155  006CEE  EC78  F042         	call	_refreshSegment	;wreg free
 35156                           
 35157                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 35158  006CF2  0101               	movlb	1	; () banked
 35159  006CF4  51A1               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 35160  006CF6  A4D8               	btfss	status,2,c
 35161                           
 35162                           ; BSR set to: 1
 35163                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 35164  006CF8  07A1               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 35165                           
 35166                           ; BSR set to: 1
 35167                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 35168  006CFA  519F               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 35169  006CFC  B4D8               	btfsc	status,2,c
 35170  006CFE  D002               	goto	i2l17022
 35171                           
 35172                           ; BSR set to: 1
 35173                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 35174  006D00  079F               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 35175                           
 35176                           ;mcc_generated_files/tmr2.c: 201:                 }
 35177  006D02  D089               	goto	i2l17094
 35178  006D04                     i2l17022:
 35179                           
 35180                           ; BSR set to: 1
 35181                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 35182  006D04  0E32               	movlw	50
 35183  006D06  6F9F               	movwf	(_ts_system+1)& (0+255),b	;volatile
 35184                           
 35185                           ; BSR set to: 1
 35186                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 35187  006D08  EC99  F032         	call	_controlTimeslots	;wreg free
 35188                           
 35189                           ; BSR set to: 1
 35190                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 35191  006D0C  0100               	movlb	0	; () banked
 35192  006D0E  5192               	movf	_Counterchoose& (0+255),w,b
 35193  006D10  A4D8               	btfss	status,2,c
 35194  006D12  D002               	goto	i2l17030
 35195                           
 35196                           ; BSR set to: 0
 35197                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 35198  006D14  0E01               	movlw	1
 35199  006D16  D001               	goto	L115
 35200  006D18                     i2l17030:
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 35204  006D18  0E00               	movlw	0
 35205  006D1A                     L115:
 35206  006D1A  6F92               	movwf	_Counterchoose& (0+255),b
 35207                           
 35208                           ; BSR set to: 0
 35209                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 35210                           
 35211                           ;mcc_generated_files/tmr2.c: 217:                                }
 35212  006D1C  0101               	movlb	1	; () banked
 35213  006D1E  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 35214  006D20  A4D8               	btfss	status,2,c
 35215  006D22  D034               	goto	i2l17056
 35216                           
 35217                           ; BSR set to: 1
 35218                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 35219  006D24  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 35220  006D26  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 35221  006D28  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 35222  006D2A  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 35223  006D2C  B4D8               	btfsc	status,2,c
 35224  006D2E  D008               	goto	i2l1266
 35225                           
 35226                           ; BSR set to: 1
 35227  006D30  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 35228  006D32  B4D8               	btfsc	status,2,c
 35229  006D34  D005               	goto	i2l1266
 35230                           
 35231                           ; BSR set to: 1
 35232                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 35233  006D36  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 35234  006D38  0E00               	movlw	0
 35235  006D3A  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 35236  006D3C  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 35237  006D3E  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 35238  006D40                     i2l1266:
 35239                           
 35240                           ; BSR set to: 1
 35241                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 35242  006D40  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35243  006D42  A4D8               	btfss	status,2,c
 35244  006D44  D00E               	goto	i2l17046
 35245                           
 35246                           ; BSR set to: 1
 35247                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 35248  006D46  057B               	decf	_powerControl_st& (0+255),w,b
 35249  006D48  A4D8               	btfss	status,2,c
 35250  006D4A  D004               	goto	i2u1925_40
 35251                           
 35252                           ; BSR set to: 1
 35253                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 35254  006D4C  0100               	movlb	0	; () banked
 35255  006D4E  0592               	decf	_Counterchoose& (0+255),w,b
 35256  006D50  A4D8               	btfss	status,2,c
 35257  006D52  D061               	goto	i2l17094
 35258  006D54                     i2u1925_40:
 35259                           
 35260                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 35261  006D54  0E01               	movlw	1
 35262  006D56  0101               	movlb	1	; () banked
 35263  006D58  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35264  006D5A  0E00               	movlw	0
 35265  006D5C  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35266  006D5E  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35267  006D60  D013               	goto	L116
 35268  006D62                     i2l17046:
 35269                           
 35270                           ; BSR set to: 1
 35271  006D62  0E02               	movlw	2
 35272  006D64  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35273  006D66  A4D8               	btfss	status,2,c
 35274  006D68  D056               	goto	i2l17094
 35275                           
 35276                           ; BSR set to: 1
 35277                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 35278  006D6A  057B               	decf	_powerControl_st& (0+255),w,b
 35279  006D6C  A4D8               	btfss	status,2,c
 35280  006D6E  D004               	goto	i2u1928_40
 35281                           
 35282                           ; BSR set to: 1
 35283                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 35284  006D70  0100               	movlb	0	; () banked
 35285  006D72  0592               	decf	_Counterchoose& (0+255),w,b
 35286  006D74  A4D8               	btfss	status,2,c
 35287  006D76  D04F               	goto	i2l17094
 35288  006D78                     i2u1928_40:
 35289                           
 35290                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 35291  006D78  0EFF               	movlw	255
 35292  006D7A  0101               	movlb	1	; () banked
 35293  006D7C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35294  006D7E  0EFF               	movlw	255
 35295  006D80  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35296  006D82  0EFF               	movlw	255
 35297  006D84  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35298  006D86  0EFF               	movlw	255
 35299  006D88                     L116:
 35300  006D88  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 35301                           
 35302                           ;mcc_generated_files/tmr2.c: 263:                            }
 35303  006D8A  D045               	goto	i2l17094
 35304  006D8C                     i2l17056:
 35305                           
 35306                           ; BSR set to: 1
 35307                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 35308  006D8C  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 35309  006D8E  A4D8               	btfss	status,2,c
 35310  006D90  D01C               	goto	i2l1277
 35311                           
 35312                           ; BSR set to: 1
 35313                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 35314  006D92  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35315  006D94  A4D8               	btfss	status,2,c
 35316  006D96  D00B               	goto	i2l17066
 35317                           
 35318                           ; BSR set to: 1
 35319                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35320  006D98  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35321  006D9A  B4D8               	btfsc	status,2,c
 35322  006D9C  D016               	goto	i2l1277
 35323                           
 35324                           ; BSR set to: 1
 35325                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 35326  006D9E  0E01               	movlw	1
 35327  006DA0  0100               	movlb	0	; () banked
 35328  006DA2  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35329  006DA4  0E00               	movlw	0
 35330  006DA6  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35331  006DA8  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35332  006DAA  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35333  006DAC  D00E               	goto	i2l1277
 35334  006DAE                     i2l17066:
 35335                           
 35336                           ; BSR set to: 1
 35337  006DAE  0E02               	movlw	2
 35338  006DB0  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35339  006DB2  A4D8               	btfss	status,2,c
 35340  006DB4  D00A               	goto	i2l1277
 35341                           
 35342                           ; BSR set to: 1
 35343                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35344  006DB6  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35345  006DB8  B4D8               	btfsc	status,2,c
 35346  006DBA  D007               	goto	i2l1277
 35347                           
 35348                           ; BSR set to: 1
 35349                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 35350  006DBC  0E01               	movlw	1
 35351  006DBE  0100               	movlb	0	; () banked
 35352  006DC0  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35353  006DC2  0E00               	movlw	0
 35354  006DC4  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35355  006DC6  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35356  006DC8  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35357  006DCA                     i2l1277:
 35358                           
 35359                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 35360  006DCA  0101               	movlb	1	; () banked
 35361  006DCC  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35362  006DCE  A4D8               	btfss	status,2,c
 35363  006DD0  D022               	goto	i2l17094
 35364                           
 35365                           ; BSR set to: 1
 35366  006DD2  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 35367  006DD4  A4D8               	btfss	status,2,c
 35368  006DD6  D01F               	goto	i2l17094
 35369                           
 35370                           ; BSR set to: 1
 35371                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 35372  006DD8  519E               	movf	_ts_system& (0+255),w,b	;volatile
 35373  006DDA  B4D8               	btfsc	status,2,c
 35374  006DDC  D002               	goto	i2l17080
 35375                           
 35376                           ; BSR set to: 1
 35377                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 35378  006DDE  079E               	decf	_ts_system& (0+255),f,b	;volatile
 35379                           
 35380                           ;mcc_generated_files/tmr2.c: 311:                                            }
 35381  006DE0  D01A               	goto	i2l17094
 35382  006DE2                     i2l17080:
 35383                           
 35384                           ; BSR set to: 1
 35385                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 35386  006DE2  0E0A               	movlw	10
 35387  006DE4  6F9E               	movwf	_ts_system& (0+255),b	;volatile
 35388                           
 35389                           ; BSR set to: 1
 35390                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 35391  006DE6  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35392  006DE8  A4D8               	btfss	status,2,c
 35393  006DEA  D009               	goto	i2l17088
 35394                           
 35395                           ; BSR set to: 1
 35396                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 35397  006DEC  0100               	movlb	0	; () banked
 35398  006DEE  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 35399                           
 35400                           ; BSR set to: 0
 35401                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 35402  006DF0  0E01               	movlw	1
 35403  006DF2  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35404  006DF4  0E00               	movlw	0
 35405  006DF6  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35406  006DF8  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35407  006DFA  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35408                           
 35409                           ;mcc_generated_files/tmr2.c: 322:                                                }
 35410  006DFC  D00C               	goto	i2l17094
 35411  006DFE                     i2l17088:
 35412                           
 35413                           ; BSR set to: 1
 35414  006DFE  0E02               	movlw	2
 35415  006E00  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35416  006E02  A4D8               	btfss	status,2,c
 35417  006E04  D008               	goto	i2l17094
 35418                           
 35419                           ; BSR set to: 1
 35420                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 35421  006E06  0100               	movlb	0	; () banked
 35422  006E08  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 35423                           
 35424                           ; BSR set to: 0
 35425                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 35426  006E0A  0E01               	movlw	1
 35427  006E0C  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35428  006E0E  0E00               	movlw	0
 35429  006E10  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35430  006E12  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35431  006E14  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35432  006E16                     i2l17094:
 35433                           
 35434                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 35435  006E16  0102               	movlb	2	; () banked
 35436  006E18  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35437  006E1A  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35438  006E1C  B4D8               	btfsc	status,2,c
 35439  006E1E  0012               	return	
 35440                           
 35441                           ; BSR set to: 2
 35442                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 35443  006E20  D801               	call	i2u1940_48
 35444  006E22  0012               	return	
 35445  006E24                     i2u1940_48:
 35446  006E24  0005               	push	
 35447  006E26  6EFA               	movwf	pclath,c
 35448  006E28  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35449  006E2A  6EFD               	movwf	tosl,c
 35450  006E2C  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35451  006E2E  6EFE               	movwf	tosh,c
 35452  006E30  6AFF               	clrf	tosu,c
 35453  006E32  50FA               	movf	pclath,w,c
 35454  006E34  0012               	return		;indir
 35455  006E36                     __end_of_TMR2_ISR:
 35456                           	callstack 0
 35457                           
 35458 ;; *************** function _refreshSegment *****************
 35459 ;; Defined at:
 35460 ;;		line 50 in file "outputs_MC50.c"
 35461 ;; Parameters:    Size  Location     Type
 35462 ;;		None
 35463 ;; Auto vars:     Size  Location     Type
 35464 ;;		None
 35465 ;; Return value:  Size  Location     Type
 35466 ;;                  1    wreg      void 
 35467 ;; Registers used:
 35468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35469 ;; Tracked objects:
 35470 ;;		On entry : 31/E
 35471 ;;		On exit  : 3E/0
 35472 ;;		Unchanged: 0/0
 35473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35478 ;;Total ram usage:        0 bytes
 35479 ;; Hardware stack levels used: 1
 35480 ;; Hardware stack levels required when called: 1
 35481 ;; This function calls:
 35482 ;;		_Segments_Set
 35483 ;; This function is called by:
 35484 ;;		_TMR2_ISR
 35485 ;; This function uses a non-reentrant model
 35486 ;;
 35487                           
 35488                           	psect	text189
 35489  0084F0                     __ptext189:
 35490                           	callstack 0
 35491  0084F0                     _refreshSegment:
 35492                           	callstack 14
 35493                           
 35494                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 35495                           
 35496                           ;incstack = 0
 35497  0084F0  0100               	movlb	0	; () banked
 35498  0084F2  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35499  0084F4  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35500  0084F6  B4D8               	btfsc	status,2,c
 35501  0084F8  D003               	goto	i2u1550_40
 35502                           
 35503                           ; BSR set to: 0
 35504  0084FA  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35505  0084FC  A4D8               	btfss	status,2,c
 35506  0084FE  D01F               	goto	i2l2133
 35507  008500                     i2u1550_40:
 35508                           
 35509                           ; BSR set to: 0
 35510                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 35511  008500  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 35512  008502  A4D8               	btfss	status,2,c
 35513  008504  D00D               	goto	i2l2128
 35514                           
 35515                           ; BSR set to: 0
 35516                           
 35517                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 35518  008506  9085               	bcf	133,0,c	;volatile
 35519                           
 35520                           ; BSR set to: 0
 35521                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 35522  008508  0ED2               	movlw	low _DispTable
 35523  00850A  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 35524  00850C  6ED9               	movwf	fsr2l,c
 35525  00850E  6ADA               	clrf	fsr2h,c
 35526  008510  0E03               	movlw	high _DispTable
 35527  008512  22DA               	addwfc	fsr2h,f,c
 35528  008514  50DF               	movf	indf2,w,c
 35529  008516  EC75  F04F         	call	_Segments_Set
 35530  00851A  8285               	bsf	133,1,c	;volatile
 35531                           
 35532                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 35533  00851C  0E00               	movlw	0
 35534  00851E  D00C               	goto	L117
 35535  008520                     i2l2128:
 35536                           
 35537                           ; BSR set to: 0
 35538  008520  9285               	bcf	133,1,c	;volatile
 35539                           
 35540                           ; BSR set to: 0
 35541                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 35542  008522  0ED2               	movlw	low _DispTable
 35543  008524  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35544  008526  6ED9               	movwf	fsr2l,c
 35545  008528  6ADA               	clrf	fsr2h,c
 35546  00852A  0E03               	movlw	high _DispTable
 35547  00852C  22DA               	addwfc	fsr2h,f,c
 35548  00852E  50DF               	movf	indf2,w,c
 35549  008530  EC75  F04F         	call	_Segments_Set
 35550  008534  8085               	bsf	133,0,c	;volatile
 35551                           
 35552                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35553  008536  0E01               	movlw	1
 35554  008538                     L117:
 35555  008538  0100               	movlb	0	; () banked
 35556  00853A  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35557  00853C  D002               	goto	i2l15218
 35558  00853E                     i2l2133:
 35559                           
 35560                           ; BSR set to: 0
 35561  00853E  9085               	bcf	133,0,c	;volatile
 35562                           
 35563                           ; BSR set to: 0
 35564                           
 35565                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35566  008540  9285               	bcf	133,1,c	;volatile
 35567  008542                     i2l15218:
 35568                           
 35569                           ; BSR set to: 0
 35570                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35571  008542  0101               	movlb	1	; () banked
 35572  008544  BFA9               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35573  008546  D005               	goto	i2u1552_40
 35574  008548  51A9               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35575  00854A  E114               	bnz	i2l2140
 35576  00854C  05A8               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35577  00854E  B0D8               	btfsc	status,0,c
 35578  008550  0012               	return	
 35579  008552                     i2u1552_40:
 35580                           
 35581                           ; BSR set to: 1
 35582  008552  0100               	movlb	0	; () banked
 35583  008554  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35584  008556  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35585  008558  B4D8               	btfsc	status,2,c
 35586  00855A  0012               	return	
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35590  00855C  C075  F1A8         	movff	_dispStruct+3,_ts_system+10	;volatile
 35591  008560  C076  F1A9         	movff	_dispStruct+4,_ts_system+11	;volatile
 35592                           
 35593                           ; BSR set to: 0
 35594                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35595  008564  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35596  008566  A4D8               	btfss	status,2,c
 35597  008568  D003               	goto	i2l15228
 35598                           
 35599                           ; BSR set to: 0
 35600                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35601  00856A  0E00               	movlw	0
 35602  00856C  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35603                           
 35604                           ;outputs_MC50.c: 85:         }
 35605  00856E  0012               	return	
 35606  008570                     i2l15228:
 35607                           
 35608                           ; BSR set to: 0
 35609                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35610  008570  0E01               	movlw	1
 35611  008572  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35612  008574                     i2l2140:
 35613  008574  0012               	return		;funcret
 35614  008576                     __end_of_refreshSegment:
 35615                           	callstack 0
 35616                           
 35617 ;; *************** function _Segments_Set *****************
 35618 ;; Defined at:
 35619 ;;		line 93 in file "outputs_MC50.c"
 35620 ;; Parameters:    Size  Location     Type
 35621 ;;  value           1    wreg     unsigned char 
 35622 ;; Auto vars:     Size  Location     Type
 35623 ;;  value           1    0[COMRAM] unsigned char 
 35624 ;; Return value:  Size  Location     Type
 35625 ;;                  1    wreg      void 
 35626 ;; Registers used:
 35627 ;;		wreg, status,2, status,0
 35628 ;; Tracked objects:
 35629 ;;		On entry : 3F/0
 35630 ;;		On exit  : 0/0
 35631 ;;		Unchanged: 0/0
 35632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35637 ;;Total ram usage:        1 bytes
 35638 ;; Hardware stack levels used: 1
 35639 ;; This function calls:
 35640 ;;		Nothing
 35641 ;; This function is called by:
 35642 ;;		_refreshSegment
 35643 ;; This function uses a non-reentrant model
 35644 ;;
 35645                           
 35646                           	psect	text190
 35647  009EEA                     __ptext190:
 35648                           	callstack 0
 35649  009EEA                     _Segments_Set:
 35650                           	callstack 14
 35651                           
 35652                           ;incstack = 0
 35653                           ;Segments_Set@value stored from wreg
 35654  009EEA  6E01               	movwf	Segments_Set@value^0,c
 35655                           
 35656                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35657  009EEC  0E80               	movlw	128
 35658  009EEE  1686               	andwf	134,f,c	;volatile
 35659                           
 35660                           ;outputs_MC50.c: 96:    LATD |= value;
 35661  009EF0  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35662  009EF2  1286               	iorwf	134,f,c	;volatile
 35663  009EF4  0012               	return		;funcret
 35664  009EF6                     __end_of_Segments_Set:
 35665                           	callstack 0
 35666                           
 35667 ;; *************** function _controlTimeslots *****************
 35668 ;; Defined at:
 35669 ;;		line 190 in file "main_MC50.c"
 35670 ;; Parameters:    Size  Location     Type
 35671 ;;		None
 35672 ;; Auto vars:     Size  Location     Type
 35673 ;;		None
 35674 ;; Return value:  Size  Location     Type
 35675 ;;                  1    wreg      void 
 35676 ;; Registers used:
 35677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35678 ;; Tracked objects:
 35679 ;;		On entry : 3F/1
 35680 ;;		On exit  : 3F/1
 35681 ;;		Unchanged: 0/0
 35682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;Total ram usage:        0 bytes
 35688 ;; Hardware stack levels used: 1
 35689 ;; Hardware stack levels required when called: 1
 35690 ;; This function calls:
 35691 ;;		_decrementTimeslot
 35692 ;; This function is called by:
 35693 ;;		_TMR2_ISR
 35694 ;; This function uses a non-reentrant model
 35695 ;;
 35696                           
 35697                           	psect	text191
 35698  006532                     __ptext191:
 35699                           	callstack 0
 35700  006532                     _controlTimeslots:
 35701                           	callstack 14
 35702                           
 35703                           ; BSR set to: 1
 35704                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35705                           
 35706                           ;incstack = 0
 35707  006532  0EA6               	movlw	low (_ts_system+8)
 35708  006534  6E01               	movwf	decrementTimeslot@ts^0,c
 35709  006536  0E01               	movlw	high (_ts_system+8)
 35710  006538  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35711  00653A  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35712                           
 35713                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35714  00653E  0EE4               	movlw	low (_ts_system+70)
 35715  006540  6E01               	movwf	decrementTimeslot@ts^0,c
 35716  006542  0E01               	movlw	high (_ts_system+70)
 35717  006544  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35718  006546  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35719                           
 35720                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35721  00654A  0EA8               	movlw	low (_ts_system+10)
 35722  00654C  6E01               	movwf	decrementTimeslot@ts^0,c
 35723  00654E  0E01               	movlw	high (_ts_system+10)
 35724  006550  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35725  006552  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35726                           
 35727                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35728  006556  0EAA               	movlw	low (_ts_system+12)
 35729  006558  6E01               	movwf	decrementTimeslot@ts^0,c
 35730  00655A  0E01               	movlw	high (_ts_system+12)
 35731  00655C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35732  00655E  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35733                           
 35734                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35735  006562  0EAC               	movlw	low (_ts_system+14)
 35736  006564  6E01               	movwf	decrementTimeslot@ts^0,c
 35737  006566  0E01               	movlw	high (_ts_system+14)
 35738  006568  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35739  00656A  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35740                           
 35741                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35742  00656E  0EAE               	movlw	low (_ts_system+16)
 35743  006570  6E01               	movwf	decrementTimeslot@ts^0,c
 35744  006572  0E01               	movlw	high (_ts_system+16)
 35745  006574  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35746  006576  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35747                           
 35748                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35749  00657A  0EB0               	movlw	low (_ts_system+18)
 35750  00657C  6E01               	movwf	decrementTimeslot@ts^0,c
 35751  00657E  0E01               	movlw	high (_ts_system+18)
 35752  006580  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35753  006582  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35754                           
 35755                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35756  006586  0EB2               	movlw	low (_ts_system+20)
 35757  006588  6E01               	movwf	decrementTimeslot@ts^0,c
 35758  00658A  0E01               	movlw	high (_ts_system+20)
 35759  00658C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35760  00658E  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35761                           
 35762                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35763  006592  0EB4               	movlw	low (_ts_system+22)
 35764  006594  6E01               	movwf	decrementTimeslot@ts^0,c
 35765  006596  0E01               	movlw	high (_ts_system+22)
 35766  006598  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35767  00659A  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35768                           
 35769                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35770  00659E  0EB8               	movlw	low (_ts_system+26)
 35771  0065A0  6E01               	movwf	decrementTimeslot@ts^0,c
 35772  0065A2  0E01               	movlw	high (_ts_system+26)
 35773  0065A4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35774  0065A6  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35775                           
 35776                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35777  0065AA  0EBA               	movlw	low (_ts_system+28)
 35778  0065AC  6E01               	movwf	decrementTimeslot@ts^0,c
 35779  0065AE  0E01               	movlw	high (_ts_system+28)
 35780  0065B0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35781  0065B2  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35782                           
 35783                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35784  0065B6  0EBC               	movlw	low (_ts_system+30)
 35785  0065B8  6E01               	movwf	decrementTimeslot@ts^0,c
 35786  0065BA  0E01               	movlw	high (_ts_system+30)
 35787  0065BC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35788  0065BE  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35789                           
 35790                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35791  0065C2  0EC2               	movlw	low (_ts_system+36)
 35792  0065C4  6E01               	movwf	decrementTimeslot@ts^0,c
 35793  0065C6  0E01               	movlw	high (_ts_system+36)
 35794  0065C8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35795  0065CA  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35796                           
 35797                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35798  0065CE  0EC4               	movlw	low (_ts_system+38)
 35799  0065D0  6E01               	movwf	decrementTimeslot@ts^0,c
 35800  0065D2  0E01               	movlw	high (_ts_system+38)
 35801  0065D4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35802  0065D6  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35803                           
 35804                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35805  0065DA  0EC6               	movlw	low (_ts_system+40)
 35806  0065DC  6E01               	movwf	decrementTimeslot@ts^0,c
 35807  0065DE  0E01               	movlw	high (_ts_system+40)
 35808  0065E0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35809  0065E2  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35810                           
 35811                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35812  0065E6  0EC8               	movlw	low (_ts_system+42)
 35813  0065E8  6E01               	movwf	decrementTimeslot@ts^0,c
 35814  0065EA  0E01               	movlw	high (_ts_system+42)
 35815  0065EC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35816  0065EE  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35817                           
 35818                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35819  0065F2  0ECA               	movlw	low (_ts_system+44)
 35820  0065F4  6E01               	movwf	decrementTimeslot@ts^0,c
 35821  0065F6  0E01               	movlw	high (_ts_system+44)
 35822  0065F8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35823  0065FA  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35824                           
 35825                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35826  0065FE  0ECC               	movlw	low (_ts_system+46)
 35827  006600  6E01               	movwf	decrementTimeslot@ts^0,c
 35828  006602  0E01               	movlw	high (_ts_system+46)
 35829  006604  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35830  006606  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35831                           
 35832                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35833  00660A  0ECE               	movlw	low (_ts_system+48)
 35834  00660C  6E01               	movwf	decrementTimeslot@ts^0,c
 35835  00660E  0E01               	movlw	high (_ts_system+48)
 35836  006610  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35837  006612  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35838                           
 35839                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35840  006616  0EE0               	movlw	low (_ts_system+66)
 35841  006618  6E01               	movwf	decrementTimeslot@ts^0,c
 35842  00661A  0E01               	movlw	high (_ts_system+66)
 35843  00661C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35844  00661E  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35845                           
 35846                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35847  006622  0EE2               	movlw	low (_ts_system+68)
 35848  006624  6E01               	movwf	decrementTimeslot@ts^0,c
 35849  006626  0E01               	movlw	high (_ts_system+68)
 35850  006628  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35851  00662A  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35852                           
 35853                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35854  00662E  0100               	movlb	0	; () banked
 35855  006630  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35856  006632  B4D8               	btfsc	status,2,c
 35857  006634  D008               	goto	i2u1556_40
 35858                           
 35859                           ; BSR set to: 0
 35860  006636  0101               	movlb	1	; () banked
 35861  006638  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35862  00663A  D005               	goto	i2u1556_40
 35863  00663C  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35864  00663E  E109               	bnz	i2l2024
 35865  006640  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35866  006642  B0D8               	btfsc	status,0,c
 35867  006644  D006               	goto	i2l2024
 35868  006646                     i2u1556_40:
 35869                           
 35870                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35871  006646  0ED0               	movlw	low (_ts_system+50)
 35872  006648  6E01               	movwf	decrementTimeslot@ts^0,c
 35873  00664A  0E01               	movlw	high (_ts_system+50)
 35874  00664C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35875  00664E  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35876  006652                     i2l2024:
 35877                           
 35878                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35879  006652  0ED2               	movlw	low (_ts_system+52)
 35880  006654  6E01               	movwf	decrementTimeslot@ts^0,c
 35881  006656  0E01               	movlw	high (_ts_system+52)
 35882  006658  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35883  00665A  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35884                           
 35885                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35886  00665E  0ED4               	movlw	low (_ts_system+54)
 35887  006660  6E01               	movwf	decrementTimeslot@ts^0,c
 35888  006662  0E01               	movlw	high (_ts_system+54)
 35889  006664  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35890  006666  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35891                           
 35892                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 35893  00666A  0ED6               	movlw	low (_ts_system+56)
 35894  00666C  6E01               	movwf	decrementTimeslot@ts^0,c
 35895  00666E  0E01               	movlw	high (_ts_system+56)
 35896  006670  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35897  006672  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35898                           
 35899                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 35900  006676  0ED8               	movlw	low (_ts_system+58)
 35901  006678  6E01               	movwf	decrementTimeslot@ts^0,c
 35902  00667A  0E01               	movlw	high (_ts_system+58)
 35903  00667C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35904  00667E  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35905                           
 35906                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 35907  006682  0EDA               	movlw	low (_ts_system+60)
 35908  006684  6E01               	movwf	decrementTimeslot@ts^0,c
 35909  006686  0E01               	movlw	high (_ts_system+60)
 35910  006688  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35911  00668A  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35912                           
 35913                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 35914  00668E  0EDC               	movlw	low (_ts_system+62)
 35915  006690  6E01               	movwf	decrementTimeslot@ts^0,c
 35916  006692  0E01               	movlw	high (_ts_system+62)
 35917  006694  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35918  006696  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35919                           
 35920                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 35921  00669A  0EDE               	movlw	low (_ts_system+64)
 35922  00669C  6E01               	movwf	decrementTimeslot@ts^0,c
 35923  00669E  0E01               	movlw	high (_ts_system+64)
 35924  0066A0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35925  0066A2  EC6E  F04D         	call	_decrementTimeslot	;wreg free
 35926                           
 35927                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 35928  0066A6  0101               	movlb	1	; () banked
 35929  0066A8  BFC1               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 35930  0066AA  0012               	return	
 35931  0066AC  51C1               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 35932  0066AE  11C0               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 35933  0066B0  11BF               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 35934  0066B2  E103               	bnz	i2u1557_40
 35935  0066B4  05BE               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 35936  0066B6  A0D8               	btfss	status,0,c
 35937  0066B8  0012               	return	
 35938  0066BA                     i2u1557_40:
 35939                           
 35940                           ; BSR set to: 1
 35941                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 35942  0066BA  0EFF               	movlw	255
 35943  0066BC  27BE               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 35944  0066BE  0EFF               	movlw	255
 35945  0066C0  23BF               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 35946  0066C2  0EFF               	movlw	255
 35947  0066C4  23C0               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 35948  0066C6  0EFF               	movlw	255
 35949  0066C8  23C1               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 35950                           
 35951                           ; BSR set to: 1
 35952  0066CA  0012               	return		;funcret
 35953  0066CC                     __end_of_controlTimeslots:
 35954                           	callstack 0
 35955                           
 35956 ;; *************** function _decrementTimeslot *****************
 35957 ;; Defined at:
 35958 ;;		line 246 in file "main_MC50.c"
 35959 ;; Parameters:    Size  Location     Type
 35960 ;;  ts              2    0[COMRAM] PTR int 
 35961 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 35962 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 35963 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 35964 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 35965 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 35966 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 35967 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 35968 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 35969 ;; Auto vars:     Size  Location     Type
 35970 ;;		None
 35971 ;; Return value:  Size  Location     Type
 35972 ;;                  1    wreg      void 
 35973 ;; Registers used:
 35974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35975 ;; Tracked objects:
 35976 ;;		On entry : 0/1
 35977 ;;		On exit  : 0/0
 35978 ;;		Unchanged: 0/0
 35979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35983 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35984 ;;Total ram usage:        4 bytes
 35985 ;; Hardware stack levels used: 1
 35986 ;; This function calls:
 35987 ;;		Nothing
 35988 ;; This function is called by:
 35989 ;;		_controlTimeslots
 35990 ;; This function uses a non-reentrant model
 35991 ;;
 35992                           
 35993                           	psect	text192
 35994  009ADC                     __ptext192:
 35995                           	callstack 0
 35996  009ADC                     _decrementTimeslot:
 35997                           	callstack 14
 35998                           
 35999                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 36000                           
 36001                           ; BSR set to: 1
 36002                           ;incstack = 0
 36003  009ADC  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 36004  009AE0  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 36005  009AE4  0E01               	movlw	1
 36006  009AE6  BEDB               	btfsc	plusw2,7,c
 36007  009AE8  0012               	return	
 36008  009AEA  0E01               	movlw	1
 36009  009AEC  50DB               	movf	plusw2,w,c
 36010  009AEE  E103               	bnz	i2u1375_40
 36011  009AF0  04DE               	decf	postinc2,w,c
 36012  009AF2  A0D8               	btfss	status,0,c
 36013  009AF4  0012               	return	
 36014  009AF6                     i2u1375_40:
 36015                           
 36016                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 36017  009AF6  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 36018  009AFA  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 36019  009AFE  06DE               	decf	postinc2,f,c
 36020  009B00  0E00               	movlw	0
 36021  009B02  5ADD               	subwfb	postdec2,f,c
 36022  009B04  0012               	return		;funcret
 36023  009B06                     __end_of_decrementTimeslot:
 36024                           	callstack 0
 36025                           
 36026 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 36027 ;; Defined at:
 36028 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 36029 ;; Parameters:    Size  Location     Type
 36030 ;;		None
 36031 ;; Auto vars:     Size  Location     Type
 36032 ;;		None
 36033 ;; Return value:  Size  Location     Type
 36034 ;;                  1    wreg      void 
 36035 ;; Registers used:
 36036 ;;		None
 36037 ;; Tracked objects:
 36038 ;;		On entry : 3F/2
 36039 ;;		On exit  : 3F/2
 36040 ;;		Unchanged: 3F/0
 36041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36046 ;;Total ram usage:        0 bytes
 36047 ;; Hardware stack levels used: 1
 36048 ;; This function calls:
 36049 ;;		Nothing
 36050 ;; This function is called by:
 36051 ;;		_TMR2_Initialize
 36052 ;;		_TMR2_ISR
 36053 ;; This function uses a non-reentrant model
 36054 ;;
 36055                           
 36056                           	psect	text193
 36057  00A022                     __ptext193:
 36058                           	callstack 0
 36059  00A022                     _TMR2_DefaultInterruptHandler:
 36060                           	callstack 15
 36061                           
 36062                           ; BSR set to: 2
 36063                           
 36064                           ;incstack = 0
 36065  00A022  0012               	return		;funcret
 36066  00A024                     __end_of_TMR2_DefaultInterruptHandler:
 36067                           	callstack 0
 36068                           
 36069 ;; *************** function _ReadADC *****************
 36070 ;; Defined at:
 36071 ;;		line 38 in file "controlCurrent_MC50.c"
 36072 ;; Parameters:    Size  Location     Type
 36073 ;;		None
 36074 ;; Auto vars:     Size  Location     Type
 36075 ;;		None
 36076 ;; Return value:  Size  Location     Type
 36077 ;;                  1    wreg      void 
 36078 ;; Registers used:
 36079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36080 ;; Tracked objects:
 36081 ;;		On entry : 3F/E
 36082 ;;		On exit  : 31/0
 36083 ;;		Unchanged: 0/0
 36084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36088 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36089 ;;Total ram usage:        3 bytes
 36090 ;; Hardware stack levels used: 1
 36091 ;; Hardware stack levels required when called: 1
 36092 ;; This function calls:
 36093 ;;		_ADCC_GetSingleConversion
 36094 ;; This function is called by:
 36095 ;;		_TMR2_ISR
 36096 ;; This function uses a non-reentrant model
 36097 ;;
 36098                           
 36099                           	psect	text194
 36100  0091C0                     __ptext194:
 36101                           	callstack 0
 36102  0091C0                     _ReadADC:
 36103                           	callstack 14
 36104                           
 36105                           ; BSR set to: 14
 36106                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 36107                           
 36108                           ; BSR set to: 2
 36109                           ;incstack = 0
 36110  0091C0  B060               	btfsc	96,0,c	;volatile
 36111  0091C2  0012               	return	
 36112                           
 36113                           ; BSR set to: 14
 36114                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 36115  0091C4  0E1D               	movlw	29
 36116  0091C6  0100               	movlb	0	; () banked
 36117  0091C8  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 36118  0091CA  D002               	goto	i2l15194
 36119                           
 36120                           ; BSR set to: 0
 36121                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 36122  0091CC  0E00               	movlw	0
 36123  0091CE  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 36124  0091D0                     i2l15194:
 36125                           
 36126                           ; BSR set to: 0
 36127                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 36128  0091D0  5063               	movf	99,w,c	;volatile
 36129  0091D2  CF64 F002          	movff	3940,??_ReadADC	;volatile
 36130  0091D6  6A03               	clrf	(??_ReadADC+1)^0,c
 36131  0091D8  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 36132  0091DC  6A02               	clrf	??_ReadADC^0,c
 36133  0091DE  2602               	addwf	??_ReadADC^0,f,c
 36134  0091E0  0E00               	movlw	0
 36135  0091E2  2203               	addwfc	(??_ReadADC+1)^0,f,c
 36136  0091E4  0E06               	movlw	6
 36137  0091E6  6E04               	movwf	(??_ReadADC+2)^0,c
 36138  0091E8                     i2u1548_45:
 36139  0091E8  90D8               	bcf	status,0,c
 36140  0091EA  3203               	rrcf	(??_ReadADC+1)^0,f,c
 36141  0091EC  3202               	rrcf	??_ReadADC^0,f,c
 36142  0091EE  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 36143  0091F0  D7FB               	goto	i2u1548_45
 36144  0091F2  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 36145  0091F4  0D02               	mullw	2
 36146  0091F6  0E00               	movlw	low _ADC_array
 36147  0091F8  24F3               	addwf	243,w,c
 36148  0091FA  6ED9               	movwf	fsr2l,c
 36149  0091FC  0E02               	movlw	high _ADC_array
 36150  0091FE  20F4               	addwfc	prodh,w,c
 36151  009200  6EDA               	movwf	fsr2h,c
 36152  009202  C002  FFDE         	movff	??_ReadADC,postinc2
 36153  009206  C003  FFDD         	movff	??_ReadADC+1,postdec2
 36154                           
 36155                           ; BSR set to: 0
 36156                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 36157  00920A  0E00               	movlw	0
 36158  00920C  EC18  F04F         	call	_ADCC_GetSingleConversion
 36159                           
 36160                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 36161  009210  0100               	movlb	0	; () banked
 36162  009212  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 36163  009214  0012               	return		;funcret
 36164  009216                     __end_of_ReadADC:
 36165                           	callstack 0
 36166                           
 36167 ;; *************** function _ADCC_GetSingleConversion *****************
 36168 ;; Defined at:
 36169 ;;		line 131 in file "mcc_generated_files/adcc.c"
 36170 ;; Parameters:    Size  Location     Type
 36171 ;;  channel         1    wreg     enum E10053
 36172 ;; Auto vars:     Size  Location     Type
 36173 ;;  channel         1    0[COMRAM] enum E10053
 36174 ;; Return value:  Size  Location     Type
 36175 ;;                  2  433[None  ] int 
 36176 ;; Registers used:
 36177 ;;		wreg, status,2, cstack
 36178 ;; Tracked objects:
 36179 ;;		On entry : 3F/0
 36180 ;;		On exit  : 0/0
 36181 ;;		Unchanged: 0/0
 36182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36187 ;;Total ram usage:        1 bytes
 36188 ;; Hardware stack levels used: 1
 36189 ;; This function calls:
 36190 ;;		Nothing
 36191 ;; This function is called by:
 36192 ;;		_ReadADC
 36193 ;; This function uses a non-reentrant model
 36194 ;;
 36195                           
 36196                           	psect	text195
 36197  009E30                     __ptext195:
 36198                           	callstack 0
 36199  009E30                     _ADCC_GetSingleConversion:
 36200                           	callstack 14
 36201                           
 36202                           ;incstack = 0
 36203                           ;ADCC_GetSingleConversion@channel stored from wreg
 36204  009E30  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 36205                           
 36206                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 36207  009E32  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 36208                           
 36209                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 36210  009E36  8E60               	bsf	96,7,c	;volatile
 36211                           
 36212                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 36213  009E38  0E1A               	movlw	26
 36214  009E3A                     i2u3431_47:
 36215  009E3A  2EE8               	decfsz	wreg,f,c
 36216  009E3C  D7FE               	bra	i2u3431_47
 36217  009E3E  D000               	nop2	
 36218                           
 36219                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 36220  009E40  9C60               	bcf	96,6,c	;volatile
 36221                           
 36222                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 36223  009E42  8060               	bsf	96,0,c	;volatile
 36224  009E44  0012               	return		;funcret
 36225  009E46                     __end_of_ADCC_GetSingleConversion:
 36226                           	callstack 0
 36227                           
 36228 ;; *************** function _TMR1_ISR *****************
 36229 ;; Defined at:
 36230 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 36231 ;; Parameters:    Size  Location     Type
 36232 ;;		None
 36233 ;; Auto vars:     Size  Location     Type
 36234 ;;		None
 36235 ;; Return value:  Size  Location     Type
 36236 ;;                  1    wreg      void 
 36237 ;; Registers used:
 36238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 36239 ;; Tracked objects:
 36240 ;;		On entry : 3F/E
 36241 ;;		On exit  : 0/0
 36242 ;;		Unchanged: 0/0
 36243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36248 ;;Total ram usage:        0 bytes
 36249 ;; Hardware stack levels used: 1
 36250 ;; Hardware stack levels required when called: 2
 36251 ;; This function calls:
 36252 ;;		Absolute function
 36253 ;;		_TMR1_DefaultInterruptHandler
 36254 ;;		_TMR1_WriteTimer
 36255 ;;		_controlMotorForce
 36256 ;; This function is called by:
 36257 ;;		_INTERRUPT_InterruptManager
 36258 ;; This function uses a non-reentrant model
 36259 ;;
 36260                           
 36261                           	psect	text196
 36262  00965A                     __ptext196:
 36263                           	callstack 0
 36264  00965A                     _TMR1_ISR:
 36265                           	callstack 14
 36266                           
 36267                           ; BSR set to: 14
 36268                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 36269                           
 36270                           ;incstack = 0
 36271  00965A  91CE               	bcf	206,0,b	;volatile
 36272                           
 36273                           ; BSR set to: 14
 36274                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 36275  00965C  EC4A  F02B         	call	_controlMotorForce	;wreg free
 36276                           
 36277                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 36278  009660  0101               	movlb	1	; () banked
 36279  009662  51A3               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 36280  009664  A4D8               	btfss	status,2,c
 36281                           
 36282                           ; BSR set to: 1
 36283                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 36284  009666  07A3               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 36285                           
 36286                           ; BSR set to: 1
 36287                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 36288  009668  51A0               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 36289  00966A  A4D8               	btfss	status,2,c
 36290                           
 36291                           ; BSR set to: 1
 36292                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 36293  00966C  07A0               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 36294                           
 36295                           ; BSR set to: 1
 36296                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 36297  00966E  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 36298  009672  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 36299  009676  EC76  F04E         	call	_TMR1_WriteTimer	;wreg free
 36300                           
 36301                           ; BSR set to: 1
 36302                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 36303  00967A  0102               	movlb	2	; () banked
 36304  00967C  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36305  00967E  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36306  009680  B4D8               	btfsc	status,2,c
 36307  009682  0012               	return	
 36308                           
 36309                           ; BSR set to: 2
 36310                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 36311  009684  D801               	call	i2u1916_48
 36312  009686  0012               	return	
 36313  009688                     i2u1916_48:
 36314  009688  0005               	push	
 36315  00968A  6EFA               	movwf	pclath,c
 36316  00968C  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36317  00968E  6EFD               	movwf	tosl,c
 36318  009690  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36319  009692  6EFE               	movwf	tosh,c
 36320  009694  6AFF               	clrf	tosu,c
 36321  009696  50FA               	movf	pclath,w,c
 36322  009698  0012               	return		;indir
 36323  00969A                     __end_of_TMR1_ISR:
 36324                           	callstack 0
 36325                           
 36326 ;; *************** function _controlMotorForce *****************
 36327 ;; Defined at:
 36328 ;;		line 213 in file "outputs_MC50.c"
 36329 ;; Parameters:    Size  Location     Type
 36330 ;;		None
 36331 ;; Auto vars:     Size  Location     Type
 36332 ;;		None
 36333 ;; Return value:  Size  Location     Type
 36334 ;;                  1    wreg      void 
 36335 ;; Registers used:
 36336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36337 ;; Tracked objects:
 36338 ;;		On entry : 3F/E
 36339 ;;		On exit  : 3E/0
 36340 ;;		Unchanged: 0/0
 36341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36344 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36345 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36346 ;;Total ram usage:        5 bytes
 36347 ;; Hardware stack levels used: 1
 36348 ;; Hardware stack levels required when called: 1
 36349 ;; This function calls:
 36350 ;;		i2_GetMotorPower
 36351 ;;		i2_VerifyElectricalBrake
 36352 ;; This function is called by:
 36353 ;;		_TMR1_ISR
 36354 ;; This function uses a non-reentrant model
 36355 ;;
 36356                           
 36357                           	psect	text197
 36358  005694                     __ptext197:
 36359                           	callstack 0
 36360  005694                     _controlMotorForce:
 36361                           	callstack 14
 36362                           
 36363                           ; BSR set to: 14
 36364                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 36365                           
 36366                           ;incstack = 0
 36367  005694  EC27  F03E         	call	i2_GetMotorPower	;wreg free
 36368  005698  6F93               	movwf	_difTime& (0+255),b
 36369                           
 36370                           ; BSR set to: 1
 36371                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 36372  00569A  057B               	decf	_powerControl_st& (0+255),w,b
 36373  00569C  A4D8               	btfss	status,2,c
 36374  00569E  D00F               	goto	i2l2191
 36375                           
 36376                           ; BSR set to: 1
 36377                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 36378  0056A0  BFCB               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 36379  0056A2  D008               	goto	i2l15082
 36380  0056A4  51CB               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 36381  0056A6  E103               	bnz	i2u1508_40
 36382  0056A8  05CA               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 36383  0056AA  A0D8               	btfss	status,0,c
 36384  0056AC  D003               	goto	i2l15082
 36385  0056AE                     i2u1508_40:
 36386                           
 36387                           ; BSR set to: 1
 36388                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 36389  0056AE  0E00               	movlw	0
 36390  0056B0  6F94               	movwf	_StateTRIAC& (0+255),b
 36391                           
 36392                           ;outputs_MC50.c: 223:         }
 36393  0056B2  D005               	goto	i2l2191
 36394  0056B4                     i2l15082:
 36395                           
 36396                           ; BSR set to: 1
 36397  0056B4  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 36398  0056B6  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 36399  0056B8  A0D8               	btfss	status,0,c
 36400                           
 36401                           ; BSR set to: 1
 36402                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 36403  0056BA  C17E  F193         	movff	_powerControl_st+3,_difTime
 36404  0056BE                     i2l2191:
 36405                           
 36406                           ; BSR set to: 1
 36407                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 36408  0056BE  A68D               	btfss	141,3,c	;volatile
 36409  0056C0  D071               	goto	i2l2195
 36410                           
 36411                           ; BSR set to: 1
 36412  0056C2  5196               	movf	_zeroCrossing& (0+255),w,b
 36413  0056C4  A4D8               	btfss	status,2,c
 36414  0056C6  D06E               	goto	i2l2195
 36415                           
 36416                           ; BSR set to: 1
 36417                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 36418  0056C8  5195               	movf	_waitZeroPeak& (0+255),w,b
 36419  0056CA  A4D8               	btfss	status,2,c
 36420  0056CC  D016               	goto	i2l15098
 36421                           
 36422                           ; BSR set to: 1
 36423                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 36424  0056CE  0EFA               	movlw	low _zeroCrossingWaitTime
 36425  0056D0  0100               	movlb	0	; () banked
 36426  0056D2  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36427  0056D4  6ED9               	movwf	fsr2l,c
 36428  0056D6  6ADA               	clrf	fsr2h,c
 36429  0056D8  0E02               	movlw	high _zeroCrossingWaitTime
 36430  0056DA  22DA               	addwfc	fsr2h,f,c
 36431  0056DC  0101               	movlb	1	; () banked
 36432  0056DE  90D8               	bcf	status,0,c
 36433  0056E0  3197               	rrcf	_zeroCrossingLength& (0+255),w,b
 36434  0056E2  6EDF               	movwf	indf2,c
 36435                           
 36436                           ; BSR set to: 1
 36437                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 36438  0056E4  0100               	movlb	0	; () banked
 36439  0056E6  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36440  0056E8  A4D8               	btfss	status,2,c
 36441  0056EA  D002               	goto	i2l15096
 36442                           
 36443                           ; BSR set to: 0
 36444                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 36445  0056EC  0E01               	movlw	1
 36446  0056EE  D001               	goto	L118
 36447  0056F0                     i2l15096:
 36448                           
 36449                           ; BSR set to: 0
 36450                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 36451  0056F0  0E00               	movlw	0
 36452  0056F2                     L118:
 36453  0056F2  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 36454                           
 36455                           ; BSR set to: 0
 36456                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 36457                           
 36458                           ;outputs_MC50.c: 268:             }
 36459  0056F4  0E00               	movlw	0
 36460  0056F6  0101               	movlb	1	; () banked
 36461  0056F8  6F97               	movwf	_zeroCrossingLength& (0+255),b
 36462  0056FA                     i2l15098:
 36463                           
 36464                           ; BSR set to: 1
 36465                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 36466  0056FA  0E50               	movlw	80
 36467  0056FC  6593               	cpfsgt	_difTime& (0+255),b
 36468  0056FE  D007               	goto	i2u1515_40
 36469                           
 36470                           ; BSR set to: 1
 36471  005700  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36472  005702  D008               	goto	i2l15104
 36473  005704  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36474  005706  E103               	bnz	i2u1515_40
 36475  005708  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36476  00570A  A0D8               	btfss	status,0,c
 36477  00570C  D003               	goto	i2l15104
 36478  00570E                     i2u1515_40:
 36479                           
 36480                           ; BSR set to: 1
 36481                           
 36482                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 36483  00570E  9E86               	bcf	134,7,c	;volatile
 36484                           
 36485                           ; BSR set to: 1
 36486                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 36487  005710  0E00               	movlw	0
 36488  005712  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36489  005714                     i2l15104:
 36490                           
 36491                           ; BSR set to: 1
 36492                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 36493  005714  2B95               	incf	_waitZeroPeak& (0+255),f,b
 36494                           
 36495                           ; BSR set to: 1
 36496                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 36497  005716  0EFA               	movlw	low _zeroCrossingWaitTime
 36498  005718  0100               	movlb	0	; () banked
 36499  00571A  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36500  00571C  6ED9               	movwf	fsr2l,c
 36501  00571E  6ADA               	clrf	fsr2h,c
 36502  005720  0E02               	movlw	high _zeroCrossingWaitTime
 36503  005722  22DA               	addwfc	fsr2h,f,c
 36504  005724  0101               	movlb	1	; () banked
 36505  005726  5195               	movf	_waitZeroPeak& (0+255),w,b
 36506  005728  5CDE               	subwf	postinc2,w,c
 36507  00572A  B0D8               	btfsc	status,0,c
 36508  00572C  D044               	goto	i2l15134
 36509                           
 36510                           ; BSR set to: 1
 36511                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 36512  00572E  0E59               	movlw	89
 36513  005730  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 36514  005732  D005               	goto	i2l15114
 36515                           
 36516                           ; BSR set to: 1
 36517  005734  0E6A               	movlw	106
 36518  005736  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 36519  005738  D002               	goto	i2l15114
 36520                           
 36521                           ; BSR set to: 1
 36522                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 36523  00573A  0E01               	movlw	1
 36524  00573C  D001               	goto	L119
 36525  00573E                     i2l15114:
 36526                           
 36527                           ; BSR set to: 1
 36528                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 36529  00573E  0E00               	movlw	0
 36530  005740                     L119:
 36531  005740  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 36532                           
 36533                           ; BSR set to: 1
 36534                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 36535                           
 36536                           ;outputs_MC50.c: 292:             }
 36537  005742  0E50               	movlw	80
 36538  005744  6FA3               	movwf	(_ts_system+5)& (0+255),b	;volatile
 36539                           
 36540                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 36541  005746  0E00               	movlw	0
 36542  005748  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 36543                           
 36544                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 36545  00574A  0E01               	movlw	1
 36546  00574C  6F94               	movwf	_StateTRIAC& (0+255),b
 36547                           
 36548                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 36549  00574E  0E01               	movlw	1
 36550  005750  6F96               	movwf	_zeroCrossing& (0+255),b
 36551                           
 36552                           ; BSR set to: 1
 36553                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 36554  005752  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 36555                           
 36556                           ; BSR set to: 1
 36557                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 36558  005754  0100               	movlb	0	; () banked
 36559  005756  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36560  005758  A4D8               	btfss	status,2,c
 36561  00575A  D00E               	goto	i2l15126
 36562                           
 36563                           ; BSR set to: 0
 36564  00575C  0101               	movlb	1	; () banked
 36565  00575E  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36566  005760  D00B               	goto	i2l15126
 36567  005762  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36568  005764  E103               	bnz	i2u1520_40
 36569  005766  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36570  005768  A0D8               	btfss	status,0,c
 36571  00576A  D006               	goto	i2l15126
 36572  00576C                     i2u1520_40:
 36573                           
 36574                           ; BSR set to: 1
 36575                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 36576  00576C  0E01               	movlw	1
 36577  00576E  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 36578  005770  D022               	goto	i2l15134
 36579  005772                     i2u1521_40:
 36580                           
 36581                           ; BSR set to: 1
 36582                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 36583  005772  0E00               	movlw	0
 36584  005774  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 36585  005776  D01F               	goto	i2l15134
 36586  005778                     i2l15126:
 36587                           
 36588                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 36589  005778  0101               	movlb	1	; () banked
 36590  00577A  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 36591  00577C  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 36592  005780  6A06               	clrf	(??_controlMotorForce+1)^0,c
 36593  005782  2605               	addwf	??_controlMotorForce^0,f,c
 36594  005784  0E00               	movlw	0
 36595  005786  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36596  005788  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36597  00578A  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36598  00578C  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36599  00578E  5005               	movf	??_controlMotorForce^0,w,c
 36600  005790  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36601  005792  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36602  005794  0A80               	xorlw	128
 36603  005796  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36604  005798  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36605  00579A  0A80               	xorlw	128
 36606  00579C  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36607  00579E  B0D8               	btfsc	status,0,c
 36608  0057A0  D7E8               	goto	i2u1521_40
 36609  0057A2  D009               	goto	i2l15134
 36610  0057A4                     i2l2195:
 36611                           
 36612                           ; BSR set to: 1
 36613  0057A4  B68D               	btfsc	141,3,c	;volatile
 36614  0057A6  D007               	goto	i2l15134
 36615                           
 36616                           ; BSR set to: 1
 36617  0057A8  5196               	movf	_zeroCrossing& (0+255),w,b
 36618  0057AA  B4D8               	btfsc	status,2,c
 36619  0057AC  D004               	goto	i2l15134
 36620                           
 36621                           ; BSR set to: 1
 36622                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36623  0057AE  0E00               	movlw	0
 36624  0057B0  6F96               	movwf	_zeroCrossing& (0+255),b
 36625                           
 36626                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36627  0057B2  0E00               	movlw	0
 36628  0057B4  6F95               	movwf	_waitZeroPeak& (0+255),b
 36629  0057B6                     i2l15134:
 36630                           
 36631                           ; BSR set to: 1
 36632                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36633  0057B6  B68D               	btfsc	141,3,c	;volatile
 36634                           
 36635                           ; BSR set to: 1
 36636                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36637  0057B8  2B97               	incf	_zeroCrossingLength& (0+255),f,b
 36638                           
 36639                           ; BSR set to: 1
 36640                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36641                           
 36642                           ;outputs_MC50.c: 340:     }
 36643  0057BA  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36644                           
 36645                           ; BSR set to: 1
 36646                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36647  0057BC  5100               	movf	_var_sys& (0+255),w,b	;volatile
 36648  0057BE  ECB6  F044         	call	i2_VerifyElectricalBrake
 36649  0057C2  0100               	movlb	0	; () banked
 36650  0057C4  6F83               	movwf	_stateMotor& (0+255),b
 36651                           
 36652                           ; BSR set to: 0
 36653                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36654  0057C6  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36655  0057C8  A4D8               	btfss	status,2,c
 36656  0057CA  D02E               	goto	i2l15158
 36657                           
 36658                           ; BSR set to: 0
 36659  0057CC  0101               	movlb	1	; () banked
 36660  0057CE  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36661  0057D0  D02B               	goto	i2l15158
 36662  0057D2  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36663  0057D4  E103               	bnz	i2u1527_40
 36664  0057D6  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36665  0057D8  A0D8               	btfss	status,0,c
 36666  0057DA  D026               	goto	i2l15158
 36667  0057DC                     i2u1527_40:
 36668                           
 36669                           ; BSR set to: 1
 36670  0057DC  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36671  0057DE  D005               	goto	i2u1528_40
 36672  0057E0  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36673  0057E2  E122               	bnz	i2l15158
 36674  0057E4  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36675  0057E6  B0D8               	btfsc	status,0,c
 36676  0057E8  D01F               	goto	i2l15158
 36677  0057EA                     i2u1528_40:
 36678                           
 36679                           ; BSR set to: 1
 36680                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36681  0057EA  0100               	movlb	0	; () banked
 36682  0057EC  5183               	movf	_stateMotor& (0+255),w,b
 36683  0057EE  B4D8               	btfsc	status,2,c
 36684  0057F0  D03A               	goto	i2l15170
 36685                           
 36686                           ; BSR set to: 0
 36687  0057F2  0101               	movlb	1	; () banked
 36688  0057F4  0594               	decf	_StateTRIAC& (0+255),w,b
 36689  0057F6  A4D8               	btfss	status,2,c
 36690  0057F8  D036               	goto	i2l15170
 36691                           
 36692                           ; BSR set to: 1
 36693  0057FA  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36694  0057FC  D005               	goto	i2u1531_40
 36695  0057FE  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36696  005800  E132               	bnz	i2l15170
 36697  005802  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36698  005804  B0D8               	btfsc	status,0,c
 36699  005806  D02F               	goto	i2l15170
 36700  005808                     i2u1531_40:
 36701                           
 36702                           ; BSR set to: 1
 36703  005808  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36704  00580A  A4D8               	btfss	status,2,c
 36705  00580C  D02C               	goto	i2l15170
 36706                           
 36707                           ; BSR set to: 1
 36708  00580E  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36709  005810  D006               	goto	i2u1533_40
 36710  005812  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36711  005814  E128               	bnz	i2l15170
 36712  005816  0E0C               	movlw	12
 36713  005818  5DC6               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36714  00581A  B0D8               	btfsc	status,0,c
 36715  00581C  D024               	goto	i2l15170
 36716  00581E                     i2u1533_40:
 36717                           
 36718                           ; BSR set to: 1
 36719                           
 36720                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36721  00581E  8E86               	bsf	134,7,c	;volatile
 36722                           
 36723                           ; BSR set to: 1
 36724                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36725  005820  0EEC               	movlw	236
 36726  005822  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36727  005824  0E78               	movlw	120
 36728  005826  D01A               	goto	L120
 36729  005828                     i2l15158:
 36730                           
 36731                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36732  005828  0100               	movlb	0	; () banked
 36733  00582A  5183               	movf	_stateMotor& (0+255),w,b
 36734  00582C  B4D8               	btfsc	status,2,c
 36735  00582E  D01B               	goto	i2l15170
 36736                           
 36737                           ; BSR set to: 0
 36738  005830  0101               	movlb	1	; () banked
 36739  005832  5193               	movf	_difTime& (0+255),w,b
 36740  005834  5DA3               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36741  005836  B0D8               	btfsc	status,0,c
 36742  005838  D016               	goto	i2l15170
 36743                           
 36744                           ; BSR set to: 1
 36745  00583A  0594               	decf	_StateTRIAC& (0+255),w,b
 36746  00583C  A4D8               	btfss	status,2,c
 36747  00583E  D013               	goto	i2l15170
 36748                           
 36749                           ; BSR set to: 1
 36750  005840  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36751  005842  D005               	goto	i2u1537_40
 36752  005844  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36753  005846  E10F               	bnz	i2l15170
 36754  005848  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36755  00584A  B0D8               	btfsc	status,0,c
 36756  00584C  D00C               	goto	i2l15170
 36757  00584E                     i2u1537_40:
 36758                           
 36759                           ; BSR set to: 1
 36760  00584E  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36761  005850  A4D8               	btfss	status,2,c
 36762  005852  D009               	goto	i2l15170
 36763                           
 36764                           ; BSR set to: 1
 36765                           
 36766                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36767  005854  8E86               	bsf	134,7,c	;volatile
 36768                           
 36769                           ; BSR set to: 1
 36770                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36771  005856  0EFF               	movlw	255
 36772  005858  6FA5               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36773  00585A  0E38               	movlw	56
 36774  00585C                     L120:
 36775  00585C  6FA4               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36776                           
 36777                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36778  00585E  0E01               	movlw	1
 36779  005860  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36780                           
 36781                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36782  005862  0E00               	movlw	0
 36783  005864  6F94               	movwf	_StateTRIAC& (0+255),b
 36784  005866                     i2l15170:
 36785                           
 36786                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36787  005866  0E15               	movlw	21
 36788  005868  0101               	movlb	1	; () banked
 36789  00586A  61A3               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36790  00586C  D002               	goto	i2u1540_40
 36791                           
 36792                           ; BSR set to: 1
 36793  00586E  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36794  005870  D004               	goto	i2u1541_40
 36795  005872                     i2u1540_40:
 36796                           
 36797                           ; BSR set to: 1
 36798  005872  0100               	movlb	0	; () banked
 36799  005874  5183               	movf	_stateMotor& (0+255),w,b
 36800  005876  A4D8               	btfss	status,2,c
 36801  005878  D004               	goto	i2l2222
 36802  00587A                     i2u1541_40:
 36803                           
 36804                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36805  00587A  9E86               	bcf	134,7,c	;volatile
 36806                           
 36807                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36808  00587C  0E00               	movlw	0
 36809  00587E  0101               	movlb	1	; () banked
 36810  005880  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36811  005882                     i2l2222:
 36812                           
 36813                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36814  005882  0100               	movlb	0	; () banked
 36815  005884  5183               	movf	_stateMotor& (0+255),w,b
 36816  005886  B4D8               	btfsc	status,2,c
 36817  005888  D00C               	goto	i2l15182
 36818                           
 36819                           ; BSR set to: 0
 36820  00588A  0101               	movlb	1	; () banked
 36821  00588C  BFA5               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36822  00588E  D009               	goto	i2l15182
 36823  005890  51A5               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36824  005892  E103               	bnz	i2u1543_40
 36825  005894  05A4               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36826  005896  A0D8               	btfss	status,0,c
 36827  005898  D004               	goto	i2l15182
 36828  00589A                     i2u1543_40:
 36829                           
 36830                           ; BSR set to: 1
 36831                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36832  00589A  07A4               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36833  00589C  A0D8               	btfss	status,0,c
 36834  00589E  07A5               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36835                           
 36836                           ;outputs_MC50.c: 399:     }
 36837  0058A0  0012               	return	
 36838  0058A2                     i2l15182:
 36839  0058A2  0100               	movlb	0	; () banked
 36840  0058A4  5183               	movf	_stateMotor& (0+255),w,b
 36841  0058A6  A4D8               	btfss	status,2,c
 36842  0058A8  0012               	return	
 36843                           
 36844                           ; BSR set to: 0
 36845  0058AA  0101               	movlb	1	; () banked
 36846  0058AC  AFA5               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36847  0058AE  0012               	return	
 36848                           
 36849                           ; BSR set to: 1
 36850                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36851  0058B0  4BA4               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36852  0058B2  2BA5               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36853  0058B4  0012               	return		;funcret
 36854  0058B6                     __end_of_controlMotorForce:
 36855                           	callstack 0
 36856                           
 36857 ;; *************** function i2_VerifyElectricalBrake *****************
 36858 ;; Defined at:
 36859 ;;		line 658 in file "outputs_MC50.c"
 36860 ;; Parameters:    Size  Location     Type
 36861 ;;  actualState     1    wreg     enum E10381
 36862 ;; Auto vars:     Size  Location     Type
 36863 ;;  actualState     1    1[COMRAM] enum E10381
 36864 ;;  tempState       1    0[COMRAM] enum E10381
 36865 ;; Return value:  Size  Location     Type
 36866 ;;                  1    wreg      enum E10381
 36867 ;; Registers used:
 36868 ;;		wreg, status,2, status,0
 36869 ;; Tracked objects:
 36870 ;;		On entry : 3F/1
 36871 ;;		On exit  : 3E/0
 36872 ;;		Unchanged: 0/0
 36873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36878 ;;Total ram usage:        2 bytes
 36879 ;; Hardware stack levels used: 1
 36880 ;; This function calls:
 36881 ;;		Nothing
 36882 ;; This function is called by:
 36883 ;;		_controlMotorForce
 36884 ;; This function uses a non-reentrant model
 36885 ;;
 36886                           
 36887                           	psect	text198
 36888  00896C                     __ptext198:
 36889                           	callstack 0
 36890  00896C                     i2_VerifyElectricalBrake:
 36891                           	callstack 14
 36892                           
 36893                           ;incstack = 0
 36894                           ;i2VerifyElectricalBrake@actualState stored from wreg
 36895  00896C  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 36896                           
 36897                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 36898  00896E  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 36899                           
 36900                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 36901  008972  0100               	movlb	0	; () banked
 36902  008974  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36903  008976  A4D8               	btfss	status,2,c
 36904  008978  D02E               	goto	i2l2323
 36905                           
 36906                           ; BSR set to: 0
 36907  00897A  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36908  00897C  A4D8               	btfss	status,2,c
 36909  00897E  D02B               	goto	i2l2323
 36910                           
 36911                           ; BSR set to: 0
 36912  008980  0101               	movlb	1	; () banked
 36913  008982  BFDF               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36914  008984  D005               	goto	i2u1474_40
 36915  008986  51DF               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36916  008988  E126               	bnz	i2l2323
 36917  00898A  05DE               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36918  00898C  B0D8               	btfsc	status,0,c
 36919  00898E  D023               	goto	i2l2323
 36920  008990                     i2u1474_40:
 36921                           
 36922                           ; BSR set to: 1
 36923                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 36924  008990  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36925  008992  0100               	movlb	0	; () banked
 36926  008994  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 36927  008996  B4D8               	btfsc	status,2,c
 36928  008998  D00B               	goto	i2l14800
 36929                           
 36930                           ; BSR set to: 0
 36931  00899A  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 36932  00899C  A4D8               	btfss	status,2,c
 36933  00899E  D008               	goto	i2l14800
 36934                           
 36935                           ; BSR set to: 0
 36936                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 36937  0089A0  0E01               	movlw	1
 36938  0089A2  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36939                           
 36940                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 36941  0089A4  0E00               	movlw	0
 36942  0089A6  0101               	movlb	1	; () banked
 36943  0089A8  6FC7               	movwf	(_ts_system+41)& (0+255),b	;volatile
 36944  0089AA  0E16               	movlw	22
 36945  0089AC  6FC6               	movwf	(_ts_system+40)& (0+255),b	;volatile
 36946                           
 36947                           ;outputs_MC50.c: 670:         }
 36948  0089AE  D018               	goto	i2l2328
 36949  0089B0                     i2l14800:
 36950                           
 36951                           ; BSR set to: 0
 36952  0089B0  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 36953  0089B2  A4D8               	btfss	status,2,c
 36954  0089B4  D00B               	goto	i2l14806
 36955                           
 36956                           ; BSR set to: 0
 36957  0089B6  0101               	movlb	1	; () banked
 36958  0089B8  BFC7               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36959  0089BA  D008               	goto	i2l14806
 36960  0089BC  51C7               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36961  0089BE  E103               	bnz	i2u1478_40
 36962  0089C0  05C6               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36963  0089C2  A0D8               	btfss	status,0,c
 36964  0089C4  D003               	goto	i2l14806
 36965  0089C6                     i2u1478_40:
 36966                           
 36967                           ; BSR set to: 1
 36968                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 36969  0089C6  0E01               	movlw	1
 36970  0089C8  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 36971                           
 36972                           ;outputs_MC50.c: 686:         }
 36973  0089CA  D00A               	goto	i2l2328
 36974  0089CC                     i2l14806:
 36975                           
 36976                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 36977  0089CC  0E00               	movlw	0
 36978  0089CE  0100               	movlb	0	; () banked
 36979  0089D0  6F78               	movwf	_brakeElectric_st& (0+255),b
 36980                           
 36981                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 36982  0089D2  0E00               	movlw	0
 36983  0089D4  D004               	goto	L121
 36984  0089D6                     i2l2323:
 36985                           
 36986                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 36987  0089D6  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 36988                           
 36989                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 36990  0089DA  0E00               	movlw	0
 36991  0089DC  0100               	movlb	0	; () banked
 36992  0089DE                     L121:
 36993  0089DE  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36994  0089E0                     i2l2328:
 36995                           
 36996                           ;outputs_MC50.c: 700:     return tempState;
 36997  0089E0  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 36998  0089E2  0012               	return		;funcret
 36999  0089E4                     __end_ofi2_VerifyElectricalBrake:
 37000                           	callstack 0
 37001                           
 37002 ;; *************** function i2_GetMotorPower *****************
 37003 ;; Defined at:
 37004 ;;		line 405 in file "outputs_MC50.c"
 37005 ;; Parameters:    Size  Location     Type
 37006 ;;		None
 37007 ;; Auto vars:     Size  Location     Type
 37008 ;;  defineatraso    1    3[COMRAM] unsigned char 
 37009 ;; Return value:  Size  Location     Type
 37010 ;;                  1    wreg      unsigned char 
 37011 ;; Registers used:
 37012 ;;		wreg, status,2, status,0, prodl, prodh
 37013 ;; Tracked objects:
 37014 ;;		On entry : 3F/E
 37015 ;;		On exit  : 3F/1
 37016 ;;		Unchanged: 0/0
 37017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37020 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37022 ;;Total ram usage:        4 bytes
 37023 ;; Hardware stack levels used: 1
 37024 ;; This function calls:
 37025 ;;		Nothing
 37026 ;; This function is called by:
 37027 ;;		_controlMotorForce
 37028 ;; This function uses a non-reentrant model
 37029 ;;
 37030                           
 37031                           	psect	text199
 37032  007C4E                     __ptext199:
 37033                           	callstack 0
 37034  007C4E                     i2_GetMotorPower:
 37035                           	callstack 14
 37036                           
 37037                           ; BSR set to: 14
 37038                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 37039                           
 37040                           ;incstack = 0
 37041  007C4E  0101               	movlb	1	; () banked
 37042  007C50  057B               	decf	_powerControl_st& (0+255),w,b
 37043  007C52  A4D8               	btfss	status,2,c
 37044  007C54  D006               	goto	i2l14750
 37045                           
 37046                           ; BSR set to: 1
 37047                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 37048  007C56  0100               	movlb	0	; () banked
 37049  007C58  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 37050  007C5A  0D06               	mullw	6
 37051  007C5C  CFF3 F192          	movff	prodl,_temppower
 37052                           
 37053                           ;outputs_MC50.c: 416:     }
 37054  007C60  D043               	goto	i2l2240
 37055  007C62                     i2l14750:
 37056                           
 37057                           ; BSR set to: 1
 37058                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 37059  007C62  0100               	movlb	0	; () banked
 37060  007C64  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 37061  007C66  0D06               	mullw	6
 37062  007C68  CFF3 F082          	movff	prodl,_fullmotorPower
 37063                           
 37064                           ; BSR set to: 0
 37065                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 37066  007C6C  0101               	movlb	1	; () banked
 37067  007C6E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37068  007C70  D01C               	goto	i2l14760
 37069  007C72  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37070  007C74  E103               	bnz	i2u1464_40
 37071  007C76  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37072  007C78  A0D8               	btfss	status,0,c
 37073  007C7A  D017               	goto	i2l14760
 37074  007C7C                     i2u1464_40:
 37075                           
 37076                           ; BSR set to: 1
 37077                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 37078  007C7C  0100               	movlb	0	; () banked
 37079  007C7E  5182               	movf	_fullmotorPower& (0+255),w,b
 37080  007C80  6E01               	movwf	??i2_GetMotorPower^0,c
 37081  007C82  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 37082  007C84  0101               	movlb	1	; () banked
 37083  007C86  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 37084  007C88  5C01               	subwf	??i2_GetMotorPower^0,w,c
 37085  007C8A  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 37086  007C8C  0A80               	xorlw	128
 37087  007C8E  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 37088  007C90  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37089  007C92  0A80               	xorlw	128
 37090  007C94  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 37091  007C96  B0D8               	btfsc	status,0,c
 37092  007C98  D002               	goto	i2l14758
 37093                           
 37094                           ; BSR set to: 1
 37095                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 37096  007C9A  0E01               	movlw	1
 37097  007C9C  D004               	goto	L123
 37098  007C9E                     i2l14758:
 37099                           
 37100                           ; BSR set to: 1
 37101                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 37102  007C9E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 37103  007CA0  0100               	movlb	0	; () banked
 37104  007CA2  5D82               	subwf	_fullmotorPower& (0+255),w,b
 37105  007CA4  D017               	goto	L124
 37106  007CA6                     L123:
 37107  007CA6  6F92               	movwf	_temppower& (0+255),b
 37108  007CA8  D01F               	goto	i2l2240
 37109  007CAA                     i2l14760:
 37110                           
 37111                           ; BSR set to: 1
 37112  007CAA  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37113  007CAC  D005               	goto	i2u1466_40
 37114  007CAE  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37115  007CB0  E113               	bnz	i2l14770
 37116  007CB2  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37117  007CB4  B0D8               	btfsc	status,0,c
 37118  007CB6  D010               	goto	i2l14770
 37119  007CB8                     i2u1466_40:
 37120                           
 37121                           ; BSR set to: 1
 37122  007CB8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37123  007CBA  D005               	goto	i2u1467_40
 37124  007CBC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37125  007CBE  E10C               	bnz	i2l14770
 37126  007CC0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37127  007CC2  B0D8               	btfsc	status,0,c
 37128  007CC4  D009               	goto	i2l14770
 37129  007CC6                     i2u1467_40:
 37130                           
 37131                           ; BSR set to: 1
 37132                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 37133  007CC6  C082  F192         	movff	_fullmotorPower,_temppower
 37134                           
 37135                           ; BSR set to: 1
 37136                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 37137  007CCA  0E08               	movlw	8
 37138  007CCC  0100               	movlb	0	; () banked
 37139  007CCE  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 37140  007CD0  D00B               	goto	i2l2240
 37141                           
 37142                           ; BSR set to: 0
 37143                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 37144  007CD2  0E3A               	movlw	58
 37145  007CD4                     L124:
 37146  007CD4  0101               	movlb	1	; () banked
 37147  007CD6  D7E7               	goto	L123
 37148  007CD8                     i2l14770:
 37149                           
 37150                           ; BSR set to: 1
 37151  007CD8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37152  007CDA  D006               	goto	i2l2240
 37153  007CDC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37154  007CDE  E102               	bnz	i2u1469_40
 37155  007CE0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37156  007CE2  B0D8               	btfsc	status,0,c
 37157  007CE4                     i2u1469_40:
 37158                           
 37159                           ; BSR set to: 1
 37160                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 37161  007CE4  C110  F192         	movff	_var_sys+16,_temppower	;volatile
 37162  007CE8                     i2l2240:
 37163                           
 37164                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 37165  007CE8  0101               	movlb	1	; () banked
 37166  007CEA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37167  007CEC  D00E               	goto	i2l14780
 37168  007CEE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37169  007CF0  E103               	bnz	i2u1470_40
 37170  007CF2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37171  007CF4  A0D8               	btfss	status,0,c
 37172  007CF6  D009               	goto	i2l14780
 37173  007CF8                     i2u1470_40:
 37174                           
 37175                           ; BSR set to: 1
 37176  007CF8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37177  007CFA  D005               	goto	i2u1471_40
 37178  007CFC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37179  007CFE  E105               	bnz	i2l14780
 37180  007D00  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37181  007D02  B0D8               	btfsc	status,0,c
 37182  007D04  D002               	goto	i2l14780
 37183  007D06                     i2u1471_40:
 37184                           
 37185                           ; BSR set to: 1
 37186                           ;outputs_MC50.c: 452:     defineatraso = 5;
 37187  007D06  0E05               	movlw	5
 37188  007D08  D001               	goto	L122
 37189  007D0A                     i2l14780:
 37190                           
 37191                           ; BSR set to: 1
 37192                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 37193  007D0A  0E17               	movlw	23
 37194  007D0C                     L122:
 37195  007D0C  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 37196                           
 37197                           ; BSR set to: 1
 37198                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 37199  007D0E  5192               	movf	_temppower& (0+255),w,b
 37200  007D10  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 37201                           
 37202                           ; BSR set to: 1
 37203  007D12  0012               	return		;funcret
 37204  007D14                     __end_ofi2_GetMotorPower:
 37205                           	callstack 0
 37206                           
 37207 ;; *************** function _TMR1_WriteTimer *****************
 37208 ;; Defined at:
 37209 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 37210 ;; Parameters:    Size  Location     Type
 37211 ;;  timerVal        2    0[COMRAM] unsigned short 
 37212 ;; Auto vars:     Size  Location     Type
 37213 ;;		None
 37214 ;; Return value:  Size  Location     Type
 37215 ;;                  1    wreg      void 
 37216 ;; Registers used:
 37217 ;;		None
 37218 ;; Tracked objects:
 37219 ;;		On entry : 3F/1
 37220 ;;		On exit  : 3F/1
 37221 ;;		Unchanged: 3F/0
 37222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37227 ;;Total ram usage:        2 bytes
 37228 ;; Hardware stack levels used: 1
 37229 ;; This function calls:
 37230 ;;		Nothing
 37231 ;; This function is called by:
 37232 ;;		_TMR1_ISR
 37233 ;; This function uses a non-reentrant model
 37234 ;;
 37235                           
 37236                           	psect	text200
 37237  009CEC                     __ptext200:
 37238                           	callstack 0
 37239  009CEC                     _TMR1_WriteTimer:
 37240                           	callstack 15
 37241                           
 37242                           ; BSR set to: 1
 37243                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 37244                           
 37245                           ; BSR set to: 1
 37246                           ;incstack = 0
 37247  009CEC  A4CF               	btfss	207,2,c	;volatile
 37248  009CEE  D007               	goto	i2l1147
 37249                           
 37250                           ; BSR set to: 1
 37251                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 37252  009CF0  90CF               	bcf	207,0,c	;volatile
 37253                           
 37254                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 37255  009CF2  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37256                           
 37257                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 37258  009CF6  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37259                           
 37260                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 37261  009CFA  80CF               	bsf	207,0,c	;volatile
 37262                           
 37263                           ;mcc_generated_files/tmr1.c: 142:     }
 37264  009CFC  0012               	return	
 37265  009CFE                     i2l1147:
 37266                           
 37267                           ; BSR set to: 1
 37268                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 37269  009CFE  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37270                           
 37271                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 37272  009D02  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37273                           
 37274                           ; BSR set to: 1
 37275  009D06  0012               	return		;funcret
 37276  009D08                     __end_of_TMR1_WriteTimer:
 37277                           	callstack 0
 37278                           
 37279 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 37280 ;; Defined at:
 37281 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 37282 ;; Parameters:    Size  Location     Type
 37283 ;;		None
 37284 ;; Auto vars:     Size  Location     Type
 37285 ;;		None
 37286 ;; Return value:  Size  Location     Type
 37287 ;;                  1    wreg      void 
 37288 ;; Registers used:
 37289 ;;		None
 37290 ;; Tracked objects:
 37291 ;;		On entry : 3F/2
 37292 ;;		On exit  : 3F/2
 37293 ;;		Unchanged: 3F/0
 37294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37299 ;;Total ram usage:        0 bytes
 37300 ;; Hardware stack levels used: 1
 37301 ;; This function calls:
 37302 ;;		Nothing
 37303 ;; This function is called by:
 37304 ;;		_TMR1_Initialize
 37305 ;;		_TMR1_ISR
 37306 ;; This function uses a non-reentrant model
 37307 ;;
 37308                           
 37309                           	psect	text201
 37310  00A024                     __ptext201:
 37311                           	callstack 0
 37312  00A024                     _TMR1_DefaultInterruptHandler:
 37313                           	callstack 15
 37314                           
 37315                           ; BSR set to: 2
 37316                           
 37317                           ; BSR set to: 1
 37318                           ;incstack = 0
 37319  00A024  0012               	return		;funcret
 37320  00A026                     __end_of_TMR1_DefaultInterruptHandler:
 37321                           	callstack 0
 37322                           
 37323 ;; *************** function _TMR0_ISR *****************
 37324 ;; Defined at:
 37325 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 37326 ;; Parameters:    Size  Location     Type
 37327 ;;		None
 37328 ;; Auto vars:     Size  Location     Type
 37329 ;;		None
 37330 ;; Return value:  Size  Location     Type
 37331 ;;                  1    wreg      void 
 37332 ;; Registers used:
 37333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37334 ;; Tracked objects:
 37335 ;;		On entry : 3F/E
 37336 ;;		On exit  : 0/0
 37337 ;;		Unchanged: 0/0
 37338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37343 ;;Total ram usage:        0 bytes
 37344 ;; Hardware stack levels used: 1
 37345 ;; Hardware stack levels required when called: 1
 37346 ;; This function calls:
 37347 ;;		Absolute function
 37348 ;;		_TMR0_DefaultInterruptHandler
 37349 ;;		_rxi
 37350 ;; This function is called by:
 37351 ;;		_INTERRUPT_InterruptManager
 37352 ;; This function uses a non-reentrant model
 37353 ;;
 37354                           
 37355                           	psect	text202
 37356  009BA0                     __ptext202:
 37357                           	callstack 0
 37358  009BA0                     _TMR0_ISR:
 37359                           	callstack 15
 37360                           
 37361                           ; BSR set to: 14
 37362                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 37363                           
 37364                           ; BSR set to: 2
 37365                           ;incstack = 0
 37366  009BA0  9BCA               	bcf	202,5,b	;volatile
 37367                           
 37368                           ; BSR set to: 14
 37369                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 37370  009BA2  ECC0  F027         	call	_rxi	;wreg free
 37371                           
 37372                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 37373  009BA6  0102               	movlb	2	; () banked
 37374  009BA8  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37375  009BAA  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37376  009BAC  B4D8               	btfsc	status,2,c
 37377  009BAE  0012               	return	
 37378                           
 37379                           ; BSR set to: 2
 37380                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 37381  009BB0  D801               	call	i2u1912_48
 37382  009BB2  0012               	return	
 37383  009BB4                     i2u1912_48:
 37384  009BB4  0005               	push	
 37385  009BB6  6EFA               	movwf	pclath,c
 37386  009BB8  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37387  009BBA  6EFD               	movwf	tosl,c
 37388  009BBC  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37389  009BBE  6EFE               	movwf	tosh,c
 37390  009BC0  6AFF               	clrf	tosu,c
 37391  009BC2  50FA               	movf	pclath,w,c
 37392  009BC4  0012               	return		;indir
 37393  009BC6                     __end_of_TMR0_ISR:
 37394                           	callstack 0
 37395                           
 37396 ;; *************** function _rxi *****************
 37397 ;; Defined at:
 37398 ;;		line 41 in file "inputs_MC50.c"
 37399 ;; Parameters:    Size  Location     Type
 37400 ;;		None
 37401 ;; Auto vars:     Size  Location     Type
 37402 ;;		None
 37403 ;; Return value:  Size  Location     Type
 37404 ;;                  1    wreg      void 
 37405 ;; Registers used:
 37406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37407 ;; Tracked objects:
 37408 ;;		On entry : 3F/E
 37409 ;;		On exit  : 3C/0
 37410 ;;		Unchanged: 0/0
 37411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37416 ;;Total ram usage:        2 bytes
 37417 ;; Hardware stack levels used: 1
 37418 ;; This function calls:
 37419 ;;		Nothing
 37420 ;; This function is called by:
 37421 ;;		_TMR0_ISR
 37422 ;; This function uses a non-reentrant model
 37423 ;;
 37424                           
 37425                           	psect	text203
 37426  004F80                     __ptext203:
 37427                           	callstack 0
 37428  004F80                     _rxi:
 37429                           	callstack 15
 37430                           
 37431                           ; BSR set to: 14
 37432                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 37433                           
 37434                           ;incstack = 0
 37435  004F80  0E00               	movlw	0
 37436  004F82  B68E               	btfsc	142,3,c	;volatile
 37437  004F84  0E01               	movlw	1
 37438  004F86  0100               	movlb	0	; () banked
 37439  004F88  6F89               	movwf	_RFBit& (0+255),b	;volatile
 37440                           
 37441                           ; BSR set to: 0
 37442                           ;inputs_MC50.c: 47:     if (RFFull)
 37443  004F8A  518B               	movf	_RFFull& (0+255),w,b	;volatile
 37444  004F8C  A4D8               	btfss	status,2,c
 37445  004F8E  0012               	return	
 37446  004F90  D116               	goto	i2l15064
 37447  004F92                     i2l14954:
 37448                           
 37449                           ; BSR set to: 1
 37450                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 37451  004F92  0100               	movlb	0	; () banked
 37452  004F94  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37453  004F96  A4D8               	btfss	status,2,c
 37454  004F98  D004               	goto	i2l14958
 37455                           
 37456                           ; BSR set to: 0
 37457                           ;inputs_MC50.c: 56:                 RFstate = 3;
 37458  004F9A  0E03               	movlw	3
 37459  004F9C  0101               	movlb	1	; () banked
 37460  004F9E  6F9C               	movwf	_RFstate& (0+255),b
 37461                           
 37462                           ;inputs_MC50.c: 57:             } else {
 37463  004FA0  0012               	return	
 37464  004FA2                     i2l14958:
 37465                           
 37466                           ; BSR set to: 0
 37467                           ;inputs_MC50.c: 58:                 RFcount--;
 37468  004FA2  077E               	decf	_RFcount& (0+255),f,b
 37469  004FA4  A0D8               	btfss	status,0,c
 37470  004FA6  077F               	decf	(_RFcount+1)& (0+255),f,b
 37471                           
 37472                           ; BSR set to: 0
 37473                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 37474  004FA8  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37475  004FAA  0012               	return	
 37476  004FAC  0EF6               	movlw	246
 37477  004FAE  5D7E               	subwf	_RFcount& (0+255),w,b
 37478  004FB0  0EFF               	movlw	255
 37479  004FB2  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37480  004FB4  B0D8               	btfsc	status,0,c
 37481  004FB6  0012               	return	
 37482  004FB8                     i2u1485_40:
 37483  004FB8                     i2l14962:
 37484                           
 37485                           ; BSR set to: 0
 37486                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 37487  004FB8  0E00               	movlw	0
 37488  004FBA  0101               	movlb	1	; () banked
 37489  004FBC  6F9C               	movwf	_RFstate& (0+255),b
 37490  004FBE  0012               	return	
 37491  004FC0                     i2l14964:
 37492                           
 37493                           ; BSR set to: 1
 37494                           ;inputs_MC50.c: 67:             if (RFBit) {
 37495  004FC0  0100               	movlb	0	; () banked
 37496  004FC2  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37497  004FC4  B4D8               	btfsc	status,2,c
 37498  004FC6  D02C               	goto	i2l14984
 37499                           
 37500                           ; BSR set to: 0
 37501                           ;inputs_MC50.c: 71:                 RFstate = 2;
 37502  004FC8  0E02               	movlw	2
 37503  004FCA  0101               	movlb	1	; () banked
 37504  004FCC  6F9C               	movwf	_RFstate& (0+255),b
 37505                           
 37506                           ; BSR set to: 1
 37507                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 37508  004FCE  0EC8               	movlw	low _BufferRF
 37509  004FD0  0100               	movlb	0	; () banked
 37510  004FD2  258D               	addwf	_Bptr& (0+255),w,b
 37511  004FD4  6ED9               	movwf	fsr2l,c
 37512  004FD6  6ADA               	clrf	fsr2h,c
 37513  004FD8  0E02               	movlw	high _BufferRF
 37514  004FDA  22DA               	addwfc	fsr2h,f,c
 37515  004FDC  90D8               	bcf	status,0,c
 37516  004FDE  32DF               	rrcf	indf2,f,c
 37517                           
 37518                           ; BSR set to: 0
 37519                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 37520  004FE0  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37521  004FE2  D008               	goto	i2l14974
 37522                           
 37523                           ; BSR set to: 0
 37524                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 37525  004FE4  0EC8               	movlw	low _BufferRF
 37526  004FE6  258D               	addwf	_Bptr& (0+255),w,b
 37527  004FE8  6ED9               	movwf	fsr2l,c
 37528  004FEA  6ADA               	clrf	fsr2h,c
 37529  004FEC  0E02               	movlw	high _BufferRF
 37530  004FEE  22DA               	addwfc	fsr2h,f,c
 37531  004FF0  0E80               	movlw	128
 37532  004FF2  26DF               	addwf	indf2,f,c
 37533  004FF4                     i2l14974:
 37534                           
 37535                           ; BSR set to: 0
 37536                           ;inputs_MC50.c: 81:                 RFcount = 0;
 37537  004FF4  0E00               	movlw	0
 37538  004FF6  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37539  004FF8  0E00               	movlw	0
 37540  004FFA  6F7E               	movwf	_RFcount& (0+255),b
 37541                           
 37542                           ; BSR set to: 0
 37543                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 37544  004FFC  2B8C               	incf	_BitCount& (0+255),f,b
 37545  004FFE  C08C  F001         	movff	_BitCount,??_rxi
 37546  005002  0E07               	movlw	7
 37547  005004  1601               	andwf	??_rxi^0,f,c
 37548  005006  B4D8               	btfsc	status,2,c
 37549                           
 37550                           ; BSR set to: 0
 37551                           ;inputs_MC50.c: 84:                     Bptr++;
 37552  005008  2B8D               	incf	_Bptr& (0+255),f,b
 37553                           
 37554                           ; BSR set to: 0
 37555                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 37556  00500A  0E41               	movlw	65
 37557  00500C  198C               	xorwf	_BitCount& (0+255),w,b
 37558  00500E  A4D8               	btfss	status,2,c
 37559  005010  0012               	return	
 37560                           
 37561                           ; BSR set to: 0
 37562                           ;inputs_MC50.c: 86:                     RFstate = 0;
 37563  005012  0E00               	movlw	0
 37564  005014  0101               	movlb	1	; () banked
 37565  005016  6F9C               	movwf	_RFstate& (0+255),b
 37566                           
 37567                           ;inputs_MC50.c: 87:                     RFFull = 1;
 37568  005018  0E01               	movlw	1
 37569  00501A  0100               	movlb	0	; () banked
 37570  00501C  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37571  00501E  0012               	return	
 37572  005020                     i2l14984:
 37573                           
 37574                           ; BSR set to: 0
 37575                           ;inputs_MC50.c: 92:                 RFcount++;
 37576  005020  4B7E               	infsnz	_RFcount& (0+255),f,b
 37577  005022  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37578                           
 37579                           ; BSR set to: 0
 37580                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 37581  005024  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37582  005026  0012               	return	
 37583  005028  517F               	movf	(_RFcount+1)& (0+255),w,b
 37584  00502A  E104               	bnz	i2u1490_40
 37585  00502C  0E0A               	movlw	10
 37586  00502E  5D7E               	subwf	_RFcount& (0+255),w,b
 37587  005030  A0D8               	btfss	status,0,c
 37588  005032  0012               	return	
 37589  005034                     i2u1490_40:
 37590                           
 37591                           ; BSR set to: 0
 37592                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 37593  005034  0E01               	movlw	1
 37594  005036  0101               	movlb	1	; () banked
 37595  005038  6F9C               	movwf	_RFstate& (0+255),b
 37596                           
 37597                           ;inputs_MC50.c: 97:                     Bptr = 0;
 37598  00503A  0E00               	movlw	0
 37599  00503C  0100               	movlb	0	; () banked
 37600  00503E  6F8D               	movwf	_Bptr& (0+255),b
 37601                           
 37602                           ;inputs_MC50.c: 98:                     BitCount = 0;
 37603  005040  0E00               	movlw	0
 37604  005042  6F8C               	movwf	_BitCount& (0+255),b
 37605  005044  0012               	return	
 37606  005046                     i2l14990:
 37607                           
 37608                           ; BSR set to: 1
 37609                           ;inputs_MC50.c: 103:             if (RFBit) {
 37610  005046  0100               	movlb	0	; () banked
 37611  005048  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37612  00504A  B4D8               	btfsc	status,2,c
 37613  00504C  D030               	goto	i2l15006
 37614                           
 37615                           ; BSR set to: 0
 37616                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37617  00504E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37618  005050  D00E               	goto	i2u1493_40
 37619  005052  517F               	movf	(_RFcount+1)& (0+255),w,b
 37620  005054  E104               	bnz	i2u1492_40
 37621  005056  0E14               	movlw	20
 37622  005058  5D7E               	subwf	_RFcount& (0+255),w,b
 37623  00505A  A0D8               	btfss	status,0,c
 37624  00505C  D008               	goto	i2u1493_40
 37625  00505E                     i2u1492_40:
 37626                           
 37627                           ; BSR set to: 0
 37628  00505E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37629  005060  D01E               	goto	i2l15004
 37630  005062  517F               	movf	(_RFcount+1)& (0+255),w,b
 37631  005064  E104               	bnz	i2u1493_40
 37632  005066  0E2D               	movlw	45
 37633  005068  5D7E               	subwf	_RFcount& (0+255),w,b
 37634  00506A  A0D8               	btfss	status,0,c
 37635  00506C  D018               	goto	i2l15004
 37636  00506E                     i2u1493_40:
 37637                           
 37638                           ; BSR set to: 0
 37639                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37640  00506E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37641  005070  D7A3               	goto	i2u1485_40
 37642  005072  517F               	movf	(_RFcount+1)& (0+255),w,b
 37643  005074  E104               	bnz	i2u1494_40
 37644  005076  0E50               	movlw	80
 37645  005078  5D7E               	subwf	_RFcount& (0+255),w,b
 37646  00507A  A0D8               	btfss	status,0,c
 37647  00507C  D79D               	goto	i2u1485_40
 37648  00507E                     i2u1494_40:
 37649                           
 37650                           ; BSR set to: 0
 37651  00507E  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37652  005080  D006               	goto	i2l15002
 37653  005082  517F               	movf	(_RFcount+1)& (0+255),w,b
 37654  005084  E199               	bnz	i2l14962
 37655  005086  0E64               	movlw	100
 37656  005088  5D7E               	subwf	_RFcount& (0+255),w,b
 37657  00508A  B0D8               	btfsc	status,0,c
 37658  00508C  D795               	goto	i2u1485_40
 37659  00508E                     i2l15002:
 37660                           
 37661                           ; BSR set to: 0
 37662                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37663  00508E  0EFF               	movlw	255
 37664  005090  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37665  005092  0EF6               	movlw	246
 37666  005094  6F7E               	movwf	_RFcount& (0+255),b
 37667                           
 37668                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37669  005096  0E04               	movlw	4
 37670  005098  0101               	movlb	1	; () banked
 37671  00509A  6F9C               	movwf	_RFstate& (0+255),b
 37672  00509C  0012               	return	
 37673  00509E                     i2l15004:
 37674                           
 37675                           ; BSR set to: 0
 37676                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37677  00509E  0E00               	movlw	0
 37678  0050A0  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37679  0050A2  0E00               	movlw	0
 37680  0050A4  6F7E               	movwf	_RFcount& (0+255),b
 37681                           
 37682                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37683  0050A6  0E02               	movlw	2
 37684  0050A8  0101               	movlb	1	; () banked
 37685  0050AA  6F9C               	movwf	_RFstate& (0+255),b
 37686  0050AC  0012               	return	
 37687  0050AE                     i2l15006:
 37688                           
 37689                           ; BSR set to: 0
 37690                           ;inputs_MC50.c: 122:                 RFcount++;
 37691  0050AE  4B7E               	infsnz	_RFcount& (0+255),f,b
 37692  0050B0  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37693  0050B2  0012               	return	
 37694  0050B4                     i2l15008:
 37695                           
 37696                           ; BSR set to: 1
 37697                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37698  0050B4  0100               	movlb	0	; () banked
 37699  0050B6  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37700  0050B8  A4D8               	btfss	status,2,c
 37701  0050BA  D056               	goto	i2l15044
 37702                           
 37703                           ; BSR set to: 0
 37704                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37705  0050BC  0E05               	movlw	5
 37706  0050BE  0101               	movlb	1	; () banked
 37707  0050C0  6F9C               	movwf	_RFstate& (0+255),b
 37708                           
 37709                           ; BSR set to: 1
 37710                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37711  0050C2  0EC8               	movlw	low _BufferRF
 37712  0050C4  0100               	movlb	0	; () banked
 37713  0050C6  258D               	addwf	_Bptr& (0+255),w,b
 37714  0050C8  6ED9               	movwf	fsr2l,c
 37715  0050CA  6ADA               	clrf	fsr2h,c
 37716  0050CC  0E02               	movlw	high _BufferRF
 37717  0050CE  22DA               	addwfc	fsr2h,f,c
 37718  0050D0  90D8               	bcf	status,0,c
 37719  0050D2  32DF               	rrcf	indf2,f,c
 37720                           
 37721                           ; BSR set to: 0
 37722                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37723  0050D4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37724  0050D6  D008               	goto	i2l15018
 37725                           
 37726                           ; BSR set to: 0
 37727                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37728  0050D8  0EC8               	movlw	low _BufferRF
 37729  0050DA  258D               	addwf	_Bptr& (0+255),w,b
 37730  0050DC  6ED9               	movwf	fsr2l,c
 37731  0050DE  6ADA               	clrf	fsr2h,c
 37732  0050E0  0E02               	movlw	high _BufferRF
 37733  0050E2  22DA               	addwfc	fsr2h,f,c
 37734  0050E4  0E80               	movlw	128
 37735  0050E6  26DF               	addwf	indf2,f,c
 37736  0050E8                     i2l15018:
 37737                           
 37738                           ; BSR set to: 0
 37739                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37740  0050E8  0E00               	movlw	0
 37741  0050EA  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37742  0050EC  0E00               	movlw	0
 37743  0050EE  6F7E               	movwf	_RFcount& (0+255),b
 37744                           
 37745                           ; BSR set to: 0
 37746                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37747  0050F0  2B8C               	incf	_BitCount& (0+255),f,b
 37748  0050F2  C08C  F001         	movff	_BitCount,??_rxi
 37749  0050F6  0E07               	movlw	7
 37750  0050F8  1601               	andwf	??_rxi^0,f,c
 37751  0050FA  A4D8               	btfss	status,2,c
 37752  0050FC  D009               	goto	i2l15026
 37753                           
 37754                           ; BSR set to: 0
 37755                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37756  0050FE  2B8D               	incf	_Bptr& (0+255),f,b
 37757                           
 37758                           ; BSR set to: 0
 37759                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37760  005100  0EC8               	movlw	low _BufferRF
 37761  005102  258D               	addwf	_Bptr& (0+255),w,b
 37762  005104  6ED9               	movwf	fsr2l,c
 37763  005106  6ADA               	clrf	fsr2h,c
 37764  005108  0E02               	movlw	high _BufferRF
 37765  00510A  22DA               	addwfc	fsr2h,f,c
 37766  00510C  0E00               	movlw	0
 37767  00510E  6EDF               	movwf	indf2,c
 37768  005110                     i2l15026:
 37769                           
 37770                           ; BSR set to: 0
 37771                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37772  005110  0E0D               	movlw	13
 37773  005112  198C               	xorwf	_BitCount& (0+255),w,b
 37774  005114  A4D8               	btfss	status,2,c
 37775  005116  0012               	return	
 37776                           
 37777                           ; BSR set to: 0
 37778                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37779  005118  0E00               	movlw	0
 37780  00511A  0101               	movlb	1	; () banked
 37781  00511C  6F9C               	movwf	_RFstate& (0+255),b
 37782                           
 37783                           ; BSR set to: 1
 37784                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37785  00511E  0100               	movlb	0	; () banked
 37786  005120  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37787  005122  A4D8               	btfss	status,2,c
 37788  005124  D01A               	goto	i2l15038
 37789                           
 37790                           ; BSR set to: 0
 37791                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37792  005126  0102               	movlb	2	; () banked
 37793  005128  51C8               	movf	_BufferRF& (0+255),w,b
 37794  00512A  0101               	movlb	1	; () banked
 37795  00512C  1989               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37796  00512E  A4D8               	btfss	status,2,c
 37797  005130  D00F               	goto	i2l1620
 37798                           
 37799                           ; BSR set to: 1
 37800  005132  0102               	movlb	2	; () banked
 37801  005134  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 37802  005136  0101               	movlb	1	; () banked
 37803  005138  198A               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37804  00513A  A4D8               	btfss	status,2,c
 37805  00513C  D009               	goto	i2l1620
 37806                           
 37807                           ; BSR set to: 1
 37808                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37809  00513E  0E01               	movlw	1
 37810  005140  0100               	movlb	0	; () banked
 37811  005142  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37812                           
 37813                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37814  005144  0E00               	movlw	0
 37815  005146  0102               	movlb	2	; () banked
 37816  005148  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 37817                           
 37818                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37819  00514A  0E00               	movlw	0
 37820  00514C  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 37821                           
 37822                           ;inputs_MC50.c: 152:                         }
 37823  00514E  0012               	return	
 37824  005150                     i2l1620:
 37825                           
 37826                           ; BSR set to: 1
 37827                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37828  005150  C2C8  F189         	movff	_BufferRF,_BufferRF_12BIT
 37829                           
 37830                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37831  005154  C2C9  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37832  005158  0012               	return	
 37833  00515A                     i2l15038:
 37834                           
 37835                           ; BSR set to: 0
 37836                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37837  00515A  0E01               	movlw	1
 37838  00515C  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37839                           
 37840                           ; BSR set to: 0
 37841                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37842  00515E  C2C8  F189         	movff	_BufferRF,_BufferRF_12BIT
 37843                           
 37844                           ; BSR set to: 0
 37845                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37846  005162  C2C9  F18A         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37847  005166  0012               	return	
 37848  005168                     i2l15044:
 37849                           
 37850                           ; BSR set to: 0
 37851                           ;inputs_MC50.c: 168:                 RFcount++;
 37852  005168  4B7E               	infsnz	_RFcount& (0+255),f,b
 37853  00516A  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37854                           
 37855                           ; BSR set to: 0
 37856                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37857  00516C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37858  00516E  0012               	return	
 37859  005170  517F               	movf	(_RFcount+1)& (0+255),w,b
 37860  005172  E104               	bnz	i2u1503_40
 37861  005174  0E0A               	movlw	10
 37862  005176  5D7E               	subwf	_RFcount& (0+255),w,b
 37863  005178  A0D8               	btfss	status,0,c
 37864  00517A  0012               	return	
 37865  00517C                     i2u1503_40:
 37866  00517C  D71D               	goto	i2u1485_40
 37867  00517E                     i2l15050:
 37868                           
 37869                           ; BSR set to: 1
 37870                           ;inputs_MC50.c: 177:             if (RFBit) {
 37871  00517E  0100               	movlb	0	; () banked
 37872  005180  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37873  005182  B4D8               	btfsc	status,2,c
 37874  005184  D004               	goto	i2l15054
 37875                           
 37876                           ; BSR set to: 0
 37877                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37878  005186  0E04               	movlw	4
 37879  005188  0101               	movlb	1	; () banked
 37880  00518A  6F9C               	movwf	_RFstate& (0+255),b
 37881                           
 37882                           ;inputs_MC50.c: 183:             } else {
 37883  00518C  0012               	return	
 37884  00518E                     i2l15054:
 37885                           
 37886                           ; BSR set to: 0
 37887                           ;inputs_MC50.c: 184:                 RFcount--;
 37888  00518E  077E               	decf	_RFcount& (0+255),f,b
 37889  005190  A0D8               	btfss	status,0,c
 37890  005192  077F               	decf	(_RFcount+1)& (0+255),f,b
 37891                           
 37892                           ; BSR set to: 0
 37893                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 37894  005194  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37895  005196  0012               	return	
 37896  005198  0EF6               	movlw	246
 37897  00519A  5D7E               	subwf	_RFcount& (0+255),w,b
 37898  00519C  0EFF               	movlw	255
 37899  00519E  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37900  0051A0  B0D8               	btfsc	status,0,c
 37901  0051A2  0012               	return	
 37902  0051A4  D747               	goto	i2u1490_40
 37903  0051A6                     i2l15060:
 37904                           
 37905                           ; BSR set to: 1
 37906                           ;inputs_MC50.c: 197:             RFstate = 1;
 37907  0051A6  0E01               	movlw	1
 37908  0051A8  6F9C               	movwf	_RFstate& (0+255),b
 37909                           
 37910                           ;inputs_MC50.c: 198:             RFcount = 0;
 37911  0051AA  0E00               	movlw	0
 37912  0051AC  0100               	movlb	0	; () banked
 37913  0051AE  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37914  0051B0  0E00               	movlw	0
 37915  0051B2  6F7E               	movwf	_RFcount& (0+255),b
 37916                           
 37917                           ;inputs_MC50.c: 199:             Bptr = 0;
 37918  0051B4  0E00               	movlw	0
 37919  0051B6  6F8D               	movwf	_Bptr& (0+255),b
 37920                           
 37921                           ;inputs_MC50.c: 200:             BitCount = 0;
 37922  0051B8  0E00               	movlw	0
 37923  0051BA  6F8C               	movwf	_BitCount& (0+255),b
 37924                           
 37925                           ;inputs_MC50.c: 201:             break;
 37926  0051BC  0012               	return	
 37927  0051BE                     i2l15064:
 37928                           
 37929                           ; BSR set to: 0
 37930  0051BE  0101               	movlb	1	; () banked
 37931  0051C0  519C               	movf	_RFstate& (0+255),w,b
 37932  0051C2  6E01               	movwf	??_rxi^0,c
 37933  0051C4  6A02               	clrf	(??_rxi+1)^0,c
 37934                           
 37935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37936                           ; Switch size 1, requested type "simple"
 37937                           ; Number of cases is 1, Range of values is 0 to 0
 37938                           ; switch strategies available:
 37939                           ; Name         Instructions Cycles
 37940                           ; simple_byte            4     3 (average)
 37941                           ;	Chosen strategy is simple_byte
 37942  0051C6  5002               	movf	(??_rxi+1)^0,w,c
 37943  0051C8  0A00               	xorlw	0	; case 0
 37944  0051CA  A4D8               	btfss	status,2,c
 37945  0051CC  D7EC               	goto	i2l15060
 37946                           
 37947                           ; BSR set to: 1
 37948                           ; Switch size 1, requested type "simple"
 37949                           ; Number of cases is 6, Range of values is 0 to 5
 37950                           ; switch strategies available:
 37951                           ; Name         Instructions Cycles
 37952                           ; simple_byte           19    10 (average)
 37953                           ;	Chosen strategy is simple_byte
 37954  0051CE  5001               	movf	??_rxi^0,w,c
 37955  0051D0  0A00               	xorlw	0	; case 0
 37956  0051D2  B4D8               	btfsc	status,2,c
 37957  0051D4  D7E8               	goto	i2l15060
 37958  0051D6  0A01               	xorlw	1	; case 1
 37959  0051D8  B4D8               	btfsc	status,2,c
 37960  0051DA  D735               	goto	i2l14990
 37961  0051DC  0A03               	xorlw	3	; case 2
 37962  0051DE  B4D8               	btfsc	status,2,c
 37963  0051E0  D6D8               	goto	i2l14954
 37964  0051E2  0A01               	xorlw	1	; case 3
 37965  0051E4  B4D8               	btfsc	status,2,c
 37966  0051E6  D6EC               	goto	i2l14964
 37967  0051E8  0A07               	xorlw	7	; case 4
 37968  0051EA  B4D8               	btfsc	status,2,c
 37969  0051EC  D763               	goto	i2l15008
 37970  0051EE  0A01               	xorlw	1	; case 5
 37971  0051F0  B4D8               	btfsc	status,2,c
 37972  0051F2  D7C5               	goto	i2l15050
 37973  0051F4  D7D8               	goto	i2l15060
 37974  0051F6                     __end_of_rxi:
 37975                           	callstack 0
 37976                           
 37977 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 37978 ;; Defined at:
 37979 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 37980 ;; Parameters:    Size  Location     Type
 37981 ;;		None
 37982 ;; Auto vars:     Size  Location     Type
 37983 ;;		None
 37984 ;; Return value:  Size  Location     Type
 37985 ;;                  1    wreg      void 
 37986 ;; Registers used:
 37987 ;;		None
 37988 ;; Tracked objects:
 37989 ;;		On entry : 3F/2
 37990 ;;		On exit  : 3F/2
 37991 ;;		Unchanged: 3F/0
 37992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37997 ;;Total ram usage:        0 bytes
 37998 ;; Hardware stack levels used: 1
 37999 ;; This function calls:
 38000 ;;		Nothing
 38001 ;; This function is called by:
 38002 ;;		_TMR0_Initialize
 38003 ;;		_TMR0_ISR
 38004 ;; This function uses a non-reentrant model
 38005 ;;
 38006                           
 38007                           	psect	text204
 38008  00A026                     __ptext204:
 38009                           	callstack 0
 38010  00A026                     _TMR0_DefaultInterruptHandler:
 38011                           	callstack 15
 38012                           
 38013                           ; BSR set to: 2
 38014                           
 38015                           ;incstack = 0
 38016  00A026  0012               	return		;funcret
 38017  00A028                     __end_of_TMR0_DefaultInterruptHandler:
 38018                           	callstack 0
 38019                           
 38020 ;; *************** function _EUSART1_Transmit_ISR *****************
 38021 ;; Defined at:
 38022 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 38023 ;; Parameters:    Size  Location     Type
 38024 ;;		None
 38025 ;; Auto vars:     Size  Location     Type
 38026 ;;		None
 38027 ;; Return value:  Size  Location     Type
 38028 ;;                  1    wreg      void 
 38029 ;; Registers used:
 38030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38031 ;; Tracked objects:
 38032 ;;		On entry : 3F/2
 38033 ;;		On exit  : 30/0
 38034 ;;		Unchanged: 0/0
 38035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38040 ;;Total ram usage:        0 bytes
 38041 ;; Hardware stack levels used: 1
 38042 ;; This function calls:
 38043 ;;		Nothing
 38044 ;; This function is called by:
 38045 ;;		_EUSART1_Initialize
 38046 ;;		_INTERRUPT_InterruptManager
 38047 ;; This function uses a non-reentrant model
 38048 ;;
 38049                           
 38050                           	psect	text205
 38051  009812                     __ptext205:
 38052                           	callstack 0
 38053  009812                     _EUSART1_Transmit_ISR:
 38054                           	callstack 16
 38055                           
 38056                           ; BSR set to: 2
 38057                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 38058                           
 38059                           ; BSR set to: 2
 38060                           ;incstack = 0
 38061  009812  0E08               	movlw	8
 38062  009814  0101               	movlb	1	; () banked
 38063  009816  61FD               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 38064  009818  D012               	goto	i2l106
 38065                           
 38066                           ; BSR set to: 1
 38067                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 38068  00981A  0E84               	movlw	low _eusart1TxBuffer
 38069  00981C  0100               	movlb	0	; () banked
 38070  00981E  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 38071  009820  6ED9               	movwf	fsr2l,c
 38072  009822  6ADA               	clrf	fsr2h,c
 38073  009824  0E02               	movlw	high _eusart1TxBuffer
 38074  009826  22DA               	addwfc	fsr2h,f,c
 38075  009828  50DF               	movf	indf2,w,c
 38076  00982A  6E9A               	movwf	154,c	;volatile
 38077                           
 38078                           ; BSR set to: 0
 38079  00982C  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 38080                           
 38081                           ; BSR set to: 0
 38082                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 38083  00982E  0E07               	movlw	7
 38084  009830  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 38085  009832  D002               	goto	i2l16960
 38086                           
 38087                           ; BSR set to: 0
 38088                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 38089  009834  0E00               	movlw	0
 38090  009836  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 38091  009838                     i2l16960:
 38092                           
 38093                           ; BSR set to: 0
 38094                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 38095  009838  0101               	movlb	1	; () banked
 38096  00983A  2BFD               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 38097                           
 38098                           ;mcc_generated_files/eusart1.c: 209:     }
 38099  00983C  0012               	return	
 38100  00983E                     i2l106:
 38101                           
 38102                           ; BSR set to: 1
 38103                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 38104  00983E  010E               	movlb	14	; () banked
 38105  009840  99C5               	bcf	197,4,b	;volatile
 38106  009842  0012               	return		;funcret
 38107  009844                     __end_of_EUSART1_Transmit_ISR:
 38108                           	callstack 0
 38109                           
 38110 ;; *************** function _EUSART1_Receive_ISR *****************
 38111 ;; Defined at:
 38112 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 38113 ;; Parameters:    Size  Location     Type
 38114 ;;		None
 38115 ;; Auto vars:     Size  Location     Type
 38116 ;;		None
 38117 ;; Return value:  Size  Location     Type
 38118 ;;                  1    wreg      void 
 38119 ;; Registers used:
 38120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 38121 ;; Tracked objects:
 38122 ;;		On entry : 3F/2
 38123 ;;		On exit  : 0/0
 38124 ;;		Unchanged: 0/0
 38125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38130 ;;Total ram usage:        0 bytes
 38131 ;; Hardware stack levels used: 1
 38132 ;; Hardware stack levels required when called: 2
 38133 ;; This function calls:
 38134 ;;		Absolute function
 38135 ;;		_EUSART1_DefaultErrorHandler
 38136 ;;		_EUSART1_DefaultFramingErrorHandler
 38137 ;;		_EUSART1_DefaultOverrunErrorHandler
 38138 ;;		_EUSART1_RxDataHandler
 38139 ;; This function is called by:
 38140 ;;		_EUSART1_Initialize
 38141 ;;		_INTERRUPT_InterruptManager
 38142 ;; This function uses a non-reentrant model
 38143 ;;
 38144                           
 38145                           	psect	text206
 38146  00806E                     __ptext206:
 38147                           	callstack 0
 38148  00806E                     _EUSART1_Receive_ISR:
 38149                           	callstack 14
 38150                           
 38151                           ; BSR set to: 2
 38152                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 38153                           
 38154                           ;incstack = 0
 38155  00806E  0E74               	movlw	low _eusart1RxStatusBuffer
 38156  008070  0100               	movlb	0	; () banked
 38157  008072  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38158  008074  6ED9               	movwf	fsr2l,c
 38159  008076  6ADA               	clrf	fsr2h,c
 38160  008078  0E02               	movlw	high _eusart1RxStatusBuffer
 38161  00807A  22DA               	addwfc	fsr2h,f,c
 38162  00807C  0E00               	movlw	0
 38163  00807E  6EDF               	movwf	indf2,c
 38164                           
 38165                           ; BSR set to: 0
 38166                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 38167  008080  A49D               	btfss	157,2,c	;volatile
 38168  008082  D013               	goto	i2u1906_49
 38169                           
 38170                           ; BSR set to: 0
 38171                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 38172  008084  0E74               	movlw	low _eusart1RxStatusBuffer
 38173  008086  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38174  008088  6ED9               	movwf	fsr2l,c
 38175  00808A  6ADA               	clrf	fsr2h,c
 38176  00808C  0E02               	movlw	high _eusart1RxStatusBuffer
 38177  00808E  22DA               	addwfc	fsr2h,f,c
 38178  008090  0102               	movlb	2	; () banked
 38179  008092  82DF               	bsf	indf2,1,c
 38180                           
 38181                           ; BSR set to: 2
 38182                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 38183  008094  D801               	call	i2u1906_48
 38184  008096  D009               	goto	i2u1906_49
 38185  008098                     i2u1906_48:
 38186  008098  0005               	push	
 38187  00809A  6EFA               	movwf	pclath,c
 38188  00809C  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 38189  00809E  6EFD               	movwf	tosl,c
 38190  0080A0  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 38191  0080A2  6EFE               	movwf	tosh,c
 38192  0080A4  6AFF               	clrf	tosu,c
 38193  0080A6  50FA               	movf	pclath,w,c
 38194  0080A8  0012               	return		;indir
 38195  0080AA                     i2u1906_49:
 38196                           
 38197                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 38198  0080AA  A29D               	btfss	157,1,c	;volatile
 38199  0080AC  D014               	goto	i2u1908_49
 38200                           
 38201                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 38202  0080AE  0E74               	movlw	low _eusart1RxStatusBuffer
 38203  0080B0  0100               	movlb	0	; () banked
 38204  0080B2  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38205  0080B4  6ED9               	movwf	fsr2l,c
 38206  0080B6  6ADA               	clrf	fsr2h,c
 38207  0080B8  0E02               	movlw	high _eusart1RxStatusBuffer
 38208  0080BA  22DA               	addwfc	fsr2h,f,c
 38209  0080BC  0102               	movlb	2	; () banked
 38210  0080BE  84DF               	bsf	indf2,2,c
 38211                           
 38212                           ; BSR set to: 2
 38213                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 38214  0080C0  D801               	call	i2u1908_48
 38215  0080C2  D009               	goto	i2u1908_49
 38216  0080C4                     i2u1908_48:
 38217  0080C4  0005               	push	
 38218  0080C6  6EFA               	movwf	pclath,c
 38219  0080C8  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 38220  0080CA  6EFD               	movwf	tosl,c
 38221  0080CC  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 38222  0080CE  6EFE               	movwf	tosh,c
 38223  0080D0  6AFF               	clrf	tosu,c
 38224  0080D2  50FA               	movf	pclath,w,c
 38225  0080D4  0012               	return		;indir
 38226  0080D6                     i2u1908_49:
 38227                           
 38228                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 38229  0080D6  0E74               	movlw	low _eusart1RxStatusBuffer
 38230  0080D8  0100               	movlb	0	; () banked
 38231  0080DA  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38232  0080DC  6ED9               	movwf	fsr2l,c
 38233  0080DE  6ADA               	clrf	fsr2h,c
 38234  0080E0  0E02               	movlw	high _eusart1RxStatusBuffer
 38235  0080E2  22DA               	addwfc	fsr2h,f,c
 38236  0080E4  50DF               	movf	indf2,w,c
 38237  0080E6  B4D8               	btfsc	status,2,c
 38238  0080E8  D00C               	goto	i2l16980
 38239                           
 38240                           ; BSR set to: 0
 38241                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 38242  0080EA  D801               	call	i2u1910_48
 38243  0080EC  0012               	return	
 38244  0080EE                     i2u1910_48:
 38245  0080EE  0005               	push	
 38246  0080F0  6EFA               	movwf	pclath,c
 38247  0080F2  0102               	movlb	2	; () banked
 38248  0080F4  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 38249  0080F6  6EFD               	movwf	tosl,c
 38250  0080F8  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 38251  0080FA  6EFE               	movwf	tosh,c
 38252  0080FC  6AFF               	clrf	tosu,c
 38253  0080FE  50FA               	movf	pclath,w,c
 38254  008100  0012               	return		;indir
 38255  008102                     i2l16980:
 38256                           
 38257                           ; BSR set to: 0
 38258                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 38259  008102  EC3B  F04E         	call	_EUSART1_RxDataHandler	;wreg free
 38260  008106  0012               	return		;funcret
 38261  008108                     __end_of_EUSART1_Receive_ISR:
 38262                           	callstack 0
 38263                           
 38264 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 38265 ;; Defined at:
 38266 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 38267 ;; Parameters:    Size  Location     Type
 38268 ;;		None
 38269 ;; Auto vars:     Size  Location     Type
 38270 ;;		None
 38271 ;; Return value:  Size  Location     Type
 38272 ;;                  1    wreg      void 
 38273 ;; Registers used:
 38274 ;;		None
 38275 ;; Tracked objects:
 38276 ;;		On entry : 3F/2
 38277 ;;		On exit  : 3F/2
 38278 ;;		Unchanged: 3F/0
 38279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38284 ;;Total ram usage:        0 bytes
 38285 ;; Hardware stack levels used: 1
 38286 ;; This function calls:
 38287 ;;		Nothing
 38288 ;; This function is called by:
 38289 ;;		_EUSART1_Initialize
 38290 ;;		_EUSART1_Receive_ISR
 38291 ;; This function uses a non-reentrant model
 38292 ;;
 38293                           
 38294                           	psect	text207
 38295  009FE8                     __ptext207:
 38296                           	callstack 0
 38297  009FE8                     _EUSART1_DefaultOverrunErrorHandler:
 38298                           	callstack 15
 38299                           
 38300                           ; BSR set to: 2
 38301                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 38302                           
 38303                           ;incstack = 0
 38304  009FE8  989D               	bcf	157,4,c	;volatile
 38305                           
 38306                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 38307  009FEA  889D               	bsf	157,4,c	;volatile
 38308                           
 38309                           ; BSR set to: 2
 38310  009FEC  0012               	return		;funcret
 38311  009FEE                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 38312                           	callstack 0
 38313                           
 38314 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 38315 ;; Defined at:
 38316 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 38317 ;; Parameters:    Size  Location     Type
 38318 ;;		None
 38319 ;; Auto vars:     Size  Location     Type
 38320 ;;		None
 38321 ;; Return value:  Size  Location     Type
 38322 ;;                  1    wreg      void 
 38323 ;; Registers used:
 38324 ;;		None
 38325 ;; Tracked objects:
 38326 ;;		On entry : 3F/2
 38327 ;;		On exit  : 3F/2
 38328 ;;		Unchanged: 3F/0
 38329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38334 ;;Total ram usage:        0 bytes
 38335 ;; Hardware stack levels used: 1
 38336 ;; This function calls:
 38337 ;;		Nothing
 38338 ;; This function is called by:
 38339 ;;		_EUSART1_Initialize
 38340 ;;		_EUSART1_Receive_ISR
 38341 ;; This function uses a non-reentrant model
 38342 ;;
 38343                           
 38344                           	psect	text208
 38345  00A028                     __ptext208:
 38346                           	callstack 0
 38347  00A028                     _EUSART1_DefaultFramingErrorHandler:
 38348                           	callstack 15
 38349                           
 38350                           ; BSR set to: 2
 38351                           
 38352                           ; BSR set to: 2
 38353                           ;incstack = 0
 38354  00A028  0012               	return		;funcret
 38355  00A02A                     __end_of_EUSART1_DefaultFramingErrorHandler:
 38356                           	callstack 0
 38357                           
 38358 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 38359 ;; Defined at:
 38360 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 38361 ;; Parameters:    Size  Location     Type
 38362 ;;		None
 38363 ;; Auto vars:     Size  Location     Type
 38364 ;;		None
 38365 ;; Return value:  Size  Location     Type
 38366 ;;                  1    wreg      void 
 38367 ;; Registers used:
 38368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38369 ;; Tracked objects:
 38370 ;;		On entry : 3F/2
 38371 ;;		On exit  : 3F/0
 38372 ;;		Unchanged: 0/0
 38373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38378 ;;Total ram usage:        0 bytes
 38379 ;; Hardware stack levels used: 1
 38380 ;; Hardware stack levels required when called: 1
 38381 ;; This function calls:
 38382 ;;		_EUSART1_RxDataHandler
 38383 ;; This function is called by:
 38384 ;;		_EUSART1_Initialize
 38385 ;;		_EUSART1_Receive_ISR
 38386 ;; This function uses a non-reentrant model
 38387 ;;
 38388                           
 38389                           	psect	text209
 38390  009FEE                     __ptext209:
 38391                           	callstack 0
 38392  009FEE                     _EUSART1_DefaultErrorHandler:
 38393                           	callstack 14
 38394                           
 38395                           ; BSR set to: 2
 38396                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 38397                           
 38398                           ; BSR set to: 2
 38399                           ;incstack = 0
 38400  009FEE  EC3B  F04E         	call	_EUSART1_RxDataHandler	;wreg free
 38401                           
 38402                           ; BSR set to: 0
 38403  009FF2  0012               	return		;funcret
 38404  009FF4                     __end_of_EUSART1_DefaultErrorHandler:
 38405                           	callstack 0
 38406                           
 38407 ;; *************** function _EUSART1_RxDataHandler *****************
 38408 ;; Defined at:
 38409 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 38410 ;; Parameters:    Size  Location     Type
 38411 ;;		None
 38412 ;; Auto vars:     Size  Location     Type
 38413 ;;		None
 38414 ;; Return value:  Size  Location     Type
 38415 ;;                  1    wreg      void 
 38416 ;; Registers used:
 38417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38418 ;; Tracked objects:
 38419 ;;		On entry : 3D/0
 38420 ;;		On exit  : 3F/0
 38421 ;;		Unchanged: 0/0
 38422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38427 ;;Total ram usage:        0 bytes
 38428 ;; Hardware stack levels used: 1
 38429 ;; This function calls:
 38430 ;;		Nothing
 38431 ;; This function is called by:
 38432 ;;		_EUSART1_Receive_ISR
 38433 ;;		_EUSART1_DefaultErrorHandler
 38434 ;; This function uses a non-reentrant model
 38435 ;;
 38436                           
 38437                           	psect	text210
 38438  009C76                     __ptext210:
 38439                           	callstack 0
 38440  009C76                     _EUSART1_RxDataHandler:
 38441                           	callstack 15
 38442                           
 38443                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 38444                           
 38445                           ; BSR set to: 0
 38446                           ;incstack = 0
 38447  009C76  0E7C               	movlw	low _eusart1RxBuffer
 38448  009C78  0100               	movlb	0	; () banked
 38449  009C7A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38450  009C7C  6ED9               	movwf	fsr2l,c
 38451  009C7E  6ADA               	clrf	fsr2h,c
 38452  009C80  0E02               	movlw	high _eusart1RxBuffer
 38453  009C82  22DA               	addwfc	fsr2h,f,c
 38454  009C84  CF99 FFDF          	movff	3993,indf2	;volatile
 38455                           
 38456                           ; BSR set to: 0
 38457  009C88  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 38458                           
 38459                           ; BSR set to: 0
 38460                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 38461  009C8A  0E07               	movlw	7
 38462  009C8C  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 38463  009C8E  D002               	goto	i2l13220
 38464                           
 38465                           ; BSR set to: 0
 38466                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 38467  009C90  0E00               	movlw	0
 38468  009C92  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 38469  009C94                     i2l13220:
 38470                           
 38471                           ; BSR set to: 0
 38472                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 38473  009C94  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 38474                           
 38475                           ; BSR set to: 0
 38476  009C96  0012               	return		;funcret
 38477  009C98                     __end_of_EUSART1_RxDataHandler:
 38478                           	callstack 0
 38479                           
 38480                           	psect	text211
 38481  000000                     __ptext211:
 38482                           	callstack 0
 38483                           
 38484                           	psect	rparam
 38485  0000                     
 38486                           	psect	temp
 38487  000050                     btemp:
 38488                           	callstack 0
 38489  000050                     	ds	1
 38490  0000                     int$flags	set	btemp
 38491  0000                     wtemp8	set	btemp+1
 38492  0000                     ttemp5	set	btemp+1
 38493  0000                     ttemp6	set	btemp+4
 38494  0000                     ttemp7	set	btemp+8
 38495                           
 38496                           	psect	idloc
 38497                           
 38498                           ;Config register IDLOC0 @ 0x200000
 38499                           ;	unspecified, using default values
 38500  200000                     	org	2097152
 38501  200000  0FFF               	dw	4095
 38502                           
 38503                           ;Config register IDLOC1 @ 0x200002
 38504                           ;	unspecified, using default values
 38505  200002                     	org	2097154
 38506  200002  0FFF               	dw	4095
 38507                           
 38508                           ;Config register IDLOC2 @ 0x200004
 38509                           ;	unspecified, using default values
 38510  200004                     	org	2097156
 38511  200004  0FFF               	dw	4095
 38512                           
 38513                           ;Config register IDLOC3 @ 0x200006
 38514                           ;	unspecified, using default values
 38515  200006                     	org	2097158
 38516  200006  0FFF               	dw	4095
 38517                           
 38518                           ;Config register IDLOC4 @ 0x200008
 38519                           ;	unspecified, using default values
 38520  200008                     	org	2097160
 38521  200008  0FFF               	dw	4095
 38522                           
 38523                           ;Config register IDLOC5 @ 0x20000A
 38524                           ;	unspecified, using default values
 38525  20000A                     	org	2097162
 38526  20000A  0FFF               	dw	4095
 38527                           
 38528                           ;Config register IDLOC6 @ 0x20000C
 38529                           ;	unspecified, using default values
 38530  20000C                     	org	2097164
 38531  20000C  0FFF               	dw	4095
 38532                           
 38533                           ;Config register IDLOC7 @ 0x20000E
 38534                           ;	unspecified, using default values
 38535  20000E                     	org	2097166
 38536  20000E  0FFF               	dw	4095
 38537                           
 38538                           	psect	config
 38539                           
 38540                           ;Config register CONFIG1L @ 0x300000
 38541                           ;	External Oscillator mode Selection bits
 38542                           ;	FEXTOSC = OFF, Oscillator not enabled
 38543                           ;	Power-up default value for COSC bits
 38544                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38545  300000                     	org	3145728
 38546  300000  8C                 	db	140
 38547                           
 38548                           ;Config register CONFIG1H @ 0x300001
 38549                           ;	Clock Out Enable bit
 38550                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38551                           ;	Clock Switch Enable bit
 38552                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38553                           ;	Fail-Safe Clock Monitor Enable bit
 38554                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38555  300001                     	org	3145729
 38556  300001  FF                 	db	255
 38557                           
 38558                           ;Config register CONFIG2L @ 0x300002
 38559                           ;	Master Clear Enable bit
 38560                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38561                           ;	Power-up Timer Enable bit
 38562                           ;	PWRTE = ON, Power up timer enabled
 38563                           ;	Low-power BOR enable bit
 38564                           ;	LPBOREN = OFF, ULPBOR disabled
 38565                           ;	Brown-out Reset Enable bits
 38566                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38567  300002                     	org	3145730
 38568  300002  FD                 	db	253
 38569                           
 38570                           ;Config register CONFIG2H @ 0x300003
 38571                           ;	Brown Out Reset Voltage selection bits
 38572                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 38573                           ;	ZCD Disable bit
 38574                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 38575                           ;	PPSLOCK bit One-Way Set Enable bit
 38576                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 38577                           ;	Stack Full/Underflow Reset Enable bit
 38578                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38579                           ;	Debugger Enable bit
 38580                           ;	DEBUG = OFF, Background debugger disabled
 38581                           ;	Extended Instruction Set Enable bit
 38582                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38583  300003                     	org	3145731
 38584  300003  FF                 	db	255
 38585                           
 38586                           ;Config register CONFIG3L @ 0x300004
 38587                           ;	WDT Period Select bits
 38588                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38589                           ;	WDT operating mode
 38590                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 38591  300004                     	org	3145732
 38592  300004  BF                 	db	191
 38593                           
 38594                           ;Config register CONFIG3H @ 0x300005
 38595                           ;	WDT Window Select bits
 38596                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38597                           ;	WDT input clock selector
 38598                           ;	WDTCCS = SC, Software Control
 38599  300005                     	org	3145733
 38600  300005  FF                 	db	255
 38601                           
 38602                           ;Config register CONFIG4L @ 0x300006
 38603                           ;	Write Protection Block 0
 38604                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 38605                           ;	Write Protection Block 1
 38606                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 38607                           ;	Write Protection Block 2
 38608                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 38609                           ;	Write Protection Block 3
 38610                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 38611  300006                     	org	3145734
 38612  300006  FF                 	db	255
 38613                           
 38614                           ;Config register CONFIG4H @ 0x300007
 38615                           ;	Configuration Register Write Protection bit
 38616                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38617                           ;	Boot Block Write Protection bit
 38618                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38619                           ;	Data EEPROM Write Protection bit
 38620                           ;	WRTD = OFF, Data EEPROM not write-protected
 38621                           ;	Scanner Enable bit
 38622                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38623                           ;	Low Voltage Programming Enable bit
 38624                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38625  300007                     	org	3145735
 38626  300007  DF                 	db	223
 38627                           
 38628                           ;Config register CONFIG5L @ 0x300008
 38629                           ;	UserNVM Program Memory Code Protection bit
 38630                           ;	CP = ON, UserNVM code protection enabled
 38631                           ;	DataNVM Memory Code Protection bit
 38632                           ;	CPD = ON, DataNVM code protection enabled
 38633  300008                     	org	3145736
 38634  300008  FC                 	db	252
 38635                           
 38636                           ;Config register CONFIG5H @ 0x300009
 38637                           ;	unspecified, using default values
 38638  300009                     	org	3145737
 38639  300009  FF                 	db	255
 38640                           
 38641                           ;Config register CONFIG6L @ 0x30000A
 38642                           ;	Table Read Protection Block 0
 38643                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38644                           ;	Table Read Protection Block 1
 38645                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38646                           ;	Table Read Protection Block 2
 38647                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38648                           ;	Table Read Protection Block 3
 38649                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38650  30000A                     	org	3145738
 38651  30000A  FF                 	db	255
 38652                           
 38653                           ;Config register CONFIG6H @ 0x30000B
 38654                           ;	Boot Block Table Read Protection bit
 38655                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38656  30000B                     	org	3145739
 38657  30000B  FF                 	db	255
 38658                           tosu	equ	0xFFF
 38659                           tosh	equ	0xFFE
 38660                           tosl	equ	0xFFD
 38661                           stkptr	equ	0xFFC
 38662                           pclatu	equ	0xFFB
 38663                           pclath	equ	0xFFA
 38664                           pcl	equ	0xFF9
 38665                           tblptru	equ	0xFF8
 38666                           tblptrh	equ	0xFF7
 38667                           tblptrl	equ	0xFF6
 38668                           tablat	equ	0xFF5
 38669                           prodh	equ	0xFF4
 38670                           prodl	equ	0xFF3
 38671                           indf0	equ	0xFEF
 38672                           postinc0	equ	0xFEE
 38673                           postdec0	equ	0xFED
 38674                           preinc0	equ	0xFEC
 38675                           plusw0	equ	0xFEB
 38676                           fsr0h	equ	0xFEA
 38677                           fsr0l	equ	0xFE9
 38678                           wreg	equ	0xFE8
 38679                           indf1	equ	0xFE7
 38680                           postinc1	equ	0xFE6
 38681                           postdec1	equ	0xFE5
 38682                           preinc1	equ	0xFE4
 38683                           plusw1	equ	0xFE3
 38684                           fsr1h	equ	0xFE2
 38685                           fsr1l	equ	0xFE1
 38686                           bsr	equ	0xFE0
 38687                           indf2	equ	0xFDF
 38688                           postinc2	equ	0xFDE
 38689                           postdec2	equ	0xFDD
 38690                           preinc2	equ	0xFDC
 38691                           plusw2	equ	0xFDB
 38692                           fsr2h	equ	0xFDA
 38693                           fsr2l	equ	0xFD9
 38694                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         825
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     255
    BANK2           256      7     252
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8406$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8412$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8418$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8424$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8423	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8418	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8417	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8412	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8411	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8406	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8405	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> updateChangesToUart@package(COMRAM[7]), main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6624$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), var_sys_NVM.motorSensitivity(BANK0[1]), 
		 -> var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _updateChangesToUart->_read_eusartparser
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _saveNewSerial->_i2c_writeNBytes
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8917363
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3276122
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249934
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       7     6      1  719702
                                             57 COMRAM     1     0      1
                                              4 BANK0      6     6      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778943
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  743020
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  385615
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3969
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3541
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2154663
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
                _updateChangesToUart
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1966
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _updateChangesToUart                                  8     8      0   15499
                                             27 COMRAM     8     8      0
                       _init_package
                  _read_eusartparser
 ---------------------------------------------------------------------------------
 (3) _read_eusartparser                                    4     2      2   13661
                                             23 COMRAM     4     2      2
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    8577
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       3     0      3    8010
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     338
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350671
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    5060
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    3017
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2878
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _updateChangesToUart
       _init_package
       _read_eusartparser
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DF      60        0.0%
DATA                 0      0     3DF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jul 20 18:01:11 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9F0A  
                                _eusart1TxBufferRemaining 01FD  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 896C  
                                           _LoadManufCode 9C10  
                                        ?_SetSegmentValue 001C  
                                                     l100 95B0  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 843A  
                                                     l690 88A2  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4F80  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 98FA  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 9F86  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 9710  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 8E32  
                                                    l1405 6CE6  
                                       readRFButtons@key1 0088  
                                                    l3102 3DF4  
                                                    l2039 8E26  
                                                    l2311 5AD2  
                                                    l2240 7C22  
                                                    l2323 895E  
                                                    l2403 5690  
                                                    l1372 94AE  
                                                    l1436 6218  
                                                    l1524 61E8  
                                                    l1357 7700  
                                                    l1517 619C  
                                                    l3053 3B40  
                                                    l1366 7882  
                                                    l2254 73EA  
                                                    l1383 641C  
                                                    l2415 470E  
                                                    l2328 8968  
                                                    l2353 55B4  
                                                    l3233 19FC  
                                                    l3065 3CD0  
                                                    l2370 55AC  
                                                    l1491 90BA  
                                                    l2507 82C0  
                                                    l2443 4880  
                                                    l1731 7526  
                                                    l1388 64A4  
                                                    l2516 96AE  
                                                    l2380 5684  
                                                    l1740 758C  
                                                    l1732 752E  
                                                    l1742 75A8  
                                                    l1654 6764  
                                                    l2519 96D4  
                                                    l1495 607E  
                                                    l1743 75B0  
                                                    l2376 55C0  
                                                    l1736 7560  
                                                    l3088 3D16  
                                                    l1745 75CC  
                                                    l1737 7568  
                                                    l1657 67DA  
                                                    l1746 75D4  
                                                    l2810 4F7E  
                                                    l2730 5BF4  
                                                    l1739 7584  
                                                    l1667 6822  
                                                    l2723 5448  
                                                    l1748 75FE  
                                                    l3444 39CE  
                                                    l3380 366E  
                                                    l3372 3634  
                                                    l2477 4996  
                                                    l2397 567C  
                                                    l1861 7B0C  
                                                    l3517 8F4E  
                                                    l2653 4546  
                                                    l3630 2FF8  
                                                    l3438 399C  
                                                    l3390 37B2  
                                                    l3358 3574  
                                                    l3631 3002  
                                                    l3623 2FD4  
                                                    l2727 5AFE  
                                                    l3391 37D2  
                                                    l3800 97C8  
                                                    l3640 3036  
                                                    l3632 300C  
                                                    l2912 2396  
                                                    l3633 3012  
                                                    l3625 2FDE  
                                                    l2585 8B3C  
                                                    l2729 5B34  
                                                    l3650 3064  
                                                    l3642 3040  
                                                    l3634 3018  
                                                    l3626 2FE8  
                                                    l3651 306A  
                                                    l3635 301E  
                                                    l1859 7AFC  
                                                    l3660 32C0  
                                                    l3652 3070  
                                                    l3644 3046  
                                                    l3636 3024  
                                                    l3628 2FEE  
                                                    l3661 32CA  
                                                    l3645 304C  
                                                    l3637 302A  
                                                    l1869 7B30  
                                                    l2773 4D9A  
                                                    l3493 7DC6  
                                                    l3646 3052  
                                                    l3655 313A  
                                                    l3647 3058  
                                                    l3639 3030  
                                                    l4296 92B2  
                                                    l3832 86EE  
                                                    l3649 305E  
                                                    l3499 9872  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02EF  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9EC2  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 959A  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 66CC  
                                                    _main 69EC  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7B88  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7C4E  
                                         __end_of_ReadADC 9216  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 605C  
                                 __end_of_TMR0_Initialize 9C54  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9E30  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l21002 7796  
                                                   l21020 77D6  
                                                   l21012 77BE  
                                                   l20302 88AC  
                                                   l21110 4A28  
                                                   l20400 9EAE  
                                                   l21040 72F4  
                                                   l21016 77CA  
                                                   l21008 77B0  
                                                   l21024 77E0  
                                                   l21200 859A  
                                                   l21112 4A2E  
                                                   l20066 8CC8  
                                                   l21130 4A80  
                                                   l21106 4A1E  
                                                   l20500 9C72  
                                                   l20324 8E9A  
                                                   l20340 8EAE  
                                                   l20308 88B2  
                                                   l21140 4AFA  
                                                   l21124 4A70  
                                                   l22100 3858  
                                                   l20334 8EA8  
                                                   l20262 83F2  
                                                   l20254 83E6  
                                                   l21310 9B12  
                                                   l21054 7386  
                                                   l21206 85B0  
                                                   l21222 85E2  
                                                   l21150 4BA0  
                                                   l21142 4B1E  
                                                   l21118 4A3E  
                                                   l22110 3874  
                                                   l22102 3862  
                                                   l22006 365E  
                                                   l20328 8EA0  
                                                   l20432 994E  
                                                   l20600 8AB4  
                                                   l20520 7B9C  
                                                   l21240 96EE  
                                                   l21400 5F0C  
                                                   l21048 7332  
                                                   l21208 85B8  
                                                   l21152 4BBC  
                                                   l21144 4B3A  
                                                   l21136 4AB2  
                                                   l22112 3878  
                                                   l22032 36CE  
                                                   l20258 83EC  
                                                   l20426 9942  
                                                   l20506 9526  
                                                   l20514 9546  
                                                   l20530 7BE4  
                                                   l21322 781E  
                                                   l23002 8BEA  
                                                   l23010 6070  
                                                   l21226 85F0  
                                                   l21218 85D8  
                                                   l21154 4BD4  
                                                   l21146 4B56  
                                                   l21138 4ADE  
                                                   l21162 4C1A  
                                                   l22202 398E  
                                                   l22130 38CC  
                                                   l22122 38A4  
                                                   l22106 386C  
                                                   l22026 3686  
                                                   l22018 3676  
                                                   l20276 8462  
                                                   l20268 83F8  
                                                   l20364 93B2  
                                                   l20540 7C12  
                                                   l21236 96E8  
                                                   l21252 970C  
                                                   l21412 5F34  
                                                   l21172 4CC8  
                                                   l21156 4BEE  
                                                   l21148 4B84  
                                                   l21164 4C7E  
                                                   l22212 39B6  
                                                   l22140 38D8  
                                                   l22124 38A8  
                                                   l22116 3880  
                                                   l22036 36E0  
                                                   l20374 93BE  
                                                   l20390 922E  
                                                   l20550 7C44  
                                                   l20606 89F6  
                                                   l23110 61DA  
                                                   l23102 61BE  
                                                   l23030 60BC  
                                                   l23022 60A0  
                                                   l21406 5F10  
                                                   l21422 5F38  
                                                   l20710 793C  
                                                   l21158 4C08  
                                                   l22230 39FE  
                                                   l22150 38FE  
                                                   l22134 38D0  
                                                   l22046 36F0  
                                                   l20368 93B8  
                                                   l20480 867A  
                                                   l20528 7BD8  
                                                   l21328 78B6  
                                                   l20616 8A40  
                                                   l20800 6388  
                                                   l21352 6950  
                                                   l21344 68DC  
                                                   l20640 7ADE  
                                                   l21248 9704  
                                                   l21504 6058  
                                                   l21520 8002  
                                                   l22400 4042  
                                                   l21168 4C8C  
                                                   l22224 39E8  
                                                   l22216 39C8  
                                                   l22232 3A1A  
                                                   l22152 3902  
                                                   l22136 38D4  
                                                   l22128 38B0  
                                                   l22056 3778  
                                                   l22048 373E  
                                                   l20298 88A6  
                                                   l20570 959C  
                                                   l20802 638C  
                                                   l23106 61CC  
                                                   l23050 6102  
                                                   l23042 60E6  
                                                   l23034 60CA  
                                                   l23026 60AE  
                                                   l23018 6092  
                                                   l23130 5D74  
                                                   l20562 917A  
                                                   l20722 79AC  
                                                   l20714 7968  
                                                   l24010 267C  
                                                   l21194 858A  
                                                   l21266 9AD4  
                                                   l21258 9ABC  
                                                   l22410 40DA  
                                                   l22162 3930  
                                                   l22146 38F6  
                                                   l22090 381A  
                                                   l22242 3A42  
                                                   l20396 9EA6  
                                                   l20820 874E  
                                                   l20812 8B7A  
                                                   l21348 6918  
                                                   l23140 5DE8  
                                                   l21460 5F9E  
                                                   l21444 5F6C  
                                                   l21540 8034  
                                                   l21700 5906  
                                                   l22156 3906  
                                                   l22148 38FA  
                                                   l22244 3A94  
                                                   l21294 835A  
                                                   l23222 8954  
                                                   l20830 821E  
                                                   l21366 69DE  
                                                   l23070 6148  
                                                   l23062 612C  
                                                   l23054 6110  
                                                   l23046 60F4  
                                                   l23038 60D8  
                                                   l20670 7B28  
                                                   l20662 7B14  
                                                   l23142 5DF8  
                                                   l23126 5D6A  
                                                   l21438 5F64  
                                                   l21382 5ECE  
                                                   l21526 8006  
                                                   l20566 918E  
                                                   l20750 94FE  
                                                   l22510 4322  
                                                   l22406 409C  
                                                   l22182 3962  
                                                   l22094 3822  
                                                   l22086 37EC  
                                                   l20592 8A78  
                                                   l23232 96B0  
                                                   l23216 8938  
                                                   l20584 95D0  
                                                   l20920 6E44  
                                                   l21632 84B2  
                                                   l20648 7AF8  
                                                   l21480 5FCC  
                                                   l20744 8F94  
                                                   l23312 7F02  
                                                   l21608 7FC4  
                                                   l24112 287A  
                                                   l22504 430C  
                                                   l22440 41B6  
                                                   l22432 4190  
                                                   l22408 40D4  
                                                   l22176 3944  
                                                   l22168 393A  
                                                   l22096 383E  
                                                   l22088 3816  
                                                   l24200 19B4  
                                                   l21298 839C  
                                                   l23250 8260  
                                                   l20586 95D4  
                                                   l23090 618E  
                                                   l23082 6172  
                                                   l23074 6156  
                                                   l23066 613A  
                                                   l23058 611E  
                                                   l21618 97AA  
                                                   l20658 7B08  
                                                   l21466 5FA6  
                                                   l23306 7EF8  
                                                   l24130 28AA  
                                                   l24050 2720  
                                                   l22442 41CA  
                                                   l23244 8248  
                                                   l20828 81EC  
                                                   l20780 62CE  
                                                   l20772 626A  
                                                   l20764 6220  
                                                   l20940 6F2C  
                                                   l21644 84D2  
                                                   l21636 84B6  
                                                   l23148 5DFC  
                                                   l21492 6018  
                                                   l21388 5ED2  
                                                   l21556 806A  
                                                   l21572 7F5C  
                                                   l21724 5992  
                                                   l23340 5230  
                                                   l24124 2894  
                                                   l24036 26EE  
                                                   l24140 28F8  
                                                   l22532 7D86  
                                                   l22428 4156  
                                                   l22196 3970  
                                                   l22188 396C  
                                                   l23246 8250  
                                                   l23254 8268  
                                                   l20838 822E  
                                                   l20766 6226  
                                                   l20782 62D2  
                                                   l23086 6180  
                                                   l23078 6164  
                                                   l20926 6E96  
                                                   l23174 5E6E  
                                                   l23158 5E42  
                                                   l25014 92DE  
                                                   l21822 8B00  
                                                   l21910 70F6  
                                                   l21902 70AA  
                                                   l23502 5AEE  
                                                   l21806 5ABE  
                                                   l21734 59B0  
                                                   l23342 5246  
                                                   l20862 9388  
                                                   l24214 19FE  
                                                   l23248 8258  
                                                   l23256 8290  
                                                   l20792 6324  
                                                   l21672 9778  
                                                   l21664 9760  
                                                   l21496 601C  
                                                   l21592 7F8E  
                                                   l23424 5394  
                                                   l23408 5360  
                                                   l20864 93A2  
                                                   l24312 1CDC  
                                                   l24304 1CC0  
                                                   l24320 1CF8  
                                                   l24208 19DA  
                                                   l24216 1A42  
                                                   l24160 18DA  
                                                   l23266 82BC  
                                                   l20786 62E0  
                                                   l23098 61B0  
                                                   l20946 6F42  
                                                   l22802 947A  
                                                   l23290 7EB0  
                                                   l21578 7F60  
                                                   l23610 5C62  
                                                   l23426 539A  
                                                   l24090 2818  
                                                   l24066 278C  
                                                   l24058 273E  
                                                   l22730 86AC  
                                                   l20970 7714  
                                                   l20866 93A6  
                                                   l22482 4280  
                                                   l22474 4266  
                                                   l24250 1B72  
                                                   l24218 1A58  
                                                   l21860 8C82  
                                                   l23292 7EC6  
                                                   l21916 713A  
                                                   l21748 59DE  
                                                   l23460 53E0  
                                                   l23356 5274  
                                                   l24092 2822  
                                                   l22740 86E0  
                                                   l22548 986C  
                                                   l22388 401E  
                                                   l24404 1EFA  
                                                   l24260 1B90  
                                                   l24244 1B40  
                                                   l24228 1AC0  
                                                   l24172 1940  
                                                   l24164 18FC  
                                                   l24156 18BA  
                                                   l26004 3E2E  
                                                   l22750 9280  
                                                   l22814 8FB2  
                                                   l21854 8C6E  
                                                   l23534 5B68  
                                                   l21790 5A70  
                                                   l21694 58EC  
                                                   l23470 53FC  
                                                   l23462 53E4  
                                                   l23446 53B4  
                                                   l23390 5324  
                                                   l21934 8E52  
                                                   l26102 43D4  
                                                   l20990 7766  
                                                   l20982 7748  
                                                   l22398 4040  
                                                   l21950 3596  
                                                   l24510 218E  
                                                   l24350 1DAA  
                                                   l24246 1B42  
                                                   l24238 1B26  
                                                   l22752 9288  
                                                   l22824 8FFA  
                                                   l21856 8C7A  
                                                   l23800 4F66  
                                                   l23704 4E4C  
                                                   l23624 5C92  
                                                   l23544 5B8C  
                                                   l21768 5A40  
                                                   l21776 5A5E  
                                                   l21688 58DA  
                                                   l23464 53EA  
                                                   l23376 52E4  
                                                   l21936 8E84  
                                                   l22728 86A0  
                                                   l20976 772E  
                                                   l21960 35B2  
                                                   l21944 357E  
                                                   l24512 2194  
                                                   l24504 2178  
                                                   l24424 1F6A  
                                                   l24408 1F1C  
                                                   l24352 1DAE  
                                                   l24336 1D64  
                                                   l24264 1BBC  
                                                   l24248 1B6C  
                                                   l24192 1992  
                                                   l24184 197A  
                                                   l24176 1962  
                                                   l24168 191E  
                                                   l26024 3E84  
                                                   l26008 3E3E  
                                                   l22762 92A8  
                                                   l22922 7682  
                                                   l23722 4E8A  
                                                   l23650 4D1A  
                                                   l23554 5BAA  
                                                   l23482 5426  
                                                   l26130 4468  
                                                   l26114 440E  
                                                   l26106 43EC  
                                                   l20994 7772  
                                                   l20986 775A  
                                                   l21962 35BA  
                                                   l21946 3586  
                                                   l24354 1DBA  
                                                   l24282 1C4E  
                                                   l26050 3EF2  
                                                   l26018 3E60  
                                                   l22940 76BC  
                                                   l22924 768A  
                                                   l22908 762E  
                                                   l23732 4EA6  
                                                   l23716 4E70  
                                                   l23652 4D30  
                                                   l23628 5C9E  
                                                   l23580 5BF0  
                                                   l23564 5BC8  
                                                   l23556 5BB2  
                                                   l23548 5B96  
                                                   l21796 5A94  
                                                   l21892 7A36  
                                                   l23396 533C  
                                                   l26220 4680  
                                                   l20996 777C  
                                                   l21980 35DA  
                                                   l21972 35CE  
                                                   l21964 35C2  
                                                   l21948 358E  
                                                   l24508 2188  
                                                   l24436 1FA4  
                                                   l26052 3F06  
                                                   l25510 8E14  
                                                   l25502 8DEE  
                                                   l24550 3140  
                                                   l23750 4EE0  
                                                   l23726 4E92  
                                                   l23734 4EAC  
                                                   l23574 5BDA  
                                                   l21798 5A9A  
                                                   l21886 79FC  
                                                   l23910 248A  
                                                   l23902 244C  
                                                   l26214 466A  
                                                   l26142 44A4  
                                                   l26126 4446  
                                                   l21958 35AA  
                                                   l21990 35E6  
                                                   l24462 2022  
                                                   l24454 2000  
                                                   l24286 1C70  
                                                   l22928 7696  
                                                   l24560 3346  
                                                   l24552 31B2  
                                                   l23744 4ED0  
                                                   l23664 4D88  
                                                   l21896 7A70  
                                                   l23904 246A  
                                                   l23824 228A  
                                                   l23816 2258  
                                                   l23808 2228  
                                                   l26224 4686  
                                                   l26216 4670  
                                                   l24448 1FE8  
                                                   l24384 1E68  
                                                   l24376 1E14  
                                                   l24368 1DF6  
                                                   l24528 21DA  
                                                   l26072 3F66  
                                                   l24650 6BC0  
                                                   l25506 8E00  
                                                   l24562 3394  
                                                   l24554 3200  
                                                   l24546 307A  
                                                   l24730 700C  
                                                   l24802 67BE  
                                                   l23762 4EF2  
                                                   l26218 4674  
                                                   l26234 469A  
                                                   l26154 44E6  
                                                   l26170 4588  
                                                   l21994 3642  
                                                   l24482 2068  
                                                   l24466 202E  
                                                   l24378 1E16  
                                                   l26074 3F72  
                                                   l22964 63B0  
                                                   l22956 94A2  
                                                   l25612 566C  
                                                   l24564 3406  
                                                   l24556 3272  
                                                   l24548 30EC  
                                                   l28004 17F2  
                                                   l28020 1824  
                                                   l24820 683E  
                                                   l24804 67C4  
                                                   l23764 4EF6  
                                                   l23748 4ED8  
                                                   l23684 4E00  
                                                   l23588 5C0E  
                                                   l23844 22F8  
                                                   l23836 22D2  
                                                   l23828 22AE  
                                                   l26228 468C  
                                                   l26172 459E  
                                                   l21996 364A  
                                                   l24484 2070  
                                                   l24476 2056  
                                                   l24388 1E8A  
                                                   l26068 3F52  
                                                   l22974 63E6  
                                                   l24670 6C36  
                                                   l25622 46F0  
                                                   l25614 5670  
                                                   l25542 549E  
                                                   l25534 5482  
                                                   l24558 32D4  
                                                   l28014 1820  
                                                   l24822 6846  
                                                   l23766 4EFC  
                                                   l23598 5C34  
                                                   l23942 2506  
                                                   l26158 4508  
                                                   l26094 43A4  
                                                   l21998 3652  
                                                   l24494 20AA  
                                                   l26078 3F7E  
                                                   l22992 64D6  
                                                   l22984 648A  
                                                   l22968 63C6  
                                                   l25720 48F0  
                                                   l25640 475A  
                                                   l25616 567E  
                                                   l25560 54F0  
                                                   l25544 54A4  
                                                   l25528 5472  
                                                   l24568 3454  
                                                   l28008 1814  
                                                   l23784 4F34  
                                                   l23776 4F1A  
                                                   l23944 2510  
                                                   l23872 2374  
                                                   l23864 234C  
                                                   l23856 2334  
                                                   l23848 2312  
                                                   l26168 4548  
                                                   l25800 3B6E  
                                                   l24682 6C6A  
                                                   l25722 48FE  
                                                   l27410 2A46  
                                                   l27402 2A22  
                                                   l24826 6852  
                                                   l23938 24F8  
                                                   l23882 2398  
                                                   l26194 460A  
                                                   l26098 43B2  
                                                   l25802 3B84  
                                                   l28050 6A32  
                                                   l22988 64B4  
                                                   l24668 6C32  
                                                   l24684 6C80  
                                                   l24940 71E8  
                                                   l25716 48D8  
                                                   l25732 4922  
                                                   l25652 4794  
                                                   l25628 4710  
                                                   l24836 8D1E  
                                                   l23884 23D8  
                                                   l25900 3CD2  
                                                   l28060 6A48  
                                                   l25742 4958  
                                                   l25726 4912  
                                                   l25662 47D0  
                                                   l25670 4802  
                                                   l25590 55C4  
                                                   l27502 2D38  
                                                   l27430 2AB0  
                                                   l27422 2A7C  
                                                   l27414 2A58  
                                                   l27406 2A34  
                                                   l24758 9DCE  
                                                   l24926 75F8  
                                                   l24790 676A  
                                                   l24854 8D56  
                                                   l24846 8D40  
                                                   l24838 8D22  
                                                   l23966 2580  
                                                   l23886 23EE  
                                                   l25902 3CE0  
                                                   l25822 3BD6  
                                                   l25814 3BB8  
                                                   l25760 49C0  
                                                   l25664 47DE  
                                                   l25656 47A8  
                                                   l25584 559C  
                                                   l27520 2DF4  
                                                   l27512 2DB0  
                                                   l24880 7554  
                                                   l24864 7510  
                                                   l24768 66F0  
                                                   l24856 8D5A  
                                                   l25912 3D06  
                                                   l25832 3BE4  
                                                   l25808 3B98  
                                                   l28080 6B00  
                                                   l24970 7256  
                                                   l24954 721C  
                                                   l25770 49F0  
                                                   l25754 499A  
                                                   l25738 4944  
                                                   l25690 4862  
                                                   l25586 55A0  
                                                   l27530 2E7C  
                                                   l27450 2B0A  
                                                   l27442 2AE6  
                                                   l27434 2AC2  
                                                   l27426 2A8E  
                                                   l27418 2A6A  
                                                   l24866 751A  
                                                   l23978 25D6  
                                                   l28090 6B1E  
                                                   l28074 6AD6  
                                                   l24980 7282  
                                                   l25764 49D6  
                                                   l25684 483C  
                                                   l25668 47F4  
                                                   l25588 55AE  
                                                   l27524 2E16  
                                                   l27516 2DD2  
                                                   l27508 2D9E  
                                                   l27700 11D6  
                                                   l27604 0FC0  
                                                   l25940 3D70  
                                                   l25852 3C18  
                                                   l25844 3BFA  
                                                   l25780 3AC4  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l25758 49B2  
                                                   l25686 484C  
                                                   l27462 2B40  
                                                   l27454 2B1C  
                                                   l27446 2AF8  
                                                   l27438 2AD4  
                                                   l27390 29CC  
                                                   l27382 2998  
                                                   l27374 293A  
                                                   l24878 754A  
                                                   l24798 6798  
                                                   l23998 2626  
                                                   l25934 3D52  
                                                   l25862 3C28  
                                                   l25774 3A9C  
                                                   l27552 904C  
                                                   l27472 2BC8  
                                                   l27376 295A  
                                                   l27536 2E9E  
                                                   l27712 1234  
                                                   l27632 1068  
                                                   l27608 0FD0  
                                                   l27616 1002  
                                                   l25792 3B28  
                                                   l25784 3AE6  
                                                   l24994 72B6  
                                                   l25698 488C  
                                                   l27482 2C40  
                                                   l27466 2B62  
                                                   l27458 2B2E  
                                                   l27394 29EE  
                                                   l27386 29AA  
                                                   l27378 2976  
                                                   l27810 1438  
                                                   l27730 1314  
                                                   l27650 10C4  
                                                   l27618 101C  
                                                   l25962 3DB0  
                                                   l25874 3C5A  
                                                   l27492 2CBC  
                                                   l27476 2BDA  
                                                   l27820 1464  
                                                   l27740 1352  
                                                   l27724 12E8  
                                                   l27636 108C  
                                                   l27628 1038  
                                                   l27580 0F5E  
                                                   l25948 3D8C  
                                                   l25892 3CA6  
                                                   l25868 3C40  
                                                   l25788 3B06  
                                                   l27398 2A10  
                                                   l27830 14BC  
                                                   l27822 1468  
                                                   l27814 145A  
                                                   l27734 1336  
                                                   l27726 12F8  
                                                   l27718 12AA  
                                                   l27654 10E8  
                                                   l27646 109A  
                                                   l27638 1090  
                                                   l27574 0F26  
                                                   l25982 3DE4  
                                                   l25974 3DC6  
                                                   l25878 3C6C  
                                                   l25798 3B42  
                                                   l27496 2CD2  
                                                   l27488 2CA6  
                                                   l27912 1692  
                                                   l27840 14CA  
                                                   l27832 14C0  
                                                   l27752 135E  
                                                   l27664 10F6  
                                                   l27656 10EC  
                                                   l27592 0F9A  
                                                   l27576 0F32  
                                                   l27850 151C  
                                                   l27826 1498  
                                                   l27770 13A0  
                                                   l27746 1356  
                                                   l27682 1166  
                                                   l27674 1158  
                                                   l27666 1100  
                                                   l27578 0F42  
                                                   l25898 3CC6  
                                                   l27924 16D2  
                                                   l27860 1530  
                                                   l27844 14F4  
                                                   l27756 1370  
                                                   l27692 11C8  
                                                   l27684 1170  
                                                   l27676 115C  
                                                   l27588 0F88  
                                                   l27950 1714  
                                                   l27934 16FE  
                                                   l27870 158C  
                                                   l27790 13D4  
                                                   l27782 13CC  
                                                   l27774 13C2  
                                                   l27694 11CC  
                                                   l27928 16F4  
                                                   l27848 1518  
                                                   l27946 1702  
                                                   l27858 1526  
                                                   l27964 1744  
                                                   l27876 1596  
                                                   l27868 1588  
                                                   l27788 13D0  
                                                   l27982 1774  
                                                   l27894 1606  
                                                   l27886 15F8  
                                                   l27878 15A0  
                                                   l27984 1778  
                                                   l27976 1770  
                                                   l27968 1766  
                                                   l27888 15FC  
                                                   l27994 17DA  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 867E  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8BAE  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 85FA  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 9710  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 9ADC  
                                            _zeroCrossing 0196  
                                         __end_of___lldiv 8700  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   _T1CON 000FCF  
                                                   u30030 678A  
                                                   u30120 6822  
                                                   u30040 6798  
                                                   _T2CON 000FBD  
                                                   u30060 67BE  
                                                   u30070 67D2  
                                                   u30400 71D0  
                                                   u32010 47C0  
                                                   u30420 71DC  
                                                   u24030 6F24  
                                                   u30190 8D38  
                                                   u30600 7278  
                                                   u33010 3ED0  
                                                   u23500 7C00  
                                                   u30700 72CE  
                                                   u32220 490E  
                                                   u32140 48A2  
                                                   u25100 593C  
                                                   _T2HLT 000FBE  
                                                   u23270 9EE6  
                                                   u30710 72D6  
                                                   u30630 7290  
                                                   u30470 7204  
                                                   u32310 4980  
                                                   u23328 88BE  
                                                   u23520 7C1E  
                                                   u30560 7248  
                                                   u32320 4988  
                                                   u32080 482C  
                                                   u31600 54FE  
                                                   u30720 92C6  
                                                   u24240 7394  
                                                   u25120 594C  
                                                   u33200 445C  
                                                   u26000 7D24  
                                                   u23329 88D0  
                                                   u34001 157C  
                                                   u25025 9102  
                                                   u23338 8EBA  
                                                   u23530 7C32  
                                                   u30490 7210  
                                                   u32170 48BA  
                                                   u25130 595C  
                                                   u33130 43C8  
                                                   u33050 3F1E  
                                                   u23339 8ECC  
                                                   u30731 92D4  
                                                   u23348 93CA  
                                                   u23540 7C40  
                                                   u24180 72F0  
                                                   u25140 5964  
                                                   u26020 9854  
                                                   u24420 85BC  
                                                   u32420 3B1C  
                                                   u23349 93DC  
                                                   u23470 7BB6  
                                                   u32270 4954  
                                                   u31710 5554  
                                                   u31630 5512  
                                                   u31390 8DDC  
                                                   u25230 59FA  
                                                   u25070 58F8  
                                                   u33310 45BA  
                                                   u33150 4402  
                                                   u34031 15EC  
                                                   u32360 49E4  
                                                   u31560 54CC  
                                                   u25400 8B10  
                                                   u24280 9404  
                                                   u25320 5A80  
                                                   u25240 5A0A  
                                                   u33080 3F36  
                                                   u32600 3C7C  
                                                   u23298 8404  
                                                   u23490 7BF2  
                                                   u26210 928C  
                                                   u30690 72C6  
                                                   u31810 55F6  
                                                   u31650 551E  
                                                   u31570 54DA  
                                                   u25250 5A12  
                                                   u23299 8416  
                                                   u23388 9252  
                                                   u31580 54EA  
                                                   u24460 96F2  
                                                   u23820 8F8C  
                                                   u25420 8C48  
                                                   u25340 5AA8  
                                                   u25180 59C0  
                                                   u33180 443A  
                                                   u32620 3CB4  
                                                   u23389 9264  
                                                   u31581 54E8  
                                                   u33501 2CF8  
                                                   u25181 59BE  
                                                   u31830 5600  
                                                   u31670 5528  
                                                   u24630 5EAA  
                                                   u33350 45FA  
                                                   u32710 3D2E  
                                                   u32390 3AB8  
                                                   u33511 2D2A  
                                                   u33431 2968  
                                                   u26400 6402  
                                                   u31920 4722  
                                                   u33521 2D5E  
                                                   u33441 2B88  
                                                   u33601 0F7A  
                                                   u26410 6414  
                                                   u31930 4730  
                                                   u31850 5624  
                                                   u31770 55E0  
                                                   u31690 5532  
                                                   u28010 4E5A  
                                                   u27210 529A  
                                                   u25610 39F4  
                                                   u32730 3D3E  
                                                   u34307 8AC4  
                                                   u33531 2D90  
                                                   u33451 2BBA  
                                                   u23755 7948  
                                                   u34251 6AEA  
                                                   u31940 4740  
                                                   u24660 5F08  
                                                   u25380 8AEE  
                                                   u26180 86B0  
                                                   u25620 3FC8  
                                                   u32660 3D00  
                                                   u33541 2E3C  
                                                   u33461 2C00  
                                                   u31790 55EC  
                                                   u23790 8F3A  
                                                   u27070 7ED4  
                                                   u28110 4F0A  
                                                   u28030 4E66  
                                                   u27310 536E  
                                                   u27230 52FC  
                                                   u25630 3FCE  
                                                   u33551 2E6E  
                                                   u33471 2C32  
                                                   u34191 17CE  
                                                   u33711 114C  
                                                   u23775 79B8  
                                                   u26360 63A6  
                                                   u26280 7622  
                                                   u28040 4E7E  
                                                   u27160 525C  
                                                   u32840 3E04  
                                                   u33481 2C66  
                                                   u33641 0FF4  
                                                   u32841 3E02  
                                                   u26370 63BE  
                                                   u27250 5310  
                                                   u25730 4114  
                                         __end_of___lwdiv 92BC  
                                                   u33491 2C98  
                                                   u33651 102A  
                                                   u28140 4F2A  
                                                   u25820 41F6  
                                                   u33821 1306  
                                                   u33741 11BC  
                                                   u33581 0F50  
                                                   u31990 47A4  
                                                   u28070 4EC4  
                                                   u27350 53C8  
                                                   u28230 224C  
                                                   u25590 39C2  
                                                   u29110 19F0  
                                                   u33840 1340  
                                                   u26480 608A  
                                                   u26800 5E0C  
                                                   u27440 543E  
                                                   u27280 534A  
                                                   u25680 405A  
                                                   u34297 8A50  
                                                   u33921 142A  
                                                   u33770 11EC  
                                                   u25930 42F4  
                                                   u25850 4230  
                                                   u32970 3EB2  
                                                   u32890 3E4C  
                                                   u28500 24B0  
                                                   u28260 227E  
                                                   u29300 1CD4  
                                                   u33781 1220  
                                                   u26910 894E  
                                                   u24990 84E2  
                                                   u27630 5B86  
                                                   u28510 24CA  
                                                   u29310 1CEA  
                                                   u28511 24C8  
                                                   u29311 1CE8  
                                                   u28600 259E  
                                                   u29400 1DCE  
                                                   u28601 259C  
                                                   u26930 96AA  
                                                   u26690 61A8  
                                                   u28610 25AC  
                                                   u28450 2428  
                                                   u29250 1C22  
                                                   u26940 96C0  
                                                   u27820 5C72  
                                                   u27660 5BA6  
                                                   u28540 2500  
                                                   u29260 1C7E  
                                                   _T2TMR 000FBB  
                                                   u29245 1C0C  
                                                   u26870 8918  
                                                   u27590 5B62  
                                                   u28630 25E6  
                                                   u29510 1F7A  
                                                   u29270 1C84  
                                                   u29255 1C1E  
                                                   u28720 26A2  
                                                   u28640 2600  
                                                   u28560 2524  
                                                   u29520 1F80  
                                                   u29440 1E3C  
                                                   u28641 25FE  
                                                   u27930 4D4E  
                                                   u28810 273C  
                                                   u28730 26A8  
                                                   u28570 252C  
                                                   u28490 24A8  
                                                   u29530 1FB4  
                                                   u29290 1CCE  
                                                   _T2RST 000FC0  
                                                   u29531 1FB2  
                                                   u29435 1E26  
                                                   u26980 82A0  
                                                   u29700 9EA0  
                                                   u27780 5C42  
                                                   u28820 2758  
                                                   u28740 26CC  
                                                   u28660 2644  
                                                   u28580 2546  
                                                   u28821 2756  
                                                   u28741 26CA  
                                                   u28661 2642  
                                                   u28581 2544  
                                                   u29445 1E38  
                                                   u28830 2766  
                                                   u28670 2652  
                                                   u29550 1FCA  
                                                   u29390 1DC8  
                                                   u27960 4E14  
                                                   u27880 5CBC  
                                                   u28920 288E  
                                                   u29640 2080  
                                                   u29560 1FDE  
                                                   u29480 1ECE  
                                                   u27881 5CBA  
                                                   u29641 207E  
                                                   i2l106 983E  
                                                   u29810 6C4E  
                                                   u28770 2702  
                                                   u29475 1EB8  
                                                   u27980 4E28  
                                                   u29580 1FF8  
                                                   u29725 9CCC  
                                                   u29565 1FDA  
                                                   u29485 1ECA  
                                                   u29910 9072  
                                                   u29726 9CCE  
                                                   u28950 28A8  
                                                   u28870 27A8  
                                                   u28790 270E  
                                                   u29920 90A4  
                                                   u29840 6CA2  
                                                   u29760 6BFC  
                                                   u28960 28C4  
                                                   u28880 27AE  
                                                   u28961 28C2  
                                                   u29850 6CB0  
                                                   u28970 28D2  
                                                   u29780 6C14  
                                                   u29870 6CCA  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9B2E  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 9748  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8F50  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 9812  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 9BC6  
                                        __end_of_TMR1_ISR 969A  
                                        __end_of_TMR2_ISR 6E36  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 0190  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 969A  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 019A  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 959A  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 78F8  
                                         __end_of_sm_init 916A  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 3FAC  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler A02A  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler A028  
                                         _TMR1_WriteTimer 9CEC  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 73EE  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7DC8  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 87FE  
                                            __end_of_main 6B74  
                                              _ReadSerial 8BAE  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 834E  
                                          _refreshCurrent 948A  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 9926  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 84F0  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9F00  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 6398  
                              _validateRemoteSerialNumber 61FC  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 88F4  
                                      __end_of_I2C1_DO_TX 8466  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 93AA  
                  __end_of_SetSegmentValueIntermitentMain 9E6E  
                          _SetSegmentValueIntermitentMain 9E5A  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 9C76  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 66CC  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7C4E  
                                                  i2l2024 6652  
                                                  i2l1147 9CFE  
                                                  i2l2140 8574  
                                                  i2l2133 853E  
                                                  i2l2222 5882  
                                                  i2l2240 7CE8  
                                                  i2l2128 8520  
                                                  i2l1266 6D40  
                                                  i2l2323 89D6  
                                                  i2l1620 5150  
                                                  i2l1277 6DCA  
                                                  i2l2191 56BE  
                                                  i2l2328 89E0  
                                                  i2l2195 57A4  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 89E4  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 7702  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 8232  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 977C  
                                 __end_ofi2_GetMotorPower 7D14  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 2220  
                            _sm_execute_menuConfiguration 18B8  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 8466  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8E96  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 9ADC  
                    __end_of_TMR1_DefaultInterruptHandler A026  
                            _TMR1_DefaultInterruptHandler A024  
                                  __end_of_refreshCurrent 94D0  
                                           ?_read_package 0011  
                                                  ___lmul 916A  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9B7A  
                                  __end_of_refreshSegment 8576  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 49FE  
                             __end_of_keeloqDecryptPacket 5E94  
                             setValueToEdit@posindex_6979 00E0  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 9514  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7E38  
                                                  clear_1 7E44  
                                                  clear_2 7E50  
                                                  clear_3 7E5C  
                                                  clear_4 7E68  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 2938  
                              _sm_execute_ControlLearning 2220  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 930C  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9ED0  
                                          _PMD_Initialize 9CD0  
                                              _StateTRIAC 0194  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 9008  
                                    __end_of_ControlMotor 5694  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4F80  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9DA2  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9D08  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9F7E  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9D22  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 9874  
                              __end_of_actionZone_Opening 544A  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7E6E  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E1  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 3568  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 9B06  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 9C98  
                                 _rdBlkRegCompleteHandler 961A  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9DD2  
                                            __pidataBANK0 A020  
                                            __pidataBANK1 A02A  
                                            __pidataBANK2 9FBE  
                                            __pidataBANK3 9BC6  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart A014  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9CEC  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 948A  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 72DE  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9D22  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 8108  
                                   __end_of_I2C1_DO_RESET 9F5A  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9DBA  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 98A2  
                                     __end_of_ShowVersion 8E34  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 3A9A  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9F7E  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5E94  
                                    __end_of_InitSoftStop 9442  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 9A2E  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 77FE  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 9A02  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8F50  
                                   _rd1RegCompleteHandler 9A2E  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 9F96  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 9A5A  
                         __end_of_EUSART1_SetErrorHandler 9F50  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9F1E  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6E36  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 935C  
                                         _I2C1_MasterOpen 9DEA  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop A00C  
                                         _I2C1_Initialize 9E6E  
                                     __end_of_I2C1_Poller 9EB4  
                                __end_of_setFlashLigth_ON 96D6  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9CB4  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 69EC  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018B  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9F46  
                          _EUSART1_SetFramingErrorHandler 9F3C  
                                    _refreshADCZeroOffset 7604  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 88F4  
                                                 i2l13220 9C94  
                                                 i2l15002 508E  
                                                 i2l15004 509E  
                                                 i2l15006 50AE  
                                                 i2l15008 50B4  
                                                 i2l15104 5714  
                                                 i2l15050 517E  
                                                 i2l15026 5110  
                                                 i2l15018 50E8  
                                                 i2l15114 573E  
                                                 i2l15060 51A6  
                                                 i2l15044 5168  
                                                 i2l15054 518E  
                                                 i2l15038 515A  
                                                 i2l15126 5778  
                                                 i2l15134 57B6  
                                                 i2l15064 51BE  
                                                 i2l15170 5866  
                                                 i2l15082 56B4  
                                                 i2l15218 8542  
                                                 i2l15228 8570  
                                                 i2l15182 58A2  
                                                 i2l15158 5828  
                                                 i2l17030 6D18  
                                                 i2l17022 6D04  
                                                 i2l14800 89B0  
                                                 i2l15096 56F0  
                                                 i2l15098 56FA  
                                                 i2l15194 91D0  
                                                 i2l14750 7C62  
                                                 i2l14806 89CC  
                                                 i2l17046 6D62  
                                                 i2l14760 7CAA  
                                                 i2l17080 6DE2  
                                                 i2l17056 6D8C  
                                                 i2l14770 7CD8  
                                                 i2l17066 6DAE  
                                                 i2l14780 7D0A  
                                                 i2l14758 7C9E  
                                                 i2l17094 6E16  
                                                 i2l17088 6DFE  
                                                 i2l14962 4FB8  
                                                 i2l14954 4F92  
                                                 i2l14964 4FC0  
                                                 i2l14990 5046  
                                                 i2l14974 4FF4  
                                                 i2l14958 4FA2  
                                                 i2l14984 5020  
                                                 i2l16960 9838  
                                                 i2l16980 8102  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9EDE  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 85FA  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9EB4  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9FD0  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8DCE  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7ABC  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019C  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 99D6  
          _rd1RegCompleteHandler@i2c1_master_example$F500 99AA  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 99AA  
          _rd2RegCompleteHandler@i2c1_master_example$F511 997E  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9AB2  
          _wr2RegCompleteHandler@i2c1_master_example$F523 9A86  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 997E  
                               __end_of_I2C1_DO_SEND_STOP 9F9E  
          _wr1RegCompleteHandler@i2c1_master_example$F517 9952  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 961A  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 95DA  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 91C0  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 98CE  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3FAC  
                              __end_of_clearLearningValue 887A  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3568  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9EF6  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 935C  
                                                 ___awdiv 8576  
                                                 ___lbdiv 96D6  
                                                 ___lbmod 9AB2  
                                                 ___lldiv 867E  
                                              _readInputs 74FC  
                                         _controlVelocity 58B6  
                                                 ___lwdiv 926A  
                                           _OpenFullOrder 9B54  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 71BA  
                           _setPositionInvertionInClosing 7092  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9E94  
                                          getHopCode@data 0016  
                                                 _difTime 0193  
                                                 __pcinit 7DC8  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 9FCA  
                                    __end_of_init_package 9812  
                                                 __ptext0 69EC  
                                                 __ptext1 3A9A  
                                                 __ptext2 18B8  
                                                 __ptext3 3568  
                                                 __ptext4 49FE  
                                                 __ptext5 9D08  
                                                 __ptext6 3FAC  
                                                 __ptext7 9FC4  
                                                 __ptext8 935C  
                                                 __ptext9 7D14  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart A010  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9EEA  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7ABC  
                           _setPositionInvertionInOpening 79E0  
                                                 _lastKey 0198  
                                              _readbutton 8CFA  
                                   _OSCILLATOR_Initialize 9E1A  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8DCE  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9D3C  
                               __end_of_I2C1_MasterSetIrq 9FD6  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8EF4  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 82C2  
                                      _EUSART1_Initialize 8780  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 77FE  
                                                 _sm_init 9114  
                                          _BufferRF_12BIT 0189  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 930C  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8C1E  
                                    _zeroCrossingWaitTime 02FA  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9FB6  
                                    end_of_initialization 7E6E  
                              __end_of_I2C1_MasterSendAck 9FDC  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9FE2  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx A004  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8A5A  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9EC2  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8E34  
                            __end_of_sm_get_current_state 9E94  
                                               i2u1503_40 517C  
                                               i2u2310_48 003E  
                                               i2u1520_40 576C  
                                               i2u1521_40 5772  
                                               i2u2313_48 0056  
                                               i2u1531_40 5808  
                                               i2u1515_40 570E  
                                               i2u1540_40 5872  
                                               i2u1508_40 56AE  
                                               i2u1541_40 587A  
                                               i2u1533_40 581E  
                                               i2u1470_40 7CF8  
                                               i2u1550_40 8500  
                                               i2u1471_40 7D06  
                                               i2u1543_40 589A  
                                               i2u1527_40 57DC  
                                               i2u1375_40 9AF6  
                            __end_of_I2C1_DO_SEND_RESTART 9FA6  
                                               i2u1464_40 7C7C  
                                               i2u1528_40 57EA  
                                               i2u1552_40 8552  
                                               i2u1537_40 584E  
                                               i2u1490_40 5034  
                                               i2u1466_40 7CB8  
                                               i2u1474_40 8990  
                                               i2u1467_40 7CC6  
                                    __end_of_eusartparser 18B8  
                                               i2u1492_40 505E  
                                               i2u1556_40 6646  
                                         _WWDT_TimerClear 9CB4  
                                               i2u1548_45 91E8  
                                               i2u1493_40 506E  
                                               i2u1485_40 4FB8  
                                               i2u1469_40 7CE4  
                                               i2u1557_40 66BA  
                                 __end_of_I2C1_MasterOpen 9E02  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1494_40 507E  
                                               i2u1478_40 89C6  
                                               i2u1910_48 80EE  
                                               i2u3431_47 9E3A  
                                               i2u1912_48 9BB4  
                                   __end_of_ControlLights 49FE  
                                               i2u1906_48 8098  
                                               i2u1906_49 80AA  
                                               i2u1908_48 80C4  
                                               i2u1916_48 9688  
                                               i2u1940_48 6E24  
                                               i2u1925_40 6D54  
                                               i2u1908_49 80D6  
                                 __end_of_I2C1_MasterStop A010  
                                               i2u1928_40 6D78  
                                 __end_of_I2C1_Initialize 9E82  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 72DE  
                   __end_of_EUSART1_SetRxInterruptHandler 9F32  
                           _EUSART1_SetRxInterruptHandler 9F28  
                                             _I2C1_Poller 9EA4  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9FF4  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq A01C  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 544A  
                                            _done_changes 018E  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9FDC  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9DEA  
                             _I2C1_SetAddressNackCallback 9DD2  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 78F8  
                                              _sm_restart 94D0  
                        __end_of_ADCC_GetSingleConversion 9E46  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9FAE  
                              _I2C1_DO_SEND_RESTART_WRITE 9FA6  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9F14  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 965A  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 7702  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9EF6  
                                     _ControlCounterMoves 9062  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7380 00EE  
                                      eusartparser@i_7381 00F1  
                                      eusartparser@i_7390 00F5  
                                      eusartparser@i_7382 00F2  
                                      eusartparser@i_7391 00F6  
                                      eusartparser@i_7383 00F3  
                                      eusartparser@i_7385 00EA  
                                      eusartparser@i_7386 00EB  
                                      eusartparser@i_7378 00E9  
                                      eusartparser@i_7387 00EF  
                                      eusartparser@i_7379 00ED  
                                      eusartparser@i_7388 00F0  
                                      eusartparser@i_7389 00F4  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 9B06  
                                 __end_of_WWDT_Initialize 9F00  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0185  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                     _updateChangesToUart 97AE  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 9442  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018D  
                       __end_of_GetSecurityStateInClosing 7FC8  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 97AE  
                                       _controlLearnDigit 9844  
                                 __end_of_controlVelocity 5AD4  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FC  
                                      _actionZone_Closing 4CF4  
                                    __end_of_RemoveSerial 8780  
                                          __end_of_HopCHK 84F0  
                                      __end_of_CloseOrder 9B54  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9D08  
                               _ControlDecelarationFactor 9D8A  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 806E  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9FFC  
                                      _actionZone_Opening 51F6  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler A024  
                            _TMR2_DefaultInterruptHandler A022  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 91C0  
                                   __end_of_LoadManufCode 9C32  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9BA0  
                                          _I2C1_DO_RX_ACK 9F8E  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8D66  
                                            _InitSoftStop 93F8  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 896C  
                                          __end_of_memcpy 9558  
                                    ?_updateChangesToUart 0001  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8B3E  
                            __end_of_getCurrentComparator 6532  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 74FC  
                                           _saveNewSerial 8B3E  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop A00C  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9FBE  
                                       _read_eusartparser 2938  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7DC8  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 51F6  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8ACE  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9B2E  
                                 __end_of_WWDT_TimerClear 9CD0  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 95DA  
                                 __end_of_WWDT_SoftEnable 9FF8  
                                      __end_of_ReadSerial 8C1E  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 977C  
                                               _ReqResync 9DA2  
                               __end_of_controlLearnDigit 9874  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 438E  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7D14  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 9F96  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0197  
                                          _VerifyFollowMe 9BEC  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 9C76  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FE  
                                             __pdataBANK2 02F6  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                   ??_updateChangesToUart 001C  
                                       _controlMotorForce 5694  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2FC4  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9E30  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8FAC  
                                               _StopOrder 9C98  
                                    _sm_get_current_state 9E82  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9F9E  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                           __pcstackBANK2 02EF  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 6862  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9F6E  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9F64  
                                           _GetMotorPower 7B88  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7DC8  
                                            _init_package 97E0  
                           I2C1_SetAddressNackCallback@cb 0015  
                                    updateChangesToUart@i 001C  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FD  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 9A02  
                                        _InitWalkAutoTime 9E46  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9D56  
                             __end_of_SetSegmentValueMain 9D3C  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 8108  
                                  __end_of_VerifyFollowMe 9C10  
                                   _wr2RegCompleteHandler 99D6  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 92BC  
                                          _I2C1_MasterFsm 9216  
                              __end_of_checkNVM_VarSystem 61FC  
                        __end_of_TMR1_SetInterruptHandler 9F14  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 9CD0  
                                               __ptext101 8108  
                                                ?___lbdiv 0010  
                                               __ptext110 9F46  
                                               __ptext102 9E1A  
                                               __ptext111 930C  
                                               __ptext103 9FF8  
                                               __ptext200 9CEC  
                                               __ptext120 6B74  
                                               __ptext112 9E94  
                                               __ptext104 9E6E  
                                               __ptext201 A024  
                                               __ptext121 948A  
                                               __ptext113 544A  
                                               __ptext105 8780  
                                               __ptext210 9C76  
                                               __ptext202 9BA0  
                                               __ptext130 9062  
                                               __ptext122 77FE  
                                               __ptext114 88F4  
                                               __ptext106 9F1E  
                                               __ptext211 0000  
                                               __ptext203 4F80  
                                               __ptext131 9710  
                                               __ptext123 834E  
                                               __ptext115 46DA  
                                               __ptext107 9F28  
                                               __ptext204 A026  
                                               __ptext140 9F76  
                                               __ptext132 8A5A  
                                               __ptext124 9B06  
                                               __ptext116 8232  
                                               __ptext108 9F32  
                                               __ptext205 9812  
                                               __ptext141 9216  
                                               __ptext133 9514  
                                               __ptext125 7604  
                                               __ptext117 9EB4  
                                               __ptext109 9F3C  
                                               __ptext206 806E  
                                               __ptext150 9FAE  
                                               __ptext142 93AA  
                                               __ptext134 9DD2  
                                               __ptext126 926A  
                                               __ptext118 969A  
                                               __ptext207 9FE8  
                                               __ptext151 9F5A  
                                               __ptext143 9F50  
                                               __ptext135 85FA  
                                               __ptext127 6398  
                                               __ptext119 71BA  
                                               __ptext208 A028  
                                               __ptext160 9FB6  
                                               __ptext152 887A  
                                               __ptext144 9F7E  
                                               __ptext136 9DEA  
                                               __ptext128 9B7A  
                                               __ptext209 9FEE  
                                               __ptext161 9FD6  
                                               __ptext153 83DA  
                                               __ptext145 9F86  
                                               __ptext137 9F6E  
                                               __ptext129 7B88  
                                               __ptext170 99AA  
                                               __ptext162 9FFC  
                                               __ptext154 9EC2  
                                               __ptext146 9F8E  
                                               __ptext138 9926  
                                               __ptext171 961A  
                                               __ptext163 9FDC  
                                               __ptext155 9ED0  
                                               __ptext147 9F96  
                                               __ptext139 9EA4  
                                               __ptext180 A00C  
                                               __ptext172 99D6  
                                               __ptext164 A000  
                                               __ptext156 9F64  
                                               __ptext148 9F9E  
                                               __ptext181 A010  
                                               __ptext173 9A02  
                                               __ptext165 A004  
                                               __ptext157 8E96  
                                               __ptext149 9FA6  
                              updateChangesToUart@package 001D  
                                               __ptext190 9EEA  
                                               __ptext182 A014  
                                               __ptext174 9A2E  
                                               __ptext166 A008  
                                               __ptext158 9FD0  
                                               __ptext191 6532  
                                               __ptext183 9C54  
                                               __ptext175 9A5A  
                                               __ptext167 95DA  
                                               __ptext159 9EDE  
                                               __ptext192 9ADC  
                                               __ptext184 A018  
                                               __ptext176 9A86  
                                               __ptext168 9952  
                                               __ptext193 A022  
                                               __ptext185 A01C  
                                               __ptext177 9E02  
                                               __ptext169 997E  
                                               __ptext194 91C0  
                                               __ptext186 9FE2  
                                               __ptext178 8C8C  
                                               __ptext195 9E30  
                                               __ptext179 9D70  
                                               __ptext196 965A  
                                               __ptext188 6CE8  
                                               __ptext197 5694  
                                               __ptext189 84F0  
                                               __ptext198 896C  
                                               __ptext199 7C4E  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 58B6  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent 9F76  
                                        _I2C1_MasterClose A01C  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9D70  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart A014  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9F6E  
                                      _clearLearningValue 87FE  
                                      _write_eusartparser 2FC4  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0199  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9FEE  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9FE8  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 89E4  
                                            _eusartparser 0F22  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9F46  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset A008  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 6862  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 8232  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9FF8  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8C8C  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 887A  
                                              _I2C1_DO_TX 83DA  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 6398  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 82C2  
                                              _I2C1_Close 9C54  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 926A  
                            __end_of_I2C1_MasterGetRxData A000  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9EEA  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0187  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9FD6  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 83DA  
                               _I2C1_DO_SEND_RESTART_READ 9FAE  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 4CF4  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9BA0  
                                                _TMR1_ISR 965A  
                                                _TMR2_ISR 6CE8  
                                           _getKeyPressed 9DBA  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9D8A  
                                               _temppower 0192  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9E1A  
                            _I2C1_SetDataCompleteCallback 9E02  
                                      _I2C1_MasterStartRx A000  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9FCA  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8A5A  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 9748  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019E  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 93F8  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7E78  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 9D56  
                                            _RemoveSerial 8700  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9ED0  
                                       _actionZone_Opened 5AD4  
                                           _I2C1_DO_RESET 9F50  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7DDC  
                                               copy_data1 7DFC  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0191  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6F64  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8ACE  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 9952  
                                            _NormalKeyGen 73EE  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9F28  
                           _EUSART1_SetTxInterruptHandler 9F1E  
                                           _sm_send_event 8EF4  
                                     _keeloqDecryptPacket 5CC2  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F1  
                                   _I2C1_MasterDisableIrq A018  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 438E  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 6532  
                                _TMR1_SetInterruptHandler 9F0A  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7F22  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7F22  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9FF4  
                             _EUSART1_DefaultErrorHandler 9FEE  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9EA4  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5CC2  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7FC8  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 9AB2  
                                                __ptext11 8576  
                                                __ptext20 9114  
                                                __ptext12 9D22  
                                                __ptext21 94D0  
                                                __ptext13 9FCA  
                                                __ptext30 5AD4  
                                                __ptext22 87FE  
                                                __ptext14 9844  
                                                __ptext31 9BEC  
                                                __ptext23 8E34  
                                                __ptext15 7702  
                                                __ptext40 8ACE  
                                                __ptext32 9B2E  
                                                __ptext24 51F6  
                                                __ptext16 867E  
                                                __ptext41 9B54  
                                                __ptext33 4CF4  
                                                __ptext25 79E0  
                                                __ptext17 438E  
                                                __ptext50 5E94  
                                                __ptext42 9D3C  
                                                __ptext34 7092  
                                                __ptext26 58B6  
                                                __ptext18 2220  
                                                __ptext51 96D6  
                                                __ptext43 8C1E  
                                                __ptext35 78F8  
                                                __ptext27 72DE  
                                                __ptext19 8D66  
                                                __ptext60 73EE  
                                                __ptext52 9E5A  
                                                __ptext44 8EF4  
                                                __ptext36 916A  
                                                __ptext28 93F8  
                                                __ptext61 9C10  
                                                __ptext53 8CFA  
                                                __ptext45 9E82  
                                                __ptext37 9C98  
                                                __ptext29 9D8A  
                                                __ptext70 605C  
                                                __ptext62 7ABC  
                                                __ptext54 92BC  
                                                __ptext46 8F50  
                                                __ptext38 7F22  
                                                __ptext71 6862  
                                                __ptext63 8466  
                                                __ptext55 9442  
                                                __ptext47 9E46  
                                                __ptext39 7E78  
                                                __ptext80 959A  
                                                __ptext72 8FAC  
                                                __ptext64 6E36  
                                                __ptext56 66CC  
                                                __ptext48 7FC8  
                                                __ptext81 8B3E  
                                                __ptext73 9DBA  
                                                __ptext65 9DA2  
                                                __ptext57 5CC2  
                                                __ptext49 98A2  
                                                __ptext90 8DCE  
                                                __ptext82 9008  
                                                __ptext74 0F22  
                                                __ptext66 977C  
                                                __ptext58 9748  
                                                __ptext91 9D56  
                                                __ptext83 97E0  
                                                __ptext75 2FC4  
                                                __ptext67 82C2  
                                                __ptext59 90BC  
                                                __ptext92 9874  
                                                __ptext84 81A0  
                                                __ptext76 61FC  
                                                __ptext68 74FC  
                                                __ptext93 9EF6  
                                                __ptext85 8700  
                                                __ptext77 97AE  
                                                __ptext69 6F64  
                                                __ptext94 98FA  
                                                __ptext86 8BAE  
                                                __ptext78 2938  
                                                __ptext95 9F00  
                                                __ptext87 89E4  
                                                __ptext79 98CE  
                                                __ptext96 9558  
                                                __ptext88 9CB4  
                                                __ptext97 9F0A  
                                                __ptext89 9FF4  
                                                __ptext98 9C32  
                                                __ptext99 9F14  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E6  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                                                _learn_st 0060  
               ??_rd2RegCompleteHandler@pic18f46k40$F7880 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7872 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7864 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7874 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7866 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7890 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7892 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7884 0019  
               ??_wr2RegCompleteHandler@pic18f46k40$F7886 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7878 0019  
                                      __end_of_readInputs 7604  
                                _I2C1_CallbackReturnReset A004  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler A028  
                            _TMR0_DefaultInterruptHandler A026  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9FE8  
                            __end_of_I2C1_DO_RX_NACK_STOP 9F8E  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6B74  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8D66  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9FD0  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 98CE  
                              _SetSegmentValueIntermitent 98A2  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 9F86  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6F64  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9D70  
                           __end_of_I2C1_DO_SEND_ADR_READ 9EDE  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 9F64  
                                     _EUSART1_Receive_ISR 806E  
                                            _I2C1_DO_RCEN 9F5A  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9FC4  
                             __end_of_I2C1_MasterSendNack 9FE2  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 79E0  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0195  
                                __end_of_InitWalkAutoTime 9E5A  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018F  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9FFC  
                                   _I2C1_MasterSendTxData 9FB6  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 46DA  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 90BC  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose A020  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8FAC  
                                 readRFButtons@typeRemote 019B  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 9514  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 6CE8  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart A018  
                                __end_of_I2C1_MasterWrite 9F76  
                                   __end_of_write_package 98FA  
                                             _tempCounter 02F6  
                  __end_of_EUSART1_SetOverrunErrorHandler 9F3C  
                          _EUSART1_SetOverrunErrorHandler 9F32  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop A008  
                            __end_of_EUSART1_Transmit_ISR 9844  
                                          _confirmpackage 9008  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 46DA  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 71BA  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 93AA  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                             __end_of_updateChangesToUart 97E0  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 7092  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 9114  
                           _keeloq_classic_decrypt_packet 90BC  
                                   __end_of_OpenFullOrder 9B7A  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019D  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 81A0  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8CFA  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 9926  
                                         _TMR0_Initialize 9C32  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 605C  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8C8C  
                                            _sumEnergyADC 834E  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 81A0  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 9A5A  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8E96  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 9062  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 9A86  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 9558  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 3A9A  
